

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 13:00:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   174                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   175                           	psect	text148,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	text169,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	text175,global,reloc=2,class=CODE,delta=1
   203                           	psect	text176,global,reloc=2,class=CODE,delta=1
   204                           	psect	text177,global,reloc=2,class=CODE,delta=1
   205                           	psect	text178,global,reloc=2,class=CODE,delta=1
   206                           	psect	text179,global,reloc=2,class=CODE,delta=1
   207                           	psect	text180,global,reloc=2,class=CODE,delta=1
   208                           	psect	text181,global,reloc=2,class=CODE,delta=1
   209                           	psect	text182,global,reloc=2,class=CODE,delta=1
   210                           	psect	text183,global,reloc=2,class=CODE,delta=1
   211                           	psect	text184,global,reloc=2,class=CODE,delta=1
   212                           	psect	text185,global,reloc=2,class=CODE,delta=1
   213                           	psect	text186,global,reloc=2,class=CODE,delta=1
   214                           	psect	text187,global,reloc=2,class=CODE,delta=1
   215                           	psect	text188,global,reloc=2,class=CODE,delta=1
   216                           	psect	text189,global,reloc=2,class=CODE,delta=1
   217                           	psect	text190,global,reloc=2,class=CODE,delta=1
   218                           	psect	text191,global,reloc=2,class=CODE,delta=1
   219                           	psect	text192,global,reloc=2,class=CODE,delta=1
   220                           	psect	text193,global,reloc=2,class=CODE,delta=1
   221                           	psect	text194,global,reloc=2,class=CODE,delta=1
   222                           	psect	text195,global,reloc=2,class=CODE,delta=1
   223                           	psect	text196,global,reloc=2,class=CODE,delta=1
   224                           	psect	text197,global,reloc=2,class=CODE,delta=1
   225                           	psect	text198,global,reloc=2,class=CODE,delta=1
   226                           	psect	text199,global,reloc=2,class=CODE,delta=1
   227                           	psect	text200,global,reloc=2,class=CODE,delta=1
   228                           	psect	text201,global,reloc=2,class=CODE,delta=1
   229                           	psect	text202,global,reloc=2,class=CODE,delta=1
   230                           	psect	text203,global,reloc=2,class=CODE,delta=1
   231                           	psect	text204,global,reloc=2,class=CODE,delta=1,group=2
   232                           	psect	text205,global,reloc=2,class=CODE,delta=1
   233                           	psect	text206,global,reloc=2,class=CODE,delta=1
   234                           	psect	text207,global,reloc=2,class=CODE,delta=1
   235                           	psect	text208,global,reloc=2,class=CODE,delta=1
   236                           	psect	text209,global,reloc=2,class=CODE,delta=1
   237                           	psect	text210,global,reloc=2,class=CODE,delta=1
   238                           	psect	text211,global,reloc=2,class=CODE,delta=1
   239                           	psect	text212,global,reloc=2,class=CODE,delta=1
   240                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   241                           	psect	text213,global,reloc=2,class=CODE,delta=1
   242                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   243                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   244  0000                     
   245                           ; Version 2.05
   246                           ; Generated 20/12/2018 GMT
   247                           ; 
   248                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   249                           ; All rights reserved.
   250                           ; 
   251                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   252                           ; 
   253                           ; Redistribution and use in source and binary forms, with or without modification, are
   254                           ; permitted provided that the following conditions are met:
   255                           ; 
   256                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   257                           ;        conditions and the following disclaimer.
   258                           ; 
   259                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   260                           ;        of conditions and the following disclaimer in the documentation and/or other
   261                           ;        materials provided with the distribution.
   262                           ; 
   263                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   264                           ;        software without specific prior written permission.
   265                           ; 
   266                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   267                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   268                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   269                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   270                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   271                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   272                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   273                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   274                           ; 
   275                           ; 
   276                           ; Code-generator required, PIC18F27K40 Definitions
   277                           ; 
   278                           ; SFR Addresses
   279  0000                     
   280                           	psect	idataBANK0
   281  01C1BA                     __pidataBANK0:
   282                           	opt callstack 0
   283                           
   284                           ;initializer for _next_adc_channel
   285  01C1BA  3C                 	db	60
   286                           
   287                           	psect	idataBANK2
   288  01C1BB                     __pidataBANK2:
   289                           	opt callstack 0
   290                           
   291                           ;initializer for _OLED_update_time
   292  01C1BB  03                 	db	3
   293                           
   294                           	psect	idataBANK3
   295  01BC56                     __pidataBANK3:
   296                           	opt callstack 0
   297                           
   298                           ;initializer for getCauseOfResetStringSmall@strings
   299  01BC56  FE                 	db	low STR_20
   300  01BC57  FE                 	db	high STR_20
   301  01BC58  F4                 	db	low STR_32
   302  01BC59  FE                 	db	high STR_32
   303  01BC5A  EA                 	db	low STR_33
   304  01BC5B  FE                 	db	high STR_33
   305  01BC5C  98                 	db	low STR_34
   306  01BC5D  FE                 	db	high STR_34
   307  01BC5E  A4                 	db	low (STR_36+1)
   308  01BC5F  FE                 	db	high (STR_36+1)
   309  01BC60  A3                 	db	low STR_36
   310  01BC61  FE                 	db	high STR_36
   311  01BC62  5E                 	db	low STR_37
   312  01BC63  FC                 	db	high STR_37
   313  01BC64  82                 	db	low STR_38
   314  01BC65  FE                 	db	high STR_38
   315  01BC66  8D                 	db	low STR_39
   316  01BC67  FE                 	db	high STR_39
   317                           
   318                           ;initializer for getCauseOfResetString@strings
   319  01BC68  11                 	db	low STR_21
   320  01BC69  FC                 	db	high STR_21
   321  01BC6A  6D                 	db	low STR_22
   322  01BC6B  FC                 	db	high STR_22
   323  01BC6C  21                 	db	low STR_23
   324  01BC6D  FC                 	db	high STR_23
   325  01BC6E  47                 	db	low STR_24
   326  01BC6F  FB                 	db	high STR_24
   327  01BC70  2C                 	db	low (STR_26+9)
   328  01BC71  F5                 	db	high (STR_26+9)
   329  01BC72  23                 	db	low STR_26
   330  01BC73  F5                 	db	high STR_26
   331  01BC74  5F                 	db	low STR_27
   332  01BC75  F9                 	db	high STR_27
   333  01BC76  CF                 	db	low STR_28
   334  01BC77  FA                 	db	high STR_28
   335  01BC78  8F                 	db	low STR_29
   336  01BC79  FA                 	db	high STR_29
   337                           
   338                           	psect	mediumconst
   339  00E696                     __pmediumconst:
   340                           	opt callstack 0
   341  00E696  00                 	db	0
   342  00E697                     __powers_:
   343                           	opt callstack 0
   344  00E697  0000               	dw	0
   345  00E699  3F80               	dw	16256
   346  00E69B  0000               	dw	0
   347  00E69D  4120               	dw	16672
   348  00E69F  0000               	dw	0
   349  00E6A1  42C8               	dw	17096
   350  00E6A3  0000               	dw	0
   351  00E6A5  447A               	dw	17530
   352  00E6A7  4000               	dw	16384
   353  00E6A9  461C               	dw	17948
   354  00E6AB  5000               	dw	20480
   355  00E6AD  47C3               	dw	18371
   356  00E6AF  2400               	dw	9216
   357  00E6B1  4974               	dw	18804
   358  00E6B3  9680               	dw	38528
   359  00E6B5  4B18               	dw	19224
   360  00E6B7  BC20               	dw	48160
   361  00E6B9  4CBE               	dw	19646
   362  00E6BB  6B28               	dw	27432
   363  00E6BD  4E6E               	dw	20078
   364  00E6BF  02F9               	dw	761
   365  00E6C1  5015               	dw	20501
   366  00E6C3  78EC               	dw	30956
   367  00E6C5  60AD               	dw	24749
   368  00E6C7  F2CA               	dw	62154
   369  00E6C9  7149               	dw	29001
   370  00E6CB                     __end_of__powers_:
   371                           	opt callstack 0
   372  00E6CB                     __npowers_:
   373                           	opt callstack 0
   374  00E6CB  0000               	dw	0
   375  00E6CD  3F80               	dw	16256
   376  00E6CF  CCCD               	dw	52429
   377  00E6D1  3DCC               	dw	15820
   378  00E6D3  D70A               	dw	55050
   379  00E6D5  3C23               	dw	15395
   380  00E6D7  126F               	dw	4719
   381  00E6D9  3A83               	dw	14979
   382  00E6DB  B717               	dw	46871
   383  00E6DD  38D1               	dw	14545
   384  00E6DF  C5AC               	dw	50604
   385  00E6E1  3727               	dw	14119
   386  00E6E3  37BD               	dw	14269
   387  00E6E5  3586               	dw	13702
   388  00E6E7  BF95               	dw	49045
   389  00E6E9  33D6               	dw	13270
   390  00E6EB  CC77               	dw	52343
   391  00E6ED  322B               	dw	12843
   392  00E6EF  705F               	dw	28767
   393  00E6F1  3089               	dw	12425
   394  00E6F3  E6FF               	dw	59135
   395  00E6F5  2EDB               	dw	11995
   396  00E6F7  E508               	dw	58632
   397  00E6F9  1E3C               	dw	7740
   398  00E6FB  4260               	dw	16992
   399  00E6FD  0DA2               	dw	3490
   400  00E6FF                     __end_of__npowers_:
   401                           	opt callstack 0
   402  00E6FF                     _hexpowers:
   403                           	opt callstack 0
   404  00E6FF  0001               	dw	1
   405  00E701  0000               	dw	0
   406  00E703  0010               	dw	16
   407  00E705  0000               	dw	0
   408  00E707  0100               	dw	256
   409  00E709  0000               	dw	0
   410  00E70B  1000               	dw	4096
   411  00E70D  0000               	dw	0
   412  00E70F  0000               	dw	0
   413  00E711  0001               	dw	1
   414  00E713  0000               	dw	0
   415  00E715  0010               	dw	16
   416  00E717  0000               	dw	0
   417  00E719  0100               	dw	256
   418  00E71B  0000               	dw	0
   419  00E71D  1000               	dw	4096
   420  00E71F                     __end_of_hexpowers:
   421                           	opt callstack 0
   422  00E71F                     _OledFont:
   423                           	opt callstack 0
   424  00E71F  00                 	db	0
   425  00E720  00                 	db	0
   426  00E721  00                 	db	0
   427  00E722  00                 	db	0
   428  00E723  00                 	db	0
   429  00E724  00                 	db	0
   430  00E725  00                 	db	0
   431  00E726  00                 	db	0
   432  00E727  00                 	db	0
   433  00E728  00                 	db	0
   434  00E729  5F                 	db	95
   435  00E72A  00                 	db	0
   436  00E72B  00                 	db	0
   437  00E72C  00                 	db	0
   438  00E72D  00                 	db	0
   439  00E72E  00                 	db	0
   440  00E72F  00                 	db	0
   441  00E730  00                 	db	0
   442  00E731  07                 	db	7
   443  00E732  00                 	db	0
   444  00E733  07                 	db	7
   445  00E734  00                 	db	0
   446  00E735  00                 	db	0
   447  00E736  00                 	db	0
   448  00E737  00                 	db	0
   449  00E738  14                 	db	20
   450  00E739  7F                 	db	127
   451  00E73A  14                 	db	20
   452  00E73B  7F                 	db	127
   453  00E73C  14                 	db	20
   454  00E73D  00                 	db	0
   455  00E73E  00                 	db	0
   456  00E73F  00                 	db	0
   457  00E740  24                 	db	36
   458  00E741  2A                 	db	42
   459  00E742  7F                 	db	127
   460  00E743  2A                 	db	42
   461  00E744  12                 	db	18
   462  00E745  00                 	db	0
   463  00E746  00                 	db	0
   464  00E747  00                 	db	0
   465  00E748  23                 	db	35
   466  00E749  13                 	db	19
   467  00E74A  08                 	db	8
   468  00E74B  64                 	db	100
   469  00E74C  62                 	db	98
   470  00E74D  00                 	db	0
   471  00E74E  00                 	db	0
   472  00E74F  00                 	db	0
   473  00E750  36                 	db	54
   474  00E751  49                 	db	73
   475  00E752  55                 	db	85
   476  00E753  22                 	db	34
   477  00E754  50                 	db	80
   478  00E755  00                 	db	0
   479  00E756  00                 	db	0
   480  00E757  00                 	db	0
   481  00E758  00                 	db	0
   482  00E759  05                 	db	5
   483  00E75A  03                 	db	3
   484  00E75B  00                 	db	0
   485  00E75C  00                 	db	0
   486  00E75D  00                 	db	0
   487  00E75E  00                 	db	0
   488  00E75F  00                 	db	0
   489  00E760  1C                 	db	28
   490  00E761  22                 	db	34
   491  00E762  41                 	db	65
   492  00E763  00                 	db	0
   493  00E764  00                 	db	0
   494  00E765  00                 	db	0
   495  00E766  00                 	db	0
   496  00E767  00                 	db	0
   497  00E768  41                 	db	65
   498  00E769  22                 	db	34
   499  00E76A  1C                 	db	28
   500  00E76B  00                 	db	0
   501  00E76C  00                 	db	0
   502  00E76D  00                 	db	0
   503  00E76E  00                 	db	0
   504  00E76F  00                 	db	0
   505  00E770  08                 	db	8
   506  00E771  2A                 	db	42
   507  00E772  1C                 	db	28
   508  00E773  2A                 	db	42
   509  00E774  08                 	db	8
   510  00E775  00                 	db	0
   511  00E776  00                 	db	0
   512  00E777  00                 	db	0
   513  00E778  08                 	db	8
   514  00E779  08                 	db	8
   515  00E77A  3E                 	db	62
   516  00E77B  08                 	db	8
   517  00E77C  08                 	db	8
   518  00E77D  00                 	db	0
   519  00E77E  00                 	db	0
   520  00E77F  00                 	db	0
   521  00E780  A0                 	db	160
   522  00E781  60                 	db	96
   523  00E782  00                 	db	0
   524  00E783  00                 	db	0
   525  00E784  00                 	db	0
   526  00E785  00                 	db	0
   527  00E786  00                 	db	0
   528  00E787  00                 	db	0
   529  00E788  08                 	db	8
   530  00E789  08                 	db	8
   531  00E78A  08                 	db	8
   532  00E78B  08                 	db	8
   533  00E78C  08                 	db	8
   534  00E78D  00                 	db	0
   535  00E78E  00                 	db	0
   536  00E78F  00                 	db	0
   537  00E790  60                 	db	96
   538  00E791  60                 	db	96
   539  00E792  00                 	db	0
   540  00E793  00                 	db	0
   541  00E794  00                 	db	0
   542  00E795  00                 	db	0
   543  00E796  00                 	db	0
   544  00E797  00                 	db	0
   545  00E798  20                 	db	32
   546  00E799  10                 	db	16
   547  00E79A  08                 	db	8
   548  00E79B  04                 	db	4
   549  00E79C  02                 	db	2
   550  00E79D  00                 	db	0
   551  00E79E  00                 	db	0
   552  00E79F  00                 	db	0
   553  00E7A0  3E                 	db	62
   554  00E7A1  51                 	db	81
   555  00E7A2  49                 	db	73
   556  00E7A3  45                 	db	69
   557  00E7A4  3E                 	db	62
   558  00E7A5  00                 	db	0
   559  00E7A6  00                 	db	0
   560  00E7A7  00                 	db	0
   561  00E7A8  00                 	db	0
   562  00E7A9  42                 	db	66
   563  00E7AA  7F                 	db	127
   564  00E7AB  40                 	db	64
   565  00E7AC  00                 	db	0
   566  00E7AD  00                 	db	0
   567  00E7AE  00                 	db	0
   568  00E7AF  00                 	db	0
   569  00E7B0  62                 	db	98
   570  00E7B1  51                 	db	81
   571  00E7B2  49                 	db	73
   572  00E7B3  49                 	db	73
   573  00E7B4  46                 	db	70
   574  00E7B5  00                 	db	0
   575  00E7B6  00                 	db	0
   576  00E7B7  00                 	db	0
   577  00E7B8  22                 	db	34
   578  00E7B9  41                 	db	65
   579  00E7BA  49                 	db	73
   580  00E7BB  49                 	db	73
   581  00E7BC  36                 	db	54
   582  00E7BD  00                 	db	0
   583  00E7BE  00                 	db	0
   584  00E7BF  00                 	db	0
   585  00E7C0  18                 	db	24
   586  00E7C1  14                 	db	20
   587  00E7C2  12                 	db	18
   588  00E7C3  7F                 	db	127
   589  00E7C4  10                 	db	16
   590  00E7C5  00                 	db	0
   591  00E7C6  00                 	db	0
   592  00E7C7  00                 	db	0
   593  00E7C8  27                 	db	39
   594  00E7C9  45                 	db	69
   595  00E7CA  45                 	db	69
   596  00E7CB  45                 	db	69
   597  00E7CC  39                 	db	57
   598  00E7CD  00                 	db	0
   599  00E7CE  00                 	db	0
   600  00E7CF  00                 	db	0
   601  00E7D0  3C                 	db	60
   602  00E7D1  4A                 	db	74
   603  00E7D2  49                 	db	73
   604  00E7D3  49                 	db	73
   605  00E7D4  30                 	db	48
   606  00E7D5  00                 	db	0
   607  00E7D6  00                 	db	0
   608  00E7D7  00                 	db	0
   609  00E7D8  01                 	db	1
   610  00E7D9  71                 	db	113
   611  00E7DA  09                 	db	9
   612  00E7DB  05                 	db	5
   613  00E7DC  03                 	db	3
   614  00E7DD  00                 	db	0
   615  00E7DE  00                 	db	0
   616  00E7DF  00                 	db	0
   617  00E7E0  36                 	db	54
   618  00E7E1  49                 	db	73
   619  00E7E2  49                 	db	73
   620  00E7E3  49                 	db	73
   621  00E7E4  36                 	db	54
   622  00E7E5  00                 	db	0
   623  00E7E6  00                 	db	0
   624  00E7E7  00                 	db	0
   625  00E7E8  06                 	db	6
   626  00E7E9  49                 	db	73
   627  00E7EA  49                 	db	73
   628  00E7EB  29                 	db	41
   629  00E7EC  1E                 	db	30
   630  00E7ED  00                 	db	0
   631  00E7EE  00                 	db	0
   632  00E7EF  00                 	db	0
   633  00E7F0  00                 	db	0
   634  00E7F1  36                 	db	54
   635  00E7F2  36                 	db	54
   636  00E7F3  00                 	db	0
   637  00E7F4  00                 	db	0
   638  00E7F5  00                 	db	0
   639  00E7F6  00                 	db	0
   640  00E7F7  00                 	db	0
   641  00E7F8  00                 	db	0
   642  00E7F9  AC                 	db	172
   643  00E7FA  6C                 	db	108
   644  00E7FB  00                 	db	0
   645  00E7FC  00                 	db	0
   646  00E7FD  00                 	db	0
   647  00E7FE  00                 	db	0
   648  00E7FF  00                 	db	0
   649  00E800  08                 	db	8
   650  00E801  14                 	db	20
   651  00E802  22                 	db	34
   652  00E803  41                 	db	65
   653  00E804  00                 	db	0
   654  00E805  00                 	db	0
   655  00E806  00                 	db	0
   656  00E807  00                 	db	0
   657  00E808  14                 	db	20
   658  00E809  14                 	db	20
   659  00E80A  14                 	db	20
   660  00E80B  14                 	db	20
   661  00E80C  14                 	db	20
   662  00E80D  00                 	db	0
   663  00E80E  00                 	db	0
   664  00E80F  00                 	db	0
   665  00E810  41                 	db	65
   666  00E811  22                 	db	34
   667  00E812  14                 	db	20
   668  00E813  08                 	db	8
   669  00E814  00                 	db	0
   670  00E815  00                 	db	0
   671  00E816  00                 	db	0
   672  00E817  00                 	db	0
   673  00E818  02                 	db	2
   674  00E819  01                 	db	1
   675  00E81A  51                 	db	81
   676  00E81B  09                 	db	9
   677  00E81C  06                 	db	6
   678  00E81D  00                 	db	0
   679  00E81E  00                 	db	0
   680  00E81F  00                 	db	0
   681  00E820  32                 	db	50
   682  00E821  49                 	db	73
   683  00E822  79                 	db	121
   684  00E823  41                 	db	65
   685  00E824  3E                 	db	62
   686  00E825  00                 	db	0
   687  00E826  00                 	db	0
   688  00E827  00                 	db	0
   689  00E828  7E                 	db	126
   690  00E829  09                 	db	9
   691  00E82A  09                 	db	9
   692  00E82B  09                 	db	9
   693  00E82C  7E                 	db	126
   694  00E82D  00                 	db	0
   695  00E82E  00                 	db	0
   696  00E82F  00                 	db	0
   697  00E830  7F                 	db	127
   698  00E831  49                 	db	73
   699  00E832  49                 	db	73
   700  00E833  49                 	db	73
   701  00E834  36                 	db	54
   702  00E835  00                 	db	0
   703  00E836  00                 	db	0
   704  00E837  00                 	db	0
   705  00E838  3E                 	db	62
   706  00E839  41                 	db	65
   707  00E83A  41                 	db	65
   708  00E83B  41                 	db	65
   709  00E83C  22                 	db	34
   710  00E83D  00                 	db	0
   711  00E83E  00                 	db	0
   712  00E83F  00                 	db	0
   713  00E840  7F                 	db	127
   714  00E841  41                 	db	65
   715  00E842  41                 	db	65
   716  00E843  22                 	db	34
   717  00E844  1C                 	db	28
   718  00E845  00                 	db	0
   719  00E846  00                 	db	0
   720  00E847  00                 	db	0
   721  00E848  7F                 	db	127
   722  00E849  49                 	db	73
   723  00E84A  49                 	db	73
   724  00E84B  49                 	db	73
   725  00E84C  41                 	db	65
   726  00E84D  00                 	db	0
   727  00E84E  00                 	db	0
   728  00E84F  00                 	db	0
   729  00E850  7F                 	db	127
   730  00E851  09                 	db	9
   731  00E852  09                 	db	9
   732  00E853  09                 	db	9
   733  00E854  01                 	db	1
   734  00E855  00                 	db	0
   735  00E856  00                 	db	0
   736  00E857  00                 	db	0
   737  00E858  3E                 	db	62
   738  00E859  41                 	db	65
   739  00E85A  41                 	db	65
   740  00E85B  51                 	db	81
   741  00E85C  72                 	db	114
   742  00E85D  00                 	db	0
   743  00E85E  00                 	db	0
   744  00E85F  00                 	db	0
   745  00E860  7F                 	db	127
   746  00E861  08                 	db	8
   747  00E862  08                 	db	8
   748  00E863  08                 	db	8
   749  00E864  7F                 	db	127
   750  00E865  00                 	db	0
   751  00E866  00                 	db	0
   752  00E867  00                 	db	0
   753  00E868  41                 	db	65
   754  00E869  7F                 	db	127
   755  00E86A  41                 	db	65
   756  00E86B  00                 	db	0
   757  00E86C  00                 	db	0
   758  00E86D  00                 	db	0
   759  00E86E  00                 	db	0
   760  00E86F  00                 	db	0
   761  00E870  20                 	db	32
   762  00E871  40                 	db	64
   763  00E872  41                 	db	65
   764  00E873  3F                 	db	63
   765  00E874  01                 	db	1
   766  00E875  00                 	db	0
   767  00E876  00                 	db	0
   768  00E877  00                 	db	0
   769  00E878  7F                 	db	127
   770  00E879  08                 	db	8
   771  00E87A  14                 	db	20
   772  00E87B  22                 	db	34
   773  00E87C  41                 	db	65
   774  00E87D  00                 	db	0
   775  00E87E  00                 	db	0
   776  00E87F  00                 	db	0
   777  00E880  7F                 	db	127
   778  00E881  40                 	db	64
   779  00E882  40                 	db	64
   780  00E883  40                 	db	64
   781  00E884  40                 	db	64
   782  00E885  00                 	db	0
   783  00E886  00                 	db	0
   784  00E887  00                 	db	0
   785  00E888  7F                 	db	127
   786  00E889  02                 	db	2
   787  00E88A  0C                 	db	12
   788  00E88B  02                 	db	2
   789  00E88C  7F                 	db	127
   790  00E88D  00                 	db	0
   791  00E88E  00                 	db	0
   792  00E88F  00                 	db	0
   793  00E890  7F                 	db	127
   794  00E891  04                 	db	4
   795  00E892  08                 	db	8
   796  00E893  10                 	db	16
   797  00E894  7F                 	db	127
   798  00E895  00                 	db	0
   799  00E896  00                 	db	0
   800  00E897  00                 	db	0
   801  00E898  3E                 	db	62
   802  00E899  41                 	db	65
   803  00E89A  41                 	db	65
   804  00E89B  41                 	db	65
   805  00E89C  3E                 	db	62
   806  00E89D  00                 	db	0
   807  00E89E  00                 	db	0
   808  00E89F  00                 	db	0
   809  00E8A0  7F                 	db	127
   810  00E8A1  09                 	db	9
   811  00E8A2  09                 	db	9
   812  00E8A3  09                 	db	9
   813  00E8A4  06                 	db	6
   814  00E8A5  00                 	db	0
   815  00E8A6  00                 	db	0
   816  00E8A7  00                 	db	0
   817  00E8A8  3E                 	db	62
   818  00E8A9  41                 	db	65
   819  00E8AA  51                 	db	81
   820  00E8AB  21                 	db	33
   821  00E8AC  5E                 	db	94
   822  00E8AD  00                 	db	0
   823  00E8AE  00                 	db	0
   824  00E8AF  00                 	db	0
   825  00E8B0  7F                 	db	127
   826  00E8B1  09                 	db	9
   827  00E8B2  19                 	db	25
   828  00E8B3  29                 	db	41
   829  00E8B4  46                 	db	70
   830  00E8B5  00                 	db	0
   831  00E8B6  00                 	db	0
   832  00E8B7  00                 	db	0
   833  00E8B8  26                 	db	38
   834  00E8B9  49                 	db	73
   835  00E8BA  49                 	db	73
   836  00E8BB  49                 	db	73
   837  00E8BC  32                 	db	50
   838  00E8BD  00                 	db	0
   839  00E8BE  00                 	db	0
   840  00E8BF  00                 	db	0
   841  00E8C0  01                 	db	1
   842  00E8C1  01                 	db	1
   843  00E8C2  7F                 	db	127
   844  00E8C3  01                 	db	1
   845  00E8C4  01                 	db	1
   846  00E8C5  00                 	db	0
   847  00E8C6  00                 	db	0
   848  00E8C7  00                 	db	0
   849  00E8C8  3F                 	db	63
   850  00E8C9  40                 	db	64
   851  00E8CA  40                 	db	64
   852  00E8CB  40                 	db	64
   853  00E8CC  3F                 	db	63
   854  00E8CD  00                 	db	0
   855  00E8CE  00                 	db	0
   856  00E8CF  00                 	db	0
   857  00E8D0  1F                 	db	31
   858  00E8D1  20                 	db	32
   859  00E8D2  40                 	db	64
   860  00E8D3  20                 	db	32
   861  00E8D4  1F                 	db	31
   862  00E8D5  00                 	db	0
   863  00E8D6  00                 	db	0
   864  00E8D7  00                 	db	0
   865  00E8D8  3F                 	db	63
   866  00E8D9  40                 	db	64
   867  00E8DA  38                 	db	56
   868  00E8DB  40                 	db	64
   869  00E8DC  3F                 	db	63
   870  00E8DD  00                 	db	0
   871  00E8DE  00                 	db	0
   872  00E8DF  00                 	db	0
   873  00E8E0  63                 	db	99
   874  00E8E1  14                 	db	20
   875  00E8E2  08                 	db	8
   876  00E8E3  14                 	db	20
   877  00E8E4  63                 	db	99
   878  00E8E5  00                 	db	0
   879  00E8E6  00                 	db	0
   880  00E8E7  00                 	db	0
   881  00E8E8  03                 	db	3
   882  00E8E9  04                 	db	4
   883  00E8EA  78                 	db	120
   884  00E8EB  04                 	db	4
   885  00E8EC  03                 	db	3
   886  00E8ED  00                 	db	0
   887  00E8EE  00                 	db	0
   888  00E8EF  00                 	db	0
   889  00E8F0  61                 	db	97
   890  00E8F1  51                 	db	81
   891  00E8F2  49                 	db	73
   892  00E8F3  45                 	db	69
   893  00E8F4  43                 	db	67
   894  00E8F5  00                 	db	0
   895  00E8F6  00                 	db	0
   896  00E8F7  00                 	db	0
   897  00E8F8  7F                 	db	127
   898  00E8F9  41                 	db	65
   899  00E8FA  41                 	db	65
   900  00E8FB  00                 	db	0
   901  00E8FC  00                 	db	0
   902  00E8FD  00                 	db	0
   903  00E8FE  00                 	db	0
   904  00E8FF  00                 	db	0
   905  00E900  02                 	db	2
   906  00E901  04                 	db	4
   907  00E902  08                 	db	8
   908  00E903  10                 	db	16
   909  00E904  20                 	db	32
   910  00E905  00                 	db	0
   911  00E906  00                 	db	0
   912  00E907  00                 	db	0
   913  00E908  41                 	db	65
   914  00E909  41                 	db	65
   915  00E90A  7F                 	db	127
   916  00E90B  00                 	db	0
   917  00E90C  00                 	db	0
   918  00E90D  00                 	db	0
   919  00E90E  00                 	db	0
   920  00E90F  00                 	db	0
   921  00E910  04                 	db	4
   922  00E911  02                 	db	2
   923  00E912  01                 	db	1
   924  00E913  02                 	db	2
   925  00E914  04                 	db	4
   926  00E915  00                 	db	0
   927  00E916  00                 	db	0
   928  00E917  00                 	db	0
   929  00E918  80                 	db	128
   930  00E919  80                 	db	128
   931  00E91A  80                 	db	128
   932  00E91B  80                 	db	128
   933  00E91C  80                 	db	128
   934  00E91D  00                 	db	0
   935  00E91E  00                 	db	0
   936  00E91F  00                 	db	0
   937  00E920  01                 	db	1
   938  00E921  02                 	db	2
   939  00E922  04                 	db	4
   940  00E923  00                 	db	0
   941  00E924  00                 	db	0
   942  00E925  00                 	db	0
   943  00E926  00                 	db	0
   944  00E927  00                 	db	0
   945  00E928  20                 	db	32
   946  00E929  54                 	db	84
   947  00E92A  54                 	db	84
   948  00E92B  54                 	db	84
   949  00E92C  78                 	db	120
   950  00E92D  00                 	db	0
   951  00E92E  00                 	db	0
   952  00E92F  00                 	db	0
   953  00E930  7F                 	db	127
   954  00E931  48                 	db	72
   955  00E932  44                 	db	68
   956  00E933  44                 	db	68
   957  00E934  38                 	db	56
   958  00E935  00                 	db	0
   959  00E936  00                 	db	0
   960  00E937  00                 	db	0
   961  00E938  38                 	db	56
   962  00E939  44                 	db	68
   963  00E93A  44                 	db	68
   964  00E93B  28                 	db	40
   965  00E93C  00                 	db	0
   966  00E93D  00                 	db	0
   967  00E93E  00                 	db	0
   968  00E93F  00                 	db	0
   969  00E940  38                 	db	56
   970  00E941  44                 	db	68
   971  00E942  44                 	db	68
   972  00E943  48                 	db	72
   973  00E944  7F                 	db	127
   974  00E945  00                 	db	0
   975  00E946  00                 	db	0
   976  00E947  00                 	db	0
   977  00E948  38                 	db	56
   978  00E949  54                 	db	84
   979  00E94A  54                 	db	84
   980  00E94B  54                 	db	84
   981  00E94C  18                 	db	24
   982  00E94D  00                 	db	0
   983  00E94E  00                 	db	0
   984  00E94F  00                 	db	0
   985  00E950  08                 	db	8
   986  00E951  7E                 	db	126
   987  00E952  09                 	db	9
   988  00E953  02                 	db	2
   989  00E954  00                 	db	0
   990  00E955  00                 	db	0
   991  00E956  00                 	db	0
   992  00E957  00                 	db	0
   993  00E958  18                 	db	24
   994  00E959  A4                 	db	164
   995  00E95A  A4                 	db	164
   996  00E95B  A4                 	db	164
   997  00E95C  7C                 	db	124
   998  00E95D  00                 	db	0
   999  00E95E  00                 	db	0
  1000  00E95F  00                 	db	0
  1001  00E960  7F                 	db	127
  1002  00E961  08                 	db	8
  1003  00E962  04                 	db	4
  1004  00E963  04                 	db	4
  1005  00E964  78                 	db	120
  1006  00E965  00                 	db	0
  1007  00E966  00                 	db	0
  1008  00E967  00                 	db	0
  1009  00E968  00                 	db	0
  1010  00E969  7D                 	db	125
  1011  00E96A  00                 	db	0
  1012  00E96B  00                 	db	0
  1013  00E96C  00                 	db	0
  1014  00E96D  00                 	db	0
  1015  00E96E  00                 	db	0
  1016  00E96F  00                 	db	0
  1017  00E970  80                 	db	128
  1018  00E971  84                 	db	132
  1019  00E972  7D                 	db	125
  1020  00E973  00                 	db	0
  1021  00E974  00                 	db	0
  1022  00E975  00                 	db	0
  1023  00E976  00                 	db	0
  1024  00E977  00                 	db	0
  1025  00E978  7F                 	db	127
  1026  00E979  10                 	db	16
  1027  00E97A  28                 	db	40
  1028  00E97B  44                 	db	68
  1029  00E97C  00                 	db	0
  1030  00E97D  00                 	db	0
  1031  00E97E  00                 	db	0
  1032  00E97F  00                 	db	0
  1033  00E980  41                 	db	65
  1034  00E981  7F                 	db	127
  1035  00E982  40                 	db	64
  1036  00E983  00                 	db	0
  1037  00E984  00                 	db	0
  1038  00E985  00                 	db	0
  1039  00E986  00                 	db	0
  1040  00E987  00                 	db	0
  1041  00E988  7C                 	db	124
  1042  00E989  04                 	db	4
  1043  00E98A  18                 	db	24
  1044  00E98B  04                 	db	4
  1045  00E98C  78                 	db	120
  1046  00E98D  00                 	db	0
  1047  00E98E  00                 	db	0
  1048  00E98F  00                 	db	0
  1049  00E990  7C                 	db	124
  1050  00E991  08                 	db	8
  1051  00E992  04                 	db	4
  1052  00E993  7C                 	db	124
  1053  00E994  00                 	db	0
  1054  00E995  00                 	db	0
  1055  00E996  00                 	db	0
  1056  00E997  00                 	db	0
  1057  00E998  38                 	db	56
  1058  00E999  44                 	db	68
  1059  00E99A  44                 	db	68
  1060  00E99B  38                 	db	56
  1061  00E99C  00                 	db	0
  1062  00E99D  00                 	db	0
  1063  00E99E  00                 	db	0
  1064  00E99F  00                 	db	0
  1065  00E9A0  FC                 	db	252
  1066  00E9A1  24                 	db	36
  1067  00E9A2  24                 	db	36
  1068  00E9A3  18                 	db	24
  1069  00E9A4  00                 	db	0
  1070  00E9A5  00                 	db	0
  1071  00E9A6  00                 	db	0
  1072  00E9A7  00                 	db	0
  1073  00E9A8  18                 	db	24
  1074  00E9A9  24                 	db	36
  1075  00E9AA  24                 	db	36
  1076  00E9AB  FC                 	db	252
  1077  00E9AC  00                 	db	0
  1078  00E9AD  00                 	db	0
  1079  00E9AE  00                 	db	0
  1080  00E9AF  00                 	db	0
  1081  00E9B0  00                 	db	0
  1082  00E9B1  7C                 	db	124
  1083  00E9B2  08                 	db	8
  1084  00E9B3  04                 	db	4
  1085  00E9B4  00                 	db	0
  1086  00E9B5  00                 	db	0
  1087  00E9B6  00                 	db	0
  1088  00E9B7  00                 	db	0
  1089  00E9B8  48                 	db	72
  1090  00E9B9  54                 	db	84
  1091  00E9BA  54                 	db	84
  1092  00E9BB  24                 	db	36
  1093  00E9BC  00                 	db	0
  1094  00E9BD  00                 	db	0
  1095  00E9BE  00                 	db	0
  1096  00E9BF  00                 	db	0
  1097  00E9C0  04                 	db	4
  1098  00E9C1  7F                 	db	127
  1099  00E9C2  44                 	db	68
  1100  00E9C3  00                 	db	0
  1101  00E9C4  00                 	db	0
  1102  00E9C5  00                 	db	0
  1103  00E9C6  00                 	db	0
  1104  00E9C7  00                 	db	0
  1105  00E9C8  3C                 	db	60
  1106  00E9C9  40                 	db	64
  1107  00E9CA  40                 	db	64
  1108  00E9CB  7C                 	db	124
  1109  00E9CC  00                 	db	0
  1110  00E9CD  00                 	db	0
  1111  00E9CE  00                 	db	0
  1112  00E9CF  00                 	db	0
  1113  00E9D0  1C                 	db	28
  1114  00E9D1  20                 	db	32
  1115  00E9D2  40                 	db	64
  1116  00E9D3  20                 	db	32
  1117  00E9D4  1C                 	db	28
  1118  00E9D5  00                 	db	0
  1119  00E9D6  00                 	db	0
  1120  00E9D7  00                 	db	0
  1121  00E9D8  3C                 	db	60
  1122  00E9D9  40                 	db	64
  1123  00E9DA  30                 	db	48
  1124  00E9DB  40                 	db	64
  1125  00E9DC  3C                 	db	60
  1126  00E9DD  00                 	db	0
  1127  00E9DE  00                 	db	0
  1128  00E9DF  00                 	db	0
  1129  00E9E0  44                 	db	68
  1130  00E9E1  28                 	db	40
  1131  00E9E2  10                 	db	16
  1132  00E9E3  28                 	db	40
  1133  00E9E4  44                 	db	68
  1134  00E9E5  00                 	db	0
  1135  00E9E6  00                 	db	0
  1136  00E9E7  00                 	db	0
  1137  00E9E8  1C                 	db	28
  1138  00E9E9  A0                 	db	160
  1139  00E9EA  A0                 	db	160
  1140  00E9EB  7C                 	db	124
  1141  00E9EC  00                 	db	0
  1142  00E9ED  00                 	db	0
  1143  00E9EE  00                 	db	0
  1144  00E9EF  00                 	db	0
  1145  00E9F0  44                 	db	68
  1146  00E9F1  64                 	db	100
  1147  00E9F2  54                 	db	84
  1148  00E9F3  4C                 	db	76
  1149  00E9F4  44                 	db	68
  1150  00E9F5  00                 	db	0
  1151  00E9F6  00                 	db	0
  1152  00E9F7  00                 	db	0
  1153  00E9F8  08                 	db	8
  1154  00E9F9  36                 	db	54
  1155  00E9FA  41                 	db	65
  1156  00E9FB  00                 	db	0
  1157  00E9FC  00                 	db	0
  1158  00E9FD  00                 	db	0
  1159  00E9FE  00                 	db	0
  1160  00E9FF  00                 	db	0
  1161  00EA00  00                 	db	0
  1162  00EA01  7F                 	db	127
  1163  00EA02  00                 	db	0
  1164  00EA03  00                 	db	0
  1165  00EA04  00                 	db	0
  1166  00EA05  00                 	db	0
  1167  00EA06  00                 	db	0
  1168  00EA07  00                 	db	0
  1169  00EA08  41                 	db	65
  1170  00EA09  36                 	db	54
  1171  00EA0A  08                 	db	8
  1172  00EA0B  00                 	db	0
  1173  00EA0C  00                 	db	0
  1174  00EA0D  00                 	db	0
  1175  00EA0E  00                 	db	0
  1176  00EA0F  00                 	db	0
  1177  00EA10  02                 	db	2
  1178  00EA11  01                 	db	1
  1179  00EA12  01                 	db	1
  1180  00EA13  02                 	db	2
  1181  00EA14  01                 	db	1
  1182  00EA15  00                 	db	0
  1183  00EA16  00                 	db	0
  1184  00EA17  00                 	db	0
  1185  00EA18  02                 	db	2
  1186  00EA19  05                 	db	5
  1187  00EA1A  05                 	db	5
  1188  00EA1B  02                 	db	2
  1189  00EA1C  00                 	db	0
  1190  00EA1D  00                 	db	0
  1191  00EA1E  00                 	db	0
  1192  00EA1F                     __end_of_OledFont:
  1193                           	opt callstack 0
  1194  00EA1F                     _dpowers:
  1195                           	opt callstack 0
  1196  00EA1F  0001               	dw	1
  1197  00EA21  0000               	dw	0
  1198  00EA23  000A               	dw	10
  1199  00EA25  0000               	dw	0
  1200  00EA27  0064               	dw	100
  1201  00EA29  0000               	dw	0
  1202  00EA2B  03E8               	dw	1000
  1203  00EA2D  0000               	dw	0
  1204  00EA2F  2710               	dw	10000
  1205  00EA31  0000               	dw	0
  1206  00EA33  86A0               	dw	34464
  1207  00EA35  0001               	dw	1
  1208  00EA37  4240               	dw	16960
  1209  00EA39  000F               	dw	15
  1210  00EA3B  9680               	dw	38528
  1211  00EA3D  0098               	dw	152
  1212  00EA3F  E100               	dw	57600
  1213  00EA41  05F5               	dw	1525
  1214  00EA43  CA00               	dw	51712
  1215  00EA45  3B9A               	dw	15258
  1216  00EA47                     __end_of_dpowers:
  1217                           	opt callstack 0
  1218  00EA47  0EB8               	dw	3768
  1219  00EA49  43BC               	dw	17340
  1220  00EA4B                     __end_of_temp_adc_offset:
  1221                           	opt callstack 0
  1222  00EA4B                     STR_211:
  1223  00EA4B  20                 	db	32
  1224  00EA4C  20                 	db	32
  1225  00EA4D  20                 	db	32
  1226  00EA4E  20                 	db	32
  1227  00EA4F  2A                 	db	42
  1228  00EA50  49                 	db	73	;'I'
  1229  00EA51  44                 	db	68	;'D'
  1230  00EA52  4E                 	db	78	;'N'
  1231  00EA53  3F                 	db	63	;'?'
  1232  00EA54  3A                 	db	58	;':'
  1233  00EA55  20                 	db	32
  1234  00EA56  50                 	db	80	;'P'
  1235  00EA57  72                 	db	114	;'r'
  1236  00EA58  69                 	db	105	;'i'
  1237  00EA59  6E                 	db	110	;'n'
  1238  00EA5A  74                 	db	116	;'t'
  1239  00EA5B  73                 	db	115	;'s'
  1240  00EA5C  20                 	db	32
  1241  00EA5D  69                 	db	105	;'i'
  1242  00EA5E  64                 	db	100	;'d'
  1243  00EA5F  65                 	db	101	;'e'
  1244  00EA60  6E                 	db	110	;'n'
  1245  00EA61  74                 	db	116	;'t'
  1246  00EA62  69                 	db	105	;'i'
  1247  00EA63  66                 	db	102	;'f'
  1248  00EA64  69                 	db	105	;'i'
  1249  00EA65  63                 	db	99	;'c'
  1250  00EA66  61                 	db	97	;'a'
  1251  00EA67  74                 	db	116	;'t'
  1252  00EA68  69                 	db	105	;'i'
  1253  00EA69  6F                 	db	111	;'o'
  1254  00EA6A  6E                 	db	110	;'n'
  1255  00EA6B  20                 	db	32
  1256  00EA6C  73                 	db	115	;'s'
  1257  00EA6D  74                 	db	116	;'t'
  1258  00EA6E  72                 	db	114	;'r'
  1259  00EA6F  69                 	db	105	;'i'
  1260  00EA70  6E                 	db	110	;'n'
  1261  00EA71  67                 	db	103	;'g'
  1262  00EA72  0A                 	db	10
  1263  00EA73  0D                 	db	13
  1264  00EA74  20                 	db	32
  1265  00EA75  20                 	db	32
  1266  00EA76  20                 	db	32
  1267  00EA77  20                 	db	32
  1268  00EA78  52                 	db	82	;'R'
  1269  00EA79  65                 	db	101	;'e'
  1270  00EA7A  73                 	db	115	;'s'
  1271  00EA7B  65                 	db	101	;'e'
  1272  00EA7C  74                 	db	116	;'t'
  1273  00EA7D  3A                 	db	58	;':'
  1274  00EA7E  20                 	db	32
  1275  00EA7F  45                 	db	69	;'E'
  1276  00EA80  78                 	db	120	;'x'
  1277  00EA81  65                 	db	101	;'e'
  1278  00EA82  63                 	db	99	;'c'
  1279  00EA83  75                 	db	117	;'u'
  1280  00EA84  74                 	db	116	;'t'
  1281  00EA85  65                 	db	101	;'e'
  1282  00EA86  73                 	db	115	;'s'
  1283  00EA87  20                 	db	32
  1284  00EA88  73                 	db	115	;'s'
  1285  00EA89  6F                 	db	111	;'o'
  1286  00EA8A  66                 	db	102	;'f'
  1287  00EA8B  74                 	db	116	;'t'
  1288  00EA8C  77                 	db	119	;'w'
  1289  00EA8D  61                 	db	97	;'a'
  1290  00EA8E  72                 	db	114	;'r'
  1291  00EA8F  65                 	db	101	;'e'
  1292  00EA90  20                 	db	32
  1293  00EA91  72                 	db	114	;'r'
  1294  00EA92  65                 	db	101	;'e'
  1295  00EA93  73                 	db	115	;'s'
  1296  00EA94  65                 	db	101	;'e'
  1297  00EA95  74                 	db	116	;'t'
  1298  00EA96  20                 	db	32
  1299  00EA97  69                 	db	105	;'i'
  1300  00EA98  6E                 	db	110	;'n'
  1301  00EA99  73                 	db	115	;'s'
  1302  00EA9A  74                 	db	116	;'t'
  1303  00EA9B  72                 	db	114	;'r'
  1304  00EA9C  75                 	db	117	;'u'
  1305  00EA9D  63                 	db	99	;'c'
  1306  00EA9E  74                 	db	116	;'t'
  1307  00EA9F  69                 	db	105	;'i'
  1308  00EAA0  6F                 	db	111	;'o'
  1309  00EAA1  6E                 	db	110	;'n'
  1310  00EAA2  0A                 	db	10
  1311  00EAA3  0D                 	db	13
  1312  00EAA4  20                 	db	32
  1313  00EAA5  20                 	db	32
  1314  00EAA6  20                 	db	32
  1315  00EAA7  20                 	db	32
  1316  00EAA8  43                 	db	67	;'C'
  1317  00EAA9  6C                 	db	108	;'l'
  1318  00EAAA  65                 	db	101	;'e'
  1319  00EAAB  61                 	db	97	;'a'
  1320  00EAAC  72                 	db	114	;'r'
  1321  00EAAD  3A                 	db	58	;':'
  1322  00EAAE  20                 	db	32
  1323  00EAAF  43                 	db	67	;'C'
  1324  00EAB0  6C                 	db	108	;'l'
  1325  00EAB1  65                 	db	101	;'e'
  1326  00EAB2  61                 	db	97	;'a'
  1327  00EAB3  72                 	db	114	;'r'
  1328  00EAB4  73                 	db	115	;'s'
  1329  00EAB5  20                 	db	32
  1330  00EAB6  74                 	db	116	;'t'
  1331  00EAB7  68                 	db	104	;'h'
  1332  00EAB8  65                 	db	101	;'e'
  1333  00EAB9  20                 	db	32
  1334  00EABA  76                 	db	118	;'v'
  1335  00EABB  69                 	db	105	;'i'
  1336  00EABC  72                 	db	114	;'r'
  1337  00EABD  74                 	db	116	;'t'
  1338  00EABE  75                 	db	117	;'u'
  1339  00EABF  61                 	db	97	;'a'
  1340  00EAC0  6C                 	db	108	;'l'
  1341  00EAC1  20                 	db	32
  1342  00EAC2  43                 	db	67	;'C'
  1343  00EAC3  4F                 	db	79	;'O'
  1344  00EAC4  4D                 	db	77	;'M'
  1345  00EAC5  20                 	db	32
  1346  00EAC6  70                 	db	112	;'p'
  1347  00EAC7  6F                 	db	111	;'o'
  1348  00EAC8  72                 	db	114	;'r'
  1349  00EAC9  74                 	db	116	;'t'
  1350  00EACA  20                 	db	32
  1351  00EACB  74                 	db	116	;'t'
  1352  00EACC  65                 	db	101	;'e'
  1353  00EACD  72                 	db	114	;'r'
  1354  00EACE  6D                 	db	109	;'m'
  1355  00EACF  69                 	db	105	;'i'
  1356  00EAD0  6E                 	db	110	;'n'
  1357  00EAD1  61                 	db	97	;'a'
  1358  00EAD2  6C                 	db	108	;'l'
  1359  00EAD3  0A                 	db	10
  1360  00EAD4  0D                 	db	13
  1361  00EAD5  20                 	db	32
  1362  00EAD6  20                 	db	32
  1363  00EAD7  20                 	db	32
  1364  00EAD8  20                 	db	32
  1365  00EAD9  43                 	db	67	;'C'
  1366  00EADA  75                 	db	117	;'u'
  1367  00EADB  72                 	db	114	;'r'
  1368  00EADC  72                 	db	114	;'r'
  1369  00EADD  65                 	db	101	;'e'
  1370  00EADE  6E                 	db	110	;'n'
  1371  00EADF  74                 	db	116	;'t'
  1372  00EAE0  20                 	db	32
  1373  00EAE1  4D                 	db	77	;'M'
  1374  00EAE2  65                 	db	101	;'e'
  1375  00EAE3  61                 	db	97	;'a'
  1376  00EAE4  73                 	db	115	;'s'
  1377  00EAE5  75                 	db	117	;'u'
  1378  00EAE6  72                 	db	114	;'r'
  1379  00EAE7  65                 	db	101	;'e'
  1380  00EAE8  6D                 	db	109	;'m'
  1381  00EAE9  65                 	db	101	;'e'
  1382  00EAEA  6E                 	db	110	;'n'
  1383  00EAEB  74                 	db	116	;'t'
  1384  00EAEC  73                 	db	115	;'s'
  1385  00EAED  3F                 	db	63	;'?'
  1386  00EAEE  3A                 	db	58	;':'
  1387  00EAEF  20                 	db	32
  1388  00EAF0  50                 	db	80	;'P'
  1389  00EAF1  72                 	db	114	;'r'
  1390  00EAF2  69                 	db	105	;'i'
  1391  00EAF3  6E                 	db	110	;'n'
  1392  00EAF4  74                 	db	116	;'t'
  1393  00EAF5  73                 	db	115	;'s'
  1394  00EAF6  20                 	db	32
  1395  00EAF7  69                 	db	105	;'i'
  1396  00EAF8  6E                 	db	110	;'n'
  1397  00EAF9  73                 	db	115	;'s'
  1398  00EAFA  74                 	db	116	;'t'
  1399  00EAFB  61                 	db	97	;'a'
  1400  00EAFC  6E                 	db	110	;'n'
  1401  00EAFD  74                 	db	116	;'t'
  1402  00EAFE  61                 	db	97	;'a'
  1403  00EAFF  6E                 	db	110	;'n'
  1404  00EB00  65                 	db	101	;'e'
  1405  00EB01  6F                 	db	111	;'o'
  1406  00EB02  75                 	db	117	;'u'
  1407  00EB03  73                 	db	115	;'s'
  1408  00EB04  20                 	db	32
  1409  00EB05  73                 	db	115	;'s'
  1410  00EB06  79                 	db	121	;'y'
  1411  00EB07  73                 	db	115	;'s'
  1412  00EB08  74                 	db	116	;'t'
  1413  00EB09  65                 	db	101	;'e'
  1414  00EB0A  6D                 	db	109	;'m'
  1415  00EB0B  20                 	db	32
  1416  00EB0C  6C                 	db	108	;'l'
  1417  00EB0D  65                 	db	101	;'e'
  1418  00EB0E  76                 	db	118	;'v'
  1419  00EB0F  65                 	db	101	;'e'
  1420  00EB10  6C                 	db	108	;'l'
  1421  00EB11  20                 	db	32
  1422  00EB12  65                 	db	101	;'e'
  1423  00EB13  6C                 	db	108	;'l'
  1424  00EB14  65                 	db	101	;'e'
  1425  00EB15  63                 	db	99	;'c'
  1426  00EB16  74                 	db	116	;'t'
  1427  00EB17  72                 	db	114	;'r'
  1428  00EB18  69                 	db	105	;'i'
  1429  00EB19  63                 	db	99	;'c'
  1430  00EB1A  61                 	db	97	;'a'
  1431  00EB1B  6C                 	db	108	;'l'
  1432  00EB1C  20                 	db	32
  1433  00EB1D  6D                 	db	109	;'m'
  1434  00EB1E  65                 	db	101	;'e'
  1435  00EB1F  61                 	db	97	;'a'
  1436  00EB20  73                 	db	115	;'s'
  1437  00EB21  75                 	db	117	;'u'
  1438  00EB22  72                 	db	114	;'r'
  1439  00EB23  65                 	db	101	;'e'
  1440  00EB24  6D                 	db	109	;'m'
  1441  00EB25  65                 	db	101	;'e'
  1442  00EB26  6E                 	db	110	;'n'
  1443  00EB27  74                 	db	116	;'t'
  1444  00EB28  73                 	db	115	;'s'
  1445  00EB29  0A                 	db	10
  1446  00EB2A  0D                 	db	13
  1447  00EB2B  20                 	db	32
  1448  00EB2C  20                 	db	32
  1449  00EB2D  20                 	db	32
  1450  00EB2E  20                 	db	32
  1451  00EB2F  44                 	db	68	;'D'
  1452  00EB30  65                 	db	101	;'e'
  1453  00EB31  76                 	db	118	;'v'
  1454  00EB32  69                 	db	105	;'i'
  1455  00EB33  63                 	db	99	;'c'
  1456  00EB34  65                 	db	101	;'e'
  1457  00EB35  20                 	db	32
  1458  00EB36  53                 	db	83	;'S'
  1459  00EB37  74                 	db	116	;'t'
  1460  00EB38  61                 	db	97	;'a'
  1461  00EB39  74                 	db	116	;'t'
  1462  00EB3A  75                 	db	117	;'u'
  1463  00EB3B  73                 	db	115	;'s'
  1464  00EB3C  3F                 	db	63	;'?'
  1465  00EB3D  3A                 	db	58	;':'
  1466  00EB3E  20                 	db	32
  1467  00EB3F  50                 	db	80	;'P'
  1468  00EB40  72                 	db	114	;'r'
  1469  00EB41  69                 	db	105	;'i'
  1470  00EB42  6E                 	db	110	;'n'
  1471  00EB43  74                 	db	116	;'t'
  1472  00EB44  73                 	db	115	;'s'
  1473  00EB45  20                 	db	32
  1474  00EB46  64                 	db	100	;'d'
  1475  00EB47  69                 	db	105	;'i'
  1476  00EB48  67                 	db	103	;'g'
  1477  00EB49  69                 	db	105	;'i'
  1478  00EB4A  74                 	db	116	;'t'
  1479  00EB4B  61                 	db	97	;'a'
  1480  00EB4C  6C                 	db	108	;'l'
  1481  00EB4D  20                 	db	32
  1482  00EB4E  6D                 	db	109	;'m'
  1483  00EB4F  6F                 	db	111	;'o'
  1484  00EB50  6E                 	db	110	;'n'
  1485  00EB51  69                 	db	105	;'i'
  1486  00EB52  74                 	db	116	;'t'
  1487  00EB53  6F                 	db	111	;'o'
  1488  00EB54  72                 	db	114	;'r'
  1489  00EB55  69                 	db	105	;'i'
  1490  00EB56  6E                 	db	110	;'n'
  1491  00EB57  67                 	db	103	;'g'
  1492  00EB58  20                 	db	32
  1493  00EB59  6D                 	db	109	;'m'
  1494  00EB5A  69                 	db	105	;'i'
  1495  00EB5B  63                 	db	99	;'c'
  1496  00EB5C  72                 	db	114	;'r'
  1497  00EB5D  6F                 	db	111	;'o'
  1498  00EB5E  63                 	db	99	;'c'
  1499  00EB5F  6F                 	db	111	;'o'
  1500  00EB60  6E                 	db	110	;'n'
  1501  00EB61  74                 	db	116	;'t'
  1502  00EB62  72                 	db	114	;'r'
  1503  00EB63  6F                 	db	111	;'o'
  1504  00EB64  6C                 	db	108	;'l'
  1505  00EB65  6C                 	db	108	;'l'
  1506  00EB66  65                 	db	101	;'e'
  1507  00EB67  72                 	db	114	;'r'
  1508  00EB68  20                 	db	32
  1509  00EB69  64                 	db	100	;'d'
  1510  00EB6A  65                 	db	101	;'e'
  1511  00EB6B  76                 	db	118	;'v'
  1512  00EB6C  69                 	db	105	;'i'
  1513  00EB6D  63                 	db	99	;'c'
  1514  00EB6E  65                 	db	101	;'e'
  1515  00EB6F  20                 	db	32
  1516  00EB70  73                 	db	115	;'s'
  1517  00EB71  74                 	db	116	;'t'
  1518  00EB72  61                 	db	97	;'a'
  1519  00EB73  74                 	db	116	;'t'
  1520  00EB74  75                 	db	117	;'u'
  1521  00EB75  73                 	db	115	;'s'
  1522  00EB76  0A                 	db	10
  1523  00EB77  0D                 	db	13
  1524  00EB78  20                 	db	32
  1525  00EB79  20                 	db	32
  1526  00EB7A  20                 	db	32
  1527  00EB7B  20                 	db	32
  1528  00EB7C  45                 	db	69	;'E'
  1529  00EB7D  72                 	db	114	;'r'
  1530  00EB7E  72                 	db	114	;'r'
  1531  00EB7F  6F                 	db	111	;'o'
  1532  00EB80  72                 	db	114	;'r'
  1533  00EB81  20                 	db	32
  1534  00EB82  53                 	db	83	;'S'
  1535  00EB83  74                 	db	116	;'t'
  1536  00EB84  61                 	db	97	;'a'
  1537  00EB85  74                 	db	116	;'t'
  1538  00EB86  75                 	db	117	;'u'
  1539  00EB87  73                 	db	115	;'s'
  1540  00EB88  3F                 	db	63	;'?'
  1541  00EB89  20                 	db	32
  1542  00EB8A  50                 	db	80	;'P'
  1543  00EB8B  72                 	db	114	;'r'
  1544  00EB8C  69                 	db	105	;'i'
  1545  00EB8D  6E                 	db	110	;'n'
  1546  00EB8E  74                 	db	116	;'t'
  1547  00EB8F  73                 	db	115	;'s'
  1548  00EB90  20                 	db	32
  1549  00EB91  69                 	db	105	;'i'
  1550  00EB92  66                 	db	102	;'f'
  1551  00EB93  20                 	db	32
  1552  00EB94  61                 	db	97	;'a'
  1553  00EB95  6E                 	db	110	;'n'
  1554  00EB96  79                 	db	121	;'y'
  1555  00EB97  20                 	db	32
  1556  00EB98  73                 	db	115	;'s'
  1557  00EB99  79                 	db	121	;'y'
  1558  00EB9A  73                 	db	115	;'s'
  1559  00EB9B  74                 	db	116	;'t'
  1560  00EB9C  65                 	db	101	;'e'
  1561  00EB9D  6D                 	db	109	;'m'
  1562  00EB9E  20                 	db	32
  1563  00EB9F  66                 	db	102	;'f'
  1564  00EBA0  61                 	db	97	;'a'
  1565  00EBA1  75                 	db	117	;'u'
  1566  00EBA2  6C                 	db	108	;'l'
  1567  00EBA3  74                 	db	116	;'t'
  1568  00EBA4  73                 	db	115	;'s'
  1569  00EBA5  20                 	db	32
  1570  00EBA6  68                 	db	104	;'h'
  1571  00EBA7  61                 	db	97	;'a'
  1572  00EBA8  76                 	db	118	;'v'
  1573  00EBA9  65                 	db	101	;'e'
  1574  00EBAA  20                 	db	32
  1575  00EBAB  62                 	db	98	;'b'
  1576  00EBAC  65                 	db	101	;'e'
  1577  00EBAD  65                 	db	101	;'e'
  1578  00EBAE  6E                 	db	110	;'n'
  1579  00EBAF  20                 	db	32
  1580  00EBB0  64                 	db	100	;'d'
  1581  00EBB1  65                 	db	101	;'e'
  1582  00EBB2  74                 	db	116	;'t'
  1583  00EBB3  65                 	db	101	;'e'
  1584  00EBB4  63                 	db	99	;'c'
  1585  00EBB5  74                 	db	116	;'t'
  1586  00EBB6  65                 	db	101	;'e'
  1587  00EBB7  64                 	db	100	;'d'
  1588  00EBB8  0A                 	db	10
  1589  00EBB9  0D                 	db	13
  1590  00EBBA  20                 	db	32
  1591  00EBBB  20                 	db	32
  1592  00EBBC  20                 	db	32
  1593  00EBBD  20                 	db	32
  1594  00EBBE  43                 	db	67	;'C'
  1595  00EBBF  6C                 	db	108	;'l'
  1596  00EBC0  65                 	db	101	;'e'
  1597  00EBC1  61                 	db	97	;'a'
  1598  00EBC2  72                 	db	114	;'r'
  1599  00EBC3  20                 	db	32
  1600  00EBC4  55                 	db	85	;'U'
  1601  00EBC5  41                 	db	65	;'A'
  1602  00EBC6  52                 	db	82	;'R'
  1603  00EBC7  54                 	db	84	;'T'
  1604  00EBC8  20                 	db	32
  1605  00EBC9  45                 	db	69	;'E'
  1606  00EBCA  72                 	db	114	;'r'
  1607  00EBCB  72                 	db	114	;'r'
  1608  00EBCC  6F                 	db	111	;'o'
  1609  00EBCD  72                 	db	114	;'r'
  1610  00EBCE  73                 	db	115	;'s'
  1611  00EBCF  3A                 	db	58	;':'
  1612  00EBD0  20                 	db	32
  1613  00EBD1  43                 	db	67	;'C'
  1614  00EBD2  6C                 	db	108	;'l'
  1615  00EBD3  65                 	db	101	;'e'
  1616  00EBD4  61                 	db	97	;'a'
  1617  00EBD5  72                 	db	114	;'r'
  1618  00EBD6  73                 	db	115	;'s'
  1619  00EBD7  20                 	db	32
  1620  00EBD8  55                 	db	85	;'U'
  1621  00EBD9  41                 	db	65	;'A'
  1622  00EBDA  52                 	db	82	;'R'
  1623  00EBDB  54                 	db	84	;'T'
  1624  00EBDC  20                 	db	32
  1625  00EBDD  65                 	db	101	;'e'
  1626  00EBDE  72                 	db	114	;'r'
  1627  00EBDF  72                 	db	114	;'r'
  1628  00EBE0  6F                 	db	111	;'o'
  1629  00EBE1  72                 	db	114	;'r'
  1630  00EBE2  20                 	db	32
  1631  00EBE3  66                 	db	102	;'f'
  1632  00EBE4  6C                 	db	108	;'l'
  1633  00EBE5  61                 	db	97	;'a'
  1634  00EBE6  67                 	db	103	;'g'
  1635  00EBE7  73                 	db	115	;'s'
  1636  00EBE8  0A                 	db	10
  1637  00EBE9  0D                 	db	13
  1638  00EBEA  20                 	db	32
  1639  00EBEB  20                 	db	32
  1640  00EBEC  20                 	db	32
  1641  00EBED  20                 	db	32
  1642  00EBEE  43                 	db	67	;'C'
  1643  00EBEF  6C                 	db	108	;'l'
  1644  00EBF0  65                 	db	101	;'e'
  1645  00EBF1  61                 	db	97	;'a'
  1646  00EBF2  72                 	db	114	;'r'
  1647  00EBF3  20                 	db	32
  1648  00EBF4  49                 	db	73	;'I'
  1649  00EBF5  32                 	db	50	;'2'
  1650  00EBF6  43                 	db	67	;'C'
  1651  00EBF7  20                 	db	32
  1652  00EBF8  45                 	db	69	;'E'
  1653  00EBF9  72                 	db	114	;'r'
  1654  00EBFA  72                 	db	114	;'r'
  1655  00EBFB  6F                 	db	111	;'o'
  1656  00EBFC  72                 	db	114	;'r'
  1657  00EBFD  73                 	db	115	;'s'
  1658  00EBFE  3A                 	db	58	;':'
  1659  00EBFF  20                 	db	32
  1660  00EC00  43                 	db	67	;'C'
  1661  00EC01  6C                 	db	108	;'l'
  1662  00EC02  65                 	db	101	;'e'
  1663  00EC03  61                 	db	97	;'a'
  1664  00EC04  72                 	db	114	;'r'
  1665  00EC05  73                 	db	115	;'s'
  1666  00EC06  20                 	db	32
  1667  00EC07  49                 	db	73	;'I'
  1668  00EC08  32                 	db	50	;'2'
  1669  00EC09  43                 	db	67	;'C'
  1670  00EC0A  20                 	db	32
  1671  00EC0B  65                 	db	101	;'e'
  1672  00EC0C  72                 	db	114	;'r'
  1673  00EC0D  72                 	db	114	;'r'
  1674  00EC0E  6F                 	db	111	;'o'
  1675  00EC0F  72                 	db	114	;'r'
  1676  00EC10  20                 	db	32
  1677  00EC11  66                 	db	102	;'f'
  1678  00EC12  6C                 	db	108	;'l'
  1679  00EC13  61                 	db	97	;'a'
  1680  00EC14  67                 	db	103	;'g'
  1681  00EC15  73                 	db	115	;'s'
  1682  00EC16  0A                 	db	10
  1683  00EC17  0D                 	db	13
  1684  00EC18  20                 	db	32
  1685  00EC19  20                 	db	32
  1686  00EC1A  20                 	db	32
  1687  00EC1B  20                 	db	32
  1688  00EC1C  43                 	db	67	;'C'
  1689  00EC1D  6C                 	db	108	;'l'
  1690  00EC1E  65                 	db	101	;'e'
  1691  00EC1F  61                 	db	97	;'a'
  1692  00EC20  72                 	db	114	;'r'
  1693  00EC21  20                 	db	32
  1694  00EC22  41                 	db	65	;'A'
  1695  00EC23  44                 	db	68	;'D'
  1696  00EC24  43                 	db	67	;'C'
  1697  00EC25  20                 	db	32
  1698  00EC26  45                 	db	69	;'E'
  1699  00EC27  72                 	db	114	;'r'
  1700  00EC28  72                 	db	114	;'r'
  1701  00EC29  6F                 	db	111	;'o'
  1702  00EC2A  72                 	db	114	;'r'
  1703  00EC2B  73                 	db	115	;'s'
  1704  00EC2C  3A                 	db	58	;':'
  1705  00EC2D  20                 	db	32
  1706  00EC2E  43                 	db	67	;'C'
  1707  00EC2F  6C                 	db	108	;'l'
  1708  00EC30  65                 	db	101	;'e'
  1709  00EC31  61                 	db	97	;'a'
  1710  00EC32  72                 	db	114	;'r'
  1711  00EC33  73                 	db	115	;'s'
  1712  00EC34  20                 	db	32
  1713  00EC35  41                 	db	65	;'A'
  1714  00EC36  44                 	db	68	;'D'
  1715  00EC37  43                 	db	67	;'C'
  1716  00EC38  20                 	db	32
  1717  00EC39  65                 	db	101	;'e'
  1718  00EC3A  72                 	db	114	;'r'
  1719  00EC3B  72                 	db	114	;'r'
  1720  00EC3C  6F                 	db	111	;'o'
  1721  00EC3D  72                 	db	114	;'r'
  1722  00EC3E  20                 	db	32
  1723  00EC3F  66                 	db	102	;'f'
  1724  00EC40  6C                 	db	108	;'l'
  1725  00EC41  61                 	db	97	;'a'
  1726  00EC42  67                 	db	103	;'g'
  1727  00EC43  73                 	db	115	;'s'
  1728  00EC44  0A                 	db	10
  1729  00EC45  0D                 	db	13
  1730  00EC46  20                 	db	32
  1731  00EC47  20                 	db	32
  1732  00EC48  20                 	db	32
  1733  00EC49  20                 	db	32
  1734  00EC4A  48                 	db	72	;'H'
  1735  00EC4B  65                 	db	101	;'e'
  1736  00EC4C  6C                 	db	108	;'l'
  1737  00EC4D  70                 	db	112	;'p'
  1738  00EC4E  3A                 	db	58	;':'
  1739  00EC4F  20                 	db	32
  1740  00EC50  4C                 	db	76	;'L'
  1741  00EC51  69                 	db	105	;'i'
  1742  00EC52  73                 	db	115	;'s'
  1743  00EC53  74                 	db	116	;'t'
  1744  00EC54  73                 	db	115	;'s'
  1745  00EC55  20                 	db	32
  1746  00EC56  61                 	db	97	;'a'
  1747  00EC57  76                 	db	118	;'v'
  1748  00EC58  61                 	db	97	;'a'
  1749  00EC59  69                 	db	105	;'i'
  1750  00EC5A  6C                 	db	108	;'l'
  1751  00EC5B  61                 	db	97	;'a'
  1752  00EC5C  62                 	db	98	;'b'
  1753  00EC5D  6C                 	db	108	;'l'
  1754  00EC5E  65                 	db	101	;'e'
  1755  00EC5F  20                 	db	32
  1756  00EC60  63                 	db	99	;'c'
  1757  00EC61  6F                 	db	111	;'o'
  1758  00EC62  6D                 	db	109	;'m'
  1759  00EC63  6D                 	db	109	;'m'
  1760  00EC64  61                 	db	97	;'a'
  1761  00EC65  6E                 	db	110	;'n'
  1762  00EC66  64                 	db	100	;'d'
  1763  00EC67  73                 	db	115	;'s'
  1764  00EC68  20                 	db	32
  1765  00EC69  28                 	db	40
  1766  00EC6A  74                 	db	116	;'t'
  1767  00EC6B  68                 	db	104	;'h'
  1768  00EC6C  69                 	db	105	;'i'
  1769  00EC6D  73                 	db	115	;'s'
  1770  00EC6E  20                 	db	32
  1771  00EC6F  63                 	db	99	;'c'
  1772  00EC70  6F                 	db	111	;'o'
  1773  00EC71  6D                 	db	109	;'m'
  1774  00EC72  6D                 	db	109	;'m'
  1775  00EC73  61                 	db	97	;'a'
  1776  00EC74  6E                 	db	110	;'n'
  1777  00EC75  64                 	db	100	;'d'
  1778  00EC76  29                 	db	41
  1779  00EC77  0A                 	db	10
  1780  00EC78  0D                 	db	13
  1781  00EC79  00                 	db	0
  1782  00EC7A                     STR_274:
  1783  00EC7A  20                 	db	32
  1784  00EC7B  20                 	db	32
  1785  00EC7C  20                 	db	32
  1786  00EC7D  20                 	db	32
  1787  00EC7E  20                 	db	32
  1788  00EC7F  20                 	db	32
  1789  00EC80  20                 	db	32
  1790  00EC81  20                 	db	32
  1791  00EC82  46                 	db	70	;'F'
  1792  00EC83  69                 	db	105	;'i'
  1793  00EC84  78                 	db	120	;'x'
  1794  00EC85  65                 	db	101	;'e'
  1795  00EC86  64                 	db	100	;'d'
  1796  00EC87  20                 	db	32
  1797  00EC88  56                 	db	86	;'V'
  1798  00EC89  6F                 	db	111	;'o'
  1799  00EC8A  6C                 	db	108	;'l'
  1800  00EC8B  74                 	db	116	;'t'
  1801  00EC8C  61                 	db	97	;'a'
  1802  00EC8D  67                 	db	103	;'g'
  1803  00EC8E  65                 	db	101	;'e'
  1804  00EC8F  20                 	db	32
  1805  00EC90  52                 	db	82	;'R'
  1806  00EC91  65                 	db	101	;'e'
  1807  00EC92  66                 	db	102	;'f'
  1808  00EC93  65                 	db	101	;'e'
  1809  00EC94  72                 	db	114	;'r'
  1810  00EC95  65                 	db	101	;'e'
  1811  00EC96  6E                 	db	110	;'n'
  1812  00EC97  63                 	db	99	;'c'
  1813  00EC98  65                 	db	101	;'e'
  1814  00EC99  20                 	db	32
  1815  00EC9A  42                 	db	66	;'B'
  1816  00EC9B  75                 	db	117	;'u'
  1817  00EC9C  66                 	db	102	;'f'
  1818  00EC9D  66                 	db	102	;'f'
  1819  00EC9E  65                 	db	101	;'e'
  1820  00EC9F  72                 	db	114	;'r'
  1821  00ECA0  20                 	db	32
  1822  00ECA1  31                 	db	49	;'1'
  1823  00ECA2  20                 	db	32
  1824  00ECA3  6D                 	db	109	;'m'
  1825  00ECA4  65                 	db	101	;'e'
  1826  00ECA5  61                 	db	97	;'a'
  1827  00ECA6  73                 	db	115	;'s'
  1828  00ECA7  75                 	db	117	;'u'
  1829  00ECA8  72                 	db	114	;'r'
  1830  00ECA9  65                 	db	101	;'e'
  1831  00ECAA  64                 	db	100	;'d'
  1832  00ECAB  20                 	db	32
  1833  00ECAC  61                 	db	97	;'a'
  1834  00ECAD  73                 	db	115	;'s'
  1835  00ECAE  20                 	db	32
  1836  00ECAF  25                 	db	37
  1837  00ECB0  2B                 	db	43
  1838  00ECB1  2E                 	db	46
  1839  00ECB2  33                 	db	51	;'3'
  1840  00ECB3  66                 	db	102	;'f'
  1841  00ECB4  20                 	db	32
  1842  00ECB5  56                 	db	86	;'V'
  1843  00ECB6  6F                 	db	111	;'o'
  1844  00ECB7  6C                 	db	108	;'l'
  1845  00ECB8  74                 	db	116	;'t'
  1846  00ECB9  73                 	db	115	;'s'
  1847  00ECBA  2C                 	db	44
  1848  00ECBB  20                 	db	32
  1849  00ECBC  63                 	db	99	;'c'
  1850  00ECBD  61                 	db	97	;'a'
  1851  00ECBE  6C                 	db	108	;'l'
  1852  00ECBF  69                 	db	105	;'i'
  1853  00ECC0  62                 	db	98	;'b'
  1854  00ECC1  72                 	db	114	;'r'
  1855  00ECC2  61                 	db	97	;'a'
  1856  00ECC3  74                 	db	116	;'t'
  1857  00ECC4  65                 	db	101	;'e'
  1858  00ECC5  64                 	db	100	;'d'
  1859  00ECC6  20                 	db	32
  1860  00ECC7  66                 	db	102	;'f'
  1861  00ECC8  6F                 	db	111	;'o'
  1862  00ECC9  72                 	db	114	;'r'
  1863  00ECCA  20                 	db	32
  1864  00ECCB  2B                 	db	43
  1865  00ECCC  34                 	db	52	;'4'
  1866  00ECCD  2E                 	db	46
  1867  00ECCE  30                 	db	48	;'0'
  1868  00ECCF  39                 	db	57	;'9'
  1869  00ECD0  36                 	db	54	;'6'
  1870  00ECD1  20                 	db	32
  1871  00ECD2  56                 	db	86	;'V'
  1872  00ECD3  6F                 	db	111	;'o'
  1873  00ECD4  6C                 	db	108	;'l'
  1874  00ECD5  74                 	db	116	;'t'
  1875  00ECD6  73                 	db	115	;'s'
  1876  00ECD7  0A                 	db	10
  1877  00ECD8  0D                 	db	13
  1878  00ECD9  00                 	db	0
  1879  00ECDA                     STR_219:
  1880  00ECDA  43                 	db	67	;'C'
  1881  00ECDB  6F                 	db	111	;'o'
  1882  00ECDC  6D                 	db	109	;'m'
  1883  00ECDD  6D                 	db	109	;'m'
  1884  00ECDE  61                 	db	97	;'a'
  1885  00ECDF  6E                 	db	110	;'n'
  1886  00ECE0  64                 	db	100	;'d'
  1887  00ECE1  73                 	db	115	;'s'
  1888  00ECE2  20                 	db	32
  1889  00ECE3  61                 	db	97	;'a'
  1890  00ECE4  72                 	db	114	;'r'
  1891  00ECE5  65                 	db	101	;'e'
  1892  00ECE6  20                 	db	32
  1893  00ECE7  63                 	db	99	;'c'
  1894  00ECE8  61                 	db	97	;'a'
  1895  00ECE9  73                 	db	115	;'s'
  1896  00ECEA  65                 	db	101	;'e'
  1897  00ECEB  20                 	db	32
  1898  00ECEC  73                 	db	115	;'s'
  1899  00ECED  65                 	db	101	;'e'
  1900  00ECEE  6E                 	db	110	;'n'
  1901  00ECEF  73                 	db	115	;'s'
  1902  00ECF0  69                 	db	105	;'i'
  1903  00ECF1  74                 	db	116	;'t'
  1904  00ECF2  69                 	db	105	;'i'
  1905  00ECF3  76                 	db	118	;'v'
  1906  00ECF4  65                 	db	101	;'e'
  1907  00ECF5  2C                 	db	44
  1908  00ECF6  20                 	db	32
  1909  00ECF7  62                 	db	98	;'b'
  1910  00ECF8  61                 	db	97	;'a'
  1911  00ECF9  63                 	db	99	;'c'
  1912  00ECFA  6B                 	db	107	;'k'
  1913  00ECFB  73                 	db	115	;'s'
  1914  00ECFC  70                 	db	112	;'p'
  1915  00ECFD  61                 	db	97	;'a'
  1916  00ECFE  63                 	db	99	;'c'
  1917  00ECFF  65                 	db	101	;'e'
  1918  00ED00  20                 	db	32
  1919  00ED01  69                 	db	105	;'i'
  1920  00ED02  73                 	db	115	;'s'
  1921  00ED03  20                 	db	32
  1922  00ED04  73                 	db	115	;'s'
  1923  00ED05  75                 	db	117	;'u'
  1924  00ED06  70                 	db	112	;'p'
  1925  00ED07  70                 	db	112	;'p'
  1926  00ED08  6F                 	db	111	;'o'
  1927  00ED09  72                 	db	114	;'r'
  1928  00ED0A  74                 	db	116	;'t'
  1929  00ED0B  65                 	db	101	;'e'
  1930  00ED0C  64                 	db	100	;'d'
  1931  00ED0D  2C                 	db	44
  1932  00ED0E  20                 	db	32
  1933  00ED0F  63                 	db	99	;'c'
  1934  00ED10  6F                 	db	111	;'o'
  1935  00ED11  6D                 	db	109	;'m'
  1936  00ED12  6D                 	db	109	;'m'
  1937  00ED13  61                 	db	97	;'a'
  1938  00ED14  6E                 	db	110	;'n'
  1939  00ED15  64                 	db	100	;'d'
  1940  00ED16  20                 	db	32
  1941  00ED17  68                 	db	104	;'h'
  1942  00ED18  69                 	db	105	;'i'
  1943  00ED19  73                 	db	115	;'s'
  1944  00ED1A  74                 	db	116	;'t'
  1945  00ED1B  6F                 	db	111	;'o'
  1946  00ED1C  72                 	db	114	;'r'
  1947  00ED1D  79                 	db	121	;'y'
  1948  00ED1E  20                 	db	32
  1949  00ED1F  69                 	db	105	;'i'
  1950  00ED20  73                 	db	115	;'s'
  1951  00ED21  20                 	db	32
  1952  00ED22  6E                 	db	110	;'n'
  1953  00ED23  6F                 	db	111	;'o'
  1954  00ED24  74                 	db	116	;'t'
  1955  00ED25  20                 	db	32
  1956  00ED26  73                 	db	115	;'s'
  1957  00ED27  75                 	db	117	;'u'
  1958  00ED28  70                 	db	112	;'p'
  1959  00ED29  70                 	db	112	;'p'
  1960  00ED2A  6F                 	db	111	;'o'
  1961  00ED2B  72                 	db	114	;'r'
  1962  00ED2C  74                 	db	116	;'t'
  1963  00ED2D  65                 	db	101	;'e'
  1964  00ED2E  64                 	db	100	;'d'
  1965  00ED2F  0A                 	db	10
  1966  00ED30  0D                 	db	13
  1967  00ED31  00                 	db	0
  1968  00ED32                     STR_236:
  1969  00ED32  20                 	db	32
  1970  00ED33  20                 	db	32
  1971  00ED34  20                 	db	32
  1972  00ED35  20                 	db	32
  1973  00ED36  43                 	db	67	;'C'
  1974  00ED37  61                 	db	97	;'a'
  1975  00ED38  6C                 	db	108	;'l'
  1976  00ED39  6C                 	db	108	;'l'
  1977  00ED3A  20                 	db	32
  1978  00ED3B  27                 	db	39
  1979  00ED3C  43                 	db	67	;'C'
  1980  00ED3D  6C                 	db	108	;'l'
  1981  00ED3E  65                 	db	101	;'e'
  1982  00ED3F  61                 	db	97	;'a'
  1983  00ED40  72                 	db	114	;'r'
  1984  00ED41  20                 	db	32
  1985  00ED42  55                 	db	85	;'U'
  1986  00ED43  41                 	db	65	;'A'
  1987  00ED44  52                 	db	82	;'R'
  1988  00ED45  54                 	db	84	;'T'
  1989  00ED46  20                 	db	32
  1990  00ED47  45                 	db	69	;'E'
  1991  00ED48  72                 	db	114	;'r'
  1992  00ED49  72                 	db	114	;'r'
  1993  00ED4A  6F                 	db	111	;'o'
  1994  00ED4B  72                 	db	114	;'r'
  1995  00ED4C  73                 	db	115	;'s'
  1996  00ED4D  27                 	db	39
  1997  00ED4E  20                 	db	32
  1998  00ED4F  74                 	db	116	;'t'
  1999  00ED50  6F                 	db	111	;'o'
  2000  00ED51  20                 	db	32
  2001  00ED52  63                 	db	99	;'c'
  2002  00ED53  6C                 	db	108	;'l'
  2003  00ED54  65                 	db	101	;'e'
  2004  00ED55  61                 	db	97	;'a'
  2005  00ED56  72                 	db	114	;'r'
  2006  00ED57  20                 	db	32
  2007  00ED58  63                 	db	99	;'c'
  2008  00ED59  6F                 	db	111	;'o'
  2009  00ED5A  6D                 	db	109	;'m'
  2010  00ED5B  6D                 	db	109	;'m'
  2011  00ED5C  75                 	db	117	;'u'
  2012  00ED5D  6E                 	db	110	;'n'
  2013  00ED5E  69                 	db	105	;'i'
  2014  00ED5F  63                 	db	99	;'c'
  2015  00ED60  61                 	db	97	;'a'
  2016  00ED61  74                 	db	116	;'t'
  2017  00ED62  69                 	db	105	;'i'
  2018  00ED63  6F                 	db	111	;'o'
  2019  00ED64  6E                 	db	110	;'n'
  2020  00ED65  73                 	db	115	;'s'
  2021  00ED66  20                 	db	32
  2022  00ED67  65                 	db	101	;'e'
  2023  00ED68  72                 	db	114	;'r'
  2024  00ED69  72                 	db	114	;'r'
  2025  00ED6A  6F                 	db	111	;'o'
  2026  00ED6B  72                 	db	114	;'r'
  2027  00ED6C  28                 	db	40
  2028  00ED6D  73                 	db	115	;'s'
  2029  00ED6E  29                 	db	41
  2030  00ED6F  0A                 	db	10
  2031  00ED70  0D                 	db	13
  2032  00ED71  00                 	db	0
  2033  00ED72                     STR_263:
  2034  00ED72  20                 	db	32
  2035  00ED73  20                 	db	32
  2036  00ED74  20                 	db	32
  2037  00ED75  20                 	db	32
  2038  00ED76  20                 	db	32
  2039  00ED77  20                 	db	32
  2040  00ED78  20                 	db	32
  2041  00ED79  20                 	db	32
  2042  00ED7A  43                 	db	67	;'C'
  2043  00ED7B  75                 	db	117	;'u'
  2044  00ED7C  72                 	db	114	;'r'
  2045  00ED7D  72                 	db	114	;'r'
  2046  00ED7E  65                 	db	101	;'e'
  2047  00ED7F  6E                 	db	110	;'n'
  2048  00ED80  74                 	db	116	;'t'
  2049  00ED81  20                 	db	32
  2050  00ED82  2B                 	db	43
  2051  00ED83  35                 	db	53	;'5'
  2052  00ED84  56                 	db	86	;'V'
  2053  00ED85  20                 	db	32
  2054  00ED86  53                 	db	83	;'S'
  2055  00ED87  77                 	db	119	;'w'
  2056  00ED88  69                 	db	105	;'i'
  2057  00ED89  74                 	db	116	;'t'
  2058  00ED8A  63                 	db	99	;'c'
  2059  00ED8B  68                 	db	104	;'h'
  2060  00ED8C  69                 	db	105	;'i'
  2061  00ED8D  6E                 	db	110	;'n'
  2062  00ED8E  67                 	db	103	;'g'
  2063  00ED8F  20                 	db	32
  2064  00ED90  46                 	db	70	;'F'
  2065  00ED91  72                 	db	114	;'r'
  2066  00ED92  65                 	db	101	;'e'
  2067  00ED93  71                 	db	113	;'q'
  2068  00ED94  75                 	db	117	;'u'
  2069  00ED95  65                 	db	101	;'e'
  2070  00ED96  6E                 	db	110	;'n'
  2071  00ED97  63                 	db	99	;'c'
  2072  00ED98  79                 	db	121	;'y'
  2073  00ED99  20                 	db	32
  2074  00ED9A  6D                 	db	109	;'m'
  2075  00ED9B  65                 	db	101	;'e'
  2076  00ED9C  61                 	db	97	;'a'
  2077  00ED9D  73                 	db	115	;'s'
  2078  00ED9E  75                 	db	117	;'u'
  2079  00ED9F  72                 	db	114	;'r'
  2080  00EDA0  65                 	db	101	;'e'
  2081  00EDA1  64                 	db	100	;'d'
  2082  00EDA2  20                 	db	32
  2083  00EDA3  61                 	db	97	;'a'
  2084  00EDA4  73                 	db	115	;'s'
  2085  00EDA5  20                 	db	32
  2086  00EDA6  25                 	db	37
  2087  00EDA7  2B                 	db	43
  2088  00EDA8  2E                 	db	46
  2089  00EDA9  31                 	db	49	;'1'
  2090  00EDAA  66                 	db	102	;'f'
  2091  00EDAB  20                 	db	32
  2092  00EDAC  4D                 	db	77	;'M'
  2093  00EDAD  48                 	db	72	;'H'
  2094  00EDAE  7A                 	db	122	;'z'
  2095  00EDAF  0A                 	db	10
  2096  00EDB0  0D                 	db	13
  2097  00EDB1  00                 	db	0
  2098  00EDB2                     STR_233:
  2099  00EDB2  20                 	db	32
  2100  00EDB3  20                 	db	32
  2101  00EDB4  20                 	db	32
  2102  00EDB5  20                 	db	32
  2103  00EDB6  43                 	db	67	;'C'
  2104  00EDB7  61                 	db	97	;'a'
  2105  00EDB8  6C                 	db	108	;'l'
  2106  00EDB9  6C                 	db	108	;'l'
  2107  00EDBA  20                 	db	32
  2108  00EDBB  27                 	db	39
  2109  00EDBC  43                 	db	67	;'C'
  2110  00EDBD  6C                 	db	108	;'l'
  2111  00EDBE  65                 	db	101	;'e'
  2112  00EDBF  61                 	db	97	;'a'
  2113  00EDC0  72                 	db	114	;'r'
  2114  00EDC1  20                 	db	32
  2115  00EDC2  49                 	db	73	;'I'
  2116  00EDC3  32                 	db	50	;'2'
  2117  00EDC4  43                 	db	67	;'C'
  2118  00EDC5  20                 	db	32
  2119  00EDC6  45                 	db	69	;'E'
  2120  00EDC7  72                 	db	114	;'r'
  2121  00EDC8  72                 	db	114	;'r'
  2122  00EDC9  6F                 	db	111	;'o'
  2123  00EDCA  72                 	db	114	;'r'
  2124  00EDCB  73                 	db	115	;'s'
  2125  00EDCC  27                 	db	39
  2126  00EDCD  20                 	db	32
  2127  00EDCE  74                 	db	116	;'t'
  2128  00EDCF  6F                 	db	111	;'o'
  2129  00EDD0  20                 	db	32
  2130  00EDD1  63                 	db	99	;'c'
  2131  00EDD2  6C                 	db	108	;'l'
  2132  00EDD3  65                 	db	101	;'e'
  2133  00EDD4  61                 	db	97	;'a'
  2134  00EDD5  72                 	db	114	;'r'
  2135  00EDD6  20                 	db	32
  2136  00EDD7  63                 	db	99	;'c'
  2137  00EDD8  6F                 	db	111	;'o'
  2138  00EDD9  6D                 	db	109	;'m'
  2139  00EDDA  6D                 	db	109	;'m'
  2140  00EDDB  75                 	db	117	;'u'
  2141  00EDDC  6E                 	db	110	;'n'
  2142  00EDDD  69                 	db	105	;'i'
  2143  00EDDE  63                 	db	99	;'c'
  2144  00EDDF  61                 	db	97	;'a'
  2145  00EDE0  74                 	db	116	;'t'
  2146  00EDE1  69                 	db	105	;'i'
  2147  00EDE2  6F                 	db	111	;'o'
  2148  00EDE3  6E                 	db	110	;'n'
  2149  00EDE4  73                 	db	115	;'s'
  2150  00EDE5  20                 	db	32
  2151  00EDE6  65                 	db	101	;'e'
  2152  00EDE7  72                 	db	114	;'r'
  2153  00EDE8  72                 	db	114	;'r'
  2154  00EDE9  6F                 	db	111	;'o'
  2155  00EDEA  72                 	db	114	;'r'
  2156  00EDEB  28                 	db	40
  2157  00EDEC  73                 	db	115	;'s'
  2158  00EDED  29                 	db	41
  2159  00EDEE  0A                 	db	10
  2160  00EDEF  0D                 	db	13
  2161  00EDF0  00                 	db	0
  2162  00EDF1                     STR_265:
  2163  00EDF1  20                 	db	32
  2164  00EDF2  20                 	db	32
  2165  00EDF3  20                 	db	32
  2166  00EDF4  20                 	db	32
  2167  00EDF5  20                 	db	32
  2168  00EDF6  20                 	db	32
  2169  00EDF7  20                 	db	32
  2170  00EDF8  20                 	db	32
  2171  00EDF9  43                 	db	67	;'C'
  2172  00EDFA  75                 	db	117	;'u'
  2173  00EDFB  72                 	db	114	;'r'
  2174  00EDFC  72                 	db	114	;'r'
  2175  00EDFD  65                 	db	101	;'e'
  2176  00EDFE  6E                 	db	110	;'n'
  2177  00EDFF  74                 	db	116	;'t'
  2178  00EE00  20                 	db	32
  2179  00EE01  51                 	db	81	;'Q'
  2180  00EE02  49                 	db	73	;'I'
  2181  00EE03  20                 	db	32
  2182  00EE04  53                 	db	83	;'S'
  2183  00EE05  77                 	db	119	;'w'
  2184  00EE06  69                 	db	105	;'i'
  2185  00EE07  74                 	db	116	;'t'
  2186  00EE08  63                 	db	99	;'c'
  2187  00EE09  68                 	db	104	;'h'
  2188  00EE0A  69                 	db	105	;'i'
  2189  00EE0B  6E                 	db	110	;'n'
  2190  00EE0C  67                 	db	103	;'g'
  2191  00EE0D  20                 	db	32
  2192  00EE0E  46                 	db	70	;'F'
  2193  00EE0F  72                 	db	114	;'r'
  2194  00EE10  65                 	db	101	;'e'
  2195  00EE11  71                 	db	113	;'q'
  2196  00EE12  75                 	db	117	;'u'
  2197  00EE13  65                 	db	101	;'e'
  2198  00EE14  6E                 	db	110	;'n'
  2199  00EE15  63                 	db	99	;'c'
  2200  00EE16  79                 	db	121	;'y'
  2201  00EE17  20                 	db	32
  2202  00EE18  6D                 	db	109	;'m'
  2203  00EE19  65                 	db	101	;'e'
  2204  00EE1A  61                 	db	97	;'a'
  2205  00EE1B  73                 	db	115	;'s'
  2206  00EE1C  75                 	db	117	;'u'
  2207  00EE1D  72                 	db	114	;'r'
  2208  00EE1E  65                 	db	101	;'e'
  2209  00EE1F  64                 	db	100	;'d'
  2210  00EE20  20                 	db	32
  2211  00EE21  61                 	db	97	;'a'
  2212  00EE22  73                 	db	115	;'s'
  2213  00EE23  20                 	db	32
  2214  00EE24  25                 	db	37
  2215  00EE25  2B                 	db	43
  2216  00EE26  2E                 	db	46
  2217  00EE27  33                 	db	51	;'3'
  2218  00EE28  66                 	db	102	;'f'
  2219  00EE29  20                 	db	32
  2220  00EE2A  6B                 	db	107	;'k'
  2221  00EE2B  48                 	db	72	;'H'
  2222  00EE2C  7A                 	db	122	;'z'
  2223  00EE2D  0A                 	db	10
  2224  00EE2E  0D                 	db	13
  2225  00EE2F  00                 	db	0
  2226  00EE30                     STR_273:
  2227  00EE30  20                 	db	32
  2228  00EE31  20                 	db	32
  2229  00EE32  20                 	db	32
  2230  00EE33  20                 	db	32
  2231  00EE34  20                 	db	32
  2232  00EE35  20                 	db	32
  2233  00EE36  20                 	db	32
  2234  00EE37  20                 	db	32
  2235  00EE38  4D                 	db	77	;'M'
  2236  00EE39  69                 	db	105	;'i'
  2237  00EE3A  63                 	db	99	;'c'
  2238  00EE3B  72                 	db	114	;'r'
  2239  00EE3C  6F                 	db	111	;'o'
  2240  00EE3D  63                 	db	99	;'c'
  2241  00EE3E  6F                 	db	111	;'o'
  2242  00EE3F  6E                 	db	110	;'n'
  2243  00EE40  74                 	db	116	;'t'
  2244  00EE41  72                 	db	114	;'r'
  2245  00EE42  6F                 	db	111	;'o'
  2246  00EE43  6C                 	db	108	;'l'
  2247  00EE44  6C                 	db	108	;'l'
  2248  00EE45  65                 	db	101	;'e'
  2249  00EE46  72                 	db	114	;'r'
  2250  00EE47  20                 	db	32
  2251  00EE48  44                 	db	68	;'D'
  2252  00EE49  69                 	db	105	;'i'
  2253  00EE4A  65                 	db	101	;'e'
  2254  00EE4B  20                 	db	32
  2255  00EE4C  54                 	db	84	;'T'
  2256  00EE4D  65                 	db	101	;'e'
  2257  00EE4E  6D                 	db	109	;'m'
  2258  00EE4F  70                 	db	112	;'p'
  2259  00EE50  65                 	db	101	;'e'
  2260  00EE51  72                 	db	114	;'r'
  2261  00EE52  61                 	db	97	;'a'
  2262  00EE53  74                 	db	116	;'t'
  2263  00EE54  75                 	db	117	;'u'
  2264  00EE55  72                 	db	114	;'r'
  2265  00EE56  65                 	db	101	;'e'
  2266  00EE57  20                 	db	32
  2267  00EE58  6D                 	db	109	;'m'
  2268  00EE59  65                 	db	101	;'e'
  2269  00EE5A  61                 	db	97	;'a'
  2270  00EE5B  73                 	db	115	;'s'
  2271  00EE5C  75                 	db	117	;'u'
  2272  00EE5D  72                 	db	114	;'r'
  2273  00EE5E  65                 	db	101	;'e'
  2274  00EE5F  64                 	db	100	;'d'
  2275  00EE60  20                 	db	32
  2276  00EE61  61                 	db	97	;'a'
  2277  00EE62  73                 	db	115	;'s'
  2278  00EE63  20                 	db	32
  2279  00EE64  25                 	db	37
  2280  00EE65  2B                 	db	43
  2281  00EE66  2E                 	db	46
  2282  00EE67  33                 	db	51	;'3'
  2283  00EE68  66                 	db	102	;'f'
  2284  00EE69  20                 	db	32
  2285  00EE6A  43                 	db	67	;'C'
  2286  00EE6B  0A                 	db	10
  2287  00EE6C  0D                 	db	13
  2288  00EE6D  00                 	db	0
  2289  00EE6E                     STR_190:
  2290  00EE6E  20                 	db	32
  2291  00EE6F  20                 	db	32
  2292  00EE70  20                 	db	32
  2293  00EE71  20                 	db	32
  2294  00EE72  44                 	db	68	;'D'
  2295  00EE73  65                 	db	101	;'e'
  2296  00EE74  76                 	db	118	;'v'
  2297  00EE75  69                 	db	105	;'i'
  2298  00EE76  63                 	db	99	;'c'
  2299  00EE77  65                 	db	101	;'e'
  2300  00EE78  20                 	db	32
  2301  00EE79  73                 	db	115	;'s'
  2302  00EE7A  69                 	db	105	;'i'
  2303  00EE7B  6C                 	db	108	;'l'
  2304  00EE7C  69                 	db	105	;'i'
  2305  00EE7D  63                 	db	99	;'c'
  2306  00EE7E  6F                 	db	111	;'o'
  2307  00EE7F  6E                 	db	110	;'n'
  2308  00EE80  20                 	db	32
  2309  00EE81  72                 	db	114	;'r'
  2310  00EE82  65                 	db	101	;'e'
  2311  00EE83  76                 	db	118	;'v'
  2312  00EE84  69                 	db	105	;'i'
  2313  00EE85  73                 	db	115	;'s'
  2314  00EE86  69                 	db	105	;'i'
  2315  00EE87  6F                 	db	111	;'o'
  2316  00EE88  6E                 	db	110	;'n'
  2317  00EE89  20                 	db	32
  2318  00EE8A  49                 	db	73	;'I'
  2319  00EE8B  44                 	db	68	;'D'
  2320  00EE8C  20                 	db	32
  2321  00EE8D  72                 	db	114	;'r'
  2322  00EE8E  65                 	db	101	;'e'
  2323  00EE8F  74                 	db	116	;'t'
  2324  00EE90  72                 	db	114	;'r'
  2325  00EE91  69                 	db	105	;'i'
  2326  00EE92  65                 	db	101	;'e'
  2327  00EE93  76                 	db	118	;'v'
  2328  00EE94  65                 	db	101	;'e'
  2329  00EE95  64                 	db	100	;'d'
  2330  00EE96  20                 	db	32
  2331  00EE97  66                 	db	102	;'f'
  2332  00EE98  72                 	db	114	;'r'
  2333  00EE99  6F                 	db	111	;'o'
  2334  00EE9A  6D                 	db	109	;'m'
  2335  00EE9B  20                 	db	32
  2336  00EE9C  66                 	db	102	;'f'
  2337  00EE9D  6C                 	db	108	;'l'
  2338  00EE9E  61                 	db	97	;'a'
  2339  00EE9F  73                 	db	115	;'s'
  2340  00EEA0  68                 	db	104	;'h'
  2341  00EEA1  3A                 	db	58	;':'
  2342  00EEA2  20                 	db	32
  2343  00EEA3  25                 	db	37
  2344  00EEA4  63                 	db	99	;'c'
  2345  00EEA5  25                 	db	37
  2346  00EEA6  30                 	db	48	;'0'
  2347  00EEA7  33                 	db	51	;'3'
  2348  00EEA8  64                 	db	100	;'d'
  2349  00EEA9  0A                 	db	10
  2350  00EEAA  0D                 	db	13
  2351  00EEAB  00                 	db	0
  2352  00EEAC                     STR_6:
  2353  00EEAC  53                 	db	83	;'S'
  2354  00EEAD  79                 	db	121	;'y'
  2355  00EEAE  73                 	db	115	;'s'
  2356  00EEAF  74                 	db	116	;'t'
  2357  00EEB0  65                 	db	101	;'e'
  2358  00EEB1  6D                 	db	109	;'m'
  2359  00EEB2  20                 	db	32
  2360  00EEB3  70                 	db	112	;'p'
  2361  00EEB4  61                 	db	97	;'a'
  2362  00EEB5  72                 	db	114	;'r'
  2363  00EEB6  61                 	db	97	;'a'
  2364  00EEB7  6D                 	db	109	;'m'
  2365  00EEB8  65                 	db	101	;'e'
  2366  00EEB9  74                 	db	116	;'t'
  2367  00EEBA  65                 	db	101	;'e'
  2368  00EEBB  72                 	db	114	;'r'
  2369  00EEBC  73                 	db	115	;'s'
  2370  00EEBD  20                 	db	32
  2371  00EEBE  61                 	db	97	;'a'
  2372  00EEBF  6E                 	db	110	;'n'
  2373  00EEC0  64                 	db	100	;'d'
  2374  00EEC1  20                 	db	32
  2375  00EEC2  61                 	db	97	;'a'
  2376  00EEC3  66                 	db	102	;'f'
  2377  00EEC4  66                 	db	102	;'f'
  2378  00EEC5  69                 	db	105	;'i'
  2379  00EEC6  72                 	db	114	;'r'
  2380  00EEC7  6D                 	db	109	;'m'
  2381  00EEC8  61                 	db	97	;'a'
  2382  00EEC9  74                 	db	116	;'t'
  2383  00EECA  69                 	db	105	;'i'
  2384  00EECB  76                 	db	118	;'v'
  2385  00EECC  65                 	db	101	;'e'
  2386  00EECD  20                 	db	32
  2387  00EECE  72                 	db	114	;'r'
  2388  00EECF  65                 	db	101	;'e'
  2389  00EED0  73                 	db	115	;'s'
  2390  00EED1  70                 	db	112	;'p'
  2391  00EED2  6F                 	db	111	;'o'
  2392  00EED3  6E                 	db	110	;'n'
  2393  00EED4  73                 	db	115	;'s'
  2394  00EED5  65                 	db	101	;'e'
  2395  00EED6  73                 	db	115	;'s'
  2396  00EED7  20                 	db	32
  2397  00EED8  61                 	db	97	;'a'
  2398  00EED9  70                 	db	112	;'p'
  2399  00EEDA  70                 	db	112	;'p'
  2400  00EEDB  65                 	db	101	;'e'
  2401  00EEDC  61                 	db	97	;'a'
  2402  00EEDD  72                 	db	114	;'r'
  2403  00EEDE  20                 	db	32
  2404  00EEDF  69                 	db	105	;'i'
  2405  00EEE0  6E                 	db	110	;'n'
  2406  00EEE1  20                 	db	32
  2407  00EEE2  67                 	db	103	;'g'
  2408  00EEE3  72                 	db	114	;'r'
  2409  00EEE4  65                 	db	101	;'e'
  2410  00EEE5  65                 	db	101	;'e'
  2411  00EEE6  6E                 	db	110	;'n'
  2412  00EEE7  0A                 	db	10
  2413  00EEE8  0D                 	db	13
  2414  00EEE9  00                 	db	0
  2415  00EEEA                     STR_192:
  2416  00EEEA  20                 	db	32
  2417  00EEEB  20                 	db	32
  2418  00EEEC  20                 	db	32
  2419  00EEED  20                 	db	32
  2420  00EEEE  54                 	db	84	;'T'
  2421  00EEEF  68                 	db	104	;'h'
  2422  00EEF0  65                 	db	101	;'e'
  2423  00EEF1  20                 	db	32
  2424  00EEF2  66                 	db	102	;'f'
  2425  00EEF3  6F                 	db	111	;'o'
  2426  00EEF4  6C                 	db	108	;'l'
  2427  00EEF5  6C                 	db	108	;'l'
  2428  00EEF6  6F                 	db	111	;'o'
  2429  00EEF7  77                 	db	119	;'w'
  2430  00EEF8  69                 	db	105	;'i'
  2431  00EEF9  6E                 	db	110	;'n'
  2432  00EEFA  67                 	db	103	;'g'
  2433  00EEFB  20                 	db	32
  2434  00EEFC  55                 	db	85	;'U'
  2435  00EEFD  73                 	db	115	;'s'
  2436  00EEFE  65                 	db	101	;'e'
  2437  00EEFF  72                 	db	114	;'r'
  2438  00EF00  20                 	db	32
  2439  00EF01  49                 	db	73	;'I'
  2440  00EF02  44                 	db	68	;'D'
  2441  00EF03  73                 	db	115	;'s'
  2442  00EF04  20                 	db	32
  2443  00EF05  68                 	db	104	;'h'
  2444  00EF06  61                 	db	97	;'a'
  2445  00EF07  76                 	db	118	;'v'
  2446  00EF08  65                 	db	101	;'e'
  2447  00EF09  20                 	db	32
  2448  00EF0A  62                 	db	98	;'b'
  2449  00EF0B  65                 	db	101	;'e'
  2450  00EF0C  65                 	db	101	;'e'
  2451  00EF0D  6E                 	db	110	;'n'
  2452  00EF0E  20                 	db	32
  2453  00EF0F  72                 	db	114	;'r'
  2454  00EF10  65                 	db	101	;'e'
  2455  00EF11  74                 	db	116	;'t'
  2456  00EF12  72                 	db	114	;'r'
  2457  00EF13  69                 	db	105	;'i'
  2458  00EF14  65                 	db	101	;'e'
  2459  00EF15  76                 	db	118	;'v'
  2460  00EF16  65                 	db	101	;'e'
  2461  00EF17  64                 	db	100	;'d'
  2462  00EF18  20                 	db	32
  2463  00EF19  66                 	db	102	;'f'
  2464  00EF1A  72                 	db	114	;'r'
  2465  00EF1B  6F                 	db	111	;'o'
  2466  00EF1C  6D                 	db	109	;'m'
  2467  00EF1D  20                 	db	32
  2468  00EF1E  66                 	db	102	;'f'
  2469  00EF1F  6C                 	db	108	;'l'
  2470  00EF20  61                 	db	97	;'a'
  2471  00EF21  73                 	db	115	;'s'
  2472  00EF22  68                 	db	104	;'h'
  2473  00EF23  3A                 	db	58	;':'
  2474  00EF24  0A                 	db	10
  2475  00EF25  0D                 	db	13
  2476  00EF26  00                 	db	0
  2477  00EF27  46                 	db	70	;'F'
  2478  00EF28  69                 	db	105	;'i'
  2479  00EF29  6E                 	db	110	;'n'
  2480  00EF2A  69                 	db	105	;'i'
  2481  00EF2B  73                 	db	115	;'s'
  2482  00EF2C  68                 	db	104	;'h'
  2483  00EF2D  65                 	db	101	;'e'
  2484  00EF2E  64                 	db	100	;'d'
  2485  00EF2F  20                 	db	32
  2486  00EF30  74                 	db	116	;'t'
  2487  00EF31  65                 	db	101	;'e'
  2488  00EF32  73                 	db	115	;'s'
  2489  00EF33  74                 	db	116	;'t'
  2490  00EF34  20                 	db	32
  2491  00EF35  6D                 	db	109	;'m'
  2492  00EF36  65                 	db	101	;'e'
  2493  00EF37  73                 	db	115	;'s'
  2494  00EF38  73                 	db	115	;'s'
  2495  00EF39  61                 	db	97	;'a'
  2496  00EF3A  67                 	db	103	;'g'
  2497  00EF3B  65                 	db	101	;'e'
  2498  00EF3C  2C                 	db	44
  2499  00EF3D  20                 	db	32
  2500  00EF3E  74                 	db	116	;'t'
  2501  00EF3F  79                 	db	121	;'y'
  2502  00EF40  70                 	db	112	;'p'
  2503  00EF41  65                 	db	101	;'e'
  2504  00EF42  20                 	db	32
  2505  00EF43  27                 	db	39
  2506  00EF44  48                 	db	72	;'H'
  2507  00EF45  65                 	db	101	;'e'
  2508  00EF46  6C                 	db	108	;'l'
  2509  00EF47  70                 	db	112	;'p'
  2510  00EF48  27                 	db	39
  2511  00EF49  20                 	db	32
  2512  00EF4A  66                 	db	102	;'f'
  2513  00EF4B  6F                 	db	111	;'o'
  2514  00EF4C  72                 	db	114	;'r'
  2515  00EF4D  20                 	db	32
  2516  00EF4E  6C                 	db	108	;'l'
  2517  00EF4F  69                 	db	105	;'i'
  2518  00EF50  73                 	db	115	;'s'
  2519  00EF51  74                 	db	116	;'t'
  2520  00EF52  20                 	db	32
  2521  00EF53  6F                 	db	111	;'o'
  2522  00EF54  66                 	db	102	;'f'
  2523  00EF55  20                 	db	32
  2524  00EF56  63                 	db	99	;'c'
  2525  00EF57  6F                 	db	111	;'o'
  2526  00EF58  6D                 	db	109	;'m'
  2527  00EF59  6D                 	db	109	;'m'
  2528  00EF5A  61                 	db	97	;'a'
  2529  00EF5B  6E                 	db	110	;'n'
  2530  00EF5C  64                 	db	100	;'d'
  2531  00EF5D  73                 	db	115	;'s'
  2532  00EF5E  0A                 	db	10
  2533  00EF5F  0D                 	db	13
  2534  00EF60  0A                 	db	10
  2535  00EF61  0D                 	db	13
  2536  00EF62  00                 	db	0
  2537  00EF63                     STR_193:
  2538  00EF63  20                 	db	32
  2539  00EF64  20                 	db	32
  2540  00EF65  20                 	db	32
  2541  00EF66  20                 	db	32
  2542  00EF67  20                 	db	32
  2543  00EF68  20                 	db	32
  2544  00EF69  20                 	db	32
  2545  00EF6A  20                 	db	32
  2546  00EF6B  55                 	db	85	;'U'
  2547  00EF6C  73                 	db	115	;'s'
  2548  00EF6D  65                 	db	101	;'e'
  2549  00EF6E  72                 	db	114	;'r'
  2550  00EF6F  20                 	db	32
  2551  00EF70  49                 	db	73	;'I'
  2552  00EF71  44                 	db	68	;'D'
  2553  00EF72  20                 	db	32
  2554  00EF73  57                 	db	87	;'W'
  2555  00EF74  6F                 	db	111	;'o'
  2556  00EF75  72                 	db	114	;'r'
  2557  00EF76  64                 	db	100	;'d'
  2558  00EF77  20                 	db	32
  2559  00EF78  25                 	db	37
  2560  00EF79  64                 	db	100	;'d'
  2561  00EF7A  20                 	db	32
  2562  00EF7B  28                 	db	40
  2563  00EF7C  46                 	db	70	;'F'
  2564  00EF7D  6C                 	db	108	;'l'
  2565  00EF7E  61                 	db	97	;'a'
  2566  00EF7F  73                 	db	115	;'s'
  2567  00EF80  68                 	db	104	;'h'
  2568  00EF81  20                 	db	32
  2569  00EF82  61                 	db	97	;'a'
  2570  00EF83  64                 	db	100	;'d'
  2571  00EF84  64                 	db	100	;'d'
  2572  00EF85  72                 	db	114	;'r'
  2573  00EF86  65                 	db	101	;'e'
  2574  00EF87  73                 	db	115	;'s'
  2575  00EF88  73                 	db	115	;'s'
  2576  00EF89  20                 	db	32
  2577  00EF8A  30                 	db	48	;'0'
  2578  00EF8B  78                 	db	120	;'x'
  2579  00EF8C  32                 	db	50	;'2'
  2580  00EF8D  30                 	db	48	;'0'
  2581  00EF8E  30                 	db	48	;'0'
  2582  00EF8F  30                 	db	48	;'0'
  2583  00EF90  30                 	db	48	;'0'
  2584  00EF91  25                 	db	37
  2585  00EF92  58                 	db	88	;'X'
  2586  00EF93  29                 	db	41
  2587  00EF94  3A                 	db	58	;':'
  2588  00EF95  20                 	db	32
  2589  00EF96  30                 	db	48	;'0'
  2590  00EF97  78                 	db	120	;'x'
  2591  00EF98  25                 	db	37
  2592  00EF99  30                 	db	48	;'0'
  2593  00EF9A  34                 	db	52	;'4'
  2594  00EF9B  58                 	db	88	;'X'
  2595  00EF9C  0A                 	db	10
  2596  00EF9D  0D                 	db	13
  2597  00EF9E  00                 	db	0
  2598  00EF9F                     STR_256:
  2599  00EF9F  20                 	db	32
  2600  00EFA0  20                 	db	32
  2601  00EFA1  20                 	db	32
  2602  00EFA2  20                 	db	32
  2603  00EFA3  20                 	db	32
  2604  00EFA4  20                 	db	32
  2605  00EFA5  20                 	db	32
  2606  00EFA6  20                 	db	32
  2607  00EFA7  45                 	db	69	;'E'
  2608  00EFA8  6C                 	db	108	;'l'
  2609  00EFA9  65                 	db	101	;'e'
  2610  00EFAA  63                 	db	99	;'c'
  2611  00EFAB  74                 	db	116	;'t'
  2612  00EFAC  72                 	db	114	;'r'
  2613  00EFAD  69                 	db	105	;'i'
  2614  00EFAE  63                 	db	99	;'c'
  2615  00EFAF  61                 	db	97	;'a'
  2616  00EFB0  6C                 	db	108	;'l'
  2617  00EFB1  20                 	db	32
  2618  00EFB2  49                 	db	73	;'I'
  2619  00EFB3  6E                 	db	110	;'n'
  2620  00EFB4  70                 	db	112	;'p'
  2621  00EFB5  75                 	db	117	;'u'
  2622  00EFB6  74                 	db	116	;'t'
  2623  00EFB7  20                 	db	32
  2624  00EFB8  50                 	db	80	;'P'
  2625  00EFB9  6F                 	db	111	;'o'
  2626  00EFBA  77                 	db	119	;'w'
  2627  00EFBB  65                 	db	101	;'e'
  2628  00EFBC  72                 	db	114	;'r'
  2629  00EFBD  20                 	db	32
  2630  00EFBE  63                 	db	99	;'c'
  2631  00EFBF  61                 	db	97	;'a'
  2632  00EFC0  6C                 	db	108	;'l'
  2633  00EFC1  63                 	db	99	;'c'
  2634  00EFC2  75                 	db	117	;'u'
  2635  00EFC3  6C                 	db	108	;'l'
  2636  00EFC4  61                 	db	97	;'a'
  2637  00EFC5  74                 	db	116	;'t'
  2638  00EFC6  65                 	db	101	;'e'
  2639  00EFC7  64                 	db	100	;'d'
  2640  00EFC8  20                 	db	32
  2641  00EFC9  61                 	db	97	;'a'
  2642  00EFCA  73                 	db	115	;'s'
  2643  00EFCB  20                 	db	32
  2644  00EFCC  25                 	db	37
  2645  00EFCD  2B                 	db	43
  2646  00EFCE  2E                 	db	46
  2647  00EFCF  33                 	db	51	;'3'
  2648  00EFD0  66                 	db	102	;'f'
  2649  00EFD1  20                 	db	32
  2650  00EFD2  57                 	db	87	;'W'
  2651  00EFD3  61                 	db	97	;'a'
  2652  00EFD4  74                 	db	116	;'t'
  2653  00EFD5  74                 	db	116	;'t'
  2654  00EFD6  73                 	db	115	;'s'
  2655  00EFD7  0A                 	db	10
  2656  00EFD8  0D                 	db	13
  2657  00EFD9  00                 	db	0
  2658  00EFDA                     STR_242:
  2659  00EFDA  20                 	db	32
  2660  00EFDB  20                 	db	32
  2661  00EFDC  20                 	db	32
  2662  00EFDD  20                 	db	32
  2663  00EFDE  51                 	db	81	;'Q'
  2664  00EFDF  49                 	db	73	;'I'
  2665  00EFE0  20                 	db	32
  2666  00EFE1  77                 	db	119	;'w'
  2667  00EFE2  69                 	db	105	;'i'
  2668  00EFE3  72                 	db	114	;'r'
  2669  00EFE4  65                 	db	101	;'e'
  2670  00EFE5  6C                 	db	108	;'l'
  2671  00EFE6  65                 	db	101	;'e'
  2672  00EFE7  73                 	db	115	;'s'
  2673  00EFE8  73                 	db	115	;'s'
  2674  00EFE9  20                 	db	32
  2675  00EFEA  70                 	db	112	;'p'
  2676  00EFEB  6F                 	db	111	;'o'
  2677  00EFEC  77                 	db	119	;'w'
  2678  00EFED  65                 	db	101	;'e'
  2679  00EFEE  72                 	db	114	;'r'
  2680  00EFEF  20                 	db	32
  2681  00EFF0  63                 	db	99	;'c'
  2682  00EFF1  6F                 	db	111	;'o'
  2683  00EFF2  6E                 	db	110	;'n'
  2684  00EFF3  76                 	db	118	;'v'
  2685  00EFF4  65                 	db	101	;'e'
  2686  00EFF5  72                 	db	114	;'r'
  2687  00EFF6  74                 	db	116	;'t'
  2688  00EFF7  65                 	db	101	;'e'
  2689  00EFF8  72                 	db	114	;'r'
  2690  00EFF9  20                 	db	32
  2691  00EFFA  68                 	db	104	;'h'
  2692  00EFFB  61                 	db	97	;'a'
  2693  00EFFC  73                 	db	115	;'s'
  2694  00EFFD  20                 	db	32
  2695  00EFFE  66                 	db	102	;'f'
  2696  00EFFF  75                 	db	117	;'u'
  2697  00F000  6C                 	db	108	;'l'
  2698  00F001  6C                 	db	108	;'l'
  2699  00F002  79                 	db	121	;'y'
  2700  00F003  20                 	db	32
  2701  00F004  63                 	db	99	;'c'
  2702  00F005  68                 	db	104	;'h'
  2703  00F006  61                 	db	97	;'a'
  2704  00F007  72                 	db	114	;'r'
  2705  00F008  67                 	db	103	;'g'
  2706  00F009  65                 	db	101	;'e'
  2707  00F00A  64                 	db	100	;'d'
  2708  00F00B  20                 	db	32
  2709  00F00C  70                 	db	112	;'p'
  2710  00F00D  68                 	db	104	;'h'
  2711  00F00E  6F                 	db	111	;'o'
  2712  00F00F  6E                 	db	110	;'n'
  2713  00F010  65                 	db	101	;'e'
  2714  00F011  0A                 	db	10
  2715  00F012  0D                 	db	13
  2716  00F013  00                 	db	0
  2717  00F014                     STR_257:
  2718  00F014  20                 	db	32
  2719  00F015  20                 	db	32
  2720  00F016  20                 	db	32
  2721  00F017  20                 	db	32
  2722  00F018  20                 	db	32
  2723  00F019  20                 	db	32
  2724  00F01A  20                 	db	32
  2725  00F01B  20                 	db	32
  2726  00F01C  57                 	db	87	;'W'
  2727  00F01D  69                 	db	105	;'i'
  2728  00F01E  72                 	db	114	;'r'
  2729  00F01F  65                 	db	101	;'e'
  2730  00F020  6C                 	db	108	;'l'
  2731  00F021  65                 	db	101	;'e'
  2732  00F022  73                 	db	115	;'s'
  2733  00F023  73                 	db	115	;'s'
  2734  00F024  20                 	db	32
  2735  00F025  4F                 	db	79	;'O'
  2736  00F026  75                 	db	117	;'u'
  2737  00F027  74                 	db	116	;'t'
  2738  00F028  70                 	db	112	;'p'
  2739  00F029  75                 	db	117	;'u'
  2740  00F02A  74                 	db	116	;'t'
  2741  00F02B  20                 	db	32
  2742  00F02C  50                 	db	80	;'P'
  2743  00F02D  6F                 	db	111	;'o'
  2744  00F02E  77                 	db	119	;'w'
  2745  00F02F  65                 	db	101	;'e'
  2746  00F030  72                 	db	114	;'r'
  2747  00F031  20                 	db	32
  2748  00F032  63                 	db	99	;'c'
  2749  00F033  61                 	db	97	;'a'
  2750  00F034  6C                 	db	108	;'l'
  2751  00F035  63                 	db	99	;'c'
  2752  00F036  75                 	db	117	;'u'
  2753  00F037  6C                 	db	108	;'l'
  2754  00F038  61                 	db	97	;'a'
  2755  00F039  74                 	db	116	;'t'
  2756  00F03A  65                 	db	101	;'e'
  2757  00F03B  64                 	db	100	;'d'
  2758  00F03C  20                 	db	32
  2759  00F03D  61                 	db	97	;'a'
  2760  00F03E  73                 	db	115	;'s'
  2761  00F03F  20                 	db	32
  2762  00F040  25                 	db	37
  2763  00F041  2B                 	db	43
  2764  00F042  2E                 	db	46
  2765  00F043  33                 	db	51	;'3'
  2766  00F044  66                 	db	102	;'f'
  2767  00F045  20                 	db	32
  2768  00F046  57                 	db	87	;'W'
  2769  00F047  61                 	db	97	;'a'
  2770  00F048  74                 	db	116	;'t'
  2771  00F049  74                 	db	116	;'t'
  2772  00F04A  73                 	db	115	;'s'
  2773  00F04B  0A                 	db	10
  2774  00F04C  0D                 	db	13
  2775  00F04D  00                 	db	0
  2776  00F04E                     STR_5:
  2777  00F04E  0A                 	db	10
  2778  00F04F  0D                 	db	13
  2779  00F050  48                 	db	72	;'H'
  2780  00F051  65                 	db	101	;'e'
  2781  00F052  6C                 	db	108	;'l'
  2782  00F053  70                 	db	112	;'p'
  2783  00F054  20                 	db	32
  2784  00F055  6D                 	db	109	;'m'
  2785  00F056  65                 	db	101	;'e'
  2786  00F057  73                 	db	115	;'s'
  2787  00F058  73                 	db	115	;'s'
  2788  00F059  61                 	db	97	;'a'
  2789  00F05A  67                 	db	103	;'g'
  2790  00F05B  65                 	db	101	;'e'
  2791  00F05C  73                 	db	115	;'s'
  2792  00F05D  20                 	db	32
  2793  00F05E  61                 	db	97	;'a'
  2794  00F05F  6E                 	db	110	;'n'
  2795  00F060  64                 	db	100	;'d'
  2796  00F061  20                 	db	32
  2797  00F062  6E                 	db	110	;'n'
  2798  00F063  65                 	db	101	;'e'
  2799  00F064  75                 	db	117	;'u'
  2800  00F065  74                 	db	116	;'t'
  2801  00F066  72                 	db	114	;'r'
  2802  00F067  61                 	db	97	;'a'
  2803  00F068  6C                 	db	108	;'l'
  2804  00F069  20                 	db	32
  2805  00F06A  72                 	db	114	;'r'
  2806  00F06B  65                 	db	101	;'e'
  2807  00F06C  73                 	db	115	;'s'
  2808  00F06D  70                 	db	112	;'p'
  2809  00F06E  6F                 	db	111	;'o'
  2810  00F06F  6E                 	db	110	;'n'
  2811  00F070  73                 	db	115	;'s'
  2812  00F071  65                 	db	101	;'e'
  2813  00F072  73                 	db	115	;'s'
  2814  00F073  20                 	db	32
  2815  00F074  61                 	db	97	;'a'
  2816  00F075  70                 	db	112	;'p'
  2817  00F076  70                 	db	112	;'p'
  2818  00F077  65                 	db	101	;'e'
  2819  00F078  61                 	db	97	;'a'
  2820  00F079  72                 	db	114	;'r'
  2821  00F07A  20                 	db	32
  2822  00F07B  69                 	db	105	;'i'
  2823  00F07C  6E                 	db	110	;'n'
  2824  00F07D  20                 	db	32
  2825  00F07E  79                 	db	121	;'y'
  2826  00F07F  65                 	db	101	;'e'
  2827  00F080  6C                 	db	108	;'l'
  2828  00F081  6C                 	db	108	;'l'
  2829  00F082  6F                 	db	111	;'o'
  2830  00F083  77                 	db	119	;'w'
  2831  00F084  0A                 	db	10
  2832  00F085  0D                 	db	13
  2833  00F086  00                 	db	0
  2834  00F087                     STR_269:
  2835  00F087  20                 	db	32
  2836  00F088  20                 	db	32
  2837  00F089  20                 	db	32
  2838  00F08A  20                 	db	32
  2839  00F08B  20                 	db	32
  2840  00F08C  20                 	db	32
  2841  00F08D  20                 	db	32
  2842  00F08E  20                 	db	32
  2843  00F08F  2B                 	db	43
  2844  00F090  35                 	db	53	;'5'
  2845  00F091  56                 	db	86	;'V'
  2846  00F092  20                 	db	32
  2847  00F093  43                 	db	67	;'C'
  2848  00F094  6F                 	db	111	;'o'
  2849  00F095  6E                 	db	110	;'n'
  2850  00F096  76                 	db	118	;'v'
  2851  00F097  65                 	db	101	;'e'
  2852  00F098  72                 	db	114	;'r'
  2853  00F099  74                 	db	116	;'t'
  2854  00F09A  65                 	db	101	;'e'
  2855  00F09B  72                 	db	114	;'r'
  2856  00F09C  20                 	db	32
  2857  00F09D  54                 	db	84	;'T'
  2858  00F09E  65                 	db	101	;'e'
  2859  00F09F  6D                 	db	109	;'m'
  2860  00F0A0  70                 	db	112	;'p'
  2861  00F0A1  65                 	db	101	;'e'
  2862  00F0A2  72                 	db	114	;'r'
  2863  00F0A3  61                 	db	97	;'a'
  2864  00F0A4  74                 	db	116	;'t'
  2865  00F0A5  75                 	db	117	;'u'
  2866  00F0A6  72                 	db	114	;'r'
  2867  00F0A7  65                 	db	101	;'e'
  2868  00F0A8  20                 	db	32
  2869  00F0A9  6D                 	db	109	;'m'
  2870  00F0AA  65                 	db	101	;'e'
  2871  00F0AB  61                 	db	97	;'a'
  2872  00F0AC  73                 	db	115	;'s'
  2873  00F0AD  75                 	db	117	;'u'
  2874  00F0AE  72                 	db	114	;'r'
  2875  00F0AF  65                 	db	101	;'e'
  2876  00F0B0  64                 	db	100	;'d'
  2877  00F0B1  20                 	db	32
  2878  00F0B2  61                 	db	97	;'a'
  2879  00F0B3  73                 	db	115	;'s'
  2880  00F0B4  20                 	db	32
  2881  00F0B5  25                 	db	37
  2882  00F0B6  2B                 	db	43
  2883  00F0B7  2E                 	db	46
  2884  00F0B8  33                 	db	51	;'3'
  2885  00F0B9  66                 	db	102	;'f'
  2886  00F0BA  20                 	db	32
  2887  00F0BB  43                 	db	67	;'C'
  2888  00F0BC  0A                 	db	10
  2889  00F0BD  0D                 	db	13
  2890  00F0BE  00                 	db	0
  2891  00F0BF                     STR_195:
  2892  00F0BF  20                 	db	32
  2893  00F0C0  20                 	db	32
  2894  00F0C1  20                 	db	32
  2895  00F0C2  20                 	db	32
  2896  00F0C3  54                 	db	84	;'T'
  2897  00F0C4  68                 	db	104	;'h'
  2898  00F0C5  65                 	db	101	;'e'
  2899  00F0C6  20                 	db	32
  2900  00F0C7  63                 	db	99	;'c'
  2901  00F0C8  61                 	db	97	;'a'
  2902  00F0C9  75                 	db	117	;'u'
  2903  00F0CA  73                 	db	115	;'s'
  2904  00F0CB  65                 	db	101	;'e'
  2905  00F0CC  20                 	db	32
  2906  00F0CD  6F                 	db	111	;'o'
  2907  00F0CE  66                 	db	102	;'f'
  2908  00F0CF  20                 	db	32
  2909  00F0D0  74                 	db	116	;'t'
  2910  00F0D1  68                 	db	104	;'h'
  2911  00F0D2  65                 	db	101	;'e'
  2912  00F0D3  20                 	db	32
  2913  00F0D4  6D                 	db	109	;'m'
  2914  00F0D5  6F                 	db	111	;'o'
  2915  00F0D6  73                 	db	115	;'s'
  2916  00F0D7  74                 	db	116	;'t'
  2917  00F0D8  20                 	db	32
  2918  00F0D9  72                 	db	114	;'r'
  2919  00F0DA  65                 	db	101	;'e'
  2920  00F0DB  63                 	db	99	;'c'
  2921  00F0DC  65                 	db	101	;'e'
  2922  00F0DD  6E                 	db	110	;'n'
  2923  00F0DE  74                 	db	116	;'t'
  2924  00F0DF  20                 	db	32
  2925  00F0E0  64                 	db	100	;'d'
  2926  00F0E1  65                 	db	101	;'e'
  2927  00F0E2  76                 	db	118	;'v'
  2928  00F0E3  69                 	db	105	;'i'
  2929  00F0E4  63                 	db	99	;'c'
  2930  00F0E5  65                 	db	101	;'e'
  2931  00F0E6  20                 	db	32
  2932  00F0E7  72                 	db	114	;'r'
  2933  00F0E8  65                 	db	101	;'e'
  2934  00F0E9  73                 	db	115	;'s'
  2935  00F0EA  65                 	db	101	;'e'
  2936  00F0EB  74                 	db	116	;'t'
  2937  00F0EC  20                 	db	32
  2938  00F0ED  77                 	db	119	;'w'
  2939  00F0EE  61                 	db	97	;'a'
  2940  00F0EF  73                 	db	115	;'s'
  2941  00F0F0  3A                 	db	58	;':'
  2942  00F0F1  20                 	db	32
  2943  00F0F2  25                 	db	37
  2944  00F0F3  73                 	db	115	;'s'
  2945  00F0F4  0A                 	db	10
  2946  00F0F5  0D                 	db	13
  2947  00F0F6  00                 	db	0
  2948  00F0F7                     STR_268:
  2949  00F0F7  20                 	db	32
  2950  00F0F8  20                 	db	32
  2951  00F0F9  20                 	db	32
  2952  00F0FA  20                 	db	32
  2953  00F0FB  20                 	db	32
  2954  00F0FC  20                 	db	32
  2955  00F0FD  20                 	db	32
  2956  00F0FE  20                 	db	32
  2957  00F0FF  51                 	db	81	;'Q'
  2958  00F100  49                 	db	73	;'I'
  2959  00F101  20                 	db	32
  2960  00F102  43                 	db	67	;'C'
  2961  00F103  6F                 	db	111	;'o'
  2962  00F104  6E                 	db	110	;'n'
  2963  00F105  76                 	db	118	;'v'
  2964  00F106  65                 	db	101	;'e'
  2965  00F107  72                 	db	114	;'r'
  2966  00F108  74                 	db	116	;'t'
  2967  00F109  65                 	db	101	;'e'
  2968  00F10A  72                 	db	114	;'r'
  2969  00F10B  20                 	db	32
  2970  00F10C  54                 	db	84	;'T'
  2971  00F10D  65                 	db	101	;'e'
  2972  00F10E  6D                 	db	109	;'m'
  2973  00F10F  70                 	db	112	;'p'
  2974  00F110  65                 	db	101	;'e'
  2975  00F111  72                 	db	114	;'r'
  2976  00F112  61                 	db	97	;'a'
  2977  00F113  74                 	db	116	;'t'
  2978  00F114  75                 	db	117	;'u'
  2979  00F115  72                 	db	114	;'r'
  2980  00F116  65                 	db	101	;'e'
  2981  00F117  20                 	db	32
  2982  00F118  6D                 	db	109	;'m'
  2983  00F119  65                 	db	101	;'e'
  2984  00F11A  61                 	db	97	;'a'
  2985  00F11B  73                 	db	115	;'s'
  2986  00F11C  75                 	db	117	;'u'
  2987  00F11D  72                 	db	114	;'r'
  2988  00F11E  65                 	db	101	;'e'
  2989  00F11F  64                 	db	100	;'d'
  2990  00F120  20                 	db	32
  2991  00F121  61                 	db	97	;'a'
  2992  00F122  73                 	db	115	;'s'
  2993  00F123  20                 	db	32
  2994  00F124  25                 	db	37
  2995  00F125  2B                 	db	43
  2996  00F126  2E                 	db	46
  2997  00F127  33                 	db	51	;'3'
  2998  00F128  66                 	db	102	;'f'
  2999  00F129  20                 	db	32
  3000  00F12A  43                 	db	67	;'C'
  3001  00F12B  0A                 	db	10
  3002  00F12C  0D                 	db	13
  3003  00F12D  00                 	db	0
  3004  00F12E                     STR_183:
  3005  00F12E  51                 	db	81	;'Q'
  3006  00F12F  49                 	db	73	;'I'
  3007  00F130  20                 	db	32
  3008  00F131  43                 	db	67	;'C'
  3009  00F132  68                 	db	104	;'h'
  3010  00F133  61                 	db	97	;'a'
  3011  00F134  72                 	db	114	;'r'
  3012  00F135  67                 	db	103	;'g'
  3013  00F136  65                 	db	101	;'e'
  3014  00F137  72                 	db	114	;'r'
  3015  00F138  20                 	db	32
  3016  00F139  77                 	db	119	;'w'
  3017  00F13A  69                 	db	105	;'i'
  3018  00F13B  74                 	db	116	;'t'
  3019  00F13C  68                 	db	104	;'h'
  3020  00F13D  20                 	db	32
  3021  00F13E  44                 	db	68	;'D'
  3022  00F13F  69                 	db	105	;'i'
  3023  00F140  67                 	db	103	;'g'
  3024  00F141  69                 	db	105	;'i'
  3025  00F142  74                 	db	116	;'t'
  3026  00F143  61                 	db	97	;'a'
  3027  00F144  6C                 	db	108	;'l'
  3028  00F145  20                 	db	32
  3029  00F146  4D                 	db	77	;'M'
  3030  00F147  6F                 	db	111	;'o'
  3031  00F148  6E                 	db	110	;'n'
  3032  00F149  69                 	db	105	;'i'
  3033  00F14A  74                 	db	116	;'t'
  3034  00F14B  6F                 	db	111	;'o'
  3035  00F14C  72                 	db	114	;'r'
  3036  00F14D  69                 	db	105	;'i'
  3037  00F14E  6E                 	db	110	;'n'
  3038  00F14F  67                 	db	103	;'g'
  3039  00F150  2C                 	db	44
  3040  00F151  20                 	db	32
  3041  00F152  62                 	db	98	;'b'
  3042  00F153  79                 	db	121	;'y'
  3043  00F154  20                 	db	32
  3044  00F155  44                 	db	68	;'D'
  3045  00F156  72                 	db	114	;'r'
  3046  00F157  65                 	db	101	;'e'
  3047  00F158  77                 	db	119	;'w'
  3048  00F159  20                 	db	32
  3049  00F15A  4D                 	db	77	;'M'
  3050  00F15B  61                 	db	97	;'a'
  3051  00F15C  61                 	db	97	;'a'
  3052  00F15D  74                 	db	116	;'t'
  3053  00F15E  6D                 	db	109	;'m'
  3054  00F15F  61                 	db	97	;'a'
  3055  00F160  6E                 	db	110	;'n'
  3056  00F161  0A                 	db	10
  3057  00F162  0D                 	db	13
  3058  00F163  00                 	db	0
  3059  00F164                     STR_197:
  3060  00F164  20                 	db	32
  3061  00F165  20                 	db	32
  3062  00F166  20                 	db	32
  3063  00F167  20                 	db	32
  3064  00F168  44                 	db	68	;'D'
  3065  00F169  65                 	db	101	;'e'
  3066  00F16A  76                 	db	118	;'v'
  3067  00F16B  69                 	db	105	;'i'
  3068  00F16C  63                 	db	99	;'c'
  3069  00F16D  65                 	db	101	;'e'
  3070  00F16E  20                 	db	32
  3071  00F16F  6F                 	db	111	;'o'
  3072  00F170  6E                 	db	110	;'n'
  3073  00F171  20                 	db	32
  3074  00F172  74                 	db	116	;'t'
  3075  00F173  69                 	db	105	;'i'
  3076  00F174  6D                 	db	109	;'m'
  3077  00F175  65                 	db	101	;'e'
  3078  00F176  20                 	db	32
  3079  00F177  73                 	db	115	;'s'
  3080  00F178  69                 	db	105	;'i'
  3081  00F179  6E                 	db	110	;'n'
  3082  00F17A  63                 	db	99	;'c'
  3083  00F17B  65                 	db	101	;'e'
  3084  00F17C  20                 	db	32
  3085  00F17D  6C                 	db	108	;'l'
  3086  00F17E  61                 	db	97	;'a'
  3087  00F17F  73                 	db	115	;'s'
  3088  00F180  74                 	db	116	;'t'
  3089  00F181  20                 	db	32
  3090  00F182  72                 	db	114	;'r'
  3091  00F183  65                 	db	101	;'e'
  3092  00F184  73                 	db	115	;'s'
  3093  00F185  65                 	db	101	;'e'
  3094  00F186  74                 	db	116	;'t'
  3095  00F187  20                 	db	32
  3096  00F188  63                 	db	99	;'c'
  3097  00F189  6F                 	db	111	;'o'
  3098  00F18A  6E                 	db	110	;'n'
  3099  00F18B  64                 	db	100	;'d'
  3100  00F18C  69                 	db	105	;'i'
  3101  00F18D  74                 	db	116	;'t'
  3102  00F18E  69                 	db	105	;'i'
  3103  00F18F  6F                 	db	111	;'o'
  3104  00F190  6E                 	db	110	;'n'
  3105  00F191  20                 	db	32
  3106  00F192  69                 	db	105	;'i'
  3107  00F193  73                 	db	115	;'s'
  3108  00F194  20                 	db	32
  3109  00F195  25                 	db	37
  3110  00F196  73                 	db	115	;'s'
  3111  00F197  0A                 	db	10
  3112  00F198  0D                 	db	13
  3113  00F199  00                 	db	0
  3114  00F19A                     STR_253:
  3115  00F19A  20                 	db	32
  3116  00F19B  20                 	db	32
  3117  00F19C  20                 	db	32
  3118  00F19D  20                 	db	32
  3119  00F19E  20                 	db	32
  3120  00F19F  20                 	db	32
  3121  00F1A0  20                 	db	32
  3122  00F1A1  20                 	db	32
  3123  00F1A2  51                 	db	81	;'Q'
  3124  00F1A3  49                 	db	73	;'I'
  3125  00F1A4  20                 	db	32
  3126  00F1A5  63                 	db	99	;'c'
  3127  00F1A6  6F                 	db	111	;'o'
  3128  00F1A7  6E                 	db	110	;'n'
  3129  00F1A8  76                 	db	118	;'v'
  3130  00F1A9  65                 	db	101	;'e'
  3131  00F1AA  72                 	db	114	;'r'
  3132  00F1AB  74                 	db	116	;'t'
  3133  00F1AC  65                 	db	101	;'e'
  3134  00F1AD  72                 	db	114	;'r'
  3135  00F1AE  20                 	db	32
  3136  00F1AF  63                 	db	99	;'c'
  3137  00F1B0  75                 	db	117	;'u'
  3138  00F1B1  72                 	db	114	;'r'
  3139  00F1B2  72                 	db	114	;'r'
  3140  00F1B3  65                 	db	101	;'e'
  3141  00F1B4  6E                 	db	110	;'n'
  3142  00F1B5  74                 	db	116	;'t'
  3143  00F1B6  20                 	db	32
  3144  00F1B7  6D                 	db	109	;'m'
  3145  00F1B8  65                 	db	101	;'e'
  3146  00F1B9  61                 	db	97	;'a'
  3147  00F1BA  73                 	db	115	;'s'
  3148  00F1BB  75                 	db	117	;'u'
  3149  00F1BC  72                 	db	114	;'r'
  3150  00F1BD  65                 	db	101	;'e'
  3151  00F1BE  64                 	db	100	;'d'
  3152  00F1BF  20                 	db	32
  3153  00F1C0  61                 	db	97	;'a'
  3154  00F1C1  73                 	db	115	;'s'
  3155  00F1C2  20                 	db	32
  3156  00F1C3  25                 	db	37
  3157  00F1C4  2B                 	db	43
  3158  00F1C5  2E                 	db	46
  3159  00F1C6  33                 	db	51	;'3'
  3160  00F1C7  66                 	db	102	;'f'
  3161  00F1C8  20                 	db	32
  3162  00F1C9  41                 	db	65	;'A'
  3163  00F1CA  6D                 	db	109	;'m'
  3164  00F1CB  70                 	db	112	;'p'
  3165  00F1CC  73                 	db	115	;'s'
  3166  00F1CD  0A                 	db	10
  3167  00F1CE  0D                 	db	13
  3168  00F1CF  00                 	db	0
  3169  00F1D0                     STR_225:
  3170  00F1D0  20                 	db	32
  3171  00F1D1  20                 	db	32
  3172  00F1D2  20                 	db	32
  3173  00F1D3  20                 	db	32
  3174  00F1D4  43                 	db	67	;'C'
  3175  00F1D5  61                 	db	97	;'a'
  3176  00F1D6  6C                 	db	108	;'l'
  3177  00F1D7  6C                 	db	108	;'l'
  3178  00F1D8  20                 	db	32
  3179  00F1D9  27                 	db	39
  3180  00F1DA  43                 	db	67	;'C'
  3181  00F1DB  6C                 	db	108	;'l'
  3182  00F1DC  65                 	db	101	;'e'
  3183  00F1DD  61                 	db	97	;'a'
  3184  00F1DE  72                 	db	114	;'r'
  3185  00F1DF  20                 	db	32
  3186  00F1E0  41                 	db	65	;'A'
  3187  00F1E1  44                 	db	68	;'D'
  3188  00F1E2  43                 	db	67	;'C'
  3189  00F1E3  20                 	db	32
  3190  00F1E4  45                 	db	69	;'E'
  3191  00F1E5  72                 	db	114	;'r'
  3192  00F1E6  72                 	db	114	;'r'
  3193  00F1E7  6F                 	db	111	;'o'
  3194  00F1E8  72                 	db	114	;'r'
  3195  00F1E9  73                 	db	115	;'s'
  3196  00F1EA  27                 	db	39
  3197  00F1EB  20                 	db	32
  3198  00F1EC  74                 	db	116	;'t'
  3199  00F1ED  6F                 	db	111	;'o'
  3200  00F1EE  20                 	db	32
  3201  00F1EF  63                 	db	99	;'c'
  3202  00F1F0  6C                 	db	108	;'l'
  3203  00F1F1  65                 	db	101	;'e'
  3204  00F1F2  61                 	db	97	;'a'
  3205  00F1F3  72                 	db	114	;'r'
  3206  00F1F4  20                 	db	32
  3207  00F1F5  41                 	db	65	;'A'
  3208  00F1F6  44                 	db	68	;'D'
  3209  00F1F7  43                 	db	67	;'C'
  3210  00F1F8  20                 	db	32
  3211  00F1F9  65                 	db	101	;'e'
  3212  00F1FA  72                 	db	114	;'r'
  3213  00F1FB  72                 	db	114	;'r'
  3214  00F1FC  6F                 	db	111	;'o'
  3215  00F1FD  72                 	db	114	;'r'
  3216  00F1FE  28                 	db	40
  3217  00F1FF  73                 	db	115	;'s'
  3218  00F200  29                 	db	41
  3219  00F201  0A                 	db	10
  3220  00F202  0D                 	db	13
  3221  00F203  00                 	db	0
  3222  00F204                     STR_252:
  3223  00F204  20                 	db	32
  3224  00F205  20                 	db	32
  3225  00F206  20                 	db	32
  3226  00F207  20                 	db	32
  3227  00F208  20                 	db	32
  3228  00F209  20                 	db	32
  3229  00F20A  20                 	db	32
  3230  00F20B  20                 	db	32
  3231  00F20C  2B                 	db	43
  3232  00F20D  31                 	db	49	;'1'
  3233  00F20E  32                 	db	50	;'2'
  3234  00F20F  56                 	db	86	;'V'
  3235  00F210  20                 	db	32
  3236  00F211  69                 	db	105	;'i'
  3237  00F212  6E                 	db	110	;'n'
  3238  00F213  70                 	db	112	;'p'
  3239  00F214  75                 	db	117	;'u'
  3240  00F215  74                 	db	116	;'t'
  3241  00F216  20                 	db	32
  3242  00F217  63                 	db	99	;'c'
  3243  00F218  75                 	db	117	;'u'
  3244  00F219  72                 	db	114	;'r'
  3245  00F21A  72                 	db	114	;'r'
  3246  00F21B  65                 	db	101	;'e'
  3247  00F21C  6E                 	db	110	;'n'
  3248  00F21D  74                 	db	116	;'t'
  3249  00F21E  20                 	db	32
  3250  00F21F  6D                 	db	109	;'m'
  3251  00F220  65                 	db	101	;'e'
  3252  00F221  61                 	db	97	;'a'
  3253  00F222  73                 	db	115	;'s'
  3254  00F223  75                 	db	117	;'u'
  3255  00F224  72                 	db	114	;'r'
  3256  00F225  65                 	db	101	;'e'
  3257  00F226  64                 	db	100	;'d'
  3258  00F227  20                 	db	32
  3259  00F228  61                 	db	97	;'a'
  3260  00F229  73                 	db	115	;'s'
  3261  00F22A  20                 	db	32
  3262  00F22B  25                 	db	37
  3263  00F22C  2B                 	db	43
  3264  00F22D  2E                 	db	46
  3265  00F22E  33                 	db	51	;'3'
  3266  00F22F  66                 	db	102	;'f'
  3267  00F230  20                 	db	32
  3268  00F231  41                 	db	65	;'A'
  3269  00F232  6D                 	db	109	;'m'
  3270  00F233  70                 	db	112	;'p'
  3271  00F234  73                 	db	115	;'s'
  3272  00F235  0A                 	db	10
  3273  00F236  0D                 	db	13
  3274  00F237  00                 	db	0
  3275  00F238                     STR_2:
  3276  00F238  51                 	db	81	;'Q'
  3277  00F239  49                 	db	73	;'I'
  3278  00F23A  20                 	db	32
  3279  00F23B  43                 	db	67	;'C'
  3280  00F23C  68                 	db	104	;'h'
  3281  00F23D  61                 	db	97	;'a'
  3282  00F23E  72                 	db	114	;'r'
  3283  00F23F  67                 	db	103	;'g'
  3284  00F240  65                 	db	101	;'e'
  3285  00F241  72                 	db	114	;'r'
  3286  00F242  20                 	db	32
  3287  00F243  77                 	db	119	;'w'
  3288  00F244  69                 	db	105	;'i'
  3289  00F245  74                 	db	116	;'t'
  3290  00F246  68                 	db	104	;'h'
  3291  00F247  20                 	db	32
  3292  00F248  44                 	db	68	;'D'
  3293  00F249  69                 	db	105	;'i'
  3294  00F24A  67                 	db	103	;'g'
  3295  00F24B  69                 	db	105	;'i'
  3296  00F24C  74                 	db	116	;'t'
  3297  00F24D  61                 	db	97	;'a'
  3298  00F24E  6C                 	db	108	;'l'
  3299  00F24F  20                 	db	32
  3300  00F250  4D                 	db	77	;'M'
  3301  00F251  6F                 	db	111	;'o'
  3302  00F252  6E                 	db	110	;'n'
  3303  00F253  69                 	db	105	;'i'
  3304  00F254  74                 	db	116	;'t'
  3305  00F255  6F                 	db	111	;'o'
  3306  00F256  72                 	db	114	;'r'
  3307  00F257  69                 	db	105	;'i'
  3308  00F258  6E                 	db	110	;'n'
  3309  00F259  67                 	db	103	;'g'
  3310  00F25A  0A                 	db	10
  3311  00F25B  0D                 	db	13
  3312  00F25C  42                 	db	66	;'B'
  3313  00F25D  6F                 	db	111	;'o'
  3314  00F25E  6F                 	db	111	;'o'
  3315  00F25F  74                 	db	116	;'t'
  3316  00F260  20                 	db	32
  3317  00F261  43                 	db	67	;'C'
  3318  00F262  6F                 	db	111	;'o'
  3319  00F263  6D                 	db	109	;'m'
  3320  00F264  70                 	db	112	;'p'
  3321  00F265  6C                 	db	108	;'l'
  3322  00F266  65                 	db	101	;'e'
  3323  00F267  74                 	db	116	;'t'
  3324  00F268  65                 	db	101	;'e'
  3325  00F269  0A                 	db	10
  3326  00F26A  0D                 	db	13
  3327  00F26B  00                 	db	0
  3328  00F26C                     STR_188:
  3329  00F26C  20                 	db	32
  3330  00F26D  20                 	db	32
  3331  00F26E  20                 	db	32
  3332  00F26F  20                 	db	32
  3333  00F270  44                 	db	68	;'D'
  3334  00F271  65                 	db	101	;'e'
  3335  00F272  76                 	db	118	;'v'
  3336  00F273  69                 	db	105	;'i'
  3337  00F274  63                 	db	99	;'c'
  3338  00F275  65                 	db	101	;'e'
  3339  00F276  20                 	db	32
  3340  00F277  49                 	db	73	;'I'
  3341  00F278  44                 	db	68	;'D'
  3342  00F279  20                 	db	32
  3343  00F27A  72                 	db	114	;'r'
  3344  00F27B  65                 	db	101	;'e'
  3345  00F27C  74                 	db	116	;'t'
  3346  00F27D  72                 	db	114	;'r'
  3347  00F27E  69                 	db	105	;'i'
  3348  00F27F  65                 	db	101	;'e'
  3349  00F280  76                 	db	118	;'v'
  3350  00F281  65                 	db	101	;'e'
  3351  00F282  64                 	db	100	;'d'
  3352  00F283  20                 	db	32
  3353  00F284  66                 	db	102	;'f'
  3354  00F285  72                 	db	114	;'r'
  3355  00F286  6F                 	db	111	;'o'
  3356  00F287  6D                 	db	109	;'m'
  3357  00F288  20                 	db	32
  3358  00F289  66                 	db	102	;'f'
  3359  00F28A  6C                 	db	108	;'l'
  3360  00F28B  61                 	db	97	;'a'
  3361  00F28C  73                 	db	115	;'s'
  3362  00F28D  68                 	db	104	;'h'
  3363  00F28E  3A                 	db	58	;':'
  3364  00F28F  20                 	db	32
  3365  00F290  25                 	db	37
  3366  00F291  73                 	db	115	;'s'
  3367  00F292  20                 	db	32
  3368  00F293  28                 	db	40
  3369  00F294  30                 	db	48	;'0'
  3370  00F295  78                 	db	120	;'x'
  3371  00F296  25                 	db	37
  3372  00F297  30                 	db	48	;'0'
  3373  00F298  34                 	db	52	;'4'
  3374  00F299  58                 	db	88	;'X'
  3375  00F29A  29                 	db	41
  3376  00F29B  0A                 	db	10
  3377  00F29C  0D                 	db	13
  3378  00F29D  00                 	db	0
  3379  00F29E                     STR_222:
  3380  00F29E  20                 	db	32
  3381  00F29F  20                 	db	32
  3382  00F2A0  20                 	db	32
  3383  00F2A1  20                 	db	32
  3384  00F2A2  54                 	db	84	;'T'
  3385  00F2A3  68                 	db	104	;'h'
  3386  00F2A4  65                 	db	101	;'e'
  3387  00F2A5  20                 	db	32
  3388  00F2A6  66                 	db	102	;'f'
  3389  00F2A7  6F                 	db	111	;'o'
  3390  00F2A8  6C                 	db	108	;'l'
  3391  00F2A9  6C                 	db	108	;'l'
  3392  00F2AA  6F                 	db	111	;'o'
  3393  00F2AB  77                 	db	119	;'w'
  3394  00F2AC  69                 	db	105	;'i'
  3395  00F2AD  6E                 	db	110	;'n'
  3396  00F2AE  67                 	db	103	;'g'
  3397  00F2AF  20                 	db	32
  3398  00F2B0  63                 	db	99	;'c'
  3399  00F2B1  68                 	db	104	;'h'
  3400  00F2B2  61                 	db	97	;'a'
  3401  00F2B3  6E                 	db	110	;'n'
  3402  00F2B4  6E                 	db	110	;'n'
  3403  00F2B5  65                 	db	101	;'e'
  3404  00F2B6  6C                 	db	108	;'l'
  3405  00F2B7  73                 	db	115	;'s'
  3406  00F2B8  20                 	db	32
  3407  00F2B9  63                 	db	99	;'c'
  3408  00F2BA  61                 	db	97	;'a'
  3409  00F2BB  75                 	db	117	;'u'
  3410  00F2BC  73                 	db	115	;'s'
  3411  00F2BD  65                 	db	101	;'e'
  3412  00F2BE  64                 	db	100	;'d'
  3413  00F2BF  20                 	db	32
  3414  00F2C0  61                 	db	97	;'a'
  3415  00F2C1  6E                 	db	110	;'n'
  3416  00F2C2  20                 	db	32
  3417  00F2C3  41                 	db	65	;'A'
  3418  00F2C4  44                 	db	68	;'D'
  3419  00F2C5  43                 	db	67	;'C'
  3420  00F2C6  20                 	db	32
  3421  00F2C7  65                 	db	101	;'e'
  3422  00F2C8  72                 	db	114	;'r'
  3423  00F2C9  72                 	db	114	;'r'
  3424  00F2CA  6F                 	db	111	;'o'
  3425  00F2CB  72                 	db	114	;'r'
  3426  00F2CC  3A                 	db	58	;':'
  3427  00F2CD  0A                 	db	10
  3428  00F2CE  0D                 	db	13
  3429  00F2CF  00                 	db	0
  3430  00F2D0                     STR_270:
  3431  00F2D0  20                 	db	32
  3432  00F2D1  20                 	db	32
  3433  00F2D2  20                 	db	32
  3434  00F2D3  20                 	db	32
  3435  00F2D4  20                 	db	32
  3436  00F2D5  20                 	db	32
  3437  00F2D6  20                 	db	32
  3438  00F2D7  20                 	db	32
  3439  00F2D8  41                 	db	65	;'A'
  3440  00F2D9  6D                 	db	109	;'m'
  3441  00F2DA  62                 	db	98	;'b'
  3442  00F2DB  69                 	db	105	;'i'
  3443  00F2DC  65                 	db	101	;'e'
  3444  00F2DD  6E                 	db	110	;'n'
  3445  00F2DE  74                 	db	116	;'t'
  3446  00F2DF  20                 	db	32
  3447  00F2E0  54                 	db	84	;'T'
  3448  00F2E1  65                 	db	101	;'e'
  3449  00F2E2  6D                 	db	109	;'m'
  3450  00F2E3  70                 	db	112	;'p'
  3451  00F2E4  65                 	db	101	;'e'
  3452  00F2E5  72                 	db	114	;'r'
  3453  00F2E6  61                 	db	97	;'a'
  3454  00F2E7  74                 	db	116	;'t'
  3455  00F2E8  75                 	db	117	;'u'
  3456  00F2E9  72                 	db	114	;'r'
  3457  00F2EA  65                 	db	101	;'e'
  3458  00F2EB  20                 	db	32
  3459  00F2EC  6D                 	db	109	;'m'
  3460  00F2ED  65                 	db	101	;'e'
  3461  00F2EE  61                 	db	97	;'a'
  3462  00F2EF  73                 	db	115	;'s'
  3463  00F2F0  75                 	db	117	;'u'
  3464  00F2F1  72                 	db	114	;'r'
  3465  00F2F2  65                 	db	101	;'e'
  3466  00F2F3  64                 	db	100	;'d'
  3467  00F2F4  20                 	db	32
  3468  00F2F5  61                 	db	97	;'a'
  3469  00F2F6  73                 	db	115	;'s'
  3470  00F2F7  20                 	db	32
  3471  00F2F8  25                 	db	37
  3472  00F2F9  2B                 	db	43
  3473  00F2FA  2E                 	db	46
  3474  00F2FB  33                 	db	51	;'3'
  3475  00F2FC  66                 	db	102	;'f'
  3476  00F2FD  20                 	db	32
  3477  00F2FE  43                 	db	67	;'C'
  3478  00F2FF  0A                 	db	10
  3479  00F300  0D                 	db	13
  3480  00F301  00                 	db	0
  3481  00F302                     STR_243:
  3482  00F302  20                 	db	32
  3483  00F303  20                 	db	32
  3484  00F304  20                 	db	32
  3485  00F305  20                 	db	32
  3486  00F306  51                 	db	81	;'Q'
  3487  00F307  49                 	db	73	;'I'
  3488  00F308  20                 	db	32
  3489  00F309  77                 	db	119	;'w'
  3490  00F30A  69                 	db	105	;'i'
  3491  00F30B  72                 	db	114	;'r'
  3492  00F30C  65                 	db	101	;'e'
  3493  00F30D  6C                 	db	108	;'l'
  3494  00F30E  65                 	db	101	;'e'
  3495  00F30F  73                 	db	115	;'s'
  3496  00F310  73                 	db	115	;'s'
  3497  00F311  20                 	db	32
  3498  00F312  70                 	db	112	;'p'
  3499  00F313  6F                 	db	111	;'o'
  3500  00F314  77                 	db	119	;'w'
  3501  00F315  65                 	db	101	;'e'
  3502  00F316  72                 	db	114	;'r'
  3503  00F317  20                 	db	32
  3504  00F318  63                 	db	99	;'c'
  3505  00F319  6F                 	db	111	;'o'
  3506  00F31A  6E                 	db	110	;'n'
  3507  00F31B  76                 	db	118	;'v'
  3508  00F31C  65                 	db	101	;'e'
  3509  00F31D  72                 	db	114	;'r'
  3510  00F31E  74                 	db	116	;'t'
  3511  00F31F  65                 	db	101	;'e'
  3512  00F320  72                 	db	114	;'r'
  3513  00F321  20                 	db	32
  3514  00F322  69                 	db	105	;'i'
  3515  00F323  73                 	db	115	;'s'
  3516  00F324  20                 	db	32
  3517  00F325  63                 	db	99	;'c'
  3518  00F326  75                 	db	117	;'u'
  3519  00F327  72                 	db	114	;'r'
  3520  00F328  72                 	db	114	;'r'
  3521  00F329  65                 	db	101	;'e'
  3522  00F32A  6E                 	db	110	;'n'
  3523  00F32B  74                 	db	116	;'t'
  3524  00F32C  6C                 	db	108	;'l'
  3525  00F32D  79                 	db	121	;'y'
  3526  00F32E  20                 	db	32
  3527  00F32F  25                 	db	37
  3528  00F330  73                 	db	115	;'s'
  3529  00F331  0A                 	db	10
  3530  00F332  0D                 	db	13
  3531  00F333  00                 	db	0
  3532  00F334                     STR_239:
  3533  00F334  53                 	db	83	;'S'
  3534  00F335  79                 	db	121	;'y'
  3535  00F336  73                 	db	115	;'s'
  3536  00F337  74                 	db	116	;'t'
  3537  00F338  65                 	db	101	;'e'
  3538  00F339  6D                 	db	109	;'m'
  3539  00F33A  20                 	db	32
  3540  00F33B  4D                 	db	77	;'M'
  3541  00F33C  65                 	db	101	;'e'
  3542  00F33D  61                 	db	97	;'a'
  3543  00F33E  73                 	db	115	;'s'
  3544  00F33F  75                 	db	117	;'u'
  3545  00F340  72                 	db	114	;'r'
  3546  00F341  65                 	db	101	;'e'
  3547  00F342  6D                 	db	109	;'m'
  3548  00F343  65                 	db	101	;'e'
  3549  00F344  6E                 	db	110	;'n'
  3550  00F345  74                 	db	116	;'t'
  3551  00F346  73                 	db	115	;'s'
  3552  00F347  20                 	db	32
  3553  00F348  61                 	db	97	;'a'
  3554  00F349  74                 	db	116	;'t'
  3555  00F34A  20                 	db	32
  3556  00F34B  74                 	db	116	;'t'
  3557  00F34C  69                 	db	105	;'i'
  3558  00F34D  6D                 	db	109	;'m'
  3559  00F34E  65                 	db	101	;'e'
  3560  00F34F  20                 	db	32
  3561  00F350  6F                 	db	111	;'o'
  3562  00F351  66                 	db	102	;'f'
  3563  00F352  20                 	db	32
  3564  00F353  63                 	db	99	;'c'
  3565  00F354  6F                 	db	111	;'o'
  3566  00F355  6D                 	db	109	;'m'
  3567  00F356  6D                 	db	109	;'m'
  3568  00F357  61                 	db	97	;'a'
  3569  00F358  6E                 	db	110	;'n'
  3570  00F359  64                 	db	100	;'d'
  3571  00F35A  20                 	db	32
  3572  00F35B  63                 	db	99	;'c'
  3573  00F35C  61                 	db	97	;'a'
  3574  00F35D  6C                 	db	108	;'l'
  3575  00F35E  6C                 	db	108	;'l'
  3576  00F35F  3A                 	db	58	;':'
  3577  00F360  0A                 	db	10
  3578  00F361  0D                 	db	13
  3579  00F362  00                 	db	0
  3580  00F363                     STR_10:
  3581  00F363  0A                 	db	10
  3582  00F364  0D                 	db	13
  3583  00F365  43                 	db	67	;'C'
  3584  00F366  61                 	db	97	;'a'
  3585  00F367  6C                 	db	108	;'l'
  3586  00F368  6C                 	db	108	;'l'
  3587  00F369  20                 	db	32
  3588  00F36A  27                 	db	39
  3589  00F36B  48                 	db	72	;'H'
  3590  00F36C  65                 	db	101	;'e'
  3591  00F36D  6C                 	db	108	;'l'
  3592  00F36E  70                 	db	112	;'p'
  3593  00F36F  27                 	db	39
  3594  00F370  20                 	db	32
  3595  00F371  66                 	db	102	;'f'
  3596  00F372  6F                 	db	111	;'o'
  3597  00F373  72                 	db	114	;'r'
  3598  00F374  20                 	db	32
  3599  00F375  6C                 	db	108	;'l'
  3600  00F376  69                 	db	105	;'i'
  3601  00F377  73                 	db	115	;'s'
  3602  00F378  74                 	db	116	;'t'
  3603  00F379  20                 	db	32
  3604  00F37A  6F                 	db	111	;'o'
  3605  00F37B  66                 	db	102	;'f'
  3606  00F37C  20                 	db	32
  3607  00F37D  73                 	db	115	;'s'
  3608  00F37E  75                 	db	117	;'u'
  3609  00F37F  70                 	db	112	;'p'
  3610  00F380  70                 	db	112	;'p'
  3611  00F381  6F                 	db	111	;'o'
  3612  00F382  72                 	db	114	;'r'
  3613  00F383  74                 	db	116	;'t'
  3614  00F384  65                 	db	101	;'e'
  3615  00F385  64                 	db	100	;'d'
  3616  00F386  20                 	db	32
  3617  00F387  63                 	db	99	;'c'
  3618  00F388  6F                 	db	111	;'o'
  3619  00F389  6D                 	db	109	;'m'
  3620  00F38A  6D                 	db	109	;'m'
  3621  00F38B  61                 	db	97	;'a'
  3622  00F38C  6E                 	db	110	;'n'
  3623  00F38D  64                 	db	100	;'d'
  3624  00F38E  73                 	db	115	;'s'
  3625  00F38F  0A                 	db	10
  3626  00F390  0D                 	db	13
  3627  00F391  00                 	db	0
  3628  00F392                     STR_227:
  3629  00F392  20                 	db	32
  3630  00F393  20                 	db	32
  3631  00F394  20                 	db	32
  3632  00F395  20                 	db	32
  3633  00F396  54                 	db	84	;'T'
  3634  00F397  68                 	db	104	;'h'
  3635  00F398  65                 	db	101	;'e'
  3636  00F399  20                 	db	32
  3637  00F39A  66                 	db	102	;'f'
  3638  00F39B  6F                 	db	111	;'o'
  3639  00F39C  6C                 	db	108	;'l'
  3640  00F39D  6C                 	db	108	;'l'
  3641  00F39E  6F                 	db	111	;'o'
  3642  00F39F  77                 	db	119	;'w'
  3643  00F3A0  69                 	db	105	;'i'
  3644  00F3A1  6E                 	db	110	;'n'
  3645  00F3A2  67                 	db	103	;'g'
  3646  00F3A3  20                 	db	32
  3647  00F3A4  49                 	db	73	;'I'
  3648  00F3A5  32                 	db	50	;'2'
  3649  00F3A6  43                 	db	67	;'C'
  3650  00F3A7  20                 	db	32
  3651  00F3A8  45                 	db	69	;'E'
  3652  00F3A9  72                 	db	114	;'r'
  3653  00F3AA  72                 	db	114	;'r'
  3654  00F3AB  6F                 	db	111	;'o'
  3655  00F3AC  72                 	db	114	;'r'
  3656  00F3AD  73                 	db	115	;'s'
  3657  00F3AE  20                 	db	32
  3658  00F3AF  77                 	db	119	;'w'
  3659  00F3B0  65                 	db	101	;'e'
  3660  00F3B1  72                 	db	114	;'r'
  3661  00F3B2  65                 	db	101	;'e'
  3662  00F3B3  20                 	db	32
  3663  00F3B4  64                 	db	100	;'d'
  3664  00F3B5  65                 	db	101	;'e'
  3665  00F3B6  74                 	db	116	;'t'
  3666  00F3B7  65                 	db	101	;'e'
  3667  00F3B8  63                 	db	99	;'c'
  3668  00F3B9  74                 	db	116	;'t'
  3669  00F3BA  65                 	db	101	;'e'
  3670  00F3BB  64                 	db	100	;'d'
  3671  00F3BC  3A                 	db	58	;':'
  3672  00F3BD  0A                 	db	10
  3673  00F3BE  0D                 	db	13
  3674  00F3BF  00                 	db	0
  3675  00F3C0                     STR_245:
  3676  00F3C0  20                 	db	32
  3677  00F3C1  20                 	db	32
  3678  00F3C2  20                 	db	32
  3679  00F3C3  20                 	db	32
  3680  00F3C4  53                 	db	83	;'S'
  3681  00F3C5  79                 	db	121	;'y'
  3682  00F3C6  73                 	db	115	;'s'
  3683  00F3C7  74                 	db	116	;'t'
  3684  00F3C8  65                 	db	101	;'e'
  3685  00F3C9  6D                 	db	109	;'m'
  3686  00F3CA  20                 	db	32
  3687  00F3CB  68                 	db	104	;'h'
  3688  00F3CC  61                 	db	97	;'a'
  3689  00F3CD  73                 	db	115	;'s'
  3690  00F3CE  20                 	db	32
  3691  00F3CF  62                 	db	98	;'b'
  3692  00F3D0  65                 	db	101	;'e'
  3693  00F3D1  65                 	db	101	;'e'
  3694  00F3D2  6E                 	db	110	;'n'
  3695  00F3D3  20                 	db	32
  3696  00F3D4  63                 	db	99	;'c'
  3697  00F3D5  68                 	db	104	;'h'
  3698  00F3D6  61                 	db	97	;'a'
  3699  00F3D7  72                 	db	114	;'r'
  3700  00F3D8  67                 	db	103	;'g'
  3701  00F3D9  69                 	db	105	;'i'
  3702  00F3DA  6E                 	db	110	;'n'
  3703  00F3DB  67                 	db	103	;'g'
  3704  00F3DC  20                 	db	32
  3705  00F3DD  61                 	db	97	;'a'
  3706  00F3DE  20                 	db	32
  3707  00F3DF  70                 	db	112	;'p'
  3708  00F3E0  68                 	db	104	;'h'
  3709  00F3E1  6F                 	db	111	;'o'
  3710  00F3E2  6E                 	db	110	;'n'
  3711  00F3E3  65                 	db	101	;'e'
  3712  00F3E4  20                 	db	32
  3713  00F3E5  66                 	db	102	;'f'
  3714  00F3E6  6F                 	db	111	;'o'
  3715  00F3E7  72                 	db	114	;'r'
  3716  00F3E8  20                 	db	32
  3717  00F3E9  25                 	db	37
  3718  00F3EA  73                 	db	115	;'s'
  3719  00F3EB  0A                 	db	10
  3720  00F3EC  0D                 	db	13
  3721  00F3ED  00                 	db	0
  3722  00F3EE                     STR_8:
  3723  00F3EE  45                 	db	69	;'E'
  3724  00F3EF  72                 	db	114	;'r'
  3725  00F3F0  72                 	db	114	;'r'
  3726  00F3F1  6F                 	db	111	;'o'
  3727  00F3F2  72                 	db	114	;'r'
  3728  00F3F3  73                 	db	115	;'s'
  3729  00F3F4  20                 	db	32
  3730  00F3F5  61                 	db	97	;'a'
  3731  00F3F6  6E                 	db	110	;'n'
  3732  00F3F7  64                 	db	100	;'d'
  3733  00F3F8  20                 	db	32
  3734  00F3F9  6E                 	db	110	;'n'
  3735  00F3FA  65                 	db	101	;'e'
  3736  00F3FB  67                 	db	103	;'g'
  3737  00F3FC  61                 	db	97	;'a'
  3738  00F3FD  74                 	db	116	;'t'
  3739  00F3FE  69                 	db	105	;'i'
  3740  00F3FF  76                 	db	118	;'v'
  3741  00F400  65                 	db	101	;'e'
  3742  00F401  20                 	db	32
  3743  00F402  72                 	db	114	;'r'
  3744  00F403  65                 	db	101	;'e'
  3745  00F404  73                 	db	115	;'s'
  3746  00F405  70                 	db	112	;'p'
  3747  00F406  6F                 	db	111	;'o'
  3748  00F407  6E                 	db	110	;'n'
  3749  00F408  73                 	db	115	;'s'
  3750  00F409  65                 	db	101	;'e'
  3751  00F40A  73                 	db	115	;'s'
  3752  00F40B  20                 	db	32
  3753  00F40C  61                 	db	97	;'a'
  3754  00F40D  70                 	db	112	;'p'
  3755  00F40E  70                 	db	112	;'p'
  3756  00F40F  65                 	db	101	;'e'
  3757  00F410  61                 	db	97	;'a'
  3758  00F411  72                 	db	114	;'r'
  3759  00F412  20                 	db	32
  3760  00F413  69                 	db	105	;'i'
  3761  00F414  6E                 	db	110	;'n'
  3762  00F415  20                 	db	32
  3763  00F416  72                 	db	114	;'r'
  3764  00F417  65                 	db	101	;'e'
  3765  00F418  64                 	db	100	;'d'
  3766  00F419  0A                 	db	10
  3767  00F41A  0D                 	db	13
  3768  00F41B  00                 	db	0
  3769  00F41C                     STR_259:
  3770  00F41C  20                 	db	32
  3771  00F41D  20                 	db	32
  3772  00F41E  20                 	db	32
  3773  00F41F  20                 	db	32
  3774  00F420  53                 	db	83	;'S'
  3775  00F421  79                 	db	121	;'y'
  3776  00F422  73                 	db	115	;'s'
  3777  00F423  74                 	db	116	;'t'
  3778  00F424  65                 	db	101	;'e'
  3779  00F425  6D                 	db	109	;'m'
  3780  00F426  20                 	db	32
  3781  00F427  45                 	db	69	;'E'
  3782  00F428  66                 	db	102	;'f'
  3783  00F429  66                 	db	102	;'f'
  3784  00F42A  69                 	db	105	;'i'
  3785  00F42B  63                 	db	99	;'c'
  3786  00F42C  69                 	db	105	;'i'
  3787  00F42D  65                 	db	101	;'e'
  3788  00F42E  6E                 	db	110	;'n'
  3789  00F42F  63                 	db	99	;'c'
  3790  00F430  79                 	db	121	;'y'
  3791  00F431  20                 	db	32
  3792  00F432  63                 	db	99	;'c'
  3793  00F433  61                 	db	97	;'a'
  3794  00F434  6C                 	db	108	;'l'
  3795  00F435  63                 	db	99	;'c'
  3796  00F436  75                 	db	117	;'u'
  3797  00F437  6C                 	db	108	;'l'
  3798  00F438  61                 	db	97	;'a'
  3799  00F439  74                 	db	116	;'t'
  3800  00F43A  65                 	db	101	;'e'
  3801  00F43B  64                 	db	100	;'d'
  3802  00F43C  20                 	db	32
  3803  00F43D  61                 	db	97	;'a'
  3804  00F43E  73                 	db	115	;'s'
  3805  00F43F  20                 	db	32
  3806  00F440  25                 	db	37
  3807  00F441  2E                 	db	46
  3808  00F442  33                 	db	51	;'3'
  3809  00F443  66                 	db	102	;'f'
  3810  00F444  25                 	db	37
  3811  00F445  25                 	db	37
  3812  00F446  0A                 	db	10
  3813  00F447  0D                 	db	13
  3814  00F448  00                 	db	0
  3815  00F449                     STR_186:
  3816  00F449  44                 	db	68	;'D'
  3817  00F44A  69                 	db	105	;'i'
  3818  00F44B  67                 	db	103	;'g'
  3819  00F44C  69                 	db	105	;'i'
  3820  00F44D  74                 	db	116	;'t'
  3821  00F44E  61                 	db	97	;'a'
  3822  00F44F  6C                 	db	108	;'l'
  3823  00F450  20                 	db	32
  3824  00F451  4D                 	db	77	;'M'
  3825  00F452  6F                 	db	111	;'o'
  3826  00F453  6E                 	db	110	;'n'
  3827  00F454  69                 	db	105	;'i'
  3828  00F455  74                 	db	116	;'t'
  3829  00F456  6F                 	db	111	;'o'
  3830  00F457  72                 	db	114	;'r'
  3831  00F458  69                 	db	105	;'i'
  3832  00F459  6E                 	db	110	;'n'
  3833  00F45A  67                 	db	103	;'g'
  3834  00F45B  20                 	db	32
  3835  00F45C  4D                 	db	77	;'M'
  3836  00F45D  69                 	db	105	;'i'
  3837  00F45E  63                 	db	99	;'c'
  3838  00F45F  72                 	db	114	;'r'
  3839  00F460  6F                 	db	111	;'o'
  3840  00F461  63                 	db	99	;'c'
  3841  00F462  6F                 	db	111	;'o'
  3842  00F463  6E                 	db	110	;'n'
  3843  00F464  74                 	db	116	;'t'
  3844  00F465  72                 	db	114	;'r'
  3845  00F466  6F                 	db	111	;'o'
  3846  00F467  6C                 	db	108	;'l'
  3847  00F468  6C                 	db	108	;'l'
  3848  00F469  65                 	db	101	;'e'
  3849  00F46A  72                 	db	114	;'r'
  3850  00F46B  20                 	db	32
  3851  00F46C  53                 	db	83	;'S'
  3852  00F46D  74                 	db	116	;'t'
  3853  00F46E  61                 	db	97	;'a'
  3854  00F46F  74                 	db	116	;'t'
  3855  00F470  75                 	db	117	;'u'
  3856  00F471  73                 	db	115	;'s'
  3857  00F472  3A                 	db	58	;':'
  3858  00F473  0A                 	db	10
  3859  00F474  0D                 	db	13
  3860  00F475  00                 	db	0
  3861  00F476                     STR_248:
  3862  00F476  20                 	db	32
  3863  00F477  20                 	db	32
  3864  00F478  20                 	db	32
  3865  00F479  20                 	db	32
  3866  00F47A  20                 	db	32
  3867  00F47B  20                 	db	32
  3868  00F47C  20                 	db	32
  3869  00F47D  20                 	db	32
  3870  00F47E  2B                 	db	43
  3871  00F47F  31                 	db	49	;'1'
  3872  00F480  32                 	db	50	;'2'
  3873  00F481  56                 	db	86	;'V'
  3874  00F482  20                 	db	32
  3875  00F483  72                 	db	114	;'r'
  3876  00F484  61                 	db	97	;'a'
  3877  00F485  69                 	db	105	;'i'
  3878  00F486  6C                 	db	108	;'l'
  3879  00F487  20                 	db	32
  3880  00F488  6D                 	db	109	;'m'
  3881  00F489  65                 	db	101	;'e'
  3882  00F48A  61                 	db	97	;'a'
  3883  00F48B  73                 	db	115	;'s'
  3884  00F48C  75                 	db	117	;'u'
  3885  00F48D  72                 	db	114	;'r'
  3886  00F48E  65                 	db	101	;'e'
  3887  00F48F  64                 	db	100	;'d'
  3888  00F490  20                 	db	32
  3889  00F491  61                 	db	97	;'a'
  3890  00F492  73                 	db	115	;'s'
  3891  00F493  20                 	db	32
  3892  00F494  25                 	db	37
  3893  00F495  2B                 	db	43
  3894  00F496  2E                 	db	46
  3895  00F497  33                 	db	51	;'3'
  3896  00F498  66                 	db	102	;'f'
  3897  00F499  20                 	db	32
  3898  00F49A  56                 	db	86	;'V'
  3899  00F49B  6F                 	db	111	;'o'
  3900  00F49C  6C                 	db	108	;'l'
  3901  00F49D  74                 	db	116	;'t'
  3902  00F49E  73                 	db	115	;'s'
  3903  00F49F  0A                 	db	10
  3904  00F4A0  0D                 	db	13
  3905  00F4A1  00                 	db	0
  3906  00F4A2                     STR_3:
  3907  00F4A2  43                 	db	67	;'C'
  3908  00F4A3  61                 	db	97	;'a'
  3909  00F4A4  75                 	db	117	;'u'
  3910  00F4A5  73                 	db	115	;'s'
  3911  00F4A6  65                 	db	101	;'e'
  3912  00F4A7  20                 	db	32
  3913  00F4A8  6F                 	db	111	;'o'
  3914  00F4A9  66                 	db	102	;'f'
  3915  00F4AA  20                 	db	32
  3916  00F4AB  6D                 	db	109	;'m'
  3917  00F4AC  6F                 	db	111	;'o'
  3918  00F4AD  73                 	db	115	;'s'
  3919  00F4AE  74                 	db	116	;'t'
  3920  00F4AF  20                 	db	32
  3921  00F4B0  72                 	db	114	;'r'
  3922  00F4B1  65                 	db	101	;'e'
  3923  00F4B2  63                 	db	99	;'c'
  3924  00F4B3  65                 	db	101	;'e'
  3925  00F4B4  6E                 	db	110	;'n'
  3926  00F4B5  74                 	db	116	;'t'
  3927  00F4B6  20                 	db	32
  3928  00F4B7  64                 	db	100	;'d'
  3929  00F4B8  65                 	db	101	;'e'
  3930  00F4B9  76                 	db	118	;'v'
  3931  00F4BA  69                 	db	105	;'i'
  3932  00F4BB  63                 	db	99	;'c'
  3933  00F4BC  65                 	db	101	;'e'
  3934  00F4BD  20                 	db	32
  3935  00F4BE  72                 	db	114	;'r'
  3936  00F4BF  65                 	db	101	;'e'
  3937  00F4C0  73                 	db	115	;'s'
  3938  00F4C1  65                 	db	101	;'e'
  3939  00F4C2  74                 	db	116	;'t'
  3940  00F4C3  20                 	db	32
  3941  00F4C4  77                 	db	119	;'w'
  3942  00F4C5  61                 	db	97	;'a'
  3943  00F4C6  73                 	db	115	;'s'
  3944  00F4C7  3A                 	db	58	;':'
  3945  00F4C8  20                 	db	32
  3946  00F4C9  25                 	db	37
  3947  00F4CA  73                 	db	115	;'s'
  3948  00F4CB  0A                 	db	10
  3949  00F4CC  0D                 	db	13
  3950  00F4CD  00                 	db	0
  3951  00F4CE                     STR_249:
  3952  00F4CE  20                 	db	32
  3953  00F4CF  20                 	db	32
  3954  00F4D0  20                 	db	32
  3955  00F4D1  20                 	db	32
  3956  00F4D2  20                 	db	32
  3957  00F4D3  20                 	db	32
  3958  00F4D4  20                 	db	32
  3959  00F4D5  20                 	db	32
  3960  00F4D6  2B                 	db	43
  3961  00F4D7  35                 	db	53	;'5'
  3962  00F4D8  56                 	db	86	;'V'
  3963  00F4D9  20                 	db	32
  3964  00F4DA  72                 	db	114	;'r'
  3965  00F4DB  61                 	db	97	;'a'
  3966  00F4DC  69                 	db	105	;'i'
  3967  00F4DD  6C                 	db	108	;'l'
  3968  00F4DE  20                 	db	32
  3969  00F4DF  6D                 	db	109	;'m'
  3970  00F4E0  65                 	db	101	;'e'
  3971  00F4E1  61                 	db	97	;'a'
  3972  00F4E2  73                 	db	115	;'s'
  3973  00F4E3  75                 	db	117	;'u'
  3974  00F4E4  72                 	db	114	;'r'
  3975  00F4E5  65                 	db	101	;'e'
  3976  00F4E6  64                 	db	100	;'d'
  3977  00F4E7  20                 	db	32
  3978  00F4E8  61                 	db	97	;'a'
  3979  00F4E9  73                 	db	115	;'s'
  3980  00F4EA  20                 	db	32
  3981  00F4EB  25                 	db	37
  3982  00F4EC  2B                 	db	43
  3983  00F4ED  2E                 	db	46
  3984  00F4EE  33                 	db	51	;'3'
  3985  00F4EF  66                 	db	102	;'f'
  3986  00F4F0  20                 	db	32
  3987  00F4F1  56                 	db	86	;'V'
  3988  00F4F2  6F                 	db	111	;'o'
  3989  00F4F3  6C                 	db	108	;'l'
  3990  00F4F4  74                 	db	116	;'t'
  3991  00F4F5  73                 	db	115	;'s'
  3992  00F4F6  0A                 	db	10
  3993  00F4F7  0D                 	db	13
  3994  00F4F8  00                 	db	0
  3995  00F4F9                     STR_262:
  3996  00F4F9  20                 	db	32
  3997  00F4FA  20                 	db	32
  3998  00F4FB  20                 	db	32
  3999  00F4FC  20                 	db	32
  4000  00F4FD  20                 	db	32
  4001  00F4FE  20                 	db	32
  4002  00F4FF  20                 	db	32
  4003  00F500  20                 	db	32
  4004  00F501  50                 	db	80	;'P'
  4005  00F502  4F                 	db	79	;'O'
  4006  00F503  53                 	db	83	;'S'
  4007  00F504  35                 	db	53	;'5'
  4008  00F505  20                 	db	32
  4009  00F506  43                 	db	67	;'C'
  4010  00F507  6F                 	db	111	;'o'
  4011  00F508  6E                 	db	110	;'n'
  4012  00F509  76                 	db	118	;'v'
  4013  00F50A  65                 	db	101	;'e'
  4014  00F50B  72                 	db	114	;'r'
  4015  00F50C  74                 	db	116	;'t'
  4016  00F50D  65                 	db	101	;'e'
  4017  00F50E  72                 	db	114	;'r'
  4018  00F50F  20                 	db	32
  4019  00F510  69                 	db	105	;'i'
  4020  00F511  73                 	db	115	;'s'
  4021  00F512  20                 	db	32
  4022  00F513  69                 	db	105	;'i'
  4023  00F514  6E                 	db	110	;'n'
  4024  00F515  20                 	db	32
  4025  00F516  42                 	db	66	;'B'
  4026  00F517  75                 	db	117	;'u'
  4027  00F518  72                 	db	114	;'r'
  4028  00F519  73                 	db	115	;'s'
  4029  00F51A  74                 	db	116	;'t'
  4030  00F51B  20                 	db	32
  4031  00F51C  4D                 	db	77	;'M'
  4032  00F51D  6F                 	db	111	;'o'
  4033  00F51E  64                 	db	100	;'d'
  4034  00F51F  65                 	db	101	;'e'
  4035  00F520  0A                 	db	10
  4036  00F521  0D                 	db	13
  4037  00F522  00                 	db	0
  4038  00F523                     STR_26:
  4039  00F523  57                 	db	87	;'W'
  4040  00F524  69                 	db	105	;'i'
  4041  00F525  6E                 	db	110	;'n'
  4042  00F526  64                 	db	100	;'d'
  4043  00F527  6F                 	db	111	;'o'
  4044  00F528  77                 	db	119	;'w'
  4045  00F529  65                 	db	101	;'e'
  4046  00F52A  64                 	db	100	;'d'
  4047  00F52B  20                 	db	32
  4048  00F52C  57                 	db	87	;'W'
  4049  00F52D  61                 	db	97	;'a'
  4050  00F52E  74                 	db	116	;'t'
  4051  00F52F  63                 	db	99	;'c'
  4052  00F530  68                 	db	104	;'h'
  4053  00F531  20                 	db	32
  4054  00F532  44                 	db	68	;'D'
  4055  00F533  6F                 	db	111	;'o'
  4056  00F534  67                 	db	103	;'g'
  4057  00F535  20                 	db	32
  4058  00F536  54                 	db	84	;'T'
  4059  00F537  69                 	db	105	;'i'
  4060  00F538  6D                 	db	109	;'m'
  4061  00F539  65                 	db	101	;'e'
  4062  00F53A  72                 	db	114	;'r'
  4063  00F53B  20                 	db	32
  4064  00F53C  56                 	db	86	;'V'
  4065  00F53D  69                 	db	105	;'i'
  4066  00F53E  6F                 	db	111	;'o'
  4067  00F53F  6C                 	db	108	;'l'
  4068  00F540  61                 	db	97	;'a'
  4069  00F541  74                 	db	116	;'t'
  4070  00F542  69                 	db	105	;'i'
  4071  00F543  6F                 	db	111	;'o'
  4072  00F544  6E                 	db	110	;'n'
  4073  00F545  20                 	db	32
  4074  00F546  52                 	db	82	;'R'
  4075  00F547  65                 	db	101	;'e'
  4076  00F548  73                 	db	115	;'s'
  4077  00F549  65                 	db	101	;'e'
  4078  00F54A  74                 	db	116	;'t'
  4079  00F54B  00                 	db	0
  4080  00F54C                     STR_264:
  4081  00F54C  20                 	db	32
  4082  00F54D  20                 	db	32
  4083  00F54E  20                 	db	32
  4084  00F54F  20                 	db	32
  4085  00F550  20                 	db	32
  4086  00F551  20                 	db	32
  4087  00F552  20                 	db	32
  4088  00F553  20                 	db	32
  4089  00F554  51                 	db	81	;'Q'
  4090  00F555  49                 	db	73	;'I'
  4091  00F556  20                 	db	32
  4092  00F557  43                 	db	67	;'C'
  4093  00F558  6F                 	db	111	;'o'
  4094  00F559  6E                 	db	110	;'n'
  4095  00F55A  76                 	db	118	;'v'
  4096  00F55B  65                 	db	101	;'e'
  4097  00F55C  72                 	db	114	;'r'
  4098  00F55D  74                 	db	116	;'t'
  4099  00F55E  65                 	db	101	;'e'
  4100  00F55F  72                 	db	114	;'r'
  4101  00F560  20                 	db	32
  4102  00F561  69                 	db	105	;'i'
  4103  00F562  73                 	db	115	;'s'
  4104  00F563  20                 	db	32
  4105  00F564  69                 	db	105	;'i'
  4106  00F565  6E                 	db	110	;'n'
  4107  00F566  20                 	db	32
  4108  00F567  42                 	db	66	;'B'
  4109  00F568  75                 	db	117	;'u'
  4110  00F569  72                 	db	114	;'r'
  4111  00F56A  73                 	db	115	;'s'
  4112  00F56B  74                 	db	116	;'t'
  4113  00F56C  20                 	db	32
  4114  00F56D  4D                 	db	77	;'M'
  4115  00F56E  6F                 	db	111	;'o'
  4116  00F56F  64                 	db	100	;'d'
  4117  00F570  65                 	db	101	;'e'
  4118  00F571  0A                 	db	10
  4119  00F572  0D                 	db	13
  4120  00F573  00                 	db	0
  4121  00F574                     STR_229:
  4122  00F574  20                 	db	32
  4123  00F575  20                 	db	32
  4124  00F576  20                 	db	32
  4125  00F577  20                 	db	32
  4126  00F578  20                 	db	32
  4127  00F579  20                 	db	32
  4128  00F57A  20                 	db	32
  4129  00F57B  20                 	db	32
  4130  00F57C  49                 	db	73	;'I'
  4131  00F57D  32                 	db	50	;'2'
  4132  00F57E  43                 	db	67	;'C'
  4133  00F57F  20                 	db	32
  4134  00F580  41                 	db	65	;'A'
  4135  00F581  6D                 	db	109	;'m'
  4136  00F582  62                 	db	98	;'b'
  4137  00F583  69                 	db	105	;'i'
  4138  00F584  65                 	db	101	;'e'
  4139  00F585  6E                 	db	110	;'n'
  4140  00F586  74                 	db	116	;'t'
  4141  00F587  20                 	db	32
  4142  00F588  54                 	db	84	;'T'
  4143  00F589  65                 	db	101	;'e'
  4144  00F58A  6D                 	db	109	;'m'
  4145  00F58B  70                 	db	112	;'p'
  4146  00F58C  20                 	db	32
  4147  00F58D  53                 	db	83	;'S'
  4148  00F58E  65                 	db	101	;'e'
  4149  00F58F  6E                 	db	110	;'n'
  4150  00F590  73                 	db	115	;'s'
  4151  00F591  6F                 	db	111	;'o'
  4152  00F592  72                 	db	114	;'r'
  4153  00F593  20                 	db	32
  4154  00F594  45                 	db	69	;'E'
  4155  00F595  72                 	db	114	;'r'
  4156  00F596  72                 	db	114	;'r'
  4157  00F597  6F                 	db	111	;'o'
  4158  00F598  72                 	db	114	;'r'
  4159  00F599  0A                 	db	10
  4160  00F59A  0D                 	db	13
  4161  00F59B  00                 	db	0
  4162  00F59C                     STR_275:
  4163  00F59C  20                 	db	32
  4164  00F59D  20                 	db	32
  4165  00F59E  20                 	db	32
  4166  00F59F  20                 	db	32
  4167  00F5A0  20                 	db	32
  4168  00F5A1  20                 	db	32
  4169  00F5A2  20                 	db	32
  4170  00F5A3  20                 	db	32
  4171  00F5A4  41                 	db	65	;'A'
  4172  00F5A5  56                 	db	86	;'V'
  4173  00F5A6  53                 	db	83	;'S'
  4174  00F5A7  53                 	db	83	;'S'
  4175  00F5A8  20                 	db	32
  4176  00F5A9  6D                 	db	109	;'m'
  4177  00F5AA  65                 	db	101	;'e'
  4178  00F5AB  61                 	db	97	;'a'
  4179  00F5AC  73                 	db	115	;'s'
  4180  00F5AD  75                 	db	117	;'u'
  4181  00F5AE  72                 	db	114	;'r'
  4182  00F5AF  65                 	db	101	;'e'
  4183  00F5B0  64                 	db	100	;'d'
  4184  00F5B1  20                 	db	32
  4185  00F5B2  61                 	db	97	;'a'
  4186  00F5B3  73                 	db	115	;'s'
  4187  00F5B4  20                 	db	32
  4188  00F5B5  25                 	db	37
  4189  00F5B6  2B                 	db	43
  4190  00F5B7  2E                 	db	46
  4191  00F5B8  33                 	db	51	;'3'
  4192  00F5B9  66                 	db	102	;'f'
  4193  00F5BA  20                 	db	32
  4194  00F5BB  56                 	db	86	;'V'
  4195  00F5BC  6F                 	db	111	;'o'
  4196  00F5BD  6C                 	db	108	;'l'
  4197  00F5BE  74                 	db	116	;'t'
  4198  00F5BF  73                 	db	115	;'s'
  4199  00F5C0  0A                 	db	10
  4200  00F5C1  0D                 	db	13
  4201  00F5C2  00                 	db	0
  4202  00F5C3                     STR_4:
  4203  00F5C3  51                 	db	81	;'Q'
  4204  00F5C4  49                 	db	73	;'I'
  4205  00F5C5  20                 	db	32
  4206  00F5C6  57                 	db	87	;'W'
  4207  00F5C7  69                 	db	105	;'i'
  4208  00F5C8  72                 	db	114	;'r'
  4209  00F5C9  65                 	db	101	;'e'
  4210  00F5CA  6C                 	db	108	;'l'
  4211  00F5CB  65                 	db	101	;'e'
  4212  00F5CC  73                 	db	115	;'s'
  4213  00F5CD  73                 	db	115	;'s'
  4214  00F5CE  20                 	db	32
  4215  00F5CF  50                 	db	80	;'P'
  4216  00F5D0  6F                 	db	111	;'o'
  4217  00F5D1  77                 	db	119	;'w'
  4218  00F5D2  65                 	db	101	;'e'
  4219  00F5D3  72                 	db	114	;'r'
  4220  00F5D4  20                 	db	32
  4221  00F5D5  43                 	db	67	;'C'
  4222  00F5D6  6F                 	db	111	;'o'
  4223  00F5D7  6E                 	db	110	;'n'
  4224  00F5D8  76                 	db	118	;'v'
  4225  00F5D9  65                 	db	101	;'e'
  4226  00F5DA  72                 	db	114	;'r'
  4227  00F5DB  73                 	db	115	;'s'
  4228  00F5DC  69                 	db	105	;'i'
  4229  00F5DD  6F                 	db	111	;'o'
  4230  00F5DE  6E                 	db	110	;'n'
  4231  00F5DF  20                 	db	32
  4232  00F5E0  45                 	db	69	;'E'
  4233  00F5E1  6E                 	db	110	;'n'
  4234  00F5E2  61                 	db	97	;'a'
  4235  00F5E3  62                 	db	98	;'b'
  4236  00F5E4  6C                 	db	108	;'l'
  4237  00F5E5  65                 	db	101	;'e'
  4238  00F5E6  64                 	db	100	;'d'
  4239  00F5E7  0A                 	db	10
  4240  00F5E8  0D                 	db	13
  4241  00F5E9  00                 	db	0
  4242  00F5EA                     STR_7:
  4243  00F5EA  4D                 	db	77	;'M'
  4244  00F5EB  65                 	db	101	;'e'
  4245  00F5EC  61                 	db	97	;'a'
  4246  00F5ED  73                 	db	115	;'s'
  4247  00F5EE  75                 	db	117	;'u'
  4248  00F5EF  72                 	db	114	;'r'
  4249  00F5F0  65                 	db	101	;'e'
  4250  00F5F1  6D                 	db	109	;'m'
  4251  00F5F2  65                 	db	101	;'e'
  4252  00F5F3  6E                 	db	110	;'n'
  4253  00F5F4  74                 	db	116	;'t'
  4254  00F5F5  20                 	db	32
  4255  00F5F6  72                 	db	114	;'r'
  4256  00F5F7  65                 	db	101	;'e'
  4257  00F5F8  73                 	db	115	;'s'
  4258  00F5F9  70                 	db	112	;'p'
  4259  00F5FA  6F                 	db	111	;'o'
  4260  00F5FB  6E                 	db	110	;'n'
  4261  00F5FC  73                 	db	115	;'s'
  4262  00F5FD  65                 	db	101	;'e'
  4263  00F5FE  73                 	db	115	;'s'
  4264  00F5FF  20                 	db	32
  4265  00F600  61                 	db	97	;'a'
  4266  00F601  70                 	db	112	;'p'
  4267  00F602  70                 	db	112	;'p'
  4268  00F603  65                 	db	101	;'e'
  4269  00F604  61                 	db	97	;'a'
  4270  00F605  72                 	db	114	;'r'
  4271  00F606  20                 	db	32
  4272  00F607  69                 	db	105	;'i'
  4273  00F608  6E                 	db	110	;'n'
  4274  00F609  20                 	db	32
  4275  00F60A  63                 	db	99	;'c'
  4276  00F60B  79                 	db	121	;'y'
  4277  00F60C  61                 	db	97	;'a'
  4278  00F60D  6E                 	db	110	;'n'
  4279  00F60E  0A                 	db	10
  4280  00F60F  0D                 	db	13
  4281  00F610  00                 	db	0
  4282  00F611  54                 	db	84	;'T'
  4283  00F612  68                 	db	104	;'h'
  4284  00F613  69                 	db	105	;'i'
  4285  00F614  73                 	db	115	;'s'
  4286  00F615  20                 	db	32
  4287  00F616  74                 	db	116	;'t'
  4288  00F617  65                 	db	101	;'e'
  4289  00F618  78                 	db	120	;'x'
  4290  00F619  74                 	db	116	;'t'
  4291  00F61A  20                 	db	32
  4292  00F61B  68                 	db	104	;'h'
  4293  00F61C  61                 	db	97	;'a'
  4294  00F61D  73                 	db	115	;'s'
  4295  00F61E  20                 	db	32
  4296  00F61F  61                 	db	97	;'a'
  4297  00F620  20                 	db	32
  4298  00F621  6D                 	db	109	;'m'
  4299  00F622  61                 	db	97	;'a'
  4300  00F623  67                 	db	103	;'g'
  4301  00F624  65                 	db	101	;'e'
  4302  00F625  6E                 	db	110	;'n'
  4303  00F626  74                 	db	116	;'t'
  4304  00F627  61                 	db	97	;'a'
  4305  00F628  20                 	db	32
  4306  00F629  62                 	db	98	;'b'
  4307  00F62A  61                 	db	97	;'a'
  4308  00F62B  63                 	db	99	;'c'
  4309  00F62C  6B                 	db	107	;'k'
  4310  00F62D  67                 	db	103	;'g'
  4311  00F62E  72                 	db	114	;'r'
  4312  00F62F  6F                 	db	111	;'o'
  4313  00F630  75                 	db	117	;'u'
  4314  00F631  6E                 	db	110	;'n'
  4315  00F632  64                 	db	100	;'d'
  4316  00F633  0A                 	db	10
  4317  00F634  0D                 	db	13
  4318  00F635  00                 	db	0
  4319  00F636                     STR_218:
  4320  00F636  55                 	db	85	;'U'
  4321  00F637  6E                 	db	110	;'n'
  4322  00F638  73                 	db	115	;'s'
  4323  00F639  75                 	db	117	;'u'
  4324  00F63A  70                 	db	112	;'p'
  4325  00F63B  70                 	db	112	;'p'
  4326  00F63C  6F                 	db	111	;'o'
  4327  00F63D  72                 	db	114	;'r'
  4328  00F63E  74                 	db	116	;'t'
  4329  00F63F  65                 	db	101	;'e'
  4330  00F640  64                 	db	100	;'d'
  4331  00F641  20                 	db	32
  4332  00F642  6F                 	db	111	;'o'
  4333  00F643  72                 	db	114	;'r'
  4334  00F644  20                 	db	32
  4335  00F645  6D                 	db	109	;'m'
  4336  00F646  69                 	db	105	;'i'
  4337  00F647  73                 	db	115	;'s'
  4338  00F648  2D                 	db	45
  4339  00F649  65                 	db	101	;'e'
  4340  00F64A  6E                 	db	110	;'n'
  4341  00F64B  74                 	db	116	;'t'
  4342  00F64C  65                 	db	101	;'e'
  4343  00F64D  72                 	db	114	;'r'
  4344  00F64E  65                 	db	101	;'e'
  4345  00F64F  64                 	db	100	;'d'
  4346  00F650  20                 	db	32
  4347  00F651  63                 	db	99	;'c'
  4348  00F652  6F                 	db	111	;'o'
  4349  00F653  6D                 	db	109	;'m'
  4350  00F654  6D                 	db	109	;'m'
  4351  00F655  61                 	db	97	;'a'
  4352  00F656  6E                 	db	110	;'n'
  4353  00F657  64                 	db	100	;'d'
  4354  00F658  0A                 	db	10
  4355  00F659  0D                 	db	13
  4356  00F65A  00                 	db	0
  4357  00F65B                     STR_230:
  4358  00F65B  20                 	db	32
  4359  00F65C  20                 	db	32
  4360  00F65D  20                 	db	32
  4361  00F65E  20                 	db	32
  4362  00F65F  20                 	db	32
  4363  00F660  20                 	db	32
  4364  00F661  20                 	db	32
  4365  00F662  20                 	db	32
  4366  00F663  49                 	db	73	;'I'
  4367  00F664  32                 	db	50	;'2'
  4368  00F665  43                 	db	67	;'C'
  4369  00F666  20                 	db	32
  4370  00F667  50                 	db	80	;'P'
  4371  00F668  4F                 	db	79	;'O'
  4372  00F669  53                 	db	83	;'S'
  4373  00F66A  35                 	db	53	;'5'
  4374  00F66B  20                 	db	32
  4375  00F66C  54                 	db	84	;'T'
  4376  00F66D  65                 	db	101	;'e'
  4377  00F66E  6D                 	db	109	;'m'
  4378  00F66F  70                 	db	112	;'p'
  4379  00F670  20                 	db	32
  4380  00F671  53                 	db	83	;'S'
  4381  00F672  65                 	db	101	;'e'
  4382  00F673  6E                 	db	110	;'n'
  4383  00F674  73                 	db	115	;'s'
  4384  00F675  6F                 	db	111	;'o'
  4385  00F676  72                 	db	114	;'r'
  4386  00F677  20                 	db	32
  4387  00F678  45                 	db	69	;'E'
  4388  00F679  72                 	db	114	;'r'
  4389  00F67A  72                 	db	114	;'r'
  4390  00F67B  6F                 	db	111	;'o'
  4391  00F67C  72                 	db	114	;'r'
  4392  00F67D  0A                 	db	10
  4393  00F67E  0D                 	db	13
  4394  00F67F  00                 	db	0
  4395  00F680  54                 	db	84	;'T'
  4396  00F681  68                 	db	104	;'h'
  4397  00F682  69                 	db	105	;'i'
  4398  00F683  73                 	db	115	;'s'
  4399  00F684  20                 	db	32
  4400  00F685  74                 	db	116	;'t'
  4401  00F686  65                 	db	101	;'e'
  4402  00F687  78                 	db	120	;'x'
  4403  00F688  74                 	db	116	;'t'
  4404  00F689  20                 	db	32
  4405  00F68A  68                 	db	104	;'h'
  4406  00F68B  61                 	db	97	;'a'
  4407  00F68C  73                 	db	115	;'s'
  4408  00F68D  20                 	db	32
  4409  00F68E  61                 	db	97	;'a'
  4410  00F68F  20                 	db	32
  4411  00F690  79                 	db	121	;'y'
  4412  00F691  65                 	db	101	;'e'
  4413  00F692  6C                 	db	108	;'l'
  4414  00F693  6C                 	db	108	;'l'
  4415  00F694  6F                 	db	111	;'o'
  4416  00F695  77                 	db	119	;'w'
  4417  00F696  20                 	db	32
  4418  00F697  62                 	db	98	;'b'
  4419  00F698  61                 	db	97	;'a'
  4420  00F699  63                 	db	99	;'c'
  4421  00F69A  6B                 	db	107	;'k'
  4422  00F69B  67                 	db	103	;'g'
  4423  00F69C  72                 	db	114	;'r'
  4424  00F69D  6F                 	db	111	;'o'
  4425  00F69E  75                 	db	117	;'u'
  4426  00F69F  6E                 	db	110	;'n'
  4427  00F6A0  64                 	db	100	;'d'
  4428  00F6A1  0A                 	db	10
  4429  00F6A2  0D                 	db	13
  4430  00F6A3  00                 	db	0
  4431  00F6A4                     STR_261:
  4432  00F6A4  20                 	db	32
  4433  00F6A5  20                 	db	32
  4434  00F6A6  20                 	db	32
  4435  00F6A7  20                 	db	32
  4436  00F6A8  53                 	db	83	;'S'
  4437  00F6A9  79                 	db	121	;'y'
  4438  00F6AA  73                 	db	115	;'s'
  4439  00F6AB  74                 	db	116	;'t'
  4440  00F6AC  65                 	db	101	;'e'
  4441  00F6AD  6D                 	db	109	;'m'
  4442  00F6AE  20                 	db	32
  4443  00F6AF  53                 	db	83	;'S'
  4444  00F6B0  77                 	db	119	;'w'
  4445  00F6B1  69                 	db	105	;'i'
  4446  00F6B2  74                 	db	116	;'t'
  4447  00F6B3  63                 	db	99	;'c'
  4448  00F6B4  68                 	db	104	;'h'
  4449  00F6B5  69                 	db	105	;'i'
  4450  00F6B6  6E                 	db	110	;'n'
  4451  00F6B7  67                 	db	103	;'g'
  4452  00F6B8  20                 	db	32
  4453  00F6B9  46                 	db	70	;'F'
  4454  00F6BA  72                 	db	114	;'r'
  4455  00F6BB  65                 	db	101	;'e'
  4456  00F6BC  71                 	db	113	;'q'
  4457  00F6BD  75                 	db	117	;'u'
  4458  00F6BE  65                 	db	101	;'e'
  4459  00F6BF  6E                 	db	110	;'n'
  4460  00F6C0  63                 	db	99	;'c'
  4461  00F6C1  69                 	db	105	;'i'
  4462  00F6C2  65                 	db	101	;'e'
  4463  00F6C3  73                 	db	115	;'s'
  4464  00F6C4  3A                 	db	58	;':'
  4465  00F6C5  0A                 	db	10
  4466  00F6C6  0D                 	db	13
  4467  00F6C7  00                 	db	0
  4468  00F6C8  54                 	db	84	;'T'
  4469  00F6C9  68                 	db	104	;'h'
  4470  00F6CA  69                 	db	105	;'i'
  4471  00F6CB  73                 	db	115	;'s'
  4472  00F6CC  20                 	db	32
  4473  00F6CD  74                 	db	116	;'t'
  4474  00F6CE  65                 	db	101	;'e'
  4475  00F6CF  78                 	db	120	;'x'
  4476  00F6D0  74                 	db	116	;'t'
  4477  00F6D1  20                 	db	32
  4478  00F6D2  68                 	db	104	;'h'
  4479  00F6D3  61                 	db	97	;'a'
  4480  00F6D4  73                 	db	115	;'s'
  4481  00F6D5  20                 	db	32
  4482  00F6D6  61                 	db	97	;'a'
  4483  00F6D7  20                 	db	32
  4484  00F6D8  77                 	db	119	;'w'
  4485  00F6D9  68                 	db	104	;'h'
  4486  00F6DA  69                 	db	105	;'i'
  4487  00F6DB  74                 	db	116	;'t'
  4488  00F6DC  65                 	db	101	;'e'
  4489  00F6DD  20                 	db	32
  4490  00F6DE  62                 	db	98	;'b'
  4491  00F6DF  61                 	db	97	;'a'
  4492  00F6E0  63                 	db	99	;'c'
  4493  00F6E1  6B                 	db	107	;'k'
  4494  00F6E2  67                 	db	103	;'g'
  4495  00F6E3  72                 	db	114	;'r'
  4496  00F6E4  6F                 	db	111	;'o'
  4497  00F6E5  75                 	db	117	;'u'
  4498  00F6E6  6E                 	db	110	;'n'
  4499  00F6E7  64                 	db	100	;'d'
  4500  00F6E8  0A                 	db	10
  4501  00F6E9  0D                 	db	13
  4502  00F6EA  00                 	db	0
  4503  00F6EB  54                 	db	84	;'T'
  4504  00F6EC  68                 	db	104	;'h'
  4505  00F6ED  69                 	db	105	;'i'
  4506  00F6EE  73                 	db	115	;'s'
  4507  00F6EF  20                 	db	32
  4508  00F6F0  74                 	db	116	;'t'
  4509  00F6F1  65                 	db	101	;'e'
  4510  00F6F2  78                 	db	120	;'x'
  4511  00F6F3  74                 	db	116	;'t'
  4512  00F6F4  20                 	db	32
  4513  00F6F5  68                 	db	104	;'h'
  4514  00F6F6  61                 	db	97	;'a'
  4515  00F6F7  73                 	db	115	;'s'
  4516  00F6F8  20                 	db	32
  4517  00F6F9  61                 	db	97	;'a'
  4518  00F6FA  20                 	db	32
  4519  00F6FB  62                 	db	98	;'b'
  4520  00F6FC  6C                 	db	108	;'l'
  4521  00F6FD  61                 	db	97	;'a'
  4522  00F6FE  63                 	db	99	;'c'
  4523  00F6FF  6B                 	db	107	;'k'
  4524  00F700  20                 	db	32
  4525  00F701  62                 	db	98	;'b'
  4526  00F702  61                 	db	97	;'a'
  4527  00F703  63                 	db	99	;'c'
  4528  00F704  6B                 	db	107	;'k'
  4529  00F705  67                 	db	103	;'g'
  4530  00F706  72                 	db	114	;'r'
  4531  00F707  6F                 	db	111	;'o'
  4532  00F708  75                 	db	117	;'u'
  4533  00F709  6E                 	db	110	;'n'
  4534  00F70A  64                 	db	100	;'d'
  4535  00F70B  0A                 	db	10
  4536  00F70C  0D                 	db	13
  4537  00F70D  00                 	db	0
  4538  00F70E  54                 	db	84	;'T'
  4539  00F70F  68                 	db	104	;'h'
  4540  00F710  69                 	db	105	;'i'
  4541  00F711  73                 	db	115	;'s'
  4542  00F712  20                 	db	32
  4543  00F713  74                 	db	116	;'t'
  4544  00F714  65                 	db	101	;'e'
  4545  00F715  78                 	db	120	;'x'
  4546  00F716  74                 	db	116	;'t'
  4547  00F717  20                 	db	32
  4548  00F718  68                 	db	104	;'h'
  4549  00F719  61                 	db	97	;'a'
  4550  00F71A  73                 	db	115	;'s'
  4551  00F71B  20                 	db	32
  4552  00F71C  61                 	db	97	;'a'
  4553  00F71D  20                 	db	32
  4554  00F71E  67                 	db	103	;'g'
  4555  00F71F  72                 	db	114	;'r'
  4556  00F720  65                 	db	101	;'e'
  4557  00F721  65                 	db	101	;'e'
  4558  00F722  6E                 	db	110	;'n'
  4559  00F723  20                 	db	32
  4560  00F724  62                 	db	98	;'b'
  4561  00F725  61                 	db	97	;'a'
  4562  00F726  63                 	db	99	;'c'
  4563  00F727  6B                 	db	107	;'k'
  4564  00F728  67                 	db	103	;'g'
  4565  00F729  72                 	db	114	;'r'
  4566  00F72A  6F                 	db	111	;'o'
  4567  00F72B  75                 	db	117	;'u'
  4568  00F72C  6E                 	db	110	;'n'
  4569  00F72D  64                 	db	100	;'d'
  4570  00F72E  0A                 	db	10
  4571  00F72F  0D                 	db	13
  4572  00F730  00                 	db	0
  4573  00F731                     STR_241:
  4574  00F731  20                 	db	32
  4575  00F732  20                 	db	32
  4576  00F733  20                 	db	32
  4577  00F734  20                 	db	32
  4578  00F735  51                 	db	81	;'Q'
  4579  00F736  49                 	db	73	;'I'
  4580  00F737  20                 	db	32
  4581  00F738  43                 	db	67	;'C'
  4582  00F739  68                 	db	104	;'h'
  4583  00F73A  61                 	db	97	;'a'
  4584  00F73B  72                 	db	114	;'r'
  4585  00F73C  67                 	db	103	;'g'
  4586  00F73D  65                 	db	101	;'e'
  4587  00F73E  72                 	db	114	;'r'
  4588  00F73F  20                 	db	32
  4589  00F740  69                 	db	105	;'i'
  4590  00F741  73                 	db	115	;'s'
  4591  00F742  20                 	db	32
  4592  00F743  69                 	db	105	;'i'
  4593  00F744  6E                 	db	110	;'n'
  4594  00F745  20                 	db	32
  4595  00F746  45                 	db	69	;'E'
  4596  00F747  72                 	db	114	;'r'
  4597  00F748  72                 	db	114	;'r'
  4598  00F749  6F                 	db	111	;'o'
  4599  00F74A  72                 	db	114	;'r'
  4600  00F74B  20                 	db	32
  4601  00F74C  53                 	db	83	;'S'
  4602  00F74D  74                 	db	116	;'t'
  4603  00F74E  61                 	db	97	;'a'
  4604  00F74F  74                 	db	116	;'t'
  4605  00F750  65                 	db	101	;'e'
  4606  00F751  0A                 	db	10
  4607  00F752  0D                 	db	13
  4608  00F753  00                 	db	0
  4609  00F754                     STR_231:
  4610  00F754  20                 	db	32
  4611  00F755  20                 	db	32
  4612  00F756  20                 	db	32
  4613  00F757  20                 	db	32
  4614  00F758  20                 	db	32
  4615  00F759  20                 	db	32
  4616  00F75A  20                 	db	32
  4617  00F75B  20                 	db	32
  4618  00F75C  49                 	db	73	;'I'
  4619  00F75D  32                 	db	50	;'2'
  4620  00F75E  43                 	db	67	;'C'
  4621  00F75F  20                 	db	32
  4622  00F760  51                 	db	81	;'Q'
  4623  00F761  49                 	db	73	;'I'
  4624  00F762  20                 	db	32
  4625  00F763  54                 	db	84	;'T'
  4626  00F764  65                 	db	101	;'e'
  4627  00F765  6D                 	db	109	;'m'
  4628  00F766  70                 	db	112	;'p'
  4629  00F767  20                 	db	32
  4630  00F768  53                 	db	83	;'S'
  4631  00F769  65                 	db	101	;'e'
  4632  00F76A  6E                 	db	110	;'n'
  4633  00F76B  73                 	db	115	;'s'
  4634  00F76C  6F                 	db	111	;'o'
  4635  00F76D  72                 	db	114	;'r'
  4636  00F76E  20                 	db	32
  4637  00F76F  45                 	db	69	;'E'
  4638  00F770  72                 	db	114	;'r'
  4639  00F771  72                 	db	114	;'r'
  4640  00F772  6F                 	db	111	;'o'
  4641  00F773  72                 	db	114	;'r'
  4642  00F774  0A                 	db	10
  4643  00F775  0D                 	db	13
  4644  00F776  00                 	db	0
  4645  00F777  54                 	db	84	;'T'
  4646  00F778  68                 	db	104	;'h'
  4647  00F779  69                 	db	105	;'i'
  4648  00F77A  73                 	db	115	;'s'
  4649  00F77B  20                 	db	32
  4650  00F77C  74                 	db	116	;'t'
  4651  00F77D  65                 	db	101	;'e'
  4652  00F77E  78                 	db	120	;'x'
  4653  00F77F  74                 	db	116	;'t'
  4654  00F780  20                 	db	32
  4655  00F781  68                 	db	104	;'h'
  4656  00F782  61                 	db	97	;'a'
  4657  00F783  73                 	db	115	;'s'
  4658  00F784  20                 	db	32
  4659  00F785  61                 	db	97	;'a'
  4660  00F786  20                 	db	32
  4661  00F787  62                 	db	98	;'b'
  4662  00F788  6C                 	db	108	;'l'
  4663  00F789  75                 	db	117	;'u'
  4664  00F78A  65                 	db	101	;'e'
  4665  00F78B  20                 	db	32
  4666  00F78C  62                 	db	98	;'b'
  4667  00F78D  61                 	db	97	;'a'
  4668  00F78E  63                 	db	99	;'c'
  4669  00F78F  6B                 	db	107	;'k'
  4670  00F790  67                 	db	103	;'g'
  4671  00F791  72                 	db	114	;'r'
  4672  00F792  6F                 	db	111	;'o'
  4673  00F793  75                 	db	117	;'u'
  4674  00F794  6E                 	db	110	;'n'
  4675  00F795  64                 	db	100	;'d'
  4676  00F796  0A                 	db	10
  4677  00F797  0D                 	db	13
  4678  00F798  00                 	db	0
  4679  00F799  54                 	db	84	;'T'
  4680  00F79A  68                 	db	104	;'h'
  4681  00F79B  69                 	db	105	;'i'
  4682  00F79C  73                 	db	115	;'s'
  4683  00F79D  20                 	db	32
  4684  00F79E  74                 	db	116	;'t'
  4685  00F79F  65                 	db	101	;'e'
  4686  00F7A0  78                 	db	120	;'x'
  4687  00F7A1  74                 	db	116	;'t'
  4688  00F7A2  20                 	db	32
  4689  00F7A3  68                 	db	104	;'h'
  4690  00F7A4  61                 	db	97	;'a'
  4691  00F7A5  73                 	db	115	;'s'
  4692  00F7A6  20                 	db	32
  4693  00F7A7  61                 	db	97	;'a'
  4694  00F7A8  20                 	db	32
  4695  00F7A9  63                 	db	99	;'c'
  4696  00F7AA  79                 	db	121	;'y'
  4697  00F7AB  61                 	db	97	;'a'
  4698  00F7AC  6E                 	db	110	;'n'
  4699  00F7AD  20                 	db	32
  4700  00F7AE  62                 	db	98	;'b'
  4701  00F7AF  61                 	db	97	;'a'
  4702  00F7B0  63                 	db	99	;'c'
  4703  00F7B1  6B                 	db	107	;'k'
  4704  00F7B2  67                 	db	103	;'g'
  4705  00F7B3  72                 	db	114	;'r'
  4706  00F7B4  6F                 	db	111	;'o'
  4707  00F7B5  75                 	db	117	;'u'
  4708  00F7B6  6E                 	db	110	;'n'
  4709  00F7B7  64                 	db	100	;'d'
  4710  00F7B8  0A                 	db	10
  4711  00F7B9  0D                 	db	13
  4712  00F7BA  00                 	db	0
  4713  00F7BB                     STR_272:
  4714  00F7BB  20                 	db	32
  4715  00F7BC  20                 	db	32
  4716  00F7BD  20                 	db	32
  4717  00F7BE  20                 	db	32
  4718  00F7BF  4D                 	db	77	;'M'
  4719  00F7C0  69                 	db	105	;'i'
  4720  00F7C1  63                 	db	99	;'c'
  4721  00F7C2  72                 	db	114	;'r'
  4722  00F7C3  6F                 	db	111	;'o'
  4723  00F7C4  63                 	db	99	;'c'
  4724  00F7C5  6F                 	db	111	;'o'
  4725  00F7C6  6E                 	db	110	;'n'
  4726  00F7C7  74                 	db	116	;'t'
  4727  00F7C8  72                 	db	114	;'r'
  4728  00F7C9  6F                 	db	111	;'o'
  4729  00F7CA  6C                 	db	108	;'l'
  4730  00F7CB  6C                 	db	108	;'l'
  4731  00F7CC  65                 	db	101	;'e'
  4732  00F7CD  72                 	db	114	;'r'
  4733  00F7CE  20                 	db	32
  4734  00F7CF  50                 	db	80	;'P'
  4735  00F7D0  61                 	db	97	;'a'
  4736  00F7D1  72                 	db	114	;'r'
  4737  00F7D2  61                 	db	97	;'a'
  4738  00F7D3  6D                 	db	109	;'m'
  4739  00F7D4  65                 	db	101	;'e'
  4740  00F7D5  74                 	db	116	;'t'
  4741  00F7D6  65                 	db	101	;'e'
  4742  00F7D7  72                 	db	114	;'r'
  4743  00F7D8  73                 	db	115	;'s'
  4744  00F7D9  3A                 	db	58	;':'
  4745  00F7DA  0A                 	db	10
  4746  00F7DB  0D                 	db	13
  4747  00F7DC  00                 	db	0
  4748  00F7DD  54                 	db	84	;'T'
  4749  00F7DE  68                 	db	104	;'h'
  4750  00F7DF  69                 	db	105	;'i'
  4751  00F7E0  73                 	db	115	;'s'
  4752  00F7E1  20                 	db	32
  4753  00F7E2  74                 	db	116	;'t'
  4754  00F7E3  65                 	db	101	;'e'
  4755  00F7E4  78                 	db	120	;'x'
  4756  00F7E5  74                 	db	116	;'t'
  4757  00F7E6  20                 	db	32
  4758  00F7E7  68                 	db	104	;'h'
  4759  00F7E8  61                 	db	97	;'a'
  4760  00F7E9  73                 	db	115	;'s'
  4761  00F7EA  20                 	db	32
  4762  00F7EB  61                 	db	97	;'a'
  4763  00F7EC  20                 	db	32
  4764  00F7ED  72                 	db	114	;'r'
  4765  00F7EE  65                 	db	101	;'e'
  4766  00F7EF  64                 	db	100	;'d'
  4767  00F7F0  20                 	db	32
  4768  00F7F1  62                 	db	98	;'b'
  4769  00F7F2  61                 	db	97	;'a'
  4770  00F7F3  63                 	db	99	;'c'
  4771  00F7F4  6B                 	db	107	;'k'
  4772  00F7F5  67                 	db	103	;'g'
  4773  00F7F6  72                 	db	114	;'r'
  4774  00F7F7  6F                 	db	111	;'o'
  4775  00F7F8  75                 	db	117	;'u'
  4776  00F7F9  6E                 	db	110	;'n'
  4777  00F7FA  64                 	db	100	;'d'
  4778  00F7FB  0A                 	db	10
  4779  00F7FC  0D                 	db	13
  4780  00F7FD  00                 	db	0
  4781  00F7FE                     STR_232:
  4782  00F7FE  20                 	db	32
  4783  00F7FF  20                 	db	32
  4784  00F800  20                 	db	32
  4785  00F801  20                 	db	32
  4786  00F802  20                 	db	32
  4787  00F803  20                 	db	32
  4788  00F804  20                 	db	32
  4789  00F805  20                 	db	32
  4790  00F806  49                 	db	73	;'I'
  4791  00F807  32                 	db	50	;'2'
  4792  00F808  43                 	db	67	;'C'
  4793  00F809  20                 	db	32
  4794  00F80A  4F                 	db	79	;'O'
  4795  00F80B  4C                 	db	76	;'L'
  4796  00F80C  45                 	db	69	;'E'
  4797  00F80D  44                 	db	68	;'D'
  4798  00F80E  20                 	db	32
  4799  00F80F  44                 	db	68	;'D'
  4800  00F810  69                 	db	105	;'i'
  4801  00F811  73                 	db	115	;'s'
  4802  00F812  70                 	db	112	;'p'
  4803  00F813  6C                 	db	108	;'l'
  4804  00F814  61                 	db	97	;'a'
  4805  00F815  79                 	db	121	;'y'
  4806  00F816  20                 	db	32
  4807  00F817  45                 	db	69	;'E'
  4808  00F818  72                 	db	114	;'r'
  4809  00F819  72                 	db	114	;'r'
  4810  00F81A  6F                 	db	111	;'o'
  4811  00F81B  72                 	db	114	;'r'
  4812  00F81C  0A                 	db	10
  4813  00F81D  0D                 	db	13
  4814  00F81E  00                 	db	0
  4815  00F81F                     STR_237:
  4816  00F81F  20                 	db	32
  4817  00F820  20                 	db	32
  4818  00F821  20                 	db	32
  4819  00F822  20                 	db	32
  4820  00F823  4E                 	db	78	;'N'
  4821  00F824  6F                 	db	111	;'o'
  4822  00F825  20                 	db	32
  4823  00F826  55                 	db	85	;'U'
  4824  00F827  41                 	db	65	;'A'
  4825  00F828  52                 	db	82	;'R'
  4826  00F829  54                 	db	84	;'T'
  4827  00F82A  20                 	db	32
  4828  00F82B  65                 	db	101	;'e'
  4829  00F82C  72                 	db	114	;'r'
  4830  00F82D  72                 	db	114	;'r'
  4831  00F82E  6F                 	db	111	;'o'
  4832  00F82F  72                 	db	114	;'r'
  4833  00F830  28                 	db	40
  4834  00F831  73                 	db	115	;'s'
  4835  00F832  29                 	db	41
  4836  00F833  20                 	db	32
  4837  00F834  64                 	db	100	;'d'
  4838  00F835  65                 	db	101	;'e'
  4839  00F836  74                 	db	116	;'t'
  4840  00F837  65                 	db	101	;'e'
  4841  00F838  63                 	db	99	;'c'
  4842  00F839  74                 	db	116	;'t'
  4843  00F83A  65                 	db	101	;'e'
  4844  00F83B  64                 	db	100	;'d'
  4845  00F83C  0A                 	db	10
  4846  00F83D  0D                 	db	13
  4847  00F83E  00                 	db	0
  4848  00F83F                     STR_234:
  4849  00F83F  20                 	db	32
  4850  00F840  20                 	db	32
  4851  00F841  20                 	db	32
  4852  00F842  20                 	db	32
  4853  00F843  4E                 	db	78	;'N'
  4854  00F844  6F                 	db	111	;'o'
  4855  00F845  20                 	db	32
  4856  00F846  49                 	db	73	;'I'
  4857  00F847  32                 	db	50	;'2'
  4858  00F848  43                 	db	67	;'C'
  4859  00F849  20                 	db	32
  4860  00F84A  65                 	db	101	;'e'
  4861  00F84B  72                 	db	114	;'r'
  4862  00F84C  72                 	db	114	;'r'
  4863  00F84D  6F                 	db	111	;'o'
  4864  00F84E  72                 	db	114	;'r'
  4865  00F84F  28                 	db	40
  4866  00F850  73                 	db	115	;'s'
  4867  00F851  29                 	db	41
  4868  00F852  20                 	db	32
  4869  00F853  64                 	db	100	;'d'
  4870  00F854  65                 	db	101	;'e'
  4871  00F855  74                 	db	116	;'t'
  4872  00F856  65                 	db	101	;'e'
  4873  00F857  63                 	db	99	;'c'
  4874  00F858  74                 	db	116	;'t'
  4875  00F859  65                 	db	101	;'e'
  4876  00F85A  64                 	db	100	;'d'
  4877  00F85B  0A                 	db	10
  4878  00F85C  0D                 	db	13
  4879  00F85D  00                 	db	0
  4880  00F85E                     STR_226:
  4881  00F85E  20                 	db	32
  4882  00F85F  20                 	db	32
  4883  00F860  20                 	db	32
  4884  00F861  20                 	db	32
  4885  00F862  4E                 	db	78	;'N'
  4886  00F863  6F                 	db	111	;'o'
  4887  00F864  20                 	db	32
  4888  00F865  41                 	db	65	;'A'
  4889  00F866  44                 	db	68	;'D'
  4890  00F867  43                 	db	67	;'C'
  4891  00F868  20                 	db	32
  4892  00F869  65                 	db	101	;'e'
  4893  00F86A  72                 	db	114	;'r'
  4894  00F86B  72                 	db	114	;'r'
  4895  00F86C  6F                 	db	111	;'o'
  4896  00F86D  72                 	db	114	;'r'
  4897  00F86E  28                 	db	40
  4898  00F86F  73                 	db	115	;'s'
  4899  00F870  29                 	db	41
  4900  00F871  20                 	db	32
  4901  00F872  64                 	db	100	;'d'
  4902  00F873  65                 	db	101	;'e'
  4903  00F874  74                 	db	116	;'t'
  4904  00F875  65                 	db	101	;'e'
  4905  00F876  63                 	db	99	;'c'
  4906  00F877  74                 	db	116	;'t'
  4907  00F878  65                 	db	101	;'e'
  4908  00F879  64                 	db	100	;'d'
  4909  00F87A  0A                 	db	10
  4910  00F87B  0D                 	db	13
  4911  00F87C  00                 	db	0
  4912  00F87D                     STR_235:
  4913  00F87D  20                 	db	32
  4914  00F87E  20                 	db	32
  4915  00F87F  20                 	db	32
  4916  00F880  20                 	db	32
  4917  00F881  55                 	db	85	;'U'
  4918  00F882  53                 	db	83	;'S'
  4919  00F883  42                 	db	66	;'B'
  4920  00F884  20                 	db	32
  4921  00F885  55                 	db	85	;'U'
  4922  00F886  41                 	db	65	;'A'
  4923  00F887  52                 	db	82	;'R'
  4924  00F888  54                 	db	84	;'T'
  4925  00F889  20                 	db	32
  4926  00F88A  45                 	db	69	;'E'
  4927  00F88B  72                 	db	114	;'r'
  4928  00F88C  72                 	db	114	;'r'
  4929  00F88D  6F                 	db	111	;'o'
  4930  00F88E  72                 	db	114	;'r'
  4931  00F88F  20                 	db	32
  4932  00F890  44                 	db	68	;'D'
  4933  00F891  65                 	db	101	;'e'
  4934  00F892  74                 	db	116	;'t'
  4935  00F893  65                 	db	101	;'e'
  4936  00F894  63                 	db	99	;'c'
  4937  00F895  74                 	db	116	;'t'
  4938  00F896  65                 	db	101	;'e'
  4939  00F897  64                 	db	100	;'d'
  4940  00F898  0A                 	db	10
  4941  00F899  0D                 	db	13
  4942  00F89A  00                 	db	0
  4943  00F89B                     STR_9:
  4944  00F89B  55                 	db	85	;'U'
  4945  00F89C  73                 	db	115	;'s'
  4946  00F89D  65                 	db	101	;'e'
  4947  00F89E  72                 	db	114	;'r'
  4948  00F89F  20                 	db	32
  4949  00F8A0  69                 	db	105	;'i'
  4950  00F8A1  6E                 	db	110	;'n'
  4951  00F8A2  70                 	db	112	;'p'
  4952  00F8A3  75                 	db	117	;'u'
  4953  00F8A4  74                 	db	116	;'t'
  4954  00F8A5  20                 	db	32
  4955  00F8A6  61                 	db	97	;'a'
  4956  00F8A7  70                 	db	112	;'p'
  4957  00F8A8  70                 	db	112	;'p'
  4958  00F8A9  65                 	db	101	;'e'
  4959  00F8AA  61                 	db	97	;'a'
  4960  00F8AB  72                 	db	114	;'r'
  4961  00F8AC  73                 	db	115	;'s'
  4962  00F8AD  20                 	db	32
  4963  00F8AE  69                 	db	105	;'i'
  4964  00F8AF  6E                 	db	110	;'n'
  4965  00F8B0  20                 	db	32
  4966  00F8B1  77                 	db	119	;'w'
  4967  00F8B2  68                 	db	104	;'h'
  4968  00F8B3  69                 	db	105	;'i'
  4969  00F8B4  74                 	db	116	;'t'
  4970  00F8B5  65                 	db	101	;'e'
  4971  00F8B6  0A                 	db	10
  4972  00F8B7  0D                 	db	13
  4973  00F8B8  00                 	db	0
  4974  00F8B9                     STR_221:
  4975  00F8B9  20                 	db	32
  4976  00F8BA  20                 	db	32
  4977  00F8BB  20                 	db	32
  4978  00F8BC  20                 	db	32
  4979  00F8BD  41                 	db	65	;'A'
  4980  00F8BE  44                 	db	68	;'D'
  4981  00F8BF  43                 	db	67	;'C'
  4982  00F8C0  20                 	db	32
  4983  00F8C1  65                 	db	101	;'e'
  4984  00F8C2  72                 	db	114	;'r'
  4985  00F8C3  72                 	db	114	;'r'
  4986  00F8C4  6F                 	db	111	;'o'
  4987  00F8C5  72                 	db	114	;'r'
  4988  00F8C6  28                 	db	40
  4989  00F8C7  73                 	db	115	;'s'
  4990  00F8C8  29                 	db	41
  4991  00F8C9  20                 	db	32
  4992  00F8CA  64                 	db	100	;'d'
  4993  00F8CB  65                 	db	101	;'e'
  4994  00F8CC  74                 	db	116	;'t'
  4995  00F8CD  65                 	db	101	;'e'
  4996  00F8CE  63                 	db	99	;'c'
  4997  00F8CF  74                 	db	116	;'t'
  4998  00F8D0  65                 	db	101	;'e'
  4999  00F8D1  64                 	db	100	;'d'
  5000  00F8D2  21                 	db	33
  5001  00F8D3  0A                 	db	10
  5002  00F8D4  0D                 	db	13
  5003  00F8D5  00                 	db	0
  5004  00F8D6                     STR_228:
  5005  00F8D6  20                 	db	32
  5006  00F8D7  20                 	db	32
  5007  00F8D8  20                 	db	32
  5008  00F8D9  20                 	db	32
  5009  00F8DA  20                 	db	32
  5010  00F8DB  20                 	db	32
  5011  00F8DC  20                 	db	32
  5012  00F8DD  20                 	db	32
  5013  00F8DE  49                 	db	73	;'I'
  5014  00F8DF  32                 	db	50	;'2'
  5015  00F8E0  43                 	db	67	;'C'
  5016  00F8E1  20                 	db	32
  5017  00F8E2  47                 	db	71	;'G'
  5018  00F8E3  65                 	db	101	;'e'
  5019  00F8E4  6E                 	db	110	;'n'
  5020  00F8E5  65                 	db	101	;'e'
  5021  00F8E6  72                 	db	114	;'r'
  5022  00F8E7  61                 	db	97	;'a'
  5023  00F8E8  6C                 	db	108	;'l'
  5024  00F8E9  20                 	db	32
  5025  00F8EA  45                 	db	69	;'E'
  5026  00F8EB  72                 	db	114	;'r'
  5027  00F8EC  72                 	db	114	;'r'
  5028  00F8ED  6F                 	db	111	;'o'
  5029  00F8EE  72                 	db	114	;'r'
  5030  00F8EF  0A                 	db	10
  5031  00F8F0  0D                 	db	13
  5032  00F8F1  00                 	db	0
  5033  00F8F2                     STR_223:
  5034  00F8F2  20                 	db	32
  5035  00F8F3  20                 	db	32
  5036  00F8F4  20                 	db	32
  5037  00F8F5  20                 	db	32
  5038  00F8F6  20                 	db	32
  5039  00F8F7  20                 	db	32
  5040  00F8F8  20                 	db	32
  5041  00F8F9  20                 	db	32
  5042  00F8FA  47                 	db	71	;'G'
  5043  00F8FB  65                 	db	101	;'e'
  5044  00F8FC  6E                 	db	110	;'n'
  5045  00F8FD  65                 	db	101	;'e'
  5046  00F8FE  72                 	db	114	;'r'
  5047  00F8FF  61                 	db	97	;'a'
  5048  00F900  6C                 	db	108	;'l'
  5049  00F901  20                 	db	32
  5050  00F902  41                 	db	65	;'A'
  5051  00F903  44                 	db	68	;'D'
  5052  00F904  43                 	db	67	;'C'
  5053  00F905  20                 	db	32
  5054  00F906  65                 	db	101	;'e'
  5055  00F907  72                 	db	114	;'r'
  5056  00F908  72                 	db	114	;'r'
  5057  00F909  6F                 	db	111	;'o'
  5058  00F90A  72                 	db	114	;'r'
  5059  00F90B  0A                 	db	10
  5060  00F90C  0D                 	db	13
  5061  00F90D  00                 	db	0
  5062  00F90E  54                 	db	84	;'T'
  5063  00F90F  65                 	db	101	;'e'
  5064  00F910  73                 	db	115	;'s'
  5065  00F911  74                 	db	116	;'t'
  5066  00F912  69                 	db	105	;'i'
  5067  00F913  6E                 	db	110	;'n'
  5068  00F914  67                 	db	103	;'g'
  5069  00F915  20                 	db	32
  5070  00F916  74                 	db	116	;'t'
  5071  00F917  65                 	db	101	;'e'
  5072  00F918  78                 	db	120	;'x'
  5073  00F919  74                 	db	116	;'t'
  5074  00F91A  20                 	db	32
  5075  00F91B  61                 	db	97	;'a'
  5076  00F91C  74                 	db	116	;'t'
  5077  00F91D  74                 	db	116	;'t'
  5078  00F91E  72                 	db	114	;'r'
  5079  00F91F  69                 	db	105	;'i'
  5080  00F920  62                 	db	98	;'b'
  5081  00F921  75                 	db	117	;'u'
  5082  00F922  74                 	db	116	;'t'
  5083  00F923  65                 	db	101	;'e'
  5084  00F924  73                 	db	115	;'s'
  5085  00F925  3A                 	db	58	;':'
  5086  00F926  0A                 	db	10
  5087  00F927  0D                 	db	13
  5088  00F928  00                 	db	0
  5089  00F929  54                 	db	84	;'T'
  5090  00F92A  68                 	db	104	;'h'
  5091  00F92B  69                 	db	105	;'i'
  5092  00F92C  73                 	db	115	;'s'
  5093  00F92D  20                 	db	32
  5094  00F92E  74                 	db	116	;'t'
  5095  00F92F  65                 	db	101	;'e'
  5096  00F930  78                 	db	120	;'x'
  5097  00F931  74                 	db	116	;'t'
  5098  00F932  20                 	db	32
  5099  00F933  69                 	db	105	;'i'
  5100  00F934  73                 	db	115	;'s'
  5101  00F935  20                 	db	32
  5102  00F936  75                 	db	117	;'u'
  5103  00F937  6E                 	db	110	;'n'
  5104  00F938  64                 	db	100	;'d'
  5105  00F939  65                 	db	101	;'e'
  5106  00F93A  72                 	db	114	;'r'
  5107  00F93B  73                 	db	115	;'s'
  5108  00F93C  63                 	db	99	;'c'
  5109  00F93D  6F                 	db	111	;'o'
  5110  00F93E  72                 	db	114	;'r'
  5111  00F93F  65                 	db	101	;'e'
  5112  00F940  64                 	db	100	;'d'
  5113  00F941  0A                 	db	10
  5114  00F942  0D                 	db	13
  5115  00F943  00                 	db	0
  5116  00F944                     STR_267:
  5117  00F944  20                 	db	32
  5118  00F945  20                 	db	32
  5119  00F946  20                 	db	32
  5120  00F947  20                 	db	32
  5121  00F948  53                 	db	83	;'S'
  5122  00F949  79                 	db	121	;'y'
  5123  00F94A  73                 	db	115	;'s'
  5124  00F94B  74                 	db	116	;'t'
  5125  00F94C  65                 	db	101	;'e'
  5126  00F94D  6D                 	db	109	;'m'
  5127  00F94E  20                 	db	32
  5128  00F94F  54                 	db	84	;'T'
  5129  00F950  65                 	db	101	;'e'
  5130  00F951  6D                 	db	109	;'m'
  5131  00F952  70                 	db	112	;'p'
  5132  00F953  65                 	db	101	;'e'
  5133  00F954  72                 	db	114	;'r'
  5134  00F955  61                 	db	97	;'a'
  5135  00F956  74                 	db	116	;'t'
  5136  00F957  75                 	db	117	;'u'
  5137  00F958  72                 	db	114	;'r'
  5138  00F959  65                 	db	101	;'e'
  5139  00F95A  73                 	db	115	;'s'
  5140  00F95B  3A                 	db	58	;':'
  5141  00F95C  0A                 	db	10
  5142  00F95D  0D                 	db	13
  5143  00F95E  00                 	db	0
  5144  00F95F                     STR_27:
  5145  00F95F  52                 	db	82	;'R'
  5146  00F960  45                 	db	69	;'E'
  5147  00F961  53                 	db	83	;'S'
  5148  00F962  45                 	db	69	;'E'
  5149  00F963  54                 	db	84	;'T'
  5150  00F964  20                 	db	32
  5151  00F965  49                 	db	73	;'I'
  5152  00F966  6E                 	db	110	;'n'
  5153  00F967  73                 	db	115	;'s'
  5154  00F968  74                 	db	116	;'t'
  5155  00F969  72                 	db	114	;'r'
  5156  00F96A  75                 	db	117	;'u'
  5157  00F96B  63                 	db	99	;'c'
  5158  00F96C  74                 	db	116	;'t'
  5159  00F96D  69                 	db	105	;'i'
  5160  00F96E  6F                 	db	111	;'o'
  5161  00F96F  6E                 	db	110	;'n'
  5162  00F970  20                 	db	32
  5163  00F971  45                 	db	69	;'E'
  5164  00F972  78                 	db	120	;'x'
  5165  00F973  65                 	db	101	;'e'
  5166  00F974  63                 	db	99	;'c'
  5167  00F975  75                 	db	117	;'u'
  5168  00F976  74                 	db	116	;'t'
  5169  00F977  65                 	db	101	;'e'
  5170  00F978  64                 	db	100	;'d'
  5171  00F979  00                 	db	0
  5172  00F97A                     STR_333:
  5173  00F97A  54                 	db	84	;'T'
  5174  00F97B  68                 	db	104	;'h'
  5175  00F97C  69                 	db	105	;'i'
  5176  00F97D  73                 	db	115	;'s'
  5177  00F97E  20                 	db	32
  5178  00F97F  74                 	db	116	;'t'
  5179  00F980  65                 	db	101	;'e'
  5180  00F981  78                 	db	120	;'x'
  5181  00F982  74                 	db	116	;'t'
  5182  00F983  20                 	db	32
  5183  00F984  69                 	db	105	;'i'
  5184  00F985  73                 	db	115	;'s'
  5185  00F986  20                 	db	32
  5186  00F987  6E                 	db	110	;'n'
  5187  00F988  6F                 	db	111	;'o'
  5188  00F989  72                 	db	114	;'r'
  5189  00F98A  6D                 	db	109	;'m'
  5190  00F98B  61                 	db	97	;'a'
  5191  00F98C  6C                 	db	108	;'l'
  5192  00F98D  0A                 	db	10
  5193  00F98E  0D                 	db	13
  5194  00F98F  0A                 	db	10
  5195  00F990  0D                 	db	13
  5196  00F991  00                 	db	0
  5197  00F992  54                 	db	84	;'T'
  5198  00F993  68                 	db	104	;'h'
  5199  00F994  69                 	db	105	;'i'
  5200  00F995  73                 	db	115	;'s'
  5201  00F996  20                 	db	32
  5202  00F997  74                 	db	116	;'t'
  5203  00F998  65                 	db	101	;'e'
  5204  00F999  78                 	db	120	;'x'
  5205  00F99A  74                 	db	116	;'t'
  5206  00F99B  20                 	db	32
  5207  00F99C  69                 	db	105	;'i'
  5208  00F99D  73                 	db	115	;'s'
  5209  00F99E  20                 	db	32
  5210  00F99F  72                 	db	114	;'r'
  5211  00F9A0  65                 	db	101	;'e'
  5212  00F9A1  76                 	db	118	;'v'
  5213  00F9A2  65                 	db	101	;'e'
  5214  00F9A3  72                 	db	114	;'r'
  5215  00F9A4  73                 	db	115	;'s'
  5216  00F9A5  65                 	db	101	;'e'
  5217  00F9A6  64                 	db	100	;'d'
  5218  00F9A7  0A                 	db	10
  5219  00F9A8  0D                 	db	13
  5220  00F9A9  00                 	db	0
  5221  00F9AA  54                 	db	84	;'T'
  5222  00F9AB  68                 	db	104	;'h'
  5223  00F9AC  69                 	db	105	;'i'
  5224  00F9AD  73                 	db	115	;'s'
  5225  00F9AE  20                 	db	32
  5226  00F9AF  74                 	db	116	;'t'
  5227  00F9B0  65                 	db	101	;'e'
  5228  00F9B1  78                 	db	120	;'x'
  5229  00F9B2  74                 	db	116	;'t'
  5230  00F9B3  20                 	db	32
  5231  00F9B4  69                 	db	105	;'i'
  5232  00F9B5  73                 	db	115	;'s'
  5233  00F9B6  20                 	db	32
  5234  00F9B7  62                 	db	98	;'b'
  5235  00F9B8  6C                 	db	108	;'l'
  5236  00F9B9  69                 	db	105	;'i'
  5237  00F9BA  6E                 	db	110	;'n'
  5238  00F9BB  6B                 	db	107	;'k'
  5239  00F9BC  69                 	db	105	;'i'
  5240  00F9BD  6E                 	db	110	;'n'
  5241  00F9BE  67                 	db	103	;'g'
  5242  00F9BF  0A                 	db	10
  5243  00F9C0  0D                 	db	13
  5244  00F9C1  00                 	db	0
  5245  00F9C2                     STR_205:
  5246  00F9C2  55                 	db	85	;'U'
  5247  00F9C3  41                 	db	65	;'A'
  5248  00F9C4  52                 	db	82	;'R'
  5249  00F9C5  54                 	db	84	;'T'
  5250  00F9C6  20                 	db	32
  5251  00F9C7  65                 	db	101	;'e'
  5252  00F9C8  72                 	db	114	;'r'
  5253  00F9C9  72                 	db	114	;'r'
  5254  00F9CA  6F                 	db	111	;'o'
  5255  00F9CB  72                 	db	114	;'r'
  5256  00F9CC  28                 	db	40
  5257  00F9CD  73                 	db	115	;'s'
  5258  00F9CE  29                 	db	41
  5259  00F9CF  20                 	db	32
  5260  00F9D0  63                 	db	99	;'c'
  5261  00F9D1  6C                 	db	108	;'l'
  5262  00F9D2  65                 	db	101	;'e'
  5263  00F9D3  61                 	db	97	;'a'
  5264  00F9D4  72                 	db	114	;'r'
  5265  00F9D5  65                 	db	101	;'e'
  5266  00F9D6  64                 	db	100	;'d'
  5267  00F9D7  0A                 	db	10
  5268  00F9D8  0D                 	db	13
  5269  00F9D9  00                 	db	0
  5270  00F9DA  54                 	db	84	;'T'
  5271  00F9DB  68                 	db	104	;'h'
  5272  00F9DC  69                 	db	105	;'i'
  5273  00F9DD  73                 	db	115	;'s'
  5274  00F9DE  20                 	db	32
  5275  00F9DF  74                 	db	116	;'t'
  5276  00F9E0  65                 	db	101	;'e'
  5277  00F9E1  78                 	db	120	;'x'
  5278  00F9E2  74                 	db	116	;'t'
  5279  00F9E3  20                 	db	32
  5280  00F9E4  69                 	db	105	;'i'
  5281  00F9E5  73                 	db	115	;'s'
  5282  00F9E6  20                 	db	32
  5283  00F9E7  6D                 	db	109	;'m'
  5284  00F9E8  61                 	db	97	;'a'
  5285  00F9E9  67                 	db	103	;'g'
  5286  00F9EA  65                 	db	101	;'e'
  5287  00F9EB  6E                 	db	110	;'n'
  5288  00F9EC  74                 	db	116	;'t'
  5289  00F9ED  61                 	db	97	;'a'
  5290  00F9EE  0A                 	db	10
  5291  00F9EF  0D                 	db	13
  5292  00F9F0  00                 	db	0
  5293  00F9F1                     STR_247:
  5294  00F9F1  20                 	db	32
  5295  00F9F2  20                 	db	32
  5296  00F9F3  20                 	db	32
  5297  00F9F4  20                 	db	32
  5298  00F9F5  53                 	db	83	;'S'
  5299  00F9F6  79                 	db	121	;'y'
  5300  00F9F7  73                 	db	115	;'s'
  5301  00F9F8  74                 	db	116	;'t'
  5302  00F9F9  65                 	db	101	;'e'
  5303  00F9FA  6D                 	db	109	;'m'
  5304  00F9FB  20                 	db	32
  5305  00F9FC  56                 	db	86	;'V'
  5306  00F9FD  6F                 	db	111	;'o'
  5307  00F9FE  6C                 	db	108	;'l'
  5308  00F9FF  74                 	db	116	;'t'
  5309  00FA00  61                 	db	97	;'a'
  5310  00FA01  67                 	db	103	;'g'
  5311  00FA02  65                 	db	101	;'e'
  5312  00FA03  73                 	db	115	;'s'
  5313  00FA04  3A                 	db	58	;':'
  5314  00FA05  0A                 	db	10
  5315  00FA06  0D                 	db	13
  5316  00FA07  00                 	db	0
  5317  00FA08                     STR_251:
  5318  00FA08  20                 	db	32
  5319  00FA09  20                 	db	32
  5320  00FA0A  20                 	db	32
  5321  00FA0B  20                 	db	32
  5322  00FA0C  53                 	db	83	;'S'
  5323  00FA0D  79                 	db	121	;'y'
  5324  00FA0E  73                 	db	115	;'s'
  5325  00FA0F  74                 	db	116	;'t'
  5326  00FA10  65                 	db	101	;'e'
  5327  00FA11  6D                 	db	109	;'m'
  5328  00FA12  20                 	db	32
  5329  00FA13  43                 	db	67	;'C'
  5330  00FA14  75                 	db	117	;'u'
  5331  00FA15  72                 	db	114	;'r'
  5332  00FA16  72                 	db	114	;'r'
  5333  00FA17  65                 	db	101	;'e'
  5334  00FA18  6E                 	db	110	;'n'
  5335  00FA19  74                 	db	116	;'t'
  5336  00FA1A  73                 	db	115	;'s'
  5337  00FA1B  3A                 	db	58	;':'
  5338  00FA1C  0A                 	db	10
  5339  00FA1D  0D                 	db	13
  5340  00FA1E  00                 	db	0
  5341  00FA1F                     STR_201:
  5342  00FA1F  41                 	db	65	;'A'
  5343  00FA20  44                 	db	68	;'D'
  5344  00FA21  43                 	db	67	;'C'
  5345  00FA22  20                 	db	32
  5346  00FA23  45                 	db	69	;'E'
  5347  00FA24  72                 	db	114	;'r'
  5348  00FA25  72                 	db	114	;'r'
  5349  00FA26  6F                 	db	111	;'o'
  5350  00FA27  72                 	db	114	;'r'
  5351  00FA28  28                 	db	40
  5352  00FA29  73                 	db	115	;'s'
  5353  00FA2A  29                 	db	41
  5354  00FA2B  20                 	db	32
  5355  00FA2C  63                 	db	99	;'c'
  5356  00FA2D  6C                 	db	108	;'l'
  5357  00FA2E  65                 	db	101	;'e'
  5358  00FA2F  61                 	db	97	;'a'
  5359  00FA30  72                 	db	114	;'r'
  5360  00FA31  65                 	db	101	;'e'
  5361  00FA32  64                 	db	100	;'d'
  5362  00FA33  0A                 	db	10
  5363  00FA34  0D                 	db	13
  5364  00FA35  00                 	db	0
  5365  00FA36                     STR_203:
  5366  00FA36  49                 	db	73	;'I'
  5367  00FA37  32                 	db	50	;'2'
  5368  00FA38  43                 	db	67	;'C'
  5369  00FA39  20                 	db	32
  5370  00FA3A  65                 	db	101	;'e'
  5371  00FA3B  72                 	db	114	;'r'
  5372  00FA3C  72                 	db	114	;'r'
  5373  00FA3D  6F                 	db	111	;'o'
  5374  00FA3E  72                 	db	114	;'r'
  5375  00FA3F  28                 	db	40
  5376  00FA40  73                 	db	115	;'s'
  5377  00FA41  29                 	db	41
  5378  00FA42  20                 	db	32
  5379  00FA43  63                 	db	99	;'c'
  5380  00FA44  6C                 	db	108	;'l'
  5381  00FA45  65                 	db	101	;'e'
  5382  00FA46  61                 	db	97	;'a'
  5383  00FA47  72                 	db	114	;'r'
  5384  00FA48  65                 	db	101	;'e'
  5385  00FA49  64                 	db	100	;'d'
  5386  00FA4A  0A                 	db	10
  5387  00FA4B  0D                 	db	13
  5388  00FA4C  00                 	db	0
  5389  00FA4D  54                 	db	84	;'T'
  5390  00FA4E  68                 	db	104	;'h'
  5391  00FA4F  69                 	db	105	;'i'
  5392  00FA50  73                 	db	115	;'s'
  5393  00FA51  20                 	db	32
  5394  00FA52  74                 	db	116	;'t'
  5395  00FA53  65                 	db	101	;'e'
  5396  00FA54  78                 	db	120	;'x'
  5397  00FA55  74                 	db	116	;'t'
  5398  00FA56  20                 	db	32
  5399  00FA57  69                 	db	105	;'i'
  5400  00FA58  73                 	db	115	;'s'
  5401  00FA59  20                 	db	32
  5402  00FA5A  79                 	db	121	;'y'
  5403  00FA5B  65                 	db	101	;'e'
  5404  00FA5C  6C                 	db	108	;'l'
  5405  00FA5D  6C                 	db	108	;'l'
  5406  00FA5E  6F                 	db	111	;'o'
  5407  00FA5F  77                 	db	119	;'w'
  5408  00FA60  0A                 	db	10
  5409  00FA61  0D                 	db	13
  5410  00FA62  00                 	db	0
  5411  00FA63                     STR_210:
  5412  00FA63  41                 	db	65	;'A'
  5413  00FA64  76                 	db	118	;'v'
  5414  00FA65  61                 	db	97	;'a'
  5415  00FA66  69                 	db	105	;'i'
  5416  00FA67  6C                 	db	108	;'l'
  5417  00FA68  61                 	db	97	;'a'
  5418  00FA69  62                 	db	98	;'b'
  5419  00FA6A  6C                 	db	108	;'l'
  5420  00FA6B  65                 	db	101	;'e'
  5421  00FA6C  20                 	db	32
  5422  00FA6D  43                 	db	67	;'C'
  5423  00FA6E  6F                 	db	111	;'o'
  5424  00FA6F  6D                 	db	109	;'m'
  5425  00FA70  6D                 	db	109	;'m'
  5426  00FA71  61                 	db	97	;'a'
  5427  00FA72  6E                 	db	110	;'n'
  5428  00FA73  64                 	db	100	;'d'
  5429  00FA74  73                 	db	115	;'s'
  5430  00FA75  3A                 	db	58	;':'
  5431  00FA76  0A                 	db	10
  5432  00FA77  0D                 	db	13
  5433  00FA78  00                 	db	0
  5434  00FA79                     STR_207:
  5435  00FA79  43                 	db	67	;'C'
  5436  00FA7A  75                 	db	117	;'u'
  5437  00FA7B  72                 	db	114	;'r'
  5438  00FA7C  72                 	db	114	;'r'
  5439  00FA7D  65                 	db	101	;'e'
  5440  00FA7E  6E                 	db	110	;'n'
  5441  00FA7F  74                 	db	116	;'t'
  5442  00FA80  20                 	db	32
  5443  00FA81  4D                 	db	77	;'M'
  5444  00FA82  65                 	db	101	;'e'
  5445  00FA83  61                 	db	97	;'a'
  5446  00FA84  73                 	db	115	;'s'
  5447  00FA85  75                 	db	117	;'u'
  5448  00FA86  72                 	db	114	;'r'
  5449  00FA87  65                 	db	101	;'e'
  5450  00FA88  6D                 	db	109	;'m'
  5451  00FA89  65                 	db	101	;'e'
  5452  00FA8A  6E                 	db	110	;'n'
  5453  00FA8B  74                 	db	116	;'t'
  5454  00FA8C  73                 	db	115	;'s'
  5455  00FA8D  3F                 	db	63	;'?'
  5456  00FA8E  00                 	db	0
  5457  00FA8F                     STR_29:
  5458  00FA8F  53                 	db	83	;'S'
  5459  00FA90  74                 	db	116	;'t'
  5460  00FA91  61                 	db	97	;'a'
  5461  00FA92  63                 	db	99	;'c'
  5462  00FA93  6B                 	db	107	;'k'
  5463  00FA94  20                 	db	32
  5464  00FA95  55                 	db	85	;'U'
  5465  00FA96  6E                 	db	110	;'n'
  5466  00FA97  64                 	db	100	;'d'
  5467  00FA98  65                 	db	101	;'e'
  5468  00FA99  72                 	db	114	;'r'
  5469  00FA9A  66                 	db	102	;'f'
  5470  00FA9B  6C                 	db	108	;'l'
  5471  00FA9C  6F                 	db	111	;'o'
  5472  00FA9D  77                 	db	119	;'w'
  5473  00FA9E  20                 	db	32
  5474  00FA9F  52                 	db	82	;'R'
  5475  00FAA0  65                 	db	101	;'e'
  5476  00FAA1  73                 	db	115	;'s'
  5477  00FAA2  65                 	db	101	;'e'
  5478  00FAA3  74                 	db	116	;'t'
  5479  00FAA4  00                 	db	0
  5480  00FAA5  54                 	db	84	;'T'
  5481  00FAA6  68                 	db	104	;'h'
  5482  00FAA7  69                 	db	105	;'i'
  5483  00FAA8  73                 	db	115	;'s'
  5484  00FAA9  20                 	db	32
  5485  00FAAA  74                 	db	116	;'t'
  5486  00FAAB  65                 	db	101	;'e'
  5487  00FAAC  78                 	db	120	;'x'
  5488  00FAAD  74                 	db	116	;'t'
  5489  00FAAE  20                 	db	32
  5490  00FAAF  69                 	db	105	;'i'
  5491  00FAB0  73                 	db	115	;'s'
  5492  00FAB1  20                 	db	32
  5493  00FAB2  62                 	db	98	;'b'
  5494  00FAB3  6C                 	db	108	;'l'
  5495  00FAB4  61                 	db	97	;'a'
  5496  00FAB5  63                 	db	99	;'c'
  5497  00FAB6  6B                 	db	107	;'k'
  5498  00FAB7  0A                 	db	10
  5499  00FAB8  0D                 	db	13
  5500  00FAB9  00                 	db	0
  5501  00FABA  54                 	db	84	;'T'
  5502  00FABB  68                 	db	104	;'h'
  5503  00FABC  69                 	db	105	;'i'
  5504  00FABD  73                 	db	115	;'s'
  5505  00FABE  20                 	db	32
  5506  00FABF  74                 	db	116	;'t'
  5507  00FAC0  65                 	db	101	;'e'
  5508  00FAC1  78                 	db	120	;'x'
  5509  00FAC2  74                 	db	116	;'t'
  5510  00FAC3  20                 	db	32
  5511  00FAC4  69                 	db	105	;'i'
  5512  00FAC5  73                 	db	115	;'s'
  5513  00FAC6  20                 	db	32
  5514  00FAC7  67                 	db	103	;'g'
  5515  00FAC8  72                 	db	114	;'r'
  5516  00FAC9  65                 	db	101	;'e'
  5517  00FACA  65                 	db	101	;'e'
  5518  00FACB  6E                 	db	110	;'n'
  5519  00FACC  0A                 	db	10
  5520  00FACD  0D                 	db	13
  5521  00FACE  00                 	db	0
  5522  00FACF                     STR_28:
  5523  00FACF  53                 	db	83	;'S'
  5524  00FAD0  74                 	db	116	;'t'
  5525  00FAD1  61                 	db	97	;'a'
  5526  00FAD2  63                 	db	99	;'c'
  5527  00FAD3  6B                 	db	107	;'k'
  5528  00FAD4  20                 	db	32
  5529  00FAD5  4F                 	db	79	;'O'
  5530  00FAD6  76                 	db	118	;'v'
  5531  00FAD7  65                 	db	101	;'e'
  5532  00FAD8  72                 	db	114	;'r'
  5533  00FAD9  66                 	db	102	;'f'
  5534  00FADA  6C                 	db	108	;'l'
  5535  00FADB  6F                 	db	111	;'o'
  5536  00FADC  77                 	db	119	;'w'
  5537  00FADD  20                 	db	32
  5538  00FADE  52                 	db	82	;'R'
  5539  00FADF  65                 	db	101	;'e'
  5540  00FAE0  73                 	db	115	;'s'
  5541  00FAE1  65                 	db	101	;'e'
  5542  00FAE2  74                 	db	116	;'t'
  5543  00FAE3  00                 	db	0
  5544  00FAE4  54                 	db	84	;'T'
  5545  00FAE5  68                 	db	104	;'h'
  5546  00FAE6  69                 	db	105	;'i'
  5547  00FAE7  73                 	db	115	;'s'
  5548  00FAE8  20                 	db	32
  5549  00FAE9  74                 	db	116	;'t'
  5550  00FAEA  65                 	db	101	;'e'
  5551  00FAEB  78                 	db	120	;'x'
  5552  00FAEC  74                 	db	116	;'t'
  5553  00FAED  20                 	db	32
  5554  00FAEE  69                 	db	105	;'i'
  5555  00FAEF  73                 	db	115	;'s'
  5556  00FAF0  20                 	db	32
  5557  00FAF1  62                 	db	98	;'b'
  5558  00FAF2  6F                 	db	111	;'o'
  5559  00FAF3  6C                 	db	108	;'l'
  5560  00FAF4  64                 	db	100	;'d'
  5561  00FAF5  0A                 	db	10
  5562  00FAF6  0D                 	db	13
  5563  00FAF7  00                 	db	0
  5564  00FAF8  54                 	db	84	;'T'
  5565  00FAF9  68                 	db	104	;'h'
  5566  00FAFA  69                 	db	105	;'i'
  5567  00FAFB  73                 	db	115	;'s'
  5568  00FAFC  20                 	db	32
  5569  00FAFD  74                 	db	116	;'t'
  5570  00FAFE  65                 	db	101	;'e'
  5571  00FAFF  78                 	db	120	;'x'
  5572  00FB00  74                 	db	116	;'t'
  5573  00FB01  20                 	db	32
  5574  00FB02  69                 	db	105	;'i'
  5575  00FB03  73                 	db	115	;'s'
  5576  00FB04  20                 	db	32
  5577  00FB05  62                 	db	98	;'b'
  5578  00FB06  6C                 	db	108	;'l'
  5579  00FB07  75                 	db	117	;'u'
  5580  00FB08  65                 	db	101	;'e'
  5581  00FB09  0A                 	db	10
  5582  00FB0A  0D                 	db	13
  5583  00FB0B  00                 	db	0
  5584  00FB0C  54                 	db	84	;'T'
  5585  00FB0D  68                 	db	104	;'h'
  5586  00FB0E  69                 	db	105	;'i'
  5587  00FB0F  73                 	db	115	;'s'
  5588  00FB10  20                 	db	32
  5589  00FB11  74                 	db	116	;'t'
  5590  00FB12  65                 	db	101	;'e'
  5591  00FB13  78                 	db	120	;'x'
  5592  00FB14  74                 	db	116	;'t'
  5593  00FB15  20                 	db	32
  5594  00FB16  69                 	db	105	;'i'
  5595  00FB17  73                 	db	115	;'s'
  5596  00FB18  20                 	db	32
  5597  00FB19  63                 	db	99	;'c'
  5598  00FB1A  79                 	db	121	;'y'
  5599  00FB1B  61                 	db	97	;'a'
  5600  00FB1C  6E                 	db	110	;'n'
  5601  00FB1D  0A                 	db	10
  5602  00FB1E  0D                 	db	13
  5603  00FB1F  00                 	db	0
  5604  00FB20                     STR_255:
  5605  00FB20  20                 	db	32
  5606  00FB21  20                 	db	32
  5607  00FB22  20                 	db	32
  5608  00FB23  20                 	db	32
  5609  00FB24  53                 	db	83	;'S'
  5610  00FB25  79                 	db	121	;'y'
  5611  00FB26  73                 	db	115	;'s'
  5612  00FB27  74                 	db	116	;'t'
  5613  00FB28  65                 	db	101	;'e'
  5614  00FB29  6D                 	db	109	;'m'
  5615  00FB2A  20                 	db	32
  5616  00FB2B  50                 	db	80	;'P'
  5617  00FB2C  6F                 	db	111	;'o'
  5618  00FB2D  77                 	db	119	;'w'
  5619  00FB2E  65                 	db	101	;'e'
  5620  00FB2F  72                 	db	114	;'r'
  5621  00FB30  3A                 	db	58	;':'
  5622  00FB31  0A                 	db	10
  5623  00FB32  0D                 	db	13
  5624  00FB33  00                 	db	0
  5625  00FB34  54                 	db	84	;'T'
  5626  00FB35  68                 	db	104	;'h'
  5627  00FB36  69                 	db	105	;'i'
  5628  00FB37  73                 	db	115	;'s'
  5629  00FB38  20                 	db	32
  5630  00FB39  74                 	db	116	;'t'
  5631  00FB3A  65                 	db	101	;'e'
  5632  00FB3B  78                 	db	120	;'x'
  5633  00FB3C  74                 	db	116	;'t'
  5634  00FB3D  20                 	db	32
  5635  00FB3E  69                 	db	105	;'i'
  5636  00FB3F  73                 	db	115	;'s'
  5637  00FB40  20                 	db	32
  5638  00FB41  72                 	db	114	;'r'
  5639  00FB42  65                 	db	101	;'e'
  5640  00FB43  64                 	db	100	;'d'
  5641  00FB44  0A                 	db	10
  5642  00FB45  0D                 	db	13
  5643  00FB46  00                 	db	0
  5644  00FB47                     STR_24:
  5645  00FB47  4D                 	db	77	;'M'
  5646  00FB48  61                 	db	97	;'a'
  5647  00FB49  73                 	db	115	;'s'
  5648  00FB4A  74                 	db	116	;'t'
  5649  00FB4B  65                 	db	101	;'e'
  5650  00FB4C  72                 	db	114	;'r'
  5651  00FB4D  20                 	db	32
  5652  00FB4E  43                 	db	67	;'C'
  5653  00FB4F  6C                 	db	108	;'l'
  5654  00FB50  65                 	db	101	;'e'
  5655  00FB51  61                 	db	97	;'a'
  5656  00FB52  72                 	db	114	;'r'
  5657  00FB53  20                 	db	32
  5658  00FB54  52                 	db	82	;'R'
  5659  00FB55  65                 	db	101	;'e'
  5660  00FB56  73                 	db	115	;'s'
  5661  00FB57  65                 	db	101	;'e'
  5662  00FB58  74                 	db	116	;'t'
  5663  00FB59  00                 	db	0
  5664  00FB5A  55                 	db	85	;'U'
  5665  00FB5B  53                 	db	83	;'S'
  5666  00FB5C  42                 	db	66	;'B'
  5667  00FB5D  20                 	db	32
  5668  00FB5E  55                 	db	85	;'U'
  5669  00FB5F  41                 	db	65	;'A'
  5670  00FB60  52                 	db	82	;'R'
  5671  00FB61  54                 	db	84	;'T'
  5672  00FB62  20                 	db	32
  5673  00FB63  54                 	db	84	;'T'
  5674  00FB64  65                 	db	101	;'e'
  5675  00FB65  73                 	db	115	;'s'
  5676  00FB66  74                 	db	116	;'t'
  5677  00FB67  0A                 	db	10
  5678  00FB68  0D                 	db	13
  5679  00FB69  0A                 	db	10
  5680  00FB6A  0D                 	db	13
  5681  00FB6B  00                 	db	0
  5682  00FB6C                     STR_204:
  5683  00FB6C  43                 	db	67	;'C'
  5684  00FB6D  6C                 	db	108	;'l'
  5685  00FB6E  65                 	db	101	;'e'
  5686  00FB6F  61                 	db	97	;'a'
  5687  00FB70  72                 	db	114	;'r'
  5688  00FB71  20                 	db	32
  5689  00FB72  55                 	db	85	;'U'
  5690  00FB73  41                 	db	65	;'A'
  5691  00FB74  52                 	db	82	;'R'
  5692  00FB75  54                 	db	84	;'T'
  5693  00FB76  20                 	db	32
  5694  00FB77  45                 	db	69	;'E'
  5695  00FB78  72                 	db	114	;'r'
  5696  00FB79  72                 	db	114	;'r'
  5697  00FB7A  6F                 	db	111	;'o'
  5698  00FB7B  72                 	db	114	;'r'
  5699  00FB7C  73                 	db	115	;'s'
  5700  00FB7D  00                 	db	0
  5701  00FB7E                     STR_336:
  5702  00FB7E  30                 	db	48	;'0'
  5703  00FB7F  31                 	db	49	;'1'
  5704  00FB80  32                 	db	50	;'2'
  5705  00FB81  33                 	db	51	;'3'
  5706  00FB82  34                 	db	52	;'4'
  5707  00FB83  35                 	db	53	;'5'
  5708  00FB84  36                 	db	54	;'6'
  5709  00FB85  37                 	db	55	;'7'
  5710  00FB86  38                 	db	56	;'8'
  5711  00FB87  39                 	db	57	;'9'
  5712  00FB88  41                 	db	65	;'A'
  5713  00FB89  42                 	db	66	;'B'
  5714  00FB8A  43                 	db	67	;'C'
  5715  00FB8B  44                 	db	68	;'D'
  5716  00FB8C  45                 	db	69	;'E'
  5717  00FB8D  46                 	db	70	;'F'
  5718  00FB8E  00                 	db	0
  5719  00FB8F                     STR_202:
  5720  00FB8F  43                 	db	67	;'C'
  5721  00FB90  6C                 	db	108	;'l'
  5722  00FB91  65                 	db	101	;'e'
  5723  00FB92  61                 	db	97	;'a'
  5724  00FB93  72                 	db	114	;'r'
  5725  00FB94  20                 	db	32
  5726  00FB95  49                 	db	73	;'I'
  5727  00FB96  32                 	db	50	;'2'
  5728  00FB97  43                 	db	67	;'C'
  5729  00FB98  20                 	db	32
  5730  00FB99  45                 	db	69	;'E'
  5731  00FB9A  72                 	db	114	;'r'
  5732  00FB9B  72                 	db	114	;'r'
  5733  00FB9C  6F                 	db	111	;'o'
  5734  00FB9D  72                 	db	114	;'r'
  5735  00FB9E  73                 	db	115	;'s'
  5736  00FB9F  00                 	db	0
  5737  00FBA0                     STR_200:
  5738  00FBA0  43                 	db	67	;'C'
  5739  00FBA1  6C                 	db	108	;'l'
  5740  00FBA2  65                 	db	101	;'e'
  5741  00FBA3  61                 	db	97	;'a'
  5742  00FBA4  72                 	db	114	;'r'
  5743  00FBA5  20                 	db	32
  5744  00FBA6  41                 	db	65	;'A'
  5745  00FBA7  44                 	db	68	;'D'
  5746  00FBA8  43                 	db	67	;'C'
  5747  00FBA9  20                 	db	32
  5748  00FBAA  45                 	db	69	;'E'
  5749  00FBAB  72                 	db	114	;'r'
  5750  00FBAC  72                 	db	114	;'r'
  5751  00FBAD  6F                 	db	111	;'o'
  5752  00FBAE  72                 	db	114	;'r'
  5753  00FBAF  73                 	db	115	;'s'
  5754  00FBB0  00                 	db	0
  5755  00FBB1                     STR_74:
  5756  00FBB1  76                 	db	118	;'v'
  5757  00FBB2  69                 	db	105	;'i'
  5758  00FBB3  61                 	db	97	;'a'
  5759  00FBB4  20                 	db	32
  5760  00FBB5  55                 	db	85	;'U'
  5761  00FBB6  53                 	db	83	;'S'
  5762  00FBB7  42                 	db	66	;'B'
  5763  00FBB8  2C                 	db	44
  5764  00FBB9  20                 	db	32
  5765  00FBBA  27                 	db	39
  5766  00FBBB  48                 	db	72	;'H'
  5767  00FBBC  65                 	db	101	;'e'
  5768  00FBBD  6C                 	db	108	;'l'
  5769  00FBBE  70                 	db	112	;'p'
  5770  00FBBF  27                 	db	39
  5771  00FBC0  00                 	db	0
  5772  00FBC1                     STR_148:
  5773  00FBC1  51                 	db	81	;'Q'
  5774  00FBC2  49                 	db	73	;'I'
  5775  00FBC3  20                 	db	32
  5776  00FBC4  43                 	db	67	;'C'
  5777  00FBC5  68                 	db	104	;'h'
  5778  00FBC6  61                 	db	97	;'a'
  5779  00FBC7  72                 	db	114	;'r'
  5780  00FBC8  67                 	db	103	;'g'
  5781  00FBC9  65                 	db	101	;'e'
  5782  00FBCA  20                 	db	32
  5783  00FBCB  54                 	db	84	;'T'
  5784  00FBCC  69                 	db	105	;'i'
  5785  00FBCD  6D                 	db	109	;'m'
  5786  00FBCE  65                 	db	101	;'e'
  5787  00FBCF  3A                 	db	58	;':'
  5788  00FBD0  00                 	db	0
  5789  00FBD1                     STR_67:
  5790  00FBD1  43                 	db	67	;'C'
  5791  00FBD2  4F                 	db	79	;'O'
  5792  00FBD3  4D                 	db	77	;'M'
  5793  00FBD4  20                 	db	32
  5794  00FBD5  50                 	db	80	;'P'
  5795  00FBD6  6F                 	db	111	;'o'
  5796  00FBD7  72                 	db	114	;'r'
  5797  00FBD8  74                 	db	116	;'t'
  5798  00FBD9  20                 	db	32
  5799  00FBDA  53                 	db	83	;'S'
  5800  00FBDB  65                 	db	101	;'e'
  5801  00FBDC  74                 	db	116	;'t'
  5802  00FBDD  75                 	db	117	;'u'
  5803  00FBDE  70                 	db	112	;'p'
  5804  00FBDF  3A                 	db	58	;':'
  5805  00FBE0  00                 	db	0
  5806  00FBE1                     STR_62:
  5807  00FBE1  43                 	db	67	;'C'
  5808  00FBE2  61                 	db	97	;'a'
  5809  00FBE3  75                 	db	117	;'u'
  5810  00FBE4  73                 	db	115	;'s'
  5811  00FBE5  65                 	db	101	;'e'
  5812  00FBE6  20                 	db	32
  5813  00FBE7  6F                 	db	111	;'o'
  5814  00FBE8  66                 	db	102	;'f'
  5815  00FBE9  20                 	db	32
  5816  00FBEA  52                 	db	82	;'R'
  5817  00FBEB  65                 	db	101	;'e'
  5818  00FBEC  73                 	db	115	;'s'
  5819  00FBED  65                 	db	101	;'e'
  5820  00FBEE  74                 	db	116	;'t'
  5821  00FBEF  3A                 	db	58	;':'
  5822  00FBF0  00                 	db	0
  5823  00FBF1                     STR_61:
  5824  00FBF1  44                 	db	68	;'D'
  5825  00FBF2  69                 	db	105	;'i'
  5826  00FBF3  67                 	db	103	;'g'
  5827  00FBF4  69                 	db	105	;'i'
  5828  00FBF5  74                 	db	116	;'t'
  5829  00FBF6  61                 	db	97	;'a'
  5830  00FBF7  6C                 	db	108	;'l'
  5831  00FBF8  20                 	db	32
  5832  00FBF9  4D                 	db	77	;'M'
  5833  00FBFA  6F                 	db	111	;'o'
  5834  00FBFB  6E                 	db	110	;'n'
  5835  00FBFC  69                 	db	105	;'i'
  5836  00FBFD  74                 	db	116	;'t'
  5837  00FBFE  6F                 	db	111	;'o'
  5838  00FBFF  72                 	db	114	;'r'
  5839  00FC00  00                 	db	0
  5840  00FC01                     STR_69:
  5841  00FC01  38                 	db	56	;'8'
  5842  00FC02  62                 	db	98	;'b'
  5843  00FC03  69                 	db	105	;'i'
  5844  00FC04  74                 	db	116	;'t'
  5845  00FC05  2C                 	db	44
  5846  00FC06  20                 	db	32
  5847  00FC07  6E                 	db	110	;'n'
  5848  00FC08  6F                 	db	111	;'o'
  5849  00FC09  20                 	db	32
  5850  00FC0A  70                 	db	112	;'p'
  5851  00FC0B  61                 	db	97	;'a'
  5852  00FC0C  72                 	db	114	;'r'
  5853  00FC0D  69                 	db	105	;'i'
  5854  00FC0E  74                 	db	116	;'t'
  5855  00FC0F  79                 	db	121	;'y'
  5856  00FC10  00                 	db	0
  5857  00FC11                     STR_21:
  5858  00FC11  55                 	db	85	;'U'
  5859  00FC12  6E                 	db	110	;'n'
  5860  00FC13  64                 	db	100	;'d'
  5861  00FC14  65                 	db	101	;'e'
  5862  00FC15  66                 	db	102	;'f'
  5863  00FC16  69                 	db	105	;'i'
  5864  00FC17  6E                 	db	110	;'n'
  5865  00FC18  65                 	db	101	;'e'
  5866  00FC19  64                 	db	100	;'d'
  5867  00FC1A  20                 	db	32
  5868  00FC1B  52                 	db	82	;'R'
  5869  00FC1C  65                 	db	101	;'e'
  5870  00FC1D  73                 	db	115	;'s'
  5871  00FC1E  65                 	db	101	;'e'
  5872  00FC1F  74                 	db	116	;'t'
  5873  00FC20  00                 	db	0
  5874  00FC21                     STR_23:
  5875  00FC21  42                 	db	66	;'B'
  5876  00FC22  72                 	db	114	;'r'
  5877  00FC23  6F                 	db	111	;'o'
  5878  00FC24  77                 	db	119	;'w'
  5879  00FC25  6E                 	db	110	;'n'
  5880  00FC26  20                 	db	32
  5881  00FC27  4F                 	db	79	;'O'
  5882  00FC28  75                 	db	117	;'u'
  5883  00FC29  74                 	db	116	;'t'
  5884  00FC2A  20                 	db	32
  5885  00FC2B  52                 	db	82	;'R'
  5886  00FC2C  65                 	db	101	;'e'
  5887  00FC2D  73                 	db	115	;'s'
  5888  00FC2E  65                 	db	101	;'e'
  5889  00FC2F  74                 	db	116	;'t'
  5890  00FC30  00                 	db	0
  5891  00FC31                     STR_184:
  5892  00FC31  44                 	db	68	;'D'
  5893  00FC32  65                 	db	101	;'e'
  5894  00FC33  76                 	db	118	;'v'
  5895  00FC34  69                 	db	105	;'i'
  5896  00FC35  63                 	db	99	;'c'
  5897  00FC36  65                 	db	101	;'e'
  5898  00FC37  20                 	db	32
  5899  00FC38  53                 	db	83	;'S'
  5900  00FC39  74                 	db	116	;'t'
  5901  00FC3A  61                 	db	97	;'a'
  5902  00FC3B  74                 	db	116	;'t'
  5903  00FC3C  75                 	db	117	;'u'
  5904  00FC3D  73                 	db	115	;'s'
  5905  00FC3E  3F                 	db	63	;'?'
  5906  00FC3F  00                 	db	0
  5907  00FC40                     STR_75:
  5908  00FC40  43                 	db	67	;'C'
  5909  00FC41  68                 	db	104	;'h'
  5910  00FC42  61                 	db	97	;'a'
  5911  00FC43  72                 	db	114	;'r'
  5912  00FC44  67                 	db	103	;'g'
  5913  00FC45  65                 	db	101	;'e'
  5914  00FC46  20                 	db	32
  5915  00FC47  53                 	db	83	;'S'
  5916  00FC48  74                 	db	116	;'t'
  5917  00FC49  61                 	db	97	;'a'
  5918  00FC4A  74                 	db	116	;'t'
  5919  00FC4B  75                 	db	117	;'u'
  5920  00FC4C  73                 	db	115	;'s'
  5921  00FC4D  3A                 	db	58	;':'
  5922  00FC4E  00                 	db	0
  5923  00FC4F                     STR_70:
  5924  00FC4F  31                 	db	49	;'1'
  5925  00FC50  20                 	db	32
  5926  00FC51  73                 	db	115	;'s'
  5927  00FC52  74                 	db	116	;'t'
  5928  00FC53  70                 	db	112	;'p'
  5929  00FC54  2C                 	db	44
  5930  00FC55  20                 	db	32
  5931  00FC56  6E                 	db	110	;'n'
  5932  00FC57  6F                 	db	111	;'o'
  5933  00FC58  20                 	db	32
  5934  00FC59  66                 	db	102	;'f'
  5935  00FC5A  6C                 	db	108	;'l'
  5936  00FC5B  6F                 	db	111	;'o'
  5937  00FC5C  77                 	db	119	;'w'
  5938  00FC5D  00                 	db	0
  5939  00FC5E                     STR_37:
  5940  00FC5E  52                 	db	82	;'R'
  5941  00FC5F  45                 	db	69	;'E'
  5942  00FC60  53                 	db	83	;'S'
  5943  00FC61  45                 	db	69	;'E'
  5944  00FC62  54                 	db	84	;'T'
  5945  00FC63  20                 	db	32
  5946  00FC64  45                 	db	69	;'E'
  5947  00FC65  78                 	db	120	;'x'
  5948  00FC66  65                 	db	101	;'e'
  5949  00FC67  63                 	db	99	;'c'
  5950  00FC68  75                 	db	117	;'u'
  5951  00FC69  74                 	db	116	;'t'
  5952  00FC6A  65                 	db	101	;'e'
  5953  00FC6B  64                 	db	100	;'d'
  5954  00FC6C  00                 	db	0
  5955  00FC6D                     STR_22:
  5956  00FC6D  50                 	db	80	;'P'
  5957  00FC6E  6F                 	db	111	;'o'
  5958  00FC6F  77                 	db	119	;'w'
  5959  00FC70  65                 	db	101	;'e'
  5960  00FC71  72                 	db	114	;'r'
  5961  00FC72  20                 	db	32
  5962  00FC73  4F                 	db	79	;'O'
  5963  00FC74  6E                 	db	110	;'n'
  5964  00FC75  20                 	db	32
  5965  00FC76  52                 	db	82	;'R'
  5966  00FC77  65                 	db	101	;'e'
  5967  00FC78  73                 	db	115	;'s'
  5968  00FC79  65                 	db	101	;'e'
  5969  00FC7A  74                 	db	116	;'t'
  5970  00FC7B  00                 	db	0
  5971  00FC7C                     STR_224:
  5972  00FC7C  20                 	db	32
  5973  00FC7D  20                 	db	32
  5974  00FC7E  20                 	db	32
  5975  00FC7F  20                 	db	32
  5976  00FC80  20                 	db	32
  5977  00FC81  20                 	db	32
  5978  00FC82  20                 	db	32
  5979  00FC83  20                 	db	32
  5980  00FC84  46                 	db	70	;'F'
  5981  00FC85  56                 	db	86	;'V'
  5982  00FC86  52                 	db	82	;'R'
  5983  00FC87  0A                 	db	10
  5984  00FC88  0D                 	db	13
  5985  00FC89  00                 	db	0
  5986  00FC8A                     STR_206:
  5987  00FC8A  45                 	db	69	;'E'
  5988  00FC8B  72                 	db	114	;'r'
  5989  00FC8C  72                 	db	114	;'r'
  5990  00FC8D  6F                 	db	111	;'o'
  5991  00FC8E  72                 	db	114	;'r'
  5992  00FC8F  20                 	db	32
  5993  00FC90  53                 	db	83	;'S'
  5994  00FC91  74                 	db	116	;'t'
  5995  00FC92  61                 	db	97	;'a'
  5996  00FC93  74                 	db	116	;'t'
  5997  00FC94  75                 	db	117	;'u'
  5998  00FC95  73                 	db	115	;'s'
  5999  00FC96  3F                 	db	63	;'?'
  6000  00FC97  00                 	db	0
  6001  00FC98                     STR_60:
  6002  00FC98  51                 	db	81	;'Q'
  6003  00FC99  49                 	db	73	;'I'
  6004  00FC9A  20                 	db	32
  6005  00FC9B  43                 	db	67	;'C'
  6006  00FC9C  68                 	db	104	;'h'
  6007  00FC9D  61                 	db	97	;'a'
  6008  00FC9E  72                 	db	114	;'r'
  6009  00FC9F  67                 	db	103	;'g'
  6010  00FCA0  65                 	db	101	;'e'
  6011  00FCA1  72                 	db	114	;'r'
  6012  00FCA2  20                 	db	32
  6013  00FCA3  77                 	db	119	;'w'
  6014  00FCA4  2F                 	db	47
  6015  00FCA5  00                 	db	0
  6016  00FCA6                     STR_78:
  6017  00FCA6  2B                 	db	43
  6018  00FCA7  31                 	db	49	;'1'
  6019  00FCA8  32                 	db	50	;'2'
  6020  00FCA9  56                 	db	86	;'V'
  6021  00FCAA  20                 	db	32
  6022  00FCAB  56                 	db	86	;'V'
  6023  00FCAC  6F                 	db	111	;'o'
  6024  00FCAD  6C                 	db	108	;'l'
  6025  00FCAE  74                 	db	116	;'t'
  6026  00FCAF  61                 	db	97	;'a'
  6027  00FCB0  67                 	db	103	;'g'
  6028  00FCB1  65                 	db	101	;'e'
  6029  00FCB2  3A                 	db	58	;':'
  6030  00FCB3  00                 	db	0
  6031  00FCB4                     STR_132:
  6032  00FCB4  44                 	db	68	;'D'
  6033  00FCB5  65                 	db	101	;'e'
  6034  00FCB6  76                 	db	118	;'v'
  6035  00FCB7  2E                 	db	46
  6036  00FCB8  20                 	db	32
  6037  00FCB9  4F                 	db	79	;'O'
  6038  00FCBA  6E                 	db	110	;'n'
  6039  00FCBB  20                 	db	32
  6040  00FCBC  54                 	db	84	;'T'
  6041  00FCBD  69                 	db	105	;'i'
  6042  00FCBE  6D                 	db	109	;'m'
  6043  00FCBF  65                 	db	101	;'e'
  6044  00FCC0  3A                 	db	58	;':'
  6045  00FCC1  00                 	db	0
  6046  00FCC2                     STR_114:
  6047  00FCC2  41                 	db	65	;'A'
  6048  00FCC3  6D                 	db	109	;'m'
  6049  00FCC4  62                 	db	98	;'b'
  6050  00FCC5  69                 	db	105	;'i'
  6051  00FCC6  65                 	db	101	;'e'
  6052  00FCC7  6E                 	db	110	;'n'
  6053  00FCC8  74                 	db	116	;'t'
  6054  00FCC9  20                 	db	32
  6055  00FCCA  54                 	db	84	;'T'
  6056  00FCCB  65                 	db	101	;'e'
  6057  00FCCC  6D                 	db	109	;'m'
  6058  00FCCD  70                 	db	112	;'p'
  6059  00FCCE  3A                 	db	58	;':'
  6060  00FCCF  00                 	db	0
  6061  00FCD0                     STR_122:
  6062  00FCD0  2B                 	db	43
  6063  00FCD1  35                 	db	53	;'5'
  6064  00FCD2  56                 	db	86	;'V'
  6065  00FCD3  20                 	db	32
  6066  00FCD4  53                 	db	83	;'S'
  6067  00FCD5  77                 	db	119	;'w'
  6068  00FCD6  2E                 	db	46
  6069  00FCD7  20                 	db	32
  6070  00FCD8  46                 	db	70	;'F'
  6071  00FCD9  72                 	db	114	;'r'
  6072  00FCDA  65                 	db	101	;'e'
  6073  00FCDB  71                 	db	113	;'q'
  6074  00FCDC  3A                 	db	58	;':'
  6075  00FCDD  00                 	db	0
  6076  00FCDE                     STR_98:
  6077  00FCDE  4F                 	db	79	;'O'
  6078  00FCDF  75                 	db	117	;'u'
  6079  00FCE0  74                 	db	116	;'t'
  6080  00FCE1  70                 	db	112	;'p'
  6081  00FCE2  75                 	db	117	;'u'
  6082  00FCE3  74                 	db	116	;'t'
  6083  00FCE4  20                 	db	32
  6084  00FCE5  50                 	db	80	;'P'
  6085  00FCE6  6F                 	db	111	;'o'
  6086  00FCE7  77                 	db	119	;'w'
  6087  00FCE8  65                 	db	101	;'e'
  6088  00FCE9  72                 	db	114	;'r'
  6089  00FCEA  3A                 	db	58	;':'
  6090  00FCEB  00                 	db	0
  6091  00FCEC                     STR_86:
  6092  00FCEC  2B                 	db	43
  6093  00FCED  31                 	db	49	;'1'
  6094  00FCEE  32                 	db	50	;'2'
  6095  00FCEF  56                 	db	86	;'V'
  6096  00FCF0  20                 	db	32
  6097  00FCF1  43                 	db	67	;'C'
  6098  00FCF2  75                 	db	117	;'u'
  6099  00FCF3  72                 	db	114	;'r'
  6100  00FCF4  72                 	db	114	;'r'
  6101  00FCF5  65                 	db	101	;'e'
  6102  00FCF6  6E                 	db	110	;'n'
  6103  00FCF7  74                 	db	116	;'t'
  6104  00FCF8  3A                 	db	58	;':'
  6105  00FCF9  00                 	db	0
  6106  00FCFA                     STR_71:
  6107  00FCFA  42                 	db	66	;'B'
  6108  00FCFB  6F                 	db	111	;'o'
  6109  00FCFC  6F                 	db	111	;'o'
  6110  00FCFD  74                 	db	116	;'t'
  6111  00FCFE  20                 	db	32
  6112  00FCFF  43                 	db	67	;'C'
  6113  00FD00  6F                 	db	111	;'o'
  6114  00FD01  6D                 	db	109	;'m'
  6115  00FD02  70                 	db	112	;'p'
  6116  00FD03  6C                 	db	108	;'l'
  6117  00FD04  65                 	db	101	;'e'
  6118  00FD05  74                 	db	116	;'t'
  6119  00FD06  65                 	db	101	;'e'
  6120  00FD07  00                 	db	0
  6121  00FD08                     STR_73:
  6122  00FD08  4D                 	db	77	;'M'
  6123  00FD09  6F                 	db	111	;'o'
  6124  00FD0A  72                 	db	114	;'r'
  6125  00FD0B  65                 	db	101	;'e'
  6126  00FD0C  20                 	db	32
  6127  00FD0D  53                 	db	83	;'S'
  6128  00FD0E  65                 	db	101	;'e'
  6129  00FD0F  74                 	db	116	;'t'
  6130  00FD10  74                 	db	116	;'t'
  6131  00FD11  69                 	db	105	;'i'
  6132  00FD12  6E                 	db	110	;'n'
  6133  00FD13  67                 	db	103	;'g'
  6134  00FD14  73                 	db	115	;'s'
  6135  00FD15  00                 	db	0
  6136  00FD16                     STR_18:
  6137  00FD16  46                 	db	70	;'F'
  6138  00FD17  75                 	db	117	;'u'
  6139  00FD18  6C                 	db	108	;'l'
  6140  00FD19  6C                 	db	108	;'l'
  6141  00FD1A  79                 	db	121	;'y'
  6142  00FD1B  20                 	db	32
  6143  00FD1C  43                 	db	67	;'C'
  6144  00FD1D  68                 	db	104	;'h'
  6145  00FD1E  61                 	db	97	;'a'
  6146  00FD1F  72                 	db	114	;'r'
  6147  00FD20  67                 	db	103	;'g'
  6148  00FD21  65                 	db	101	;'e'
  6149  00FD22  64                 	db	100	;'d'
  6150  00FD23  00                 	db	0
  6151  00FD24                     STR_13:
  6152  00FD24  66                 	db	102	;'f'
  6153  00FD25  75                 	db	117	;'u'
  6154  00FD26  6C                 	db	108	;'l'
  6155  00FD27  6C                 	db	108	;'l'
  6156  00FD28  79                 	db	121	;'y'
  6157  00FD29  20                 	db	32
  6158  00FD2A  63                 	db	99	;'c'
  6159  00FD2B  68                 	db	104	;'h'
  6160  00FD2C  61                 	db	97	;'a'
  6161  00FD2D  72                 	db	114	;'r'
  6162  00FD2E  67                 	db	103	;'g'
  6163  00FD2F  65                 	db	101	;'e'
  6164  00FD30  64                 	db	100	;'d'
  6165  00FD31  00                 	db	0
  6166  00FD32                     STR_65:
  6167  00FD32  52                 	db	82	;'R'
  6168  00FD33  65                 	db	101	;'e'
  6169  00FD34  76                 	db	118	;'v'
  6170  00FD35  69                 	db	105	;'i'
  6171  00FD36  73                 	db	115	;'s'
  6172  00FD37  69                 	db	105	;'i'
  6173  00FD38  6F                 	db	111	;'o'
  6174  00FD39  6E                 	db	110	;'n'
  6175  00FD3A  20                 	db	32
  6176  00FD3B  49                 	db	73	;'I'
  6177  00FD3C  44                 	db	68	;'D'
  6178  00FD3D  3A                 	db	58	;':'
  6179  00FD3E  00                 	db	0
  6180  00FD3F                     STR_82:
  6181  00FD3F  2B                 	db	43
  6182  00FD40  35                 	db	53	;'5'
  6183  00FD41  56                 	db	86	;'V'
  6184  00FD42  20                 	db	32
  6185  00FD43  56                 	db	86	;'V'
  6186  00FD44  6F                 	db	111	;'o'
  6187  00FD45  6C                 	db	108	;'l'
  6188  00FD46  74                 	db	116	;'t'
  6189  00FD47  61                 	db	97	;'a'
  6190  00FD48  67                 	db	103	;'g'
  6191  00FD49  65                 	db	101	;'e'
  6192  00FD4A  3A                 	db	58	;':'
  6193  00FD4B  00                 	db	0
  6194  00FD4C                     STR_127:
  6195  00FD4C  51                 	db	81	;'Q'
  6196  00FD4D  49                 	db	73	;'I'
  6197  00FD4E  20                 	db	32
  6198  00FD4F  53                 	db	83	;'S'
  6199  00FD50  77                 	db	119	;'w'
  6200  00FD51  2E                 	db	46
  6201  00FD52  20                 	db	32
  6202  00FD53  46                 	db	70	;'F'
  6203  00FD54  72                 	db	114	;'r'
  6204  00FD55  65                 	db	101	;'e'
  6205  00FD56  71                 	db	113	;'q'
  6206  00FD57  3A                 	db	58	;':'
  6207  00FD58  00                 	db	0
  6208  00FD59                     STR_94:
  6209  00FD59  49                 	db	73	;'I'
  6210  00FD5A  6E                 	db	110	;'n'
  6211  00FD5B  70                 	db	112	;'p'
  6212  00FD5C  75                 	db	117	;'u'
  6213  00FD5D  74                 	db	116	;'t'
  6214  00FD5E  20                 	db	32
  6215  00FD5F  50                 	db	80	;'P'
  6216  00FD60  6F                 	db	111	;'o'
  6217  00FD61  77                 	db	119	;'w'
  6218  00FD62  65                 	db	101	;'e'
  6219  00FD63  72                 	db	114	;'r'
  6220  00FD64  3A                 	db	58	;':'
  6221  00FD65  00                 	db	0
  6222  00FD66                     STR_155:
  6223  00FD66  4E                 	db	78	;'N'
  6224  00FD67  6F                 	db	111	;'o'
  6225  00FD68  74                 	db	116	;'t'
  6226  00FD69  20                 	db	32
  6227  00FD6A  43                 	db	67	;'C'
  6228  00FD6B  68                 	db	104	;'h'
  6229  00FD6C  61                 	db	97	;'a'
  6230  00FD6D  72                 	db	114	;'r'
  6231  00FD6E  67                 	db	103	;'g'
  6232  00FD6F  69                 	db	105	;'i'
  6233  00FD70  6E                 	db	110	;'n'
  6234  00FD71  67                 	db	103	;'g'
  6235  00FD72  00                 	db	0
  6236  00FD73                     STR_174:
  6237  00FD73  44                 	db	68	;'D'
  6238  00FD74  72                 	db	114	;'r'
  6239  00FD75  65                 	db	101	;'e'
  6240  00FD76  77                 	db	119	;'w'
  6241  00FD77  20                 	db	32
  6242  00FD78  4D                 	db	77	;'M'
  6243  00FD79  61                 	db	97	;'a'
  6244  00FD7A  61                 	db	97	;'a'
  6245  00FD7B  74                 	db	116	;'t'
  6246  00FD7C  6D                 	db	109	;'m'
  6247  00FD7D  61                 	db	97	;'a'
  6248  00FD7E  6E                 	db	110	;'n'
  6249  00FD7F  00                 	db	0
  6250  00FD80                     STR_55:
  6251  00FD80  25                 	db	37
  6252  00FD81  64                 	db	100	;'d'
  6253  00FD82  20                 	db	32
  6254  00FD83  6D                 	db	109	;'m'
  6255  00FD84  69                 	db	105	;'i'
  6256  00FD85  6E                 	db	110	;'n'
  6257  00FD86  75                 	db	117	;'u'
  6258  00FD87  74                 	db	116	;'t'
  6259  00FD88  65                 	db	101	;'e'
  6260  00FD89  73                 	db	115	;'s'
  6261  00FD8A  2C                 	db	44
  6262  00FD8B  20                 	db	32
  6263  00FD8C  00                 	db	0
  6264  00FD8D                     STR_45:
  6265  00FD8D  50                 	db	80	;'P'
  6266  00FD8E  49                 	db	73	;'I'
  6267  00FD8F  43                 	db	67	;'C'
  6268  00FD90  31                 	db	49	;'1'
  6269  00FD91  38                 	db	56	;'8'
  6270  00FD92  4C                 	db	76	;'L'
  6271  00FD93  46                 	db	70	;'F'
  6272  00FD94  32                 	db	50	;'2'
  6273  00FD95  37                 	db	55	;'7'
  6274  00FD96  4B                 	db	75	;'K'
  6275  00FD97  34                 	db	52	;'4'
  6276  00FD98  30                 	db	48	;'0'
  6277  00FD99  00                 	db	0
  6278  00FD9A                     STR_46:
  6279  00FD9A  50                 	db	80	;'P'
  6280  00FD9B  49                 	db	73	;'I'
  6281  00FD9C  43                 	db	67	;'C'
  6282  00FD9D  31                 	db	49	;'1'
  6283  00FD9E  38                 	db	56	;'8'
  6284  00FD9F  4C                 	db	76	;'L'
  6285  00FDA0  46                 	db	70	;'F'
  6286  00FDA1  34                 	db	52	;'4'
  6287  00FDA2  37                 	db	55	;'7'
  6288  00FDA3  4B                 	db	75	;'K'
  6289  00FDA4  34                 	db	52	;'4'
  6290  00FDA5  30                 	db	48	;'0'
  6291  00FDA6  00                 	db	0
  6292  00FDA7                     STR_42:
  6293  00FDA7  50                 	db	80	;'P'
  6294  00FDA8  49                 	db	73	;'I'
  6295  00FDA9  43                 	db	67	;'C'
  6296  00FDAA  31                 	db	49	;'1'
  6297  00FDAB  38                 	db	56	;'8'
  6298  00FDAC  4C                 	db	76	;'L'
  6299  00FDAD  46                 	db	70	;'F'
  6300  00FDAE  36                 	db	54	;'6'
  6301  00FDAF  37                 	db	55	;'7'
  6302  00FDB0  4B                 	db	75	;'K'
  6303  00FDB1  34                 	db	52	;'4'
  6304  00FDB2  30                 	db	48	;'0'
  6305  00FDB3  00                 	db	0
  6306  00FDB4                     STR_175:
  6307  00FDB4  53                 	db	83	;'S'
  6308  00FDB5  70                 	db	112	;'p'
  6309  00FDB6  72                 	db	114	;'r'
  6310  00FDB7  69                 	db	105	;'i'
  6311  00FDB8  6E                 	db	110	;'n'
  6312  00FDB9  67                 	db	103	;'g'
  6313  00FDBA  20                 	db	32
  6314  00FDBB  32                 	db	50	;'2'
  6315  00FDBC  30                 	db	48	;'0'
  6316  00FDBD  31                 	db	49	;'1'
  6317  00FDBE  39                 	db	57	;'9'
  6318  00FDBF  00                 	db	0
  6319  00FDC0                     STR_118:
  6320  00FDC0  4D                 	db	77	;'M'
  6321  00FDC1  69                 	db	105	;'i'
  6322  00FDC2  63                 	db	99	;'c'
  6323  00FDC3  72                 	db	114	;'r'
  6324  00FDC4  6F                 	db	111	;'o'
  6325  00FDC5  20                 	db	32
  6326  00FDC6  54                 	db	84	;'T'
  6327  00FDC7  65                 	db	101	;'e'
  6328  00FDC8  6D                 	db	109	;'m'
  6329  00FDC9  70                 	db	112	;'p'
  6330  00FDCA  3A                 	db	58	;':'
  6331  00FDCB  00                 	db	0
  6332  00FDCC                     STR_90:
  6333  00FDCC  51                 	db	81	;'Q'
  6334  00FDCD  49                 	db	73	;'I'
  6335  00FDCE  20                 	db	32
  6336  00FDCF  43                 	db	67	;'C'
  6337  00FDD0  75                 	db	117	;'u'
  6338  00FDD1  72                 	db	114	;'r'
  6339  00FDD2  72                 	db	114	;'r'
  6340  00FDD3  65                 	db	101	;'e'
  6341  00FDD4  6E                 	db	110	;'n'
  6342  00FDD5  74                 	db	116	;'t'
  6343  00FDD6  3A                 	db	58	;':'
  6344  00FDD7  00                 	db	0
  6345  00FDD8                     STR_102:
  6346  00FDD8  45                 	db	69	;'E'
  6347  00FDD9  66                 	db	102	;'f'
  6348  00FDDA  66                 	db	102	;'f'
  6349  00FDDB  69                 	db	105	;'i'
  6350  00FDDC  63                 	db	99	;'c'
  6351  00FDDD  69                 	db	105	;'i'
  6352  00FDDE  65                 	db	101	;'e'
  6353  00FDDF  6E                 	db	110	;'n'
  6354  00FDE0  63                 	db	99	;'c'
  6355  00FDE1  79                 	db	121	;'y'
  6356  00FDE2  3A                 	db	58	;':'
  6357  00FDE3  00                 	db	0
  6358  00FDE4                     STR_54:
  6359  00FDE4  25                 	db	37
  6360  00FDE5  64                 	db	100	;'d'
  6361  00FDE6  20                 	db	32
  6362  00FDE7  6D                 	db	109	;'m'
  6363  00FDE8  69                 	db	105	;'i'
  6364  00FDE9  6E                 	db	110	;'n'
  6365  00FDEA  75                 	db	117	;'u'
  6366  00FDEB  74                 	db	116	;'t'
  6367  00FDEC  65                 	db	101	;'e'
  6368  00FDED  2C                 	db	44
  6369  00FDEE  20                 	db	32
  6370  00FDEF  00                 	db	0
  6371  00FDF0                     STR_43:
  6372  00FDF0  50                 	db	80	;'P'
  6373  00FDF1  49                 	db	73	;'I'
  6374  00FDF2  43                 	db	67	;'C'
  6375  00FDF3  31                 	db	49	;'1'
  6376  00FDF4  38                 	db	56	;'8'
  6377  00FDF5  46                 	db	70	;'F'
  6378  00FDF6  32                 	db	50	;'2'
  6379  00FDF7  37                 	db	55	;'7'
  6380  00FDF8  4B                 	db	75	;'K'
  6381  00FDF9  34                 	db	52	;'4'
  6382  00FDFA  30                 	db	48	;'0'
  6383  00FDFB  00                 	db	0
  6384  00FDFC                     STR_44:
  6385  00FDFC  50                 	db	80	;'P'
  6386  00FDFD  49                 	db	73	;'I'
  6387  00FDFE  43                 	db	67	;'C'
  6388  00FDFF  31                 	db	49	;'1'
  6389  00FE00  38                 	db	56	;'8'
  6390  00FE01  46                 	db	70	;'F'
  6391  00FE02  34                 	db	52	;'4'
  6392  00FE03  37                 	db	55	;'7'
  6393  00FE04  4B                 	db	75	;'K'
  6394  00FE05  34                 	db	52	;'4'
  6395  00FE06  30                 	db	48	;'0'
  6396  00FE07  00                 	db	0
  6397  00FE08                     STR_41:
  6398  00FE08  50                 	db	80	;'P'
  6399  00FE09  49                 	db	73	;'I'
  6400  00FE0A  43                 	db	67	;'C'
  6401  00FE0B  31                 	db	49	;'1'
  6402  00FE0C  38                 	db	56	;'8'
  6403  00FE0D  46                 	db	70	;'F'
  6404  00FE0E  36                 	db	54	;'6'
  6405  00FE0F  37                 	db	55	;'7'
  6406  00FE10  4B                 	db	75	;'K'
  6407  00FE11  34                 	db	52	;'4'
  6408  00FE12  30                 	db	48	;'0'
  6409  00FE13  00                 	db	0
  6410  00FE14  25                 	db	37
  6411  00FE15  6C                 	db	108	;'l'
  6412  00FE16  75                 	db	117	;'u'
  6413  00FE17  2E                 	db	46
  6414  00FE18  25                 	db	37
  6415  00FE19  36                 	db	54	;'6'
  6416  00FE1A  2E                 	db	46
  6417  00FE1B  36                 	db	54	;'6'
  6418  00FE1C  6C                 	db	108	;'l'
  6419  00FE1D  75                 	db	117	;'u'
  6420  00FE1E  00                 	db	0
  6421  00FE1F                     STR_311:
  6422  00FE1F  1B                 	db	27
  6423  00FE20  5B                 	db	91	;'['
  6424  00FE21  30                 	db	48	;'0'
  6425  00FE22  3B                 	db	59	;';'
  6426  00FE23  33                 	db	51	;'3'
  6427  00FE24  37                 	db	55	;'7'
  6428  00FE25  3B                 	db	59	;';'
  6429  00FE26  34                 	db	52	;'4'
  6430  00FE27  30                 	db	48	;'0'
  6431  00FE28  6D                 	db	109	;'m'
  6432  00FE29  00                 	db	0
  6433  00FE2A                     STR_63:
  6434  00FE2A  44                 	db	68	;'D'
  6435  00FE2B  65                 	db	101	;'e'
  6436  00FE2C  76                 	db	118	;'v'
  6437  00FE2D  69                 	db	105	;'i'
  6438  00FE2E  63                 	db	99	;'c'
  6439  00FE2F  65                 	db	101	;'e'
  6440  00FE30  20                 	db	32
  6441  00FE31  49                 	db	73	;'I'
  6442  00FE32  44                 	db	68	;'D'
  6443  00FE33  3A                 	db	58	;':'
  6444  00FE34  00                 	db	0
  6445  00FE35                     STR_72:
  6446  00FE35  51                 	db	81	;'Q'
  6447  00FE36  49                 	db	73	;'I'
  6448  00FE37  20                 	db	32
  6449  00FE38  45                 	db	69	;'E'
  6450  00FE39  6E                 	db	110	;'n'
  6451  00FE3A  61                 	db	97	;'a'
  6452  00FE3B  62                 	db	98	;'b'
  6453  00FE3C  6C                 	db	108	;'l'
  6454  00FE3D  65                 	db	101	;'e'
  6455  00FE3E  64                 	db	100	;'d'
  6456  00FE3F  00                 	db	0
  6457  00FE40                     STR_123:
  6458  00FE40  42                 	db	66	;'B'
  6459  00FE41  75                 	db	117	;'u'
  6460  00FE42  72                 	db	114	;'r'
  6461  00FE43  73                 	db	115	;'s'
  6462  00FE44  74                 	db	116	;'t'
  6463  00FE45  20                 	db	32
  6464  00FE46  4D                 	db	77	;'M'
  6465  00FE47  6F                 	db	111	;'o'
  6466  00FE48  64                 	db	100	;'d'
  6467  00FE49  65                 	db	101	;'e'
  6468  00FE4A  00                 	db	0
  6469  00FE4B                     STR_141:
  6470  00FE4B  25                 	db	37
  6471  00FE4C  75                 	db	117	;'u'
  6472  00FE4D  20                 	db	32
  6473  00FE4E  73                 	db	115	;'s'
  6474  00FE4F  65                 	db	101	;'e'
  6475  00FE50  63                 	db	99	;'c'
  6476  00FE51  6F                 	db	111	;'o'
  6477  00FE52  6E                 	db	110	;'n'
  6478  00FE53  64                 	db	100	;'d'
  6479  00FE54  73                 	db	115	;'s'
  6480  00FE55  00                 	db	0
  6481  00FE56                     STR_138:
  6482  00FE56  25                 	db	37
  6483  00FE57  75                 	db	117	;'u'
  6484  00FE58  20                 	db	32
  6485  00FE59  6D                 	db	109	;'m'
  6486  00FE5A  69                 	db	105	;'i'
  6487  00FE5B  6E                 	db	110	;'n'
  6488  00FE5C  75                 	db	117	;'u'
  6489  00FE5D  74                 	db	116	;'t'
  6490  00FE5E  65                 	db	101	;'e'
  6491  00FE5F  73                 	db	115	;'s'
  6492  00FE60  00                 	db	0
  6493  00FE61                     STR_49:
  6494  00FE61  25                 	db	37
  6495  00FE62  64                 	db	100	;'d'
  6496  00FE63  20                 	db	32
  6497  00FE64  79                 	db	121	;'y'
  6498  00FE65  65                 	db	101	;'e'
  6499  00FE66  61                 	db	97	;'a'
  6500  00FE67  72                 	db	114	;'r'
  6501  00FE68  73                 	db	115	;'s'
  6502  00FE69  2C                 	db	44
  6503  00FE6A  20                 	db	32
  6504  00FE6B  00                 	db	0
  6505  00FE6C                     STR_53:
  6506  00FE6C  25                 	db	37
  6507  00FE6D  64                 	db	100	;'d'
  6508  00FE6E  20                 	db	32
  6509  00FE6F  68                 	db	104	;'h'
  6510  00FE70  6F                 	db	111	;'o'
  6511  00FE71  75                 	db	117	;'u'
  6512  00FE72  72                 	db	114	;'r'
  6513  00FE73  73                 	db	115	;'s'
  6514  00FE74  2C                 	db	44
  6515  00FE75  20                 	db	32
  6516  00FE76  00                 	db	0
  6517  00FE77                     STR_57:
  6518  00FE77  25                 	db	37
  6519  00FE78  64                 	db	100	;'d'
  6520  00FE79  20                 	db	32
  6521  00FE7A  73                 	db	115	;'s'
  6522  00FE7B  65                 	db	101	;'e'
  6523  00FE7C  63                 	db	99	;'c'
  6524  00FE7D  6F                 	db	111	;'o'
  6525  00FE7E  6E                 	db	110	;'n'
  6526  00FE7F  64                 	db	100	;'d'
  6527  00FE80  73                 	db	115	;'s'
  6528  00FE81  00                 	db	0
  6529  00FE82                     STR_38:
  6530  00FE82  53                 	db	83	;'S'
  6531  00FE83  54                 	db	84	;'T'
  6532  00FE84  4F                 	db	79	;'O'
  6533  00FE85  46                 	db	70	;'F'
  6534  00FE86  20                 	db	32
  6535  00FE87  52                 	db	82	;'R'
  6536  00FE88  65                 	db	101	;'e'
  6537  00FE89  73                 	db	115	;'s'
  6538  00FE8A  65                 	db	101	;'e'
  6539  00FE8B  74                 	db	116	;'t'
  6540  00FE8C  00                 	db	0
  6541  00FE8D                     STR_39:
  6542  00FE8D  53                 	db	83	;'S'
  6543  00FE8E  54                 	db	84	;'T'
  6544  00FE8F  55                 	db	85	;'U'
  6545  00FE90  46                 	db	70	;'F'
  6546  00FE91  20                 	db	32
  6547  00FE92  52                 	db	82	;'R'
  6548  00FE93  65                 	db	101	;'e'
  6549  00FE94  73                 	db	115	;'s'
  6550  00FE95  65                 	db	101	;'e'
  6551  00FE96  74                 	db	116	;'t'
  6552  00FE97  00                 	db	0
  6553  00FE98                     STR_34:
  6554  00FE98  4D                 	db	77	;'M'
  6555  00FE99  43                 	db	67	;'C'
  6556  00FE9A  4C                 	db	76	;'L'
  6557  00FE9B  52                 	db	82	;'R'
  6558  00FE9C  20                 	db	32
  6559  00FE9D  52                 	db	82	;'R'
  6560  00FE9E  65                 	db	101	;'e'
  6561  00FE9F  73                 	db	115	;'s'
  6562  00FEA0  65                 	db	101	;'e'
  6563  00FEA1  74                 	db	116	;'t'
  6564  00FEA2  00                 	db	0
  6565  00FEA3                     STR_36:
  6566  00FEA3  57                 	db	87	;'W'
  6567  00FEA4  57                 	db	87	;'W'
  6568  00FEA5  44                 	db	68	;'D'
  6569  00FEA6  54                 	db	84	;'T'
  6570  00FEA7  20                 	db	32
  6571  00FEA8  52                 	db	82	;'R'
  6572  00FEA9  65                 	db	101	;'e'
  6573  00FEAA  73                 	db	115	;'s'
  6574  00FEAB  65                 	db	101	;'e'
  6575  00FEAC  74                 	db	116	;'t'
  6576  00FEAD  00                 	db	0
  6577  00FEAE                     STR_110:
  6578  00FEAE  2B                 	db	43
  6579  00FEAF  35                 	db	53	;'5'
  6580  00FEB0  56                 	db	86	;'V'
  6581  00FEB1  20                 	db	32
  6582  00FEB2  54                 	db	84	;'T'
  6583  00FEB3  65                 	db	101	;'e'
  6584  00FEB4  6D                 	db	109	;'m'
  6585  00FEB5  70                 	db	112	;'p'
  6586  00FEB6  3A                 	db	58	;':'
  6587  00FEB7  00                 	db	0
  6588  00FEB8                     STR_68:
  6589  00FEB8  31                 	db	49	;'1'
  6590  00FEB9  31                 	db	49	;'1'
  6591  00FEBA  35                 	db	53	;'5'
  6592  00FEBB  2E                 	db	46
  6593  00FEBC  32                 	db	50	;'2'
  6594  00FEBD  20                 	db	32
  6595  00FEBE  6B                 	db	107	;'k'
  6596  00FEBF  62                 	db	98	;'b'
  6597  00FEC0  73                 	db	115	;'s'
  6598  00FEC1  00                 	db	0
  6599  00FEC2                     STR_48:
  6600  00FEC2  25                 	db	37
  6601  00FEC3  64                 	db	100	;'d'
  6602  00FEC4  20                 	db	32
  6603  00FEC5  79                 	db	121	;'y'
  6604  00FEC6  65                 	db	101	;'e'
  6605  00FEC7  61                 	db	97	;'a'
  6606  00FEC8  72                 	db	114	;'r'
  6607  00FEC9  2C                 	db	44
  6608  00FECA  20                 	db	32
  6609  00FECB  00                 	db	0
  6610  00FECC                     STR_52:
  6611  00FECC  25                 	db	37
  6612  00FECD  64                 	db	100	;'d'
  6613  00FECE  20                 	db	32
  6614  00FECF  68                 	db	104	;'h'
  6615  00FED0  6F                 	db	111	;'o'
  6616  00FED1  75                 	db	117	;'u'
  6617  00FED2  72                 	db	114	;'r'
  6618  00FED3  2C                 	db	44
  6619  00FED4  20                 	db	32
  6620  00FED5  00                 	db	0
  6621  00FED6                     STR_51:
  6622  00FED6  25                 	db	37
  6623  00FED7  64                 	db	100	;'d'
  6624  00FED8  20                 	db	32
  6625  00FED9  64                 	db	100	;'d'
  6626  00FEDA  61                 	db	97	;'a'
  6627  00FEDB  79                 	db	121	;'y'
  6628  00FEDC  73                 	db	115	;'s'
  6629  00FEDD  2C                 	db	44
  6630  00FEDE  20                 	db	32
  6631  00FEDF  00                 	db	0
  6632  00FEE0                     STR_56:
  6633  00FEE0  25                 	db	37
  6634  00FEE1  64                 	db	100	;'d'
  6635  00FEE2  20                 	db	32
  6636  00FEE3  73                 	db	115	;'s'
  6637  00FEE4  65                 	db	101	;'e'
  6638  00FEE5  63                 	db	99	;'c'
  6639  00FEE6  6F                 	db	111	;'o'
  6640  00FEE7  6E                 	db	110	;'n'
  6641  00FEE8  64                 	db	100	;'d'
  6642  00FEE9  00                 	db	0
  6643  00FEEA                     STR_33:
  6644  00FEEA  42                 	db	66	;'B'
  6645  00FEEB  4F                 	db	79	;'O'
  6646  00FEEC  52                 	db	82	;'R'
  6647  00FEED  20                 	db	32
  6648  00FEEE  52                 	db	82	;'R'
  6649  00FEEF  65                 	db	101	;'e'
  6650  00FEF0  73                 	db	115	;'s'
  6651  00FEF1  65                 	db	101	;'e'
  6652  00FEF2  74                 	db	116	;'t'
  6653  00FEF3  00                 	db	0
  6654  00FEF4                     STR_32:
  6655  00FEF4  50                 	db	80	;'P'
  6656  00FEF5  4F                 	db	79	;'O'
  6657  00FEF6  52                 	db	82	;'R'
  6658  00FEF7  20                 	db	32
  6659  00FEF8  52                 	db	82	;'R'
  6660  00FEF9  65                 	db	101	;'e'
  6661  00FEFA  73                 	db	115	;'s'
  6662  00FEFB  65                 	db	101	;'e'
  6663  00FEFC  74                 	db	116	;'t'
  6664  00FEFD  00                 	db	0
  6665  00FEFE                     STR_20:
  6666  00FEFE  55                 	db	85	;'U'
  6667  00FEFF  6E                 	db	110	;'n'
  6668  00FF00  64                 	db	100	;'d'
  6669  00FF01  65                 	db	101	;'e'
  6670  00FF02  66                 	db	102	;'f'
  6671  00FF03  69                 	db	105	;'i'
  6672  00FF04  6E                 	db	110	;'n'
  6673  00FF05  65                 	db	101	;'e'
  6674  00FF06  64                 	db	100	;'d'
  6675  00FF07  00                 	db	0
  6676  00FF08                     STR_15:
  6677  00FF08  75                 	db	117	;'u'
  6678  00FF09  6E                 	db	110	;'n'
  6679  00FF0A  64                 	db	100	;'d'
  6680  00FF0B  65                 	db	101	;'e'
  6681  00FF0C  66                 	db	102	;'f'
  6682  00FF0D  69                 	db	105	;'i'
  6683  00FF0E  6E                 	db	110	;'n'
  6684  00FF0F  65                 	db	101	;'e'
  6685  00FF10  64                 	db	100	;'d'
  6686  00FF11  00                 	db	0
  6687  00FF12                     STR_106:
  6688  00FF12  51                 	db	81	;'Q'
  6689  00FF13  49                 	db	73	;'I'
  6690  00FF14  20                 	db	32
  6691  00FF15  54                 	db	84	;'T'
  6692  00FF16  65                 	db	101	;'e'
  6693  00FF17  6D                 	db	109	;'m'
  6694  00FF18  70                 	db	112	;'p'
  6695  00FF19  3A                 	db	58	;':'
  6696  00FF1A  00                 	db	0
  6697  00FF1B                     STR_133:
  6698  00FF1B  25                 	db	37
  6699  00FF1C  75                 	db	117	;'u'
  6700  00FF1D  20                 	db	32
  6701  00FF1E  79                 	db	121	;'y'
  6702  00FF1F  65                 	db	101	;'e'
  6703  00FF20  61                 	db	97	;'a'
  6704  00FF21  72                 	db	114	;'r'
  6705  00FF22  73                 	db	115	;'s'
  6706  00FF23  00                 	db	0
  6707  00FF24                     STR_135:
  6708  00FF24  25                 	db	37
  6709  00FF25  75                 	db	117	;'u'
  6710  00FF26  20                 	db	32
  6711  00FF27  68                 	db	104	;'h'
  6712  00FF28  6F                 	db	111	;'o'
  6713  00FF29  75                 	db	117	;'u'
  6714  00FF2A  72                 	db	114	;'r'
  6715  00FF2B  73                 	db	115	;'s'
  6716  00FF2C  00                 	db	0
  6717  00FF2D                     STR_129:
  6718  00FF2D  25                 	db	37
  6719  00FF2E  2B                 	db	43
  6720  00FF2F  2E                 	db	46
  6721  00FF30  33                 	db	51	;'3'
  6722  00FF31  66                 	db	102	;'f'
  6723  00FF32  6B                 	db	107	;'k'
  6724  00FF33  48                 	db	72	;'H'
  6725  00FF34  7A                 	db	122	;'z'
  6726  00FF35  00                 	db	0
  6727  00FF36                     STR_50:
  6728  00FF36  25                 	db	37
  6729  00FF37  64                 	db	100	;'d'
  6730  00FF38  20                 	db	32
  6731  00FF39  64                 	db	100	;'d'
  6732  00FF3A  61                 	db	97	;'a'
  6733  00FF3B  79                 	db	121	;'y'
  6734  00FF3C  2C                 	db	44
  6735  00FF3D  20                 	db	32
  6736  00FF3E  00                 	db	0
  6737  00FF3F                     STR_12:
  6738  00FF3F  63                 	db	99	;'c'
  6739  00FF40  68                 	db	104	;'h'
  6740  00FF41  61                 	db	97	;'a'
  6741  00FF42  72                 	db	114	;'r'
  6742  00FF43  67                 	db	103	;'g'
  6743  00FF44  69                 	db	105	;'i'
  6744  00FF45  6E                 	db	110	;'n'
  6745  00FF46  67                 	db	103	;'g'
  6746  00FF47  00                 	db	0
  6747  00FF48                     STR_103:
  6748  00FF48  25                 	db	37
  6749  00FF49  2B                 	db	43
  6750  00FF4A  2E                 	db	46
  6751  00FF4B  33                 	db	51	;'3'
  6752  00FF4C  66                 	db	102	;'f'
  6753  00FF4D  25                 	db	37
  6754  00FF4E  25                 	db	37
  6755  00FF4F  00                 	db	0
  6756  00FF50                     STR_134:
  6757  00FF50  25                 	db	37
  6758  00FF51  75                 	db	117	;'u'
  6759  00FF52  20                 	db	32
  6760  00FF53  64                 	db	100	;'d'
  6761  00FF54  61                 	db	97	;'a'
  6762  00FF55  79                 	db	121	;'y'
  6763  00FF56  73                 	db	115	;'s'
  6764  00FF57  00                 	db	0
  6765  00FF58                     STR_335:
  6766  00FF58  28                 	db	40
  6767  00FF59  6E                 	db	110	;'n'
  6768  00FF5A  75                 	db	117	;'u'
  6769  00FF5B  6C                 	db	108	;'l'
  6770  00FF5C  6C                 	db	108	;'l'
  6771  00FF5D  29                 	db	41
  6772  00FF5E  00                 	db	0
  6773  00FF5F                     STR_87:
  6774  00FF5F  25                 	db	37
  6775  00FF60  2B                 	db	43
  6776  00FF61  2E                 	db	46
  6777  00FF62  33                 	db	51	;'3'
  6778  00FF63  66                 	db	102	;'f'
  6779  00FF64  41                 	db	65	;'A'
  6780  00FF65  00                 	db	0
  6781  00FF66                     STR_107:
  6782  00FF66  25                 	db	37
  6783  00FF67  2B                 	db	43
  6784  00FF68  2E                 	db	46
  6785  00FF69  33                 	db	51	;'3'
  6786  00FF6A  66                 	db	102	;'f'
  6787  00FF6B  43                 	db	67	;'C'
  6788  00FF6C  00                 	db	0
  6789  00FF6D                     STR_79:
  6790  00FF6D  25                 	db	37
  6791  00FF6E  2B                 	db	43
  6792  00FF6F  2E                 	db	46
  6793  00FF70  33                 	db	51	;'3'
  6794  00FF71  66                 	db	102	;'f'
  6795  00FF72  56                 	db	86	;'V'
  6796  00FF73  00                 	db	0
  6797  00FF74                     STR_95:
  6798  00FF74  25                 	db	37
  6799  00FF75  2B                 	db	43
  6800  00FF76  2E                 	db	46
  6801  00FF77  33                 	db	51	;'3'
  6802  00FF78  66                 	db	102	;'f'
  6803  00FF79  57                 	db	87	;'W'
  6804  00FF7A  00                 	db	0
  6805  00FF7B                     STR_66:
  6806  00FF7B  25                 	db	37
  6807  00FF7C  63                 	db	99	;'c'
  6808  00FF7D  25                 	db	37
  6809  00FF7E  30                 	db	48	;'0'
  6810  00FF7F  33                 	db	51	;'3'
  6811  00FF80  64                 	db	100	;'d'
  6812  00FF81  00                 	db	0
  6813  00FF82                     STR_124:
  6814  00FF82  32                 	db	50	;'2'
  6815  00FF83  2E                 	db	46
  6816  00FF84  35                 	db	53	;'5'
  6817  00FF85  4D                 	db	77	;'M'
  6818  00FF86  48                 	db	72	;'H'
  6819  00FF87  7A                 	db	122	;'z'
  6820  00FF88  00                 	db	0
  6821  00FF89                     STR_182:
  6822  00FF89  2A                 	db	42
  6823  00FF8A  49                 	db	73	;'I'
  6824  00FF8B  44                 	db	68	;'D'
  6825  00FF8C  4E                 	db	78	;'N'
  6826  00FF8D  3F                 	db	63	;'?'
  6827  00FF8E  00                 	db	0
  6828  00FF8F                     STR_179:
  6829  00FF8F  43                 	db	67	;'C'
  6830  00FF90  6C                 	db	108	;'l'
  6831  00FF91  65                 	db	101	;'e'
  6832  00FF92  61                 	db	97	;'a'
  6833  00FF93  72                 	db	114	;'r'
  6834  00FF94  00                 	db	0
  6835  00FF95                     STR_19:
  6836  00FF95  45                 	db	69	;'E'
  6837  00FF96  72                 	db	114	;'r'
  6838  00FF97  72                 	db	114	;'r'
  6839  00FF98  6F                 	db	111	;'o'
  6840  00FF99  72                 	db	114	;'r'
  6841  00FF9A  00                 	db	0
  6842  00FF9B                     STR_14:
  6843  00FF9B  65                 	db	101	;'e'
  6844  00FF9C  72                 	db	114	;'r'
  6845  00FF9D  72                 	db	114	;'r'
  6846  00FF9E  6F                 	db	111	;'o'
  6847  00FF9F  72                 	db	114	;'r'
  6848  00FFA0  00                 	db	0
  6849  00FFA1                     STR_177:
  6850  00FFA1  1B                 	db	27
  6851  00FFA2  5B                 	db	91	;'['
  6852  00FFA3  32                 	db	50	;'2'
  6853  00FFA4  4A                 	db	74	;'J'
  6854  00FFA5  00                 	db	0
  6855  00FFA6                     STR_208:
  6856  00FFA6  48                 	db	72	;'H'
  6857  00FFA7  65                 	db	101	;'e'
  6858  00FFA8  6C                 	db	108	;'l'
  6859  00FFA9  70                 	db	112	;'p'
  6860  00FFAA  00                 	db	0
  6861  00FFAB                     STR_64:
  6862  00FFAB  30                 	db	48	;'0'
  6863  00FFAC  78                 	db	120	;'x'
  6864  00FFAD  25                 	db	37
  6865  00FFAE  58                 	db	88	;'X'
  6866  00FFAF  00                 	db	0
  6867  00FFB0                     STR_16:
  6868  00FFB0  49                 	db	73	;'I'
  6869  00FFB1  64                 	db	100	;'d'
  6870  00FFB2  6C                 	db	108	;'l'
  6871  00FFB3  65                 	db	101	;'e'
  6872  00FFB4  00                 	db	0
  6873  00FFB5                     STR_11:
  6874  00FFB5  69                 	db	105	;'i'
  6875  00FFB6  64                 	db	100	;'d'
  6876  00FFB7  6C                 	db	108	;'l'
  6877  00FFB8  65                 	db	101	;'e'
  6878  00FFB9  00                 	db	0
  6879  00FFBA  1B                 	db	27
  6880  00FFBB  5B                 	db	91	;'['
  6881  00FFBC  73                 	db	115	;'s'
  6882  00FFBD  00                 	db	0
  6883  00FFBE  1B                 	db	27
  6884  00FFBF  5B                 	db	91	;'['
  6885  00FFC0  75                 	db	117	;'u'
  6886  00FFC1  00                 	db	0
  6887  00FFC2                     STR_178:
  6888  00FFC2  1B                 	db	27
  6889  00FFC3  5B                 	db	91	;'['
  6890  00FFC4  48                 	db	72	;'H'
  6891  00FFC5  00                 	db	0
  6892  00FFC6                     STR_1:
  6893  00FFC6  1B                 	db	27
  6894  00FFC7  5B                 	db	91	;'['
  6895  00FFC8  4B                 	db	75	;'K'
  6896  00FFC9  00                 	db	0
  6897  00FFCA                     STR_291:
  6898  00FFCA  33                 	db	51	;'3'
  6899  00FFCB  30                 	db	48	;'0'
  6900  00FFCC  00                 	db	0
  6901  00FFCD                     STR_292:
  6902  00FFCD  33                 	db	51	;'3'
  6903  00FFCE  31                 	db	49	;'1'
  6904  00FFCF  00                 	db	0
  6905  00FFD0                     STR_302:
  6906  00FFD0  34                 	db	52	;'4'
  6907  00FFD1  31                 	db	49	;'1'
  6908  00FFD2  00                 	db	0
  6909  00FFD3                     STR_293:
  6910  00FFD3  33                 	db	51	;'3'
  6911  00FFD4  32                 	db	50	;'2'
  6912  00FFD5  00                 	db	0
  6913  00FFD6                     STR_303:
  6914  00FFD6  34                 	db	52	;'4'
  6915  00FFD7  32                 	db	50	;'2'
  6916  00FFD8  00                 	db	0
  6917  00FFD9                     STR_294:
  6918  00FFD9  33                 	db	51	;'3'
  6919  00FFDA  33                 	db	51	;'3'
  6920  00FFDB  00                 	db	0
  6921  00FFDC                     STR_304:
  6922  00FFDC  34                 	db	52	;'4'
  6923  00FFDD  33                 	db	51	;'3'
  6924  00FFDE  00                 	db	0
  6925  00FFDF                     STR_295:
  6926  00FFDF  33                 	db	51	;'3'
  6927  00FFE0  34                 	db	52	;'4'
  6928  00FFE1  00                 	db	0
  6929  00FFE2                     STR_305:
  6930  00FFE2  34                 	db	52	;'4'
  6931  00FFE3  34                 	db	52	;'4'
  6932  00FFE4  00                 	db	0
  6933  00FFE5                     STR_296:
  6934  00FFE5  33                 	db	51	;'3'
  6935  00FFE6  35                 	db	53	;'5'
  6936  00FFE7  00                 	db	0
  6937  00FFE8                     STR_306:
  6938  00FFE8  34                 	db	52	;'4'
  6939  00FFE9  35                 	db	53	;'5'
  6940  00FFEA  00                 	db	0
  6941  00FFEB                     STR_297:
  6942  00FFEB  33                 	db	51	;'3'
  6943  00FFEC  36                 	db	54	;'6'
  6944  00FFED  00                 	db	0
  6945  00FFEE                     STR_307:
  6946  00FFEE  34                 	db	52	;'4'
  6947  00FFEF  36                 	db	54	;'6'
  6948  00FFF0  00                 	db	0
  6949  00FFF1                     STR_298:
  6950  00FFF1  33                 	db	51	;'3'
  6951  00FFF2  37                 	db	55	;'7'
  6952  00FFF3  00                 	db	0
  6953  00FFF4                     STR_308:
  6954  00FFF4  34                 	db	52	;'4'
  6955  00FFF5  37                 	db	55	;'7'
  6956  00FFF6  00                 	db	0
  6957  00FFF7                     STR_282:
  6958  00FFF7  1B                 	db	27
  6959  00FFF8  5B                 	db	91	;'['
  6960  00FFF9  00                 	db	0
  6961  00FFFA                     STR_288:
  6962  00FFFA  38                 	db	56	;'8'
  6963  00FFFB  00                 	db	0
  6964  00FFFC                     STR_290:
  6965  00FFFC  3B                 	db	59	;';'
  6966  00FFFD  00                 	db	0
  6967  0000                     
  6968                           ; #config settings
  6969  00FFFE  00                 	db	0	; dummy byte at the end
  6970  0000                     
  6971                           	psect	nvBANK2
  6972  0002FE                     __pnvBANK2:
  6973                           	opt callstack 0
  6974  0002FE                     _reset_cause:
  6975                           	opt callstack 0
  6976  0002FE                     	ds	1
  6977  0000                     _SSP2BUF	set	3730
  6978  0000                     _SSP2CON2bits	set	3735
  6979  0000                     _SSP2CON1bits	set	3734
  6980  0000                     _SSP2ADD	set	3731
  6981  0000                     _SSP2CON3	set	3736
  6982  0000                     _SSP2CON1	set	3734
  6983  0000                     _SSP2STAT	set	3733
  6984  0000                     _PIR7bits	set	3793
  6985  0000                     _SSP2CLKPPS	set	3727
  6986  0000                     _RX2PPS	set	3725
  6987  0000                     _INT1PPS	set	3746
  6988  0000                     _INT2PPS	set	3747
  6989  0000                     _RB4PPS	set	3827
  6990  0000                     _RC4PPS	set	3835
  6991  0000                     _RB5PPS	set	3828
  6992  0000                     _SSP2DATPPS	set	3728
  6993  0000                     _CCP2PPS	set	3760
  6994  0000                     _PMD5	set	3814
  6995  0000                     _PMD4	set	3813
  6996  0000                     _PMD3	set	3812
  6997  0000                     _PMD2	set	3811
  6998  0000                     _PMD1	set	3810
  6999  0000                     _PMD0	set	3809
  7000  0000                     _OSCTUNE	set	3805
  7001  0000                     _OSCFRQ	set	3806
  7002  0000                     _OSCEN	set	3804
  7003  0000                     _OSCCON3	set	3802
  7004  0000                     _OSCCON1	set	3800
  7005  0000                     _PIR6bits	set	3792
  7006  0000                     _PIE6bits	set	3784
  7007  0000                     _PIR1bits	set	3787
  7008  0000                     _PIE1bits	set	3779
  7009  0000                     _PIR3bits	set	3789
  7010  0000                     _PIR4bits	set	3790
  7011  0000                     _PIE4bits	set	3782
  7012  0000                     _IPR6bits	set	3776
  7013  0000                     _IPR1bits	set	3771
  7014  0000                     _IPR3bits	set	3773
  7015  0000                     _IPR0bits	set	3770
  7016  0000                     _IPR4bits	set	3774
  7017  0000                     _RC2REG	set	3737
  7018  0000                     _RC2STAbits	set	3741
  7019  0000                     _TX2REG	set	3738
  7020  0000                     _TX2STAbits	set	3742
  7021  0000                     _SP2BRGH	set	3740
  7022  0000                     _SP2BRGL	set	3739
  7023  0000                     _TX2STA	set	3742
  7024  0000                     _RC2STA	set	3741
  7025  0000                     _BAUD2CON	set	3743
  7026  0000                     _PIE3bits	set	3781
  7027  0000                     _PIE0bits	set	3778
  7028  0000                     _PIR0bits	set	3786
  7029  0000                     _FVRCONbits	set	3889
  7030  0000                     _FVRCON	set	3889
  7031  0000                     _ADCON1bits	set	3929
  7032  0000                     _ADCON2bits	set	3930
  7033  0000                     _ADPRE	set	3934
  7034  0000                     _ADCON3bits	set	3931
  7035  0000                     _ADACQ	set	3932
  7036  0000                     _ADCLK	set	3927
  7037  0000                     _ADACT	set	3926
  7038  0000                     _ADREF	set	3928
  7039  0000                     _ADCON3	set	3931
  7040  0000                     _ADCON2	set	3930
  7041  0000                     _ADCON1	set	3929
  7042  0000                     _ADCAP	set	3933
  7043  0000                     _ADPCH	set	3935
  7044  0000                     _IOCBPbits	set	3860
  7045  0000                     _IOCBNbits	set	3859
  7046  0000                     _IOCBFbits	set	3858
  7047  0000                     _SLRCONC	set	3870
  7048  0000                     _SLRCONB	set	3862
  7049  0000                     _SLRCONA	set	3854
  7050  0000                     _ODCONC	set	3871
  7051  0000                     _ODCONB	set	3863
  7052  0000                     _ODCONA	set	3855
  7053  0000                     _WPUC	set	3872
  7054  0000                     _WPUA	set	3856
  7055  0000                     _WPUB	set	3864
  7056  0000                     _WPUE	set	3885
  7057  0000                     _ANSELA	set	3857
  7058  0000                     _ANSELB	set	3865
  7059  0000                     _ANSELC	set	3873
  7060  0000                     _T1GCONbits	set	4048
  7061  0000                     _T1CONbits	set	4047
  7062  0000                     _T1CON	set	4047
  7063  0000                     _TMR1L	set	4045
  7064  0000                     _TMR1H	set	4046
  7065  0000                     _T1CLK	set	4050
  7066  0000                     _T1GATE	set	4049
  7067  0000                     _T1GCON	set	4048
  7068  0000                     _CCP2CONbits	set	4008
  7069  0000                     _LATBbits	set	3972
  7070  0000                     _PCON0bits	set	4055
  7071  0000                     _PORTBbits	set	3982
  7072  0000                     _LATCbits	set	3973
  7073  0000                     _T5GCONbits	set	4036
  7074  0000                     _T5CON	set	4035
  7075  0000                     _T5CLK	set	4038
  7076  0000                     _T5GATE	set	4037
  7077  0000                     _T5GCON	set	4036
  7078  0000                     _T5CONbits	set	4035
  7079  0000                     _TMR5L	set	4033
  7080  0000                     _TMR5H	set	4034
  7081  0000                     _CCPTMRSbits	set	4014
  7082  0000                     _CCPR2L	set	4006
  7083  0000                     _CCPR2H	set	4007
  7084  0000                     _CCP2CAP	set	4009
  7085  0000                     _CCP2CON	set	4008
  7086  0000                     _T3GCONbits	set	4042
  7087  0000                     _T3CONbits	set	4041
  7088  0000                     _T3CON	set	4041
  7089  0000                     _TMR3L	set	4039
  7090  0000                     _TMR3H	set	4040
  7091  0000                     _T3CLK	set	4044
  7092  0000                     _T3GATE	set	4043
  7093  0000                     _T3GCON	set	4042
  7094  0000                     _PR2	set	4028
  7095  0000                     _TMR2	set	4027
  7096  0000                     _T2CONbits	set	4029
  7097  0000                     _T2RSTbits	set	4032
  7098  0000                     _T2HLTbits	set	4030
  7099  0000                     _T2CON	set	4029
  7100  0000                     _T2TMR	set	4027
  7101  0000                     _T2PR	set	4028
  7102  0000                     _T2RST	set	4032
  7103  0000                     _T2HLT	set	4030
  7104  0000                     _T2CLKCON	set	4031
  7105  0000                     _NVMDAT	set	3968
  7106  0000                     _NVMADRL	set	3966
  7107  0000                     _NVMADRH	set	3967
  7108  0000                     _NVMCON2	set	3970
  7109  0000                     _TABLAT	set	4085
  7110  0000                     _TBLPTRL	set	4086
  7111  0000                     _TBLPTRH	set	4087
  7112  0000                     _TBLPTRU	set	4088
  7113  0000                     _NVMCON1bits	set	3969
  7114  0000                     _T0CON0bits	set	4053
  7115  0000                     _T0CON0	set	4053
  7116  0000                     _TMR0L	set	4051
  7117  0000                     _TMR0H	set	4052
  7118  0000                     _T0CON1	set	4054
  7119  0000                     _ADERRL	set	3950
  7120  0000                     _ADERRH	set	3951
  7121  0000                     _ADPREVL	set	3937
  7122  0000                     _ADPREVH	set	3938
  7123  0000                     _ADFLTRL	set	3954
  7124  0000                     _ADFLTRH	set	3955
  7125  0000                     _ADSTATbits	set	3941
  7126  0000                     _ADACCL	set	3952
  7127  0000                     _ADACCH	set	3953
  7128  0000                     _ADCNT	set	3943
  7129  0000                     _ADRESL	set	3939
  7130  0000                     _ADRESH	set	3940
  7131  0000                     _ADCON0bits	set	3936
  7132  0000                     _ADCON0	set	3936
  7133  0000                     _ADSTAT	set	3941
  7134  0000                     _ADRPT	set	3942
  7135  0000                     _ADSTPTH	set	3945
  7136  0000                     _ADSTPTL	set	3944
  7137  0000                     _ADUTHH	set	3949
  7138  0000                     _ADUTHL	set	3948
  7139  0000                     _ADLTHH	set	3947
  7140  0000                     _ADLTHL	set	3946
  7141  0000                     _TRISC	set	3978
  7142  0000                     _TRISB	set	3977
  7143  0000                     _TRISA	set	3976
  7144  0000                     _LATC	set	3973
  7145  0000                     _LATB	set	3972
  7146  0000                     _LATA	set	3971
  7147  0000                     _INTCONbits	set	4082
  7148                           
  7149                           	psect	cinit
  7150  01A74C                     __pcinit:
  7151                           	opt callstack 0
  7152  01A74C                     start_initialization:
  7153                           	opt callstack 0
  7154  01A74C                     __initialization:
  7155                           	opt callstack 0
  7156                           
  7157                           ; Initialize objects allocated to BANK3 (36 bytes)
  7158                           ; load TBLPTR registers with __pidataBANK3
  7159  01A74C  0E56               	movlw	low __pidataBANK3
  7160  01A74E  6EF6               	movwf	tblptrl,c
  7161  01A750  0EBC               	movlw	high __pidataBANK3
  7162  01A752  6EF7               	movwf	tblptrh,c
  7163  01A754  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  7164  01A756  6EF8               	movwf	tblptru,c
  7165  01A758  EE03  F0B9         	lfsr	0,__pdataBANK3
  7166  01A75C  EE10 F024          	lfsr	1,36
  7167  01A760                     copy_data0:
  7168  01A760  0009               	tblrd		*+
  7169  01A762  CFF5 FFEE          	movff	tablat,postinc0
  7170  01A766  50E5               	movf	postdec1,w,c
  7171  01A768  50E1               	movf	fsr1l,w,c
  7172  01A76A  E1FA               	bnz	copy_data0
  7173                           
  7174                           ; Initialize objects allocated to BANK2 (1 bytes)
  7175                           ; load TBLPTR registers with __pidataBANK2
  7176  01A76C  0EBB               	movlw	low __pidataBANK2
  7177  01A76E  6EF6               	movwf	tblptrl,c
  7178  01A770  0EC1               	movlw	high __pidataBANK2
  7179  01A772  6EF7               	movwf	tblptrh,c
  7180  01A774  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7181  01A776  6EF8               	movwf	tblptru,c
  7182  01A778  0009               	tblrd		*+	;fetch initializer
  7183  01A77A  CFF5 F2FF          	movff	tablat,__pdataBANK2
  7184                           
  7185                           ; Initialize objects allocated to BANK0 (1 bytes)
  7186                           ; load TBLPTR registers with __pidataBANK0
  7187  01A77E  0EBA               	movlw	low __pidataBANK0
  7188  01A780  6EF6               	movwf	tblptrl,c
  7189  01A782  0EC1               	movlw	high __pidataBANK0
  7190  01A784  6EF7               	movwf	tblptrh,c
  7191  01A786  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7192  01A788  6EF8               	movwf	tblptru,c
  7193  01A78A  0009               	tblrd		*+	;fetch initializer
  7194  01A78C  CFF5 F0FD          	movff	tablat,__pdataBANK0
  7195                           
  7196                           ; Clear objects allocated to BANK4 (192 bytes)
  7197  01A790  EE04  F000         	lfsr	0,__pbssBANK4
  7198  01A794  0EC0               	movlw	192
  7199  01A796                     clear_0:
  7200  01A796  6AEE               	clrf	postinc0,c
  7201  01A798  06E8               	decf	wreg,f,c
  7202  01A79A  E1FD               	bnz	clear_0
  7203                           
  7204                           ; Clear objects allocated to BANK3 (185 bytes)
  7205  01A79C  EE03  F000         	lfsr	0,__pbssBANK3
  7206  01A7A0  0EB9               	movlw	185
  7207  01A7A2                     clear_1:
  7208  01A7A2  6AEE               	clrf	postinc0,c
  7209  01A7A4  06E8               	decf	wreg,f,c
  7210  01A7A6  E1FD               	bnz	clear_1
  7211                           
  7212                           ; Clear objects allocated to BANK2 (80 bytes)
  7213  01A7A8  EE02  F0AE         	lfsr	0,__pbssBANK2
  7214  01A7AC  0E50               	movlw	80
  7215  01A7AE                     clear_2:
  7216  01A7AE  6AEE               	clrf	postinc0,c
  7217  01A7B0  06E8               	decf	wreg,f,c
  7218  01A7B2  E1FD               	bnz	clear_2
  7219                           
  7220                           ; Clear objects allocated to BANK1 (93 bytes)
  7221  01A7B4  EE01  F061         	lfsr	0,__pbssBANK1
  7222  01A7B8  0E5D               	movlw	93
  7223  01A7BA                     clear_3:
  7224  01A7BA  6AEE               	clrf	postinc0,c
  7225  01A7BC  06E8               	decf	wreg,f,c
  7226  01A7BE  E1FD               	bnz	clear_3
  7227                           
  7228                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7229  01A7C0  0100               	movlb	0
  7230  01A7C2  6BFC               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7231                           
  7232                           ; Clear objects allocated to BANK0 (67 bytes)
  7233  01A7C4  EE00  F0B9         	lfsr	0,__pbssBANK0
  7234  01A7C8  0E43               	movlw	67
  7235  01A7CA                     clear_4:
  7236  01A7CA  6AEE               	clrf	postinc0,c
  7237  01A7CC  06E8               	decf	wreg,f,c
  7238  01A7CE  E1FD               	bnz	clear_4
  7239  01A7D0                     end_of_initialization:
  7240                           	opt callstack 0
  7241  01A7D0                     __end_of__initialization:
  7242                           	opt callstack 0
  7243  01A7D0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7244  01A7D2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7245  01A7D4  0100               	movlb	0
  7246  01A7D6  EF0E  F0C2         	goto	_main	;jump to C main() function
  7247                           
  7248                           	psect	bitbssBANK0
  7249  0007E0                     __pbitbssBANK0:
  7250                           	opt callstack 0
  7251  0007E0                     _eusart2RxStringReady:
  7252                           	opt callstack 0
  7253  0007E0                     	ds	1
  7254                           
  7255                           	psect	bssBANK0
  7256  0000B9                     __pbssBANK0:
  7257                           	opt callstack 0
  7258  0000B9                     _adc_calculations:
  7259                           	opt callstack 0
  7260  0000B9                     	ds	12
  7261  0000C5                     _error_handler:
  7262                           	opt callstack 0
  7263  0000C5                     	ds	8
  7264  0000CD                     _adc_result_scaling:
  7265                           	opt callstack 0
  7266  0000CD                     	ds	4
  7267  0000D1                     I2C2_ISR@pi2c_buf_ptr:
  7268                           	opt callstack 0
  7269  0000D1                     	ds	2
  7270  0000D3                     _p_i2c2_current:
  7271                           	opt callstack 0
  7272  0000D3                     	ds	2
  7273  0000D5                     _p_i2c2_trb_current:
  7274                           	opt callstack 0
  7275  0000D5                     	ds	2
  7276  0000D7                     _qi_isns_average_index:
  7277                           	opt callstack 0
  7278  0000D7                     	ds	1
  7279  0000D8                     _pos12_isns_average_index:
  7280                           	opt callstack 0
  7281  0000D8                     	ds	1
  7282  0000D9                     I2C2_ISR@i2c_10bit_address_restart:
  7283                           	opt callstack 0
  7284  0000D9                     	ds	1
  7285  0000DA                     I2C2_ISR@i2c_bytes_left:
  7286                           	opt callstack 0
  7287  0000DA                     	ds	1
  7288  0000DB                     _i2c2_trb_count:
  7289                           	opt callstack 0
  7290  0000DB                     	ds	1
  7291  0000DC                     _i2c2_state:
  7292                           	opt callstack 0
  7293  0000DC                     	ds	1
  7294  0000DD                     _eusart2RxHead:
  7295                           	opt callstack 0
  7296  0000DD                     	ds	1
  7297  0000DE                     _adc_results:
  7298                           	opt callstack 0
  7299  0000DE                     	ds	28
  7300  0000FA                     I2C2_ISR@i2c_address:
  7301                           	opt callstack 0
  7302  0000FA                     	ds	2
  7303                           
  7304                           	psect	dataBANK0
  7305  0000FD                     __pdataBANK0:
  7306                           	opt callstack 0
  7307  0000FD                     _next_adc_channel:
  7308                           	opt callstack 0
  7309  0000FD                     	ds	1
  7310                           
  7311                           	psect	bssBANK1
  7312  000161                     __pbssBANK1:
  7313                           	opt callstack 0
  7314  000161                     _i2c2_object:
  7315                           	opt callstack 0
  7316  000161                     	ds	7
  7317  000168                     _freq_meas_results:
  7318                           	opt callstack 0
  7319  000168                     	ds	6
  7320  00016E                     _TMR1_InterruptHandler:
  7321                           	opt callstack 0
  7322  00016E                     	ds	3
  7323  000171                     _TMR3_InterruptHandler:
  7324                           	opt callstack 0
  7325  000171                     	ds	3
  7326  000174                     _TMR2_InterruptHandler:
  7327                           	opt callstack 0
  7328  000174                     	ds	3
  7329  000177                     _TMR0_InterruptHandler:
  7330                           	opt callstack 0
  7331  000177                     	ds	3
  7332  00017A                     _ADCC_ADTI_InterruptHandler:
  7333                           	opt callstack 0
  7334  00017A                     	ds	3
  7335  00017D                     _IOCBF3_InterruptHandler:
  7336                           	opt callstack 0
  7337  00017D                     	ds	3
  7338  000180                     _IOCBF2_InterruptHandler:
  7339                           	opt callstack 0
  7340  000180                     	ds	3
  7341  000183                     _EUSART2_RxDefaultInterruptHandler:
  7342                           	opt callstack 0
  7343  000183                     	ds	3
  7344  000186                     _EUSART2_TxDefaultInterruptHandler:
  7345                           	opt callstack 0
  7346  000186                     	ds	3
  7347  000189                     _INT2_InterruptHandler:
  7348                           	opt callstack 0
  7349  000189                     	ds	3
  7350  00018C                     _INT1_InterruptHandler:
  7351                           	opt callstack 0
  7352  00018C                     	ds	3
  7353  00018F                     _timer1ReloadVal:
  7354                           	opt callstack 0
  7355  00018F                     	ds	2
  7356  000191                     _timer5ReloadVal:
  7357                           	opt callstack 0
  7358  000191                     	ds	2
  7359  000193                     _timer3ReloadVal:
  7360                           	opt callstack 0
  7361  000193                     	ds	2
  7362  000195                     _nxq_charge_state:
  7363                           	opt callstack 0
  7364  000195                     	ds	1
  7365  000196                     _QI_current_edge:
  7366                           	opt callstack 0
  7367  000196                     	ds	1
  7368  000197                     _eusart2RxCount:
  7369                           	opt callstack 0
  7370  000197                     	ds	1
  7371  000198                     _eusart2RxTail:
  7372                           	opt callstack 0
  7373  000198                     	ds	1
  7374  000199                     _eusart2TxBufferRemaining:
  7375                           	opt callstack 0
  7376  000199                     	ds	1
  7377  00019A                     _eusart2TxTail:
  7378                           	opt callstack 0
  7379  00019A                     	ds	1
  7380  00019B                     _eusart2TxHead:
  7381                           	opt callstack 0
  7382  00019B                     	ds	1
  7383  00019C                     _LM73_temp_results:
  7384                           	opt callstack 0
  7385  00019C                     	ds	18
  7386  0001AE                     I2C2_MasterRead@trBlock:
  7387                           	opt callstack 0
  7388  0001AE                     	ds	5
  7389  0001B3                     I2C2_MasterWrite@trBlock:
  7390                           	opt callstack 0
  7391  0001B3                     	ds	5
  7392  0001B8                     _i2c2_tr_queue:
  7393                           	opt callstack 0
  7394  0001B8                     	ds	5
  7395  0001BD                     _I2C_STATUS:
  7396                           	opt callstack 0
  7397  0001BD                     	ds	1
  7398                           
  7399                           	psect	bssBANK2
  7400  0002AE                     __pbssBANK2:
  7401                           	opt callstack 0
  7402  0002AE                     _device_on_time:
  7403                           	opt callstack 0
  7404  0002AE                     	ds	4
  7405  0002B2                     _QI_charge_time:
  7406                           	opt callstack 0
  7407  0002B2                     	ds	4
  7408  0002B6                     _OLED_update_flag:
  7409                           	opt callstack 0
  7410  0002B6                     	ds	1
  7411  0002B7                     _OLED_Frame:
  7412                           	opt callstack 0
  7413  0002B7                     	ds	1
  7414  0002B8                     _LM73_start_flag:
  7415                           	opt callstack 0
  7416  0002B8                     	ds	1
  7417  0002B9                     _freq_meas_start_flag:
  7418                           	opt callstack 0
  7419  0002B9                     	ds	1
  7420  0002BA                     _OLED_RAM_Buffer:
  7421                           	opt callstack 0
  7422  0002BA                     	ds	68
  7423                           
  7424                           	psect	dataBANK2
  7425  0002FF                     __pdataBANK2:
  7426                           	opt callstack 0
  7427  0002FF                     _OLED_update_time:
  7428                           	opt callstack 0
  7429  0002FF                     	ds	1
  7430                           
  7431                           	psect	bssBANK3
  7432  000300                     __pbssBANK3:
  7433                           	opt callstack 0
  7434  000300                     _eusart2RxBuffer:
  7435                           	opt callstack 0
  7436  000300                     	ds	64
  7437  000340                     _line:
  7438                           	opt callstack 0
  7439  000340                     	ds	64
  7440  000380                     getStringSecondsAsTime@return_string:
  7441                           	opt callstack 0
  7442  000380                     	ds	40
  7443  0003A8                     ftoa@buf:
  7444                           	opt callstack 0
  7445  0003A8                     	ds	17
  7446                           
  7447                           	psect	dataBANK3
  7448  0003B9                     __pdataBANK3:
  7449                           	opt callstack 0
  7450  0003B9                     getCauseOfResetStringSmall@strings:
  7451                           	opt callstack 0
  7452  0003B9                     	ds	18
  7453  0003CB                     getCauseOfResetString@strings:
  7454                           	opt callstack 0
  7455  0003CB                     	ds	18
  7456                           
  7457                           	psect	bssBANK4
  7458  000400                     __pbssBANK4:
  7459                           	opt callstack 0
  7460  000400                     _qi_isns_average_buffer:
  7461                           	opt callstack 0
  7462  000400                     	ds	64
  7463  000440                     _pos12_isns_average_buffer:
  7464                           	opt callstack 0
  7465  000440                     	ds	64
  7466  000480                     _eusart2TxBuffer:
  7467                           	opt callstack 0
  7468  000480                     	ds	64
  7469                           
  7470                           	psect	cstackBANK4
  7471  0004C0                     __pcstackBANK4:
  7472                           	opt callstack 0
  7473  0004C0                     terminalTextAttributes@foreground_color:
  7474                           	opt callstack 0
  7475                           
  7476                           ; 1 bytes @ 0x0
  7477  0004C0                     	ds	1
  7478  0004C1                     terminalTextAttributes@print_string:
  7479                           	opt callstack 0
  7480                           
  7481                           ; 16 bytes @ 0x1
  7482  0004C1                     	ds	16
  7483  0004D1                     terminalTextAttributes@i:
  7484                           	opt callstack 0
  7485                           
  7486                           ; 1 bytes @ 0x11
  7487  0004D1                     	ds	1
  7488  0004D2                     terminal_ringBufferPull@charNumber:
  7489                           	opt callstack 0
  7490                           
  7491                           ; 2 bytes @ 0x12
  7492  0004D2                     	ds	2
  7493  0004D4                     terminal_ringBufferPull@index_4462:
  7494                           	opt callstack 0
  7495                           
  7496                           ; 2 bytes @ 0x14
  7497  0004D4                     	ds	2
  7498  0004D6                     terminal_ringBufferPull@index:
  7499                           	opt callstack 0
  7500                           
  7501                           ; 2 bytes @ 0x16
  7502  0004D6                     	ds	2
  7503  0004D8                     ??_main:
  7504                           
  7505                           ; 1 bytes @ 0x18
  7506  0004D8                     	ds	2
  7507                           
  7508                           	psect	cstackBANK3
  7509  0003DD                     __pcstackBANK3:
  7510                           	opt callstack 0
  7511  0003DD                     OLED_updateHandler@dev_id_str:
  7512                           	opt callstack 0
  7513  0003DD                     getStringSecondsAsTime@buff:
  7514                           	opt callstack 0
  7515                           
  7516                           ; 20 bytes @ 0x0
  7517  0003DD                     	ds	17
  7518  0003EE                     OLED_updateHandler@rev_id_str:
  7519                           	opt callstack 0
  7520                           
  7521                           ; 17 bytes @ 0x11
  7522  0003EE                     	ds	3
  7523  0003F1                     getStringSecondsAsTime@i:
  7524                           	opt callstack 0
  7525                           
  7526                           ; 1 bytes @ 0x14
  7527  0003F1                     	ds	1
  7528  0003F2                     getStringSecondsAsTime@seconds:
  7529                           	opt callstack 0
  7530                           
  7531                           ; 1 bytes @ 0x15
  7532  0003F2                     	ds	1
  7533  0003F3                     getStringSecondsAsTime@years:
  7534                           	opt callstack 0
  7535                           
  7536                           ; 1 bytes @ 0x16
  7537  0003F3                     	ds	1
  7538  0003F4                     getStringSecondsAsTime@days:
  7539                           	opt callstack 0
  7540                           
  7541                           ; 1 bytes @ 0x17
  7542  0003F4                     	ds	1
  7543  0003F5                     getStringSecondsAsTime@hours:
  7544                           	opt callstack 0
  7545                           
  7546                           ; 1 bytes @ 0x18
  7547  0003F5                     	ds	1
  7548  0003F6                     getStringSecondsAsTime@minutes:
  7549                           	opt callstack 0
  7550                           
  7551                           ; 1 bytes @ 0x19
  7552  0003F6                     	ds	1
  7553  0003F7                     terminalTextAttributes@background_color:
  7554                           	opt callstack 0
  7555                           
  7556                           ; 1 bytes @ 0x1A
  7557  0003F7                     	ds	1
  7558  0003F8                     terminalTextAttributes@input_attribute:
  7559                           	opt callstack 0
  7560                           
  7561                           ; 1 bytes @ 0x1B
  7562  0003F8                     	ds	1
  7563  0003F9                     ringBufferLUT@line:
  7564                           	opt callstack 0
  7565                           
  7566                           ; 2 bytes @ 0x1C
  7567  0003F9                     	ds	2
  7568  0003FB                     ??_ringBufferLUT:
  7569                           
  7570                           ; 1 bytes @ 0x1E
  7571  0003FB                     	ds	2
  7572  0003FD                     ringBufferLUT@userID:
  7573                           	opt callstack 0
  7574                           
  7575                           ; 2 bytes @ 0x20
  7576  0003FD                     	ds	2
  7577  0003FF                     ??_terminal_ringBufferPull:
  7578                           
  7579                           ; 1 bytes @ 0x22
  7580  0003FF                     	ds	1
  7581                           
  7582                           	psect	cstackBANK2
  7583  000200                     __pcstackBANK2:
  7584                           	opt callstack 0
  7585  000200                     ??_TMR5_Initialize:
  7586  000200                     ??_updateErrorLEDs:
  7587  000200                     ??_isdigit:
  7588  000200                     ?_getCauseOfResetString:
  7589                           	opt callstack 0
  7590  000200                     ?_getNXQChargeStateString:
  7591                           	opt callstack 0
  7592  000200                     ?_getNXQChargeStateStringCaps:
  7593                           	opt callstack 0
  7594  000200                     ?_getCauseOfResetStringSmall:
  7595                           	opt callstack 0
  7596  000200                     ?_strlen:
  7597                           	opt callstack 0
  7598  000200                     ?_strcmp:
  7599                           	opt callstack 0
  7600  000200                     ?___wmul:
  7601                           	opt callstack 0
  7602  000200                     ?___awmod:
  7603                           	opt callstack 0
  7604  000200                     ?___lwmod:
  7605                           	opt callstack 0
  7606  000200                     ?__tdiv_to_l_:
  7607                           	opt callstack 0
  7608  000200                     ?__div_to_l_:
  7609                           	opt callstack 0
  7610  000200                     ?___fldiv:
  7611                           	opt callstack 0
  7612  000200                     ?___lldiv:
  7613                           	opt callstack 0
  7614  000200                     ?___flneg:
  7615                           	opt callstack 0
  7616  000200                     ?___xxtofl:
  7617                           	opt callstack 0
  7618  000200                     EUSART2_Read@readValue:
  7619                           	opt callstack 0
  7620  000200                     EUSART2_Write@txData:
  7621                           	opt callstack 0
  7622  000200                     getCauseOfReset@return_reset_cause:
  7623                           	opt callstack 0
  7624  000200                     TMR3_WriteTimer@timerVal:
  7625                           	opt callstack 0
  7626  000200                     I2C2_MasterTRBInsert@ptrb_list:
  7627                           	opt callstack 0
  7628  000200                     I2C2_MasterReadTRBBuild@ptrb:
  7629                           	opt callstack 0
  7630  000200                     I2C2_MasterWriteTRBBuild@ptrb:
  7631                           	opt callstack 0
  7632  000200                     TMR5_WriteTimer@timerVal:
  7633                           	opt callstack 0
  7634  000200                     TMR1_WriteTimer@timerVal:
  7635                           	opt callstack 0
  7636  000200                     ___wmul@multiplier:
  7637                           	opt callstack 0
  7638  000200                     ___awmod@dividend:
  7639                           	opt callstack 0
  7640  000200                     ___lwmod@dividend:
  7641                           	opt callstack 0
  7642  000200                     memmove@d1:
  7643                           	opt callstack 0
  7644  000200                     strcat@to:
  7645                           	opt callstack 0
  7646  000200                     strcmp@s1:
  7647                           	opt callstack 0
  7648  000200                     strlen@s:
  7649                           	opt callstack 0
  7650  000200                     strncpy@to:
  7651                           	opt callstack 0
  7652  000200                     INT1_SetInterruptHandler@InterruptHandler:
  7653                           	opt callstack 0
  7654  000200                     INT2_SetInterruptHandler@InterruptHandler:
  7655                           	opt callstack 0
  7656  000200                     EUSART2_SetTxInterruptHandler@interruptHandler:
  7657                           	opt callstack 0
  7658  000200                     EUSART2_SetRxInterruptHandler@interruptHandler:
  7659                           	opt callstack 0
  7660  000200                     IOCBF2_SetInterruptHandler@InterruptHandler:
  7661                           	opt callstack 0
  7662  000200                     IOCBF3_SetInterruptHandler@InterruptHandler:
  7663                           	opt callstack 0
  7664  000200                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  7665                           	opt callstack 0
  7666  000200                     TMR0_SetInterruptHandler@InterruptHandler:
  7667                           	opt callstack 0
  7668  000200                     TMR2_SetInterruptHandler@InterruptHandler:
  7669                           	opt callstack 0
  7670  000200                     TMR3_SetInterruptHandler@InterruptHandler:
  7671                           	opt callstack 0
  7672  000200                     TMR1_SetInterruptHandler@InterruptHandler:
  7673                           	opt callstack 0
  7674  000200                     FLASH_ReadByte@flashAddr:
  7675                           	opt callstack 0
  7676  000200                     ___lldiv@dividend:
  7677                           	opt callstack 0
  7678  000200                     __div_to_l_@f1:
  7679                           	opt callstack 0
  7680  000200                     ___fleq@ff1:
  7681                           	opt callstack 0
  7682  000200                     ___flge@ff1:
  7683                           	opt callstack 0
  7684  000200                     ___flneg@f1:
  7685                           	opt callstack 0
  7686  000200                     __tdiv_to_l_@f1:
  7687                           	opt callstack 0
  7688  000200                     ___fldiv@b:
  7689                           	opt callstack 0
  7690  000200                     ___xxtofl@val:
  7691                           	opt callstack 0
  7692                           
  7693                           ; 4 bytes @ 0x0
  7694  000200                     	ds	1
  7695  000201                     putch@txData:
  7696                           	opt callstack 0
  7697  000201                     _isdigit$5355:
  7698                           	opt callstack 0
  7699                           
  7700                           ; 1 bytes @ 0x1
  7701  000201                     	ds	1
  7702  000202                     getCauseOfResetString@r:
  7703                           	opt callstack 0
  7704  000202                     getCauseOfResetStringSmall@r:
  7705                           	opt callstack 0
  7706  000202                     isdigit@c:
  7707                           	opt callstack 0
  7708  000202                     I2C2_MasterTRBInsert@pflag:
  7709                           	opt callstack 0
  7710  000202                     I2C2_MasterReadTRBBuild@pdata:
  7711                           	opt callstack 0
  7712  000202                     I2C2_MasterWriteTRBBuild@pdata:
  7713                           	opt callstack 0
  7714  000202                     ___wmul@multiplicand:
  7715                           	opt callstack 0
  7716  000202                     ___awmod@divisor:
  7717                           	opt callstack 0
  7718  000202                     ___lwmod@divisor:
  7719                           	opt callstack 0
  7720  000202                     memmove@s1:
  7721                           	opt callstack 0
  7722  000202                     strcat@from:
  7723                           	opt callstack 0
  7724  000202                     strcmp@s2:
  7725                           	opt callstack 0
  7726  000202                     strlen@cp:
  7727                           	opt callstack 0
  7728  000202                     strncpy@from:
  7729                           	opt callstack 0
  7730                           
  7731                           ; 2 bytes @ 0x2
  7732  000202                     	ds	1
  7733  000203                     ??_TMR3_Initialize:
  7734  000203                     ??_TMR1_Initialize:
  7735  000203                     strcpy@to:
  7736                           	opt callstack 0
  7737                           
  7738                           ; 2 bytes @ 0x3
  7739  000203                     	ds	1
  7740  000204                     ??_strcmp:
  7741  000204                     ??___xxtofl:
  7742  000204                     ?_FLASH_ReadWord:
  7743                           	opt callstack 0
  7744  000204                     I2C2_MasterReadTRBBuild@length:
  7745                           	opt callstack 0
  7746  000204                     I2C2_MasterWriteTRBBuild@length:
  7747                           	opt callstack 0
  7748  000204                     ___awmod@counter:
  7749                           	opt callstack 0
  7750  000204                     ___lwmod@counter:
  7751                           	opt callstack 0
  7752  000204                     ___wmul@product:
  7753                           	opt callstack 0
  7754  000204                     memmove@n:
  7755                           	opt callstack 0
  7756  000204                     strcat@cp:
  7757                           	opt callstack 0
  7758  000204                     strncpy@size:
  7759                           	opt callstack 0
  7760  000204                     FLASH_ReadWord@flashAddr:
  7761                           	opt callstack 0
  7762  000204                     ___lldiv@divisor:
  7763                           	opt callstack 0
  7764  000204                     __div_to_l_@f2:
  7765                           	opt callstack 0
  7766  000204                     ___fleq@ff2:
  7767                           	opt callstack 0
  7768  000204                     ___flge@ff2:
  7769                           	opt callstack 0
  7770  000204                     __tdiv_to_l_@f2:
  7771                           	opt callstack 0
  7772  000204                     ___fldiv@a:
  7773                           	opt callstack 0
  7774                           
  7775                           ; 4 bytes @ 0x4
  7776  000204                     	ds	1
  7777  000205                     ?___lwdiv:
  7778                           	opt callstack 0
  7779  000205                     I2C2_MasterTRBInsert@count:
  7780                           	opt callstack 0
  7781  000205                     ___awmod@sign:
  7782                           	opt callstack 0
  7783  000205                     I2C2_MasterReadTRBBuild@address:
  7784                           	opt callstack 0
  7785  000205                     I2C2_MasterWriteTRBBuild@address:
  7786                           	opt callstack 0
  7787  000205                     ___lwdiv@dividend:
  7788                           	opt callstack 0
  7789  000205                     strcpy@from:
  7790                           	opt callstack 0
  7791                           
  7792                           ; 2 bytes @ 0x5
  7793  000205                     	ds	1
  7794  000206                     ??_memmove:
  7795  000206                     ?___awdiv:
  7796                           	opt callstack 0
  7797  000206                     strcmp@r:
  7798                           	opt callstack 0
  7799  000206                     ___awdiv@dividend:
  7800                           	opt callstack 0
  7801  000206                     strncpy@cp:
  7802                           	opt callstack 0
  7803                           
  7804                           ; 2 bytes @ 0x6
  7805  000206                     	ds	1
  7806  000207                     ??_I2C2_MasterWriteTRBBuild:
  7807  000207                     ??_I2C2_MasterReadTRBBuild:
  7808  000207                     ___lwdiv@divisor:
  7809                           	opt callstack 0
  7810  000207                     strcpy@cp:
  7811                           	opt callstack 0
  7812                           
  7813                           ; 2 bytes @ 0x7
  7814  000207                     	ds	1
  7815  000208                     ??__tdiv_to_l_:
  7816  000208                     ??___fldiv:
  7817  000208                     ??_FLASH_ReadWord:
  7818  000208                     ??___fleq:
  7819  000208                     ??___flge:
  7820  000208                     ___xxtofl@sign:
  7821                           	opt callstack 0
  7822  000208                     ___awdiv@divisor:
  7823                           	opt callstack 0
  7824  000208                     memmove@d:
  7825                           	opt callstack 0
  7826  000208                     ___lldiv@quotient:
  7827                           	opt callstack 0
  7828  000208                     __div_to_l_@quot:
  7829                           	opt callstack 0
  7830                           
  7831                           ; 4 bytes @ 0x8
  7832  000208                     	ds	1
  7833  000209                     ___lwdiv@counter:
  7834                           	opt callstack 0
  7835  000209                     ___xxtofl@exp:
  7836                           	opt callstack 0
  7837  000209                     I2C2_MasterWrite@pdata:
  7838                           	opt callstack 0
  7839  000209                     I2C2_MasterRead@pdata:
  7840                           	opt callstack 0
  7841                           
  7842                           ; 2 bytes @ 0x9
  7843  000209                     	ds	1
  7844  00020A                     ___awdiv@counter:
  7845                           	opt callstack 0
  7846  00020A                     ___lwdiv@quotient:
  7847                           	opt callstack 0
  7848  00020A                     memmove@s:
  7849                           	opt callstack 0
  7850  00020A                     ___xxtofl@arg:
  7851                           	opt callstack 0
  7852                           
  7853                           ; 4 bytes @ 0xA
  7854  00020A                     	ds	1
  7855  00020B                     ??_getMajorRevisionID:
  7856  00020B                     ?_getDeviceID:
  7857                           	opt callstack 0
  7858  00020B                     ?_getUserID:
  7859                           	opt callstack 0
  7860  00020B                     I2C2_MasterWrite@length:
  7861                           	opt callstack 0
  7862  00020B                     I2C2_MasterRead@length:
  7863                           	opt callstack 0
  7864  00020B                     ___awdiv@sign:
  7865                           	opt callstack 0
  7866  00020B                     getMinorRevisionID@REVID_RAW:
  7867                           	opt callstack 0
  7868  00020B                     __tdiv_to_l_@quot:
  7869                           	opt callstack 0
  7870                           
  7871                           ; 4 bytes @ 0xB
  7872  00020B                     	ds	1
  7873  00020C                     ___lldiv@counter:
  7874                           	opt callstack 0
  7875  00020C                     __div_to_l_@cntr:
  7876                           	opt callstack 0
  7877  00020C                     I2C2_MasterWrite@address:
  7878                           	opt callstack 0
  7879  00020C                     I2C2_MasterRead@address:
  7880                           	opt callstack 0
  7881  00020C                     ___awdiv@quotient:
  7882                           	opt callstack 0
  7883  00020C                     ___fldiv@rem:
  7884                           	opt callstack 0
  7885                           
  7886                           ; 4 bytes @ 0xC
  7887  00020C                     	ds	1
  7888  00020D                     ?_getDeviceIDString:
  7889                           	opt callstack 0
  7890  00020D                     ?___llmod:
  7891                           	opt callstack 0
  7892  00020D                     __div_to_l_@exp1:
  7893                           	opt callstack 0
  7894  00020D                     getDeviceIDString@inputDevID:
  7895                           	opt callstack 0
  7896  00020D                     getYearsFromOnTime@input_seconds:
  7897                           	opt callstack 0
  7898  00020D                     getDaysFromOnTime@input_seconds:
  7899                           	opt callstack 0
  7900  00020D                     getHoursFromOnTime@input_seconds:
  7901                           	opt callstack 0
  7902  00020D                     getMinutesFromOnTime@input_seconds:
  7903                           	opt callstack 0
  7904  00020D                     getSecondsFromOnTime@input_seconds:
  7905                           	opt callstack 0
  7906  00020D                     ___llmod@dividend:
  7907                           	opt callstack 0
  7908                           
  7909                           ; 4 bytes @ 0xD
  7910  00020D                     	ds	1
  7911  00020E                     ?___flmul:
  7912                           	opt callstack 0
  7913  00020E                     I2C2_MasterWrite@pflag:
  7914                           	opt callstack 0
  7915  00020E                     I2C2_MasterRead@pflag:
  7916                           	opt callstack 0
  7917  00020E                     getMajorRevisionID@REVID_RAW:
  7918                           	opt callstack 0
  7919  00020E                     ___flmul@b:
  7920                           	opt callstack 0
  7921                           
  7922                           ; 4 bytes @ 0xE
  7923  00020E                     	ds	1
  7924  00020F                     ??_getDeviceIDString:
  7925  00020F                     __tdiv_to_l_@cntr:
  7926                           	opt callstack 0
  7927                           
  7928                           ; 1 bytes @ 0xF
  7929  00020F                     	ds	1
  7930  000210                     ??_OLED_PutChar:
  7931  000210                     OLED_Command@temp:
  7932                           	opt callstack 0
  7933  000210                     __tdiv_to_l_@exp1:
  7934                           	opt callstack 0
  7935  000210                     ___fldiv@sign:
  7936                           	opt callstack 0
  7937  000210                     LM73TempSensorInitialize@output_data_array:
  7938                           	opt callstack 0
  7939                           
  7940                           ; 2 bytes @ 0x10
  7941  000210                     	ds	1
  7942  000211                     ??_getDaysFromOnTime:
  7943  000211                     ??_getHoursFromOnTime:
  7944  000211                     ??_getMinutesFromOnTime:
  7945  000211                     ??_getSecondsFromOnTime:
  7946  000211                     getUserID@inputUserID:
  7947                           	opt callstack 0
  7948  000211                     getYearsFromOnTime@years:
  7949                           	opt callstack 0
  7950  000211                     ___fldiv@new_exp:
  7951                           	opt callstack 0
  7952  000211                     ___llmod@divisor:
  7953                           	opt callstack 0
  7954                           
  7955                           ; 4 bytes @ 0x11
  7956  000211                     	ds	1
  7957  000212                     getUserID@IDOffset:
  7958                           	opt callstack 0
  7959  000212                     OLED_Command@data_array:
  7960                           	opt callstack 0
  7961  000212                     ___flmul@a:
  7962                           	opt callstack 0
  7963                           
  7964                           ; 4 bytes @ 0x12
  7965  000212                     	ds	1
  7966  000213                     ___fldiv@grs:
  7967                           	opt callstack 0
  7968                           
  7969                           ; 4 bytes @ 0x13
  7970  000213                     	ds	1
  7971  000214                     OLED_YX@Column:
  7972                           	opt callstack 0
  7973  000214                     OLED_PutChar@data_array:
  7974                           	opt callstack 0
  7975                           
  7976                           ; 9 bytes @ 0x14
  7977  000214                     	ds	1
  7978  000215                     ??_OLED_YX:
  7979  000215                     getDaysFromOnTime@days:
  7980                           	opt callstack 0
  7981  000215                     getHoursFromOnTime@hours:
  7982                           	opt callstack 0
  7983  000215                     getMinutesFromOnTime@minutes:
  7984                           	opt callstack 0
  7985  000215                     getSecondsFromOnTime@seconds:
  7986                           	opt callstack 0
  7987  000215                     ___llmod@counter:
  7988                           	opt callstack 0
  7989                           
  7990                           ; 1 bytes @ 0x15
  7991  000215                     	ds	1
  7992  000216                     ??___flmul:
  7993  000216                     getDaysFromOnTime@years:
  7994                           	opt callstack 0
  7995  000216                     getHoursFromOnTime@years:
  7996                           	opt callstack 0
  7997  000216                     getMinutesFromOnTime@years:
  7998                           	opt callstack 0
  7999  000216                     getSecondsFromOnTime@years:
  8000                           	opt callstack 0
  8001                           
  8002                           ; 1 bytes @ 0x16
  8003  000216                     	ds	1
  8004  000217                     getHoursFromOnTime@days:
  8005                           	opt callstack 0
  8006  000217                     getMinutesFromOnTime@days:
  8007                           	opt callstack 0
  8008  000217                     getSecondsFromOnTime@days:
  8009                           	opt callstack 0
  8010  000217                     ___fldiv@bexp:
  8011                           	opt callstack 0
  8012                           
  8013                           ; 1 bytes @ 0x17
  8014  000217                     	ds	1
  8015  000218                     getMinutesFromOnTime@hours:
  8016                           	opt callstack 0
  8017  000218                     getSecondsFromOnTime@hours:
  8018                           	opt callstack 0
  8019  000218                     OLED_YX@Row:
  8020                           	opt callstack 0
  8021  000218                     ___fldiv@aexp:
  8022                           	opt callstack 0
  8023                           
  8024                           ; 1 bytes @ 0x18
  8025  000218                     	ds	1
  8026  000219                     getSecondsFromOnTime@minutes:
  8027                           	opt callstack 0
  8028                           
  8029                           ; 1 bytes @ 0x19
  8030  000219                     	ds	1
  8031  00021A                     ___flmul@sign:
  8032                           	opt callstack 0
  8033                           
  8034                           ; 1 bytes @ 0x1A
  8035  00021A                     	ds	1
  8036  00021B                     ___flmul@aexp:
  8037                           	opt callstack 0
  8038                           
  8039                           ; 1 bytes @ 0x1B
  8040  00021B                     	ds	1
  8041  00021C                     ___flmul@grs:
  8042                           	opt callstack 0
  8043                           
  8044                           ; 4 bytes @ 0x1C
  8045  00021C                     	ds	1
  8046  00021D                     OLED_PutChar@input_base:
  8047                           	opt callstack 0
  8048                           
  8049                           ; 2 bytes @ 0x1D
  8050  00021D                     	ds	3
  8051  000220                     OLED_PutChar@ch:
  8052                           	opt callstack 0
  8053  000220                     ___flmul@bexp:
  8054                           	opt callstack 0
  8055                           
  8056                           ; 1 bytes @ 0x20
  8057  000220                     	ds	1
  8058  000221                     OLED_Clear@row:
  8059                           	opt callstack 0
  8060  000221                     OLED_WriteString@s:
  8061                           	opt callstack 0
  8062  000221                     ___flmul@prod:
  8063                           	opt callstack 0
  8064                           
  8065                           ; 4 bytes @ 0x21
  8066  000221                     	ds	2
  8067  000223                     OLED_UpdateFromRAMBuffer@char_index:
  8068                           	opt callstack 0
  8069  000223                     OLED_Clear@col:
  8070                           	opt callstack 0
  8071                           
  8072                           ; 2 bytes @ 0x23
  8073  000223                     	ds	1
  8074  000224                     OLED_UpdateFromRAMBuffer@char_index_4057:
  8075                           	opt callstack 0
  8076                           
  8077                           ; 1 bytes @ 0x24
  8078  000224                     	ds	1
  8079  000225                     OLED_UpdateFromRAMBuffer@char_index_4058:
  8080                           	opt callstack 0
  8081  000225                     ___flmul@temp:
  8082                           	opt callstack 0
  8083                           
  8084                           ; 2 bytes @ 0x25
  8085  000225                     	ds	1
  8086  000226                     OLED_UpdateFromRAMBuffer@char_index_4059:
  8087                           	opt callstack 0
  8088                           
  8089                           ; 1 bytes @ 0x26
  8090  000226                     	ds	1
  8091  000227                     ??_LM73Convert:
  8092  000227                     ?_fround:
  8093                           	opt callstack 0
  8094  000227                     ?_scale:
  8095                           	opt callstack 0
  8096                           
  8097                           ; 4 bytes @ 0x27
  8098  000227                     	ds	3
  8099  00022A                     LM73Convert@QI_Conv:
  8100                           	opt callstack 0
  8101                           
  8102                           ; 2 bytes @ 0x2A
  8103  00022A                     	ds	1
  8104  00022B                     _fround$5930:
  8105                           	opt callstack 0
  8106  00022B                     _scale$5931:
  8107                           	opt callstack 0
  8108                           
  8109                           ; 4 bytes @ 0x2B
  8110  00022B                     	ds	1
  8111  00022C                     LM73Convert@POS5_Conv:
  8112                           	opt callstack 0
  8113                           
  8114                           ; 2 bytes @ 0x2C
  8115  00022C                     	ds	2
  8116  00022E                     LM73Convert@Ambient_Conv:
  8117                           	opt callstack 0
  8118                           
  8119                           ; 2 bytes @ 0x2E
  8120  00022E                     	ds	1
  8121  00022F                     scale@scl:
  8122                           	opt callstack 0
  8123  00022F                     _fround$5929:
  8124                           	opt callstack 0
  8125                           
  8126                           ; 4 bytes @ 0x2F
  8127  00022F                     	ds	1
  8128  000230                     ?___fltol:
  8129                           	opt callstack 0
  8130  000230                     ___fltol@f1:
  8131                           	opt callstack 0
  8132                           
  8133                           ; 4 bytes @ 0x30
  8134  000230                     	ds	3
  8135  000233                     fround@prec:
  8136                           	opt callstack 0
  8137                           
  8138                           ; 1 bytes @ 0x33
  8139  000233                     	ds	1
  8140  000234                     ??___fltol:
  8141  000234                     ?___fladd:
  8142                           	opt callstack 0
  8143  000234                     ___fladd@b:
  8144                           	opt callstack 0
  8145                           
  8146                           ; 4 bytes @ 0x34
  8147  000234                     	ds	4
  8148  000238                     ___fltol@sign1:
  8149                           	opt callstack 0
  8150  000238                     ___fladd@a:
  8151                           	opt callstack 0
  8152                           
  8153                           ; 4 bytes @ 0x38
  8154  000238                     	ds	1
  8155  000239                     ___fltol@exp1:
  8156                           	opt callstack 0
  8157                           
  8158                           ; 1 bytes @ 0x39
  8159  000239                     	ds	3
  8160  00023C                     ??___fladd:
  8161                           
  8162                           ; 1 bytes @ 0x3C
  8163  00023C                     	ds	4
  8164  000240                     ___fladd@signs:
  8165                           	opt callstack 0
  8166                           
  8167                           ; 1 bytes @ 0x40
  8168  000240                     	ds	1
  8169  000241                     ___fladd@aexp:
  8170                           	opt callstack 0
  8171                           
  8172                           ; 1 bytes @ 0x41
  8173  000241                     	ds	1
  8174  000242                     ___fladd@bexp:
  8175                           	opt callstack 0
  8176                           
  8177                           ; 1 bytes @ 0x42
  8178  000242                     	ds	1
  8179  000243                     ___fladd@grs:
  8180                           	opt callstack 0
  8181                           
  8182                           ; 1 bytes @ 0x43
  8183  000243                     	ds	1
  8184  000244                     ?___flsub:
  8185                           	opt callstack 0
  8186  000244                     ___flsub@b:
  8187                           	opt callstack 0
  8188                           
  8189                           ; 4 bytes @ 0x44
  8190  000244                     	ds	4
  8191  000248                     ___flsub@a:
  8192                           	opt callstack 0
  8193                           
  8194                           ; 4 bytes @ 0x48
  8195  000248                     	ds	4
  8196  00024C                     ?__doprnt:
  8197                           	opt callstack 0
  8198  00024C                     __doprnt@pb:
  8199                           	opt callstack 0
  8200                           
  8201                           ; 2 bytes @ 0x4C
  8202  00024C                     	ds	2
  8203  00024E                     __doprnt@f:
  8204                           	opt callstack 0
  8205                           
  8206                           ; 2 bytes @ 0x4E
  8207  00024E                     	ds	2
  8208  000250                     __doprnt@ap:
  8209                           	opt callstack 0
  8210                           
  8211                           ; 2 bytes @ 0x50
  8212  000250                     	ds	2
  8213  000252                     ??__doprnt:
  8214                           
  8215                           ; 1 bytes @ 0x52
  8216  000252                     	ds	4
  8217  000256                     __doprnt$5932:
  8218                           	opt callstack 0
  8219                           
  8220                           ; 4 bytes @ 0x56
  8221  000256                     	ds	4
  8222  00025A                     __doprnt@idx:
  8223                           	opt callstack 0
  8224                           
  8225                           ; 1 bytes @ 0x5A
  8226  00025A                     	ds	1
  8227  00025B                     __doprnt$4883:
  8228                           	opt callstack 0
  8229                           
  8230                           ; 2 bytes @ 0x5B
  8231  00025B                     	ds	2
  8232  00025D                     __doprnt$4884:
  8233                           	opt callstack 0
  8234                           
  8235                           ; 2 bytes @ 0x5D
  8236  00025D                     	ds	2
  8237  00025F                     __doprnt$4885:
  8238                           	opt callstack 0
  8239                           
  8240                           ; 2 bytes @ 0x5F
  8241  00025F                     	ds	2
  8242  000261                     __doprnt$4886:
  8243                           	opt callstack 0
  8244                           
  8245                           ; 2 bytes @ 0x61
  8246  000261                     	ds	2
  8247  000263                     __doprnt$4887:
  8248                           	opt callstack 0
  8249                           
  8250                           ; 2 bytes @ 0x63
  8251  000263                     	ds	2
  8252  000265                     __doprnt$4888:
  8253                           	opt callstack 0
  8254                           
  8255                           ; 2 bytes @ 0x65
  8256  000265                     	ds	2
  8257  000267                     __doprnt$4889:
  8258                           	opt callstack 0
  8259                           
  8260                           ; 2 bytes @ 0x67
  8261  000267                     	ds	2
  8262  000269                     __doprnt$4890:
  8263                           	opt callstack 0
  8264                           
  8265                           ; 2 bytes @ 0x69
  8266  000269                     	ds	2
  8267  00026B                     __doprnt@cp:
  8268                           	opt callstack 0
  8269                           
  8270                           ; 2 bytes @ 0x6B
  8271  00026B                     	ds	2
  8272  00026D                     __doprnt@len:
  8273                           	opt callstack 0
  8274                           
  8275                           ; 2 bytes @ 0x6D
  8276  00026D                     	ds	2
  8277  00026F                     __doprnt@eexp:
  8278                           	opt callstack 0
  8279                           
  8280                           ; 2 bytes @ 0x6F
  8281  00026F                     	ds	2
  8282  000271                     __doprnt@tmpval:
  8283                           	opt callstack 0
  8284                           
  8285                           ; 4 bytes @ 0x71
  8286  000271                     	ds	4
  8287  000275                     __doprnt@fval:
  8288                           	opt callstack 0
  8289                           
  8290                           ; 4 bytes @ 0x75
  8291  000275                     	ds	4
  8292  000279                     __doprnt@val:
  8293                           	opt callstack 0
  8294                           
  8295                           ; 4 bytes @ 0x79
  8296  000279                     	ds	4
  8297  00027D                     __doprnt@width:
  8298                           	opt callstack 0
  8299                           
  8300                           ; 2 bytes @ 0x7D
  8301  00027D                     	ds	2
  8302  00027F                     __doprnt@prec:
  8303                           	opt callstack 0
  8304                           
  8305                           ; 2 bytes @ 0x7F
  8306  00027F                     	ds	2
  8307  000281                     __doprnt@flag:
  8308                           	opt callstack 0
  8309                           
  8310                           ; 2 bytes @ 0x81
  8311  000281                     	ds	2
  8312  000283                     __doprnt@c:
  8313                           	opt callstack 0
  8314                           
  8315                           ; 1 bytes @ 0x83
  8316  000283                     	ds	1
  8317  000284                     ?_sprintf:
  8318                           	opt callstack 0
  8319  000284                     sprintf@wh:
  8320                           	opt callstack 0
  8321                           
  8322                           ; 2 bytes @ 0x84
  8323  000284                     	ds	2
  8324  000286                     sprintf@f:
  8325                           	opt callstack 0
  8326                           
  8327                           ; 2 bytes @ 0x86
  8328  000286                     	ds	10
  8329  000290                     sprintf@ap:
  8330                           	opt callstack 0
  8331                           
  8332                           ; 2 bytes @ 0x90
  8333  000290                     	ds	2
  8334  000292                     sprintf@pb:
  8335                           	opt callstack 0
  8336                           
  8337                           ; 5 bytes @ 0x92
  8338  000292                     	ds	5
  8339  000297                     ??_OLED_updateHandler:
  8340  000297                     ?_getStringSecondsAsTime:
  8341                           	opt callstack 0
  8342  000297                     getStringSecondsAsTime@input_seconds:
  8343                           	opt callstack 0
  8344                           
  8345                           ; 4 bytes @ 0x97
  8346  000297                     	ds	4
  8347  00029B                     ??_getStringSecondsAsTime:
  8348                           
  8349                           ; 1 bytes @ 0x9B
  8350  00029B                     	ds	4
  8351  00029F                     ?_printf:
  8352                           	opt callstack 0
  8353  00029F                     printf@f:
  8354                           	opt callstack 0
  8355                           
  8356                           ; 2 bytes @ 0x9F
  8357  00029F                     	ds	8
  8358  0002A7                     printf@ap:
  8359                           	opt callstack 0
  8360                           
  8361                           ; 2 bytes @ 0xA7
  8362  0002A7                     	ds	2
  8363  0002A9                     printf@pb:
  8364                           	opt callstack 0
  8365                           
  8366                           ; 5 bytes @ 0xA9
  8367  0002A9                     	ds	5
  8368  0002AE                     
  8369                           ; 1 bytes @ 0xAE
  8370                           
  8371                           	psect	cstackBANK1
  8372  000100                     __pcstackBANK1:
  8373                           	opt callstack 0
  8374  000100                     ??_I2C2_Stop:
  8375  000100                     ?i1___xxtofl:
  8376                           	opt callstack 0
  8377  000100                     ADCC_StartConversion@channel:
  8378                           	opt callstack 0
  8379  000100                     i1TMR3_WriteTimer@timerVal:
  8380                           	opt callstack 0
  8381  000100                     i1___xxtofl@val:
  8382                           	opt callstack 0
  8383                           
  8384                           ; 4 bytes @ 0x0
  8385  000100                     	ds	1
  8386  000101                     
  8387                           ; 1 bytes @ 0x1
  8388  000101                     	ds	1
  8389  000102                     I2C2_Stop@completion_code:
  8390                           	opt callstack 0
  8391                           
  8392                           ; 1 bytes @ 0x2
  8393  000102                     	ds	1
  8394  000103                     ??_I2C2_ISR:
  8395                           
  8396                           ; 1 bytes @ 0x3
  8397  000103                     	ds	1
  8398  000104                     ??i1___xxtofl:
  8399                           
  8400                           ; 1 bytes @ 0x4
  8401  000104                     	ds	4
  8402  000108                     i1___xxtofl@sign:
  8403                           	opt callstack 0
  8404                           
  8405                           ; 1 bytes @ 0x8
  8406  000108                     	ds	1
  8407  000109                     i1___xxtofl@exp:
  8408                           	opt callstack 0
  8409                           
  8410                           ; 1 bytes @ 0x9
  8411  000109                     	ds	1
  8412  00010A                     i1___xxtofl@arg:
  8413                           	opt callstack 0
  8414                           
  8415                           ; 4 bytes @ 0xA
  8416  00010A                     	ds	4
  8417  00010E                     ?i1___fladd:
  8418                           	opt callstack 0
  8419  00010E                     i1___fladd@b:
  8420                           	opt callstack 0
  8421                           
  8422                           ; 4 bytes @ 0xE
  8423  00010E                     	ds	4
  8424  000112                     i1___fladd@a:
  8425                           	opt callstack 0
  8426                           
  8427                           ; 4 bytes @ 0x12
  8428  000112                     	ds	4
  8429  000116                     ??i1___fladd:
  8430                           
  8431                           ; 1 bytes @ 0x16
  8432  000116                     	ds	4
  8433  00011A                     i1___fladd@signs:
  8434                           	opt callstack 0
  8435                           
  8436                           ; 1 bytes @ 0x1A
  8437  00011A                     	ds	1
  8438  00011B                     i1___fladd@aexp:
  8439                           	opt callstack 0
  8440                           
  8441                           ; 1 bytes @ 0x1B
  8442  00011B                     	ds	1
  8443  00011C                     i1___fladd@bexp:
  8444                           	opt callstack 0
  8445                           
  8446                           ; 1 bytes @ 0x1C
  8447  00011C                     	ds	1
  8448  00011D                     i1___fladd@grs:
  8449                           	opt callstack 0
  8450                           
  8451                           ; 1 bytes @ 0x1D
  8452  00011D                     	ds	1
  8453  00011E                     ?i1___fldiv:
  8454                           	opt callstack 0
  8455  00011E                     i1___fldiv@b:
  8456                           	opt callstack 0
  8457                           
  8458                           ; 4 bytes @ 0x1E
  8459  00011E                     	ds	4
  8460  000122                     i1___fldiv@a:
  8461                           	opt callstack 0
  8462                           
  8463                           ; 4 bytes @ 0x22
  8464  000122                     	ds	4
  8465  000126                     ??i1___fldiv:
  8466                           
  8467                           ; 1 bytes @ 0x26
  8468  000126                     	ds	4
  8469  00012A                     i1___fldiv@rem:
  8470                           	opt callstack 0
  8471                           
  8472                           ; 4 bytes @ 0x2A
  8473  00012A                     	ds	4
  8474  00012E                     i1___fldiv@sign:
  8475                           	opt callstack 0
  8476                           
  8477                           ; 1 bytes @ 0x2E
  8478  00012E                     	ds	1
  8479  00012F                     i1___fldiv@new_exp:
  8480                           	opt callstack 0
  8481                           
  8482                           ; 2 bytes @ 0x2F
  8483  00012F                     	ds	2
  8484  000131                     i1___fldiv@grs:
  8485                           	opt callstack 0
  8486                           
  8487                           ; 4 bytes @ 0x31
  8488  000131                     	ds	4
  8489  000135                     i1___fldiv@bexp:
  8490                           	opt callstack 0
  8491                           
  8492                           ; 1 bytes @ 0x35
  8493  000135                     	ds	1
  8494  000136                     i1___fldiv@aexp:
  8495                           	opt callstack 0
  8496                           
  8497                           ; 1 bytes @ 0x36
  8498  000136                     	ds	1
  8499  000137                     ?i1___flmul:
  8500                           	opt callstack 0
  8501  000137                     i1___flmul@b:
  8502                           	opt callstack 0
  8503                           
  8504                           ; 4 bytes @ 0x37
  8505  000137                     	ds	4
  8506  00013B                     i1___flmul@a:
  8507                           	opt callstack 0
  8508                           
  8509                           ; 4 bytes @ 0x3B
  8510  00013B                     	ds	4
  8511  00013F                     ??i1___flmul:
  8512                           
  8513                           ; 1 bytes @ 0x3F
  8514  00013F                     	ds	4
  8515  000143                     i1___flmul@sign:
  8516                           	opt callstack 0
  8517                           
  8518                           ; 1 bytes @ 0x43
  8519  000143                     	ds	1
  8520  000144                     i1___flmul@grs:
  8521                           	opt callstack 0
  8522                           
  8523                           ; 4 bytes @ 0x44
  8524  000144                     	ds	4
  8525  000148                     i1___flmul@aexp:
  8526                           	opt callstack 0
  8527                           
  8528                           ; 1 bytes @ 0x48
  8529  000148                     	ds	1
  8530  000149                     i1___flmul@bexp:
  8531                           	opt callstack 0
  8532                           
  8533                           ; 1 bytes @ 0x49
  8534  000149                     	ds	1
  8535  00014A                     i1___flmul@prod:
  8536                           	opt callstack 0
  8537                           
  8538                           ; 4 bytes @ 0x4A
  8539  00014A                     	ds	4
  8540  00014E                     i1___flmul@temp:
  8541                           	opt callstack 0
  8542                           
  8543                           ; 2 bytes @ 0x4E
  8544  00014E                     	ds	2
  8545  000150                     freqMeasConvert@qi_period:
  8546                           	opt callstack 0
  8547                           
  8548                           ; 4 bytes @ 0x50
  8549  000150                     	ds	4
  8550  000154                     CCP2_CallBack@capturedValue:
  8551                           	opt callstack 0
  8552                           
  8553                           ; 2 bytes @ 0x54
  8554  000154                     	ds	2
  8555  000156                     CCP2_CaptureISR@module:
  8556                           	opt callstack 0
  8557                           
  8558                           ; 2 bytes @ 0x56
  8559  000156                     	ds	2
  8560  000158                     ??_INTERRUPT_InterruptManagerLow:
  8561                           
  8562                           ; 1 bytes @ 0x58
  8563  000158                     	ds	9
  8564                           
  8565                           	psect	cstackBANK0
  8566  000060                     __pcstackBANK0:
  8567                           	opt callstack 0
  8568  000060                     i2___fladd@signs:
  8569                           	opt callstack 0
  8570                           
  8571                           ; 1 bytes @ 0x0
  8572  000060                     	ds	1
  8573  000061                     i2___fladd@aexp:
  8574                           	opt callstack 0
  8575                           
  8576                           ; 1 bytes @ 0x1
  8577  000061                     	ds	1
  8578  000062                     i2___fladd@bexp:
  8579                           	opt callstack 0
  8580                           
  8581                           ; 1 bytes @ 0x2
  8582  000062                     	ds	1
  8583  000063                     i2___fladd@grs:
  8584                           	opt callstack 0
  8585                           
  8586                           ; 1 bytes @ 0x3
  8587  000063                     	ds	1
  8588  000064                     ?i2___flsub:
  8589                           	opt callstack 0
  8590  000064                     i2___flsub@b:
  8591                           	opt callstack 0
  8592                           
  8593                           ; 4 bytes @ 0x4
  8594  000064                     	ds	4
  8595  000068                     i2___flsub@a:
  8596                           	opt callstack 0
  8597                           
  8598                           ; 4 bytes @ 0x8
  8599  000068                     	ds	4
  8600  00006C                     ?i2__doprnt:
  8601                           	opt callstack 0
  8602  00006C                     i2__doprnt@pb:
  8603                           	opt callstack 0
  8604  00006C                     _ADC_PostProcessingHandler$6312:
  8605                           	opt callstack 0
  8606                           
  8607                           ; 4 bytes @ 0xC
  8608  00006C                     	ds	2
  8609  00006E                     i2__doprnt@f:
  8610                           	opt callstack 0
  8611                           
  8612                           ; 2 bytes @ 0xE
  8613  00006E                     	ds	2
  8614  000070                     i2__doprnt@ap:
  8615                           	opt callstack 0
  8616  000070                     _ADC_PostProcessingHandler$6313:
  8617                           	opt callstack 0
  8618                           
  8619                           ; 4 bytes @ 0x10
  8620  000070                     	ds	2
  8621  000072                     ??i2__doprnt:
  8622                           
  8623                           ; 1 bytes @ 0x12
  8624  000072                     	ds	2
  8625  000074                     _ADC_PostProcessingHandler$6314:
  8626                           	opt callstack 0
  8627                           
  8628                           ; 4 bytes @ 0x14
  8629  000074                     	ds	2
  8630  000076                     i2__doprnt$6318:
  8631                           	opt callstack 0
  8632                           
  8633                           ; 4 bytes @ 0x16
  8634  000076                     	ds	2
  8635  000078                     ADC_PostProcessingHandler@current_adc_channel:
  8636                           	opt callstack 0
  8637                           
  8638                           ; 1 bytes @ 0x18
  8639  000078                     	ds	1
  8640  000079                     ADC_PostProcessingHandler@i:
  8641                           	opt callstack 0
  8642                           
  8643                           ; 1 bytes @ 0x19
  8644  000079                     	ds	1
  8645  00007A                     ADC_PostProcessingHandler@i_3361:
  8646                           	opt callstack 0
  8647  00007A                     i2__doprnt@idx:
  8648                           	opt callstack 0
  8649                           
  8650                           ; 1 bytes @ 0x1A
  8651  00007A                     	ds	1
  8652  00007B                     i2__doprnt$4883:
  8653                           	opt callstack 0
  8654  00007B                     _ADC_PostProcessingHandler$6310:
  8655                           	opt callstack 0
  8656                           
  8657                           ; 4 bytes @ 0x1B
  8658  00007B                     	ds	2
  8659  00007D                     i2__doprnt$4884:
  8660                           	opt callstack 0
  8661                           
  8662                           ; 2 bytes @ 0x1D
  8663  00007D                     	ds	2
  8664  00007F                     i2__doprnt$4885:
  8665                           	opt callstack 0
  8666  00007F                     _ADC_PostProcessingHandler$6311:
  8667                           	opt callstack 0
  8668                           
  8669                           ; 4 bytes @ 0x1F
  8670  00007F                     	ds	2
  8671  000081                     i2__doprnt$4886:
  8672                           	opt callstack 0
  8673                           
  8674                           ; 2 bytes @ 0x21
  8675  000081                     	ds	2
  8676  000083                     i2__doprnt$4887:
  8677                           	opt callstack 0
  8678                           
  8679                           ; 2 bytes @ 0x23
  8680  000083                     	ds	2
  8681  000085                     i2__doprnt$4888:
  8682                           	opt callstack 0
  8683                           
  8684                           ; 2 bytes @ 0x25
  8685  000085                     	ds	2
  8686  000087                     i2__doprnt$4889:
  8687                           	opt callstack 0
  8688                           
  8689                           ; 2 bytes @ 0x27
  8690  000087                     	ds	2
  8691  000089                     i2__doprnt$4890:
  8692                           	opt callstack 0
  8693                           
  8694                           ; 2 bytes @ 0x29
  8695  000089                     	ds	2
  8696  00008B                     i2__doprnt@cp:
  8697                           	opt callstack 0
  8698                           
  8699                           ; 2 bytes @ 0x2B
  8700  00008B                     	ds	2
  8701  00008D                     i2__doprnt@len:
  8702                           	opt callstack 0
  8703                           
  8704                           ; 2 bytes @ 0x2D
  8705  00008D                     	ds	2
  8706  00008F                     i2__doprnt@eexp:
  8707                           	opt callstack 0
  8708                           
  8709                           ; 2 bytes @ 0x2F
  8710  00008F                     	ds	2
  8711  000091                     i2__doprnt@tmpval:
  8712                           	opt callstack 0
  8713                           
  8714                           ; 4 bytes @ 0x31
  8715  000091                     	ds	4
  8716  000095                     i2__doprnt@fval:
  8717                           	opt callstack 0
  8718                           
  8719                           ; 4 bytes @ 0x35
  8720  000095                     	ds	4
  8721  000099                     i2__doprnt@val:
  8722                           	opt callstack 0
  8723                           
  8724                           ; 4 bytes @ 0x39
  8725  000099                     	ds	4
  8726  00009D                     i2__doprnt@width:
  8727                           	opt callstack 0
  8728                           
  8729                           ; 2 bytes @ 0x3D
  8730  00009D                     	ds	2
  8731  00009F                     i2__doprnt@prec:
  8732                           	opt callstack 0
  8733                           
  8734                           ; 2 bytes @ 0x3F
  8735  00009F                     	ds	2
  8736  0000A1                     i2__doprnt@flag:
  8737                           	opt callstack 0
  8738                           
  8739                           ; 2 bytes @ 0x41
  8740  0000A1                     	ds	2
  8741  0000A3                     i2__doprnt@c:
  8742                           	opt callstack 0
  8743                           
  8744                           ; 1 bytes @ 0x43
  8745  0000A3                     	ds	1
  8746  0000A4                     ?i2_printf:
  8747                           	opt callstack 0
  8748  0000A4                     i2printf@f:
  8749                           	opt callstack 0
  8750                           
  8751                           ; 2 bytes @ 0x44
  8752  0000A4                     	ds	2
  8753  0000A6                     i2printf@ap:
  8754                           	opt callstack 0
  8755                           
  8756                           ; 2 bytes @ 0x46
  8757  0000A6                     	ds	2
  8758  0000A8                     i2printf@pb:
  8759                           	opt callstack 0
  8760                           
  8761                           ; 5 bytes @ 0x48
  8762  0000A8                     	ds	5
  8763  0000AD                     ??_INTERRUPT_InterruptManagerHigh:
  8764                           
  8765                           ; 1 bytes @ 0x4D
  8766  0000AD                     	ds	12
  8767                           
  8768                           	psect	cstackCOMRAM
  8769  000001                     __pcstackCOMRAM:
  8770                           	opt callstack 0
  8771  000001                     ??i2_isdigit:
  8772  000001                     ?_ADCC_GetConversionResult:
  8773                           	opt callstack 0
  8774  000001                     ?_ADCC_GetFilterValue:
  8775                           	opt callstack 0
  8776  000001                     ?i2___wmul:
  8777                           	opt callstack 0
  8778  000001                     ?i2___awmod:
  8779                           	opt callstack 0
  8780  000001                     ?i2___lwmod:
  8781                           	opt callstack 0
  8782  000001                     ?i2___lldiv:
  8783                           	opt callstack 0
  8784  000001                     ?i2__div_to_l_:
  8785                           	opt callstack 0
  8786  000001                     ?i2___flneg:
  8787                           	opt callstack 0
  8788  000001                     ?i2__tdiv_to_l_:
  8789                           	opt callstack 0
  8790  000001                     i2EUSART2_Write@txData:
  8791                           	opt callstack 0
  8792  000001                     i2TMR3_WriteTimer@timerVal:
  8793                           	opt callstack 0
  8794  000001                     i2TMR1_WriteTimer@timerVal:
  8795                           	opt callstack 0
  8796  000001                     i2___wmul@multiplier:
  8797                           	opt callstack 0
  8798  000001                     i2___awmod@dividend:
  8799                           	opt callstack 0
  8800  000001                     i2___lwmod@dividend:
  8801                           	opt callstack 0
  8802  000001                     i2___lldiv@dividend:
  8803                           	opt callstack 0
  8804  000001                     i2__div_to_l_@f1:
  8805                           	opt callstack 0
  8806  000001                     i2___fleq@ff1:
  8807                           	opt callstack 0
  8808  000001                     i2___flge@ff1:
  8809                           	opt callstack 0
  8810  000001                     i2___flneg@f1:
  8811                           	opt callstack 0
  8812  000001                     i2__tdiv_to_l_@f1:
  8813                           	opt callstack 0
  8814                           
  8815                           ; 4 bytes @ 0x0
  8816  000001                     	ds	1
  8817  000002                     i2putch@txData:
  8818                           	opt callstack 0
  8819  000002                     i2_isdigit$5355:
  8820                           	opt callstack 0
  8821                           
  8822                           ; 1 bytes @ 0x1
  8823  000002                     	ds	1
  8824  000003                     ??_ADCC_GetConversionResult:
  8825  000003                     ??_ADCC_GetFilterValue:
  8826  000003                     i2isdigit@c:
  8827                           	opt callstack 0
  8828  000003                     i2___wmul@multiplicand:
  8829                           	opt callstack 0
  8830  000003                     i2___awmod@divisor:
  8831                           	opt callstack 0
  8832  000003                     i2___lwmod@divisor:
  8833                           	opt callstack 0
  8834                           
  8835                           ; 2 bytes @ 0x2
  8836  000003                     	ds	2
  8837  000005                     ?_fabs:
  8838                           	opt callstack 0
  8839  000005                     ?i2___xxtofl:
  8840                           	opt callstack 0
  8841  000005                     i2___awmod@counter:
  8842                           	opt callstack 0
  8843  000005                     i2___lwmod@counter:
  8844                           	opt callstack 0
  8845  000005                     i2___wmul@product:
  8846                           	opt callstack 0
  8847  000005                     fabs@d:
  8848                           	opt callstack 0
  8849  000005                     i2___lldiv@divisor:
  8850                           	opt callstack 0
  8851  000005                     i2__div_to_l_@f2:
  8852                           	opt callstack 0
  8853  000005                     i2___fleq@ff2:
  8854                           	opt callstack 0
  8855  000005                     i2___flge@ff2:
  8856                           	opt callstack 0
  8857  000005                     i2__tdiv_to_l_@f2:
  8858                           	opt callstack 0
  8859  000005                     i2___xxtofl@val:
  8860                           	opt callstack 0
  8861                           
  8862                           ; 4 bytes @ 0x4
  8863  000005                     	ds	1
  8864  000006                     ?i2___lwdiv:
  8865                           	opt callstack 0
  8866  000006                     i2___awmod@sign:
  8867                           	opt callstack 0
  8868  000006                     i2___lwdiv@dividend:
  8869                           	opt callstack 0
  8870                           
  8871                           ; 2 bytes @ 0x5
  8872  000006                     	ds	1
  8873  000007                     ?i2___awdiv:
  8874                           	opt callstack 0
  8875  000007                     i2___awdiv@dividend:
  8876                           	opt callstack 0
  8877                           
  8878                           ; 2 bytes @ 0x6
  8879  000007                     	ds	1
  8880  000008                     i2___lwdiv@divisor:
  8881                           	opt callstack 0
  8882                           
  8883                           ; 2 bytes @ 0x7
  8884  000008                     	ds	1
  8885  000009                     ??i2___fleq:
  8886  000009                     ??i2___flge:
  8887  000009                     ??i2__tdiv_to_l_:
  8888  000009                     ??i2___xxtofl:
  8889  000009                     i2___awdiv@divisor:
  8890                           	opt callstack 0
  8891  000009                     i2___lldiv@quotient:
  8892                           	opt callstack 0
  8893  000009                     i2__div_to_l_@quot:
  8894                           	opt callstack 0
  8895                           
  8896                           ; 4 bytes @ 0x8
  8897  000009                     	ds	1
  8898  00000A                     i2___lwdiv@counter:
  8899                           	opt callstack 0
  8900                           
  8901                           ; 1 bytes @ 0x9
  8902  00000A                     	ds	1
  8903  00000B                     i2___awdiv@counter:
  8904                           	opt callstack 0
  8905  00000B                     i2___lwdiv@quotient:
  8906                           	opt callstack 0
  8907                           
  8908                           ; 2 bytes @ 0xA
  8909  00000B                     	ds	1
  8910  00000C                     i2___awdiv@sign:
  8911                           	opt callstack 0
  8912  00000C                     i2__tdiv_to_l_@quot:
  8913                           	opt callstack 0
  8914                           
  8915                           ; 4 bytes @ 0xB
  8916  00000C                     	ds	1
  8917  00000D                     i2___lldiv@counter:
  8918                           	opt callstack 0
  8919  00000D                     i2__div_to_l_@cntr:
  8920                           	opt callstack 0
  8921  00000D                     i2___xxtofl@sign:
  8922                           	opt callstack 0
  8923  00000D                     i2___awdiv@quotient:
  8924                           	opt callstack 0
  8925                           
  8926                           ; 2 bytes @ 0xC
  8927  00000D                     	ds	1
  8928  00000E                     ?i2___llmod:
  8929                           	opt callstack 0
  8930  00000E                     i2__div_to_l_@exp1:
  8931                           	opt callstack 0
  8932  00000E                     i2___xxtofl@exp:
  8933                           	opt callstack 0
  8934  00000E                     i2___llmod@dividend:
  8935                           	opt callstack 0
  8936                           
  8937                           ; 4 bytes @ 0xD
  8938  00000E                     	ds	1
  8939  00000F                     i2___xxtofl@arg:
  8940                           	opt callstack 0
  8941                           
  8942                           ; 4 bytes @ 0xE
  8943  00000F                     	ds	1
  8944  000010                     i2__tdiv_to_l_@cntr:
  8945                           	opt callstack 0
  8946                           
  8947                           ; 1 bytes @ 0xF
  8948  000010                     	ds	1
  8949  000011                     i2__tdiv_to_l_@exp1:
  8950                           	opt callstack 0
  8951                           
  8952                           ; 1 bytes @ 0x10
  8953  000011                     	ds	1
  8954  000012                     i2___llmod@divisor:
  8955                           	opt callstack 0
  8956                           
  8957                           ; 4 bytes @ 0x11
  8958  000012                     	ds	1
  8959  000013                     ?i2___fldiv:
  8960                           	opt callstack 0
  8961  000013                     i2___fldiv@b:
  8962                           	opt callstack 0
  8963                           
  8964                           ; 4 bytes @ 0x12
  8965  000013                     	ds	3
  8966  000016                     i2___llmod@counter:
  8967                           	opt callstack 0
  8968                           
  8969                           ; 1 bytes @ 0x15
  8970  000016                     	ds	1
  8971  000017                     ??_heartbeatTimerHandler:
  8972  000017                     i2___fldiv@a:
  8973                           	opt callstack 0
  8974                           
  8975                           ; 4 bytes @ 0x16
  8976  000017                     	ds	1
  8977  000018                     
  8978                           ; 1 bytes @ 0x17
  8979  000018                     	ds	3
  8980  00001B                     ??i2___fldiv:
  8981                           
  8982                           ; 1 bytes @ 0x1A
  8983  00001B                     	ds	4
  8984  00001F                     i2___fldiv@rem:
  8985                           	opt callstack 0
  8986                           
  8987                           ; 4 bytes @ 0x1E
  8988  00001F                     	ds	4
  8989  000023                     i2___fldiv@sign:
  8990                           	opt callstack 0
  8991                           
  8992                           ; 1 bytes @ 0x22
  8993  000023                     	ds	1
  8994  000024                     i2___fldiv@new_exp:
  8995                           	opt callstack 0
  8996                           
  8997                           ; 2 bytes @ 0x23
  8998  000024                     	ds	2
  8999  000026                     i2___fldiv@grs:
  9000                           	opt callstack 0
  9001                           
  9002                           ; 4 bytes @ 0x25
  9003  000026                     	ds	4
  9004  00002A                     i2___fldiv@bexp:
  9005                           	opt callstack 0
  9006                           
  9007                           ; 1 bytes @ 0x29
  9008  00002A                     	ds	1
  9009  00002B                     i2___fldiv@aexp:
  9010                           	opt callstack 0
  9011                           
  9012                           ; 1 bytes @ 0x2A
  9013  00002B                     	ds	1
  9014  00002C                     ?i2___flmul:
  9015                           	opt callstack 0
  9016  00002C                     i2___flmul@b:
  9017                           	opt callstack 0
  9018                           
  9019                           ; 4 bytes @ 0x2B
  9020  00002C                     	ds	4
  9021  000030                     i2___flmul@a:
  9022                           	opt callstack 0
  9023                           
  9024                           ; 4 bytes @ 0x2F
  9025  000030                     	ds	4
  9026  000034                     ??i2___flmul:
  9027                           
  9028                           ; 1 bytes @ 0x33
  9029  000034                     	ds	4
  9030  000038                     i2___flmul@sign:
  9031                           	opt callstack 0
  9032                           
  9033                           ; 1 bytes @ 0x37
  9034  000038                     	ds	1
  9035  000039                     i2___flmul@aexp:
  9036                           	opt callstack 0
  9037                           
  9038                           ; 1 bytes @ 0x38
  9039  000039                     	ds	1
  9040  00003A                     i2___flmul@grs:
  9041                           	opt callstack 0
  9042                           
  9043                           ; 4 bytes @ 0x39
  9044  00003A                     	ds	4
  9045  00003E                     i2___flmul@bexp:
  9046                           	opt callstack 0
  9047                           
  9048                           ; 1 bytes @ 0x3D
  9049  00003E                     	ds	1
  9050  00003F                     i2___flmul@prod:
  9051                           	opt callstack 0
  9052                           
  9053                           ; 4 bytes @ 0x3E
  9054  00003F                     	ds	4
  9055  000043                     i2___flmul@temp:
  9056                           	opt callstack 0
  9057                           
  9058                           ; 2 bytes @ 0x42
  9059  000043                     	ds	2
  9060  000045                     ?i2_fround:
  9061                           	opt callstack 0
  9062  000045                     ?i2_scale:
  9063                           	opt callstack 0
  9064                           
  9065                           ; 4 bytes @ 0x44
  9066  000045                     	ds	4
  9067  000049                     i2_fround$6316:
  9068                           	opt callstack 0
  9069  000049                     i2_scale$6317:
  9070                           	opt callstack 0
  9071                           
  9072                           ; 4 bytes @ 0x48
  9073  000049                     	ds	4
  9074  00004D                     i2scale@scl:
  9075                           	opt callstack 0
  9076  00004D                     i2_fround$6315:
  9077                           	opt callstack 0
  9078                           
  9079                           ; 4 bytes @ 0x4C
  9080  00004D                     	ds	1
  9081  00004E                     ?i2___fltol:
  9082                           	opt callstack 0
  9083  00004E                     i2___fltol@f1:
  9084                           	opt callstack 0
  9085                           
  9086                           ; 4 bytes @ 0x4D
  9087  00004E                     	ds	3
  9088  000051                     i2fround@prec:
  9089                           	opt callstack 0
  9090                           
  9091                           ; 1 bytes @ 0x50
  9092  000051                     	ds	1
  9093  000052                     ??i2___fltol:
  9094  000052                     ?i2___fladd:
  9095                           	opt callstack 0
  9096  000052                     i2___fladd@b:
  9097                           	opt callstack 0
  9098                           
  9099                           ; 4 bytes @ 0x51
  9100  000052                     	ds	4
  9101  000056                     i2___fltol@sign1:
  9102                           	opt callstack 0
  9103  000056                     i2___fladd@a:
  9104                           	opt callstack 0
  9105                           
  9106                           ; 4 bytes @ 0x55
  9107  000056                     	ds	1
  9108  000057                     i2___fltol@exp1:
  9109                           	opt callstack 0
  9110                           
  9111                           ; 1 bytes @ 0x56
  9112  000057                     	ds	3
  9113  00005A                     ??i2___fladd:
  9114                           
  9115                           ; 1 bytes @ 0x59
  9116  00005A                     	ds	4
  9117  00005E                     
  9118                           ; 1 bytes @ 0x5D
  9119 ;;
  9120 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9121 ;;
  9122 ;; *************** function _main *****************
  9123 ;; Defined at:
  9124 ;;		line 76 in file "main.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;Total ram usage:        2 bytes
  9143 ;; Hardware stack levels required when called:   19
  9144 ;; This function calls:
  9145 ;;		_ADCC_SetADTIInterruptHandler
  9146 ;;		_INT1_SetInterruptHandler
  9147 ;;		_INT2_SetInterruptHandler
  9148 ;;		_IOCBF2_SetInterruptHandler
  9149 ;;		_IOCBF3_SetInterruptHandler
  9150 ;;		_LM73AcquisitionHandler
  9151 ;;		_LM73TempSensorInitialize
  9152 ;;		_OLED_Clear
  9153 ;;		_OLED_Init
  9154 ;;		_OLED_updateHandler
  9155 ;;		_SYSTEM_Initialize
  9156 ;;		_TMR0_SetInterruptHandler
  9157 ;;		_TMR1_Reload
  9158 ;;		_TMR1_SetInterruptHandler
  9159 ;;		_TMR1_StopTimer
  9160 ;;		_TMR2_SetInterruptHandler
  9161 ;;		_TMR3_Reload
  9162 ;;		_TMR3_SetInterruptHandler
  9163 ;;		_TMR3_StopTimer
  9164 ;;		_TMR5_StopTimer
  9165 ;;		_TMR5_WriteTimer
  9166 ;;		_freqMeasStartCaptures
  9167 ;;		_getCauseOfReset
  9168 ;;		_getCauseOfResetString
  9169 ;;		_printf
  9170 ;;		_terminalClearScreen
  9171 ;;		_terminalSetCursorHome
  9172 ;;		_terminalTextAttributes
  9173 ;;		_terminalTextAttributesReset
  9174 ;;		_terminal_ringBufferPull
  9175 ;;		_updateErrorLEDs
  9176 ;; This function is called by:
  9177 ;;		Startup code after reset
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text0
  9182  01841C                     __ptext0:
  9183                           	opt callstack 0
  9184  01841C                     _main:
  9185                           	opt callstack 12
  9186                           
  9187                           ;main.c: 80: reset_cause = getCauseOfReset();
  9188                           
  9189                           ;incstack = 0
  9190  01841C  ECAC  F0D7         	call	_getCauseOfReset	;wreg free
  9191  018420  0102               	movlb	2	; () banked
  9192  018422  6FFE               	movwf	_reset_cause& (0+255),b
  9193                           
  9194                           ; BSR set to: 2
  9195                           ;main.c: 83: _delay((unsigned long)((250)*(64000000/4000.0)));
  9196  018424  0E15               	movlw	21
  9197  018426  0104               	movlb	4	; () banked
  9198  018428  6FD9               	movwf	(??_main+1)& (0+255),b
  9199  01842A  0E4B               	movlw	75
  9200  01842C  6FD8               	movwf	??_main& (0+255),b
  9201  01842E  0EBE               	movlw	190
  9202  018430                     u28767:
  9203  018430  2EE8               	decfsz	wreg,f,c
  9204  018432  D7FE               	bra	u28767
  9205  018434  2FD8               	decfsz	??_main& (0+255),f,b
  9206  018436  D7FC               	bra	u28767
  9207  018438  2FD9               	decfsz	(??_main+1)& (0+255),f,b
  9208  01843A  D7FA               	bra	u28767
  9209  01843C  F000               	nop	
  9210                           
  9211                           ;main.c: 87: SYSTEM_Initialize();
  9212  01843E  EC49  F0DB         	call	_SYSTEM_Initialize	;wreg free
  9213                           
  9214                           ;main.c: 90: TMR0_SetInterruptHandler(heartbeatTimerHandler);
  9215  018442  0EEE               	movlw	low _heartbeatTimerHandler
  9216  018444  0102               	movlb	2	; () banked
  9217  018446  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9218  018448  0EA4               	movlw	high _heartbeatTimerHandler
  9219  01844A  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9220  01844C  0E01               	movlw	low (_heartbeatTimerHandler shr (0+16))
  9221  01844E  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9222  018450  EC29  F0E0         	call	_TMR0_SetInterruptHandler	;wreg free
  9223                           
  9224                           ;main.c: 93: TMR2_SetInterruptHandler(ADC_acquisitionTimerHandler);
  9225  018454  0EAA               	movlw	low _ADC_acquisitionTimerHandler
  9226  018456  0102               	movlb	2	; () banked
  9227  018458  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9228  01845A  0EBE               	movlw	high _ADC_acquisitionTimerHandler
  9229  01845C  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9230  01845E  0E01               	movlw	low (_ADC_acquisitionTimerHandler shr (0+16))
  9231  018460  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9232  018462  EC1B  F0E0         	call	_TMR2_SetInterruptHandler	;wreg free
  9233                           
  9234                           ;main.c: 96: ADCC_SetADTIInterruptHandler(ADC_PostProcessingHandler);
  9235  018466  0EB6               	movlw	low _ADC_PostProcessingHandler
  9236  018468  0102               	movlb	2	; () banked
  9237  01846A  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9238  01846C  0E3E               	movlw	high _ADC_PostProcessingHandler
  9239  01846E  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9240  018470  0E01               	movlw	low (_ADC_PostProcessingHandler shr (0+16))
  9241  018472  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9242  018474  EC5A  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9243                           
  9244                           ;main.c: 99: INT1_SetInterruptHandler(leftCapTouchHandler);
  9245  018478  0E52               	movlw	low _leftCapTouchHandler
  9246  01847A  0102               	movlb	2	; () banked
  9247  01847C  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9248  01847E  0EBF               	movlw	high _leftCapTouchHandler
  9249  018480  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9250  018482  0E01               	movlw	low (_leftCapTouchHandler shr (0+16))
  9251  018484  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9252  018486  EC45  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  9253                           
  9254                           ;main.c: 102: INT2_SetInterruptHandler(rightCapTouchHandler);
  9255  01848A  0E3C               	movlw	low _rightCapTouchHandler
  9256  01848C  0102               	movlb	2	; () banked
  9257  01848E  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  9258  018490  0EBF               	movlw	high _rightCapTouchHandler
  9259  018492  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9260  018494  0E01               	movlw	low (_rightCapTouchHandler shr (0+16))
  9261  018496  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9262  018498  EC3E  F0E0         	call	_INT2_SetInterruptHandler	;wreg free
  9263                           
  9264                           ;main.c: 105: IOCBF2_SetInterruptHandler(QIIdleIOCHandler);
  9265  01849C  0E90               	movlw	low _QIIdleIOCHandler
  9266  01849E  0102               	movlb	2	; () banked
  9267  0184A0  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9268  0184A2  0EBF               	movlw	high _QIIdleIOCHandler
  9269  0184A4  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9270  0184A6  0E01               	movlw	low (_QIIdleIOCHandler shr (0+16))
  9271  0184A8  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9272  0184AA  EC37  F0E0         	call	_IOCBF2_SetInterruptHandler	;wreg free
  9273                           
  9274                           ;main.c: 108: IOCBF3_SetInterruptHandler(QIChargeIOCHandler);
  9275  0184AE  0E3C               	movlw	low _QIChargeIOCHandler
  9276  0184B0  0102               	movlb	2	; () banked
  9277  0184B2  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  9278  0184B4  0EBE               	movlw	high _QIChargeIOCHandler
  9279  0184B6  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9280  0184B8  0E01               	movlw	low (_QIChargeIOCHandler shr (0+16))
  9281  0184BA  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9282  0184BC  EC30  F0E0         	call	_IOCBF3_SetInterruptHandler	;wreg free
  9283                           
  9284                           ;main.c: 111: TMR3_SetInterruptHandler(QIIdleChargedTimerHandler);
  9285  0184C0  0EA6               	movlw	low _QIIdleChargedTimerHandler
  9286  0184C2  0102               	movlb	2	; () banked
  9287  0184C4  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  9288  0184C6  0EBD               	movlw	high _QIIdleChargedTimerHandler
  9289  0184C8  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9290  0184CA  0E01               	movlw	low (_QIIdleChargedTimerHandler shr (0+16))
  9291  0184CC  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9292  0184CE  EC14  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  9293                           
  9294                           ;main.c: 112: TMR3_StopTimer();
  9295  0184D2  ECC0  F0E0         	call	_TMR3_StopTimer	;wreg free
  9296                           
  9297                           ;main.c: 113: TMR3_Reload();
  9298  0184D6  EC06  F0E0         	call	_TMR3_Reload	;wreg free
  9299                           
  9300                           ;main.c: 116: TMR1_SetInterruptHandler(QIErrorTimerHandler);
  9301  0184DA  0E26               	movlw	low _QIErrorTimerHandler
  9302  0184DC  0102               	movlb	2	; () banked
  9303  0184DE  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9304  0184E0  0EBF               	movlw	high _QIErrorTimerHandler
  9305  0184E2  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9306  0184E4  0E01               	movlw	low (_QIErrorTimerHandler shr (0+16))
  9307  0184E6  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9308  0184E8  EC22  F0E0         	call	_TMR1_SetInterruptHandler	;wreg free
  9309                           
  9310                           ;main.c: 117: TMR1_StopTimer();
  9311  0184EC  ECC2  F0E0         	call	_TMR1_StopTimer	;wreg free
  9312                           
  9313                           ;main.c: 118: TMR1_Reload();
  9314  0184F0  EC0D  F0E0         	call	_TMR1_Reload	;wreg free
  9315                           
  9316                           ;main.c: 122: TMR5_StopTimer();
  9317  0184F4  ECBE  F0E0         	call	_TMR5_StopTimer	;wreg free
  9318                           
  9319                           ;main.c: 123: TMR5_WriteTimer(0);
  9320  0184F8  0E00               	movlw	0
  9321  0184FA  0102               	movlb	2	; () banked
  9322  0184FC  6F01               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
  9323  0184FE  0E00               	movlw	0
  9324  018500  6F00               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
  9325  018502  EC83  F0DE         	call	_TMR5_WriteTimer	;wreg free
  9326                           
  9327                           ;main.c: 126: (INTCONbits.GIEH = 1);
  9328  018506  8EF2               	bsf	4082,7,c	;volatile
  9329                           
  9330                           ;main.c: 129: (INTCONbits.GIEL = 1);
  9331  018508  8CF2               	bsf	4082,6,c	;volatile
  9332                           
  9333                           ;main.c: 132: terminalClearScreen();
  9334  01850A  ECFE  F0DF         	call	_terminalClearScreen	;wreg free
  9335                           
  9336                           ;main.c: 133: terminalSetCursorHome();
  9337  01850E  ECF6  F0DF         	call	_terminalSetCursorHome	;wreg free
  9338                           
  9339                           ;main.c: 135: OLED_Init();
  9340  018512  EC12  F0D3         	call	_OLED_Init	;wreg free
  9341                           
  9342                           ;main.c: 136: OLED_Clear();
  9343  018516  EC68  F0DB         	call	_OLED_Clear	;wreg free
  9344                           
  9345                           ;main.c: 139: OLED_Frame = OLED_Boot_Frame_1;
  9346  01851A  0E00               	movlw	0
  9347  01851C  0102               	movlb	2	; () banked
  9348  01851E  6FB7               	movwf	_OLED_Frame& (0+255),b
  9349                           
  9350                           ; BSR set to: 2
  9351                           ;main.c: 140: OLED_updateHandler();
  9352  018520  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9353                           
  9354                           ;main.c: 143: LM73TempSensorInitialize();
  9355  018524  EC88  F0C4         	call	_LM73TempSensorInitialize	;wreg free
  9356                           
  9357                           ;main.c: 146: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9358  018528  0E00               	movlw	0
  9359  01852A  0103               	movlb	3	; () banked
  9360  01852C  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9361  01852E  0E00               	movlw	0
  9362  018530  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9363  018532  0E02               	movlw	2
  9364  018534  ECE5  F0AE         	call	_terminalTextAttributes
  9365                           
  9366                           ;main.c: 147: printf("QI Charger with Digital Monitoring\n\r";main.c: 148: "Boot Complet
      +                          e\n\r");
  9367  018538  0E38               	movlw	low STR_2
  9368  01853A  0102               	movlb	2	; () banked
  9369  01853C  6F9F               	movwf	printf@f& (0+255),b
  9370  01853E  0EF2               	movlw	high STR_2
  9371  018540  6FA0               	movwf	(printf@f+1)& (0+255),b
  9372  018542  EC87  F0DB         	call	_printf	;wreg free
  9373                           
  9374                           ;main.c: 151: if ( reset_cause != Power_On_Reset) {
  9375  018546  0102               	movlb	2	; () banked
  9376  018548  05FE               	decf	_reset_cause& (0+255),w,b
  9377  01854A  B4D8               	btfsc	status,2,c
  9378  01854C  D009               	goto	l22200
  9379                           
  9380                           ; BSR set to: 2
  9381                           ;main.c: 153: terminalTextAttributes(RED, BLACK, NORMAL);
  9382  01854E  0E00               	movlw	0
  9383  018550  0103               	movlb	3	; () banked
  9384  018552  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9385  018554  0E00               	movlw	0
  9386  018556  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9387  018558  0E01               	movlw	1
  9388  01855A  ECE5  F0AE         	call	_terminalTextAttributes
  9389                           
  9390                           ;main.c: 155: }
  9391  01855E  D008               	goto	l1269
  9392  018560                     l22200:
  9393                           
  9394                           ; BSR set to: 2
  9395                           ;main.c: 157: else {;main.c: 159: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9396  018560  0E00               	movlw	0
  9397  018562  0103               	movlb	3	; () banked
  9398  018564  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9399  018566  0E00               	movlw	0
  9400  018568  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9401  01856A  0E02               	movlw	2
  9402  01856C  ECE5  F0AE         	call	_terminalTextAttributes
  9403  018570                     l1269:
  9404                           
  9405                           ;main.c: 161: };main.c: 164: printf("Cause of most recent device reset was: %s\n\r", get
      +                          CauseOfResetString(reset_cause));
  9406  018570  0EA2               	movlw	low STR_3
  9407  018572  0102               	movlb	2	; () banked
  9408  018574  6F9F               	movwf	printf@f& (0+255),b
  9409  018576  0EF4               	movlw	high STR_3
  9410  018578  6FA0               	movwf	(printf@f+1)& (0+255),b
  9411  01857A  51FE               	movf	_reset_cause& (0+255),w,b
  9412  01857C  ECD4  F0DC         	call	_getCauseOfResetString
  9413  018580  C200  F2A1         	movff	?_getCauseOfResetString,?_printf+2
  9414  018584  C201  F2A2         	movff	?_getCauseOfResetString+1,?_printf+3
  9415  018588  EC87  F0DB         	call	_printf	;wreg free
  9416                           
  9417                           ;main.c: 166: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9418  01858C  0E00               	movlw	0
  9419  01858E  0103               	movlb	3	; () banked
  9420  018590  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9421  018592  0E00               	movlw	0
  9422  018594  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9423  018596  0E02               	movlw	2
  9424  018598  ECE5  F0AE         	call	_terminalTextAttributes
  9425                           
  9426                           ;main.c: 168: LATCbits.LATC2 = 0;
  9427  01859C  9485               	bcf	3973,2,c	;volatile
  9428                           
  9429                           ;main.c: 169: printf("QI Wireless Power Conversion Enabled\n\r");
  9430  01859E  0EC3               	movlw	low STR_4
  9431  0185A0  0102               	movlb	2	; () banked
  9432  0185A2  6F9F               	movwf	printf@f& (0+255),b
  9433  0185A4  0EF5               	movlw	high STR_4
  9434  0185A6  6FA0               	movwf	(printf@f+1)& (0+255),b
  9435  0185A8  EC87  F0DB         	call	_printf	;wreg free
  9436                           
  9437                           ;main.c: 171: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9438  0185AC  0E00               	movlw	0
  9439  0185AE  0103               	movlb	3	; () banked
  9440  0185B0  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9441  0185B2  0E00               	movlw	0
  9442  0185B4  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9443  0185B6  0E03               	movlw	3
  9444  0185B8  ECE5  F0AE         	call	_terminalTextAttributes
  9445                           
  9446                           ;main.c: 172: printf("\n\rHelp messages and neutral responses appear in yellow\n\r");
  9447  0185BC  0E4E               	movlw	low STR_5
  9448  0185BE  0102               	movlb	2	; () banked
  9449  0185C0  6F9F               	movwf	printf@f& (0+255),b
  9450  0185C2  0EF0               	movlw	high STR_5
  9451  0185C4  6FA0               	movwf	(printf@f+1)& (0+255),b
  9452  0185C6  EC87  F0DB         	call	_printf	;wreg free
  9453                           
  9454                           ;main.c: 173: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9455  0185CA  0E00               	movlw	0
  9456  0185CC  0103               	movlb	3	; () banked
  9457  0185CE  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9458  0185D0  0E00               	movlw	0
  9459  0185D2  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9460  0185D4  0E02               	movlw	2
  9461  0185D6  ECE5  F0AE         	call	_terminalTextAttributes
  9462                           
  9463                           ;main.c: 174: printf("System parameters and affirmative responses appear in green\n\r");
  9464  0185DA  0EAC               	movlw	low STR_6
  9465  0185DC  0102               	movlb	2	; () banked
  9466  0185DE  6F9F               	movwf	printf@f& (0+255),b
  9467  0185E0  0EEE               	movlw	high STR_6
  9468  0185E2  6FA0               	movwf	(printf@f+1)& (0+255),b
  9469  0185E4  EC87  F0DB         	call	_printf	;wreg free
  9470                           
  9471                           ;main.c: 175: terminalTextAttributes(CYAN, BLACK, NORMAL);
  9472  0185E8  0E00               	movlw	0
  9473  0185EA  0103               	movlb	3	; () banked
  9474  0185EC  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9475  0185EE  0E00               	movlw	0
  9476  0185F0  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9477  0185F2  0E06               	movlw	6
  9478  0185F4  ECE5  F0AE         	call	_terminalTextAttributes
  9479                           
  9480                           ;main.c: 176: printf("Measurement responses appear in cyan\n\r");
  9481  0185F8  0EEA               	movlw	low STR_7
  9482  0185FA  0102               	movlb	2	; () banked
  9483  0185FC  6F9F               	movwf	printf@f& (0+255),b
  9484  0185FE  0EF5               	movlw	high STR_7
  9485  018600  6FA0               	movwf	(printf@f+1)& (0+255),b
  9486  018602  EC87  F0DB         	call	_printf	;wreg free
  9487                           
  9488                           ;main.c: 177: terminalTextAttributes(RED, BLACK, NORMAL);
  9489  018606  0E00               	movlw	0
  9490  018608  0103               	movlb	3	; () banked
  9491  01860A  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9492  01860C  0E00               	movlw	0
  9493  01860E  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9494  018610  0E01               	movlw	1
  9495  018612  ECE5  F0AE         	call	_terminalTextAttributes
  9496                           
  9497                           ;main.c: 178: printf("Errors and negative responses appear in red\n\r");
  9498  018616  0EEE               	movlw	low STR_8
  9499  018618  0102               	movlb	2	; () banked
  9500  01861A  6F9F               	movwf	printf@f& (0+255),b
  9501  01861C  0EF3               	movlw	high STR_8
  9502  01861E  6FA0               	movwf	(printf@f+1)& (0+255),b
  9503  018620  EC87  F0DB         	call	_printf	;wreg free
  9504                           
  9505                           ;main.c: 179: terminalTextAttributesReset();
  9506  018624  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
  9507                           
  9508                           ;main.c: 180: printf("User input appears in white\n\r");
  9509  018628  0E9B               	movlw	low STR_9
  9510  01862A  0102               	movlb	2	; () banked
  9511  01862C  6F9F               	movwf	printf@f& (0+255),b
  9512  01862E  0EF8               	movlw	high STR_9
  9513  018630  6FA0               	movwf	(printf@f+1)& (0+255),b
  9514  018632  EC87  F0DB         	call	_printf	;wreg free
  9515                           
  9516                           ;main.c: 181: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9517  018636  0E00               	movlw	0
  9518  018638  0103               	movlb	3	; () banked
  9519  01863A  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9520  01863C  0E00               	movlw	0
  9521  01863E  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9522  018640  0E03               	movlw	3
  9523  018642  ECE5  F0AE         	call	_terminalTextAttributes
  9524                           
  9525                           ;main.c: 182: printf("\n\rCall 'Help' for list of supported commands\n\r");
  9526  018646  0E63               	movlw	low STR_10
  9527  018648  0102               	movlb	2	; () banked
  9528  01864A  6F9F               	movwf	printf@f& (0+255),b
  9529  01864C  0EF3               	movlw	high STR_10
  9530  01864E  6FA0               	movwf	(printf@f+1)& (0+255),b
  9531  018650  EC87  F0DB         	call	_printf	;wreg free
  9532                           
  9533                           ;main.c: 185: terminalTextAttributesReset();
  9534  018654  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
  9535                           
  9536                           ;main.c: 188: if (PORTBbits.RB3 == 0 && PORTBbits.RB2 == 0) nxq_charge_state = QI_Idle;
  9537  018658  A68E               	btfss	3982,3,c	;volatile
  9538  01865A  B48E               	btfsc	3982,2,c	;volatile
  9539  01865C  D002               	goto	l1270
  9540  01865E  0E00               	movlw	0
  9541  018660  D004               	goto	L1
  9542  018662                     l1270:
  9543                           
  9544                           ;main.c: 189: else if (PORTBbits.RB3 == 1 && PORTBbits.RB2 == 1) nxq_charge_state = QI_F
      +                          ully_Charged;
  9545  018662  B68E               	btfsc	3982,3,c	;volatile
  9546  018664  A48E               	btfss	3982,2,c	;volatile
  9547  018666  D003               	goto	l22214
  9548  018668  0E02               	movlw	2
  9549  01866A                     L1:
  9550  01866A  0101               	movlb	1	; () banked
  9551  01866C  6F95               	movwf	_nxq_charge_state& (0+255),b
  9552  01866E                     l22214:
  9553                           
  9554                           ;main.c: 195: if (eusart2RxStringReady) terminal_ringBufferPull();
  9555  01866E  0100               	movlb	0	; () banked
  9556  018670  B1FC               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  9557                           
  9558                           ; BSR set to: 0
  9559  018672  EC08  F0CD         	call	_terminal_ringBufferPull	;wreg free
  9560                           
  9561                           ;main.c: 198: if (OLED_update_flag) OLED_updateHandler();
  9562  018676  0102               	movlb	2	; () banked
  9563  018678  51B6               	movf	_OLED_update_flag& (0+255),w,b
  9564  01867A  A4D8               	btfss	status,2,c
  9565                           
  9566                           ; BSR set to: 2
  9567  01867C  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9568                           
  9569                           ;main.c: 201: if (LM73_start_flag) LM73AcquisitionHandler();
  9570  018680  0102               	movlb	2	; () banked
  9571  018682  51B8               	movf	_LM73_start_flag& (0+255),w,b
  9572  018684  A4D8               	btfss	status,2,c
  9573                           
  9574                           ; BSR set to: 2
  9575  018686  ECA4  F0C5         	call	_LM73AcquisitionHandler	;wreg free
  9576                           
  9577                           ;main.c: 204: if (freq_meas_start_flag) freqMeasStartCaptures();
  9578  01868A  0102               	movlb	2	; () banked
  9579  01868C  51B9               	movf	_freq_meas_start_flag& (0+255),w,b
  9580  01868E  A4D8               	btfss	status,2,c
  9581                           
  9582                           ; BSR set to: 2
  9583  018690  EC95  F0E0         	call	_freqMeasStartCaptures	;wreg free
  9584                           
  9585                           ;main.c: 207: updateErrorLEDs();
  9586  018694  ECD9  F0D9         	call	_updateErrorLEDs	;wreg free
  9587  018698  D7EA               	goto	l22214
  9588  01869A                     __end_of_main:
  9589                           	opt callstack 0
  9590                           
  9591 ;; *************** function _terminal_ringBufferPull *****************
  9592 ;; Defined at:
  9593 ;;		line 6 in file "ring_buffer_interface.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  index           2   20[BANK4 ] int 
  9598 ;;  index           2   22[BANK4 ] int 
  9599 ;;  charNumber      2   18[BANK4 ] int 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;      Totals:         0       0       0       0       1       6       0       0       0       0       0       0       
      +0       0       0       0
  9613 ;;Total ram usage:        7 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:   18
  9616 ;; This function calls:
  9617 ;;		_EUSART2_Read
  9618 ;;		_ringBufferLUT
  9619 ;;		_strlen
  9620 ;; This function is called by:
  9621 ;;		_main
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text1
  9626  019A10                     __ptext1:
  9627                           	opt callstack 0
  9628  019A10                     _terminal_ringBufferPull:
  9629                           	opt callstack 12
  9630                           
  9631                           ;ring_buffer_interface.c: 8: int charNumber = eusart2RxCount;
  9632                           
  9633                           ;incstack = 0
  9634  019A10  C197  F4D2         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  9635  019A14  0104               	movlb	4	; () banked
  9636  019A16  6BD3               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  9637                           
  9638                           ; BSR set to: 4
  9639                           ;ring_buffer_interface.c: 11: for (int index = 0; index < 64; index++) {
  9640  019A18  0E00               	movlw	0
  9641  019A1A  6FD7               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  9642  019A1C  0E00               	movlw	0
  9643  019A1E  6FD6               	movwf	terminal_ringBufferPull@index& (0+255),b
  9644  019A20                     l21932:
  9645                           
  9646                           ; BSR set to: 4
  9647                           ;ring_buffer_interface.c: 13: line[index] = '\0';
  9648  019A20  0E40               	movlw	low _line
  9649  019A22  25D6               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  9650  019A24  6ED9               	movwf	fsr2l,c
  9651  019A26  0E03               	movlw	high _line
  9652  019A28  21D7               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9653  019A2A  6EDA               	movwf	fsr2h,c
  9654  019A2C  0E00               	movlw	0
  9655  019A2E  6EDF               	movwf	indf2,c
  9656                           
  9657                           ; BSR set to: 4
  9658  019A30  4BD6               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  9659  019A32  2BD7               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  9660                           
  9661                           ; BSR set to: 4
  9662  019A34  BFD7               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  9663  019A36  D7F4               	goto	l21932
  9664  019A38  51D7               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9665  019A3A  E104               	bnz	u27900
  9666  019A3C  0E40               	movlw	64
  9667  019A3E  5DD6               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  9668  019A40  A0D8               	btfss	status,0,c
  9669  019A42  D7EE               	goto	l21932
  9670  019A44                     u27900:
  9671                           
  9672                           ; BSR set to: 4
  9673                           ;ring_buffer_interface.c: 15: };ring_buffer_interface.c: 18: for(int index = 0; index < 
      +                          charNumber; index++){
  9674  019A44  0E00               	movlw	0
  9675  019A46  6FD5               	movwf	(terminal_ringBufferPull@index_4462+1)& (0+255),b
  9676  019A48  0E00               	movlw	0
  9677  019A4A  6FD4               	movwf	terminal_ringBufferPull@index_4462& (0+255),b
  9678  019A4C  D00F               	goto	l21944
  9679  019A4E                     l21940:
  9680                           
  9681                           ; BSR set to: 3
  9682                           ;ring_buffer_interface.c: 20: line[index] = EUSART2_Read();
  9683  019A4E  EC2A  F0DB         	call	_EUSART2_Read	;wreg free
  9684  019A52  0103               	movlb	3	; () banked
  9685  019A54  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
  9686  019A56  0E40               	movlw	low _line
  9687  019A58  0104               	movlb	4	; () banked
  9688  019A5A  25D4               	addwf	terminal_ringBufferPull@index_4462& (0+255),w,b
  9689  019A5C  6ED9               	movwf	fsr2l,c
  9690  019A5E  0E03               	movlw	high _line
  9691  019A60  21D5               	addwfc	(terminal_ringBufferPull@index_4462+1)& (0+255),w,b
  9692  019A62  6EDA               	movwf	fsr2h,c
  9693  019A64  C3FF  FFDF         	movff	??_terminal_ringBufferPull,indf2
  9694                           
  9695                           ; BSR set to: 4
  9696  019A68  4BD4               	infsnz	terminal_ringBufferPull@index_4462& (0+255),f,b
  9697  019A6A  2BD5               	incf	(terminal_ringBufferPull@index_4462+1)& (0+255),f,b
  9698  019A6C                     l21944:
  9699                           
  9700                           ; BSR set to: 4
  9701  019A6C  51D2               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  9702  019A6E  5DD4               	subwf	terminal_ringBufferPull@index_4462& (0+255),w,b
  9703  019A70  51D5               	movf	(terminal_ringBufferPull@index_4462+1)& (0+255),w,b
  9704  019A72  0A80               	xorlw	128
  9705  019A74  0103               	movlb	3	; () banked
  9706  019A76  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
  9707  019A78  0104               	movlb	4	; () banked
  9708  019A7A  51D3               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  9709  019A7C  0A80               	xorlw	128
  9710  019A7E  0103               	movlb	3	; () banked
  9711  019A80  59FF               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  9712  019A82  A0D8               	btfss	status,0,c
  9713  019A84  D7E4               	goto	l21940
  9714                           
  9715                           ; BSR set to: 3
  9716                           ;ring_buffer_interface.c: 22: };ring_buffer_interface.c: 25: eusart2RxTail = eusart2RxHe
      +                          ad;
  9717  019A86  C0DD  F198         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  9718                           
  9719                           ;ring_buffer_interface.c: 28: while((line[strlen(line) - 1] == (int) '\n') ||;ring_buffe
      +                          r_interface.c: 29: (line[strlen(line) - 1] == (int) '\r')) {
  9720  019A8A  D00F               	goto	l2128
  9721  019A8C                     l21946:
  9722                           
  9723                           ; BSR set to: 2
  9724                           ;ring_buffer_interface.c: 32: line[strlen(line) - 1] = '\0';
  9725  019A8C  0E40               	movlw	low _line
  9726  019A8E  6F00               	movwf	strlen@s& (0+255),b
  9727  019A90  0E03               	movlw	high _line
  9728  019A92  6F01               	movwf	(strlen@s+1)& (0+255),b
  9729  019A94  EC34  F0DD         	call	_strlen	;wreg free
  9730  019A98  0E3F               	movlw	low (_line+65535)
  9731  019A9A  0102               	movlb	2	; () banked
  9732  019A9C  2500               	addwf	?_strlen& (0+255),w,b
  9733  019A9E  6ED9               	movwf	fsr2l,c
  9734  019AA0  0E03               	movlw	high (_line+65535)
  9735  019AA2  2101               	addwfc	(?_strlen+1)& (0+255),w,b
  9736  019AA4  6EDA               	movwf	fsr2h,c
  9737  019AA6  0E00               	movlw	0
  9738  019AA8  6EDF               	movwf	indf2,c
  9739  019AAA                     l2128:
  9740  019AAA  0E40               	movlw	low _line
  9741  019AAC  0102               	movlb	2	; () banked
  9742  019AAE  6F00               	movwf	strlen@s& (0+255),b
  9743  019AB0  0E03               	movlw	high _line
  9744  019AB2  6F01               	movwf	(strlen@s+1)& (0+255),b
  9745  019AB4  EC34  F0DD         	call	_strlen	;wreg free
  9746  019AB8  0E3F               	movlw	low (_line+65535)
  9747  019ABA  0102               	movlb	2	; () banked
  9748  019ABC  2500               	addwf	?_strlen& (0+255),w,b
  9749  019ABE  6ED9               	movwf	fsr2l,c
  9750  019AC0  0E03               	movlw	high (_line+65535)
  9751  019AC2  2101               	addwfc	(?_strlen+1)& (0+255),w,b
  9752  019AC4  6EDA               	movwf	fsr2h,c
  9753  019AC6  0E0A               	movlw	10
  9754  019AC8  18DE               	xorwf	postinc2,w,c
  9755  019ACA  B4D8               	btfsc	status,2,c
  9756  019ACC  D7DF               	goto	l21946
  9757                           
  9758                           ; BSR set to: 2
  9759  019ACE  0E40               	movlw	low _line
  9760  019AD0  6F00               	movwf	strlen@s& (0+255),b
  9761  019AD2  0E03               	movlw	high _line
  9762  019AD4  6F01               	movwf	(strlen@s+1)& (0+255),b
  9763  019AD6  EC34  F0DD         	call	_strlen	;wreg free
  9764  019ADA  0E3F               	movlw	low (_line+65535)
  9765  019ADC  0102               	movlb	2	; () banked
  9766  019ADE  2500               	addwf	?_strlen& (0+255),w,b
  9767  019AE0  6ED9               	movwf	fsr2l,c
  9768  019AE2  0E03               	movlw	high (_line+65535)
  9769  019AE4  2101               	addwfc	(?_strlen+1)& (0+255),w,b
  9770  019AE6  6EDA               	movwf	fsr2h,c
  9771  019AE8  0E0D               	movlw	13
  9772  019AEA  18DE               	xorwf	postinc2,w,c
  9773  019AEC  B4D8               	btfsc	status,2,c
  9774  019AEE  D7CE               	goto	l21946
  9775                           
  9776                           ; BSR set to: 2
  9777                           ;ring_buffer_interface.c: 34: };ring_buffer_interface.c: 38: eusart2RxStringReady = 0;
  9778  019AF0  0100               	movlb	0	; () banked
  9779  019AF2  91FC               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;ring_buffer_interface.c: 41: ringBufferLUT(line);
  9783  019AF4  0E40               	movlw	low _line
  9784  019AF6  0103               	movlb	3	; () banked
  9785  019AF8  6FF9               	movwf	ringBufferLUT@line& (0+255),b
  9786  019AFA  0E03               	movlw	high _line
  9787  019AFC  6FFA               	movwf	(ringBufferLUT@line+1)& (0+255),b
  9788  019AFE  EC15  F0A4         	call	_ringBufferLUT	;wreg free
  9789  019B02  0012               	return		;funcret
  9790  019B04                     __end_of_terminal_ringBufferPull:
  9791                           	opt callstack 0
  9792                           
  9793 ;; *************** function _ringBufferLUT *****************
  9794 ;; Defined at:
  9795 ;;		line 19 in file "ring_buffer_LUT.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  line            2   28[BANK3 ] PTR unsigned char 
  9798 ;;		 -> line(64), 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  userID          2   32[BANK3 ] int 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9810 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
  9814 ;;Total ram usage:        6 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:   17
  9817 ;; This function calls:
  9818 ;;		_clearADCErrors
  9819 ;;		_clearI2CErrors
  9820 ;;		_clearUARTErrors
  9821 ;;		_getCauseOfResetString
  9822 ;;		_getDeviceID
  9823 ;;		_getDeviceIDString
  9824 ;;		_getMajorRevisionID
  9825 ;;		_getMinorRevisionID
  9826 ;;		_getStringSecondsAsTime
  9827 ;;		_getUserID
  9828 ;;		_printCurrentMeasurements
  9829 ;;		_printErrorHandlerStatus
  9830 ;;		_printf
  9831 ;;		_strcmp
  9832 ;;		_strlen
  9833 ;;		_terminalTextAttributes
  9834 ;;		_terminalTextAttributesReset
  9835 ;; This function is called by:
  9836 ;;		_terminal_ringBufferPull
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text2
  9841  01482A                     __ptext2:
  9842                           	opt callstack 0
  9843  01482A                     _ringBufferLUT:
  9844                           	opt callstack 12
  9845                           
  9846                           ;ring_buffer_LUT.c: 25: if((0 == strcmp(line, "Reset"))) {
  9847                           
  9848                           ;incstack = 0
  9849  01482A  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
  9850  01482E  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9851  014832  0E87               	movlw	low (STR_38+5)
  9852  014834  0102               	movlb	2	; () banked
  9853  014836  6F02               	movwf	strcmp@s2& (0+255),b
  9854  014838  0EFE               	movlw	high (STR_38+5)
  9855  01483A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  9856  01483C  EC81  F0D8         	call	_strcmp	;wreg free
  9857  014840  0102               	movlb	2	; () banked
  9858  014842  5100               	movf	?_strcmp& (0+255),w,b
  9859  014844  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  9860  014846  A4D8               	btfss	status,2,c
  9861  014848  D00F               	goto	l20980
  9862                           
  9863                           ; BSR set to: 2
  9864                           ;ring_buffer_LUT.c: 28: printf("\033[2J");
  9865  01484A  0EA1               	movlw	low STR_177
  9866  01484C  6F9F               	movwf	printf@f& (0+255),b
  9867  01484E  0EFF               	movlw	high STR_177
  9868  014850  6FA0               	movwf	(printf@f+1)& (0+255),b
  9869  014852  EC87  F0DB         	call	_printf	;wreg free
  9870                           
  9871                           ;ring_buffer_LUT.c: 31: printf("\033[H");
  9872  014856  0EC2               	movlw	low STR_178
  9873  014858  0102               	movlb	2	; () banked
  9874  01485A  6F9F               	movwf	printf@f& (0+255),b
  9875  01485C  0EFF               	movlw	high STR_178
  9876  01485E  6FA0               	movwf	(printf@f+1)& (0+255),b
  9877  014860  EC87  F0DB         	call	_printf	;wreg free
  9878  014864  00FF               	reset		;# 
  9879                           
  9880                           ;ring_buffer_LUT.c: 36: }
  9881  014866  0012               	return	
  9882  014868                     l20980:
  9883                           
  9884                           ; BSR set to: 2
  9885                           ;ring_buffer_LUT.c: 39: else if((0 == strcmp(line, "Clear"))) {
  9886  014868  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
  9887  01486C  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9888  014870  0E8F               	movlw	low STR_179
  9889  014872  6F02               	movwf	strcmp@s2& (0+255),b
  9890  014874  0EFF               	movlw	high STR_179
  9891  014876  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  9892  014878  EC81  F0D8         	call	_strcmp	;wreg free
  9893  01487C  0102               	movlb	2	; () banked
  9894  01487E  5100               	movf	?_strcmp& (0+255),w,b
  9895  014880  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  9896  014882  A4D8               	btfss	status,2,c
  9897  014884  D00E               	goto	l20984
  9898                           
  9899                           ; BSR set to: 2
  9900                           ;ring_buffer_LUT.c: 42: printf("\033[2J");
  9901  014886  0EA1               	movlw	low STR_177
  9902  014888  6F9F               	movwf	printf@f& (0+255),b
  9903  01488A  0EFF               	movlw	high STR_177
  9904  01488C  6FA0               	movwf	(printf@f+1)& (0+255),b
  9905  01488E  EC87  F0DB         	call	_printf	;wreg free
  9906                           
  9907                           ;ring_buffer_LUT.c: 45: printf("\033[H");
  9908  014892  0EC2               	movlw	low STR_178
  9909  014894  0102               	movlb	2	; () banked
  9910  014896  6F9F               	movwf	printf@f& (0+255),b
  9911  014898  0EFF               	movlw	high STR_178
  9912  01489A  6FA0               	movwf	(printf@f+1)& (0+255),b
  9913  01489C  EC87  F0DB         	call	_printf	;wreg free
  9914                           
  9915                           ;ring_buffer_LUT.c: 47: }
  9916  0148A0  0012               	return	
  9917  0148A2                     l20984:
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;ring_buffer_LUT.c: 50: else if((0 == strcmp(line, "*IDN?"))) {
  9921  0148A2  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
  9922  0148A6  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9923  0148AA  0E89               	movlw	low STR_182
  9924  0148AC  6F02               	movwf	strcmp@s2& (0+255),b
  9925  0148AE  0EFF               	movlw	high STR_182
  9926  0148B0  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  9927  0148B2  EC81  F0D8         	call	_strcmp	;wreg free
  9928  0148B6  0102               	movlb	2	; () banked
  9929  0148B8  5100               	movf	?_strcmp& (0+255),w,b
  9930  0148BA  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  9931  0148BC  A4D8               	btfss	status,2,c
  9932  0148BE  D012               	goto	l20988
  9933                           
  9934                           ; BSR set to: 2
  9935                           ;ring_buffer_LUT.c: 52: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9936  0148C0  0E00               	movlw	0
  9937  0148C2  0103               	movlb	3	; () banked
  9938  0148C4  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9939  0148C6  0E00               	movlw	0
  9940  0148C8  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9941  0148CA  0E02               	movlw	2
  9942  0148CC  ECE5  F0AE         	call	_terminalTextAttributes
  9943                           
  9944                           ;ring_buffer_LUT.c: 53: printf("QI Charger with Digital Monitoring, by Drew Maatman\n\r"
      +                          );
  9945  0148D0  0E2E               	movlw	low STR_183
  9946  0148D2  0102               	movlb	2	; () banked
  9947  0148D4  6F9F               	movwf	printf@f& (0+255),b
  9948  0148D6  0EF1               	movlw	high STR_183
  9949  0148D8  6FA0               	movwf	(printf@f+1)& (0+255),b
  9950  0148DA  EC87  F0DB         	call	_printf	;wreg free
  9951                           
  9952                           ;ring_buffer_LUT.c: 54: terminalTextAttributesReset();
  9953  0148DE  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
  9954                           
  9955                           ;ring_buffer_LUT.c: 56: }
  9956  0148E2  0012               	return	
  9957  0148E4                     l20988:
  9958                           
  9959                           ; BSR set to: 2
  9960                           ;ring_buffer_LUT.c: 59: else if (0 == strcmp(line, "Device Status?")) {
  9961  0148E4  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
  9962  0148E8  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9963  0148EC  0E31               	movlw	low STR_184
  9964  0148EE  6F02               	movwf	strcmp@s2& (0+255),b
  9965  0148F0  0EFC               	movlw	high STR_184
  9966  0148F2  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  9967  0148F4  EC81  F0D8         	call	_strcmp	;wreg free
  9968  0148F8  0102               	movlb	2	; () banked
  9969  0148FA  5100               	movf	?_strcmp& (0+255),w,b
  9970  0148FC  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  9971  0148FE  A4D8               	btfss	status,2,c
  9972  014900  D0DA               	goto	l21006
  9973                           
  9974                           ; BSR set to: 2
  9975                           ;ring_buffer_LUT.c: 61: printf("\n\r");
  9976  014902  0E8F               	movlw	low (STR_333+21)
  9977  014904  6F9F               	movwf	printf@f& (0+255),b
  9978  014906  0EF9               	movlw	high (STR_333+21)
  9979  014908  6FA0               	movwf	(printf@f+1)& (0+255),b
  9980  01490A  EC87  F0DB         	call	_printf	;wreg free
  9981                           
  9982                           ;ring_buffer_LUT.c: 63: terminalTextAttributes(GREEN, BLACK, BOLD);
  9983  01490E  0E00               	movlw	0
  9984  014910  0103               	movlb	3	; () banked
  9985  014912  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
  9986  014914  0E01               	movlw	1
  9987  014916  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9988  014918  0E02               	movlw	2
  9989  01491A  ECE5  F0AE         	call	_terminalTextAttributes
  9990                           
  9991                           ;ring_buffer_LUT.c: 65: printf("Digital Monitoring Microcontroller Status:\n\r");
  9992  01491E  0E49               	movlw	low STR_186
  9993  014920  0102               	movlb	2	; () banked
  9994  014922  6F9F               	movwf	printf@f& (0+255),b
  9995  014924  0EF4               	movlw	high STR_186
  9996  014926  6FA0               	movwf	(printf@f+1)& (0+255),b
  9997  014928  EC87  F0DB         	call	_printf	;wreg free
  9998                           
  9999                           ;ring_buffer_LUT.c: 67: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10000  01492C  0E00               	movlw	0
 10001  01492E  0103               	movlb	3	; () banked
 10002  014930  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10003  014932  0E00               	movlw	0
 10004  014934  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10005  014936  0E02               	movlw	2
 10006  014938  ECE5  F0AE         	call	_terminalTextAttributes
 10007                           
 10008                           ;ring_buffer_LUT.c: 69: printf("\n\r");
 10009  01493C  0E8F               	movlw	low (STR_333+21)
 10010  01493E  0102               	movlb	2	; () banked
 10011  014940  6F9F               	movwf	printf@f& (0+255),b
 10012  014942  0EF9               	movlw	high (STR_333+21)
 10013  014944  6FA0               	movwf	(printf@f+1)& (0+255),b
 10014  014946  EC87  F0DB         	call	_printf	;wreg free
 10015                           
 10016                           ;ring_buffer_LUT.c: 72: printf("    Device ID retrieved from flash: %s (0x%04X)\n\r",;ri
      +                          ng_buffer_LUT.c: 73: getDeviceIDString(getDeviceID()),;ring_buffer_LUT.c: 74: getDeviceI
      +                          D());
 10017  01494A  0E6C               	movlw	low STR_188
 10018  01494C  0102               	movlb	2	; () banked
 10019  01494E  6F9F               	movwf	printf@f& (0+255),b
 10020  014950  0EF2               	movlw	high STR_188
 10021  014952  6FA0               	movwf	(printf@f+1)& (0+255),b
 10022  014954  ECC3  F0DE         	call	_getDeviceID	;wreg free
 10023  014958  C20B  F20D         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10024  01495C  C20C  F20E         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10025  014960  ECC6  F0D2         	call	_getDeviceIDString	;wreg free
 10026  014964  C20D  F2A1         	movff	?_getDeviceIDString,?_printf+2
 10027  014968  C20E  F2A2         	movff	?_getDeviceIDString+1,?_printf+3
 10028  01496C  ECC3  F0DE         	call	_getDeviceID	;wreg free
 10029  014970  C20B  F2A3         	movff	?_getDeviceID,?_printf+4
 10030  014974  C20C  F2A4         	movff	?_getDeviceID+1,?_printf+5
 10031  014978  EC87  F0DB         	call	_printf	;wreg free
 10032                           
 10033                           ;ring_buffer_LUT.c: 76: printf("\n\r");
 10034  01497C  0E8F               	movlw	low (STR_333+21)
 10035  01497E  0102               	movlb	2	; () banked
 10036  014980  6F9F               	movwf	printf@f& (0+255),b
 10037  014982  0EF9               	movlw	high (STR_333+21)
 10038  014984  6FA0               	movwf	(printf@f+1)& (0+255),b
 10039  014986  EC87  F0DB         	call	_printf	;wreg free
 10040                           
 10041                           ;ring_buffer_LUT.c: 78: printf("    Device silicon revision ID retrieved from flash: %c%
      +                          03d\n\r",;ring_buffer_LUT.c: 79: ((char) getMajorRevisionID() + 65),getMinorRevisionID()
      +                          );
 10042  01498A  0E6E               	movlw	low STR_190
 10043  01498C  0102               	movlb	2	; () banked
 10044  01498E  6F9F               	movwf	printf@f& (0+255),b
 10045  014990  0EEE               	movlw	high STR_190
 10046  014992  6FA0               	movwf	(printf@f+1)& (0+255),b
 10047  014994  ECC3  F0DB         	call	_getMajorRevisionID	;wreg free
 10048  014998  0103               	movlb	3	; () banked
 10049  01499A  6FFB               	movwf	??_ringBufferLUT& (0+255),b
 10050  01499C  0E41               	movlw	65
 10051  01499E  25FB               	addwf	??_ringBufferLUT& (0+255),w,b
 10052  0149A0  0102               	movlb	2	; () banked
 10053  0149A2  6FA1               	movwf	(?_printf+2)& (0+255),b
 10054  0149A4  6BA2               	clrf	(?_printf+3)& (0+255),b
 10055  0149A6  0E00               	movlw	0
 10056  0149A8  23A2               	addwfc	(?_printf+3)& (0+255),f,b
 10057  0149AA  EC05  F0DE         	call	_getMinorRevisionID	;wreg free
 10058  0149AE  0103               	movlb	3	; () banked
 10059  0149B0  6FFC               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10060  0149B2  51FC               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10061  0149B4  0102               	movlb	2	; () banked
 10062  0149B6  6FA3               	movwf	(?_printf+4)& (0+255),b
 10063  0149B8  6BA4               	clrf	(?_printf+5)& (0+255),b
 10064  0149BA  EC87  F0DB         	call	_printf	;wreg free
 10065                           
 10066                           ;ring_buffer_LUT.c: 81: printf("\n\r");
 10067  0149BE  0E8F               	movlw	low (STR_333+21)
 10068  0149C0  0102               	movlb	2	; () banked
 10069  0149C2  6F9F               	movwf	printf@f& (0+255),b
 10070  0149C4  0EF9               	movlw	high (STR_333+21)
 10071  0149C6  6FA0               	movwf	(printf@f+1)& (0+255),b
 10072  0149C8  EC87  F0DB         	call	_printf	;wreg free
 10073                           
 10074                           ;ring_buffer_LUT.c: 83: printf("    The following User IDs have been retrieved from flas
      +                          h:\n\r");
 10075  0149CC  0EEA               	movlw	low STR_192
 10076  0149CE  0102               	movlb	2	; () banked
 10077  0149D0  6F9F               	movwf	printf@f& (0+255),b
 10078  0149D2  0EEE               	movlw	high STR_192
 10079  0149D4  6FA0               	movwf	(printf@f+1)& (0+255),b
 10080  0149D6  EC87  F0DB         	call	_printf	;wreg free
 10081                           
 10082                           ;ring_buffer_LUT.c: 86: for (int userID = 0; userID <= 7; userID++) {
 10083  0149DA  0E00               	movlw	0
 10084  0149DC  0103               	movlb	3	; () banked
 10085  0149DE  6FFE               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10086  0149E0  0E00               	movlw	0
 10087  0149E2  6FFD               	movwf	ringBufferLUT@userID& (0+255),b
 10088  0149E4                     l20998:
 10089                           
 10090                           ; BSR set to: 3
 10091                           ;ring_buffer_LUT.c: 88: printf("        User ID Word %d (Flash address 0x20000%X): 0x%04
      +                          X\n\r",;ring_buffer_LUT.c: 89: userID,;ring_buffer_LUT.c: 90: (2 * userID),;ring_buffer_
      +                          LUT.c: 91: getUserID(userID));
 10092  0149E4  0E63               	movlw	low STR_193
 10093  0149E6  0102               	movlb	2	; () banked
 10094  0149E8  6F9F               	movwf	printf@f& (0+255),b
 10095  0149EA  0EEF               	movlw	high STR_193
 10096  0149EC  6FA0               	movwf	(printf@f+1)& (0+255),b
 10097  0149EE  C3FD  F2A1         	movff	ringBufferLUT@userID,?_printf+2
 10098  0149F2  C3FE  F2A2         	movff	ringBufferLUT@userID+1,?_printf+3
 10099  0149F6  90D8               	bcf	status,0,c
 10100  0149F8  0103               	movlb	3	; () banked
 10101  0149FA  35FD               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10102  0149FC  0102               	movlb	2	; () banked
 10103  0149FE  6FA3               	movwf	(?_printf+4)& (0+255),b
 10104  014A00  0103               	movlb	3	; () banked
 10105  014A02  35FE               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10106  014A04  0102               	movlb	2	; () banked
 10107  014A06  6FA4               	movwf	(?_printf+5)& (0+255),b
 10108  014A08  0103               	movlb	3	; () banked
 10109  014A0A  51FD               	movf	ringBufferLUT@userID& (0+255),w,b
 10110  014A0C  EC54  F0DC         	call	_getUserID
 10111  014A10  C20B  F2A5         	movff	?_getUserID,?_printf+6
 10112  014A14  C20C  F2A6         	movff	?_getUserID+1,?_printf+7
 10113  014A18  EC87  F0DB         	call	_printf	;wreg free
 10114  014A1C  0103               	movlb	3	; () banked
 10115  014A1E  4BFD               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10116  014A20  2BFE               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10117                           
 10118                           ; BSR set to: 3
 10119  014A22  BFFE               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10120  014A24  D7DF               	goto	l20998
 10121  014A26  51FE               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10122  014A28  E104               	bnz	u26990
 10123  014A2A  0E08               	movlw	8
 10124  014A2C  5DFD               	subwf	ringBufferLUT@userID& (0+255),w,b
 10125  014A2E  A0D8               	btfss	status,0,c
 10126  014A30  D7D9               	goto	l20998
 10127  014A32                     u26990:
 10128                           
 10129                           ; BSR set to: 3
 10130                           ;ring_buffer_LUT.c: 93: };ring_buffer_LUT.c: 95: printf("\n\r");
 10131  014A32  0E8F               	movlw	low (STR_333+21)
 10132  014A34  0102               	movlb	2	; () banked
 10133  014A36  6F9F               	movwf	printf@f& (0+255),b
 10134  014A38  0EF9               	movlw	high (STR_333+21)
 10135  014A3A  6FA0               	movwf	(printf@f+1)& (0+255),b
 10136  014A3C  EC87  F0DB         	call	_printf	;wreg free
 10137                           
 10138                           ;ring_buffer_LUT.c: 97: printf("    The cause of the most recent device reset was: %s\n\
      +                          r",;ring_buffer_LUT.c: 98: getCauseOfResetString(reset_cause));
 10139  014A40  0EBF               	movlw	low STR_195
 10140  014A42  0102               	movlb	2	; () banked
 10141  014A44  6F9F               	movwf	printf@f& (0+255),b
 10142  014A46  0EF0               	movlw	high STR_195
 10143  014A48  6FA0               	movwf	(printf@f+1)& (0+255),b
 10144  014A4A  51FE               	movf	_reset_cause& (0+255),w,b
 10145  014A4C  ECD4  F0DC         	call	_getCauseOfResetString
 10146  014A50  C200  F2A1         	movff	?_getCauseOfResetString,?_printf+2
 10147  014A54  C201  F2A2         	movff	?_getCauseOfResetString+1,?_printf+3
 10148  014A58  EC87  F0DB         	call	_printf	;wreg free
 10149                           
 10150                           ;ring_buffer_LUT.c: 100: printf("\n\r");
 10151  014A5C  0E8F               	movlw	low (STR_333+21)
 10152  014A5E  0102               	movlb	2	; () banked
 10153  014A60  6F9F               	movwf	printf@f& (0+255),b
 10154  014A62  0EF9               	movlw	high (STR_333+21)
 10155  014A64  6FA0               	movwf	(printf@f+1)& (0+255),b
 10156  014A66  EC87  F0DB         	call	_printf	;wreg free
 10157                           
 10158                           ;ring_buffer_LUT.c: 102: printf("    Device on time since last reset condition is %s\n\r
      +                          ", getStringSecondsAsTime(device_on_time));
 10159  014A6A  0E64               	movlw	low STR_197
 10160  014A6C  0102               	movlb	2	; () banked
 10161  014A6E  6F9F               	movwf	printf@f& (0+255),b
 10162  014A70  0EF1               	movlw	high STR_197
 10163  014A72  6FA0               	movwf	(printf@f+1)& (0+255),b
 10164  014A74  C2AE  F297         	movff	_device_on_time,getStringSecondsAsTime@input_seconds
 10165  014A78  C2AF  F298         	movff	_device_on_time+1,getStringSecondsAsTime@input_seconds+1
 10166  014A7C  C2B0  F299         	movff	_device_on_time+2,getStringSecondsAsTime@input_seconds+2
 10167  014A80  C2B1  F29A         	movff	_device_on_time+3,getStringSecondsAsTime@input_seconds+3
 10168  014A84  EC12  F0AD         	call	_getStringSecondsAsTime	;wreg free
 10169  014A88  C297  F2A1         	movff	?_getStringSecondsAsTime,?_printf+2
 10170  014A8C  C298  F2A2         	movff	?_getStringSecondsAsTime+1,?_printf+3
 10171  014A90  EC87  F0DB         	call	_printf	;wreg free
 10172                           
 10173                           ;ring_buffer_LUT.c: 104: printf("\n\r");
 10174  014A94  0E8F               	movlw	low (STR_333+21)
 10175  014A96  0102               	movlb	2	; () banked
 10176  014A98  6F9F               	movwf	printf@f& (0+255),b
 10177  014A9A  0EF9               	movlw	high (STR_333+21)
 10178  014A9C  6FA0               	movwf	(printf@f+1)& (0+255),b
 10179  014A9E  EC87  F0DB         	call	_printf	;wreg free
 10180                           
 10181                           ;ring_buffer_LUT.c: 106: printErrorHandlerStatus();
 10182  014AA2  ECBA  F0C6         	call	_printErrorHandlerStatus	;wreg free
 10183                           
 10184                           ;ring_buffer_LUT.c: 108: printf("\n\r");
 10185  014AA6  0E8F               	movlw	low (STR_333+21)
 10186  014AA8  0102               	movlb	2	; () banked
 10187  014AAA  6F9F               	movwf	printf@f& (0+255),b
 10188  014AAC  0EF9               	movlw	high (STR_333+21)
 10189  014AAE  6FA0               	movwf	(printf@f+1)& (0+255),b
 10190  014AB0  EC87  F0DB         	call	_printf	;wreg free
 10191                           
 10192                           ;ring_buffer_LUT.c: 110: }
 10193  014AB4  0012               	return	
 10194  014AB6                     l21006:
 10195                           
 10196                           ; BSR set to: 2
 10197                           ;ring_buffer_LUT.c: 113: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 10198  014AB6  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10199  014ABA  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10200  014ABE  0EA0               	movlw	low STR_200
 10201  014AC0  6F02               	movwf	strcmp@s2& (0+255),b
 10202  014AC2  0EFB               	movlw	high STR_200
 10203  014AC4  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10204  014AC6  EC81  F0D8         	call	_strcmp	;wreg free
 10205  014ACA  0102               	movlb	2	; () banked
 10206  014ACC  5100               	movf	?_strcmp& (0+255),w,b
 10207  014ACE  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10208  014AD0  A4D8               	btfss	status,2,c
 10209  014AD2  D014               	goto	l21016
 10210                           
 10211                           ; BSR set to: 2
 10212                           ;ring_buffer_LUT.c: 115: clearADCErrors();
 10213  014AD4  ECEE  F0DF         	call	_clearADCErrors	;wreg free
 10214                           
 10215                           ;ring_buffer_LUT.c: 117: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10216  014AD8  0E00               	movlw	0
 10217  014ADA  0103               	movlb	3	; () banked
 10218  014ADC  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10219  014ADE  0E00               	movlw	0
 10220  014AE0  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10221  014AE2  0E02               	movlw	2
 10222  014AE4  ECE5  F0AE         	call	_terminalTextAttributes
 10223                           
 10224                           ;ring_buffer_LUT.c: 118: printf("ADC Error(s) cleared\n\r");
 10225  014AE8  0E1F               	movlw	low STR_201
 10226  014AEA  0102               	movlb	2	; () banked
 10227  014AEC  6F9F               	movwf	printf@f& (0+255),b
 10228  014AEE  0EFA               	movlw	high STR_201
 10229  014AF0  6FA0               	movwf	(printf@f+1)& (0+255),b
 10230  014AF2  EC87  F0DB         	call	_printf	;wreg free
 10231  014AF6                     l21014:
 10232                           
 10233                           ;ring_buffer_LUT.c: 119: terminalTextAttributesReset();
 10234  014AF6  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10235                           
 10236                           ;ring_buffer_LUT.c: 121: }
 10237  014AFA  0012               	return	
 10238  014AFC                     l21016:
 10239                           
 10240                           ; BSR set to: 2
 10241                           ;ring_buffer_LUT.c: 124: else if((0 == strcmp(line, "Clear I2C Errors"))) {
 10242  014AFC  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10243  014B00  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10244  014B04  0E8F               	movlw	low STR_202
 10245  014B06  6F02               	movwf	strcmp@s2& (0+255),b
 10246  014B08  0EFB               	movlw	high STR_202
 10247  014B0A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10248  014B0C  EC81  F0D8         	call	_strcmp	;wreg free
 10249  014B10  0102               	movlb	2	; () banked
 10250  014B12  5100               	movf	?_strcmp& (0+255),w,b
 10251  014B14  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10252  014B16  A4D8               	btfss	status,2,c
 10253  014B18  D012               	goto	l21026
 10254                           
 10255                           ; BSR set to: 2
 10256                           ;ring_buffer_LUT.c: 126: clearI2CErrors();
 10257  014B1A  EC02  F0DF         	call	_clearI2CErrors	;wreg free
 10258                           
 10259                           ;ring_buffer_LUT.c: 128: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10260  014B1E  0E00               	movlw	0
 10261  014B20  0103               	movlb	3	; () banked
 10262  014B22  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10263  014B24  0E00               	movlw	0
 10264  014B26  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10265  014B28  0E02               	movlw	2
 10266  014B2A  ECE5  F0AE         	call	_terminalTextAttributes
 10267                           
 10268                           ;ring_buffer_LUT.c: 129: printf("I2C error(s) cleared\n\r");
 10269  014B2E  0E36               	movlw	low STR_203
 10270  014B30  0102               	movlb	2	; () banked
 10271  014B32  6F9F               	movwf	printf@f& (0+255),b
 10272  014B34  0EFA               	movlw	high STR_203
 10273  014B36  6FA0               	movwf	(printf@f+1)& (0+255),b
 10274  014B38  EC87  F0DB         	call	_printf	;wreg free
 10275  014B3C  D7DC               	goto	l21014
 10276  014B3E                     l21026:
 10277                           
 10278                           ; BSR set to: 2
 10279                           ;ring_buffer_LUT.c: 135: else if((0 == strcmp(line, "Clear UART Errors"))) {
 10280  014B3E  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10281  014B42  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10282  014B46  0E6C               	movlw	low STR_204
 10283  014B48  6F02               	movwf	strcmp@s2& (0+255),b
 10284  014B4A  0EFB               	movlw	high STR_204
 10285  014B4C  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10286  014B4E  EC81  F0D8         	call	_strcmp	;wreg free
 10287  014B52  0102               	movlb	2	; () banked
 10288  014B54  5100               	movf	?_strcmp& (0+255),w,b
 10289  014B56  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10290  014B58  A4D8               	btfss	status,2,c
 10291  014B5A  D012               	goto	l21036
 10292                           
 10293                           ; BSR set to: 2
 10294                           ;ring_buffer_LUT.c: 137: clearUARTErrors();
 10295  014B5C  EC7D  F0E0         	call	_clearUARTErrors	;wreg free
 10296                           
 10297                           ;ring_buffer_LUT.c: 139: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10298  014B60  0E00               	movlw	0
 10299  014B62  0103               	movlb	3	; () banked
 10300  014B64  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10301  014B66  0E00               	movlw	0
 10302  014B68  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10303  014B6A  0E02               	movlw	2
 10304  014B6C  ECE5  F0AE         	call	_terminalTextAttributes
 10305                           
 10306                           ;ring_buffer_LUT.c: 140: printf("UART error(s) cleared\n\r");
 10307  014B70  0EC2               	movlw	low STR_205
 10308  014B72  0102               	movlb	2	; () banked
 10309  014B74  6F9F               	movwf	printf@f& (0+255),b
 10310  014B76  0EF9               	movlw	high STR_205
 10311  014B78  6FA0               	movwf	(printf@f+1)& (0+255),b
 10312  014B7A  EC87  F0DB         	call	_printf	;wreg free
 10313  014B7E  D7BB               	goto	l21014
 10314  014B80                     l21036:
 10315                           
 10316                           ; BSR set to: 2
 10317                           ;ring_buffer_LUT.c: 145: else if ((0 == strcmp(line, "Error Status?"))) {
 10318  014B80  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10319  014B84  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10320  014B88  0E8A               	movlw	low STR_206
 10321  014B8A  6F02               	movwf	strcmp@s2& (0+255),b
 10322  014B8C  0EFC               	movlw	high STR_206
 10323  014B8E  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10324  014B90  EC81  F0D8         	call	_strcmp	;wreg free
 10325  014B94  0102               	movlb	2	; () banked
 10326  014B96  5100               	movf	?_strcmp& (0+255),w,b
 10327  014B98  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10328  014B9A  A4D8               	btfss	status,2,c
 10329  014B9C  D003               	goto	l21040
 10330                           
 10331                           ; BSR set to: 2
 10332                           ;ring_buffer_LUT.c: 147: printErrorHandlerStatus();
 10333  014B9E  ECBA  F0C6         	call	_printErrorHandlerStatus	;wreg free
 10334                           
 10335                           ;ring_buffer_LUT.c: 149: }
 10336  014BA2  0012               	return	
 10337  014BA4                     l21040:
 10338                           
 10339                           ; BSR set to: 2
 10340                           ;ring_buffer_LUT.c: 152: else if (0 == strcmp(line, "Current Measurements?")) {
 10341  014BA4  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10342  014BA8  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10343  014BAC  0E79               	movlw	low STR_207
 10344  014BAE  6F02               	movwf	strcmp@s2& (0+255),b
 10345  014BB0  0EFA               	movlw	high STR_207
 10346  014BB2  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10347  014BB4  EC81  F0D8         	call	_strcmp	;wreg free
 10348  014BB8  0102               	movlb	2	; () banked
 10349  014BBA  5100               	movf	?_strcmp& (0+255),w,b
 10350  014BBC  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10351  014BBE  A4D8               	btfss	status,2,c
 10352  014BC0  D003               	goto	l21044
 10353                           
 10354                           ; BSR set to: 2
 10355                           ;ring_buffer_LUT.c: 154: printCurrentMeasurements();
 10356  014BC2  EC8F  F0A6         	call	_printCurrentMeasurements	;wreg free
 10357                           
 10358                           ;ring_buffer_LUT.c: 156: }
 10359  014BC6  0012               	return	
 10360  014BC8                     l21044:
 10361                           
 10362                           ; BSR set to: 2
 10363                           ;ring_buffer_LUT.c: 159: else if((0 == strcmp(line, "Help"))) {
 10364  014BC8  C3F9  F200         	movff	ringBufferLUT@line,strcmp@s1
 10365  014BCC  C3FA  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10366  014BD0  0EA6               	movlw	low STR_208
 10367  014BD2  6F02               	movwf	strcmp@s2& (0+255),b
 10368  014BD4  0EFF               	movlw	high STR_208
 10369  014BD6  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10370  014BD8  EC81  F0D8         	call	_strcmp	;wreg free
 10371  014BDC  0102               	movlb	2	; () banked
 10372  014BDE  5100               	movf	?_strcmp& (0+255),w,b
 10373  014BE0  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10374  014BE2  A4D8               	btfss	status,2,c
 10375  014BE4  D069               	goto	l21048
 10376                           
 10377                           ; BSR set to: 2
 10378                           ;ring_buffer_LUT.c: 161: printf("\n\r");
 10379  014BE6  0E8F               	movlw	low (STR_333+21)
 10380  014BE8  6F9F               	movwf	printf@f& (0+255),b
 10381  014BEA  0EF9               	movlw	high (STR_333+21)
 10382  014BEC  6FA0               	movwf	(printf@f+1)& (0+255),b
 10383  014BEE  EC87  F0DB         	call	_printf	;wreg free
 10384                           
 10385                           ;ring_buffer_LUT.c: 163: terminalTextAttributes(YELLOW, BLACK, BOLD);
 10386  014BF2  0E00               	movlw	0
 10387  014BF4  0103               	movlb	3	; () banked
 10388  014BF6  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10389  014BF8  0E01               	movlw	1
 10390  014BFA  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10391  014BFC  0E03               	movlw	3
 10392  014BFE  ECE5  F0AE         	call	_terminalTextAttributes
 10393                           
 10394                           ;ring_buffer_LUT.c: 165: printf("Available Commands:\n\r");
 10395  014C02  0E63               	movlw	low STR_210
 10396  014C04  0102               	movlb	2	; () banked
 10397  014C06  6F9F               	movwf	printf@f& (0+255),b
 10398  014C08  0EFA               	movlw	high STR_210
 10399  014C0A  6FA0               	movwf	(printf@f+1)& (0+255),b
 10400  014C0C  EC87  F0DB         	call	_printf	;wreg free
 10401                           
 10402                           ;ring_buffer_LUT.c: 167: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10403  014C10  0E00               	movlw	0
 10404  014C12  0103               	movlb	3	; () banked
 10405  014C14  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10406  014C16  0E00               	movlw	0
 10407  014C18  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10408  014C1A  0E03               	movlw	3
 10409  014C1C  ECE5  F0AE         	call	_terminalTextAttributes
 10410                           
 10411                           ;ring_buffer_LUT.c: 169: printf( "    *IDN?: Prints identification string\n\r";ring_buff
      +                          er_LUT.c: 170: "    Reset: Executes software reset instruction\n\r";ring_buffer_LUT.c: 1
      +                          71: "    Clear: Clears the virtual COM port terminal\n\r";ring_buffer_LUT.c: 172: "    C
      +                          urrent Measurements?: Prints instantaneous system level electrical measurements\n\r";rin
      +                          g_buffer_LUT.c: 173: "    Device Status?: Prints digital monitoring microcontroller devi
      +                          ce status\n\r";ring_buffer_LUT.c: 174: "    Error Status? Prints if any system faults ha
      +                          ve been detected\n\r"
 10412  014C20  0E4B               	movlw	low STR_211
 10413  014C22  0102               	movlb	2	; () banked
 10414  014C24  6F9F               	movwf	printf@f& (0+255),b
 10415  014C26  0EEA               	movlw	high STR_211
 10416  014C28  6FA0               	movwf	(printf@f+1)& (0+255),b
 10417  014C2A  EC87  F0DB         	call	_printf	;wreg free
 10418                           
 10419                           ;ring_buffer_LUT.c: 181: printf("\n\rHelp messages and neutral responses appear in yello
      +                          w\n\r");
 10420  014C2E  0E4E               	movlw	low STR_5
 10421  014C30  0102               	movlb	2	; () banked
 10422  014C32  6F9F               	movwf	printf@f& (0+255),b
 10423  014C34  0EF0               	movlw	high STR_5
 10424  014C36  6FA0               	movwf	(printf@f+1)& (0+255),b
 10425  014C38  EC87  F0DB         	call	_printf	;wreg free
 10426                           
 10427                           ;ring_buffer_LUT.c: 183: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10428  014C3C  0E00               	movlw	0
 10429  014C3E  0103               	movlb	3	; () banked
 10430  014C40  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10431  014C42  0E00               	movlw	0
 10432  014C44  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10433  014C46  0E02               	movlw	2
 10434  014C48  ECE5  F0AE         	call	_terminalTextAttributes
 10435                           
 10436                           ;ring_buffer_LUT.c: 184: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 10437  014C4C  0EAC               	movlw	low STR_6
 10438  014C4E  0102               	movlb	2	; () banked
 10439  014C50  6F9F               	movwf	printf@f& (0+255),b
 10440  014C52  0EEE               	movlw	high STR_6
 10441  014C54  6FA0               	movwf	(printf@f+1)& (0+255),b
 10442  014C56  EC87  F0DB         	call	_printf	;wreg free
 10443                           
 10444                           ;ring_buffer_LUT.c: 185: terminalTextAttributes(CYAN, BLACK, NORMAL);
 10445  014C5A  0E00               	movlw	0
 10446  014C5C  0103               	movlb	3	; () banked
 10447  014C5E  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10448  014C60  0E00               	movlw	0
 10449  014C62  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10450  014C64  0E06               	movlw	6
 10451  014C66  ECE5  F0AE         	call	_terminalTextAttributes
 10452                           
 10453                           ;ring_buffer_LUT.c: 186: printf("Measurement responses appear in cyan\n\r");
 10454  014C6A  0EEA               	movlw	low STR_7
 10455  014C6C  0102               	movlb	2	; () banked
 10456  014C6E  6F9F               	movwf	printf@f& (0+255),b
 10457  014C70  0EF5               	movlw	high STR_7
 10458  014C72  6FA0               	movwf	(printf@f+1)& (0+255),b
 10459  014C74  EC87  F0DB         	call	_printf	;wreg free
 10460                           
 10461                           ;ring_buffer_LUT.c: 187: terminalTextAttributes(RED, BLACK, NORMAL);
 10462  014C78  0E00               	movlw	0
 10463  014C7A  0103               	movlb	3	; () banked
 10464  014C7C  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10465  014C7E  0E00               	movlw	0
 10466  014C80  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10467  014C82  0E01               	movlw	1
 10468  014C84  ECE5  F0AE         	call	_terminalTextAttributes
 10469                           
 10470                           ;ring_buffer_LUT.c: 188: printf("Errors and negative responses appear in red\n\r");
 10471  014C88  0EEE               	movlw	low STR_8
 10472  014C8A  0102               	movlb	2	; () banked
 10473  014C8C  6F9F               	movwf	printf@f& (0+255),b
 10474  014C8E  0EF3               	movlw	high STR_8
 10475  014C90  6FA0               	movwf	(printf@f+1)& (0+255),b
 10476  014C92  EC87  F0DB         	call	_printf	;wreg free
 10477                           
 10478                           ;ring_buffer_LUT.c: 189: terminalTextAttributesReset();
 10479  014C96  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10480                           
 10481                           ;ring_buffer_LUT.c: 190: printf("User input appears in white\n\r");
 10482  014C9A  0E9B               	movlw	low STR_9
 10483  014C9C  0102               	movlb	2	; () banked
 10484  014C9E  6F9F               	movwf	printf@f& (0+255),b
 10485  014CA0  0EF8               	movlw	high STR_9
 10486  014CA2  6FA0               	movwf	(printf@f+1)& (0+255),b
 10487  014CA4  EC87  F0DB         	call	_printf	;wreg free
 10488                           
 10489                           ;ring_buffer_LUT.c: 192: printf("\n\r");
 10490  014CA8  0E8F               	movlw	low (STR_333+21)
 10491  014CAA  0102               	movlb	2	; () banked
 10492  014CAC  6F9F               	movwf	printf@f& (0+255),b
 10493  014CAE  0EF9               	movlw	high (STR_333+21)
 10494  014CB0  6FA0               	movwf	(printf@f+1)& (0+255),b
 10495  014CB2  EC87  F0DB         	call	_printf	;wreg free
 10496                           
 10497                           ;ring_buffer_LUT.c: 194: }
 10498  014CB6  0012               	return	
 10499  014CB8                     l21048:
 10500                           
 10501                           ; BSR set to: 2
 10502                           ;ring_buffer_LUT.c: 197: else {;ring_buffer_LUT.c: 199: if (strlen(line) >= 1) {
 10503  014CB8  C3F9  F200         	movff	ringBufferLUT@line,strlen@s
 10504  014CBC  C3FA  F201         	movff	ringBufferLUT@line+1,strlen@s+1
 10505  014CC0  EC34  F0DD         	call	_strlen	;wreg free
 10506  014CC4  0102               	movlb	2	; () banked
 10507  014CC6  5100               	movf	?_strlen& (0+255),w,b
 10508  014CC8  1101               	iorwf	(?_strlen+1)& (0+255),w,b
 10509  014CCA  B4D8               	btfsc	status,2,c
 10510  014CCC  0012               	return	
 10511                           
 10512                           ; BSR set to: 2
 10513                           ;ring_buffer_LUT.c: 201: terminalTextAttributes(RED, BLACK, NORMAL);
 10514  014CCE  0E00               	movlw	0
 10515  014CD0  0103               	movlb	3	; () banked
 10516  014CD2  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10517  014CD4  0E00               	movlw	0
 10518  014CD6  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10519  014CD8  0E01               	movlw	1
 10520  014CDA  ECE5  F0AE         	call	_terminalTextAttributes
 10521                           
 10522                           ;ring_buffer_LUT.c: 202: printf("Unsupported or mis-entered command\n\r");
 10523  014CDE  0E36               	movlw	low STR_218
 10524  014CE0  0102               	movlb	2	; () banked
 10525  014CE2  6F9F               	movwf	printf@f& (0+255),b
 10526  014CE4  0EF6               	movlw	high STR_218
 10527  014CE6  6FA0               	movwf	(printf@f+1)& (0+255),b
 10528  014CE8  EC87  F0DB         	call	_printf	;wreg free
 10529                           
 10530                           ;ring_buffer_LUT.c: 203: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10531  014CEC  0E00               	movlw	0
 10532  014CEE  0103               	movlb	3	; () banked
 10533  014CF0  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10534  014CF2  0E00               	movlw	0
 10535  014CF4  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10536  014CF6  0E03               	movlw	3
 10537  014CF8  ECE5  F0AE         	call	_terminalTextAttributes
 10538                           
 10539                           ;ring_buffer_LUT.c: 204: printf("Commands are case sensitive, backspace is supported, co
      +                          mmand history is not supported\n\r");
 10540  014CFC  0EDA               	movlw	low STR_219
 10541  014CFE  0102               	movlb	2	; () banked
 10542  014D00  6F9F               	movwf	printf@f& (0+255),b
 10543  014D02  0EEC               	movlw	high STR_219
 10544  014D04  6FA0               	movwf	(printf@f+1)& (0+255),b
 10545  014D06  EC87  F0DB         	call	_printf	;wreg free
 10546                           
 10547                           ;ring_buffer_LUT.c: 205: printf("Call 'Help' for list of supported commands\n\r");
 10548  014D0A  0E65               	movlw	low (STR_10+2)
 10549  014D0C  0102               	movlb	2	; () banked
 10550  014D0E  6F9F               	movwf	printf@f& (0+255),b
 10551  014D10  0EF3               	movlw	high (STR_10+2)
 10552  014D12  6FA0               	movwf	(printf@f+1)& (0+255),b
 10553  014D14  EC87  F0DB         	call	_printf	;wreg free
 10554                           
 10555                           ;ring_buffer_LUT.c: 206: terminalTextAttributesReset();
 10556  014D18  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10557  014D1C  0012               	return	
 10558  014D1E                     __end_of_ringBufferLUT:
 10559                           	opt callstack 0
 10560                           
 10561 ;; *************** function _strcmp *****************
 10562 ;; Defined at:
 10563 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 10566 ;;		 -> line(64), 
 10567 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 10568 ;;		 -> STR_208(5), STR_207(22), STR_206(14), STR_204(18), 
 10569 ;;		 -> STR_202(17), STR_200(17), STR_184(15), STR_182(6), 
 10570 ;;		 -> STR_179(6), STR_176(6), 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  r               1    6[BANK2 ] char 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  2    0[BANK2 ] int 
 10575 ;; Registers used:
 10576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10582 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10585 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10586 ;;Total ram usage:        7 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:   11
 10589 ;; This function calls:
 10590 ;;		Nothing
 10591 ;; This function is called by:
 10592 ;;		_ringBufferLUT
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text3
 10597  01B102                     __ptext3:
 10598                           	opt callstack 0
 10599  01B102                     _strcmp:
 10600                           	opt callstack 17
 10601                           
 10602                           ;incstack = 0
 10603  01B102  D004               	goto	l19634
 10604  01B104                     l19632:
 10605                           
 10606                           ; BSR set to: 2
 10607  01B104  4B00               	infsnz	strcmp@s1& (0+255),f,b
 10608  01B106  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
 10609  01B108  4B02               	infsnz	strcmp@s2& (0+255),f,b
 10610  01B10A  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
 10611  01B10C                     l19634:
 10612  01B10C  C202  FFF6         	movff	strcmp@s2,tblptrl
 10613  01B110  C203  FFF7         	movff	strcmp@s2+1,tblptrh
 10614  01B114                     	if	0	;tblptru may be non-zero
 10615  01B114                     	endif
 10616  01B114                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10617  01B114  0E00               	movlw	low (__mediumconst shr (0+16))
 10618  01B116  6EF8               	movwf	tblptru,c
 10619  01B118                     	endif
 10620  01B118  0008               	tblrd		*
 10621  01B11A  CFF5 F204          	movff	tablat,??_strcmp
 10622  01B11E  C200  FFD9         	movff	strcmp@s1,fsr2l
 10623  01B122  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 10624  01B126  50DF               	movf	indf2,w,c
 10625  01B128  0102               	movlb	2	; () banked
 10626  01B12A  6F05               	movwf	(??_strcmp+1)& (0+255),b
 10627  01B12C  5104               	movf	??_strcmp& (0+255),w,b
 10628  01B12E  5D05               	subwf	(??_strcmp+1)& (0+255),w,b
 10629  01B130  6F06               	movwf	strcmp@r& (0+255),b
 10630  01B132  5106               	movf	strcmp@r& (0+255),w,b
 10631  01B134  A4D8               	btfss	status,2,c
 10632  01B136  D007               	goto	u24900
 10633                           
 10634                           ; BSR set to: 2
 10635  01B138  C200  FFD9         	movff	strcmp@s1,fsr2l
 10636  01B13C  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 10637  01B140  50DF               	movf	indf2,w,c
 10638  01B142  A4D8               	btfss	status,2,c
 10639  01B144  D7DF               	goto	l19632
 10640  01B146                     u24900:
 10641                           
 10642                           ; BSR set to: 2
 10643  01B146  5106               	movf	strcmp@r& (0+255),w,b
 10644  01B148  6F00               	movwf	?_strcmp& (0+255),b
 10645  01B14A  6B01               	clrf	(?_strcmp+1)& (0+255),b
 10646  01B14C  BF00               	btfsc	?_strcmp& (0+255),7,b
 10647  01B14E  0701               	decf	(?_strcmp+1)& (0+255),f,b
 10648                           
 10649                           ; BSR set to: 2
 10650  01B150  0012               	return		;funcret
 10651  01B152                     __end_of_strcmp:
 10652                           	opt callstack 0
 10653                           
 10654 ;; *************** function _printErrorHandlerStatus *****************
 10655 ;; Defined at:
 10656 ;;		line 215 in file "ring_buffer_LUT.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;		None
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10674 ;;Total ram usage:        0 bytes
 10675 ;; Hardware stack levels used:    1
 10676 ;; Hardware stack levels required when called:   16
 10677 ;; This function calls:
 10678 ;;		_getADCError
 10679 ;;		_getI2CError
 10680 ;;		_getUARTError
 10681 ;;		_printf
 10682 ;;		_terminalTextAttributes
 10683 ;;		_terminalTextAttributesReset
 10684 ;; This function is called by:
 10685 ;;		_ringBufferLUT
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text4
 10690  018D74                     __ptext4:
 10691                           	opt callstack 0
 10692  018D74                     _printErrorHandlerStatus:
 10693                           	opt callstack 12
 10694                           
 10695                           ;ring_buffer_LUT.c: 217: if (getADCError()) {
 10696                           
 10697                           ; BSR set to: 2
 10698                           ;incstack = 0
 10699  018D74  EC88  F0DF         	call	_getADCError	;wreg free
 10700  018D78  0900               	iorlw	0
 10701  018D7A  B4D8               	btfsc	status,2,c
 10702  018D7C  D03E               	goto	l19654
 10703                           
 10704                           ;ring_buffer_LUT.c: 219: terminalTextAttributes(RED, BLACK, NORMAL);
 10705  018D7E  0E00               	movlw	0
 10706  018D80  0103               	movlb	3	; () banked
 10707  018D82  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10708  018D84  0E00               	movlw	0
 10709  018D86  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10710  018D88  0E01               	movlw	1
 10711  018D8A  ECE5  F0AE         	call	_terminalTextAttributes
 10712                           
 10713                           ;ring_buffer_LUT.c: 220: printf("    ADC error(s) detected!\n\r");
 10714  018D8E  0EB9               	movlw	low STR_221
 10715  018D90  0102               	movlb	2	; () banked
 10716  018D92  6F9F               	movwf	printf@f& (0+255),b
 10717  018D94  0EF8               	movlw	high STR_221
 10718  018D96  6FA0               	movwf	(printf@f+1)& (0+255),b
 10719  018D98  EC87  F0DB         	call	_printf	;wreg free
 10720                           
 10721                           ;ring_buffer_LUT.c: 221: printf("    The following channels caused an ADC error:\n\r");
 10722  018D9C  0E9E               	movlw	low STR_222
 10723  018D9E  0102               	movlb	2	; () banked
 10724  018DA0  6F9F               	movwf	printf@f& (0+255),b
 10725  018DA2  0EF2               	movlw	high STR_222
 10726  018DA4  6FA0               	movwf	(printf@f+1)& (0+255),b
 10727  018DA6  EC87  F0DB         	call	_printf	;wreg free
 10728                           
 10729                           ;ring_buffer_LUT.c: 223: if (error_handler.ADC_general_error_flag) {
 10730  018DAA  0100               	movlb	0	; () banked
 10731  018DAC  51C6               	movf	(_error_handler+1)& (0+255),w,b
 10732  018DAE  B4D8               	btfsc	status,2,c
 10733  018DB0  D007               	goto	l19650
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;ring_buffer_LUT.c: 224: printf("        General ADC error\n\r");
 10737  018DB2  0EF2               	movlw	low STR_223
 10738  018DB4  0102               	movlb	2	; () banked
 10739  018DB6  6F9F               	movwf	printf@f& (0+255),b
 10740  018DB8  0EF8               	movlw	high STR_223
 10741  018DBA  6FA0               	movwf	(printf@f+1)& (0+255),b
 10742  018DBC  EC87  F0DB         	call	_printf	;wreg free
 10743  018DC0                     l19650:
 10744                           
 10745                           ;ring_buffer_LUT.c: 225: };ring_buffer_LUT.c: 227: if (error_handler.FVR_ADC_error_flag)
      +                           {
 10746  018DC0  0100               	movlb	0	; () banked
 10747  018DC2  51C5               	movf	_error_handler& (0+255),w,b
 10748  018DC4  B4D8               	btfsc	status,2,c
 10749  018DC6  D007               	goto	l2071
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;ring_buffer_LUT.c: 228: printf("        FVR\n\r");
 10753  018DC8  0E7C               	movlw	low STR_224
 10754  018DCA  0102               	movlb	2	; () banked
 10755  018DCC  6F9F               	movwf	printf@f& (0+255),b
 10756  018DCE  0EFC               	movlw	high STR_224
 10757  018DD0  6FA0               	movwf	(printf@f+1)& (0+255),b
 10758  018DD2  EC87  F0DB         	call	_printf	;wreg free
 10759  018DD6                     l2071:
 10760                           
 10761                           ;ring_buffer_LUT.c: 229: };ring_buffer_LUT.c: 231: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 10762  018DD6  0E00               	movlw	0
 10763  018DD8  0103               	movlb	3	; () banked
 10764  018DDA  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10765  018DDC  0E00               	movlw	0
 10766  018DDE  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10767  018DE0  0E03               	movlw	3
 10768  018DE2  ECE5  F0AE         	call	_terminalTextAttributes
 10769                           
 10770                           ;ring_buffer_LUT.c: 232: printf("    Call 'Clear ADC Errors' to clear ADC error(s)\n\r")
      +                          ;
 10771  018DE6  0ED0               	movlw	low STR_225
 10772  018DE8  0102               	movlb	2	; () banked
 10773  018DEA  6F9F               	movwf	printf@f& (0+255),b
 10774  018DEC  0EF1               	movlw	high STR_225
 10775  018DEE  6FA0               	movwf	(printf@f+1)& (0+255),b
 10776  018DF0  EC87  F0DB         	call	_printf	;wreg free
 10777                           
 10778                           ;ring_buffer_LUT.c: 233: terminalTextAttributesReset();
 10779  018DF4  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10780                           
 10781                           ;ring_buffer_LUT.c: 235: }
 10782  018DF8  D011               	goto	l19656
 10783  018DFA                     l19654:
 10784                           
 10785                           ;ring_buffer_LUT.c: 237: else {;ring_buffer_LUT.c: 239: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 10786  018DFA  0E00               	movlw	0
 10787  018DFC  0103               	movlb	3	; () banked
 10788  018DFE  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10789  018E00  0E00               	movlw	0
 10790  018E02  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10791  018E04  0E02               	movlw	2
 10792  018E06  ECE5  F0AE         	call	_terminalTextAttributes
 10793                           
 10794                           ;ring_buffer_LUT.c: 240: printf("    No ADC error(s) detected\n\r");
 10795  018E0A  0E5E               	movlw	low STR_226
 10796  018E0C  0102               	movlb	2	; () banked
 10797  018E0E  6F9F               	movwf	printf@f& (0+255),b
 10798  018E10  0EF8               	movlw	high STR_226
 10799  018E12  6FA0               	movwf	(printf@f+1)& (0+255),b
 10800  018E14  EC87  F0DB         	call	_printf	;wreg free
 10801                           
 10802                           ;ring_buffer_LUT.c: 241: terminalTextAttributesReset();
 10803  018E18  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10804  018E1C                     l19656:
 10805                           
 10806                           ;ring_buffer_LUT.c: 243: };ring_buffer_LUT.c: 245: if (getI2CError()) {
 10807  018E1C  ECA1  F0DD         	call	_getI2CError	;wreg free
 10808  018E20  0900               	iorlw	0
 10809  018E22  B4D8               	btfsc	status,2,c
 10810  018E24  D058               	goto	l19680
 10811                           
 10812                           ;ring_buffer_LUT.c: 247: terminalTextAttributes(RED, BLACK, NORMAL);
 10813  018E26  0E00               	movlw	0
 10814  018E28  0103               	movlb	3	; () banked
 10815  018E2A  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10816  018E2C  0E00               	movlw	0
 10817  018E2E  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10818  018E30  0E01               	movlw	1
 10819  018E32  ECE5  F0AE         	call	_terminalTextAttributes
 10820                           
 10821                           ;ring_buffer_LUT.c: 248: printf("    The following I2C Errors were detected:\n\r");
 10822  018E36  0E92               	movlw	low STR_227
 10823  018E38  0102               	movlb	2	; () banked
 10824  018E3A  6F9F               	movwf	printf@f& (0+255),b
 10825  018E3C  0EF3               	movlw	high STR_227
 10826  018E3E  6FA0               	movwf	(printf@f+1)& (0+255),b
 10827  018E40  EC87  F0DB         	call	_printf	;wreg free
 10828                           
 10829                           ;ring_buffer_LUT.c: 250: if (error_handler.I2C_General_error_flag) {
 10830  018E44  0100               	movlb	0	; () banked
 10831  018E46  51C7               	movf	(_error_handler+2)& (0+255),w,b
 10832  018E48  B4D8               	btfsc	status,2,c
 10833  018E4A  D007               	goto	l19664
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;ring_buffer_LUT.c: 251: printf("        I2C General Error\n\r");
 10837  018E4C  0ED6               	movlw	low STR_228
 10838  018E4E  0102               	movlb	2	; () banked
 10839  018E50  6F9F               	movwf	printf@f& (0+255),b
 10840  018E52  0EF8               	movlw	high STR_228
 10841  018E54  6FA0               	movwf	(printf@f+1)& (0+255),b
 10842  018E56  EC87  F0DB         	call	_printf	;wreg free
 10843  018E5A                     l19664:
 10844                           
 10845                           ;ring_buffer_LUT.c: 252: };ring_buffer_LUT.c: 254: if (error_handler.I2C_Ambient_Temp_Se
      +                          nse_error_flag) {
 10846  018E5A  0100               	movlb	0	; () banked
 10847  018E5C  51CB               	movf	(_error_handler+6)& (0+255),w,b
 10848  018E5E  B4D8               	btfsc	status,2,c
 10849  018E60  D007               	goto	l19668
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;ring_buffer_LUT.c: 255: printf("        I2C Ambient Temp Sensor Error\n\r");
 10853  018E62  0E74               	movlw	low STR_229
 10854  018E64  0102               	movlb	2	; () banked
 10855  018E66  6F9F               	movwf	printf@f& (0+255),b
 10856  018E68  0EF5               	movlw	high STR_229
 10857  018E6A  6FA0               	movwf	(printf@f+1)& (0+255),b
 10858  018E6C  EC87  F0DB         	call	_printf	;wreg free
 10859  018E70                     l19668:
 10860                           
 10861                           ;ring_buffer_LUT.c: 256: };ring_buffer_LUT.c: 258: if (error_handler.I2C_POS5_Temp_Sense
      +                          _error_flag) {
 10862  018E70  0100               	movlb	0	; () banked
 10863  018E72  51CA               	movf	(_error_handler+5)& (0+255),w,b
 10864  018E74  B4D8               	btfsc	status,2,c
 10865  018E76  D007               	goto	l19672
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;ring_buffer_LUT.c: 259: printf("        I2C POS5 Temp Sensor Error\n\r");
 10869  018E78  0E5B               	movlw	low STR_230
 10870  018E7A  0102               	movlb	2	; () banked
 10871  018E7C  6F9F               	movwf	printf@f& (0+255),b
 10872  018E7E  0EF6               	movlw	high STR_230
 10873  018E80  6FA0               	movwf	(printf@f+1)& (0+255),b
 10874  018E82  EC87  F0DB         	call	_printf	;wreg free
 10875  018E86                     l19672:
 10876                           
 10877                           ;ring_buffer_LUT.c: 260: };ring_buffer_LUT.c: 262: if (error_handler.I2C_QI_Temp_Sense_e
      +                          rror_flag) {
 10878  018E86  0100               	movlb	0	; () banked
 10879  018E88  51C9               	movf	(_error_handler+4)& (0+255),w,b
 10880  018E8A  B4D8               	btfsc	status,2,c
 10881  018E8C  D007               	goto	l19676
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;ring_buffer_LUT.c: 263: printf("        I2C QI Temp Sensor Error\n\r");
 10885  018E8E  0E54               	movlw	low STR_231
 10886  018E90  0102               	movlb	2	; () banked
 10887  018E92  6F9F               	movwf	printf@f& (0+255),b
 10888  018E94  0EF7               	movlw	high STR_231
 10889  018E96  6FA0               	movwf	(printf@f+1)& (0+255),b
 10890  018E98  EC87  F0DB         	call	_printf	;wreg free
 10891  018E9C                     l19676:
 10892                           
 10893                           ;ring_buffer_LUT.c: 264: };ring_buffer_LUT.c: 266: if (error_handler.I2C_OLED_error_flag
      +                          ) {
 10894  018E9C  0100               	movlb	0	; () banked
 10895  018E9E  51C8               	movf	(_error_handler+3)& (0+255),w,b
 10896  018EA0  B4D8               	btfsc	status,2,c
 10897  018EA2  D007               	goto	l2078
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;ring_buffer_LUT.c: 267: printf("        I2C OLED Display Error\n\r");
 10901  018EA4  0EFE               	movlw	low STR_232
 10902  018EA6  0102               	movlb	2	; () banked
 10903  018EA8  6F9F               	movwf	printf@f& (0+255),b
 10904  018EAA  0EF7               	movlw	high STR_232
 10905  018EAC  6FA0               	movwf	(printf@f+1)& (0+255),b
 10906  018EAE  EC87  F0DB         	call	_printf	;wreg free
 10907  018EB2                     l2078:
 10908                           
 10909                           ;ring_buffer_LUT.c: 268: };ring_buffer_LUT.c: 270: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 10910  018EB2  0E00               	movlw	0
 10911  018EB4  0103               	movlb	3	; () banked
 10912  018EB6  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10913  018EB8  0E00               	movlw	0
 10914  018EBA  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10915  018EBC  0E03               	movlw	3
 10916  018EBE  ECE5  F0AE         	call	_terminalTextAttributes
 10917                           
 10918                           ;ring_buffer_LUT.c: 271: printf("    Call 'Clear I2C Errors' to clear communications err
      +                          or(s)\n\r");
 10919  018EC2  0EB2               	movlw	low STR_233
 10920  018EC4  0102               	movlb	2	; () banked
 10921  018EC6  6F9F               	movwf	printf@f& (0+255),b
 10922  018EC8  0EED               	movlw	high STR_233
 10923  018ECA  6FA0               	movwf	(printf@f+1)& (0+255),b
 10924  018ECC  EC87  F0DB         	call	_printf	;wreg free
 10925                           
 10926                           ;ring_buffer_LUT.c: 272: terminalTextAttributesReset();
 10927  018ED0  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10928                           
 10929                           ;ring_buffer_LUT.c: 274: }
 10930  018ED4  D011               	goto	l19682
 10931  018ED6                     l19680:
 10932                           
 10933                           ;ring_buffer_LUT.c: 276: else {;ring_buffer_LUT.c: 278: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 10934  018ED6  0E00               	movlw	0
 10935  018ED8  0103               	movlb	3	; () banked
 10936  018EDA  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10937  018EDC  0E00               	movlw	0
 10938  018EDE  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10939  018EE0  0E02               	movlw	2
 10940  018EE2  ECE5  F0AE         	call	_terminalTextAttributes
 10941                           
 10942                           ;ring_buffer_LUT.c: 279: printf("    No I2C error(s) detected\n\r");
 10943  018EE6  0E3F               	movlw	low STR_234
 10944  018EE8  0102               	movlb	2	; () banked
 10945  018EEA  6F9F               	movwf	printf@f& (0+255),b
 10946  018EEC  0EF8               	movlw	high STR_234
 10947  018EEE  6FA0               	movwf	(printf@f+1)& (0+255),b
 10948  018EF0  EC87  F0DB         	call	_printf	;wreg free
 10949                           
 10950                           ;ring_buffer_LUT.c: 280: terminalTextAttributesReset();
 10951  018EF4  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10952  018EF8                     l19682:
 10953                           
 10954                           ;ring_buffer_LUT.c: 282: };ring_buffer_LUT.c: 284: if (getUARTError()) {
 10955  018EF8  ECB2  F0E0         	call	_getUARTError	;wreg free
 10956  018EFC  0900               	iorlw	0
 10957  018EFE  B4D8               	btfsc	status,2,c
 10958  018F00  D021               	goto	l19686
 10959                           
 10960                           ;ring_buffer_LUT.c: 286: terminalTextAttributes(RED, BLACK, NORMAL);
 10961  018F02  0E00               	movlw	0
 10962  018F04  0103               	movlb	3	; () banked
 10963  018F06  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10964  018F08  0E00               	movlw	0
 10965  018F0A  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10966  018F0C  0E01               	movlw	1
 10967  018F0E  ECE5  F0AE         	call	_terminalTextAttributes
 10968                           
 10969                           ;ring_buffer_LUT.c: 287: printf("    USB UART Error Detected\n\r");
 10970  018F12  0E7D               	movlw	low STR_235
 10971  018F14  0102               	movlb	2	; () banked
 10972  018F16  6F9F               	movwf	printf@f& (0+255),b
 10973  018F18  0EF8               	movlw	high STR_235
 10974  018F1A  6FA0               	movwf	(printf@f+1)& (0+255),b
 10975  018F1C  EC87  F0DB         	call	_printf	;wreg free
 10976                           
 10977                           ;ring_buffer_LUT.c: 289: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10978  018F20  0E00               	movlw	0
 10979  018F22  0103               	movlb	3	; () banked
 10980  018F24  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 10981  018F26  0E00               	movlw	0
 10982  018F28  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10983  018F2A  0E03               	movlw	3
 10984  018F2C  ECE5  F0AE         	call	_terminalTextAttributes
 10985                           
 10986                           ;ring_buffer_LUT.c: 290: printf("    Call 'Clear UART Errors' to clear communications er
      +                          ror(s)\n\r");
 10987  018F30  0E32               	movlw	low STR_236
 10988  018F32  0102               	movlb	2	; () banked
 10989  018F34  6F9F               	movwf	printf@f& (0+255),b
 10990  018F36  0EED               	movlw	high STR_236
 10991  018F38  6FA0               	movwf	(printf@f+1)& (0+255),b
 10992  018F3A  EC87  F0DB         	call	_printf	;wreg free
 10993                           
 10994                           ;ring_buffer_LUT.c: 291: terminalTextAttributesReset();
 10995  018F3E  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 10996                           
 10997                           ;ring_buffer_LUT.c: 293: }
 10998  018F42  0012               	return	
 10999  018F44                     l19686:
 11000                           
 11001                           ;ring_buffer_LUT.c: 295: else {;ring_buffer_LUT.c: 297: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11002  018F44  0E00               	movlw	0
 11003  018F46  0103               	movlb	3	; () banked
 11004  018F48  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11005  018F4A  0E00               	movlw	0
 11006  018F4C  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11007  018F4E  0E02               	movlw	2
 11008  018F50  ECE5  F0AE         	call	_terminalTextAttributes
 11009                           
 11010                           ;ring_buffer_LUT.c: 298: printf("    No UART error(s) detected\n\r");
 11011  018F54  0E1F               	movlw	low STR_237
 11012  018F56  0102               	movlb	2	; () banked
 11013  018F58  6F9F               	movwf	printf@f& (0+255),b
 11014  018F5A  0EF8               	movlw	high STR_237
 11015  018F5C  6FA0               	movwf	(printf@f+1)& (0+255),b
 11016  018F5E  EC87  F0DB         	call	_printf	;wreg free
 11017                           
 11018                           ;ring_buffer_LUT.c: 299: terminalTextAttributesReset();
 11019  018F62  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 11020  018F66  0012               	return		;funcret
 11021  018F68                     __end_of_printErrorHandlerStatus:
 11022                           	opt callstack 0
 11023                           
 11024 ;; *************** function _printCurrentMeasurements *****************
 11025 ;; Defined at:
 11026 ;;		line 306 in file "ring_buffer_LUT.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;		None
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11044 ;;Total ram usage:        0 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:   16
 11047 ;; This function calls:
 11048 ;;		___fldiv
 11049 ;;		_getNXQChargeStateString
 11050 ;;		_getStringSecondsAsTime
 11051 ;;		_printf
 11052 ;;		_terminalTextAttributes
 11053 ;;		_terminalTextAttributesReset
 11054 ;; This function is called by:
 11055 ;;		_ringBufferLUT
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text5
 11060  014D1E                     __ptext5:
 11061                           	opt callstack 0
 11062  014D1E                     _printCurrentMeasurements:
 11063                           	opt callstack 12
 11064                           
 11065                           ;ring_buffer_LUT.c: 308: printf("\n\r");
 11066                           
 11067                           ;incstack = 0
 11068  014D1E  0E8F               	movlw	low (STR_333+21)
 11069  014D20  0102               	movlb	2	; () banked
 11070  014D22  6F9F               	movwf	printf@f& (0+255),b
 11071  014D24  0EF9               	movlw	high (STR_333+21)
 11072  014D26  6FA0               	movwf	(printf@f+1)& (0+255),b
 11073  014D28  EC87  F0DB         	call	_printf	;wreg free
 11074                           
 11075                           ;ring_buffer_LUT.c: 310: terminalTextAttributes(GREEN, BLACK, BOLD);
 11076  014D2C  0E00               	movlw	0
 11077  014D2E  0103               	movlb	3	; () banked
 11078  014D30  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11079  014D32  0E01               	movlw	1
 11080  014D34  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11081  014D36  0E02               	movlw	2
 11082  014D38  ECE5  F0AE         	call	_terminalTextAttributes
 11083                           
 11084                           ;ring_buffer_LUT.c: 311: printf("System Measurements at time of command call:\n\r");
 11085  014D3C  0E34               	movlw	low STR_239
 11086  014D3E  0102               	movlb	2	; () banked
 11087  014D40  6F9F               	movwf	printf@f& (0+255),b
 11088  014D42  0EF3               	movlw	high STR_239
 11089  014D44  6FA0               	movwf	(printf@f+1)& (0+255),b
 11090  014D46  EC87  F0DB         	call	_printf	;wreg free
 11091                           
 11092                           ;ring_buffer_LUT.c: 313: printf("\n\r");
 11093  014D4A  0E8F               	movlw	low (STR_333+21)
 11094  014D4C  0102               	movlb	2	; () banked
 11095  014D4E  6F9F               	movwf	printf@f& (0+255),b
 11096  014D50  0EF9               	movlw	high (STR_333+21)
 11097  014D52  6FA0               	movwf	(printf@f+1)& (0+255),b
 11098  014D54  EC87  F0DB         	call	_printf	;wreg free
 11099                           
 11100                           ;ring_buffer_LUT.c: 315: if (nxq_charge_state == QI_Error) {
 11101  014D58  0E03               	movlw	3
 11102  014D5A  0101               	movlb	1	; () banked
 11103  014D5C  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11104  014D5E  A4D8               	btfss	status,2,c
 11105  014D60  D010               	goto	l19694
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;ring_buffer_LUT.c: 316: terminalTextAttributes(RED, BLACK, NORMAL);
 11109  014D62  0E00               	movlw	0
 11110  014D64  0103               	movlb	3	; () banked
 11111  014D66  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11112  014D68  0E00               	movlw	0
 11113  014D6A  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11114  014D6C  0E01               	movlw	1
 11115  014D6E  ECE5  F0AE         	call	_terminalTextAttributes
 11116                           
 11117                           ;ring_buffer_LUT.c: 317: printf("    QI Charger is in Error State\n\r");
 11118  014D72  0E31               	movlw	low STR_241
 11119  014D74  0102               	movlb	2	; () banked
 11120  014D76  6F9F               	movwf	printf@f& (0+255),b
 11121  014D78  0EF7               	movlw	high STR_241
 11122  014D7A  6FA0               	movwf	(printf@f+1)& (0+255),b
 11123  014D7C  EC87  F0DB         	call	_printf	;wreg free
 11124                           
 11125                           ;ring_buffer_LUT.c: 318: }
 11126  014D80  D029               	goto	l2086
 11127  014D82                     l19694:
 11128                           
 11129                           ; BSR set to: 1
 11130                           ;ring_buffer_LUT.c: 319: else if (nxq_charge_state == QI_Fully_Charged) {
 11131  014D82  0E02               	movlw	2
 11132  014D84  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11133  014D86  A4D8               	btfss	status,2,c
 11134  014D88  D010               	goto	l19698
 11135                           
 11136                           ; BSR set to: 1
 11137                           ;ring_buffer_LUT.c: 320: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11138  014D8A  0E00               	movlw	0
 11139  014D8C  0103               	movlb	3	; () banked
 11140  014D8E  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11141  014D90  0E00               	movlw	0
 11142  014D92  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11143  014D94  0E02               	movlw	2
 11144  014D96  ECE5  F0AE         	call	_terminalTextAttributes
 11145                           
 11146                           ;ring_buffer_LUT.c: 321: printf("    QI wireless power converter has fully charged phone
      +                          \n\r");
 11147  014D9A  0EDA               	movlw	low STR_242
 11148  014D9C  0102               	movlb	2	; () banked
 11149  014D9E  6F9F               	movwf	printf@f& (0+255),b
 11150  014DA0  0EEF               	movlw	high STR_242
 11151  014DA2  6FA0               	movwf	(printf@f+1)& (0+255),b
 11152  014DA4  EC87  F0DB         	call	_printf	;wreg free
 11153                           
 11154                           ;ring_buffer_LUT.c: 322: }
 11155  014DA8  D015               	goto	l2086
 11156  014DAA                     l19698:
 11157                           
 11158                           ; BSR set to: 1
 11159                           ;ring_buffer_LUT.c: 323: else {;ring_buffer_LUT.c: 324: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11160  014DAA  0E00               	movlw	0
 11161  014DAC  0103               	movlb	3	; () banked
 11162  014DAE  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11163  014DB0  0E00               	movlw	0
 11164  014DB2  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11165  014DB4  0E02               	movlw	2
 11166  014DB6  ECE5  F0AE         	call	_terminalTextAttributes
 11167                           
 11168                           ;ring_buffer_LUT.c: 325: printf("    QI wireless power converter is currently %s\n\r", g
      +                          etNXQChargeStateString());
 11169  014DBA  0E02               	movlw	low STR_243
 11170  014DBC  0102               	movlb	2	; () banked
 11171  014DBE  6F9F               	movwf	printf@f& (0+255),b
 11172  014DC0  0EF3               	movlw	high STR_243
 11173  014DC2  6FA0               	movwf	(printf@f+1)& (0+255),b
 11174  014DC4  EC50  F0D7         	call	_getNXQChargeStateString	;wreg free
 11175  014DC8  C200  F2A1         	movff	?_getNXQChargeStateString,?_printf+2
 11176  014DCC  C201  F2A2         	movff	?_getNXQChargeStateString+1,?_printf+3
 11177  014DD0  EC87  F0DB         	call	_printf	;wreg free
 11178  014DD4                     l2086:
 11179                           
 11180                           ;ring_buffer_LUT.c: 326: };ring_buffer_LUT.c: 328: printf("\n\r");
 11181  014DD4  0E8F               	movlw	low (STR_333+21)
 11182  014DD6  0102               	movlb	2	; () banked
 11183  014DD8  6F9F               	movwf	printf@f& (0+255),b
 11184  014DDA  0EF9               	movlw	high (STR_333+21)
 11185  014DDC  6FA0               	movwf	(printf@f+1)& (0+255),b
 11186  014DDE  EC87  F0DB         	call	_printf	;wreg free
 11187                           
 11188                           ;ring_buffer_LUT.c: 330: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11189  014DE2  0E00               	movlw	0
 11190  014DE4  0103               	movlb	3	; () banked
 11191  014DE6  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11192  014DE8  0E00               	movlw	0
 11193  014DEA  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11194  014DEC  0E02               	movlw	2
 11195  014DEE  ECE5  F0AE         	call	_terminalTextAttributes
 11196                           
 11197                           ;ring_buffer_LUT.c: 331: if (QI_charge_time > 0) printf("    System has been charging a 
      +                          phone for %s\n\r", getStringSecondsAsTime(QI_charge_time));
 11198  014DF2  0102               	movlb	2	; () banked
 11199  014DF4  51B2               	movf	_QI_charge_time& (0+255),w,b
 11200  014DF6  11B3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 11201  014DF8  11B4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 11202  014DFA  11B5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 11203  014DFC  B4D8               	btfsc	status,2,c
 11204  014DFE  D014               	goto	l2089
 11205                           
 11206                           ; BSR set to: 2
 11207  014E00  0EC0               	movlw	low STR_245
 11208  014E02  6F9F               	movwf	printf@f& (0+255),b
 11209  014E04  0EF3               	movlw	high STR_245
 11210  014E06  6FA0               	movwf	(printf@f+1)& (0+255),b
 11211  014E08  C2B2  F297         	movff	_QI_charge_time,getStringSecondsAsTime@input_seconds
 11212  014E0C  C2B3  F298         	movff	_QI_charge_time+1,getStringSecondsAsTime@input_seconds+1
 11213  014E10  C2B4  F299         	movff	_QI_charge_time+2,getStringSecondsAsTime@input_seconds+2
 11214  014E14  C2B5  F29A         	movff	_QI_charge_time+3,getStringSecondsAsTime@input_seconds+3
 11215  014E18  EC12  F0AD         	call	_getStringSecondsAsTime	;wreg free
 11216  014E1C  C297  F2A1         	movff	?_getStringSecondsAsTime,?_printf+2
 11217  014E20  C298  F2A2         	movff	?_getStringSecondsAsTime+1,?_printf+3
 11218  014E24  EC87  F0DB         	call	_printf	;wreg free
 11219  014E28                     l2089:
 11220                           
 11221                           ;ring_buffer_LUT.c: 333: printf("\n\r");
 11222  014E28  0E8F               	movlw	low (STR_333+21)
 11223  014E2A  0102               	movlb	2	; () banked
 11224  014E2C  6F9F               	movwf	printf@f& (0+255),b
 11225  014E2E  0EF9               	movlw	high (STR_333+21)
 11226  014E30  6FA0               	movwf	(printf@f+1)& (0+255),b
 11227  014E32  EC87  F0DB         	call	_printf	;wreg free
 11228                           
 11229                           ;ring_buffer_LUT.c: 335: terminalTextAttributes(CYAN, BLACK, BOLD);
 11230  014E36  0E00               	movlw	0
 11231  014E38  0103               	movlb	3	; () banked
 11232  014E3A  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11233  014E3C  0E01               	movlw	1
 11234  014E3E  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11235  014E40  0E06               	movlw	6
 11236  014E42  ECE5  F0AE         	call	_terminalTextAttributes
 11237                           
 11238                           ;ring_buffer_LUT.c: 336: printf("    System Voltages:\n\r");
 11239  014E46  0EF1               	movlw	low STR_247
 11240  014E48  0102               	movlb	2	; () banked
 11241  014E4A  6F9F               	movwf	printf@f& (0+255),b
 11242  014E4C  0EF9               	movlw	high STR_247
 11243  014E4E  6FA0               	movwf	(printf@f+1)& (0+255),b
 11244  014E50  EC87  F0DB         	call	_printf	;wreg free
 11245                           
 11246                           ;ring_buffer_LUT.c: 337: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11247  014E54  0E00               	movlw	0
 11248  014E56  0103               	movlb	3	; () banked
 11249  014E58  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11250  014E5A  0E00               	movlw	0
 11251  014E5C  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11252  014E5E  0E06               	movlw	6
 11253  014E60  ECE5  F0AE         	call	_terminalTextAttributes
 11254                           
 11255                           ;ring_buffer_LUT.c: 338: printf("        +12V rail measured as %+.3f Volts\n\r", adc_res
      +                          ults.pos12_adc_result);
 11256  014E64  0E76               	movlw	low STR_248
 11257  014E66  0102               	movlb	2	; () banked
 11258  014E68  6F9F               	movwf	printf@f& (0+255),b
 11259  014E6A  0EF4               	movlw	high STR_248
 11260  014E6C  6FA0               	movwf	(printf@f+1)& (0+255),b
 11261  014E6E  C0EA  F2A1         	movff	_adc_results+12,?_printf+2
 11262  014E72  C0EB  F2A2         	movff	_adc_results+13,?_printf+3
 11263  014E76  C0EC  F2A3         	movff	_adc_results+14,?_printf+4
 11264  014E7A  C0ED  F2A4         	movff	_adc_results+15,?_printf+5
 11265  014E7E  EC87  F0DB         	call	_printf	;wreg free
 11266                           
 11267                           ;ring_buffer_LUT.c: 339: printf("        +5V rail measured as %+.3f Volts\n\r", adc_resu
      +                          lts.pos5_adc_result);
 11268  014E82  0ECE               	movlw	low STR_249
 11269  014E84  0102               	movlb	2	; () banked
 11270  014E86  6F9F               	movwf	printf@f& (0+255),b
 11271  014E88  0EF4               	movlw	high STR_249
 11272  014E8A  6FA0               	movwf	(printf@f+1)& (0+255),b
 11273  014E8C  C0E6  F2A1         	movff	_adc_results+8,?_printf+2
 11274  014E90  C0E7  F2A2         	movff	_adc_results+9,?_printf+3
 11275  014E94  C0E8  F2A3         	movff	_adc_results+10,?_printf+4
 11276  014E98  C0E9  F2A4         	movff	_adc_results+11,?_printf+5
 11277  014E9C  EC87  F0DB         	call	_printf	;wreg free
 11278                           
 11279                           ;ring_buffer_LUT.c: 341: printf("\n\r");
 11280  014EA0  0E8F               	movlw	low (STR_333+21)
 11281  014EA2  0102               	movlb	2	; () banked
 11282  014EA4  6F9F               	movwf	printf@f& (0+255),b
 11283  014EA6  0EF9               	movlw	high (STR_333+21)
 11284  014EA8  6FA0               	movwf	(printf@f+1)& (0+255),b
 11285  014EAA  EC87  F0DB         	call	_printf	;wreg free
 11286                           
 11287                           ;ring_buffer_LUT.c: 343: terminalTextAttributes(CYAN, BLACK, BOLD);
 11288  014EAE  0E00               	movlw	0
 11289  014EB0  0103               	movlb	3	; () banked
 11290  014EB2  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11291  014EB4  0E01               	movlw	1
 11292  014EB6  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11293  014EB8  0E06               	movlw	6
 11294  014EBA  ECE5  F0AE         	call	_terminalTextAttributes
 11295                           
 11296                           ;ring_buffer_LUT.c: 344: printf("    System Currents:\n\r");
 11297  014EBE  0E08               	movlw	low STR_251
 11298  014EC0  0102               	movlb	2	; () banked
 11299  014EC2  6F9F               	movwf	printf@f& (0+255),b
 11300  014EC4  0EFA               	movlw	high STR_251
 11301  014EC6  6FA0               	movwf	(printf@f+1)& (0+255),b
 11302  014EC8  EC87  F0DB         	call	_printf	;wreg free
 11303                           
 11304                           ;ring_buffer_LUT.c: 345: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11305  014ECC  0E00               	movlw	0
 11306  014ECE  0103               	movlb	3	; () banked
 11307  014ED0  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11308  014ED2  0E00               	movlw	0
 11309  014ED4  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11310  014ED6  0E06               	movlw	6
 11311  014ED8  ECE5  F0AE         	call	_terminalTextAttributes
 11312                           
 11313                           ;ring_buffer_LUT.c: 346: printf("        +12V input current measured as %+.3f Amps\n\r",
      +                           adc_results.pos12_isns_adc_result);
 11314  014EDC  0E04               	movlw	low STR_252
 11315  014EDE  0102               	movlb	2	; () banked
 11316  014EE0  6F9F               	movwf	printf@f& (0+255),b
 11317  014EE2  0EF2               	movlw	high STR_252
 11318  014EE4  6FA0               	movwf	(printf@f+1)& (0+255),b
 11319  014EE6  C0EE  F2A1         	movff	_adc_results+16,?_printf+2
 11320  014EEA  C0EF  F2A2         	movff	_adc_results+17,?_printf+3
 11321  014EEE  C0F0  F2A3         	movff	_adc_results+18,?_printf+4
 11322  014EF2  C0F1  F2A4         	movff	_adc_results+19,?_printf+5
 11323  014EF6  EC87  F0DB         	call	_printf	;wreg free
 11324                           
 11325                           ;ring_buffer_LUT.c: 347: printf("        QI converter current measured as %+.3f Amps\n\r
      +                          ", adc_results.qi_isns_adc_result);
 11326  014EFA  0E9A               	movlw	low STR_253
 11327  014EFC  0102               	movlb	2	; () banked
 11328  014EFE  6F9F               	movwf	printf@f& (0+255),b
 11329  014F00  0EF1               	movlw	high STR_253
 11330  014F02  6FA0               	movwf	(printf@f+1)& (0+255),b
 11331  014F04  C0F2  F2A1         	movff	_adc_results+20,?_printf+2
 11332  014F08  C0F3  F2A2         	movff	_adc_results+21,?_printf+3
 11333  014F0C  C0F4  F2A3         	movff	_adc_results+22,?_printf+4
 11334  014F10  C0F5  F2A4         	movff	_adc_results+23,?_printf+5
 11335  014F14  EC87  F0DB         	call	_printf	;wreg free
 11336                           
 11337                           ;ring_buffer_LUT.c: 349: printf("\n\r");
 11338  014F18  0E8F               	movlw	low (STR_333+21)
 11339  014F1A  0102               	movlb	2	; () banked
 11340  014F1C  6F9F               	movwf	printf@f& (0+255),b
 11341  014F1E  0EF9               	movlw	high (STR_333+21)
 11342  014F20  6FA0               	movwf	(printf@f+1)& (0+255),b
 11343  014F22  EC87  F0DB         	call	_printf	;wreg free
 11344                           
 11345                           ;ring_buffer_LUT.c: 351: terminalTextAttributes(CYAN, BLACK, BOLD);
 11346  014F26  0E00               	movlw	0
 11347  014F28  0103               	movlb	3	; () banked
 11348  014F2A  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11349  014F2C  0E01               	movlw	1
 11350  014F2E  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11351  014F30  0E06               	movlw	6
 11352  014F32  ECE5  F0AE         	call	_terminalTextAttributes
 11353                           
 11354                           ;ring_buffer_LUT.c: 352: printf("    System Power:\n\r");
 11355  014F36  0E20               	movlw	low STR_255
 11356  014F38  0102               	movlb	2	; () banked
 11357  014F3A  6F9F               	movwf	printf@f& (0+255),b
 11358  014F3C  0EFB               	movlw	high STR_255
 11359  014F3E  6FA0               	movwf	(printf@f+1)& (0+255),b
 11360  014F40  EC87  F0DB         	call	_printf	;wreg free
 11361                           
 11362                           ;ring_buffer_LUT.c: 353: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11363  014F44  0E00               	movlw	0
 11364  014F46  0103               	movlb	3	; () banked
 11365  014F48  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11366  014F4A  0E00               	movlw	0
 11367  014F4C  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11368  014F4E  0E06               	movlw	6
 11369  014F50  ECE5  F0AE         	call	_terminalTextAttributes
 11370                           
 11371                           ;ring_buffer_LUT.c: 354: printf("        Electrical Input Power calculated as %+.3f Watt
      +                          s\n\r", adc_calculations.input_power);
 11372  014F54  0E9F               	movlw	low STR_256
 11373  014F56  0102               	movlb	2	; () banked
 11374  014F58  6F9F               	movwf	printf@f& (0+255),b
 11375  014F5A  0EEF               	movlw	high STR_256
 11376  014F5C  6FA0               	movwf	(printf@f+1)& (0+255),b
 11377  014F5E  C0B9  F2A1         	movff	_adc_calculations,?_printf+2
 11378  014F62  C0BA  F2A2         	movff	_adc_calculations+1,?_printf+3
 11379  014F66  C0BB  F2A3         	movff	_adc_calculations+2,?_printf+4
 11380  014F6A  C0BC  F2A4         	movff	_adc_calculations+3,?_printf+5
 11381  014F6E  EC87  F0DB         	call	_printf	;wreg free
 11382                           
 11383                           ;ring_buffer_LUT.c: 355: printf("        Wireless Output Power calculated as %+.3f Watts
      +                          \n\r", adc_calculations.output_power);
 11384  014F72  0E14               	movlw	low STR_257
 11385  014F74  0102               	movlb	2	; () banked
 11386  014F76  6F9F               	movwf	printf@f& (0+255),b
 11387  014F78  0EF0               	movlw	high STR_257
 11388  014F7A  6FA0               	movwf	(printf@f+1)& (0+255),b
 11389  014F7C  C0BD  F2A1         	movff	_adc_calculations+4,?_printf+2
 11390  014F80  C0BE  F2A2         	movff	_adc_calculations+5,?_printf+3
 11391  014F84  C0BF  F2A3         	movff	_adc_calculations+6,?_printf+4
 11392  014F88  C0C0  F2A4         	movff	_adc_calculations+7,?_printf+5
 11393  014F8C  EC87  F0DB         	call	_printf	;wreg free
 11394                           
 11395                           ;ring_buffer_LUT.c: 357: printf("\n\r");
 11396  014F90  0E8F               	movlw	low (STR_333+21)
 11397  014F92  0102               	movlb	2	; () banked
 11398  014F94  6F9F               	movwf	printf@f& (0+255),b
 11399  014F96  0EF9               	movlw	high (STR_333+21)
 11400  014F98  6FA0               	movwf	(printf@f+1)& (0+255),b
 11401  014F9A  EC87  F0DB         	call	_printf	;wreg free
 11402                           
 11403                           ;ring_buffer_LUT.c: 359: terminalTextAttributes(CYAN, BLACK, BOLD);
 11404  014F9E  0E00               	movlw	0
 11405  014FA0  0103               	movlb	3	; () banked
 11406  014FA2  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11407  014FA4  0E01               	movlw	1
 11408  014FA6  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11409  014FA8  0E06               	movlw	6
 11410  014FAA  ECE5  F0AE         	call	_terminalTextAttributes
 11411                           
 11412                           ;ring_buffer_LUT.c: 360: printf("    System Efficiency calculated as %.3f%%\n\r", adc_ca
      +                          lculations.efficiency);
 11413  014FAE  0E1C               	movlw	low STR_259
 11414  014FB0  0102               	movlb	2	; () banked
 11415  014FB2  6F9F               	movwf	printf@f& (0+255),b
 11416  014FB4  0EF4               	movlw	high STR_259
 11417  014FB6  6FA0               	movwf	(printf@f+1)& (0+255),b
 11418  014FB8  C0C1  F2A1         	movff	_adc_calculations+8,?_printf+2
 11419  014FBC  C0C2  F2A2         	movff	_adc_calculations+9,?_printf+3
 11420  014FC0  C0C3  F2A3         	movff	_adc_calculations+10,?_printf+4
 11421  014FC4  C0C4  F2A4         	movff	_adc_calculations+11,?_printf+5
 11422  014FC8  EC87  F0DB         	call	_printf	;wreg free
 11423                           
 11424                           ;ring_buffer_LUT.c: 362: printf("\n\r");
 11425  014FCC  0E8F               	movlw	low (STR_333+21)
 11426  014FCE  0102               	movlb	2	; () banked
 11427  014FD0  6F9F               	movwf	printf@f& (0+255),b
 11428  014FD2  0EF9               	movlw	high (STR_333+21)
 11429  014FD4  6FA0               	movwf	(printf@f+1)& (0+255),b
 11430  014FD6  EC87  F0DB         	call	_printf	;wreg free
 11431                           
 11432                           ;ring_buffer_LUT.c: 364: printf("    System Switching Frequencies:\n\r");
 11433  014FDA  0EA4               	movlw	low STR_261
 11434  014FDC  0102               	movlb	2	; () banked
 11435  014FDE  6F9F               	movwf	printf@f& (0+255),b
 11436  014FE0  0EF6               	movlw	high STR_261
 11437  014FE2  6FA0               	movwf	(printf@f+1)& (0+255),b
 11438  014FE4  EC87  F0DB         	call	_printf	;wreg free
 11439                           
 11440                           ;ring_buffer_LUT.c: 365: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11441  014FE8  0E00               	movlw	0
 11442  014FEA  0103               	movlb	3	; () banked
 11443  014FEC  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11444  014FEE  0E00               	movlw	0
 11445  014FF0  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11446  014FF2  0E06               	movlw	6
 11447  014FF4  ECE5  F0AE         	call	_terminalTextAttributes
 11448                           
 11449                           ;ring_buffer_LUT.c: 366: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        POS5 Converter is in Burst Mode\n\r");
 11450  014FF8  0101               	movlb	1	; () banked
 11451  014FFA  5195               	movf	_nxq_charge_state& (0+255),w,b
 11452  014FFC  B4D8               	btfsc	status,2,c
 11453  014FFE  D004               	goto	u25050
 11454                           
 11455                           ; BSR set to: 1
 11456  015000  0E03               	movlw	3
 11457  015002  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11458  015004  A4D8               	btfss	status,2,c
 11459  015006  D008               	goto	l19710
 11460  015008                     u25050:
 11461                           
 11462                           ; BSR set to: 1
 11463  015008  0EF9               	movlw	low STR_262
 11464  01500A  0102               	movlb	2	; () banked
 11465  01500C  6F9F               	movwf	printf@f& (0+255),b
 11466  01500E  0EF4               	movlw	high STR_262
 11467  015010  6FA0               	movwf	(printf@f+1)& (0+255),b
 11468  015012  EC87  F0DB         	call	_printf	;wreg free
 11469  015016  D00F               	goto	l19712
 11470  015018                     l19710:
 11471                           
 11472                           ; BSR set to: 1
 11473                           ;ring_buffer_LUT.c: 367: else printf("        Current +5V Switching Frequency measured a
      +                          s %+.1f MHz\n\r", 2.5);
 11474  015018  0E72               	movlw	low STR_263
 11475  01501A  0102               	movlb	2	; () banked
 11476  01501C  6F9F               	movwf	printf@f& (0+255),b
 11477  01501E  0EED               	movlw	high STR_263
 11478  015020  6FA0               	movwf	(printf@f+1)& (0+255),b
 11479  015022  0E00               	movlw	0
 11480  015024  6FA1               	movwf	(?_printf+2)& (0+255),b
 11481  015026  0E00               	movlw	0
 11482  015028  6FA2               	movwf	(?_printf+3)& (0+255),b
 11483  01502A  0E20               	movlw	32
 11484  01502C  6FA3               	movwf	(?_printf+4)& (0+255),b
 11485  01502E  0E40               	movlw	64
 11486  015030  6FA4               	movwf	(?_printf+5)& (0+255),b
 11487  015032  EC87  F0DB         	call	_printf	;wreg free
 11488  015036                     l19712:
 11489                           
 11490                           ;ring_buffer_LUT.c: 368: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        QI Converter is in Burst Mode\n\r");
 11491  015036  0101               	movlb	1	; () banked
 11492  015038  5195               	movf	_nxq_charge_state& (0+255),w,b
 11493  01503A  B4D8               	btfsc	status,2,c
 11494  01503C  D004               	goto	u25070
 11495                           
 11496                           ; BSR set to: 1
 11497  01503E  0E03               	movlw	3
 11498  015040  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11499  015042  A4D8               	btfss	status,2,c
 11500  015044  D008               	goto	l19718
 11501  015046                     u25070:
 11502                           
 11503                           ; BSR set to: 1
 11504  015046  0E4C               	movlw	low STR_264
 11505  015048  0102               	movlb	2	; () banked
 11506  01504A  6F9F               	movwf	printf@f& (0+255),b
 11507  01504C  0EF5               	movlw	high STR_264
 11508  01504E  6FA0               	movwf	(printf@f+1)& (0+255),b
 11509  015050  EC87  F0DB         	call	_printf	;wreg free
 11510  015054  D021               	goto	l2097
 11511  015056                     l19718:
 11512                           
 11513                           ; BSR set to: 1
 11514                           ;ring_buffer_LUT.c: 369: else printf("        Current QI Switching Frequency measured as
      +                           %+.3f kHz\n\r", freq_meas_results.QI_Freq_Meas / 1000.0);
 11515  015056  0EF1               	movlw	low STR_265
 11516  015058  0102               	movlb	2	; () banked
 11517  01505A  6F9F               	movwf	printf@f& (0+255),b
 11518  01505C  0EED               	movlw	high STR_265
 11519  01505E  6FA0               	movwf	(printf@f+1)& (0+255),b
 11520  015060  C168  F200         	movff	_freq_meas_results,___fldiv@b
 11521  015064  C169  F201         	movff	_freq_meas_results+1,___fldiv@b+1
 11522  015068  C16A  F202         	movff	_freq_meas_results+2,___fldiv@b+2
 11523  01506C  C16B  F203         	movff	_freq_meas_results+3,___fldiv@b+3
 11524  015070  0E00               	movlw	0
 11525  015072  6F04               	movwf	___fldiv@a& (0+255),b
 11526  015074  0E00               	movlw	0
 11527  015076  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 11528  015078  0E7A               	movlw	122
 11529  01507A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 11530  01507C  0E44               	movlw	68
 11531  01507E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 11532  015080  EC40  F0BE         	call	___fldiv	;wreg free
 11533  015084  C200  F2A1         	movff	?___fldiv,?_printf+2
 11534  015088  C201  F2A2         	movff	?___fldiv+1,?_printf+3
 11535  01508C  C202  F2A3         	movff	?___fldiv+2,?_printf+4
 11536  015090  C203  F2A4         	movff	?___fldiv+3,?_printf+5
 11537  015094  EC87  F0DB         	call	_printf	;wreg free
 11538  015098                     l2097:
 11539                           
 11540                           ;ring_buffer_LUT.c: 371: printf("\n\r");
 11541  015098  0E8F               	movlw	low (STR_333+21)
 11542  01509A  0102               	movlb	2	; () banked
 11543  01509C  6F9F               	movwf	printf@f& (0+255),b
 11544  01509E  0EF9               	movlw	high (STR_333+21)
 11545  0150A0  6FA0               	movwf	(printf@f+1)& (0+255),b
 11546  0150A2  EC87  F0DB         	call	_printf	;wreg free
 11547                           
 11548                           ;ring_buffer_LUT.c: 373: terminalTextAttributes(CYAN, BLACK, BOLD);
 11549  0150A6  0E00               	movlw	0
 11550  0150A8  0103               	movlb	3	; () banked
 11551  0150AA  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11552  0150AC  0E01               	movlw	1
 11553  0150AE  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11554  0150B0  0E06               	movlw	6
 11555  0150B2  ECE5  F0AE         	call	_terminalTextAttributes
 11556                           
 11557                           ;ring_buffer_LUT.c: 374: printf("    System Temperatures:\n\r");
 11558  0150B6  0E44               	movlw	low STR_267
 11559  0150B8  0102               	movlb	2	; () banked
 11560  0150BA  6F9F               	movwf	printf@f& (0+255),b
 11561  0150BC  0EF9               	movlw	high STR_267
 11562  0150BE  6FA0               	movwf	(printf@f+1)& (0+255),b
 11563  0150C0  EC87  F0DB         	call	_printf	;wreg free
 11564                           
 11565                           ;ring_buffer_LUT.c: 375: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11566  0150C4  0E00               	movlw	0
 11567  0150C6  0103               	movlb	3	; () banked
 11568  0150C8  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11569  0150CA  0E00               	movlw	0
 11570  0150CC  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11571  0150CE  0E06               	movlw	6
 11572  0150D0  ECE5  F0AE         	call	_terminalTextAttributes
 11573                           
 11574                           ;ring_buffer_LUT.c: 376: printf("        QI Converter Temperature measured as %+.3f C\n\
      +                          r", LM73_temp_results.QI_temp_result);
 11575  0150D4  0EF7               	movlw	low STR_268
 11576  0150D6  0102               	movlb	2	; () banked
 11577  0150D8  6F9F               	movwf	printf@f& (0+255),b
 11578  0150DA  0EF0               	movlw	high STR_268
 11579  0150DC  6FA0               	movwf	(printf@f+1)& (0+255),b
 11580  0150DE  C19C  F2A1         	movff	_LM73_temp_results,?_printf+2
 11581  0150E2  C19D  F2A2         	movff	_LM73_temp_results+1,?_printf+3
 11582  0150E6  C19E  F2A3         	movff	_LM73_temp_results+2,?_printf+4
 11583  0150EA  C19F  F2A4         	movff	_LM73_temp_results+3,?_printf+5
 11584  0150EE  EC87  F0DB         	call	_printf	;wreg free
 11585                           
 11586                           ;ring_buffer_LUT.c: 377: printf("        +5V Converter Temperature measured as %+.3f C\n
      +                          \r", LM73_temp_results.POS5_temp_result);
 11587  0150F2  0E87               	movlw	low STR_269
 11588  0150F4  0102               	movlb	2	; () banked
 11589  0150F6  6F9F               	movwf	printf@f& (0+255),b
 11590  0150F8  0EF0               	movlw	high STR_269
 11591  0150FA  6FA0               	movwf	(printf@f+1)& (0+255),b
 11592  0150FC  C1A0  F2A1         	movff	_LM73_temp_results+4,?_printf+2
 11593  015100  C1A1  F2A2         	movff	_LM73_temp_results+5,?_printf+3
 11594  015104  C1A2  F2A3         	movff	_LM73_temp_results+6,?_printf+4
 11595  015108  C1A3  F2A4         	movff	_LM73_temp_results+7,?_printf+5
 11596  01510C  EC87  F0DB         	call	_printf	;wreg free
 11597                           
 11598                           ;ring_buffer_LUT.c: 378: printf("        Ambient Temperature measured as %+.3f C\n\r", L
      +                          M73_temp_results.Ambient_temp_result);
 11599  015110  0ED0               	movlw	low STR_270
 11600  015112  0102               	movlb	2	; () banked
 11601  015114  6F9F               	movwf	printf@f& (0+255),b
 11602  015116  0EF2               	movlw	high STR_270
 11603  015118  6FA0               	movwf	(printf@f+1)& (0+255),b
 11604  01511A  C1A4  F2A1         	movff	_LM73_temp_results+8,?_printf+2
 11605  01511E  C1A5  F2A2         	movff	_LM73_temp_results+9,?_printf+3
 11606  015122  C1A6  F2A3         	movff	_LM73_temp_results+10,?_printf+4
 11607  015126  C1A7  F2A4         	movff	_LM73_temp_results+11,?_printf+5
 11608  01512A  EC87  F0DB         	call	_printf	;wreg free
 11609                           
 11610                           ;ring_buffer_LUT.c: 380: printf("\n\r");
 11611  01512E  0E8F               	movlw	low (STR_333+21)
 11612  015130  0102               	movlb	2	; () banked
 11613  015132  6F9F               	movwf	printf@f& (0+255),b
 11614  015134  0EF9               	movlw	high (STR_333+21)
 11615  015136  6FA0               	movwf	(printf@f+1)& (0+255),b
 11616  015138  EC87  F0DB         	call	_printf	;wreg free
 11617                           
 11618                           ;ring_buffer_LUT.c: 382: terminalTextAttributes(CYAN, BLACK, BOLD);
 11619  01513C  0E00               	movlw	0
 11620  01513E  0103               	movlb	3	; () banked
 11621  015140  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11622  015142  0E01               	movlw	1
 11623  015144  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11624  015146  0E06               	movlw	6
 11625  015148  ECE5  F0AE         	call	_terminalTextAttributes
 11626                           
 11627                           ;ring_buffer_LUT.c: 383: printf("    Microcontroller Parameters:\n\r");
 11628  01514C  0EBB               	movlw	low STR_272
 11629  01514E  0102               	movlb	2	; () banked
 11630  015150  6F9F               	movwf	printf@f& (0+255),b
 11631  015152  0EF7               	movlw	high STR_272
 11632  015154  6FA0               	movwf	(printf@f+1)& (0+255),b
 11633  015156  EC87  F0DB         	call	_printf	;wreg free
 11634                           
 11635                           ;ring_buffer_LUT.c: 384: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11636  01515A  0E00               	movlw	0
 11637  01515C  0103               	movlb	3	; () banked
 11638  01515E  6FF7               	movwf	terminalTextAttributes@background_color& (0+255),b
 11639  015160  0E00               	movlw	0
 11640  015162  6FF8               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11641  015164  0E06               	movlw	6
 11642  015166  ECE5  F0AE         	call	_terminalTextAttributes
 11643                           
 11644                           ;ring_buffer_LUT.c: 385: printf("        Microcontroller Die Temperature measured as %+.
      +                          3f C\n\r", adc_results.die_temp_adc_result);
 11645  01516A  0E30               	movlw	low STR_273
 11646  01516C  0102               	movlb	2	; () banked
 11647  01516E  6F9F               	movwf	printf@f& (0+255),b
 11648  015170  0EEE               	movlw	high STR_273
 11649  015172  6FA0               	movwf	(printf@f+1)& (0+255),b
 11650  015174  C0F6  F2A1         	movff	_adc_results+24,?_printf+2
 11651  015178  C0F7  F2A2         	movff	_adc_results+25,?_printf+3
 11652  01517C  C0F8  F2A3         	movff	_adc_results+26,?_printf+4
 11653  015180  C0F9  F2A4         	movff	_adc_results+27,?_printf+5
 11654  015184  EC87  F0DB         	call	_printf	;wreg free
 11655                           
 11656                           ;ring_buffer_LUT.c: 386: printf("        Fixed Voltage Reference Buffer 1 measured as %+
      +                          .3f Volts, calibrated for +4.096 Volts\n\r", adc_results.fvr_adc_result);
 11657  015188  0E7A               	movlw	low STR_274
 11658  01518A  0102               	movlb	2	; () banked
 11659  01518C  6F9F               	movwf	printf@f& (0+255),b
 11660  01518E  0EEC               	movlw	high STR_274
 11661  015190  6FA0               	movwf	(printf@f+1)& (0+255),b
 11662  015192  C0E2  F2A1         	movff	_adc_results+4,?_printf+2
 11663  015196  C0E3  F2A2         	movff	_adc_results+5,?_printf+3
 11664  01519A  C0E4  F2A3         	movff	_adc_results+6,?_printf+4
 11665  01519E  C0E5  F2A4         	movff	_adc_results+7,?_printf+5
 11666  0151A2  EC87  F0DB         	call	_printf	;wreg free
 11667                           
 11668                           ;ring_buffer_LUT.c: 387: printf("        AVSS measured as %+.3f Volts\n\r", adc_results.
      +                          avss_adc_result);
 11669  0151A6  0E9C               	movlw	low STR_275
 11670  0151A8  0102               	movlb	2	; () banked
 11671  0151AA  6F9F               	movwf	printf@f& (0+255),b
 11672  0151AC  0EF5               	movlw	high STR_275
 11673  0151AE  6FA0               	movwf	(printf@f+1)& (0+255),b
 11674  0151B0  C0DE  F2A1         	movff	_adc_results,?_printf+2
 11675  0151B4  C0DF  F2A2         	movff	_adc_results+1,?_printf+3
 11676  0151B8  C0E0  F2A3         	movff	_adc_results+2,?_printf+4
 11677  0151BC  C0E1  F2A4         	movff	_adc_results+3,?_printf+5
 11678  0151C0  EC87  F0DB         	call	_printf	;wreg free
 11679                           
 11680                           ;ring_buffer_LUT.c: 389: printf("\n\r");
 11681  0151C4  0E8F               	movlw	low (STR_333+21)
 11682  0151C6  0102               	movlb	2	; () banked
 11683  0151C8  6F9F               	movwf	printf@f& (0+255),b
 11684  0151CA  0EF9               	movlw	high (STR_333+21)
 11685  0151CC  6FA0               	movwf	(printf@f+1)& (0+255),b
 11686  0151CE  EC87  F0DB         	call	_printf	;wreg free
 11687                           
 11688                           ;ring_buffer_LUT.c: 391: terminalTextAttributesReset();
 11689  0151D2  ECE6  F0DF         	call	_terminalTextAttributesReset	;wreg free
 11690  0151D6  0012               	return		;funcret
 11691  0151D8                     __end_of_printCurrentMeasurements:
 11692                           	opt callstack 0
 11693                           
 11694 ;; *************** function _terminalTextAttributesReset *****************
 11695 ;; Defined at:
 11696 ;;		line 164 in file "terminal_control.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;		None
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;		None
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11714 ;;Total ram usage:        0 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:   15
 11717 ;; This function calls:
 11718 ;;		_printf
 11719 ;; This function is called by:
 11720 ;;		_main
 11721 ;;		_ringBufferLUT
 11722 ;;		_printErrorHandlerStatus
 11723 ;;		_printCurrentMeasurements
 11724 ;;		_terminalPrintTestMessage
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text6
 11729  01BFCC                     __ptext6:
 11730                           	opt callstack 0
 11731  01BFCC                     _terminalTextAttributesReset:
 11732                           	opt callstack 13
 11733                           
 11734                           ;terminal_control.c: 167: printf("\033[0;37;40m");
 11735                           
 11736                           ;incstack = 0
 11737  01BFCC  0E1F               	movlw	low STR_311
 11738  01BFCE  0102               	movlb	2	; () banked
 11739  01BFD0  6F9F               	movwf	printf@f& (0+255),b
 11740  01BFD2  0EFE               	movlw	high STR_311
 11741  01BFD4  6FA0               	movwf	(printf@f+1)& (0+255),b
 11742  01BFD6  EC87  F0DB         	call	_printf	;wreg free
 11743  01BFDA  0012               	return		;funcret
 11744  01BFDC                     __end_of_terminalTextAttributesReset:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _terminalTextAttributes *****************
 11748 ;; Defined at:
 11749 ;;		line 47 in file "terminal_control.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  foreground_c    1    wreg     enum E9584
 11752 ;;  background_c    1   26[BANK3 ] enum E9584
 11753 ;;  input_attrib    1   27[BANK3 ] enum E9576
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  foreground_c    1    0[BANK4 ] enum E9584
 11756 ;;  print_string   16    1[BANK4 ] unsigned char [16]
 11757 ;;  i               1   17[BANK4 ] unsigned char 
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11767 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Locals:         0       0       0       0       0      18       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Totals:         0       0       0       0       2      18       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;Total ram usage:       20 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:   15
 11774 ;; This function calls:
 11775 ;;		_printf
 11776 ;;		_strcat
 11777 ;;		_strncpy
 11778 ;; This function is called by:
 11779 ;;		_main
 11780 ;;		_ringBufferLUT
 11781 ;;		_printErrorHandlerStatus
 11782 ;;		_printCurrentMeasurements
 11783 ;;		_terminalPrintTestMessage
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text7
 11788  015DCA                     __ptext7:
 11789                           	opt callstack 0
 11790  015DCA                     _terminalTextAttributes:
 11791                           	opt callstack 13
 11792                           
 11793                           ;incstack = 0
 11794                           ;terminalTextAttributes@foreground_color stored from wreg
 11795  015DCA  0104               	movlb	4	; () banked
 11796  015DCC  6FC0               	movwf	terminalTextAttributes@foreground_color& (0+255),b
 11797                           
 11798                           ;terminal_control.c: 51: char print_string[16];;terminal_control.c: 54: uint8_t i;;termi
      +                          nal_control.c: 55: for (i = 0; i < sizeof(print_string); i++) {
 11799  015DCE  0E00               	movlw	0
 11800  015DD0  0104               	movlb	4	; () banked
 11801  015DD2  6FD1               	movwf	terminalTextAttributes@i& (0+255),b
 11802  015DD4                     l18698:
 11803                           
 11804                           ; BSR set to: 4
 11805                           ;terminal_control.c: 57: print_string[i] = '\0';
 11806  015DD4  0EC1               	movlw	low terminalTextAttributes@print_string
 11807  015DD6  25D1               	addwf	terminalTextAttributes@i& (0+255),w,b
 11808  015DD8  6ED9               	movwf	fsr2l,c
 11809  015DDA  6ADA               	clrf	fsr2h,c
 11810  015DDC  0E04               	movlw	high terminalTextAttributes@print_string
 11811  015DDE  22DA               	addwfc	fsr2h,f,c
 11812  015DE0  0E00               	movlw	0
 11813  015DE2  6EDF               	movwf	indf2,c
 11814                           
 11815                           ; BSR set to: 4
 11816  015DE4  2BD1               	incf	terminalTextAttributes@i& (0+255),f,b
 11817                           
 11818                           ; BSR set to: 4
 11819  015DE6  0E0F               	movlw	15
 11820  015DE8  65D1               	cpfsgt	terminalTextAttributes@i& (0+255),b
 11821  015DEA  D7F4               	goto	l18698
 11822                           
 11823                           ; BSR set to: 4
 11824                           ;terminal_control.c: 59: };terminal_control.c: 61: strncpy(print_string, "\033[", sizeof
      +                          (print_string));
 11825  015DEC  0EC1               	movlw	low terminalTextAttributes@print_string
 11826  015DEE  0102               	movlb	2	; () banked
 11827  015DF0  6F00               	movwf	strncpy@to& (0+255),b
 11828  015DF2  0E04               	movlw	high terminalTextAttributes@print_string
 11829  015DF4  6F01               	movwf	(strncpy@to+1)& (0+255),b
 11830  015DF6  0EF7               	movlw	low STR_282
 11831  015DF8  6F02               	movwf	strncpy@from& (0+255),b
 11832  015DFA  0EFF               	movlw	high STR_282
 11833  015DFC  6F03               	movwf	(strncpy@from+1)& (0+255),b
 11834  015DFE  0E00               	movlw	0
 11835  015E00  6F05               	movwf	(strncpy@size+1)& (0+255),b
 11836  015E02  0E10               	movlw	16
 11837  015E04  6F04               	movwf	strncpy@size& (0+255),b
 11838  015E06  EC25  F0D6         	call	_strncpy	;wreg free
 11839                           
 11840                           ;terminal_control.c: 63: switch (input_attribute) {
 11841  015E0A  D054               	goto	l18722
 11842  015E0C                     l18706:
 11843                           
 11844                           ; BSR set to: 3
 11845                           ;terminal_control.c: 66: strcat(print_string,"0");
 11846  015E0C  0EC1               	movlw	low terminalTextAttributes@print_string
 11847  015E0E  0102               	movlb	2	; () banked
 11848  015E10  6F00               	movwf	strcat@to& (0+255),b
 11849  015E12  0E04               	movlw	high terminalTextAttributes@print_string
 11850  015E14  6F01               	movwf	(strcat@to+1)& (0+255),b
 11851  015E16  0ECB               	movlw	low (STR_291+1)
 11852  015E18  6F02               	movwf	strcat@from& (0+255),b
 11853  015E1A  0EFF               	movlw	high (STR_291+1)
 11854  015E1C  6F03               	movwf	(strcat@from+1)& (0+255),b
 11855  015E1E  EC21  F0D7         	call	_strcat	;wreg free
 11856                           
 11857                           ;terminal_control.c: 67: break;
 11858  015E22  D05D               	goto	l18724
 11859  015E24                     l18708:
 11860                           
 11861                           ; BSR set to: 3
 11862                           ;terminal_control.c: 69: strcat(print_string,"1");
 11863  015E24  0EC1               	movlw	low terminalTextAttributes@print_string
 11864  015E26  0102               	movlb	2	; () banked
 11865  015E28  6F00               	movwf	strcat@to& (0+255),b
 11866  015E2A  0E04               	movlw	high terminalTextAttributes@print_string
 11867  015E2C  6F01               	movwf	(strcat@to+1)& (0+255),b
 11868  015E2E  0ECE               	movlw	low (STR_292+1)
 11869  015E30  6F02               	movwf	strcat@from& (0+255),b
 11870  015E32  0EFF               	movlw	high (STR_292+1)
 11871  015E34  6F03               	movwf	(strcat@from+1)& (0+255),b
 11872  015E36  EC21  F0D7         	call	_strcat	;wreg free
 11873                           
 11874                           ;terminal_control.c: 70: break;
 11875  015E3A  D051               	goto	l18724
 11876  015E3C                     l18710:
 11877                           
 11878                           ; BSR set to: 3
 11879                           ;terminal_control.c: 72: strcat(print_string,"4");
 11880  015E3C  0EC1               	movlw	low terminalTextAttributes@print_string
 11881  015E3E  0102               	movlb	2	; () banked
 11882  015E40  6F00               	movwf	strcat@to& (0+255),b
 11883  015E42  0E04               	movlw	high terminalTextAttributes@print_string
 11884  015E44  6F01               	movwf	(strcat@to+1)& (0+255),b
 11885  015E46  0EE0               	movlw	low (STR_295+1)
 11886  015E48  6F02               	movwf	strcat@from& (0+255),b
 11887  015E4A  0EFF               	movlw	high (STR_295+1)
 11888  015E4C  6F03               	movwf	(strcat@from+1)& (0+255),b
 11889  015E4E  EC21  F0D7         	call	_strcat	;wreg free
 11890                           
 11891                           ;terminal_control.c: 73: break;
 11892  015E52  D045               	goto	l18724
 11893  015E54                     l18712:
 11894                           
 11895                           ; BSR set to: 3
 11896                           ;terminal_control.c: 75: strcat(print_string,"5");
 11897  015E54  0EC1               	movlw	low terminalTextAttributes@print_string
 11898  015E56  0102               	movlb	2	; () banked
 11899  015E58  6F00               	movwf	strcat@to& (0+255),b
 11900  015E5A  0E04               	movlw	high terminalTextAttributes@print_string
 11901  015E5C  6F01               	movwf	(strcat@to+1)& (0+255),b
 11902  015E5E  0EE6               	movlw	low (STR_296+1)
 11903  015E60  6F02               	movwf	strcat@from& (0+255),b
 11904  015E62  0EFF               	movlw	high (STR_296+1)
 11905  015E64  6F03               	movwf	(strcat@from+1)& (0+255),b
 11906  015E66  EC21  F0D7         	call	_strcat	;wreg free
 11907                           
 11908                           ;terminal_control.c: 76: break;
 11909  015E6A  D039               	goto	l18724
 11910  015E6C                     l18714:
 11911                           
 11912                           ; BSR set to: 3
 11913                           ;terminal_control.c: 78: strcat(print_string,"7");
 11914  015E6C  0EC1               	movlw	low terminalTextAttributes@print_string
 11915  015E6E  0102               	movlb	2	; () banked
 11916  015E70  6F00               	movwf	strcat@to& (0+255),b
 11917  015E72  0E04               	movlw	high terminalTextAttributes@print_string
 11918  015E74  6F01               	movwf	(strcat@to+1)& (0+255),b
 11919  015E76  0EF2               	movlw	low (STR_298+1)
 11920  015E78  6F02               	movwf	strcat@from& (0+255),b
 11921  015E7A  0EFF               	movlw	high (STR_298+1)
 11922  015E7C  6F03               	movwf	(strcat@from+1)& (0+255),b
 11923  015E7E  EC21  F0D7         	call	_strcat	;wreg free
 11924                           
 11925                           ;terminal_control.c: 79: break;
 11926  015E82  D02D               	goto	l18724
 11927  015E84                     l18716:
 11928                           
 11929                           ; BSR set to: 3
 11930                           ;terminal_control.c: 81: strcat(print_string,"8");
 11931  015E84  0EC1               	movlw	low terminalTextAttributes@print_string
 11932  015E86  0102               	movlb	2	; () banked
 11933  015E88  6F00               	movwf	strcat@to& (0+255),b
 11934  015E8A  0E04               	movlw	high terminalTextAttributes@print_string
 11935  015E8C  6F01               	movwf	(strcat@to+1)& (0+255),b
 11936  015E8E  0EFA               	movlw	low STR_288
 11937  015E90  6F02               	movwf	strcat@from& (0+255),b
 11938  015E92  0EFF               	movlw	high STR_288
 11939  015E94  6F03               	movwf	(strcat@from+1)& (0+255),b
 11940  015E96  EC21  F0D7         	call	_strcat	;wreg free
 11941                           
 11942                           ;terminal_control.c: 82: break;
 11943  015E9A  D021               	goto	l18724
 11944  015E9C                     l18718:
 11945                           
 11946                           ; BSR set to: 3
 11947                           ;terminal_control.c: 85: strcat(print_string,"0");
 11948  015E9C  0EC1               	movlw	low terminalTextAttributes@print_string
 11949  015E9E  0102               	movlb	2	; () banked
 11950  015EA0  6F00               	movwf	strcat@to& (0+255),b
 11951  015EA2  0E04               	movlw	high terminalTextAttributes@print_string
 11952  015EA4  6F01               	movwf	(strcat@to+1)& (0+255),b
 11953  015EA6  0ECB               	movlw	low (STR_291+1)
 11954  015EA8  6F02               	movwf	strcat@from& (0+255),b
 11955  015EAA  0EFF               	movlw	high (STR_291+1)
 11956  015EAC  6F03               	movwf	(strcat@from+1)& (0+255),b
 11957  015EAE  EC21  F0D7         	call	_strcat	;wreg free
 11958                           
 11959                           ;terminal_control.c: 86: break;
 11960  015EB2  D015               	goto	l18724
 11961  015EB4                     l18722:
 11962  015EB4  0103               	movlb	3	; () banked
 11963  015EB6  51F8               	movf	terminalTextAttributes@input_attribute& (0+255),w,b
 11964                           
 11965                           ; Switch size 1, requested type "simple"
 11966                           ; Number of cases is 6, Range of values is 0 to 5
 11967                           ; switch strategies available:
 11968                           ; Name         Instructions Cycles
 11969                           ; simple_byte           19    10 (average)
 11970                           ;	Chosen strategy is simple_byte
 11971  015EB8  0A00               	xorlw	0	; case 0
 11972  015EBA  B4D8               	btfsc	status,2,c
 11973  015EBC  D7A7               	goto	l18706
 11974  015EBE  0A01               	xorlw	1	; case 1
 11975  015EC0  B4D8               	btfsc	status,2,c
 11976  015EC2  D7B0               	goto	l18708
 11977  015EC4  0A03               	xorlw	3	; case 2
 11978  015EC6  B4D8               	btfsc	status,2,c
 11979  015EC8  D7B9               	goto	l18710
 11980  015ECA  0A01               	xorlw	1	; case 3
 11981  015ECC  B4D8               	btfsc	status,2,c
 11982  015ECE  D7C2               	goto	l18712
 11983  015ED0  0A07               	xorlw	7	; case 4
 11984  015ED2  B4D8               	btfsc	status,2,c
 11985  015ED4  D7CB               	goto	l18714
 11986  015ED6  0A01               	xorlw	1	; case 5
 11987  015ED8  B4D8               	btfsc	status,2,c
 11988  015EDA  D7D4               	goto	l18716
 11989  015EDC  D7DF               	goto	l18718
 11990  015EDE                     l18724:
 11991                           
 11992                           ;terminal_control.c: 89: strcat(print_string,";");
 11993  015EDE  0EC1               	movlw	low terminalTextAttributes@print_string
 11994  015EE0  0102               	movlb	2	; () banked
 11995  015EE2  6F00               	movwf	strcat@to& (0+255),b
 11996  015EE4  0E04               	movlw	high terminalTextAttributes@print_string
 11997  015EE6  6F01               	movwf	(strcat@to+1)& (0+255),b
 11998  015EE8  0EFC               	movlw	low STR_290
 11999  015EEA  6F02               	movwf	strcat@from& (0+255),b
 12000  015EEC  0EFF               	movlw	high STR_290
 12001  015EEE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12002  015EF0  EC21  F0D7         	call	_strcat	;wreg free
 12003                           
 12004                           ;terminal_control.c: 91: switch (foreground_color) {
 12005  015EF4  D06C               	goto	l18746
 12006  015EF6                     l18726:
 12007                           
 12008                           ; BSR set to: 4
 12009                           ;terminal_control.c: 94: strcat(print_string,"30");
 12010  015EF6  0EC1               	movlw	low terminalTextAttributes@print_string
 12011  015EF8  0102               	movlb	2	; () banked
 12012  015EFA  6F00               	movwf	strcat@to& (0+255),b
 12013  015EFC  0E04               	movlw	high terminalTextAttributes@print_string
 12014  015EFE  6F01               	movwf	(strcat@to+1)& (0+255),b
 12015  015F00  0ECA               	movlw	low STR_291
 12016  015F02  6F02               	movwf	strcat@from& (0+255),b
 12017  015F04  0EFF               	movlw	high STR_291
 12018  015F06  6F03               	movwf	(strcat@from+1)& (0+255),b
 12019  015F08  EC21  F0D7         	call	_strcat	;wreg free
 12020                           
 12021                           ;terminal_control.c: 95: break;
 12022  015F0C  D07B               	goto	l18748
 12023  015F0E                     l18728:
 12024                           
 12025                           ; BSR set to: 4
 12026                           ;terminal_control.c: 97: strcat(print_string,"31");
 12027  015F0E  0EC1               	movlw	low terminalTextAttributes@print_string
 12028  015F10  0102               	movlb	2	; () banked
 12029  015F12  6F00               	movwf	strcat@to& (0+255),b
 12030  015F14  0E04               	movlw	high terminalTextAttributes@print_string
 12031  015F16  6F01               	movwf	(strcat@to+1)& (0+255),b
 12032  015F18  0ECD               	movlw	low STR_292
 12033  015F1A  6F02               	movwf	strcat@from& (0+255),b
 12034  015F1C  0EFF               	movlw	high STR_292
 12035  015F1E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12036  015F20  EC21  F0D7         	call	_strcat	;wreg free
 12037                           
 12038                           ;terminal_control.c: 98: break;
 12039  015F24  D06F               	goto	l18748
 12040  015F26                     l18730:
 12041                           
 12042                           ; BSR set to: 4
 12043                           ;terminal_control.c: 100: strcat(print_string,"32");
 12044  015F26  0EC1               	movlw	low terminalTextAttributes@print_string
 12045  015F28  0102               	movlb	2	; () banked
 12046  015F2A  6F00               	movwf	strcat@to& (0+255),b
 12047  015F2C  0E04               	movlw	high terminalTextAttributes@print_string
 12048  015F2E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12049  015F30  0ED3               	movlw	low STR_293
 12050  015F32  6F02               	movwf	strcat@from& (0+255),b
 12051  015F34  0EFF               	movlw	high STR_293
 12052  015F36  6F03               	movwf	(strcat@from+1)& (0+255),b
 12053  015F38  EC21  F0D7         	call	_strcat	;wreg free
 12054                           
 12055                           ;terminal_control.c: 101: break;
 12056  015F3C  D063               	goto	l18748
 12057  015F3E                     l18732:
 12058                           
 12059                           ; BSR set to: 4
 12060                           ;terminal_control.c: 103: strcat(print_string,"33");
 12061  015F3E  0EC1               	movlw	low terminalTextAttributes@print_string
 12062  015F40  0102               	movlb	2	; () banked
 12063  015F42  6F00               	movwf	strcat@to& (0+255),b
 12064  015F44  0E04               	movlw	high terminalTextAttributes@print_string
 12065  015F46  6F01               	movwf	(strcat@to+1)& (0+255),b
 12066  015F48  0ED9               	movlw	low STR_294
 12067  015F4A  6F02               	movwf	strcat@from& (0+255),b
 12068  015F4C  0EFF               	movlw	high STR_294
 12069  015F4E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12070  015F50  EC21  F0D7         	call	_strcat	;wreg free
 12071                           
 12072                           ;terminal_control.c: 104: break;
 12073  015F54  D057               	goto	l18748
 12074  015F56                     l18734:
 12075                           
 12076                           ; BSR set to: 4
 12077                           ;terminal_control.c: 106: strcat(print_string,"34");
 12078  015F56  0EC1               	movlw	low terminalTextAttributes@print_string
 12079  015F58  0102               	movlb	2	; () banked
 12080  015F5A  6F00               	movwf	strcat@to& (0+255),b
 12081  015F5C  0E04               	movlw	high terminalTextAttributes@print_string
 12082  015F5E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12083  015F60  0EDF               	movlw	low STR_295
 12084  015F62  6F02               	movwf	strcat@from& (0+255),b
 12085  015F64  0EFF               	movlw	high STR_295
 12086  015F66  6F03               	movwf	(strcat@from+1)& (0+255),b
 12087  015F68  EC21  F0D7         	call	_strcat	;wreg free
 12088                           
 12089                           ;terminal_control.c: 107: break;
 12090  015F6C  D04B               	goto	l18748
 12091  015F6E                     l18736:
 12092                           
 12093                           ; BSR set to: 4
 12094                           ;terminal_control.c: 109: strcat(print_string,"35");
 12095  015F6E  0EC1               	movlw	low terminalTextAttributes@print_string
 12096  015F70  0102               	movlb	2	; () banked
 12097  015F72  6F00               	movwf	strcat@to& (0+255),b
 12098  015F74  0E04               	movlw	high terminalTextAttributes@print_string
 12099  015F76  6F01               	movwf	(strcat@to+1)& (0+255),b
 12100  015F78  0EE5               	movlw	low STR_296
 12101  015F7A  6F02               	movwf	strcat@from& (0+255),b
 12102  015F7C  0EFF               	movlw	high STR_296
 12103  015F7E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12104  015F80  EC21  F0D7         	call	_strcat	;wreg free
 12105                           
 12106                           ;terminal_control.c: 110: break;
 12107  015F84  D03F               	goto	l18748
 12108  015F86                     l18738:
 12109                           
 12110                           ; BSR set to: 4
 12111                           ;terminal_control.c: 112: strcat(print_string,"36");
 12112  015F86  0EC1               	movlw	low terminalTextAttributes@print_string
 12113  015F88  0102               	movlb	2	; () banked
 12114  015F8A  6F00               	movwf	strcat@to& (0+255),b
 12115  015F8C  0E04               	movlw	high terminalTextAttributes@print_string
 12116  015F8E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12117  015F90  0EEB               	movlw	low STR_297
 12118  015F92  6F02               	movwf	strcat@from& (0+255),b
 12119  015F94  0EFF               	movlw	high STR_297
 12120  015F96  6F03               	movwf	(strcat@from+1)& (0+255),b
 12121  015F98  EC21  F0D7         	call	_strcat	;wreg free
 12122                           
 12123                           ;terminal_control.c: 113: break;
 12124  015F9C  D033               	goto	l18748
 12125  015F9E                     l18740:
 12126                           
 12127                           ; BSR set to: 4
 12128                           ;terminal_control.c: 115: strcat(print_string,"37");
 12129  015F9E  0EC1               	movlw	low terminalTextAttributes@print_string
 12130  015FA0  0102               	movlb	2	; () banked
 12131  015FA2  6F00               	movwf	strcat@to& (0+255),b
 12132  015FA4  0E04               	movlw	high terminalTextAttributes@print_string
 12133  015FA6  6F01               	movwf	(strcat@to+1)& (0+255),b
 12134  015FA8  0EF1               	movlw	low STR_298
 12135  015FAA  6F02               	movwf	strcat@from& (0+255),b
 12136  015FAC  0EFF               	movlw	high STR_298
 12137  015FAE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12138  015FB0  EC21  F0D7         	call	_strcat	;wreg free
 12139                           
 12140                           ;terminal_control.c: 116: break;
 12141  015FB4  D027               	goto	l18748
 12142  015FB6                     l18742:
 12143                           
 12144                           ; BSR set to: 4
 12145                           ;terminal_control.c: 119: strcat(print_string,"37");
 12146  015FB6  0EC1               	movlw	low terminalTextAttributes@print_string
 12147  015FB8  0102               	movlb	2	; () banked
 12148  015FBA  6F00               	movwf	strcat@to& (0+255),b
 12149  015FBC  0E04               	movlw	high terminalTextAttributes@print_string
 12150  015FBE  6F01               	movwf	(strcat@to+1)& (0+255),b
 12151  015FC0  0EF1               	movlw	low STR_298
 12152  015FC2  6F02               	movwf	strcat@from& (0+255),b
 12153  015FC4  0EFF               	movlw	high STR_298
 12154  015FC6  6F03               	movwf	(strcat@from+1)& (0+255),b
 12155  015FC8  EC21  F0D7         	call	_strcat	;wreg free
 12156                           
 12157                           ;terminal_control.c: 120: break;
 12158  015FCC  D01B               	goto	l18748
 12159  015FCE                     l18746:
 12160  015FCE  0104               	movlb	4	; () banked
 12161  015FD0  51C0               	movf	terminalTextAttributes@foreground_color& (0+255),w,b
 12162                           
 12163                           ; Switch size 1, requested type "simple"
 12164                           ; Number of cases is 8, Range of values is 0 to 7
 12165                           ; switch strategies available:
 12166                           ; Name         Instructions Cycles
 12167                           ; simple_byte           25    13 (average)
 12168                           ;	Chosen strategy is simple_byte
 12169  015FD2  0A00               	xorlw	0	; case 0
 12170  015FD4  B4D8               	btfsc	status,2,c
 12171  015FD6  D78F               	goto	l18726
 12172  015FD8  0A01               	xorlw	1	; case 1
 12173  015FDA  B4D8               	btfsc	status,2,c
 12174  015FDC  D798               	goto	l18728
 12175  015FDE  0A03               	xorlw	3	; case 2
 12176  015FE0  B4D8               	btfsc	status,2,c
 12177  015FE2  D7A1               	goto	l18730
 12178  015FE4  0A01               	xorlw	1	; case 3
 12179  015FE6  B4D8               	btfsc	status,2,c
 12180  015FE8  D7AA               	goto	l18732
 12181  015FEA  0A07               	xorlw	7	; case 4
 12182  015FEC  B4D8               	btfsc	status,2,c
 12183  015FEE  D7B3               	goto	l18734
 12184  015FF0  0A01               	xorlw	1	; case 5
 12185  015FF2  B4D8               	btfsc	status,2,c
 12186  015FF4  D7BC               	goto	l18736
 12187  015FF6  0A03               	xorlw	3	; case 6
 12188  015FF8  B4D8               	btfsc	status,2,c
 12189  015FFA  D7C5               	goto	l18738
 12190  015FFC  0A01               	xorlw	1	; case 7
 12191  015FFE  B4D8               	btfsc	status,2,c
 12192  016000  D7CE               	goto	l18740
 12193  016002  D7D9               	goto	l18742
 12194  016004                     l18748:
 12195                           
 12196                           ;terminal_control.c: 123: strcat(print_string,";");
 12197  016004  0EC1               	movlw	low terminalTextAttributes@print_string
 12198  016006  0102               	movlb	2	; () banked
 12199  016008  6F00               	movwf	strcat@to& (0+255),b
 12200  01600A  0E04               	movlw	high terminalTextAttributes@print_string
 12201  01600C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12202  01600E  0EFC               	movlw	low STR_290
 12203  016010  6F02               	movwf	strcat@from& (0+255),b
 12204  016012  0EFF               	movlw	high STR_290
 12205  016014  6F03               	movwf	(strcat@from+1)& (0+255),b
 12206  016016  EC21  F0D7         	call	_strcat	;wreg free
 12207                           
 12208                           ;terminal_control.c: 125: switch (background_color) {
 12209  01601A  D06C               	goto	l18770
 12210  01601C                     l18750:
 12211                           
 12212                           ; BSR set to: 3
 12213                           ;terminal_control.c: 128: strcat(print_string,"40");
 12214  01601C  0EC1               	movlw	low terminalTextAttributes@print_string
 12215  01601E  0102               	movlb	2	; () banked
 12216  016020  6F00               	movwf	strcat@to& (0+255),b
 12217  016022  0E04               	movlw	high terminalTextAttributes@print_string
 12218  016024  6F01               	movwf	(strcat@to+1)& (0+255),b
 12219  016026  0EF9               	movlw	low (STR_43+9)
 12220  016028  6F02               	movwf	strcat@from& (0+255),b
 12221  01602A  0EFD               	movlw	high (STR_43+9)
 12222  01602C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12223  01602E  EC21  F0D7         	call	_strcat	;wreg free
 12224                           
 12225                           ;terminal_control.c: 129: break;
 12226  016032  D07B               	goto	l18772
 12227  016034                     l18752:
 12228                           
 12229                           ; BSR set to: 3
 12230                           ;terminal_control.c: 131: strcat(print_string,"41");
 12231  016034  0EC1               	movlw	low terminalTextAttributes@print_string
 12232  016036  0102               	movlb	2	; () banked
 12233  016038  6F00               	movwf	strcat@to& (0+255),b
 12234  01603A  0E04               	movlw	high terminalTextAttributes@print_string
 12235  01603C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12236  01603E  0ED0               	movlw	low STR_302
 12237  016040  6F02               	movwf	strcat@from& (0+255),b
 12238  016042  0EFF               	movlw	high STR_302
 12239  016044  6F03               	movwf	(strcat@from+1)& (0+255),b
 12240  016046  EC21  F0D7         	call	_strcat	;wreg free
 12241                           
 12242                           ;terminal_control.c: 132: break;
 12243  01604A  D06F               	goto	l18772
 12244  01604C                     l18754:
 12245                           
 12246                           ; BSR set to: 3
 12247                           ;terminal_control.c: 134: strcat(print_string,"42");
 12248  01604C  0EC1               	movlw	low terminalTextAttributes@print_string
 12249  01604E  0102               	movlb	2	; () banked
 12250  016050  6F00               	movwf	strcat@to& (0+255),b
 12251  016052  0E04               	movlw	high terminalTextAttributes@print_string
 12252  016054  6F01               	movwf	(strcat@to+1)& (0+255),b
 12253  016056  0ED6               	movlw	low STR_303
 12254  016058  6F02               	movwf	strcat@from& (0+255),b
 12255  01605A  0EFF               	movlw	high STR_303
 12256  01605C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12257  01605E  EC21  F0D7         	call	_strcat	;wreg free
 12258                           
 12259                           ;terminal_control.c: 135: break;
 12260  016062  D063               	goto	l18772
 12261  016064                     l18756:
 12262                           
 12263                           ; BSR set to: 3
 12264                           ;terminal_control.c: 137: strcat(print_string,"43");
 12265  016064  0EC1               	movlw	low terminalTextAttributes@print_string
 12266  016066  0102               	movlb	2	; () banked
 12267  016068  6F00               	movwf	strcat@to& (0+255),b
 12268  01606A  0E04               	movlw	high terminalTextAttributes@print_string
 12269  01606C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12270  01606E  0EDC               	movlw	low STR_304
 12271  016070  6F02               	movwf	strcat@from& (0+255),b
 12272  016072  0EFF               	movlw	high STR_304
 12273  016074  6F03               	movwf	(strcat@from+1)& (0+255),b
 12274  016076  EC21  F0D7         	call	_strcat	;wreg free
 12275                           
 12276                           ;terminal_control.c: 138: break;
 12277  01607A  D057               	goto	l18772
 12278  01607C                     l18758:
 12279                           
 12280                           ; BSR set to: 3
 12281                           ;terminal_control.c: 140: strcat(print_string,"44");
 12282  01607C  0EC1               	movlw	low terminalTextAttributes@print_string
 12283  01607E  0102               	movlb	2	; () banked
 12284  016080  6F00               	movwf	strcat@to& (0+255),b
 12285  016082  0E04               	movlw	high terminalTextAttributes@print_string
 12286  016084  6F01               	movwf	(strcat@to+1)& (0+255),b
 12287  016086  0EE2               	movlw	low STR_305
 12288  016088  6F02               	movwf	strcat@from& (0+255),b
 12289  01608A  0EFF               	movlw	high STR_305
 12290  01608C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12291  01608E  EC21  F0D7         	call	_strcat	;wreg free
 12292                           
 12293                           ;terminal_control.c: 141: break;
 12294  016092  D04B               	goto	l18772
 12295  016094                     l18760:
 12296                           
 12297                           ; BSR set to: 3
 12298                           ;terminal_control.c: 143: strcat(print_string,"45");
 12299  016094  0EC1               	movlw	low terminalTextAttributes@print_string
 12300  016096  0102               	movlb	2	; () banked
 12301  016098  6F00               	movwf	strcat@to& (0+255),b
 12302  01609A  0E04               	movlw	high terminalTextAttributes@print_string
 12303  01609C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12304  01609E  0EE8               	movlw	low STR_306
 12305  0160A0  6F02               	movwf	strcat@from& (0+255),b
 12306  0160A2  0EFF               	movlw	high STR_306
 12307  0160A4  6F03               	movwf	(strcat@from+1)& (0+255),b
 12308  0160A6  EC21  F0D7         	call	_strcat	;wreg free
 12309                           
 12310                           ;terminal_control.c: 144: break;
 12311  0160AA  D03F               	goto	l18772
 12312  0160AC                     l18762:
 12313                           
 12314                           ; BSR set to: 3
 12315                           ;terminal_control.c: 146: strcat(print_string,"46");
 12316  0160AC  0EC1               	movlw	low terminalTextAttributes@print_string
 12317  0160AE  0102               	movlb	2	; () banked
 12318  0160B0  6F00               	movwf	strcat@to& (0+255),b
 12319  0160B2  0E04               	movlw	high terminalTextAttributes@print_string
 12320  0160B4  6F01               	movwf	(strcat@to+1)& (0+255),b
 12321  0160B6  0EEE               	movlw	low STR_307
 12322  0160B8  6F02               	movwf	strcat@from& (0+255),b
 12323  0160BA  0EFF               	movlw	high STR_307
 12324  0160BC  6F03               	movwf	(strcat@from+1)& (0+255),b
 12325  0160BE  EC21  F0D7         	call	_strcat	;wreg free
 12326                           
 12327                           ;terminal_control.c: 147: break;
 12328  0160C2  D033               	goto	l18772
 12329  0160C4                     l18764:
 12330                           
 12331                           ; BSR set to: 3
 12332                           ;terminal_control.c: 149: strcat(print_string,"47");
 12333  0160C4  0EC1               	movlw	low terminalTextAttributes@print_string
 12334  0160C6  0102               	movlb	2	; () banked
 12335  0160C8  6F00               	movwf	strcat@to& (0+255),b
 12336  0160CA  0E04               	movlw	high terminalTextAttributes@print_string
 12337  0160CC  6F01               	movwf	(strcat@to+1)& (0+255),b
 12338  0160CE  0EF4               	movlw	low STR_308
 12339  0160D0  6F02               	movwf	strcat@from& (0+255),b
 12340  0160D2  0EFF               	movlw	high STR_308
 12341  0160D4  6F03               	movwf	(strcat@from+1)& (0+255),b
 12342  0160D6  EC21  F0D7         	call	_strcat	;wreg free
 12343                           
 12344                           ;terminal_control.c: 150: break;
 12345  0160DA  D027               	goto	l18772
 12346  0160DC                     l18766:
 12347                           
 12348                           ; BSR set to: 3
 12349                           ;terminal_control.c: 153: strcat(print_string,"40");
 12350  0160DC  0EC1               	movlw	low terminalTextAttributes@print_string
 12351  0160DE  0102               	movlb	2	; () banked
 12352  0160E0  6F00               	movwf	strcat@to& (0+255),b
 12353  0160E2  0E04               	movlw	high terminalTextAttributes@print_string
 12354  0160E4  6F01               	movwf	(strcat@to+1)& (0+255),b
 12355  0160E6  0EF9               	movlw	low (STR_43+9)
 12356  0160E8  6F02               	movwf	strcat@from& (0+255),b
 12357  0160EA  0EFD               	movlw	high (STR_43+9)
 12358  0160EC  6F03               	movwf	(strcat@from+1)& (0+255),b
 12359  0160EE  EC21  F0D7         	call	_strcat	;wreg free
 12360                           
 12361                           ;terminal_control.c: 154: break;
 12362  0160F2  D01B               	goto	l18772
 12363  0160F4                     l18770:
 12364  0160F4  0103               	movlb	3	; () banked
 12365  0160F6  51F7               	movf	terminalTextAttributes@background_color& (0+255),w,b
 12366                           
 12367                           ; Switch size 1, requested type "simple"
 12368                           ; Number of cases is 8, Range of values is 0 to 7
 12369                           ; switch strategies available:
 12370                           ; Name         Instructions Cycles
 12371                           ; simple_byte           25    13 (average)
 12372                           ;	Chosen strategy is simple_byte
 12373  0160F8  0A00               	xorlw	0	; case 0
 12374  0160FA  B4D8               	btfsc	status,2,c
 12375  0160FC  D78F               	goto	l18750
 12376  0160FE  0A01               	xorlw	1	; case 1
 12377  016100  B4D8               	btfsc	status,2,c
 12378  016102  D798               	goto	l18752
 12379  016104  0A03               	xorlw	3	; case 2
 12380  016106  B4D8               	btfsc	status,2,c
 12381  016108  D7A1               	goto	l18754
 12382  01610A  0A01               	xorlw	1	; case 3
 12383  01610C  B4D8               	btfsc	status,2,c
 12384  01610E  D7AA               	goto	l18756
 12385  016110  0A07               	xorlw	7	; case 4
 12386  016112  B4D8               	btfsc	status,2,c
 12387  016114  D7B3               	goto	l18758
 12388  016116  0A01               	xorlw	1	; case 5
 12389  016118  B4D8               	btfsc	status,2,c
 12390  01611A  D7BC               	goto	l18760
 12391  01611C  0A03               	xorlw	3	; case 6
 12392  01611E  B4D8               	btfsc	status,2,c
 12393  016120  D7C5               	goto	l18762
 12394  016122  0A01               	xorlw	1	; case 7
 12395  016124  B4D8               	btfsc	status,2,c
 12396  016126  D7CE               	goto	l18764
 12397  016128  D7D9               	goto	l18766
 12398  01612A                     l18772:
 12399                           
 12400                           ;terminal_control.c: 157: strcat(print_string,"m");
 12401  01612A  0EC1               	movlw	low terminalTextAttributes@print_string
 12402  01612C  0102               	movlb	2	; () banked
 12403  01612E  6F00               	movwf	strcat@to& (0+255),b
 12404  016130  0E04               	movlw	high terminalTextAttributes@print_string
 12405  016132  6F01               	movwf	(strcat@to+1)& (0+255),b
 12406  016134  0E28               	movlw	low (STR_311+9)
 12407  016136  6F02               	movwf	strcat@from& (0+255),b
 12408  016138  0EFE               	movlw	high (STR_311+9)
 12409  01613A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12410  01613C  EC21  F0D7         	call	_strcat	;wreg free
 12411                           
 12412                           ;terminal_control.c: 159: printf(print_string);
 12413  016140  0EC1               	movlw	low terminalTextAttributes@print_string
 12414  016142  0102               	movlb	2	; () banked
 12415  016144  6F9F               	movwf	printf@f& (0+255),b
 12416  016146  0E04               	movlw	high terminalTextAttributes@print_string
 12417  016148  6FA0               	movwf	(printf@f+1)& (0+255),b
 12418  01614A  EC87  F0DB         	call	_printf	;wreg free
 12419  01614E  0012               	return		;funcret
 12420  016150                     __end_of_terminalTextAttributes:
 12421                           	opt callstack 0
 12422                           
 12423 ;; *************** function _strncpy *****************
 12424 ;; Defined at:
 12425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncpy.c"
 12426 ;; Parameters:    Size  Location     Type
 12427 ;;  to              2    0[BANK2 ] PTR unsigned char 
 12428 ;;		 -> terminalTextAttributes@print_string(16), 
 12429 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 12430 ;;		 -> STR_282(3), 
 12431 ;;  size            2    4[BANK2 ] unsigned int 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  cp              2    6[BANK2 ] PTR unsigned char 
 12434 ;;		 -> terminalTextAttributes@print_string(16), 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  2    0[BANK2 ] PTR unsigned char 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12444 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;Total ram usage:        8 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   11
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_terminalTextAttributes
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text8
 12459  01AC4A                     __ptext8:
 12460                           	opt callstack 0
 12461  01AC4A                     _strncpy:
 12462                           	opt callstack 16
 12463                           
 12464                           ;incstack = 0
 12465  01AC4A  C200  F206         	movff	strncpy@to,strncpy@cp
 12466  01AC4E  C201  F207         	movff	strncpy@to+1,strncpy@cp+1
 12467  01AC52  D017               	goto	l18210
 12468  01AC54                     l18204:
 12469                           
 12470                           ; BSR set to: 2
 12471  01AC54  0704               	decf	strncpy@size& (0+255),f,b
 12472  01AC56  A0D8               	btfss	status,0,c
 12473  01AC58  0705               	decf	(strncpy@size+1)& (0+255),f,b
 12474                           
 12475                           ; BSR set to: 2
 12476  01AC5A  C202  FFF6         	movff	strncpy@from,tblptrl
 12477  01AC5E  C203  FFF7         	movff	strncpy@from+1,tblptrh
 12478  01AC62  4B02               	infsnz	strncpy@from& (0+255),f,b
 12479  01AC64  2B03               	incf	(strncpy@from+1)& (0+255),f,b
 12480  01AC66                     	if	0	;tblptru may be non-zero
 12481  01AC66                     	endif
 12482  01AC66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12483  01AC66  0E00               	movlw	low (__mediumconst shr (0+16))
 12484  01AC68  6EF8               	movwf	tblptru,c
 12485  01AC6A                     	endif
 12486  01AC6A  C206  FFD9         	movff	strncpy@cp,fsr2l
 12487  01AC6E  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 12488  01AC72  4B06               	infsnz	strncpy@cp& (0+255),f,b
 12489  01AC74  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 12490  01AC76  0008               	tblrd		*
 12491  01AC78  CFF5 FFDF          	movff	tablat,indf2
 12492  01AC7C  50DF               	movf	indf2,w,c
 12493  01AC7E  B4D8               	btfsc	status,2,c
 12494  01AC80  D00E               	goto	l18216
 12495  01AC82                     l18210:
 12496  01AC82  0102               	movlb	2	; () banked
 12497  01AC84  5104               	movf	strncpy@size& (0+255),w,b
 12498  01AC86  1105               	iorwf	(strncpy@size+1)& (0+255),w,b
 12499  01AC88  B4D8               	btfsc	status,2,c
 12500  01AC8A  D009               	goto	l18216
 12501  01AC8C  D7E3               	goto	l18204
 12502  01AC8E                     l18212:
 12503                           
 12504                           ; BSR set to: 2
 12505  01AC8E  C206  FFD9         	movff	strncpy@cp,fsr2l
 12506  01AC92  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 12507  01AC96  0E00               	movlw	0
 12508  01AC98  6EDF               	movwf	indf2,c
 12509                           
 12510                           ; BSR set to: 2
 12511  01AC9A  4B06               	infsnz	strncpy@cp& (0+255),f,b
 12512  01AC9C  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 12513  01AC9E                     l18216:
 12514                           
 12515                           ; BSR set to: 2
 12516  01AC9E  0704               	decf	strncpy@size& (0+255),f,b
 12517  01ACA0  A0D8               	btfss	status,0,c
 12518  01ACA2  0705               	decf	(strncpy@size+1)& (0+255),f,b
 12519  01ACA4  2904               	incf	strncpy@size& (0+255),w,b
 12520  01ACA6  E1F3               	bnz	l18212
 12521  01ACA8  2905               	incf	(strncpy@size+1)& (0+255),w,b
 12522  01ACAA  B4D8               	btfsc	status,2,c
 12523  01ACAC  0012               	return	
 12524  01ACAE  D7EF               	goto	l18212
 12525  01ACB0                     __end_of_strncpy:
 12526                           	opt callstack 0
 12527                           
 12528 ;; *************** function _getStringSecondsAsTime *****************
 12529 ;; Defined at:
 12530 ;;		line 46 in file "heartbeat_timer.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  input_second    4  151[BANK2 ] unsigned long 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  buff           20    0[BANK3 ] unsigned char [20]
 12535 ;;  minutes         1   25[BANK3 ] unsigned char 
 12536 ;;  hours           1   24[BANK3 ] unsigned char 
 12537 ;;  days            1   23[BANK3 ] unsigned char 
 12538 ;;  years           1   22[BANK3 ] unsigned char 
 12539 ;;  seconds         1   21[BANK3 ] unsigned char 
 12540 ;;  i               1   20[BANK3 ] unsigned char 
 12541 ;;  remainder       1    0        unsigned char 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  2  151[BANK2 ] PTR unsigned char 
 12544 ;; Registers used:
 12545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12551 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;      Totals:         0       0       0       8      26       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;Total ram usage:       34 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:   15
 12558 ;; This function calls:
 12559 ;;		___lldiv
 12560 ;;		___wmul
 12561 ;;		_sprintf
 12562 ;;		_strcat
 12563 ;;		_strlen
 12564 ;; This function is called by:
 12565 ;;		_ringBufferLUT
 12566 ;;		_printCurrentMeasurements
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text9
 12571  015A24                     __ptext9:
 12572                           	opt callstack 0
 12573  015A24                     _getStringSecondsAsTime:
 12574                           	opt callstack 12
 12575                           
 12576                           ;heartbeat_timer.c: 48: uint8_t years, days, hours, minutes, seconds, remainder;;heartbe
      +                          at_timer.c: 49: static char return_string[40];;heartbeat_timer.c: 52: uint8_t i;;heartbe
      +                          at_timer.c: 53: for (i = 0; i < strlen(return_string); i++) {
 12577                           
 12578                           ; BSR set to: 2
 12579                           ;incstack = 0
 12580  015A24  0E00               	movlw	0
 12581  015A26  0103               	movlb	3	; () banked
 12582  015A28  6FF1               	movwf	getStringSecondsAsTime@i& (0+255),b
 12583  015A2A  D00A               	goto	l18822
 12584  015A2C                     l18818:
 12585                           
 12586                           ; BSR set to: 2
 12587                           ;heartbeat_timer.c: 55: return_string[i] = '\0';
 12588  015A2C  0E80               	movlw	low getStringSecondsAsTime@return_string
 12589  015A2E  0103               	movlb	3	; () banked
 12590  015A30  25F1               	addwf	getStringSecondsAsTime@i& (0+255),w,b
 12591  015A32  6ED9               	movwf	fsr2l,c
 12592  015A34  6ADA               	clrf	fsr2h,c
 12593  015A36  0E03               	movlw	high getStringSecondsAsTime@return_string
 12594  015A38  22DA               	addwfc	fsr2h,f,c
 12595  015A3A  0E00               	movlw	0
 12596  015A3C  6EDF               	movwf	indf2,c
 12597                           
 12598                           ; BSR set to: 3
 12599  015A3E  2BF1               	incf	getStringSecondsAsTime@i& (0+255),f,b
 12600  015A40                     l18822:
 12601                           
 12602                           ; BSR set to: 3
 12603  015A40  0E80               	movlw	low getStringSecondsAsTime@return_string
 12604  015A42  0102               	movlb	2	; () banked
 12605  015A44  6F00               	movwf	strlen@s& (0+255),b
 12606  015A46  0E03               	movlw	high getStringSecondsAsTime@return_string
 12607  015A48  6F01               	movwf	(strlen@s+1)& (0+255),b
 12608  015A4A  EC34  F0DD         	call	_strlen	;wreg free
 12609  015A4E  0103               	movlb	3	; () banked
 12610  015A50  51F1               	movf	getStringSecondsAsTime@i& (0+255),w,b
 12611  015A52  0102               	movlb	2	; () banked
 12612  015A54  6F9B               	movwf	??_getStringSecondsAsTime& (0+255),b
 12613  015A56  6B9C               	clrf	(??_getStringSecondsAsTime+1)& (0+255),b
 12614  015A58  5100               	movf	?_strlen& (0+255),w,b
 12615  015A5A  5D9B               	subwf	??_getStringSecondsAsTime& (0+255),w,b
 12616  015A5C  5101               	movf	(?_strlen+1)& (0+255),w,b
 12617  015A5E  599C               	subwfb	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12618  015A60  A0D8               	btfss	status,0,c
 12619  015A62  D7E4               	goto	l18818
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;heartbeat_timer.c: 57: };heartbeat_timer.c: 59: char buff[20];;heartbeat_timer.c: 61: y
      +                          ears = input_seconds / (60 * 60 * 24 * 365);
 12623  015A64  C297  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 12624  015A68  C298  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 12625  015A6C  C299  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 12626  015A70  C29A  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 12627  015A74  0E80               	movlw	128
 12628  015A76  6F04               	movwf	___lldiv@divisor& (0+255),b
 12629  015A78  0E33               	movlw	51
 12630  015A7A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 12631  015A7C  0E00               	movlw	0
 12632  015A7E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 12633  015A80  0E00               	movlw	0
 12634  015A82  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 12635  015A84  ECBB  F0D4         	call	___lldiv	;wreg free
 12636  015A88  0102               	movlb	2	; () banked
 12637  015A8A  5100               	movf	?___lldiv& (0+255),w,b
 12638  015A8C  0103               	movlb	3	; () banked
 12639  015A8E  6FF3               	movwf	getStringSecondsAsTime@years& (0+255),b
 12640                           
 12641                           ; BSR set to: 3
 12642                           ;heartbeat_timer.c: 62: input_seconds -= years * (60 * 60 * 24 * 365);
 12643  015A90  C3F3  F200         	movff	getStringSecondsAsTime@years,___wmul@multiplier
 12644  015A94  0102               	movlb	2	; () banked
 12645  015A96  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 12646  015A98  0E33               	movlw	51
 12647  015A9A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12648  015A9C  0E80               	movlw	128
 12649  015A9E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 12650  015AA0  ECB5  F0DD         	call	___wmul	;wreg free
 12651  015AA4  0102               	movlb	2	; () banked
 12652  015AA6  C200  F29B         	movff	?___wmul,??_getStringSecondsAsTime
 12653  015AAA  C201  F29C         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 12654  015AAE  0E00               	movlw	0
 12655  015AB0  BF9C               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 12656  015AB2  0EFF               	movlw	255
 12657  015AB4  6F9D               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 12658  015AB6  6F9E               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 12659  015AB8  519B               	movf	??_getStringSecondsAsTime& (0+255),w,b
 12660  015ABA  5F97               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 12661  015ABC  519C               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12662  015ABE  5B98               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 12663  015AC0  519D               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 12664  015AC2  5B99               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 12665  015AC4  519E               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 12666  015AC6  5B9A               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 12667                           
 12668                           ; BSR set to: 2
 12669                           ;heartbeat_timer.c: 63: days = input_seconds / (60 * 60 * 24);
 12670  015AC8  C297  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 12671  015ACC  C298  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 12672  015AD0  C299  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 12673  015AD4  C29A  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 12674  015AD8  0E80               	movlw	128
 12675  015ADA  6F04               	movwf	___lldiv@divisor& (0+255),b
 12676  015ADC  0E51               	movlw	81
 12677  015ADE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 12678  015AE0  0E00               	movlw	0
 12679  015AE2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 12680  015AE4  0E00               	movlw	0
 12681  015AE6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 12682  015AE8  ECBB  F0D4         	call	___lldiv	;wreg free
 12683  015AEC  0102               	movlb	2	; () banked
 12684  015AEE  5100               	movf	?___lldiv& (0+255),w,b
 12685  015AF0  0103               	movlb	3	; () banked
 12686  015AF2  6FF4               	movwf	getStringSecondsAsTime@days& (0+255),b
 12687                           
 12688                           ;heartbeat_timer.c: 64: input_seconds -= days * (60 * 60 * 24);
 12689  015AF4  C3F4  F200         	movff	getStringSecondsAsTime@days,___wmul@multiplier
 12690  015AF8  0102               	movlb	2	; () banked
 12691  015AFA  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 12692  015AFC  0E51               	movlw	81
 12693  015AFE  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12694  015B00  0E80               	movlw	128
 12695  015B02  6F02               	movwf	___wmul@multiplicand& (0+255),b
 12696  015B04  ECB5  F0DD         	call	___wmul	;wreg free
 12697  015B08  0102               	movlb	2	; () banked
 12698  015B0A  C200  F29B         	movff	?___wmul,??_getStringSecondsAsTime
 12699  015B0E  C201  F29C         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 12700  015B12  0E00               	movlw	0
 12701  015B14  BF9C               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 12702  015B16  0EFF               	movlw	255
 12703  015B18  6F9D               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 12704  015B1A  6F9E               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 12705  015B1C  519B               	movf	??_getStringSecondsAsTime& (0+255),w,b
 12706  015B1E  5F97               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 12707  015B20  519C               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12708  015B22  5B98               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 12709  015B24  519D               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 12710  015B26  5B99               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 12711  015B28  519E               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 12712  015B2A  5B9A               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 12713                           
 12714                           ; BSR set to: 2
 12715                           ;heartbeat_timer.c: 65: hours = input_seconds / (60 * 60);
 12716  015B2C  C297  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 12717  015B30  C298  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 12718  015B34  C299  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 12719  015B38  C29A  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 12720  015B3C  0E10               	movlw	16
 12721  015B3E  6F04               	movwf	___lldiv@divisor& (0+255),b
 12722  015B40  0E0E               	movlw	14
 12723  015B42  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 12724  015B44  0E00               	movlw	0
 12725  015B46  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 12726  015B48  0E00               	movlw	0
 12727  015B4A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 12728  015B4C  ECBB  F0D4         	call	___lldiv	;wreg free
 12729  015B50  0102               	movlb	2	; () banked
 12730  015B52  5100               	movf	?___lldiv& (0+255),w,b
 12731  015B54  0103               	movlb	3	; () banked
 12732  015B56  6FF5               	movwf	getStringSecondsAsTime@hours& (0+255),b
 12733                           
 12734                           ; BSR set to: 3
 12735                           ;heartbeat_timer.c: 66: input_seconds -= hours * (60 * 60);
 12736  015B58  C3F5  F200         	movff	getStringSecondsAsTime@hours,___wmul@multiplier
 12737  015B5C  0102               	movlb	2	; () banked
 12738  015B5E  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 12739  015B60  0E0E               	movlw	14
 12740  015B62  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12741  015B64  0E10               	movlw	16
 12742  015B66  6F02               	movwf	___wmul@multiplicand& (0+255),b
 12743  015B68  ECB5  F0DD         	call	___wmul	;wreg free
 12744  015B6C  0102               	movlb	2	; () banked
 12745  015B6E  C200  F29B         	movff	?___wmul,??_getStringSecondsAsTime
 12746  015B72  C201  F29C         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 12747  015B76  0E00               	movlw	0
 12748  015B78  BF9C               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 12749  015B7A  0EFF               	movlw	255
 12750  015B7C  6F9D               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 12751  015B7E  6F9E               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 12752  015B80  519B               	movf	??_getStringSecondsAsTime& (0+255),w,b
 12753  015B82  5F97               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 12754  015B84  519C               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12755  015B86  5B98               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 12756  015B88  519D               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 12757  015B8A  5B99               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 12758  015B8C  519E               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 12759  015B8E  5B9A               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 12760                           
 12761                           ;heartbeat_timer.c: 67: minutes = input_seconds / 60;
 12762  015B90  C297  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 12763  015B94  C298  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 12764  015B98  C299  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 12765  015B9C  C29A  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 12766  015BA0  0E3C               	movlw	60
 12767  015BA2  6F04               	movwf	___lldiv@divisor& (0+255),b
 12768  015BA4  0E00               	movlw	0
 12769  015BA6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 12770  015BA8  0E00               	movlw	0
 12771  015BAA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 12772  015BAC  0E00               	movlw	0
 12773  015BAE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 12774  015BB0  ECBB  F0D4         	call	___lldiv	;wreg free
 12775  015BB4  0102               	movlb	2	; () banked
 12776  015BB6  5100               	movf	?___lldiv& (0+255),w,b
 12777  015BB8  0103               	movlb	3	; () banked
 12778  015BBA  6FF6               	movwf	getStringSecondsAsTime@minutes& (0+255),b
 12779                           
 12780                           ; BSR set to: 3
 12781                           ;heartbeat_timer.c: 68: input_seconds -= minutes * 60;
 12782  015BBC  51F6               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 12783  015BBE  0D3C               	mullw	60
 12784  015BC0  CFF3 F29B          	movff	prodl,??_getStringSecondsAsTime
 12785  015BC4  CFF4 F29C          	movff	prodh,??_getStringSecondsAsTime+1
 12786  015BC8  0E00               	movlw	0
 12787  015BCA  0102               	movlb	2	; () banked
 12788  015BCC  BF9C               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 12789  015BCE  0EFF               	movlw	255
 12790  015BD0  6F9D               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 12791  015BD2  6F9E               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 12792  015BD4  519B               	movf	??_getStringSecondsAsTime& (0+255),w,b
 12793  015BD6  5F97               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 12794  015BD8  519C               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12795  015BDA  5B98               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 12796  015BDC  519D               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 12797  015BDE  5B99               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 12798  015BE0  519E               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 12799  015BE2  5B9A               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 12800                           
 12801                           ; BSR set to: 2
 12802                           ;heartbeat_timer.c: 69: seconds = input_seconds;
 12803  015BE4  C297  F3F2         	movff	getStringSecondsAsTime@input_seconds,getStringSecondsAsTime@seconds
 12804                           
 12805                           ; BSR set to: 2
 12806                           ;heartbeat_timer.c: 71: if (years > 0) {
 12807  015BE8  0103               	movlb	3	; () banked
 12808  015BEA  51F3               	movf	getStringSecondsAsTime@years& (0+255),w,b
 12809  015BEC  B4D8               	btfsc	status,2,c
 12810  015BEE  D02B               	goto	l18848
 12811                           
 12812                           ; BSR set to: 3
 12813                           ;heartbeat_timer.c: 73: if (years == 1) {
 12814  015BF0  05F3               	decf	getStringSecondsAsTime@years& (0+255),w,b
 12815  015BF2  A4D8               	btfss	status,2,c
 12816  015BF4  D00F               	goto	l18844
 12817                           
 12818                           ; BSR set to: 3
 12819                           ;heartbeat_timer.c: 75: sprintf(buff, "%d year, ", years);
 12820  015BF6  0EDD               	movlw	low getStringSecondsAsTime@buff
 12821  015BF8  0102               	movlb	2	; () banked
 12822  015BFA  6F84               	movwf	sprintf@wh& (0+255),b
 12823  015BFC  0E03               	movlw	high getStringSecondsAsTime@buff
 12824  015BFE  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12825  015C00  0EC2               	movlw	low STR_48
 12826  015C02  6F86               	movwf	sprintf@f& (0+255),b
 12827  015C04  0EFE               	movlw	high STR_48
 12828  015C06  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12829  015C08  C3F3  F288         	movff	getStringSecondsAsTime@years,?_sprintf+4
 12830  015C0C  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12831  015C0E  EC6D  F0D9         	call	_sprintf	;wreg free
 12832                           
 12833                           ;heartbeat_timer.c: 77: }
 12834  015C12  D00E               	goto	l18846
 12835  015C14                     l18844:
 12836                           
 12837                           ; BSR set to: 3
 12838                           ;heartbeat_timer.c: 79: else {;heartbeat_timer.c: 81: sprintf(buff, "%d years, ", years)
      +                          ;
 12839  015C14  0EDD               	movlw	low getStringSecondsAsTime@buff
 12840  015C16  0102               	movlb	2	; () banked
 12841  015C18  6F84               	movwf	sprintf@wh& (0+255),b
 12842  015C1A  0E03               	movlw	high getStringSecondsAsTime@buff
 12843  015C1C  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12844  015C1E  0E61               	movlw	low STR_49
 12845  015C20  6F86               	movwf	sprintf@f& (0+255),b
 12846  015C22  0EFE               	movlw	high STR_49
 12847  015C24  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12848  015C26  C3F3  F288         	movff	getStringSecondsAsTime@years,?_sprintf+4
 12849  015C2A  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12850  015C2C  EC6D  F0D9         	call	_sprintf	;wreg free
 12851  015C30                     l18846:
 12852                           
 12853                           ;heartbeat_timer.c: 83: };heartbeat_timer.c: 85: strcat(return_string, buff);
 12854  015C30  0E80               	movlw	low getStringSecondsAsTime@return_string
 12855  015C32  0102               	movlb	2	; () banked
 12856  015C34  6F00               	movwf	strcat@to& (0+255),b
 12857  015C36  0E03               	movlw	high getStringSecondsAsTime@return_string
 12858  015C38  6F01               	movwf	(strcat@to+1)& (0+255),b
 12859  015C3A  0EDD               	movlw	low getStringSecondsAsTime@buff
 12860  015C3C  6F02               	movwf	strcat@from& (0+255),b
 12861  015C3E  0E03               	movlw	high getStringSecondsAsTime@buff
 12862  015C40  6F03               	movwf	(strcat@from+1)& (0+255),b
 12863  015C42  EC21  F0D7         	call	_strcat	;wreg free
 12864  015C46                     l18848:
 12865                           
 12866                           ;heartbeat_timer.c: 87: };heartbeat_timer.c: 89: if (days > 0) {
 12867  015C46  0103               	movlb	3	; () banked
 12868  015C48  51F4               	movf	getStringSecondsAsTime@days& (0+255),w,b
 12869  015C4A  B4D8               	btfsc	status,2,c
 12870  015C4C  D02B               	goto	l18858
 12871                           
 12872                           ; BSR set to: 3
 12873                           ;heartbeat_timer.c: 91: if (days == 1) {
 12874  015C4E  05F4               	decf	getStringSecondsAsTime@days& (0+255),w,b
 12875  015C50  A4D8               	btfss	status,2,c
 12876  015C52  D00F               	goto	l18854
 12877                           
 12878                           ; BSR set to: 3
 12879                           ;heartbeat_timer.c: 93: sprintf(buff, "%d day, ", days);
 12880  015C54  0EDD               	movlw	low getStringSecondsAsTime@buff
 12881  015C56  0102               	movlb	2	; () banked
 12882  015C58  6F84               	movwf	sprintf@wh& (0+255),b
 12883  015C5A  0E03               	movlw	high getStringSecondsAsTime@buff
 12884  015C5C  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12885  015C5E  0E36               	movlw	low STR_50
 12886  015C60  6F86               	movwf	sprintf@f& (0+255),b
 12887  015C62  0EFF               	movlw	high STR_50
 12888  015C64  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12889  015C66  C3F4  F288         	movff	getStringSecondsAsTime@days,?_sprintf+4
 12890  015C6A  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12891  015C6C  EC6D  F0D9         	call	_sprintf	;wreg free
 12892                           
 12893                           ;heartbeat_timer.c: 95: }
 12894  015C70  D00E               	goto	l18856
 12895  015C72                     l18854:
 12896                           
 12897                           ; BSR set to: 3
 12898                           ;heartbeat_timer.c: 97: else {;heartbeat_timer.c: 99: sprintf(buff, "%d days, ", days);
 12899  015C72  0EDD               	movlw	low getStringSecondsAsTime@buff
 12900  015C74  0102               	movlb	2	; () banked
 12901  015C76  6F84               	movwf	sprintf@wh& (0+255),b
 12902  015C78  0E03               	movlw	high getStringSecondsAsTime@buff
 12903  015C7A  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12904  015C7C  0ED6               	movlw	low STR_51
 12905  015C7E  6F86               	movwf	sprintf@f& (0+255),b
 12906  015C80  0EFE               	movlw	high STR_51
 12907  015C82  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12908  015C84  C3F4  F288         	movff	getStringSecondsAsTime@days,?_sprintf+4
 12909  015C88  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12910  015C8A  EC6D  F0D9         	call	_sprintf	;wreg free
 12911  015C8E                     l18856:
 12912                           
 12913                           ;heartbeat_timer.c: 101: };heartbeat_timer.c: 103: strcat(return_string, buff);
 12914  015C8E  0E80               	movlw	low getStringSecondsAsTime@return_string
 12915  015C90  0102               	movlb	2	; () banked
 12916  015C92  6F00               	movwf	strcat@to& (0+255),b
 12917  015C94  0E03               	movlw	high getStringSecondsAsTime@return_string
 12918  015C96  6F01               	movwf	(strcat@to+1)& (0+255),b
 12919  015C98  0EDD               	movlw	low getStringSecondsAsTime@buff
 12920  015C9A  6F02               	movwf	strcat@from& (0+255),b
 12921  015C9C  0E03               	movlw	high getStringSecondsAsTime@buff
 12922  015C9E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12923  015CA0  EC21  F0D7         	call	_strcat	;wreg free
 12924  015CA4                     l18858:
 12925                           
 12926                           ;heartbeat_timer.c: 104: };heartbeat_timer.c: 106: if (hours > 0) {
 12927  015CA4  0103               	movlb	3	; () banked
 12928  015CA6  51F5               	movf	getStringSecondsAsTime@hours& (0+255),w,b
 12929  015CA8  B4D8               	btfsc	status,2,c
 12930  015CAA  D02B               	goto	l18868
 12931                           
 12932                           ; BSR set to: 3
 12933                           ;heartbeat_timer.c: 108: if (hours == 1) {
 12934  015CAC  05F5               	decf	getStringSecondsAsTime@hours& (0+255),w,b
 12935  015CAE  A4D8               	btfss	status,2,c
 12936  015CB0  D00F               	goto	l18864
 12937                           
 12938                           ; BSR set to: 3
 12939                           ;heartbeat_timer.c: 110: sprintf(buff, "%d hour, ", hours);
 12940  015CB2  0EDD               	movlw	low getStringSecondsAsTime@buff
 12941  015CB4  0102               	movlb	2	; () banked
 12942  015CB6  6F84               	movwf	sprintf@wh& (0+255),b
 12943  015CB8  0E03               	movlw	high getStringSecondsAsTime@buff
 12944  015CBA  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12945  015CBC  0ECC               	movlw	low STR_52
 12946  015CBE  6F86               	movwf	sprintf@f& (0+255),b
 12947  015CC0  0EFE               	movlw	high STR_52
 12948  015CC2  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12949  015CC4  C3F5  F288         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 12950  015CC8  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12951  015CCA  EC6D  F0D9         	call	_sprintf	;wreg free
 12952                           
 12953                           ;heartbeat_timer.c: 112: }
 12954  015CCE  D00E               	goto	l18866
 12955  015CD0                     l18864:
 12956                           
 12957                           ; BSR set to: 3
 12958                           ;heartbeat_timer.c: 114: else {;heartbeat_timer.c: 116: sprintf(buff, "%d hours, ", hour
      +                          s);
 12959  015CD0  0EDD               	movlw	low getStringSecondsAsTime@buff
 12960  015CD2  0102               	movlb	2	; () banked
 12961  015CD4  6F84               	movwf	sprintf@wh& (0+255),b
 12962  015CD6  0E03               	movlw	high getStringSecondsAsTime@buff
 12963  015CD8  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 12964  015CDA  0E6C               	movlw	low STR_53
 12965  015CDC  6F86               	movwf	sprintf@f& (0+255),b
 12966  015CDE  0EFE               	movlw	high STR_53
 12967  015CE0  6F87               	movwf	(sprintf@f+1)& (0+255),b
 12968  015CE2  C3F5  F288         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 12969  015CE6  6B89               	clrf	(?_sprintf+5)& (0+255),b
 12970  015CE8  EC6D  F0D9         	call	_sprintf	;wreg free
 12971  015CEC                     l18866:
 12972                           
 12973                           ;heartbeat_timer.c: 118: };heartbeat_timer.c: 120: strcat(return_string, buff);
 12974  015CEC  0E80               	movlw	low getStringSecondsAsTime@return_string
 12975  015CEE  0102               	movlb	2	; () banked
 12976  015CF0  6F00               	movwf	strcat@to& (0+255),b
 12977  015CF2  0E03               	movlw	high getStringSecondsAsTime@return_string
 12978  015CF4  6F01               	movwf	(strcat@to+1)& (0+255),b
 12979  015CF6  0EDD               	movlw	low getStringSecondsAsTime@buff
 12980  015CF8  6F02               	movwf	strcat@from& (0+255),b
 12981  015CFA  0E03               	movlw	high getStringSecondsAsTime@buff
 12982  015CFC  6F03               	movwf	(strcat@from+1)& (0+255),b
 12983  015CFE  EC21  F0D7         	call	_strcat	;wreg free
 12984  015D02                     l18868:
 12985                           
 12986                           ;heartbeat_timer.c: 122: };heartbeat_timer.c: 124: if (minutes > 0) {
 12987  015D02  0103               	movlb	3	; () banked
 12988  015D04  51F6               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 12989  015D06  B4D8               	btfsc	status,2,c
 12990  015D08  D02B               	goto	l18878
 12991                           
 12992                           ; BSR set to: 3
 12993                           ;heartbeat_timer.c: 126: if (minutes == 1) {
 12994  015D0A  05F6               	decf	getStringSecondsAsTime@minutes& (0+255),w,b
 12995  015D0C  A4D8               	btfss	status,2,c
 12996  015D0E  D00F               	goto	l18874
 12997                           
 12998                           ; BSR set to: 3
 12999                           ;heartbeat_timer.c: 128: sprintf(buff, "%d minute, ", minutes);
 13000  015D10  0EDD               	movlw	low getStringSecondsAsTime@buff
 13001  015D12  0102               	movlb	2	; () banked
 13002  015D14  6F84               	movwf	sprintf@wh& (0+255),b
 13003  015D16  0E03               	movlw	high getStringSecondsAsTime@buff
 13004  015D18  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 13005  015D1A  0EE4               	movlw	low STR_54
 13006  015D1C  6F86               	movwf	sprintf@f& (0+255),b
 13007  015D1E  0EFD               	movlw	high STR_54
 13008  015D20  6F87               	movwf	(sprintf@f+1)& (0+255),b
 13009  015D22  C3F6  F288         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13010  015D26  6B89               	clrf	(?_sprintf+5)& (0+255),b
 13011  015D28  EC6D  F0D9         	call	_sprintf	;wreg free
 13012                           
 13013                           ;heartbeat_timer.c: 130: }
 13014  015D2C  D00E               	goto	l18876
 13015  015D2E                     l18874:
 13016                           
 13017                           ; BSR set to: 3
 13018                           ;heartbeat_timer.c: 132: else {;heartbeat_timer.c: 134: sprintf(buff, "%d minutes, ", mi
      +                          nutes);
 13019  015D2E  0EDD               	movlw	low getStringSecondsAsTime@buff
 13020  015D30  0102               	movlb	2	; () banked
 13021  015D32  6F84               	movwf	sprintf@wh& (0+255),b
 13022  015D34  0E03               	movlw	high getStringSecondsAsTime@buff
 13023  015D36  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 13024  015D38  0E80               	movlw	low STR_55
 13025  015D3A  6F86               	movwf	sprintf@f& (0+255),b
 13026  015D3C  0EFD               	movlw	high STR_55
 13027  015D3E  6F87               	movwf	(sprintf@f+1)& (0+255),b
 13028  015D40  C3F6  F288         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13029  015D44  6B89               	clrf	(?_sprintf+5)& (0+255),b
 13030  015D46  EC6D  F0D9         	call	_sprintf	;wreg free
 13031  015D4A                     l18876:
 13032                           
 13033                           ;heartbeat_timer.c: 136: };heartbeat_timer.c: 138: strcat(return_string, buff);
 13034  015D4A  0E80               	movlw	low getStringSecondsAsTime@return_string
 13035  015D4C  0102               	movlb	2	; () banked
 13036  015D4E  6F00               	movwf	strcat@to& (0+255),b
 13037  015D50  0E03               	movlw	high getStringSecondsAsTime@return_string
 13038  015D52  6F01               	movwf	(strcat@to+1)& (0+255),b
 13039  015D54  0EDD               	movlw	low getStringSecondsAsTime@buff
 13040  015D56  6F02               	movwf	strcat@from& (0+255),b
 13041  015D58  0E03               	movlw	high getStringSecondsAsTime@buff
 13042  015D5A  6F03               	movwf	(strcat@from+1)& (0+255),b
 13043  015D5C  EC21  F0D7         	call	_strcat	;wreg free
 13044  015D60                     l18878:
 13045                           
 13046                           ;heartbeat_timer.c: 140: };heartbeat_timer.c: 142: if (seconds > 0) {
 13047  015D60  0103               	movlb	3	; () banked
 13048  015D62  51F2               	movf	getStringSecondsAsTime@seconds& (0+255),w,b
 13049  015D64  B4D8               	btfsc	status,2,c
 13050  015D66  D02B               	goto	l18888
 13051                           
 13052                           ; BSR set to: 3
 13053                           ;heartbeat_timer.c: 144: if (seconds == 1) {
 13054  015D68  05F2               	decf	getStringSecondsAsTime@seconds& (0+255),w,b
 13055  015D6A  A4D8               	btfss	status,2,c
 13056  015D6C  D00F               	goto	l18884
 13057                           
 13058                           ; BSR set to: 3
 13059                           ;heartbeat_timer.c: 146: sprintf(buff, "%d second", seconds);
 13060  015D6E  0EDD               	movlw	low getStringSecondsAsTime@buff
 13061  015D70  0102               	movlb	2	; () banked
 13062  015D72  6F84               	movwf	sprintf@wh& (0+255),b
 13063  015D74  0E03               	movlw	high getStringSecondsAsTime@buff
 13064  015D76  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 13065  015D78  0EE0               	movlw	low STR_56
 13066  015D7A  6F86               	movwf	sprintf@f& (0+255),b
 13067  015D7C  0EFE               	movlw	high STR_56
 13068  015D7E  6F87               	movwf	(sprintf@f+1)& (0+255),b
 13069  015D80  C3F2  F288         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13070  015D84  6B89               	clrf	(?_sprintf+5)& (0+255),b
 13071  015D86  EC6D  F0D9         	call	_sprintf	;wreg free
 13072                           
 13073                           ;heartbeat_timer.c: 148: }
 13074  015D8A  D00E               	goto	l18886
 13075  015D8C                     l18884:
 13076                           
 13077                           ; BSR set to: 3
 13078                           ;heartbeat_timer.c: 150: else {;heartbeat_timer.c: 152: sprintf(buff, "%d seconds", seco
      +                          nds);
 13079  015D8C  0EDD               	movlw	low getStringSecondsAsTime@buff
 13080  015D8E  0102               	movlb	2	; () banked
 13081  015D90  6F84               	movwf	sprintf@wh& (0+255),b
 13082  015D92  0E03               	movlw	high getStringSecondsAsTime@buff
 13083  015D94  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 13084  015D96  0E77               	movlw	low STR_57
 13085  015D98  6F86               	movwf	sprintf@f& (0+255),b
 13086  015D9A  0EFE               	movlw	high STR_57
 13087  015D9C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 13088  015D9E  C3F2  F288         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13089  015DA2  6B89               	clrf	(?_sprintf+5)& (0+255),b
 13090  015DA4  EC6D  F0D9         	call	_sprintf	;wreg free
 13091  015DA8                     l18886:
 13092                           
 13093                           ;heartbeat_timer.c: 154: };heartbeat_timer.c: 156: strcat(return_string, buff);
 13094  015DA8  0E80               	movlw	low getStringSecondsAsTime@return_string
 13095  015DAA  0102               	movlb	2	; () banked
 13096  015DAC  6F00               	movwf	strcat@to& (0+255),b
 13097  015DAE  0E03               	movlw	high getStringSecondsAsTime@return_string
 13098  015DB0  6F01               	movwf	(strcat@to+1)& (0+255),b
 13099  015DB2  0EDD               	movlw	low getStringSecondsAsTime@buff
 13100  015DB4  6F02               	movwf	strcat@from& (0+255),b
 13101  015DB6  0E03               	movlw	high getStringSecondsAsTime@buff
 13102  015DB8  6F03               	movwf	(strcat@from+1)& (0+255),b
 13103  015DBA  EC21  F0D7         	call	_strcat	;wreg free
 13104  015DBE                     l18888:
 13105                           
 13106                           ;heartbeat_timer.c: 158: };heartbeat_timer.c: 160: return return_string;
 13107  015DBE  0E80               	movlw	low getStringSecondsAsTime@return_string
 13108  015DC0  0102               	movlb	2	; () banked
 13109  015DC2  6F97               	movwf	?_getStringSecondsAsTime& (0+255),b
 13110  015DC4  0E03               	movlw	high getStringSecondsAsTime@return_string
 13111  015DC6  6F98               	movwf	(?_getStringSecondsAsTime+1)& (0+255),b
 13112                           
 13113                           ; BSR set to: 2
 13114  015DC8  0012               	return		;funcret
 13115  015DCA                     __end_of_getStringSecondsAsTime:
 13116                           	opt callstack 0
 13117                           
 13118 ;; *************** function _strcat *****************
 13119 ;; Defined at:
 13120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13123 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13124 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13125 ;;		 -> STR_310(2), STR_309(3), STR_308(3), STR_307(3), 
 13126 ;;		 -> STR_306(3), STR_305(3), STR_304(3), STR_303(3), 
 13127 ;;		 -> STR_302(3), STR_301(3), STR_300(2), STR_299(3), 
 13128 ;;		 -> STR_298(3), STR_297(3), STR_296(3), STR_295(3), 
 13129 ;;		 -> STR_294(3), STR_293(3), STR_292(3), STR_291(3), 
 13130 ;;		 -> STR_290(2), STR_289(2), STR_288(2), STR_287(2), 
 13131 ;;		 -> STR_286(2), STR_285(2), STR_284(2), STR_283(2), 
 13132 ;;		 -> getStringSecondsAsTime@buff(20), 
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;  cp              2    4[BANK2 ] PTR unsigned char 
 13135 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  2    0[BANK2 ] PTR unsigned char 
 13138 ;; Registers used:
 13139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13140 ;; Tracked objects:
 13141 ;;		On entry : 0/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13145 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13149 ;;Total ram usage:        6 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:   11
 13152 ;; This function calls:
 13153 ;;		Nothing
 13154 ;; This function is called by:
 13155 ;;		_getStringSecondsAsTime
 13156 ;;		_terminalTextAttributes
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text10
 13161  01AE42                     __ptext10:
 13162                           	opt callstack 0
 13163  01AE42                     _strcat:
 13164                           	opt callstack 16
 13165                           
 13166                           ; BSR set to: 2
 13167                           ;incstack = 0
 13168  01AE42  C200  F204         	movff	strcat@to,strcat@cp
 13169  01AE46  C201  F205         	movff	strcat@to+1,strcat@cp+1
 13170  01AE4A  D003               	goto	l18176
 13171  01AE4C                     l18174:
 13172  01AE4C  0102               	movlb	2	; () banked
 13173  01AE4E  4B04               	infsnz	strcat@cp& (0+255),f,b
 13174  01AE50  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13175  01AE52                     l18176:
 13176  01AE52  C204  FFD9         	movff	strcat@cp,fsr2l
 13177  01AE56  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13178  01AE5A  50DF               	movf	indf2,w,c
 13179  01AE5C  B4D8               	btfsc	status,2,c
 13180  01AE5E  D006               	goto	l18180
 13181  01AE60  D7F5               	goto	l18174
 13182  01AE62                     l18178:
 13183  01AE62  0102               	movlb	2	; () banked
 13184  01AE64  4B04               	infsnz	strcat@cp& (0+255),f,b
 13185  01AE66  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13186  01AE68  4B02               	infsnz	strcat@from& (0+255),f,b
 13187  01AE6A  2B03               	incf	(strcat@from+1)& (0+255),f,b
 13188  01AE6C                     l18180:
 13189  01AE6C  C202  FFF6         	movff	strcat@from,tblptrl
 13190  01AE70  C203  FFF7         	movff	strcat@from+1,tblptrh
 13191  01AE74  0E00               	movlw	low (__mediumconst shr (0+16))
 13192  01AE76  6EF8               	movwf	tblptru,c
 13193  01AE78  C204  FFD9         	movff	strcat@cp,fsr2l
 13194  01AE7C  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13195  01AE80  0E0E               	movlw	(high __ramtop+-1)
 13196  01AE82  64F7               	cpfsgt	tblptrh,c
 13197  01AE84  D003               	bra	u22867
 13198  01AE86  0008               	tblrd		*
 13199  01AE88  50F5               	movf	tablat,w,c
 13200  01AE8A  D005               	bra	u22860
 13201  01AE8C                     u22867:
 13202  01AE8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13203  01AE90  CFF7 FFEA          	movff	tblptrh,fsr0h
 13204  01AE94  50EF               	movf	indf0,w,c
 13205  01AE96                     u22860:
 13206  01AE96  6EDF               	movwf	indf2,c
 13207  01AE98  50DF               	movf	indf2,w,c
 13208  01AE9A  B4D8               	btfsc	status,2,c
 13209  01AE9C  0012               	return	
 13210  01AE9E  D7E1               	goto	l18178
 13211  01AEA0                     __end_of_strcat:
 13212                           	opt callstack 0
 13213                           
 13214 ;; *************** function _getNXQChargeStateString *****************
 13215 ;; Defined at:
 13216 ;;		line 9 in file "NXQ_charge_state.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  2    0[BANK2 ] PTR unsigned char 
 13223 ;; Registers used:
 13224 ;;		wreg, status,2, status,0
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13230 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13233 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13234 ;;Total ram usage:        2 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:   11
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_printCurrentMeasurements
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text11
 13245  01AEA0                     __ptext11:
 13246                           	opt callstack 0
 13247  01AEA0                     _getNXQChargeStateString:
 13248                           	opt callstack 16
 13249                           
 13250                           ;NXQ_charge_state.c: 11: switch (nxq_charge_state) {
 13251                           
 13252                           ;incstack = 0
 13253  01AEA0  D01E               	goto	l18814
 13254  01AEA2                     l18782:
 13255                           
 13256                           ; BSR set to: 1
 13257                           ;NXQ_charge_state.c: 14: return "idle";
 13258  01AEA2  0EB5               	movlw	low STR_11
 13259  01AEA4  0102               	movlb	2	; () banked
 13260  01AEA6  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13261  01AEA8  0EFF               	movlw	high STR_11
 13262  01AEAA  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13263  01AEAC  0012               	return	
 13264  01AEAE                     l18788:
 13265                           
 13266                           ; BSR set to: 1
 13267                           ;NXQ_charge_state.c: 18: return "charging";
 13268  01AEAE  0E3F               	movlw	low STR_12
 13269  01AEB0  0102               	movlb	2	; () banked
 13270  01AEB2  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13271  01AEB4  0EFF               	movlw	high STR_12
 13272  01AEB6  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13273  01AEB8  0012               	return	
 13274  01AEBA                     l18794:
 13275                           
 13276                           ; BSR set to: 1
 13277                           ;NXQ_charge_state.c: 22: return "fully charged";
 13278  01AEBA  0E24               	movlw	low STR_13
 13279  01AEBC  0102               	movlb	2	; () banked
 13280  01AEBE  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13281  01AEC0  0EFD               	movlw	high STR_13
 13282  01AEC2  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13283  01AEC4  0012               	return	
 13284  01AEC6                     l18800:
 13285                           
 13286                           ; BSR set to: 1
 13287                           ;NXQ_charge_state.c: 26: return "error";
 13288  01AEC6  0E9B               	movlw	low STR_14
 13289  01AEC8  0102               	movlb	2	; () banked
 13290  01AECA  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13291  01AECC  0EFF               	movlw	high STR_14
 13292  01AECE  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13293  01AED0  0012               	return	
 13294  01AED2                     l18806:
 13295                           
 13296                           ; BSR set to: 1
 13297                           ;NXQ_charge_state.c: 30: return "undefined";
 13298  01AED2  0E08               	movlw	low STR_15
 13299  01AED4  0102               	movlb	2	; () banked
 13300  01AED6  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13301  01AED8  0EFF               	movlw	high STR_15
 13302  01AEDA  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13303  01AEDC  0012               	return	
 13304  01AEDE                     l18814:
 13305  01AEDE  0101               	movlb	1	; () banked
 13306  01AEE0  5195               	movf	_nxq_charge_state& (0+255),w,b
 13307                           
 13308                           ; Switch size 1, requested type "simple"
 13309                           ; Number of cases is 4, Range of values is 0 to 3
 13310                           ; switch strategies available:
 13311                           ; Name         Instructions Cycles
 13312                           ; simple_byte           13     7 (average)
 13313                           ;	Chosen strategy is simple_byte
 13314  01AEE2  0A00               	xorlw	0	; case 0
 13315  01AEE4  B4D8               	btfsc	status,2,c
 13316  01AEE6  D7DD               	goto	l18782
 13317  01AEE8  0A01               	xorlw	1	; case 1
 13318  01AEEA  B4D8               	btfsc	status,2,c
 13319  01AEEC  D7E0               	goto	l18788
 13320  01AEEE  0A03               	xorlw	3	; case 2
 13321  01AEF0  B4D8               	btfsc	status,2,c
 13322  01AEF2  D7E3               	goto	l18794
 13323  01AEF4  0A01               	xorlw	1	; case 3
 13324  01AEF6  B4D8               	btfsc	status,2,c
 13325  01AEF8  D7E6               	goto	l18800
 13326  01AEFA  D7EB               	goto	l18806
 13327  01AEFC                     __end_of_getNXQChargeStateString:
 13328                           	opt callstack 0
 13329                           
 13330 ;; *************** function _getUserID *****************
 13331 ;; Defined at:
 13332 ;;		line 72 in file "device_IDs.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  inputUserID     1    wreg     unsigned char 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  inputUserID     1   17[BANK2 ] unsigned char 
 13337 ;;  initialOffse    4    0        unsigned long 
 13338 ;;  IDOffset        1   18[BANK2 ] unsigned char 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  2   11[BANK2 ] unsigned int 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13348 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13349 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13351 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13352 ;;Total ram usage:        8 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:   13
 13355 ;; This function calls:
 13356 ;;		_FLASH_ReadWord
 13357 ;; This function is called by:
 13358 ;;		_ringBufferLUT
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           	psect	text12
 13363  01B8A8                     __ptext12:
 13364                           	opt callstack 0
 13365  01B8A8                     _getUserID:
 13366                           	opt callstack 15
 13367                           
 13368                           ; BSR set to: 2
 13369                           ;incstack = 0
 13370                           ;getUserID@inputUserID stored from wreg
 13371  01B8A8  0102               	movlb	2	; () banked
 13372  01B8AA  6F11               	movwf	getUserID@inputUserID& (0+255),b
 13373                           
 13374                           ;device_IDs.c: 78: uint8_t IDOffset = inputUserID * 2;
 13375  01B8AC  0102               	movlb	2	; () banked
 13376  01B8AE  5111               	movf	getUserID@inputUserID& (0+255),w,b
 13377  01B8B0  0D02               	mullw	2
 13378  01B8B2  CFF3 F212          	movff	prodl,getUserID@IDOffset
 13379                           
 13380                           ; BSR set to: 2
 13381                           ;device_IDs.c: 80: return FLASH_ReadWord(initialOffset + IDOffset);
 13382  01B8B6  0E00               	movlw	0
 13383  01B8B8  2512               	addwf	getUserID@IDOffset& (0+255),w,b
 13384  01B8BA  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13385  01B8BC  6B05               	clrf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13386  01B8BE  0E00               	movlw	0
 13387  01B8C0  2305               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),f,b
 13388  01B8C2  6B06               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13389  01B8C4  0E20               	movlw	32
 13390  01B8C6  2306               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),f,b
 13391  01B8C8  6B07               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13392  01B8CA  0E00               	movlw	0
 13393  01B8CC  2307               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),f,b
 13394  01B8CE  ECA7  F0DA         	call	_FLASH_ReadWord	;wreg free
 13395  01B8D2  C204  F20B         	movff	?_FLASH_ReadWord,?_getUserID
 13396  01B8D6  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 13397  01B8DA  0012               	return		;funcret
 13398  01B8DC                     __end_of_getUserID:
 13399                           	opt callstack 0
 13400                           
 13401 ;; *************** function _getDeviceIDString *****************
 13402 ;; Defined at:
 13403 ;;		line 34 in file "device_IDs.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  inputDevID      2   13[BANK2 ] unsigned int 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;		None
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  2   13[BANK2 ] PTR inline unsigned char
 13410 ;; Registers used:
 13411 ;;		wreg, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13417 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13419 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13420 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13421 ;;Total ram usage:        4 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:   11
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_ringBufferLUT
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text13
 13432  01A58C                     __ptext13:
 13433                           	opt callstack 0
 13434  01A58C                     _getDeviceIDString:
 13435                           	opt callstack 17
 13436                           
 13437                           ;device_IDs.c: 38: switch (inputDevID) {
 13438                           
 13439                           ;incstack = 0
 13440  01A58C  D023               	goto	l19582
 13441  01A58E                     l19538:
 13442                           
 13443                           ; BSR set to: 2
 13444                           ;device_IDs.c: 41: return "PIC18F67K40";
 13445  01A58E  0E08               	movlw	low STR_41
 13446  01A590  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13447  01A592  0EFE               	movlw	high STR_41
 13448  01A594  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13449  01A596  0012               	return	
 13450  01A598                     l19544:
 13451                           
 13452                           ; BSR set to: 2
 13453                           ;device_IDs.c: 45: return "PIC18LF67K40";
 13454  01A598  0EA7               	movlw	low STR_42
 13455  01A59A  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13456  01A59C  0EFD               	movlw	high STR_42
 13457  01A59E  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13458  01A5A0  0012               	return	
 13459  01A5A2                     l19550:
 13460                           
 13461                           ; BSR set to: 2
 13462                           ;device_IDs.c: 49: return "PIC18F27K40";
 13463  01A5A2  0EF0               	movlw	low STR_43
 13464  01A5A4  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13465  01A5A6  0EFD               	movlw	high STR_43
 13466  01A5A8  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13467  01A5AA  0012               	return	
 13468  01A5AC                     l19556:
 13469                           
 13470                           ; BSR set to: 2
 13471                           ;device_IDs.c: 53: return "PIC18F47K40";
 13472  01A5AC  0EFC               	movlw	low STR_44
 13473  01A5AE  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13474  01A5B0  0EFD               	movlw	high STR_44
 13475  01A5B2  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13476  01A5B4  0012               	return	
 13477  01A5B6                     l19562:
 13478                           
 13479                           ; BSR set to: 2
 13480                           ;device_IDs.c: 57: return "PIC18LF27K40";
 13481  01A5B6  0E8D               	movlw	low STR_45
 13482  01A5B8  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13483  01A5BA  0EFD               	movlw	high STR_45
 13484  01A5BC  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13485  01A5BE  0012               	return	
 13486  01A5C0                     l19568:
 13487                           
 13488                           ; BSR set to: 2
 13489                           ;device_IDs.c: 61: return "PIC18LF47K40";
 13490  01A5C0  0E9A               	movlw	low STR_46
 13491  01A5C2  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13492  01A5C4  0EFD               	movlw	high STR_46
 13493  01A5C6  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13494  01A5C8  0012               	return	
 13495  01A5CA                     l19574:
 13496                           
 13497                           ; BSR set to: 2
 13498                           ;device_IDs.c: 65: return "Undefined";
 13499  01A5CA  0EFE               	movlw	low STR_20
 13500  01A5CC  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13501  01A5CE  0EFE               	movlw	high STR_20
 13502  01A5D0  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13503  01A5D2  0012               	return	
 13504  01A5D4                     l19582:
 13505  01A5D4  C20D  F20F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 13506  01A5D8  C20E  F210         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 13507                           
 13508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 13509                           ; Switch size 1, requested type "simple"
 13510                           ; Number of cases is 3, Range of values is 105 to 107
 13511                           ; switch strategies available:
 13512                           ; Name         Instructions Cycles
 13513                           ; simple_byte           10     6 (average)
 13514                           ;	Chosen strategy is simple_byte
 13515  01A5DC  0102               	movlb	2	; () banked
 13516  01A5DE  5110               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 13517  01A5E0  0A69               	xorlw	105	; case 105
 13518  01A5E2  B4D8               	btfsc	status,2,c
 13519  01A5E4  D007               	goto	l22354
 13520  01A5E6  0A03               	xorlw	3	; case 106
 13521  01A5E8  B4D8               	btfsc	status,2,c
 13522  01A5EA  D00F               	goto	l22356
 13523  01A5EC  0A01               	xorlw	1	; case 107
 13524  01A5EE  B4D8               	btfsc	status,2,c
 13525  01A5F0  D014               	goto	l22358
 13526  01A5F2  D7EB               	goto	l19574
 13527  01A5F4                     l22354:
 13528                           
 13529                           ; BSR set to: 2
 13530                           ; Switch size 1, requested type "simple"
 13531                           ; Number of cases is 3, Range of values is 0 to 224
 13532                           ; switch strategies available:
 13533                           ; Name         Instructions Cycles
 13534                           ; simple_byte           10     6 (average)
 13535                           ;	Chosen strategy is simple_byte
 13536  01A5F4  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13537  01A5F6  0A00               	xorlw	0	; case 0
 13538  01A5F8  B4D8               	btfsc	status,2,c
 13539  01A5FA  D7D8               	goto	l19556
 13540  01A5FC  0A60               	xorlw	96	; case 96
 13541  01A5FE  B4D8               	btfsc	status,2,c
 13542  01A600  D7D0               	goto	l19550
 13543  01A602  0A80               	xorlw	128	; case 224
 13544  01A604  B4D8               	btfsc	status,2,c
 13545  01A606  D7DC               	goto	l19568
 13546  01A608  D7E0               	goto	l19574
 13547  01A60A                     l22356:
 13548                           
 13549                           ; BSR set to: 2
 13550                           ; Switch size 1, requested type "simple"
 13551                           ; Number of cases is 2, Range of values is 64 to 192
 13552                           ; switch strategies available:
 13553                           ; Name         Instructions Cycles
 13554                           ; simple_byte            7     4 (average)
 13555                           ;	Chosen strategy is simple_byte
 13556  01A60A  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13557  01A60C  0A40               	xorlw	64	; case 64
 13558  01A60E  B4D8               	btfsc	status,2,c
 13559  01A610  D7D2               	goto	l19562
 13560  01A612  0A80               	xorlw	128	; case 192
 13561  01A614  B4D8               	btfsc	status,2,c
 13562  01A616  D7BB               	goto	l19538
 13563  01A618  D7D8               	goto	l19574
 13564  01A61A                     l22358:
 13565                           
 13566                           ; BSR set to: 2
 13567                           ; Switch size 1, requested type "simple"
 13568                           ; Number of cases is 1, Range of values is 32 to 32
 13569                           ; switch strategies available:
 13570                           ; Name         Instructions Cycles
 13571                           ; simple_byte            4     3 (average)
 13572                           ;	Chosen strategy is simple_byte
 13573  01A61A  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13574  01A61C  0A20               	xorlw	32	; case 32
 13575  01A61E  B4D8               	btfsc	status,2,c
 13576  01A620  D7BB               	goto	l19544
 13577  01A622  D7D3               	goto	l19574
 13578  01A624                     __end_of_getDeviceIDString:
 13579                           	opt callstack 0
 13580                           
 13581 ;; *************** function _getCauseOfResetString *****************
 13582 ;; Defined at:
 13583 ;;		line 87 in file "cause_of_reset.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  r               1    wreg     enum E9577
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  r               1    2[BANK2 ] enum E9577
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  2    0[BANK2 ] PTR inline unsigned char
 13590 ;; Registers used:
 13591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13597 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13598 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13600 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13601 ;;Total ram usage:        3 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:   11
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_main
 13608 ;;		_ringBufferLUT
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           	psect	text14
 13613  01B9A8                     __ptext14:
 13614                           	opt callstack 0
 13615  01B9A8                     _getCauseOfResetString:
 13616                           	opt callstack 17
 13617                           
 13618                           ; BSR set to: 2
 13619                           ;incstack = 0
 13620                           ;getCauseOfResetString@r stored from wreg
 13621  01B9A8  0102               	movlb	2	; () banked
 13622  01B9AA  6F02               	movwf	getCauseOfResetString@r& (0+255),b
 13623                           
 13624                           ;cause_of_reset.c: 90: static char *strings[] = {;cause_of_reset.c: 91: "Undefined Reset
      +                          ",;cause_of_reset.c: 92: "Power On Reset",;cause_of_reset.c: 93: "Brown Out Reset",;caus
      +                          e_of_reset.c: 94: "Master Clear Reset",;cause_of_reset.c: 95: "Watch Dog Timer Violation
      +                           Reset",;cause_of_reset.c: 96: "Windowed Watch Dog Timer Violation Reset",;cause_of_rese
      +                          t.c: 97: "RESET Instruction Executed",;cause_of_reset.c: 98: "Stack Overflow Reset",;cau
      +                          se_of_reset.c: 99: "Stack Underflow Reset",;cause_of_reset.c: 100: };;cause_of_reset.c: 
      +                          103: if (r <= 8) {
 13625  01B9AC  0E09               	movlw	9
 13626  01B9AE  0102               	movlb	2	; () banked
 13627  01B9B0  6102               	cpfslt	getCauseOfResetString@r& (0+255),b
 13628  01B9B2  D00D               	goto	l19510
 13629                           
 13630                           ; BSR set to: 2
 13631                           ;cause_of_reset.c: 105: return strings[r];
 13632  01B9B4  5102               	movf	getCauseOfResetString@r& (0+255),w,b
 13633  01B9B6  0D02               	mullw	2
 13634  01B9B8  0ECB               	movlw	low getCauseOfResetString@strings
 13635  01B9BA  24F3               	addwf	prodl,w,c
 13636  01B9BC  6ED9               	movwf	fsr2l,c
 13637  01B9BE  0E03               	movlw	high getCauseOfResetString@strings
 13638  01B9C0  20F4               	addwfc	prodh,w,c
 13639  01B9C2  6EDA               	movwf	fsr2h,c
 13640  01B9C4  CFDE F200          	movff	postinc2,?_getCauseOfResetString
 13641  01B9C8  CFDD F201          	movff	postdec2,?_getCauseOfResetString+1
 13642  01B9CC  0012               	return	
 13643  01B9CE                     l19510:
 13644                           
 13645                           ; BSR set to: 2
 13646                           ;cause_of_reset.c: 109: else {;cause_of_reset.c: 111: return "Undefined Reset";
 13647  01B9CE  0E11               	movlw	low STR_21
 13648  01B9D0  6F00               	movwf	?_getCauseOfResetString& (0+255),b
 13649  01B9D2  0EFC               	movlw	high STR_21
 13650  01B9D4  6F01               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 13651                           
 13652                           ; BSR set to: 2
 13653  01B9D6  0012               	return		;funcret
 13654  01B9D8                     __end_of_getCauseOfResetString:
 13655                           	opt callstack 0
 13656                           
 13657 ;; *************** function _clearUARTErrors *****************
 13658 ;; Defined at:
 13659 ;;		line 85 in file "error_handling.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;		None
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      void 
 13666 ;; Registers used:
 13667 ;;		wreg, status,2, status,0, cstack
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13677 ;;Total ram usage:        0 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:   13
 13680 ;; This function calls:
 13681 ;;		_updateErrorLEDs
 13682 ;; This function is called by:
 13683 ;;		_ringBufferLUT
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           	psect	text15
 13688  01C0FA                     __ptext15:
 13689                           	opt callstack 0
 13690  01C0FA                     _clearUARTErrors:
 13691                           	opt callstack 15
 13692                           
 13693                           ;error_handling.c: 88: error_handler.USB_UART_COMM_error_flag = 0;
 13694                           
 13695                           ; BSR set to: 2
 13696                           ;incstack = 0
 13697  01C0FA  0E00               	movlw	0
 13698  01C0FC  0100               	movlb	0	; () banked
 13699  01C0FE  6FCC               	movwf	(_error_handler+7)& (0+255),b
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;error_handling.c: 90: updateErrorLEDs();
 13703  01C100  ECD9  F0D9         	call	_updateErrorLEDs	;wreg free
 13704  01C104  0012               	return		;funcret
 13705  01C106                     __end_of_clearUARTErrors:
 13706                           	opt callstack 0
 13707                           
 13708 ;; *************** function _clearI2CErrors *****************
 13709 ;; Defined at:
 13710 ;;		line 95 in file "error_handling.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;		None
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;		None
 13715 ;; Return value:  Size  Location     Type
 13716 ;;                  1    wreg      void 
 13717 ;; Registers used:
 13718 ;;		wreg, status,2, status,0, cstack
 13719 ;; Tracked objects:
 13720 ;;		On entry : 0/0
 13721 ;;		On exit  : 0/0
 13722 ;;		Unchanged: 0/0
 13723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13728 ;;Total ram usage:        0 bytes
 13729 ;; Hardware stack levels used:    1
 13730 ;; Hardware stack levels required when called:   13
 13731 ;; This function calls:
 13732 ;;		_updateErrorLEDs
 13733 ;; This function is called by:
 13734 ;;		_ringBufferLUT
 13735 ;; This function uses a non-reentrant model
 13736 ;;
 13737                           
 13738                           	psect	text16
 13739  01BE04                     __ptext16:
 13740                           	opt callstack 0
 13741  01BE04                     _clearI2CErrors:
 13742                           	opt callstack 15
 13743                           
 13744                           ;error_handling.c: 97: error_handler.I2C_Ambient_Temp_Sense_error_flag = 0;
 13745                           
 13746                           ;incstack = 0
 13747  01BE04  0E00               	movlw	0
 13748  01BE06  0100               	movlb	0	; () banked
 13749  01BE08  6FCB               	movwf	(_error_handler+6)& (0+255),b
 13750                           
 13751                           ;error_handling.c: 98: error_handler.I2C_General_error_flag = 0;
 13752  01BE0A  0E00               	movlw	0
 13753  01BE0C  6FC7               	movwf	(_error_handler+2)& (0+255),b
 13754                           
 13755                           ;error_handling.c: 99: error_handler.I2C_OLED_error_flag = 0;
 13756  01BE0E  0E00               	movlw	0
 13757  01BE10  6FC8               	movwf	(_error_handler+3)& (0+255),b
 13758                           
 13759                           ;error_handling.c: 100: error_handler.I2C_POS5_Temp_Sense_error_flag = 0;
 13760  01BE12  0E00               	movlw	0
 13761  01BE14  6FCA               	movwf	(_error_handler+5)& (0+255),b
 13762                           
 13763                           ;error_handling.c: 101: error_handler.I2C_QI_Temp_Sense_error_flag = 0;
 13764  01BE16  0E00               	movlw	0
 13765  01BE18  6FC9               	movwf	(_error_handler+4)& (0+255),b
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;error_handling.c: 103: updateErrorLEDs();
 13769  01BE1A  ECD9  F0D9         	call	_updateErrorLEDs	;wreg free
 13770  01BE1E  0012               	return		;funcret
 13771  01BE20                     __end_of_clearI2CErrors:
 13772                           	opt callstack 0
 13773                           
 13774 ;; *************** function _clearADCErrors *****************
 13775 ;; Defined at:
 13776 ;;		line 74 in file "error_handling.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;		None
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      void 
 13783 ;; Registers used:
 13784 ;;		wreg, status,2, status,0, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13794 ;;Total ram usage:        0 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:   13
 13797 ;; This function calls:
 13798 ;;		_updateErrorLEDs
 13799 ;; This function is called by:
 13800 ;;		_ringBufferLUT
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           	psect	text17
 13805  01BFDC                     __ptext17:
 13806                           	opt callstack 0
 13807  01BFDC                     _clearADCErrors:
 13808                           	opt callstack 15
 13809                           
 13810                           ;error_handling.c: 77: error_handler.FVR_ADC_error_flag = 0;
 13811                           
 13812                           ;incstack = 0
 13813  01BFDC  0E00               	movlw	0
 13814  01BFDE  0100               	movlb	0	; () banked
 13815  01BFE0  6FC5               	movwf	_error_handler& (0+255),b
 13816                           
 13817                           ;error_handling.c: 78: error_handler.ADC_general_error_flag = 0;
 13818  01BFE2  0E00               	movlw	0
 13819  01BFE4  6FC6               	movwf	(_error_handler+1)& (0+255),b
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;error_handling.c: 80: updateErrorLEDs();
 13823  01BFE6  ECD9  F0D9         	call	_updateErrorLEDs	;wreg free
 13824  01BFEA  0012               	return		;funcret
 13825  01BFEC                     __end_of_clearADCErrors:
 13826                           	opt callstack 0
 13827                           
 13828 ;; *************** function _updateErrorLEDs *****************
 13829 ;; Defined at:
 13830 ;;		line 60 in file "error_handling.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;		None
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, status,2, status,0, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13846 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13847 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13848 ;;Total ram usage:        1 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:   12
 13851 ;; This function calls:
 13852 ;;		_getADCError
 13853 ;;		_getI2CError
 13854 ;;		_getUARTError
 13855 ;; This function is called by:
 13856 ;;		_main
 13857 ;;		_clearADCErrors
 13858 ;;		_clearUARTErrors
 13859 ;;		_clearI2CErrors
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           	psect	text18
 13864  01B3B2                     __ptext18:
 13865                           	opt callstack 0
 13866  01B3B2                     _updateErrorLEDs:
 13867                           	opt callstack 18
 13868                           
 13869                           ;error_handling.c: 63: LATBbits.LATB7 = getADCError();
 13870                           
 13871                           ;incstack = 0
 13872  01B3B2  EC88  F0DF         	call	_getADCError	;wreg free
 13873  01B3B6  0102               	movlb	2	; () banked
 13874  01B3B8  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 13875  01B3BA  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 13876  01B3BC  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 13877  01B3BE  5084               	movf	3972,w,c	;volatile
 13878  01B3C0  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13879  01B3C2  0B7F               	andlw	-129
 13880  01B3C4  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13881  01B3C6  6E84               	movwf	3972,c	;volatile
 13882                           
 13883                           ;error_handling.c: 66: LATCbits.LATC5 = getI2CError();
 13884  01B3C8  ECA1  F0DD         	call	_getI2CError	;wreg free
 13885  01B3CC  0102               	movlb	2	; () banked
 13886  01B3CE  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 13887  01B3D0  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 13888  01B3D2  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 13889  01B3D4  5085               	movf	3973,w,c	;volatile
 13890  01B3D6  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13891  01B3D8  0BDF               	andlw	-33
 13892  01B3DA  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13893  01B3DC  6E85               	movwf	3973,c	;volatile
 13894                           
 13895                           ;error_handling.c: 69: LATCbits.LATC6 = getUARTError();
 13896  01B3DE  ECB2  F0E0         	call	_getUARTError	;wreg free
 13897  01B3E2  0102               	movlb	2	; () banked
 13898  01B3E4  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 13899  01B3E6  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 13900  01B3E8  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 13901  01B3EA  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 13902  01B3EC  5085               	movf	3973,w,c	;volatile
 13903  01B3EE  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13904  01B3F0  0BBF               	andlw	-65
 13905  01B3F2  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 13906  01B3F4  6E85               	movwf	3973,c	;volatile
 13907                           
 13908                           ; BSR set to: 2
 13909  01B3F6  0012               	return		;funcret
 13910  01B3F8                     __end_of_updateErrorLEDs:
 13911                           	opt callstack 0
 13912                           
 13913 ;; *************** function _getUARTError *****************
 13914 ;; Defined at:
 13915 ;;		line 31 in file "error_handling.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;		None
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;		None
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  1    wreg      unsigned char 
 13922 ;; Registers used:
 13923 ;;		wreg, status,2
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : 0/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13933 ;;Total ram usage:        0 bytes
 13934 ;; Hardware stack levels used:    1
 13935 ;; Hardware stack levels required when called:   11
 13936 ;; This function calls:
 13937 ;;		Nothing
 13938 ;; This function is called by:
 13939 ;;		_updateErrorLEDs
 13940 ;;		_printErrorHandlerStatus
 13941 ;; This function uses a non-reentrant model
 13942 ;;
 13943                           
 13944                           	psect	text19
 13945  01C164                     __ptext19:
 13946                           	opt callstack 0
 13947  01C164                     _getUARTError:
 13948                           	opt callstack 18
 13949                           
 13950                           ;error_handling.c: 33: return error_handler.USB_UART_COMM_error_flag;
 13951                           
 13952                           ; BSR set to: 2
 13953                           ;incstack = 0
 13954  01C164  0100               	movlb	0	; () banked
 13955  01C166  51CC               	movf	(_error_handler+7)& (0+255),w,b
 13956                           
 13957                           ; BSR set to: 0
 13958  01C168  0012               	return		;funcret
 13959  01C16A                     __end_of_getUARTError:
 13960                           	opt callstack 0
 13961                           
 13962 ;; *************** function _getI2CError *****************
 13963 ;; Defined at:
 13964 ;;		line 38 in file "error_handling.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;		None
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      unsigned char 
 13971 ;; Registers used:
 13972 ;;		wreg, status,2
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13982 ;;Total ram usage:        0 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:   11
 13985 ;; This function calls:
 13986 ;;		Nothing
 13987 ;; This function is called by:
 13988 ;;		_updateErrorLEDs
 13989 ;;		_printErrorHandlerStatus
 13990 ;; This function uses a non-reentrant model
 13991 ;;
 13992                           
 13993                           	psect	text20
 13994  01BB42                     __ptext20:
 13995                           	opt callstack 0
 13996  01BB42                     _getI2CError:
 13997                           	opt callstack 18
 13998                           
 13999                           ;error_handling.c: 41: if ( error_handler.I2C_General_error_flag ||;error_handling.c: 42
      +                          : error_handler.I2C_Ambient_Temp_Sense_error_flag ||;error_handling.c: 43: error_handler
      +                          .I2C_OLED_error_flag ||;error_handling.c: 44: error_handler.I2C_POS5_Temp_Sense_error_fl
      +                          ag ||;error_handling.c: 45: error_handler.I2C_QI_Temp_Sense_error_flag ) {
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;incstack = 0
 14003  01BB42  0100               	movlb	0	; () banked
 14004  01BB44  51C7               	movf	(_error_handler+2)& (0+255),w,b
 14005  01BB46  A4D8               	btfss	status,2,c
 14006  01BB48  D00C               	goto	u22830
 14007                           
 14008                           ; BSR set to: 0
 14009  01BB4A  51CB               	movf	(_error_handler+6)& (0+255),w,b
 14010  01BB4C  A4D8               	btfss	status,2,c
 14011  01BB4E  D009               	goto	u22830
 14012                           
 14013                           ; BSR set to: 0
 14014  01BB50  51C8               	movf	(_error_handler+3)& (0+255),w,b
 14015  01BB52  A4D8               	btfss	status,2,c
 14016  01BB54  D006               	goto	u22830
 14017                           
 14018                           ; BSR set to: 0
 14019  01BB56  51CA               	movf	(_error_handler+5)& (0+255),w,b
 14020  01BB58  A4D8               	btfss	status,2,c
 14021  01BB5A  D003               	goto	u22830
 14022                           
 14023                           ; BSR set to: 0
 14024  01BB5C  51C9               	movf	(_error_handler+4)& (0+255),w,b
 14025  01BB5E  B4D8               	btfsc	status,2,c
 14026  01BB60  D002               	goto	l18150
 14027  01BB62                     u22830:
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;error_handling.c: 47: return 1;
 14031  01BB62  0E01               	movlw	1
 14032  01BB64  0012               	return	
 14033  01BB66                     l18150:
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;error_handling.c: 51: else {;error_handling.c: 53: return 0;
 14037  01BB66  0E00               	movlw	0
 14038                           
 14039                           ; BSR set to: 0
 14040  01BB68  0012               	return		;funcret
 14041  01BB6A                     __end_of_getI2CError:
 14042                           	opt callstack 0
 14043                           
 14044 ;; *************** function _getADCError *****************
 14045 ;; Defined at:
 14046 ;;		line 12 in file "error_handling.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;		None
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1    wreg      unsigned char 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;Total ram usage:        0 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:   11
 14067 ;; This function calls:
 14068 ;;		Nothing
 14069 ;; This function is called by:
 14070 ;;		_updateErrorLEDs
 14071 ;;		_printErrorHandlerStatus
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text21
 14076  01BF10                     __ptext21:
 14077                           	opt callstack 0
 14078  01BF10                     _getADCError:
 14079                           	opt callstack 18
 14080                           
 14081                           ;error_handling.c: 15: if ( error_handler.ADC_general_error_flag ||;error_handling.c: 16
      +                          : error_handler.FVR_ADC_error_flag ) {
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;incstack = 0
 14085  01BF10  0100               	movlb	0	; () banked
 14086  01BF12  51C6               	movf	(_error_handler+1)& (0+255),w,b
 14087  01BF14  A4D8               	btfss	status,2,c
 14088  01BF16  D003               	goto	u22780
 14089                           
 14090                           ; BSR set to: 0
 14091  01BF18  51C5               	movf	_error_handler& (0+255),w,b
 14092  01BF1A  B4D8               	btfsc	status,2,c
 14093  01BF1C  D002               	goto	l18126
 14094  01BF1E                     u22780:
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;error_handling.c: 18: return 1;
 14098  01BF1E  0E01               	movlw	1
 14099  01BF20  0012               	return	
 14100  01BF22                     l18126:
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;error_handling.c: 22: else {;error_handling.c: 24: return 0;
 14104  01BF22  0E00               	movlw	0
 14105                           
 14106                           ; BSR set to: 0
 14107  01BF24  0012               	return		;funcret
 14108  01BF26                     __end_of_getADCError:
 14109                           	opt callstack 0
 14110                           
 14111 ;; *************** function _EUSART2_Read *****************
 14112 ;; Defined at:
 14113 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;		None
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;  readValue       1    0[BANK2 ] unsigned char 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      unsigned char 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14128 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14130 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14131 ;;Total ram usage:        1 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:   11
 14134 ;; This function calls:
 14135 ;;		Nothing
 14136 ;; This function is called by:
 14137 ;;		_terminal_ringBufferPull
 14138 ;;		_getch
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text22
 14143  01B654                     __ptext22:
 14144                           	opt callstack 0
 14145  01B654                     _EUSART2_Read:
 14146                           	opt callstack 18
 14147                           
 14148                           ;eusart2.c: 136: while(0 == eusart2RxCount)
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;incstack = 0
 14152  01B654  D001               	goto	l20456
 14153  01B656                     l115:
 14154                           
 14155                           ; BSR set to: 1
 14156  01B656  0004               	clrwdt		;# 
 14157  01B658                     l20456:
 14158  01B658  0101               	movlb	1	; () banked
 14159  01B65A  5197               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14160  01B65C  B4D8               	btfsc	status,2,c
 14161  01B65E  D7FB               	goto	l115
 14162                           
 14163                           ; BSR set to: 1
 14164                           ;eusart2.c: 139: };eusart2.c: 141: readValue = eusart2RxBuffer[eusart2RxTail++];
 14165  01B660  0E00               	movlw	low _eusart2RxBuffer
 14166  01B662  2598               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 14167  01B664  6ED9               	movwf	fsr2l,c
 14168  01B666  6ADA               	clrf	fsr2h,c
 14169  01B668  0E03               	movlw	high _eusart2RxBuffer
 14170  01B66A  22DA               	addwfc	fsr2h,f,c
 14171  01B66C  50DF               	movf	indf2,w,c
 14172  01B66E  0102               	movlb	2	; () banked
 14173  01B670  6F00               	movwf	EUSART2_Read@readValue& (0+255),b
 14174                           
 14175                           ; BSR set to: 2
 14176  01B672  0101               	movlb	1	; () banked
 14177  01B674  2B98               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14178                           
 14179                           ; BSR set to: 1
 14180                           ;eusart2.c: 142: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14181  01B676  0E3F               	movlw	63
 14182  01B678  6598               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14183  01B67A  D002               	goto	l20466
 14184                           
 14185                           ; BSR set to: 1
 14186                           ;eusart2.c: 143: {;eusart2.c: 144: eusart2RxTail = 0;
 14187  01B67C  0E00               	movlw	0
 14188  01B67E  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14189  01B680                     l20466:
 14190                           
 14191                           ; BSR set to: 1
 14192                           ;eusart2.c: 145: };eusart2.c: 146: PIE3bits.RC2IE = 0;
 14193  01B680  010E               	movlb	14	; () banked
 14194  01B682  9FC5               	bcf	197,7,b	;volatile
 14195                           
 14196                           ; BSR set to: 14
 14197                           ;eusart2.c: 147: eusart2RxCount--;
 14198  01B684  0101               	movlb	1	; () banked
 14199  01B686  0797               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14200                           
 14201                           ; BSR set to: 1
 14202                           ;eusart2.c: 148: PIE3bits.RC2IE = 1;
 14203  01B688  010E               	movlb	14	; () banked
 14204  01B68A  8FC5               	bsf	197,7,b	;volatile
 14205                           
 14206                           ; BSR set to: 14
 14207                           ;eusart2.c: 150: return readValue;
 14208  01B68C  0102               	movlb	2	; () banked
 14209  01B68E  5100               	movf	EUSART2_Read@readValue& (0+255),w,b
 14210                           
 14211                           ; BSR set to: 2
 14212  01B690  0012               	return		;funcret
 14213  01B692                     __end_of_EUSART2_Read:
 14214                           	opt callstack 0
 14215                           
 14216 ;; *************** function _terminalSetCursorHome *****************
 14217 ;; Defined at:
 14218 ;;		line 17 in file "terminal_control.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;		None
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;		None
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  1    wreg      void 
 14225 ;; Registers used:
 14226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/0
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14236 ;;Total ram usage:        0 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; Hardware stack levels required when called:   15
 14239 ;; This function calls:
 14240 ;;		_printf
 14241 ;; This function is called by:
 14242 ;;		_main
 14243 ;;		_terminalPrintTestMessage
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text23
 14248  01BFEC                     __ptext23:
 14249                           	opt callstack 0
 14250  01BFEC                     _terminalSetCursorHome:
 14251                           	opt callstack 15
 14252                           
 14253                           ;terminal_control.c: 18: printf("\033[H");
 14254                           
 14255                           ; BSR set to: 2
 14256                           ;incstack = 0
 14257  01BFEC  0EC2               	movlw	low STR_178
 14258  01BFEE  0102               	movlb	2	; () banked
 14259  01BFF0  6F9F               	movwf	printf@f& (0+255),b
 14260  01BFF2  0EFF               	movlw	high STR_178
 14261  01BFF4  6FA0               	movwf	(printf@f+1)& (0+255),b
 14262  01BFF6  EC87  F0DB         	call	_printf	;wreg free
 14263  01BFFA  0012               	return		;funcret
 14264  01BFFC                     __end_of_terminalSetCursorHome:
 14265                           	opt callstack 0
 14266                           
 14267 ;; *************** function _terminalClearScreen *****************
 14268 ;; Defined at:
 14269 ;;		line 12 in file "terminal_control.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14287 ;;Total ram usage:        0 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:   15
 14290 ;; This function calls:
 14291 ;;		_printf
 14292 ;; This function is called by:
 14293 ;;		_main
 14294 ;;		_terminalPrintTestMessage
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           	psect	text24
 14299  01BFFC                     __ptext24:
 14300                           	opt callstack 0
 14301  01BFFC                     _terminalClearScreen:
 14302                           	opt callstack 15
 14303                           
 14304                           ;terminal_control.c: 13: printf("\033[2J");
 14305                           
 14306                           ;incstack = 0
 14307  01BFFC  0EA1               	movlw	low STR_177
 14308  01BFFE  0102               	movlb	2	; () banked
 14309  01C000  6F9F               	movwf	printf@f& (0+255),b
 14310  01C002  0EFF               	movlw	high STR_177
 14311  01C004  6FA0               	movwf	(printf@f+1)& (0+255),b
 14312  01C006  EC87  F0DB         	call	_printf	;wreg free
 14313  01C00A  0012               	return		;funcret
 14314  01C00C                     __end_of_terminalClearScreen:
 14315                           	opt callstack 0
 14316                           
 14317 ;; *************** function _printf *****************
 14318 ;; Defined at:
 14319 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;  f               2  159[BANK2 ] PTR const unsigned char 
 14322 ;;		 -> STR_334(60), STR_333(24), STR_332(24), STR_331(24), 
 14323 ;;		 -> STR_330(27), STR_329(20), STR_328(35), STR_327(34), 
 14324 ;;		 -> STR_326(37), STR_325(34), STR_324(36), STR_323(35), 
 14325 ;;		 -> STR_322(33), STR_321(35), STR_320(20), STR_319(23), 
 14326 ;;		 -> STR_318(20), STR_317(22), STR_316(21), STR_315(19), 
 14327 ;;		 -> STR_314(21), STR_313(27), STR_312(18), STR_311(11), 
 14328 ;;		 -> terminalTextAttributes@print_string(16), STR_281(4), STR_280(4), STR_279(4), 
 14329 ;;		 -> STR_278(4), STR_277(5), STR_276(3), STR_275(39), 
 14330 ;;		 -> STR_274(96), STR_273(62), STR_272(34), STR_271(3), 
 14331 ;;		 -> STR_270(50), STR_269(56), STR_268(55), STR_267(27), 
 14332 ;;		 -> STR_266(3), STR_265(63), STR_264(40), STR_263(64), 
 14333 ;;		 -> STR_262(42), STR_261(36), STR_260(3), STR_259(45), 
 14334 ;;		 -> STR_258(3), STR_257(58), STR_256(59), STR_255(20), 
 14335 ;;		 -> STR_254(3), STR_253(54), STR_252(52), STR_251(23), 
 14336 ;;		 -> STR_250(3), STR_249(43), STR_248(44), STR_247(23), 
 14337 ;;		 -> STR_246(3), STR_245(46), STR_244(3), STR_243(50), 
 14338 ;;		 -> STR_242(58), STR_241(35), STR_240(3), STR_239(47), 
 14339 ;;		 -> STR_238(3), STR_237(32), STR_236(64), STR_235(30), 
 14340 ;;		 -> STR_234(31), STR_233(63), STR_232(33), STR_231(35), 
 14341 ;;		 -> STR_230(37), STR_229(40), STR_228(28), STR_227(46), 
 14342 ;;		 -> STR_226(31), STR_225(52), STR_224(14), STR_223(28), 
 14343 ;;		 -> STR_222(50), STR_221(29), STR_220(45), STR_219(88), 
 14344 ;;		 -> STR_218(37), STR_217(3), STR_216(30), STR_215(46), 
 14345 ;;		 -> STR_214(39), STR_213(62), STR_212(57), STR_211(559), 
 14346 ;;		 -> STR_210(22), STR_209(3), STR_205(24), STR_203(23), 
 14347 ;;		 -> STR_201(23), STR_199(3), STR_198(3), STR_197(54), 
 14348 ;;		 -> STR_196(3), STR_195(56), STR_194(3), STR_193(60), 
 14349 ;;		 -> STR_192(61), STR_191(3), STR_190(62), STR_189(3), 
 14350 ;;		 -> STR_188(50), STR_187(3), STR_186(45), STR_185(3), 
 14351 ;;		 -> STR_183(54), STR_181(4), STR_180(5), STR_178(4), 
 14352 ;;		 -> STR_177(5), STR_10(47), STR_9(30), STR_8(46), 
 14353 ;;		 -> STR_7(39), STR_6(62), STR_5(57), STR_4(39), 
 14354 ;;		 -> STR_3(44), STR_2(52), STR_1(4), 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;  pb              5  169[BANK2 ] struct __prbuf
 14357 ;;  ap              2  167[BANK2 ] PTR void [1]
 14358 ;;		 -> ?_sprintf(2), ?_printf(2), 
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  2  159[BANK2 ] int 
 14361 ;; Registers used:
 14362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14368 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14369 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14371 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14372 ;;Total ram usage:       15 bytes
 14373 ;; Hardware stack levels used:    1
 14374 ;; Hardware stack levels required when called:   14
 14375 ;; This function calls:
 14376 ;;		__doprnt
 14377 ;; This function is called by:
 14378 ;;		_main
 14379 ;;		_ringBufferLUT
 14380 ;;		_printErrorHandlerStatus
 14381 ;;		_printCurrentMeasurements
 14382 ;;		_terminalClearScreen
 14383 ;;		_terminalSetCursorHome
 14384 ;;		_terminalTextAttributes
 14385 ;;		_terminalTextAttributesReset
 14386 ;;		_terminalClearLine
 14387 ;;		_terminalSaveCursor
 14388 ;;		_terminalReturnCursor
 14389 ;;		_terminalPrintTestMessage
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           	psect	text25
 14394  01B70E                     __ptext25:
 14395                           	opt callstack 0
 14396  01B70E                     _printf:
 14397                           	opt callstack 13
 14398                           
 14399                           ;incstack = 0
 14400  01B70E  0E00               	movlw	0
 14401  01B710  0102               	movlb	2	; () banked
 14402  01B712  6FA9               	movwf	printf@pb& (0+255),b
 14403  01B714  0E00               	movlw	0
 14404  01B716  6FAA               	movwf	(printf@pb+1)& (0+255),b
 14405  01B718  0E68               	movlw	low _putch
 14406  01B71A  6FAB               	movwf	(printf@pb+2)& (0+255),b
 14407  01B71C  0EBF               	movlw	high _putch
 14408  01B71E  6FAC               	movwf	(printf@pb+3)& (0+255),b
 14409  01B720  0E01               	movlw	low (_putch shr (0+16))
 14410  01B722  6FAD               	movwf	(printf@pb+4)& (0+255),b
 14411  01B724  0EA1               	movlw	low (?_printf+2)
 14412  01B726  6FA7               	movwf	printf@ap& (0+255),b
 14413  01B728  0E02               	movlw	high (?_printf+2)
 14414  01B72A  6FA8               	movwf	(printf@ap+1)& (0+255),b
 14415                           
 14416                           ; BSR set to: 2
 14417                           ;	Return value of _printf is never used
 14418  01B72C  0EA9               	movlw	low printf@pb
 14419  01B72E  6F4C               	movwf	__doprnt@pb& (0+255),b
 14420  01B730  0E02               	movlw	high printf@pb
 14421  01B732  6F4D               	movwf	(__doprnt@pb+1)& (0+255),b
 14422  01B734  C29F  F24E         	movff	printf@f,__doprnt@f
 14423  01B738  C2A0  F24F         	movff	printf@f+1,__doprnt@f+1
 14424  01B73C  0EA7               	movlw	low printf@ap
 14425  01B73E  6F50               	movwf	__doprnt@ap& (0+255),b
 14426  01B740  0E02               	movlw	high printf@ap
 14427  01B742  6F51               	movwf	(__doprnt@ap+1)& (0+255),b
 14428  01B744  EC00  F080         	call	__doprnt	;wreg free
 14429  01B748  0012               	return		;funcret
 14430  01B74A                     __end_of_printf:
 14431                           	opt callstack 0
 14432                           
 14433 ;; *************** function _getCauseOfReset *****************
 14434 ;; Defined at:
 14435 ;;		line 11 in file "cause_of_reset.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;		None
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  return_reset    1    0[BANK2 ] enum E9577
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      enum E10199
 14442 ;; Registers used:
 14443 ;;		wreg, status,2
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;Total ram usage:        1 bytes
 14454 ;; Hardware stack levels used:    1
 14455 ;; Hardware stack levels required when called:   11
 14456 ;; This function calls:
 14457 ;;		Nothing
 14458 ;; This function is called by:
 14459 ;;		_main
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text26
 14464  01AF58                     __ptext26:
 14465                           	opt callstack 0
 14466  01AF58                     _getCauseOfReset:
 14467                           	opt callstack 19
 14468                           
 14469                           ;cause_of_reset.c: 13: reset_t return_reset_cause;;cause_of_reset.c: 18: if (PCON0bits.S
      +                          TKOVF == 1) {
 14470                           
 14471                           ;incstack = 0
 14472  01AF58  AED7               	btfss	4055,7,c	;volatile
 14473  01AF5A  D002               	goto	l1562
 14474                           
 14475                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 14476  01AF5C  0E07               	movlw	7
 14477  01AF5E  D01D               	goto	L2
 14478  01AF60                     l1562:
 14479                           
 14480                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 14481  01AF60  ACD7               	btfss	4055,6,c	;volatile
 14482  01AF62  D002               	goto	l1564
 14483                           
 14484                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 14485  01AF64  0E08               	movlw	8
 14486  01AF66  D019               	goto	L2
 14487  01AF68                     l1564:
 14488                           
 14489                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 14490  01AF68  BAD7               	btfsc	4055,5,c	;volatile
 14491  01AF6A  D002               	goto	l1566
 14492                           
 14493                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 14494  01AF6C  0E05               	movlw	5
 14495  01AF6E  D015               	goto	L2
 14496  01AF70                     l1566:
 14497                           
 14498                           ;cause_of_reset.c: 36: else if (PCON0bits.nRWDT == 0) {
 14499  01AF70  B8D7               	btfsc	4055,4,c	;volatile
 14500  01AF72  D002               	goto	l1568
 14501                           
 14502                           ;cause_of_reset.c: 38: return_reset_cause = Watch_Dog_Timer_Reset;
 14503  01AF74  0E04               	movlw	4
 14504  01AF76  D011               	goto	L2
 14505  01AF78                     l1568:
 14506                           
 14507                           ;cause_of_reset.c: 42: else if (PCON0bits.nRMCLR == 0) {
 14508  01AF78  B6D7               	btfsc	4055,3,c	;volatile
 14509  01AF7A  D002               	goto	l1570
 14510                           
 14511                           ;cause_of_reset.c: 44: return_reset_cause = Master_Clear_Reset;
 14512  01AF7C  0E03               	movlw	3
 14513  01AF7E  D00D               	goto	L2
 14514  01AF80                     l1570:
 14515                           
 14516                           ;cause_of_reset.c: 48: else if (PCON0bits.nRI == 0) {
 14517  01AF80  B4D7               	btfsc	4055,2,c	;volatile
 14518  01AF82  D002               	goto	l1572
 14519                           
 14520                           ;cause_of_reset.c: 50: return_reset_cause = RESET_Instruction_Executed;
 14521  01AF84  0E06               	movlw	6
 14522  01AF86  D009               	goto	L2
 14523  01AF88                     l1572:
 14524                           
 14525                           ;cause_of_reset.c: 54: else if (PCON0bits.nPOR == 0) {
 14526  01AF88  B2D7               	btfsc	4055,1,c	;volatile
 14527  01AF8A  D002               	goto	l1574
 14528                           
 14529                           ;cause_of_reset.c: 56: return_reset_cause = Power_On_Reset;
 14530  01AF8C  0E01               	movlw	1
 14531  01AF8E  D005               	goto	L2
 14532  01AF90                     l1574:
 14533                           
 14534                           ;cause_of_reset.c: 60: else if (PCON0bits.nBOR == 0) {
 14535  01AF90  B0D7               	btfsc	4055,0,c	;volatile
 14536  01AF92  D002               	goto	l21324
 14537                           
 14538                           ;cause_of_reset.c: 62: return_reset_cause = Brown_Out_Reset;
 14539  01AF94  0E02               	movlw	2
 14540  01AF96  D001               	goto	L2
 14541  01AF98                     l21324:
 14542                           
 14543                           ;cause_of_reset.c: 66: else {;cause_of_reset.c: 68: return_reset_cause = Undefined_Reset
      +                          ;
 14544  01AF98  0E00               	movlw	0
 14545  01AF9A                     L2:
 14546  01AF9A  0102               	movlb	2	; () banked
 14547  01AF9C  6F00               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 14548                           
 14549                           ; BSR set to: 2
 14550                           ;cause_of_reset.c: 70: };cause_of_reset.c: 73: PCON0bits.STKOVF = 0;
 14551  01AF9E  9ED7               	bcf	4055,7,c	;volatile
 14552                           
 14553                           ; BSR set to: 2
 14554                           ;cause_of_reset.c: 74: PCON0bits.STKUNF = 0;
 14555  01AFA0  9CD7               	bcf	4055,6,c	;volatile
 14556                           
 14557                           ; BSR set to: 2
 14558                           ;cause_of_reset.c: 75: PCON0bits.nWDTWV = 1;
 14559  01AFA2  8AD7               	bsf	4055,5,c	;volatile
 14560                           
 14561                           ; BSR set to: 2
 14562                           ;cause_of_reset.c: 76: PCON0bits.nRWDT = 1;
 14563  01AFA4  88D7               	bsf	4055,4,c	;volatile
 14564                           
 14565                           ; BSR set to: 2
 14566                           ;cause_of_reset.c: 77: PCON0bits.nRMCLR = 1;
 14567  01AFA6  86D7               	bsf	4055,3,c	;volatile
 14568                           
 14569                           ; BSR set to: 2
 14570                           ;cause_of_reset.c: 78: PCON0bits.nRI = 1;
 14571  01AFA8  84D7               	bsf	4055,2,c	;volatile
 14572                           
 14573                           ; BSR set to: 2
 14574                           ;cause_of_reset.c: 79: PCON0bits.nPOR = 1;
 14575  01AFAA  82D7               	bsf	4055,1,c	;volatile
 14576                           
 14577                           ; BSR set to: 2
 14578                           ;cause_of_reset.c: 80: PCON0bits.nBOR = 1;
 14579  01AFAC  80D7               	bsf	4055,0,c	;volatile
 14580                           
 14581                           ;cause_of_reset.c: 82: return return_reset_cause;
 14582  01AFAE  5100               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 14583                           
 14584                           ; BSR set to: 2
 14585  01AFB0  0012               	return		;funcret
 14586  01AFB2                     __end_of_getCauseOfReset:
 14587                           	opt callstack 0
 14588                           
 14589 ;; *************** function _freqMeasStartCaptures *****************
 14590 ;; Defined at:
 14591 ;;		line 5 in file "freq_meas.c"
 14592 ;; Parameters:    Size  Location     Type
 14593 ;;		None
 14594 ;; Auto vars:     Size  Location     Type
 14595 ;;		None
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  1    wreg      void 
 14598 ;; Registers used:
 14599 ;;		wreg, status,2
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;Total ram usage:        0 bytes
 14610 ;; Hardware stack levels used:    1
 14611 ;; Hardware stack levels required when called:   11
 14612 ;; This function calls:
 14613 ;;		Nothing
 14614 ;; This function is called by:
 14615 ;;		_main
 14616 ;; This function uses a non-reentrant model
 14617 ;;
 14618                           
 14619                           	psect	text27
 14620  01C12A                     __ptext27:
 14621                           	opt callstack 0
 14622  01C12A                     _freqMeasStartCaptures:
 14623                           	opt callstack 19
 14624                           
 14625                           ;freq_meas.c: 8: CCP2CONbits.EN = 1;
 14626                           
 14627                           ; BSR set to: 2
 14628                           ;incstack = 0
 14629  01C12A  8EA8               	bsf	4008,7,c	;volatile
 14630                           
 14631                           ;freq_meas.c: 11: freq_meas_start_flag = 0;
 14632  01C12C  0E00               	movlw	0
 14633  01C12E  0102               	movlb	2	; () banked
 14634  01C130  6FB9               	movwf	_freq_meas_start_flag& (0+255),b
 14635                           
 14636                           ; BSR set to: 2
 14637  01C132  0012               	return		;funcret
 14638  01C134                     __end_of_freqMeasStartCaptures:
 14639                           	opt callstack 0
 14640                           
 14641 ;; *************** function _TMR5_WriteTimer *****************
 14642 ;; Defined at:
 14643 ;;		line 120 in file "mcc_generated_files/tmr5.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  timerVal        2    0[BANK2 ] unsigned int 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  1    wreg      void 
 14650 ;; Registers used:
 14651 ;;		wreg, status,2
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14657 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;Total ram usage:        2 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:   11
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_main
 14668 ;;		_TMR5_Reload
 14669 ;; This function uses a non-reentrant model
 14670 ;;
 14671                           
 14672                           	psect	text28
 14673  01BD06                     __ptext28:
 14674                           	opt callstack 0
 14675  01BD06                     _TMR5_WriteTimer:
 14676                           	opt callstack 19
 14677                           
 14678                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
 14679                           
 14680                           ; BSR set to: 2
 14681                           ;incstack = 0
 14682  01BD06  A4C3               	btfss	4035,2,c	;volatile
 14683  01BD08  D008               	goto	l21302
 14684                           
 14685                           ;tmr5.c: 123: {;tmr5.c: 125: T5CONbits.TMR5ON = 0;
 14686  01BD0A  90C3               	bcf	4035,0,c	;volatile
 14687                           
 14688                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
 14689  01BD0C  0102               	movlb	2	; () banked
 14690  01BD0E  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 14691  01BD10  6EC2               	movwf	4034,c	;volatile
 14692                           
 14693                           ; BSR set to: 2
 14694                           ;tmr5.c: 129: TMR5L = timerVal;
 14695  01BD12  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 14696                           
 14697                           ; BSR set to: 2
 14698                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
 14699  01BD16  80C3               	bsf	4035,0,c	;volatile
 14700                           
 14701                           ;tmr5.c: 133: }
 14702  01BD18  0012               	return	
 14703  01BD1A                     l21302:
 14704                           
 14705                           ;tmr5.c: 134: else;tmr5.c: 135: {;tmr5.c: 137: TMR5H = (timerVal >> 8);
 14706  01BD1A  0102               	movlb	2	; () banked
 14707  01BD1C  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 14708  01BD1E  6EC2               	movwf	4034,c	;volatile
 14709                           
 14710                           ; BSR set to: 2
 14711                           ;tmr5.c: 138: TMR5L = timerVal;
 14712  01BD20  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 14713                           
 14714                           ; BSR set to: 2
 14715  01BD24  0012               	return		;funcret
 14716  01BD26                     __end_of_TMR5_WriteTimer:
 14717                           	opt callstack 0
 14718                           
 14719 ;; *************** function _TMR5_StopTimer *****************
 14720 ;; Defined at:
 14721 ;;		line 98 in file "mcc_generated_files/tmr5.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;		None
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      void 
 14728 ;; Registers used:
 14729 ;;		None
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14739 ;;Total ram usage:        0 bytes
 14740 ;; Hardware stack levels used:    1
 14741 ;; Hardware stack levels required when called:   11
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_main
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text29
 14750  01C17C                     __ptext29:
 14751                           	opt callstack 0
 14752  01C17C                     _TMR5_StopTimer:
 14753                           	opt callstack 19
 14754                           
 14755                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
 14756                           
 14757                           ; BSR set to: 2
 14758                           ;incstack = 0
 14759  01C17C  90C3               	bcf	4035,0,c	;volatile
 14760  01C17E  0012               	return		;funcret
 14761  01C180                     __end_of_TMR5_StopTimer:
 14762                           	opt callstack 0
 14763                           
 14764 ;; *************** function _TMR3_StopTimer *****************
 14765 ;; Defined at:
 14766 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;		None
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;		None
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      void 
 14773 ;; Registers used:
 14774 ;;		None
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14784 ;;Total ram usage:        0 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:   11
 14787 ;; This function calls:
 14788 ;;		Nothing
 14789 ;; This function is called by:
 14790 ;;		_main
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           	psect	text30
 14795  01C180                     __ptext30:
 14796                           	opt callstack 0
 14797  01C180                     _TMR3_StopTimer:
 14798                           	opt callstack 19
 14799                           
 14800                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 14801                           
 14802                           ;incstack = 0
 14803  01C180  90C9               	bcf	4041,0,c	;volatile
 14804  01C182  0012               	return		;funcret
 14805  01C184                     __end_of_TMR3_StopTimer:
 14806                           	opt callstack 0
 14807                           
 14808 ;; *************** function _TMR3_Reload *****************
 14809 ;; Defined at:
 14810 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;		None
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, cstack
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;Total ram usage:        0 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; Hardware stack levels required when called:   12
 14831 ;; This function calls:
 14832 ;;		_TMR3_WriteTimer
 14833 ;; This function is called by:
 14834 ;;		_main
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text31
 14839  01C00C                     __ptext31:
 14840                           	opt callstack 0
 14841  01C00C                     _TMR3_Reload:
 14842                           	opt callstack 18
 14843                           
 14844                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 14845                           
 14846                           ;incstack = 0
 14847  01C00C  C193  F200         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 14848  01C010  C194  F201         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 14849  01C014  EC93  F0DE         	call	_TMR3_WriteTimer	;wreg free
 14850  01C018  0012               	return		;funcret
 14851  01C01A                     __end_of_TMR3_Reload:
 14852                           	opt callstack 0
 14853                           
 14854 ;; *************** function _TMR3_WriteTimer *****************
 14855 ;; Defined at:
 14856 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;  timerVal        2    0[BANK2 ] unsigned int 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;		None
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, status,2
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14870 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14873 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14874 ;;Total ram usage:        2 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:   11
 14877 ;; This function calls:
 14878 ;;		Nothing
 14879 ;; This function is called by:
 14880 ;;		_TMR3_Reload
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           	psect	text32
 14885  01BD26                     __ptext32:
 14886                           	opt callstack 0
 14887  01BD26                     _TMR3_WriteTimer:
 14888                           	opt callstack 18
 14889                           
 14890                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 14891                           
 14892                           ;incstack = 0
 14893  01BD26  A4C9               	btfss	4041,2,c	;volatile
 14894  01BD28  D008               	goto	l20620
 14895                           
 14896                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 14897  01BD2A  90C9               	bcf	4041,0,c	;volatile
 14898                           
 14899                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 14900  01BD2C  0102               	movlb	2	; () banked
 14901  01BD2E  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 14902  01BD30  6EC8               	movwf	4040,c	;volatile
 14903                           
 14904                           ; BSR set to: 2
 14905                           ;tmr3.c: 136: TMR3L = timerVal;
 14906  01BD32  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 14907                           
 14908                           ; BSR set to: 2
 14909                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 14910  01BD36  80C9               	bsf	4041,0,c	;volatile
 14911                           
 14912                           ;tmr3.c: 140: }
 14913  01BD38  0012               	return	
 14914  01BD3A                     l20620:
 14915                           
 14916                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 14917  01BD3A  0102               	movlb	2	; () banked
 14918  01BD3C  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 14919  01BD3E  6EC8               	movwf	4040,c	;volatile
 14920                           
 14921                           ; BSR set to: 2
 14922                           ;tmr3.c: 145: TMR3L = timerVal;
 14923  01BD40  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 14924                           
 14925                           ; BSR set to: 2
 14926  01BD44  0012               	return		;funcret
 14927  01BD46                     __end_of_TMR3_WriteTimer:
 14928                           	opt callstack 0
 14929                           
 14930 ;; *************** function _TMR1_StopTimer *****************
 14931 ;; Defined at:
 14932 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		None
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:   11
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_main
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text33
 14961  01C184                     __ptext33:
 14962                           	opt callstack 0
 14963  01C184                     _TMR1_StopTimer:
 14964                           	opt callstack 19
 14965                           
 14966                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 14967                           
 14968                           ; BSR set to: 2
 14969                           ;incstack = 0
 14970  01C184  90CF               	bcf	4047,0,c	;volatile
 14971  01C186  0012               	return		;funcret
 14972  01C188                     __end_of_TMR1_StopTimer:
 14973                           	opt callstack 0
 14974                           
 14975 ;; *************** function _TMR1_Reload *****************
 14976 ;; Defined at:
 14977 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;		None
 14980 ;; Auto vars:     Size  Location     Type
 14981 ;;		None
 14982 ;; Return value:  Size  Location     Type
 14983 ;;                  1    wreg      void 
 14984 ;; Registers used:
 14985 ;;		wreg, status,2, cstack
 14986 ;; Tracked objects:
 14987 ;;		On entry : 0/0
 14988 ;;		On exit  : 0/0
 14989 ;;		Unchanged: 0/0
 14990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;Total ram usage:        0 bytes
 14996 ;; Hardware stack levels used:    1
 14997 ;; Hardware stack levels required when called:   12
 14998 ;; This function calls:
 14999 ;;		_TMR1_WriteTimer
 15000 ;; This function is called by:
 15001 ;;		_main
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	text34
 15006  01C01A                     __ptext34:
 15007                           	opt callstack 0
 15008  01C01A                     _TMR1_Reload:
 15009                           	opt callstack 18
 15010                           
 15011                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 15012                           
 15013                           ;incstack = 0
 15014  01C01A  C18F  F200         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15015  01C01E  C190  F201         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15016  01C022  ECA3  F0DE         	call	_TMR1_WriteTimer	;wreg free
 15017  01C026  0012               	return		;funcret
 15018  01C028                     __end_of_TMR1_Reload:
 15019                           	opt callstack 0
 15020                           
 15021 ;; *************** function _TMR1_WriteTimer *****************
 15022 ;; Defined at:
 15023 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15024 ;; Parameters:    Size  Location     Type
 15025 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15026 ;; Auto vars:     Size  Location     Type
 15027 ;;		None
 15028 ;; Return value:  Size  Location     Type
 15029 ;;                  1    wreg      void 
 15030 ;; Registers used:
 15031 ;;		wreg, status,2
 15032 ;; Tracked objects:
 15033 ;;		On entry : 0/0
 15034 ;;		On exit  : 0/0
 15035 ;;		Unchanged: 0/0
 15036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15037 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15040 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;Total ram usage:        2 bytes
 15042 ;; Hardware stack levels used:    1
 15043 ;; Hardware stack levels required when called:   11
 15044 ;; This function calls:
 15045 ;;		Nothing
 15046 ;; This function is called by:
 15047 ;;		_TMR1_Reload
 15048 ;; This function uses a non-reentrant model
 15049 ;;
 15050                           
 15051                           	psect	text35
 15052  01BD46                     __ptext35:
 15053                           	opt callstack 0
 15054  01BD46                     _TMR1_WriteTimer:
 15055                           	opt callstack 18
 15056                           
 15057                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15058                           
 15059                           ;incstack = 0
 15060  01BD46  A4CF               	btfss	4047,2,c	;volatile
 15061  01BD48  D008               	goto	l21062
 15062                           
 15063                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15064  01BD4A  90CF               	bcf	4047,0,c	;volatile
 15065                           
 15066                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15067  01BD4C  0102               	movlb	2	; () banked
 15068  01BD4E  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15069  01BD50  6ECE               	movwf	4046,c	;volatile
 15070                           
 15071                           ; BSR set to: 2
 15072                           ;tmr1.c: 136: TMR1L = timerVal;
 15073  01BD52  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15074                           
 15075                           ; BSR set to: 2
 15076                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15077  01BD56  80CF               	bsf	4047,0,c	;volatile
 15078                           
 15079                           ;tmr1.c: 140: }
 15080  01BD58  0012               	return	
 15081  01BD5A                     l21062:
 15082                           
 15083                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15084  01BD5A  0102               	movlb	2	; () banked
 15085  01BD5C  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15086  01BD5E  6ECE               	movwf	4046,c	;volatile
 15087                           
 15088                           ; BSR set to: 2
 15089                           ;tmr1.c: 145: TMR1L = timerVal;
 15090  01BD60  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15091                           
 15092                           ; BSR set to: 2
 15093  01BD64  0012               	return		;funcret
 15094  01BD66                     __end_of_TMR1_WriteTimer:
 15095                           	opt callstack 0
 15096                           
 15097 ;; *************** function _SYSTEM_Initialize *****************
 15098 ;; Defined at:
 15099 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;		None
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;		None
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  1    wreg      void 
 15106 ;; Registers used:
 15107 ;;		wreg, status,2, status,0, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15117 ;;Total ram usage:        0 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:   13
 15120 ;; This function calls:
 15121 ;;		_ADCC_Initialize
 15122 ;;		_CCP2_Initialize
 15123 ;;		_EUSART2_Initialize
 15124 ;;		_EXT_INT_Initialize
 15125 ;;		_FVR_Initialize
 15126 ;;		_I2C2_Initialize
 15127 ;;		_INTERRUPT_Initialize
 15128 ;;		_OSCILLATOR_Initialize
 15129 ;;		_PIN_MANAGER_Initialize
 15130 ;;		_PMD_Initialize
 15131 ;;		_TMR0_Initialize
 15132 ;;		_TMR1_Initialize
 15133 ;;		_TMR2_Initialize
 15134 ;;		_TMR3_Initialize
 15135 ;;		_TMR5_Initialize
 15136 ;; This function is called by:
 15137 ;;		_main
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text36
 15142  01B692                     __ptext36:
 15143                           	opt callstack 0
 15144  01B692                     _SYSTEM_Initialize:
 15145                           	opt callstack 17
 15146                           
 15147                           ;mcc.c: 52: INTERRUPT_Initialize();
 15148                           
 15149                           ; BSR set to: 2
 15150                           ;incstack = 0
 15151  01B692  ECB3  F0DE         	call	_INTERRUPT_Initialize	;wreg free
 15152                           
 15153                           ;mcc.c: 53: PMD_Initialize();
 15154  01B696  EC10  F0DF         	call	_PMD_Initialize	;wreg free
 15155                           
 15156                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15157  01B69A  EC27  F0D2         	call	_PIN_MANAGER_Initialize	;wreg free
 15158                           
 15159                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15160  01B69E  EC7C  F0DF         	call	_OSCILLATOR_Initialize	;wreg free
 15161                           
 15162                           ;mcc.c: 56: I2C2_Initialize();
 15163  01B6A2  EC39  F0DC         	call	_I2C2_Initialize	;wreg free
 15164                           
 15165                           ;mcc.c: 57: FVR_Initialize();
 15166  01B6A6  EC83  F0E0         	call	_FVR_Initialize	;wreg free
 15167                           
 15168                           ;mcc.c: 58: ADCC_Initialize();
 15169  01B6AA  ECF1  F0D6         	call	_ADCC_Initialize	;wreg free
 15170                           
 15171                           ;mcc.c: 59: TMR2_Initialize();
 15172  01B6AE  ECA2  F0DC         	call	_TMR2_Initialize	;wreg free
 15173                           
 15174                           ;mcc.c: 60: EXT_INT_Initialize();
 15175  01B6B2  EC1D  F0DC         	call	_EXT_INT_Initialize	;wreg free
 15176                           
 15177                           ;mcc.c: 61: TMR0_Initialize();
 15178  01B6B6  EC62  F0DD         	call	_TMR0_Initialize	;wreg free
 15179                           
 15180                           ;mcc.c: 62: CCP2_Initialize();
 15181  01B6BA  EC61  F0DE         	call	_CCP2_Initialize	;wreg free
 15182                           
 15183                           ;mcc.c: 63: TMR3_Initialize();
 15184  01B6BE  ECA9  F0D8         	call	_TMR3_Initialize	;wreg free
 15185                           
 15186                           ;mcc.c: 64: TMR5_Initialize();
 15187  01B6C2  ECA5  F0DB         	call	_TMR5_Initialize	;wreg free
 15188                           
 15189                           ;mcc.c: 65: TMR1_Initialize();
 15190  01B6C6  ECD1  F0D8         	call	_TMR1_Initialize	;wreg free
 15191                           
 15192                           ;mcc.c: 66: EUSART2_Initialize();
 15193  01B6CA  EC58  F0D6         	call	_EUSART2_Initialize	;wreg free
 15194  01B6CE  0012               	return		;funcret
 15195  01B6D0                     __end_of_SYSTEM_Initialize:
 15196                           	opt callstack 0
 15197                           
 15198 ;; *************** function _TMR5_Initialize *****************
 15199 ;; Defined at:
 15200 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;		None
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;		None
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      void 
 15207 ;; Registers used:
 15208 ;;		wreg, status,2, status,0
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15217 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15218 ;;Total ram usage:        2 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; Hardware stack levels required when called:   11
 15221 ;; This function calls:
 15222 ;;		Nothing
 15223 ;; This function is called by:
 15224 ;;		_SYSTEM_Initialize
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text37
 15229  01B74A                     __ptext37:
 15230                           	opt callstack 0
 15231  01B74A                     _TMR5_Initialize:
 15232                           	opt callstack 18
 15233                           
 15234                           ;tmr5.c: 68: T5GCON = 0x00;
 15235                           
 15236                           ;incstack = 0
 15237  01B74A  0E00               	movlw	0
 15238  01B74C  6EC4               	movwf	4036,c	;volatile
 15239                           
 15240                           ;tmr5.c: 71: T5GATE = 0x00;
 15241  01B74E  0E00               	movlw	0
 15242  01B750  6EC5               	movwf	4037,c	;volatile
 15243                           
 15244                           ;tmr5.c: 74: T5CLK = 0x01;
 15245  01B752  0E01               	movlw	1
 15246  01B754  6EC6               	movwf	4038,c	;volatile
 15247                           
 15248                           ;tmr5.c: 77: TMR5H = 0x00;
 15249  01B756  0E00               	movlw	0
 15250  01B758  6EC2               	movwf	4034,c	;volatile
 15251                           
 15252                           ;tmr5.c: 80: TMR5L = 0x00;
 15253  01B75A  0E00               	movlw	0
 15254  01B75C  6EC1               	movwf	4033,c	;volatile
 15255                           
 15256                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15257  01B75E  50C1               	movf	4033,w,c	;volatile
 15258  01B760  CFC2 F200          	movff	4034,??_TMR5_Initialize	;volatile
 15259  01B764  0102               	movlb	2	; () banked
 15260  01B766  6B01               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15261  01B768  C200  F201         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15262  01B76C  6B00               	clrf	??_TMR5_Initialize& (0+255),b
 15263  01B76E  1100               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15264  01B770  0101               	movlb	1	; () banked
 15265  01B772  6F91               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15266  01B774  0102               	movlb	2	; () banked
 15267  01B776  5101               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15268  01B778  0101               	movlb	1	; () banked
 15269  01B77A  6F92               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15270                           
 15271                           ; BSR set to: 1
 15272                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 15273  01B77C  010E               	movlb	14	; () banked
 15274  01B77E  99CE               	bcf	206,4,b	;volatile
 15275                           
 15276                           ; BSR set to: 14
 15277                           ;tmr5.c: 89: T5CON = 0x03;
 15278  01B780  0E03               	movlw	3
 15279  01B782  6EC3               	movwf	4035,c	;volatile
 15280                           
 15281                           ; BSR set to: 14
 15282  01B784  0012               	return		;funcret
 15283  01B786                     __end_of_TMR5_Initialize:
 15284                           	opt callstack 0
 15285                           
 15286 ;; *************** function _TMR3_Initialize *****************
 15287 ;; Defined at:
 15288 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 15289 ;; Parameters:    Size  Location     Type
 15290 ;;		None
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;		None
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  1    wreg      void 
 15295 ;; Registers used:
 15296 ;;		wreg, status,2, status,0, cstack
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15304 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15305 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15306 ;;Total ram usage:        2 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:   12
 15309 ;; This function calls:
 15310 ;;		_TMR3_SetInterruptHandler
 15311 ;; This function is called by:
 15312 ;;		_SYSTEM_Initialize
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text38
 15317  01B152                     __ptext38:
 15318                           	opt callstack 0
 15319  01B152                     _TMR3_Initialize:
 15320                           	opt callstack 17
 15321                           
 15322                           ;tmr3.c: 69: T3GCON = 0x00;
 15323                           
 15324                           ; BSR set to: 14
 15325                           ;incstack = 0
 15326  01B152  0E00               	movlw	0
 15327  01B154  6ECA               	movwf	4042,c	;volatile
 15328                           
 15329                           ;tmr3.c: 72: T3GATE = 0x00;
 15330  01B156  0E00               	movlw	0
 15331  01B158  6ECB               	movwf	4043,c	;volatile
 15332                           
 15333                           ;tmr3.c: 75: T3CLK = 0x04;
 15334  01B15A  0E04               	movlw	4
 15335  01B15C  6ECC               	movwf	4044,c	;volatile
 15336                           
 15337                           ;tmr3.c: 78: TMR3H = 0xCF;
 15338  01B15E  0ECF               	movlw	207
 15339  01B160  6EC8               	movwf	4040,c	;volatile
 15340                           
 15341                           ;tmr3.c: 81: TMR3L = 0x90;
 15342  01B162  0E90               	movlw	144
 15343  01B164  6EC7               	movwf	4039,c	;volatile
 15344                           
 15345                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 15346  01B166  50C7               	movf	4039,w,c	;volatile
 15347  01B168  CFC8 F203          	movff	4040,??_TMR3_Initialize	;volatile
 15348  01B16C  0102               	movlb	2	; () banked
 15349  01B16E  6B04               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 15350  01B170  C203  F204         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 15351  01B174  6B03               	clrf	??_TMR3_Initialize& (0+255),b
 15352  01B176  1103               	iorwf	??_TMR3_Initialize& (0+255),w,b
 15353  01B178  0101               	movlb	1	; () banked
 15354  01B17A  6F93               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 15355  01B17C  0102               	movlb	2	; () banked
 15356  01B17E  5104               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 15357  01B180  0101               	movlb	1	; () banked
 15358  01B182  6F94               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 15359                           
 15360                           ; BSR set to: 1
 15361                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 15362  01B184  010E               	movlb	14	; () banked
 15363  01B186  95CE               	bcf	206,2,b	;volatile
 15364                           
 15365                           ; BSR set to: 14
 15366                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 15367  01B188  85C6               	bsf	198,2,b	;volatile
 15368                           
 15369                           ; BSR set to: 14
 15370                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 15371  01B18A  0EA8               	movlw	low _TMR3_DefaultInterruptHandler
 15372  01B18C  0102               	movlb	2	; () banked
 15373  01B18E  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 15374  01B190  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 15375  01B192  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15376  01B194  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 15377  01B196  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15378  01B198  EC14  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 15379                           
 15380                           ;tmr3.c: 96: T3CON = 0x11;
 15381  01B19C  0E11               	movlw	17
 15382  01B19E  6EC9               	movwf	4041,c	;volatile
 15383  01B1A0  0012               	return		;funcret
 15384  01B1A2                     __end_of_TMR3_Initialize:
 15385                           	opt callstack 0
 15386                           
 15387 ;; *************** function _TMR3_SetInterruptHandler *****************
 15388 ;; Defined at:
 15389 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15392 ;;		 -> QIIdleChargedTimerHandler(1), TMR3_DefaultInterruptHandler(1), 
 15393 ;; Auto vars:     Size  Location     Type
 15394 ;;		None
 15395 ;; Return value:  Size  Location     Type
 15396 ;;                  1    wreg      void 
 15397 ;; Registers used:
 15398 ;;		wreg, status,2, status,0
 15399 ;; Tracked objects:
 15400 ;;		On entry : 0/0
 15401 ;;		On exit  : 0/0
 15402 ;;		Unchanged: 0/0
 15403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15404 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15407 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15408 ;;Total ram usage:        3 bytes
 15409 ;; Hardware stack levels used:    1
 15410 ;; Hardware stack levels required when called:   11
 15411 ;; This function calls:
 15412 ;;		Nothing
 15413 ;; This function is called by:
 15414 ;;		_TMR3_Initialize
 15415 ;;		_main
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text39
 15420  01C028                     __ptext39:
 15421                           	opt callstack 0
 15422  01C028                     _TMR3_SetInterruptHandler:
 15423                           	opt callstack 19
 15424                           
 15425                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 15426                           
 15427                           ;incstack = 0
 15428  01C028  C200  F171         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 15429  01C02C  C201  F172         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 15430  01C030  C202  F173         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
 15431  01C034  0012               	return		;funcret
 15432  01C036                     __end_of_TMR3_SetInterruptHandler:
 15433                           	opt callstack 0
 15434                           
 15435 ;; *************** function _TMR2_Initialize *****************
 15436 ;; Defined at:
 15437 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15438 ;; Parameters:    Size  Location     Type
 15439 ;;		None
 15440 ;; Auto vars:     Size  Location     Type
 15441 ;;		None
 15442 ;; Return value:  Size  Location     Type
 15443 ;;                  1    wreg      void 
 15444 ;; Registers used:
 15445 ;;		wreg, status,2, status,0, cstack
 15446 ;; Tracked objects:
 15447 ;;		On entry : 0/0
 15448 ;;		On exit  : 0/0
 15449 ;;		Unchanged: 0/0
 15450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15455 ;;Total ram usage:        0 bytes
 15456 ;; Hardware stack levels used:    1
 15457 ;; Hardware stack levels required when called:   12
 15458 ;; This function calls:
 15459 ;;		_TMR2_SetInterruptHandler
 15460 ;; This function is called by:
 15461 ;;		_SYSTEM_Initialize
 15462 ;; This function uses a non-reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text40
 15466  01B944                     __ptext40:
 15467                           	opt callstack 0
 15468  01B944                     _TMR2_Initialize:
 15469                           	opt callstack 17
 15470                           
 15471                           ;tmr2.c: 69: T2CLKCON = 0x04;
 15472                           
 15473                           ;incstack = 0
 15474  01B944  0E04               	movlw	4
 15475  01B946  6EBF               	movwf	4031,c	;volatile
 15476                           
 15477                           ;tmr2.c: 72: T2HLT = 0xA0;
 15478  01B948  0EA0               	movlw	160
 15479  01B94A  6EBE               	movwf	4030,c	;volatile
 15480                           
 15481                           ;tmr2.c: 75: T2RST = 0x00;
 15482  01B94C  0E00               	movlw	0
 15483  01B94E  6EC0               	movwf	4032,c	;volatile
 15484                           
 15485                           ;tmr2.c: 78: T2PR = 0x00;
 15486  01B950  0E00               	movlw	0
 15487  01B952  6EBC               	movwf	4028,c	;volatile
 15488                           
 15489                           ;tmr2.c: 81: T2TMR = 0x00;
 15490  01B954  0E00               	movlw	0
 15491  01B956  6EBB               	movwf	4027,c	;volatile
 15492                           
 15493                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 15494  01B958  010E               	movlb	14	; () banked
 15495  01B95A  93CE               	bcf	206,1,b	;volatile
 15496                           
 15497                           ; BSR set to: 14
 15498                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 15499  01B95C  83C6               	bsf	198,1,b	;volatile
 15500                           
 15501                           ; BSR set to: 14
 15502                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 15503  01B95E  0EAA               	movlw	low _TMR2_DefaultInterruptHandler
 15504  01B960  0102               	movlb	2	; () banked
 15505  01B962  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 15506  01B964  0EC1               	movlw	high _TMR2_DefaultInterruptHandler
 15507  01B966  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15508  01B968  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 15509  01B96A  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15510  01B96C  EC1B  F0E0         	call	_TMR2_SetInterruptHandler	;wreg free
 15511                           
 15512                           ;tmr2.c: 93: T2CON = 0xDF;
 15513  01B970  0EDF               	movlw	223
 15514  01B972  6EBD               	movwf	4029,c	;volatile
 15515  01B974  0012               	return		;funcret
 15516  01B976                     __end_of_TMR2_Initialize:
 15517                           	opt callstack 0
 15518                           
 15519 ;; *************** function _TMR2_SetInterruptHandler *****************
 15520 ;; Defined at:
 15521 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15524 ;;		 -> ADC_acquisitionTimerHandler(1), TMR2_DefaultInterruptHandler(1), 
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;		None
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		wreg, status,2, status,0
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15536 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15539 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15540 ;;Total ram usage:        3 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:   11
 15543 ;; This function calls:
 15544 ;;		Nothing
 15545 ;; This function is called by:
 15546 ;;		_TMR2_Initialize
 15547 ;;		_main
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text41
 15552  01C036                     __ptext41:
 15553                           	opt callstack 0
 15554  01C036                     _TMR2_SetInterruptHandler:
 15555                           	opt callstack 19
 15556                           
 15557                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 15558                           
 15559                           ;incstack = 0
 15560  01C036  C200  F174         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 15561  01C03A  C201  F175         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 15562  01C03E  C202  F176         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 15563  01C042  0012               	return		;funcret
 15564  01C044                     __end_of_TMR2_SetInterruptHandler:
 15565                           	opt callstack 0
 15566                           
 15567 ;; *************** function _TMR1_Initialize *****************
 15568 ;; Defined at:
 15569 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        2 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   12
 15590 ;; This function calls:
 15591 ;;		_TMR1_SetInterruptHandler
 15592 ;; This function is called by:
 15593 ;;		_SYSTEM_Initialize
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           	psect	text42
 15598  01B1A2                     __ptext42:
 15599                           	opt callstack 0
 15600  01B1A2                     _TMR1_Initialize:
 15601                           	opt callstack 17
 15602                           
 15603                           ;tmr1.c: 69: T1GCON = 0x00;
 15604                           
 15605                           ;incstack = 0
 15606  01B1A2  0E00               	movlw	0
 15607  01B1A4  6ED0               	movwf	4048,c	;volatile
 15608                           
 15609                           ;tmr1.c: 72: T1GATE = 0x00;
 15610  01B1A6  0E00               	movlw	0
 15611  01B1A8  6ED1               	movwf	4049,c	;volatile
 15612                           
 15613                           ;tmr1.c: 75: T1CLK = 0x04;
 15614  01B1AA  0E04               	movlw	4
 15615  01B1AC  6ED2               	movwf	4050,c	;volatile
 15616                           
 15617                           ;tmr1.c: 78: TMR1H = 0xED;
 15618  01B1AE  0EED               	movlw	237
 15619  01B1B0  6ECE               	movwf	4046,c	;volatile
 15620                           
 15621                           ;tmr1.c: 81: TMR1L = 0xD6;
 15622  01B1B2  0ED6               	movlw	214
 15623  01B1B4  6ECD               	movwf	4045,c	;volatile
 15624                           
 15625                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15626  01B1B6  50CD               	movf	4045,w,c	;volatile
 15627  01B1B8  CFCE F203          	movff	4046,??_TMR1_Initialize	;volatile
 15628  01B1BC  0102               	movlb	2	; () banked
 15629  01B1BE  6B04               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 15630  01B1C0  C203  F204         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 15631  01B1C4  6B03               	clrf	??_TMR1_Initialize& (0+255),b
 15632  01B1C6  1103               	iorwf	??_TMR1_Initialize& (0+255),w,b
 15633  01B1C8  0101               	movlb	1	; () banked
 15634  01B1CA  6F8F               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 15635  01B1CC  0102               	movlb	2	; () banked
 15636  01B1CE  5104               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 15637  01B1D0  0101               	movlb	1	; () banked
 15638  01B1D2  6F90               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 15639                           
 15640                           ; BSR set to: 1
 15641                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 15642  01B1D4  010E               	movlb	14	; () banked
 15643  01B1D6  91CE               	bcf	206,0,b	;volatile
 15644                           
 15645                           ; BSR set to: 14
 15646                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 15647  01B1D8  81C6               	bsf	198,0,b	;volatile
 15648                           
 15649                           ; BSR set to: 14
 15650                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 15651  01B1DA  0EAC               	movlw	low _TMR1_DefaultInterruptHandler
 15652  01B1DC  0102               	movlb	2	; () banked
 15653  01B1DE  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 15654  01B1E0  0EC1               	movlw	high _TMR1_DefaultInterruptHandler
 15655  01B1E2  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15656  01B1E4  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 15657  01B1E6  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15658  01B1E8  EC22  F0E0         	call	_TMR1_SetInterruptHandler	;wreg free
 15659                           
 15660                           ;tmr1.c: 96: T1CON = 0x11;
 15661  01B1EC  0E11               	movlw	17
 15662  01B1EE  6ECF               	movwf	4047,c	;volatile
 15663  01B1F0  0012               	return		;funcret
 15664  01B1F2                     __end_of_TMR1_Initialize:
 15665                           	opt callstack 0
 15666                           
 15667 ;; *************** function _TMR1_SetInterruptHandler *****************
 15668 ;; Defined at:
 15669 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15672 ;;		 -> TMR1_DefaultInterruptHandler(1), QIErrorTimerHandler(1), 
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;		None
 15675 ;; Return value:  Size  Location     Type
 15676 ;;                  1    wreg      void 
 15677 ;; Registers used:
 15678 ;;		wreg, status,2, status,0
 15679 ;; Tracked objects:
 15680 ;;		On entry : 0/0
 15681 ;;		On exit  : 0/0
 15682 ;;		Unchanged: 0/0
 15683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15684 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15687 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;Total ram usage:        3 bytes
 15689 ;; Hardware stack levels used:    1
 15690 ;; Hardware stack levels required when called:   11
 15691 ;; This function calls:
 15692 ;;		Nothing
 15693 ;; This function is called by:
 15694 ;;		_main
 15695 ;;		_TMR1_Initialize
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text43
 15700  01C044                     __ptext43:
 15701                           	opt callstack 0
 15702  01C044                     _TMR1_SetInterruptHandler:
 15703                           	opt callstack 19
 15704                           
 15705                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 15706                           
 15707                           ;incstack = 0
 15708  01C044  C200  F16E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 15709  01C048  C201  F16F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 15710  01C04C  C202  F170         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 15711  01C050  0012               	return		;funcret
 15712  01C052                     __end_of_TMR1_SetInterruptHandler:
 15713                           	opt callstack 0
 15714                           
 15715 ;; *************** function _TMR0_Initialize *****************
 15716 ;; Defined at:
 15717 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 15718 ;; Parameters:    Size  Location     Type
 15719 ;;		None
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;		None
 15722 ;; Return value:  Size  Location     Type
 15723 ;;                  1    wreg      void 
 15724 ;; Registers used:
 15725 ;;		wreg, status,2, status,0, cstack
 15726 ;; Tracked objects:
 15727 ;;		On entry : 0/0
 15728 ;;		On exit  : 0/0
 15729 ;;		Unchanged: 0/0
 15730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;Total ram usage:        0 bytes
 15736 ;; Hardware stack levels used:    1
 15737 ;; Hardware stack levels required when called:   12
 15738 ;; This function calls:
 15739 ;;		_TMR0_SetInterruptHandler
 15740 ;; This function is called by:
 15741 ;;		_SYSTEM_Initialize
 15742 ;; This function uses a non-reentrant model
 15743 ;;
 15744                           
 15745                           	psect	text44
 15746  01BAC4                     __ptext44:
 15747                           	opt callstack 0
 15748  01BAC4                     _TMR0_Initialize:
 15749                           	opt callstack 17
 15750                           
 15751                           ;tmr0.c: 66: T0CON1 = 0x6F;
 15752                           
 15753                           ;incstack = 0
 15754  01BAC4  0E6F               	movlw	111
 15755  01BAC6  6ED6               	movwf	4054,c	;volatile
 15756                           
 15757                           ;tmr0.c: 69: TMR0H = 0x79;
 15758  01BAC8  0E79               	movlw	121
 15759  01BACA  6ED4               	movwf	4052,c	;volatile
 15760                           
 15761                           ;tmr0.c: 72: TMR0L = 0x00;
 15762  01BACC  0E00               	movlw	0
 15763  01BACE  6ED3               	movwf	4051,c	;volatile
 15764                           
 15765                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 15766  01BAD0  010E               	movlb	14	; () banked
 15767  01BAD2  9BCA               	bcf	202,5,b	;volatile
 15768                           
 15769                           ; BSR set to: 14
 15770                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 15771  01BAD4  8BC2               	bsf	194,5,b	;volatile
 15772                           
 15773                           ; BSR set to: 14
 15774                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 15775  01BAD6  0EAE               	movlw	low _TMR0_DefaultInterruptHandler
 15776  01BAD8  0102               	movlb	2	; () banked
 15777  01BADA  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 15778  01BADC  0EC1               	movlw	high _TMR0_DefaultInterruptHandler
 15779  01BADE  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15780  01BAE0  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 15781  01BAE2  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15782  01BAE4  EC29  F0E0         	call	_TMR0_SetInterruptHandler	;wreg free
 15783                           
 15784                           ;tmr0.c: 84: T0CON0 = 0x8F;
 15785  01BAE8  0E8F               	movlw	143
 15786  01BAEA  6ED5               	movwf	4053,c	;volatile
 15787  01BAEC  0012               	return		;funcret
 15788  01BAEE                     __end_of_TMR0_Initialize:
 15789                           	opt callstack 0
 15790                           
 15791 ;; *************** function _TMR0_SetInterruptHandler *****************
 15792 ;; Defined at:
 15793 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15796 ;;		 -> heartbeatTimerHandler(1), TMR0_DefaultInterruptHandler(1), 
 15797 ;; Auto vars:     Size  Location     Type
 15798 ;;		None
 15799 ;; Return value:  Size  Location     Type
 15800 ;;                  1    wreg      void 
 15801 ;; Registers used:
 15802 ;;		wreg, status,2, status,0
 15803 ;; Tracked objects:
 15804 ;;		On entry : 0/0
 15805 ;;		On exit  : 0/0
 15806 ;;		Unchanged: 0/0
 15807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15808 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15811 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15812 ;;Total ram usage:        3 bytes
 15813 ;; Hardware stack levels used:    1
 15814 ;; Hardware stack levels required when called:   11
 15815 ;; This function calls:
 15816 ;;		Nothing
 15817 ;; This function is called by:
 15818 ;;		_TMR0_Initialize
 15819 ;;		_main
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           	psect	text45
 15824  01C052                     __ptext45:
 15825                           	opt callstack 0
 15826  01C052                     _TMR0_SetInterruptHandler:
 15827                           	opt callstack 19
 15828                           
 15829                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
 15830                           
 15831                           ;incstack = 0
 15832  01C052  C200  F177         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 15833  01C056  C201  F178         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 15834  01C05A  C202  F179         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 15835  01C05E  0012               	return		;funcret
 15836  01C060                     __end_of_TMR0_SetInterruptHandler:
 15837                           	opt callstack 0
 15838                           
 15839 ;; *************** function _PMD_Initialize *****************
 15840 ;; Defined at:
 15841 ;;		line 83 in file "mcc_generated_files/mcc.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;		None
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;		None
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1    wreg      void 
 15848 ;; Registers used:
 15849 ;;		wreg, status,2
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15859 ;;Total ram usage:        0 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:   11
 15862 ;; This function calls:
 15863 ;;		Nothing
 15864 ;; This function is called by:
 15865 ;;		_SYSTEM_Initialize
 15866 ;; This function uses a non-reentrant model
 15867 ;;
 15868                           
 15869                           	psect	text46
 15870  01BE20                     __ptext46:
 15871                           	opt callstack 0
 15872  01BE20                     _PMD_Initialize:
 15873                           	opt callstack 18
 15874                           
 15875                           ;mcc.c: 86: PMD0 = 0x00;
 15876                           
 15877                           ;incstack = 0
 15878  01BE20  0E00               	movlw	0
 15879  01BE22  010E               	movlb	14	; () banked
 15880  01BE24  6FE1               	movwf	225,b	;volatile
 15881                           
 15882                           ;mcc.c: 88: PMD1 = 0x00;
 15883  01BE26  0E00               	movlw	0
 15884  01BE28  6FE2               	movwf	226,b	;volatile
 15885                           
 15886                           ;mcc.c: 90: PMD2 = 0x00;
 15887  01BE2A  0E00               	movlw	0
 15888  01BE2C  6FE3               	movwf	227,b	;volatile
 15889                           
 15890                           ;mcc.c: 92: PMD3 = 0x00;
 15891  01BE2E  0E00               	movlw	0
 15892  01BE30  6FE4               	movwf	228,b	;volatile
 15893                           
 15894                           ;mcc.c: 94: PMD4 = 0x00;
 15895  01BE32  0E00               	movlw	0
 15896  01BE34  6FE5               	movwf	229,b	;volatile
 15897                           
 15898                           ;mcc.c: 96: PMD5 = 0x00;
 15899  01BE36  0E00               	movlw	0
 15900  01BE38  6FE6               	movwf	230,b	;volatile
 15901                           
 15902                           ; BSR set to: 14
 15903  01BE3A  0012               	return		;funcret
 15904  01BE3C                     __end_of_PMD_Initialize:
 15905                           	opt callstack 0
 15906                           
 15907 ;; *************** function _PIN_MANAGER_Initialize *****************
 15908 ;; Defined at:
 15909 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;		None
 15912 ;; Auto vars:     Size  Location     Type
 15913 ;;		None
 15914 ;; Return value:  Size  Location     Type
 15915 ;;                  1    wreg      void 
 15916 ;; Registers used:
 15917 ;;		wreg, status,2, status,0, cstack
 15918 ;; Tracked objects:
 15919 ;;		On entry : 0/0
 15920 ;;		On exit  : 0/0
 15921 ;;		Unchanged: 0/0
 15922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;Total ram usage:        0 bytes
 15928 ;; Hardware stack levels used:    1
 15929 ;; Hardware stack levels required when called:   12
 15930 ;; This function calls:
 15931 ;;		_IOCBF2_SetInterruptHandler
 15932 ;;		_IOCBF3_SetInterruptHandler
 15933 ;; This function is called by:
 15934 ;;		_SYSTEM_Initialize
 15935 ;; This function uses a non-reentrant model
 15936 ;;
 15937                           
 15938                           	psect	text47
 15939  01A44E                     __ptext47:
 15940                           	opt callstack 0
 15941  01A44E                     _PIN_MANAGER_Initialize:
 15942                           	opt callstack 17
 15943                           
 15944                           ;pin_manager.c: 65: LATA = 0x00;
 15945                           
 15946                           ; BSR set to: 14
 15947                           ;incstack = 0
 15948  01A44E  0E00               	movlw	0
 15949  01A450  6E83               	movwf	3971,c	;volatile
 15950                           
 15951                           ;pin_manager.c: 66: LATB = 0x00;
 15952  01A452  0E00               	movlw	0
 15953  01A454  6E84               	movwf	3972,c	;volatile
 15954                           
 15955                           ;pin_manager.c: 67: LATC = 0x00;
 15956  01A456  0E00               	movlw	0
 15957  01A458  6E85               	movwf	3973,c	;volatile
 15958                           
 15959                           ;pin_manager.c: 72: TRISA = 0xFF;
 15960  01A45A  6888               	setf	3976,c	;volatile
 15961                           
 15962                           ;pin_manager.c: 73: TRISB = 0x3F;
 15963  01A45C  0E3F               	movlw	63
 15964  01A45E  6E89               	movwf	3977,c	;volatile
 15965                           
 15966                           ;pin_manager.c: 74: TRISC = 0x08;
 15967  01A460  0E08               	movlw	8
 15968  01A462  6E8A               	movwf	3978,c	;volatile
 15969                           
 15970                           ;pin_manager.c: 79: ANSELC = 0x00;
 15971  01A464  0E00               	movlw	0
 15972  01A466  010F               	movlb	15	; () banked
 15973  01A468  6F21               	movwf	33,b	;volatile
 15974                           
 15975                           ;pin_manager.c: 80: ANSELB = 0x00;
 15976  01A46A  0E00               	movlw	0
 15977  01A46C  6F19               	movwf	25,b	;volatile
 15978                           
 15979                           ;pin_manager.c: 81: ANSELA = 0x3F;
 15980  01A46E  0E3F               	movlw	63
 15981  01A470  6F11               	movwf	17,b	;volatile
 15982                           
 15983                           ;pin_manager.c: 86: WPUE = 0x00;
 15984  01A472  0E00               	movlw	0
 15985  01A474  6F2D               	movwf	45,b	;volatile
 15986                           
 15987                           ;pin_manager.c: 87: WPUB = 0x00;
 15988  01A476  0E00               	movlw	0
 15989  01A478  6F18               	movwf	24,b	;volatile
 15990                           
 15991                           ;pin_manager.c: 88: WPUA = 0x00;
 15992  01A47A  0E00               	movlw	0
 15993  01A47C  6F10               	movwf	16,b	;volatile
 15994                           
 15995                           ;pin_manager.c: 89: WPUC = 0x00;
 15996  01A47E  0E00               	movlw	0
 15997  01A480  6F20               	movwf	32,b	;volatile
 15998                           
 15999                           ;pin_manager.c: 94: ODCONA = 0x00;
 16000  01A482  0E00               	movlw	0
 16001  01A484  6F0F               	movwf	15,b	;volatile
 16002                           
 16003                           ;pin_manager.c: 95: ODCONB = 0x00;
 16004  01A486  0E00               	movlw	0
 16005  01A488  6F17               	movwf	23,b	;volatile
 16006                           
 16007                           ;pin_manager.c: 96: ODCONC = 0x00;
 16008  01A48A  0E00               	movlw	0
 16009  01A48C  6F1F               	movwf	31,b	;volatile
 16010                           
 16011                           ; BSR set to: 15
 16012                           ;pin_manager.c: 101: SLRCONA = 0xFF;
 16013  01A48E  690E               	setf	14,b	;volatile
 16014                           
 16015                           ; BSR set to: 15
 16016                           ;pin_manager.c: 102: SLRCONB = 0xFF;
 16017  01A490  6916               	setf	22,b	;volatile
 16018                           
 16019                           ; BSR set to: 15
 16020                           ;pin_manager.c: 103: SLRCONC = 0xFF;
 16021  01A492  691E               	setf	30,b	;volatile
 16022                           
 16023                           ; BSR set to: 15
 16024                           ;pin_manager.c: 110: IOCBFbits.IOCBF2 = 0;
 16025  01A494  9512               	bcf	18,2,b	;volatile
 16026                           
 16027                           ; BSR set to: 15
 16028                           ;pin_manager.c: 112: IOCBFbits.IOCBF3 = 0;
 16029  01A496  9712               	bcf	18,3,b	;volatile
 16030                           
 16031                           ; BSR set to: 15
 16032                           ;pin_manager.c: 114: IOCBNbits.IOCBN2 = 1;
 16033  01A498  8513               	bsf	19,2,b	;volatile
 16034                           
 16035                           ; BSR set to: 15
 16036                           ;pin_manager.c: 116: IOCBNbits.IOCBN3 = 1;
 16037  01A49A  8713               	bsf	19,3,b	;volatile
 16038                           
 16039                           ; BSR set to: 15
 16040                           ;pin_manager.c: 118: IOCBPbits.IOCBP2 = 1;
 16041  01A49C  8514               	bsf	20,2,b	;volatile
 16042                           
 16043                           ; BSR set to: 15
 16044                           ;pin_manager.c: 120: IOCBPbits.IOCBP3 = 1;
 16045  01A49E  8714               	bsf	20,3,b	;volatile
 16046                           
 16047                           ; BSR set to: 15
 16048                           ;pin_manager.c: 125: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 16049  01A4A0  0EB2               	movlw	low _IOCBF2_DefaultInterruptHandler
 16050  01A4A2  0102               	movlb	2	; () banked
 16051  01A4A4  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 16052  01A4A6  0EC1               	movlw	high _IOCBF2_DefaultInterruptHandler
 16053  01A4A8  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16054  01A4AA  0E01               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 16055  01A4AC  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16056  01A4AE  EC37  F0E0         	call	_IOCBF2_SetInterruptHandler	;wreg free
 16057                           
 16058                           ;pin_manager.c: 126: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 16059  01A4B2  0EB0               	movlw	low _IOCBF3_DefaultInterruptHandler
 16060  01A4B4  0102               	movlb	2	; () banked
 16061  01A4B6  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 16062  01A4B8  0EC1               	movlw	high _IOCBF3_DefaultInterruptHandler
 16063  01A4BA  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16064  01A4BC  0E01               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 16065  01A4BE  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16066  01A4C0  EC30  F0E0         	call	_IOCBF3_SetInterruptHandler	;wreg free
 16067                           
 16068                           ;pin_manager.c: 129: PIE0bits.IOCIE = 1;
 16069  01A4C4  010E               	movlb	14	; () banked
 16070  01A4C6  89C2               	bsf	194,4,b	;volatile
 16071                           
 16072                           ;pin_manager.c: 132: CCP2PPS = 0x09;
 16073  01A4C8  0E09               	movlw	9
 16074  01A4CA  6FB0               	movwf	176,b	;volatile
 16075                           
 16076                           ;pin_manager.c: 133: SSP2DATPPS = 0x0C;
 16077  01A4CC  0E0C               	movlw	12
 16078  01A4CE  6F90               	movwf	144,b	;volatile
 16079                           
 16080                           ;pin_manager.c: 134: RB5PPS = 0x11;
 16081  01A4D0  0E11               	movlw	17
 16082  01A4D2  6FF4               	movwf	244,b	;volatile
 16083                           
 16084                           ;pin_manager.c: 135: RC4PPS = 0x0B;
 16085  01A4D4  0E0B               	movlw	11
 16086  01A4D6  6FFB               	movwf	251,b	;volatile
 16087                           
 16088                           ;pin_manager.c: 136: RB4PPS = 0x12;
 16089  01A4D8  0E12               	movlw	18
 16090  01A4DA  6FF3               	movwf	243,b	;volatile
 16091                           
 16092                           ;pin_manager.c: 137: INT2PPS = 0x06;
 16093  01A4DC  0E06               	movlw	6
 16094  01A4DE  6FA3               	movwf	163,b	;volatile
 16095                           
 16096                           ;pin_manager.c: 138: INT1PPS = 0x07;
 16097  01A4E0  0E07               	movlw	7
 16098  01A4E2  6FA2               	movwf	162,b	;volatile
 16099                           
 16100                           ;pin_manager.c: 139: RX2PPS = 0x13;
 16101  01A4E4  0E13               	movlw	19
 16102  01A4E6  6F8D               	movwf	141,b	;volatile
 16103                           
 16104                           ;pin_manager.c: 140: SSP2CLKPPS = 0x0D;
 16105  01A4E8  0E0D               	movlw	13
 16106  01A4EA  6F8F               	movwf	143,b	;volatile
 16107                           
 16108                           ; BSR set to: 14
 16109  01A4EC  0012               	return		;funcret
 16110  01A4EE                     __end_of_PIN_MANAGER_Initialize:
 16111                           	opt callstack 0
 16112                           
 16113 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 16114 ;; Defined at:
 16115 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16118 ;;		 -> QIChargeIOCHandler(1), IOCBF3_DefaultInterruptHandler(1), 
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;		None
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  1    wreg      void 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 0/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16130 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16133 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16134 ;;Total ram usage:        3 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:   11
 16137 ;; This function calls:
 16138 ;;		Nothing
 16139 ;; This function is called by:
 16140 ;;		_PIN_MANAGER_Initialize
 16141 ;;		_main
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	text48
 16146  01C060                     __ptext48:
 16147                           	opt callstack 0
 16148  01C060                     _IOCBF3_SetInterruptHandler:
 16149                           	opt callstack 17
 16150                           
 16151                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 16152                           
 16153                           ; BSR set to: 14
 16154                           ;incstack = 0
 16155  01C060  C200  F17D         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 16156  01C064  C201  F17E         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 16157  01C068  C202  F17F         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 16158  01C06C  0012               	return		;funcret
 16159  01C06E                     __end_of_IOCBF3_SetInterruptHandler:
 16160                           	opt callstack 0
 16161                           
 16162 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 16163 ;; Defined at:
 16164 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
 16165 ;; Parameters:    Size  Location     Type
 16166 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16167 ;;		 -> QIIdleIOCHandler(1), IOCBF2_DefaultInterruptHandler(1), 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;		None
 16170 ;; Return value:  Size  Location     Type
 16171 ;;                  1    wreg      void 
 16172 ;; Registers used:
 16173 ;;		wreg, status,2, status,0
 16174 ;; Tracked objects:
 16175 ;;		On entry : 0/0
 16176 ;;		On exit  : 0/0
 16177 ;;		Unchanged: 0/0
 16178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16179 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16182 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16183 ;;Total ram usage:        3 bytes
 16184 ;; Hardware stack levels used:    1
 16185 ;; Hardware stack levels required when called:   11
 16186 ;; This function calls:
 16187 ;;		Nothing
 16188 ;; This function is called by:
 16189 ;;		_PIN_MANAGER_Initialize
 16190 ;;		_main
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194                           	psect	text49
 16195  01C06E                     __ptext49:
 16196                           	opt callstack 0
 16197  01C06E                     _IOCBF2_SetInterruptHandler:
 16198                           	opt callstack 17
 16199                           
 16200                           ;pin_manager.c: 176: IOCBF2_InterruptHandler = InterruptHandler;
 16201                           
 16202                           ;incstack = 0
 16203  01C06E  C200  F180         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 16204  01C072  C201  F181         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 16205  01C076  C202  F182         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 16206  01C07A  0012               	return		;funcret
 16207  01C07C                     __end_of_IOCBF2_SetInterruptHandler:
 16208                           	opt callstack 0
 16209                           
 16210 ;; *************** function _OSCILLATOR_Initialize *****************
 16211 ;; Defined at:
 16212 ;;		line 69 in file "mcc_generated_files/mcc.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;		None
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;		None
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  1    wreg      void 
 16219 ;; Registers used:
 16220 ;;		wreg, status,2
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/0
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16230 ;;Total ram usage:        0 bytes
 16231 ;; Hardware stack levels used:    1
 16232 ;; Hardware stack levels required when called:   11
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_SYSTEM_Initialize
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           	psect	text50
 16241  01BEF8                     __ptext50:
 16242                           	opt callstack 0
 16243  01BEF8                     _OSCILLATOR_Initialize:
 16244                           	opt callstack 18
 16245                           
 16246                           ;mcc.c: 72: OSCCON1 = 0x60;
 16247                           
 16248                           ;incstack = 0
 16249  01BEF8  0E60               	movlw	96
 16250  01BEFA  010E               	movlb	14	; () banked
 16251  01BEFC  6FD8               	movwf	216,b	;volatile
 16252                           
 16253                           ;mcc.c: 74: OSCCON3 = 0x00;
 16254  01BEFE  0E00               	movlw	0
 16255  01BF00  6FDA               	movwf	218,b	;volatile
 16256                           
 16257                           ;mcc.c: 76: OSCEN = 0x00;
 16258  01BF02  0E00               	movlw	0
 16259  01BF04  6FDC               	movwf	220,b	;volatile
 16260                           
 16261                           ;mcc.c: 78: OSCFRQ = 0x08;
 16262  01BF06  0E08               	movlw	8
 16263  01BF08  6FDE               	movwf	222,b	;volatile
 16264                           
 16265                           ;mcc.c: 80: OSCTUNE = 0x00;
 16266  01BF0A  0E00               	movlw	0
 16267  01BF0C  6FDD               	movwf	221,b	;volatile
 16268                           
 16269                           ; BSR set to: 14
 16270  01BF0E  0012               	return		;funcret
 16271  01BF10                     __end_of_OSCILLATOR_Initialize:
 16272                           	opt callstack 0
 16273                           
 16274 ;; *************** function _INTERRUPT_Initialize *****************
 16275 ;; Defined at:
 16276 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16277 ;; Parameters:    Size  Location     Type
 16278 ;;		None
 16279 ;; Auto vars:     Size  Location     Type
 16280 ;;		None
 16281 ;; Return value:  Size  Location     Type
 16282 ;;                  1    wreg      void 
 16283 ;; Registers used:
 16284 ;;		None
 16285 ;; Tracked objects:
 16286 ;;		On entry : 0/0
 16287 ;;		On exit  : 0/0
 16288 ;;		Unchanged: 0/0
 16289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16294 ;;Total ram usage:        0 bytes
 16295 ;; Hardware stack levels used:    1
 16296 ;; Hardware stack levels required when called:   11
 16297 ;; This function calls:
 16298 ;;		Nothing
 16299 ;; This function is called by:
 16300 ;;		_SYSTEM_Initialize
 16301 ;; This function uses a non-reentrant model
 16302 ;;
 16303                           
 16304                           	psect	text51
 16305  01BD66                     __ptext51:
 16306                           	opt callstack 0
 16307  01BD66                     _INTERRUPT_Initialize:
 16308                           	opt callstack 18
 16309                           
 16310                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16311                           
 16312                           ; BSR set to: 14
 16313                           ;incstack = 0
 16314  01BD66  8AF2               	bsf	4082,5,c	;volatile
 16315                           
 16316                           ;interrupt_manager.c: 60: IPR4bits.TMR1IP = 1;
 16317  01BD68  010E               	movlb	14	; () banked
 16318  01BD6A  81BE               	bsf	190,0,b	;volatile
 16319                           
 16320                           ;interrupt_manager.c: 63: IPR0bits.TMR0IP = 1;
 16321  01BD6C  8BBA               	bsf	186,5,b	;volatile
 16322                           
 16323                           ;interrupt_manager.c: 66: IPR3bits.RC2IP = 1;
 16324  01BD6E  8FBD               	bsf	189,7,b	;volatile
 16325                           
 16326                           ;interrupt_manager.c: 69: IPR1bits.ADTIP = 1;
 16327  01BD70  83BB               	bsf	187,1,b	;volatile
 16328                           
 16329                           ;interrupt_manager.c: 72: IPR0bits.IOCIP = 1;
 16330  01BD72  89BA               	bsf	186,4,b	;volatile
 16331                           
 16332                           ;interrupt_manager.c: 75: IPR0bits.INT1IP = 1;
 16333  01BD74  83BA               	bsf	186,1,b	;volatile
 16334                           
 16335                           ;interrupt_manager.c: 78: IPR0bits.INT2IP = 1;
 16336  01BD76  85BA               	bsf	186,2,b	;volatile
 16337                           
 16338                           ;interrupt_manager.c: 82: IPR4bits.TMR2IP = 0;
 16339  01BD78  93BE               	bcf	190,1,b	;volatile
 16340                           
 16341                           ;interrupt_manager.c: 85: IPR3bits.BCL2IP = 0;
 16342  01BD7A  97BD               	bcf	189,3,b	;volatile
 16343                           
 16344                           ;interrupt_manager.c: 88: IPR3bits.SSP2IP = 0;
 16345  01BD7C  95BD               	bcf	189,2,b	;volatile
 16346                           
 16347                           ;interrupt_manager.c: 91: IPR4bits.TMR3IP = 0;
 16348  01BD7E  95BE               	bcf	190,2,b	;volatile
 16349                           
 16350                           ;interrupt_manager.c: 94: IPR3bits.TX2IP = 0;
 16351  01BD80  9DBD               	bcf	189,6,b	;volatile
 16352                           
 16353                           ;interrupt_manager.c: 97: IPR6bits.CCP2IP = 0;
 16354  01BD82  93C0               	bcf	192,1,b	;volatile
 16355                           
 16356                           ; BSR set to: 14
 16357  01BD84  0012               	return		;funcret
 16358  01BD86                     __end_of_INTERRUPT_Initialize:
 16359                           	opt callstack 0
 16360                           
 16361 ;; *************** function _I2C2_Initialize *****************
 16362 ;; Defined at:
 16363 ;;		line 199 in file "mcc_generated_files/i2c2.c"
 16364 ;; Parameters:    Size  Location     Type
 16365 ;;		None
 16366 ;; Auto vars:     Size  Location     Type
 16367 ;;		None
 16368 ;; Return value:  Size  Location     Type
 16369 ;;                  1    wreg      void 
 16370 ;; Registers used:
 16371 ;;		wreg, status,2, status,0
 16372 ;; Tracked objects:
 16373 ;;		On entry : 0/0
 16374 ;;		On exit  : 0/0
 16375 ;;		Unchanged: 0/0
 16376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;Total ram usage:        0 bytes
 16382 ;; Hardware stack levels used:    1
 16383 ;; Hardware stack levels required when called:   11
 16384 ;; This function calls:
 16385 ;;		Nothing
 16386 ;; This function is called by:
 16387 ;;		_SYSTEM_Initialize
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text52
 16392  01B872                     __ptext52:
 16393                           	opt callstack 0
 16394  01B872                     _I2C2_Initialize:
 16395                           	opt callstack 18
 16396                           
 16397                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
 16398                           
 16399                           ; BSR set to: 14
 16400                           ;incstack = 0
 16401  01B872  0EB8               	movlw	low _i2c2_tr_queue
 16402  01B874  0101               	movlb	1	; () banked
 16403  01B876  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 16404  01B878  0E01               	movlw	high _i2c2_tr_queue
 16405  01B87A  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 16406                           
 16407                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
 16408  01B87C  0EB8               	movlw	low _i2c2_tr_queue
 16409  01B87E  6F61               	movwf	_i2c2_object& (0+255),b
 16410  01B880  0E01               	movlw	high _i2c2_tr_queue
 16411  01B882  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 16412                           
 16413                           ; BSR set to: 1
 16414                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
 16415  01B884  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 16416                           
 16417                           ; BSR set to: 1
 16418                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
 16419  01B886  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 16420                           
 16421                           ; BSR set to: 1
 16422                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
 16423  01B888  0E00               	movlw	0
 16424  01B88A  6F67               	movwf	(_i2c2_object+6)& (0+255),b
 16425                           
 16426                           ; BSR set to: 1
 16427                           ;i2c2.c: 209: SSP2STAT = 0x00;
 16428  01B88C  0E00               	movlw	0
 16429  01B88E  010E               	movlb	14	; () banked
 16430  01B890  6F95               	movwf	149,b	;volatile
 16431                           
 16432                           ; BSR set to: 14
 16433                           ;i2c2.c: 211: SSP2CON1 = 0x28;
 16434  01B892  0E28               	movlw	40
 16435  01B894  6F96               	movwf	150,b	;volatile
 16436                           
 16437                           ; BSR set to: 14
 16438                           ;i2c2.c: 213: SSP2CON3 = 0x00;
 16439  01B896  0E00               	movlw	0
 16440  01B898  6F98               	movwf	152,b	;volatile
 16441                           
 16442                           ; BSR set to: 14
 16443                           ;i2c2.c: 215: SSP2ADD = 0x27;
 16444  01B89A  0E27               	movlw	39
 16445  01B89C  6F93               	movwf	147,b	;volatile
 16446                           
 16447                           ; BSR set to: 14
 16448                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
 16449  01B89E  95CD               	bcf	205,2,b	;volatile
 16450                           
 16451                           ; BSR set to: 14
 16452                           ;i2c2.c: 219: PIR3bits.BCL2IF = 0;
 16453  01B8A0  97CD               	bcf	205,3,b	;volatile
 16454                           
 16455                           ; BSR set to: 14
 16456                           ;i2c2.c: 222: PIE3bits.SSP2IE = 1;
 16457  01B8A2  85C5               	bsf	197,2,b	;volatile
 16458                           
 16459                           ; BSR set to: 14
 16460                           ;i2c2.c: 223: PIE3bits.BCL2IE = 1;
 16461  01B8A4  87C5               	bsf	197,3,b	;volatile
 16462                           
 16463                           ; BSR set to: 14
 16464  01B8A6  0012               	return		;funcret
 16465  01B8A8                     __end_of_I2C2_Initialize:
 16466                           	opt callstack 0
 16467                           
 16468 ;; *************** function _FVR_Initialize *****************
 16469 ;; Defined at:
 16470 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;		None
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		wreg, status,2
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;Total ram usage:        0 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:   11
 16491 ;; This function calls:
 16492 ;;		Nothing
 16493 ;; This function is called by:
 16494 ;;		_SYSTEM_Initialize
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text53
 16499  01C106                     __ptext53:
 16500                           	opt callstack 0
 16501  01C106                     _FVR_Initialize:
 16502                           	opt callstack 18
 16503                           
 16504                           ;fvr.c: 61: FVRCON = 0xB3;
 16505                           
 16506                           ; BSR set to: 14
 16507                           ;incstack = 0
 16508  01C106  0EB3               	movlw	179
 16509  01C108  010F               	movlb	15	; () banked
 16510  01C10A  6F31               	movwf	49,b	;volatile
 16511                           
 16512                           ; BSR set to: 15
 16513                           ;fvr.c: 62: FVRCONbits.TSRNG = 1;
 16514  01C10C  8931               	bsf	49,4,b	;volatile
 16515                           
 16516                           ; BSR set to: 15
 16517                           ;fvr.c: 63: FVRCONbits.TSEN = 1;
 16518  01C10E  8B31               	bsf	49,5,b	;volatile
 16519                           
 16520                           ; BSR set to: 15
 16521  01C110  0012               	return		;funcret
 16522  01C112                     __end_of_FVR_Initialize:
 16523                           	opt callstack 0
 16524                           
 16525 ;; *************** function _EXT_INT_Initialize *****************
 16526 ;; Defined at:
 16527 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16528 ;; Parameters:    Size  Location     Type
 16529 ;;		None
 16530 ;; Auto vars:     Size  Location     Type
 16531 ;;		None
 16532 ;; Return value:  Size  Location     Type
 16533 ;;                  1    wreg      void 
 16534 ;; Registers used:
 16535 ;;		wreg, status,2, status,0, cstack
 16536 ;; Tracked objects:
 16537 ;;		On entry : 0/0
 16538 ;;		On exit  : 0/0
 16539 ;;		Unchanged: 0/0
 16540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16545 ;;Total ram usage:        0 bytes
 16546 ;; Hardware stack levels used:    1
 16547 ;; Hardware stack levels required when called:   12
 16548 ;; This function calls:
 16549 ;;		_INT1_SetInterruptHandler
 16550 ;;		_INT2_SetInterruptHandler
 16551 ;; This function is called by:
 16552 ;;		_SYSTEM_Initialize
 16553 ;; This function uses a non-reentrant model
 16554 ;;
 16555                           
 16556                           	psect	text54
 16557  01B83A                     __ptext54:
 16558                           	opt callstack 0
 16559  01B83A                     _EXT_INT_Initialize:
 16560                           	opt callstack 17
 16561                           
 16562                           ;ext_int.c: 91: (PIR0bits.INT1IF = 0);
 16563                           
 16564                           ; BSR set to: 15
 16565                           ;incstack = 0
 16566  01B83A  010E               	movlb	14	; () banked
 16567  01B83C  93CA               	bcf	202,1,b	;volatile
 16568                           
 16569                           ;ext_int.c: 92: (INTCONbits.INT1EDG = 1);
 16570  01B83E  82F2               	bsf	4082,1,c	;volatile
 16571                           
 16572                           ; BSR set to: 14
 16573                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 16574  01B840  0EB6               	movlw	low _INT1_DefaultInterruptHandler
 16575  01B842  0102               	movlb	2	; () banked
 16576  01B844  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 16577  01B846  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 16578  01B848  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16579  01B84A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 16580  01B84C  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16581  01B84E  EC45  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 16582                           
 16583                           ;ext_int.c: 95: (PIE0bits.INT1IE = 1);
 16584  01B852  010E               	movlb	14	; () banked
 16585  01B854  83C2               	bsf	194,1,b	;volatile
 16586                           
 16587                           ; BSR set to: 14
 16588                           ;ext_int.c: 100: (PIR0bits.INT2IF = 0);
 16589  01B856  95CA               	bcf	202,2,b	;volatile
 16590                           
 16591                           ; BSR set to: 14
 16592                           ;ext_int.c: 101: (INTCONbits.INT2EDG = 1);
 16593  01B858  84F2               	bsf	4082,2,c	;volatile
 16594                           
 16595                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 16596  01B85A  0EB4               	movlw	low _INT2_DefaultInterruptHandler
 16597  01B85C  0102               	movlb	2	; () banked
 16598  01B85E  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 16599  01B860  0EC1               	movlw	high _INT2_DefaultInterruptHandler
 16600  01B862  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16601  01B864  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 16602  01B866  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16603  01B868  EC3E  F0E0         	call	_INT2_SetInterruptHandler	;wreg free
 16604                           
 16605                           ;ext_int.c: 104: (PIE0bits.INT2IE = 1);
 16606  01B86C  010E               	movlb	14	; () banked
 16607  01B86E  85C2               	bsf	194,2,b	;volatile
 16608                           
 16609                           ; BSR set to: 14
 16610  01B870  0012               	return		;funcret
 16611  01B872                     __end_of_EXT_INT_Initialize:
 16612                           	opt callstack 0
 16613                           
 16614 ;; *************** function _INT2_SetInterruptHandler *****************
 16615 ;; Defined at:
 16616 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16619 ;;		 -> rightCapTouchHandler(1), INT2_DefaultInterruptHandler(1), 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;		None
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      void 
 16624 ;; Registers used:
 16625 ;;		wreg, status,2, status,0
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16631 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;Total ram usage:        3 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:   11
 16638 ;; This function calls:
 16639 ;;		Nothing
 16640 ;; This function is called by:
 16641 ;;		_EXT_INT_Initialize
 16642 ;;		_main
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text55
 16647  01C07C                     __ptext55:
 16648                           	opt callstack 0
 16649  01C07C                     _INT2_SetInterruptHandler:
 16650                           	opt callstack 17
 16651                           
 16652                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 16653                           
 16654                           ; BSR set to: 14
 16655                           ;incstack = 0
 16656  01C07C  C200  F189         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 16657  01C080  C201  F18A         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 16658  01C084  C202  F18B         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 16659  01C088  0012               	return		;funcret
 16660  01C08A                     __end_of_INT2_SetInterruptHandler:
 16661                           	opt callstack 0
 16662                           
 16663 ;; *************** function _INT1_SetInterruptHandler *****************
 16664 ;; Defined at:
 16665 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16668 ;;		 -> leftCapTouchHandler(1), INT1_DefaultInterruptHandler(1), 
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;		None
 16671 ;; Return value:  Size  Location     Type
 16672 ;;                  1    wreg      void 
 16673 ;; Registers used:
 16674 ;;		wreg, status,2, status,0
 16675 ;; Tracked objects:
 16676 ;;		On entry : 0/0
 16677 ;;		On exit  : 0/0
 16678 ;;		Unchanged: 0/0
 16679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16680 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16684 ;;Total ram usage:        3 bytes
 16685 ;; Hardware stack levels used:    1
 16686 ;; Hardware stack levels required when called:   11
 16687 ;; This function calls:
 16688 ;;		Nothing
 16689 ;; This function is called by:
 16690 ;;		_EXT_INT_Initialize
 16691 ;;		_main
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695                           	psect	text56
 16696  01C08A                     __ptext56:
 16697                           	opt callstack 0
 16698  01C08A                     _INT1_SetInterruptHandler:
 16699                           	opt callstack 17
 16700                           
 16701                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 16702                           
 16703                           ;incstack = 0
 16704  01C08A  C200  F18C         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 16705  01C08E  C201  F18D         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 16706  01C092  C202  F18E         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 16707  01C096  0012               	return		;funcret
 16708  01C098                     __end_of_INT1_SetInterruptHandler:
 16709                           	opt callstack 0
 16710                           
 16711 ;; *************** function _EUSART2_Initialize *****************
 16712 ;; Defined at:
 16713 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 16714 ;; Parameters:    Size  Location     Type
 16715 ;;		None
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;		None
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, status,2, status,0, cstack
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16731 ;;Total ram usage:        0 bytes
 16732 ;; Hardware stack levels used:    1
 16733 ;; Hardware stack levels required when called:   12
 16734 ;; This function calls:
 16735 ;;		_EUSART2_SetRxInterruptHandler
 16736 ;;		_EUSART2_SetTxInterruptHandler
 16737 ;; This function is called by:
 16738 ;;		_SYSTEM_Initialize
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           	psect	text57
 16743  01ACB0                     __ptext57:
 16744                           	opt callstack 0
 16745  01ACB0                     _EUSART2_Initialize:
 16746                           	opt callstack 17
 16747                           
 16748                           ;eusart2.c: 82: PIE3bits.RC2IE = 0;
 16749                           
 16750                           ;incstack = 0
 16751  01ACB0  010E               	movlb	14	; () banked
 16752  01ACB2  9FC5               	bcf	197,7,b	;volatile
 16753                           
 16754                           ; BSR set to: 14
 16755                           ;eusart2.c: 83: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 16756  01ACB4  0E08               	movlw	low _EUSART2_Receive_ISR
 16757  01ACB6  0102               	movlb	2	; () banked
 16758  01ACB8  6F00               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 16759  01ACBA  0EA3               	movlw	high _EUSART2_Receive_ISR
 16760  01ACBC  6F01               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 16761  01ACBE  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 16762  01ACC0  6F02               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 16763  01ACC2  EC53  F0E0         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 16764                           
 16765                           ;eusart2.c: 84: PIE3bits.TX2IE = 0;
 16766  01ACC6  010E               	movlb	14	; () banked
 16767  01ACC8  9DC5               	bcf	197,6,b	;volatile
 16768                           
 16769                           ;eusart2.c: 85: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 16770  01ACCA  0E76               	movlw	low _EUSART2_Transmit_ISR
 16771  01ACCC  0102               	movlb	2	; () banked
 16772  01ACCE  6F00               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 16773  01ACD0  0EB9               	movlw	high _EUSART2_Transmit_ISR
 16774  01ACD2  6F01               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 16775  01ACD4  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 16776  01ACD6  6F02               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 16777  01ACD8  EC4C  F0E0         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 16778                           
 16779                           ;eusart2.c: 89: BAUD2CON = 0x08;
 16780  01ACDC  0E08               	movlw	8
 16781  01ACDE  010E               	movlb	14	; () banked
 16782  01ACE0  6F9F               	movwf	159,b	;volatile
 16783                           
 16784                           ; BSR set to: 14
 16785                           ;eusart2.c: 92: RC2STA = 0x90;
 16786  01ACE2  0E90               	movlw	144
 16787  01ACE4  6F9D               	movwf	157,b	;volatile
 16788                           
 16789                           ; BSR set to: 14
 16790                           ;eusart2.c: 95: TX2STA = 0x24;
 16791  01ACE6  0E24               	movlw	36
 16792  01ACE8  6F9E               	movwf	158,b	;volatile
 16793                           
 16794                           ; BSR set to: 14
 16795                           ;eusart2.c: 98: SP2BRGL = 0x8A;
 16796  01ACEA  0E8A               	movlw	138
 16797  01ACEC  6F9B               	movwf	155,b	;volatile
 16798                           
 16799                           ; BSR set to: 14
 16800                           ;eusart2.c: 101: SP2BRGH = 0x00;
 16801  01ACEE  0E00               	movlw	0
 16802  01ACF0  6F9C               	movwf	156,b	;volatile
 16803                           
 16804                           ; BSR set to: 14
 16805                           ;eusart2.c: 105: eusart2TxHead = 0;
 16806  01ACF2  0E00               	movlw	0
 16807  01ACF4  0101               	movlb	1	; () banked
 16808  01ACF6  6F9B               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16809                           
 16810                           ; BSR set to: 1
 16811                           ;eusart2.c: 106: eusart2TxTail = 0;
 16812  01ACF8  0E00               	movlw	0
 16813  01ACFA  6F9A               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16814                           
 16815                           ; BSR set to: 1
 16816                           ;eusart2.c: 107: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 16817  01ACFC  0E40               	movlw	64
 16818  01ACFE  6F99               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16819                           
 16820                           ; BSR set to: 1
 16821                           ;eusart2.c: 109: eusart2RxHead = 0;
 16822  01AD00  0E00               	movlw	0
 16823  01AD02  0100               	movlb	0	; () banked
 16824  01AD04  6FDD               	movwf	_eusart2RxHead& (0+255),b	;volatile
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;eusart2.c: 110: eusart2RxTail = 0;
 16828  01AD06  0E00               	movlw	0
 16829  01AD08  0101               	movlb	1	; () banked
 16830  01AD0A  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 16831                           
 16832                           ; BSR set to: 1
 16833                           ;eusart2.c: 111: eusart2RxCount = 0;
 16834  01AD0C  0E00               	movlw	0
 16835  01AD0E  6F97               	movwf	_eusart2RxCount& (0+255),b	;volatile
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;eusart2.c: 114: PIE3bits.RC2IE = 1;
 16839  01AD10  010E               	movlb	14	; () banked
 16840  01AD12  8FC5               	bsf	197,7,b	;volatile
 16841                           
 16842                           ; BSR set to: 14
 16843  01AD14  0012               	return		;funcret
 16844  01AD16                     __end_of_EUSART2_Initialize:
 16845                           	opt callstack 0
 16846                           
 16847 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 16848 ;; Defined at:
 16849 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 16852 ;;		 -> EUSART2_Transmit_ISR(1), 
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;		None
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  1    wreg      void 
 16857 ;; Registers used:
 16858 ;;		wreg, status,2, status,0
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16864 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16867 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16868 ;;Total ram usage:        3 bytes
 16869 ;; Hardware stack levels used:    1
 16870 ;; Hardware stack levels required when called:   11
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_EUSART2_Initialize
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text58
 16879  01C098                     __ptext58:
 16880                           	opt callstack 0
 16881  01C098                     _EUSART2_SetTxInterruptHandler:
 16882                           	opt callstack 17
 16883                           
 16884                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 16885                           
 16886                           ; BSR set to: 14
 16887                           ;incstack = 0
 16888  01C098  C200  F186         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 16889  01C09C  C201  F187         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 16890  01C0A0  C202  F188         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 16891  01C0A4  0012               	return		;funcret
 16892  01C0A6                     __end_of_EUSART2_SetTxInterruptHandler:
 16893                           	opt callstack 0
 16894                           
 16895 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 16896 ;; Defined at:
 16897 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 16900 ;;		 -> EUSART2_Receive_ISR(1), 
 16901 ;; Auto vars:     Size  Location     Type
 16902 ;;		None
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  1    wreg      void 
 16905 ;; Registers used:
 16906 ;;		wreg, status,2, status,0
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16912 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16915 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16916 ;;Total ram usage:        3 bytes
 16917 ;; Hardware stack levels used:    1
 16918 ;; Hardware stack levels required when called:   11
 16919 ;; This function calls:
 16920 ;;		Nothing
 16921 ;; This function is called by:
 16922 ;;		_EUSART2_Initialize
 16923 ;; This function uses a non-reentrant model
 16924 ;;
 16925                           
 16926                           	psect	text59
 16927  01C0A6                     __ptext59:
 16928                           	opt callstack 0
 16929  01C0A6                     _EUSART2_SetRxInterruptHandler:
 16930                           	opt callstack 17
 16931                           
 16932                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 16933                           
 16934                           ;incstack = 0
 16935  01C0A6  C200  F183         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 16936  01C0AA  C201  F184         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 16937  01C0AE  C202  F185         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 16938  01C0B2  0012               	return		;funcret
 16939  01C0B4                     __end_of_EUSART2_SetRxInterruptHandler:
 16940                           	opt callstack 0
 16941                           
 16942 ;; *************** function _CCP2_Initialize *****************
 16943 ;; Defined at:
 16944 ;;		line 61 in file "mcc_generated_files/ccp2.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		wreg, status,2
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; Hardware stack levels required when called:   11
 16965 ;; This function calls:
 16966 ;;		Nothing
 16967 ;; This function is called by:
 16968 ;;		_SYSTEM_Initialize
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           	psect	text60
 16973  01BCC2                     __ptext60:
 16974                           	opt callstack 0
 16975  01BCC2                     _CCP2_Initialize:
 16976                           	opt callstack 18
 16977                           
 16978                           ;ccp2.c: 66: CCP2CON = 0x87;
 16979                           
 16980                           ;incstack = 0
 16981  01BCC2  0E87               	movlw	135
 16982  01BCC4  6EA8               	movwf	4008,c	;volatile
 16983                           
 16984                           ;ccp2.c: 69: CCP2CAP = 0x00;
 16985  01BCC6  0E00               	movlw	0
 16986  01BCC8  6EA9               	movwf	4009,c	;volatile
 16987                           
 16988                           ;ccp2.c: 72: CCPR2H = 0x00;
 16989  01BCCA  0E00               	movlw	0
 16990  01BCCC  6EA7               	movwf	4007,c	;volatile
 16991                           
 16992                           ;ccp2.c: 75: CCPR2L = 0x00;
 16993  01BCCE  0E00               	movlw	0
 16994  01BCD0  6EA6               	movwf	4006,c	;volatile
 16995                           
 16996                           ;ccp2.c: 78: CCPTMRSbits.C2TSEL = 0x3;
 16997  01BCD2  0E0C               	movlw	12
 16998  01BCD4  12AE               	iorwf	4014,f,c	;volatile
 16999                           
 17000                           ;ccp2.c: 81: PIR6bits.CCP2IF = 0;
 17001  01BCD6  010E               	movlb	14	; () banked
 17002  01BCD8  93D0               	bcf	208,1,b	;volatile
 17003                           
 17004                           ; BSR set to: 14
 17005                           ;ccp2.c: 84: PIE6bits.CCP2IE = 1;
 17006  01BCDA  83C8               	bsf	200,1,b	;volatile
 17007                           
 17008                           ;ccp2.c: 86: QI_current_edge = qi_period_rising_1;
 17009  01BCDC  0E00               	movlw	0
 17010  01BCDE  0101               	movlb	1	; () banked
 17011  01BCE0  6F96               	movwf	_QI_current_edge& (0+255),b
 17012                           
 17013                           ; BSR set to: 1
 17014  01BCE2  0012               	return		;funcret
 17015  01BCE4                     __end_of_CCP2_Initialize:
 17016                           	opt callstack 0
 17017                           
 17018 ;; *************** function _ADCC_Initialize *****************
 17019 ;; Defined at:
 17020 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17021 ;; Parameters:    Size  Location     Type
 17022 ;;		None
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;		None
 17025 ;; Return value:  Size  Location     Type
 17026 ;;                  1    wreg      void 
 17027 ;; Registers used:
 17028 ;;		wreg, status,2, status,0, cstack
 17029 ;; Tracked objects:
 17030 ;;		On entry : 0/0
 17031 ;;		On exit  : 0/0
 17032 ;;		Unchanged: 0/0
 17033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;Total ram usage:        0 bytes
 17039 ;; Hardware stack levels used:    1
 17040 ;; Hardware stack levels required when called:   12
 17041 ;; This function calls:
 17042 ;;		_ADCC_SetADTIInterruptHandler
 17043 ;; This function is called by:
 17044 ;;		_SYSTEM_Initialize
 17045 ;; This function uses a non-reentrant model
 17046 ;;
 17047                           
 17048                           	psect	text61
 17049  01ADE2                     __ptext61:
 17050                           	opt callstack 0
 17051  01ADE2                     _ADCC_Initialize:
 17052                           	opt callstack 17
 17053                           
 17054                           ;adcc.c: 67: ADLTHL = 0x00;
 17055                           
 17056                           ; BSR set to: 1
 17057                           ;incstack = 0
 17058  01ADE2  0E00               	movlw	0
 17059  01ADE4  6E6A               	movwf	3946,c	;volatile
 17060                           
 17061                           ;adcc.c: 69: ADLTHH = 0x00;
 17062  01ADE6  0E00               	movlw	0
 17063  01ADE8  6E6B               	movwf	3947,c	;volatile
 17064                           
 17065                           ;adcc.c: 71: ADUTHL = 0x00;
 17066  01ADEA  0E00               	movlw	0
 17067  01ADEC  6E6C               	movwf	3948,c	;volatile
 17068                           
 17069                           ;adcc.c: 73: ADUTHH = 0x00;
 17070  01ADEE  0E00               	movlw	0
 17071  01ADF0  6E6D               	movwf	3949,c	;volatile
 17072                           
 17073                           ;adcc.c: 75: ADSTPTL = 0x00;
 17074  01ADF2  0E00               	movlw	0
 17075  01ADF4  6E68               	movwf	3944,c	;volatile
 17076                           
 17077                           ;adcc.c: 77: ADSTPTH = 0x00;
 17078  01ADF6  0E00               	movlw	0
 17079  01ADF8  6E69               	movwf	3945,c	;volatile
 17080                           
 17081                           ;adcc.c: 79: ADRPT = 0xFF;
 17082  01ADFA  6866               	setf	3942,c	;volatile
 17083                           
 17084                           ;adcc.c: 81: ADPCH = 0x00;
 17085  01ADFC  0E00               	movlw	0
 17086  01ADFE  010F               	movlb	15	; () banked
 17087  01AE00  6F5F               	movwf	95,b	;volatile
 17088                           
 17089                           ;adcc.c: 83: ADCAP = 0x00;
 17090  01AE02  0E00               	movlw	0
 17091  01AE04  6F5D               	movwf	93,b	;volatile
 17092                           
 17093                           ;adcc.c: 85: ADCON1 = 0x00;
 17094  01AE06  0E00               	movlw	0
 17095  01AE08  6F59               	movwf	89,b	;volatile
 17096                           
 17097                           ;adcc.c: 87: ADCON2 = 0x04;
 17098  01AE0A  0E04               	movlw	4
 17099  01AE0C  6F5A               	movwf	90,b	;volatile
 17100                           
 17101                           ;adcc.c: 89: ADCON3 = 0x5F;
 17102  01AE0E  0E5F               	movlw	95
 17103  01AE10  6F5B               	movwf	91,b	;volatile
 17104                           
 17105                           ;adcc.c: 91: ADSTAT = 0x00;
 17106  01AE12  0E00               	movlw	0
 17107  01AE14  6E65               	movwf	3941,c	;volatile
 17108                           
 17109                           ;adcc.c: 93: ADREF = 0x12;
 17110  01AE16  0E12               	movlw	18
 17111  01AE18  6F58               	movwf	88,b	;volatile
 17112                           
 17113                           ;adcc.c: 95: ADACT = 0x00;
 17114  01AE1A  0E00               	movlw	0
 17115  01AE1C  6F56               	movwf	86,b	;volatile
 17116                           
 17117                           ;adcc.c: 97: ADCLK = 0x1F;
 17118  01AE1E  0E1F               	movlw	31
 17119  01AE20  6F57               	movwf	87,b	;volatile
 17120                           
 17121                           ;adcc.c: 99: ADCON0 = 0xC4;
 17122  01AE22  0EC4               	movlw	196
 17123  01AE24  6E60               	movwf	3936,c	;volatile
 17124                           
 17125                           ; BSR set to: 15
 17126                           ;adcc.c: 101: ADACQ = 0xFF;
 17127  01AE26  695C               	setf	92,b	;volatile
 17128                           
 17129                           ; BSR set to: 15
 17130                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 17131  01AE28  010E               	movlb	14	; () banked
 17132  01AE2A  93CB               	bcf	203,1,b	;volatile
 17133                           
 17134                           ; BSR set to: 14
 17135                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 17136  01AE2C  83C3               	bsf	195,1,b	;volatile
 17137                           
 17138                           ; BSR set to: 14
 17139                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 17140  01AE2E  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 17141  01AE30  0102               	movlb	2	; () banked
 17142  01AE32  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 17143  01AE34  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 17144  01AE36  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 17145  01AE38  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17146  01AE3A  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 17147  01AE3C  EC5A  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 17148  01AE40  0012               	return		;funcret
 17149  01AE42                     __end_of_ADCC_Initialize:
 17150                           	opt callstack 0
 17151                           
 17152 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17153 ;; Defined at:
 17154 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17157 ;;		 -> ADC_PostProcessingHandler(1), ADCC_DefaultInterruptHandler(1), 
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;		None
 17160 ;; Return value:  Size  Location     Type
 17161 ;;                  1    wreg      void 
 17162 ;; Registers used:
 17163 ;;		wreg, status,2, status,0
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17169 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;Total ram usage:        3 bytes
 17174 ;; Hardware stack levels used:    1
 17175 ;; Hardware stack levels required when called:   11
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_ADCC_Initialize
 17180 ;;		_main
 17181 ;; This function uses a non-reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text62
 17185  01C0B4                     __ptext62:
 17186                           	opt callstack 0
 17187  01C0B4                     _ADCC_SetADTIInterruptHandler:
 17188                           	opt callstack 17
 17189                           
 17190                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 17191                           
 17192                           ;incstack = 0
 17193  01C0B4  C200  F17A         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 17194  01C0B8  C201  F17B         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 17195  01C0BC  C202  F17C         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 17196  01C0C0  0012               	return		;funcret
 17197  01C0C2                     __end_of_ADCC_SetADTIInterruptHandler:
 17198                           	opt callstack 0
 17199                           
 17200 ;; *************** function _OLED_updateHandler *****************
 17201 ;; Defined at:
 17202 ;;		line 322 in file "oled.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;		None
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  rev_id_str     17   17[BANK3 ] unsigned char [17]
 17207 ;;  dev_id_str     17    0[BANK3 ] unsigned char [17]
 17208 ;; Return value:  Size  Location     Type
 17209 ;;                  1    wreg      void 
 17210 ;; Registers used:
 17211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17212 ;; Tracked objects:
 17213 ;;		On entry : 0/0
 17214 ;;		On exit  : 0/0
 17215 ;;		Unchanged: 0/0
 17216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17218 ;;      Locals:         0       0       0       0      34       0       0       0       0       0       0       0       
      +0       0       0       0
 17219 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17220 ;;      Totals:         0       0       0       2      34       0       0       0       0       0       0       0       
      +0       0       0       0
 17221 ;;Total ram usage:       36 bytes
 17222 ;; Hardware stack levels used:    1
 17223 ;; Hardware stack levels required when called:   17
 17224 ;; This function calls:
 17225 ;;		_OLED_UpdateFromRAMBuffer
 17226 ;;		___fldiv
 17227 ;;		_getCauseOfResetStringSmall
 17228 ;;		_getDaysFromOnTime
 17229 ;;		_getDeviceID
 17230 ;;		_getHoursFromOnTime
 17231 ;;		_getMajorRevisionID
 17232 ;;		_getMinorRevisionID
 17233 ;;		_getMinutesFromOnTime
 17234 ;;		_getNXQChargeStateStringCaps
 17235 ;;		_getSecondsFromOnTime
 17236 ;;		_getYearsFromOnTime
 17237 ;;		_sprintf
 17238 ;;		_strcpy
 17239 ;; This function is called by:
 17240 ;;		_main
 17241 ;; This function uses a non-reentrant model
 17242 ;;
 17243                           
 17244                           	psect	text63
 17245  012E3C                     __ptext63:
 17246                           	opt callstack 0
 17247  012E3C                     _OLED_updateHandler:
 17248                           	opt callstack 13
 17249                           
 17250                           ;oled.c: 324: switch (OLED_Frame) {
 17251                           
 17252                           ;incstack = 0
 17253  012E3C  EFFB  F09E         	goto	l21816
 17254  012E40                     l21378:
 17255                           
 17256                           ; BSR set to: 2
 17257                           ;oled.c: 328: OLED_update_flag = 0;
 17258  012E40  0E00               	movlw	0
 17259  012E42  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17260                           
 17261                           ; BSR set to: 2
 17262                           ;oled.c: 331: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 17263  012E44  0EBA               	movlw	low _OLED_RAM_Buffer
 17264  012E46  6F03               	movwf	strcpy@to& (0+255),b
 17265  012E48  0E02               	movlw	high _OLED_RAM_Buffer
 17266  012E4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17267  012E4C  0E98               	movlw	low STR_60
 17268  012E4E  6F05               	movwf	strcpy@from& (0+255),b
 17269  012E50  0EFC               	movlw	high STR_60
 17270  012E52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17271  012E54  EC49  F0D9         	call	_strcpy	;wreg free
 17272                           
 17273                           ;oled.c: 332: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 17274  012E58  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17275  012E5A  0102               	movlb	2	; () banked
 17276  012E5C  6F03               	movwf	strcpy@to& (0+255),b
 17277  012E5E  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17278  012E60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17279  012E62  0EF1               	movlw	low STR_61
 17280  012E64  6F05               	movwf	strcpy@from& (0+255),b
 17281  012E66  0EFB               	movlw	high STR_61
 17282  012E68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17283  012E6A  EC49  F0D9         	call	_strcpy	;wreg free
 17284                           
 17285                           ;oled.c: 333: strcpy(OLED_RAM_Buffer.line2, "Cause of Reset:");
 17286  012E6E  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17287  012E70  0102               	movlb	2	; () banked
 17288  012E72  6F03               	movwf	strcpy@to& (0+255),b
 17289  012E74  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17290  012E76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17291  012E78  0EE1               	movlw	low STR_62
 17292  012E7A  6F05               	movwf	strcpy@from& (0+255),b
 17293  012E7C  0EFB               	movlw	high STR_62
 17294  012E7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17295  012E80  EC49  F0D9         	call	_strcpy	;wreg free
 17296                           
 17297                           ;oled.c: 334: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 17298  012E84  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17299  012E86  0102               	movlb	2	; () banked
 17300  012E88  6F03               	movwf	strcpy@to& (0+255),b
 17301  012E8A  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17302  012E8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17303  012E8E  51FE               	movf	_reset_cause& (0+255),w,b
 17304  012E90  EC1C  F0DD         	call	_getCauseOfResetStringSmall
 17305  012E94  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 17306  012E98  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 17307  012E9C  EC49  F0D9         	call	_strcpy	;wreg free
 17308                           
 17309                           ;oled.c: 335: OLED_UpdateFromRAMBuffer();
 17310  012EA0  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17311                           
 17312                           ;oled.c: 336: OLED_Frame = OLED_Boot_Frame_2;
 17313  012EA4  0E01               	movlw	1
 17314  012EA6                     L3:
 17315  012EA6  0102               	movlb	2	; () banked
 17316  012EA8  6FB7               	movwf	_OLED_Frame& (0+255),b
 17317                           
 17318                           ; BSR set to: 2
 17319                           ;oled.c: 337: OLED_update_time = 3;
 17320  012EAA  0E03               	movlw	3
 17321  012EAC  6FFF               	movwf	_OLED_update_time& (0+255),b
 17322                           
 17323                           ;oled.c: 339: break;
 17324  012EAE  0012               	return	
 17325  012EB0                     l21394:
 17326                           
 17327                           ; BSR set to: 2
 17328                           ;oled.c: 343: OLED_update_flag = 0;
 17329  012EB0  0E00               	movlw	0
 17330  012EB2  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17331                           
 17332                           ; BSR set to: 2
 17333                           ;oled.c: 347: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 17334  012EB4  0EBA               	movlw	low _OLED_RAM_Buffer
 17335  012EB6  6F03               	movwf	strcpy@to& (0+255),b
 17336  012EB8  0E02               	movlw	high _OLED_RAM_Buffer
 17337  012EBA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17338  012EBC  0E2A               	movlw	low STR_63
 17339  012EBE  6F05               	movwf	strcpy@from& (0+255),b
 17340  012EC0  0EFE               	movlw	high STR_63
 17341  012EC2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17342  012EC4  EC49  F0D9         	call	_strcpy	;wreg free
 17343                           
 17344                           ;oled.c: 348: char dev_id_str[17];;oled.c: 349: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 17345  012EC8  0EDD               	movlw	low OLED_updateHandler@dev_id_str
 17346  012ECA  0102               	movlb	2	; () banked
 17347  012ECC  6F84               	movwf	sprintf@wh& (0+255),b
 17348  012ECE  0E03               	movlw	high OLED_updateHandler@dev_id_str
 17349  012ED0  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17350  012ED2  0EAB               	movlw	low STR_64
 17351  012ED4  6F86               	movwf	sprintf@f& (0+255),b
 17352  012ED6  0EFF               	movlw	high STR_64
 17353  012ED8  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17354  012EDA  ECC3  F0DE         	call	_getDeviceID	;wreg free
 17355  012EDE  C20B  F288         	movff	?_getDeviceID,?_sprintf+4
 17356  012EE2  C20C  F289         	movff	?_getDeviceID+1,?_sprintf+5
 17357  012EE6  EC6D  F0D9         	call	_sprintf	;wreg free
 17358                           
 17359                           ;oled.c: 350: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 17360  012EEA  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17361  012EEC  0102               	movlb	2	; () banked
 17362  012EEE  6F03               	movwf	strcpy@to& (0+255),b
 17363  012EF0  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17364  012EF2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17365  012EF4  0EDD               	movlw	low OLED_updateHandler@dev_id_str
 17366  012EF6  6F05               	movwf	strcpy@from& (0+255),b
 17367  012EF8  0E03               	movlw	high OLED_updateHandler@dev_id_str
 17368  012EFA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17369  012EFC  EC49  F0D9         	call	_strcpy	;wreg free
 17370                           
 17371                           ;oled.c: 353: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 17372  012F00  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17373  012F02  0102               	movlb	2	; () banked
 17374  012F04  6F03               	movwf	strcpy@to& (0+255),b
 17375  012F06  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17376  012F08  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17377  012F0A  0E32               	movlw	low STR_65
 17378  012F0C  6F05               	movwf	strcpy@from& (0+255),b
 17379  012F0E  0EFD               	movlw	high STR_65
 17380  012F10  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17381  012F12  EC49  F0D9         	call	_strcpy	;wreg free
 17382                           
 17383                           ;oled.c: 354: char rev_id_str[17];;oled.c: 355: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 17384  012F16  0EEE               	movlw	low OLED_updateHandler@rev_id_str
 17385  012F18  0102               	movlb	2	; () banked
 17386  012F1A  6F84               	movwf	sprintf@wh& (0+255),b
 17387  012F1C  0E03               	movlw	high OLED_updateHandler@rev_id_str
 17388  012F1E  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17389  012F20  0E7B               	movlw	low STR_66
 17390  012F22  6F86               	movwf	sprintf@f& (0+255),b
 17391  012F24  0EFF               	movlw	high STR_66
 17392  012F26  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17393  012F28  ECC3  F0DB         	call	_getMajorRevisionID	;wreg free
 17394  012F2C  0102               	movlb	2	; () banked
 17395  012F2E  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 17396  012F30  0E41               	movlw	65
 17397  012F32  2597               	addwf	??_OLED_updateHandler& (0+255),w,b
 17398  012F34  6F88               	movwf	(?_sprintf+4)& (0+255),b
 17399  012F36  6B89               	clrf	(?_sprintf+5)& (0+255),b
 17400  012F38  0E00               	movlw	0
 17401  012F3A  2389               	addwfc	(?_sprintf+5)& (0+255),f,b
 17402  012F3C  EC05  F0DE         	call	_getMinorRevisionID	;wreg free
 17403  012F40  0102               	movlb	2	; () banked
 17404  012F42  6F98               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 17405  012F44  5198               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 17406  012F46  6F8A               	movwf	(?_sprintf+6)& (0+255),b
 17407  012F48  6B8B               	clrf	(?_sprintf+7)& (0+255),b
 17408  012F4A  EC6D  F0D9         	call	_sprintf	;wreg free
 17409                           
 17410                           ;oled.c: 356: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 17411  012F4E  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17412  012F50  0102               	movlb	2	; () banked
 17413  012F52  6F03               	movwf	strcpy@to& (0+255),b
 17414  012F54  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17415  012F56  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17416  012F58  0EEE               	movlw	low OLED_updateHandler@rev_id_str
 17417  012F5A  6F05               	movwf	strcpy@from& (0+255),b
 17418  012F5C  0E03               	movlw	high OLED_updateHandler@rev_id_str
 17419  012F5E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17420  012F60  EC49  F0D9         	call	_strcpy	;wreg free
 17421                           
 17422                           ;oled.c: 358: OLED_UpdateFromRAMBuffer();
 17423  012F64  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17424                           
 17425                           ;oled.c: 359: OLED_Frame = OLED_Boot_Frame_3;
 17426  012F68  0E02               	movlw	2
 17427  012F6A  D79D               	goto	L3
 17428  012F6C                     l21414:
 17429                           
 17430                           ; BSR set to: 2
 17431                           ;oled.c: 366: OLED_update_flag = 0;
 17432  012F6C  0E00               	movlw	0
 17433  012F6E  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17434                           
 17435                           ; BSR set to: 2
 17436                           ;oled.c: 368: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 17437  012F70  0EBA               	movlw	low _OLED_RAM_Buffer
 17438  012F72  6F03               	movwf	strcpy@to& (0+255),b
 17439  012F74  0E02               	movlw	high _OLED_RAM_Buffer
 17440  012F76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17441  012F78  0ED1               	movlw	low STR_67
 17442  012F7A  6F05               	movwf	strcpy@from& (0+255),b
 17443  012F7C  0EFB               	movlw	high STR_67
 17444  012F7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17445  012F80  EC49  F0D9         	call	_strcpy	;wreg free
 17446                           
 17447                           ;oled.c: 369: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 17448  012F84  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17449  012F86  0102               	movlb	2	; () banked
 17450  012F88  6F03               	movwf	strcpy@to& (0+255),b
 17451  012F8A  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17452  012F8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17453  012F8E  0EB8               	movlw	low STR_68
 17454  012F90  6F05               	movwf	strcpy@from& (0+255),b
 17455  012F92  0EFE               	movlw	high STR_68
 17456  012F94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17457  012F96  EC49  F0D9         	call	_strcpy	;wreg free
 17458                           
 17459                           ;oled.c: 370: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 17460  012F9A  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17461  012F9C  0102               	movlb	2	; () banked
 17462  012F9E  6F03               	movwf	strcpy@to& (0+255),b
 17463  012FA0  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17464  012FA2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17465  012FA4  0E01               	movlw	low STR_69
 17466  012FA6  6F05               	movwf	strcpy@from& (0+255),b
 17467  012FA8  0EFC               	movlw	high STR_69
 17468  012FAA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17469  012FAC  EC49  F0D9         	call	_strcpy	;wreg free
 17470                           
 17471                           ;oled.c: 371: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 17472  012FB0  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17473  012FB2  0102               	movlb	2	; () banked
 17474  012FB4  6F03               	movwf	strcpy@to& (0+255),b
 17475  012FB6  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17476  012FB8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17477  012FBA  0E4F               	movlw	low STR_70
 17478  012FBC  6F05               	movwf	strcpy@from& (0+255),b
 17479  012FBE  0EFC               	movlw	high STR_70
 17480  012FC0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17481  012FC2  EC49  F0D9         	call	_strcpy	;wreg free
 17482                           
 17483                           ;oled.c: 373: OLED_UpdateFromRAMBuffer();
 17484  012FC6  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17485                           
 17486                           ;oled.c: 374: OLED_Frame = OLED_Boot_Frame_4;
 17487  012FCA  0E03               	movlw	3
 17488  012FCC  D76C               	goto	L3
 17489  012FCE                     l21430:
 17490                           
 17491                           ; BSR set to: 2
 17492                           ;oled.c: 381: OLED_update_flag = 0;
 17493  012FCE  0E00               	movlw	0
 17494  012FD0  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17495                           
 17496                           ; BSR set to: 2
 17497                           ;oled.c: 383: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 17498  012FD2  0EBA               	movlw	low _OLED_RAM_Buffer
 17499  012FD4  6F03               	movwf	strcpy@to& (0+255),b
 17500  012FD6  0E02               	movlw	high _OLED_RAM_Buffer
 17501  012FD8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17502  012FDA  0EFA               	movlw	low STR_71
 17503  012FDC  6F05               	movwf	strcpy@from& (0+255),b
 17504  012FDE  0EFC               	movlw	high STR_71
 17505  012FE0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17506  012FE2  EC49  F0D9         	call	_strcpy	;wreg free
 17507                           
 17508                           ;oled.c: 384: strcpy(OLED_RAM_Buffer.line1, "QI Enabled");
 17509  012FE6  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17510  012FE8  0102               	movlb	2	; () banked
 17511  012FEA  6F03               	movwf	strcpy@to& (0+255),b
 17512  012FEC  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17513  012FEE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17514  012FF0  0E35               	movlw	low STR_72
 17515  012FF2  6F05               	movwf	strcpy@from& (0+255),b
 17516  012FF4  0EFE               	movlw	high STR_72
 17517  012FF6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17518  012FF8  EC49  F0D9         	call	_strcpy	;wreg free
 17519                           
 17520                           ;oled.c: 385: strcpy(OLED_RAM_Buffer.line2, "More Settings");
 17521  012FFC  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17522  012FFE  0102               	movlb	2	; () banked
 17523  013000  6F03               	movwf	strcpy@to& (0+255),b
 17524  013002  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17525  013004  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17526  013006  0E08               	movlw	low STR_73
 17527  013008  6F05               	movwf	strcpy@from& (0+255),b
 17528  01300A  0EFD               	movlw	high STR_73
 17529  01300C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17530  01300E  EC49  F0D9         	call	_strcpy	;wreg free
 17531                           
 17532                           ;oled.c: 386: strcpy(OLED_RAM_Buffer.line3, "via USB, 'Help'");
 17533  013012  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17534  013014  0102               	movlb	2	; () banked
 17535  013016  6F03               	movwf	strcpy@to& (0+255),b
 17536  013018  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17537  01301A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17538  01301C  0EB1               	movlw	low STR_74
 17539  01301E  6F05               	movwf	strcpy@from& (0+255),b
 17540  013020  0EFB               	movlw	high STR_74
 17541  013022  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17542  013024  EC49  F0D9         	call	_strcpy	;wreg free
 17543                           
 17544                           ;oled.c: 388: OLED_UpdateFromRAMBuffer();
 17545  013028  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17546                           
 17547                           ;oled.c: 389: OLED_Frame = OLED_Charge_Status;
 17548  01302C  0E04               	movlw	4
 17549  01302E  D73B               	goto	L3
 17550  013030                     l21446:
 17551                           
 17552                           ; BSR set to: 2
 17553                           ;oled.c: 396: OLED_update_flag = 0;
 17554  013030  0E00               	movlw	0
 17555  013032  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17556                           
 17557                           ; BSR set to: 2
 17558                           ;oled.c: 398: strcpy(OLED_RAM_Buffer.line0, "Charge Status:");
 17559  013034  0EBA               	movlw	low _OLED_RAM_Buffer
 17560  013036  6F03               	movwf	strcpy@to& (0+255),b
 17561  013038  0E02               	movlw	high _OLED_RAM_Buffer
 17562  01303A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17563  01303C  0E40               	movlw	low STR_75
 17564  01303E  6F05               	movwf	strcpy@from& (0+255),b
 17565  013040  0EFC               	movlw	high STR_75
 17566  013042  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17567  013044  EC49  F0D9         	call	_strcpy	;wreg free
 17568                           
 17569                           ;oled.c: 399: strcpy(OLED_RAM_Buffer.line1, " ");
 17570  013048  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17571  01304A  0102               	movlb	2	; () banked
 17572  01304C  6F03               	movwf	strcpy@to& (0+255),b
 17573  01304E  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17574  013050  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17575  013052  0EEE               	movlw	low (STR_54+10)
 17576  013054  6F05               	movwf	strcpy@from& (0+255),b
 17577  013056  0EFD               	movlw	high (STR_54+10)
 17578  013058  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17579  01305A  EC49  F0D9         	call	_strcpy	;wreg free
 17580                           
 17581                           ;oled.c: 400: strcpy(OLED_RAM_Buffer.line2, getNXQChargeStateStringCaps());
 17582  01305E  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17583  013060  0102               	movlb	2	; () banked
 17584  013062  6F03               	movwf	strcpy@to& (0+255),b
 17585  013064  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17586  013066  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17587  013068  EC7E  F0D7         	call	_getNXQChargeStateStringCaps	;wreg free
 17588  01306C  C200  F205         	movff	?_getNXQChargeStateStringCaps,strcpy@from
 17589  013070  C201  F206         	movff	?_getNXQChargeStateStringCaps+1,strcpy@from+1
 17590  013074  EC49  F0D9         	call	_strcpy	;wreg free
 17591                           
 17592                           ;oled.c: 401: strcpy(OLED_RAM_Buffer.line3, " ");
 17593  013078  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17594  01307A  0102               	movlb	2	; () banked
 17595  01307C  6F03               	movwf	strcpy@to& (0+255),b
 17596  01307E  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17597  013080  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17598  013082  0EEE               	movlw	low (STR_54+10)
 17599  013084  6F05               	movwf	strcpy@from& (0+255),b
 17600  013086  0EFD               	movlw	high (STR_54+10)
 17601  013088  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17602  01308A  EC49  F0D9         	call	_strcpy	;wreg free
 17603                           
 17604                           ;oled.c: 403: OLED_UpdateFromRAMBuffer();
 17605  01308E  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17606                           
 17607                           ;oled.c: 404: OLED_Frame = OLED_Charge_Status;
 17608  013092  0E04               	movlw	4
 17609  013094                     L4:
 17610  013094  0102               	movlb	2	; () banked
 17611  013096  6FB7               	movwf	_OLED_Frame& (0+255),b
 17612                           
 17613                           ; BSR set to: 2
 17614                           ;oled.c: 405: OLED_update_time = 1;
 17615  013098  0E01               	movlw	1
 17616  01309A  6FFF               	movwf	_OLED_update_time& (0+255),b
 17617                           
 17618                           ;oled.c: 407: break;
 17619  01309C  0012               	return	
 17620  01309E                     l21462:
 17621                           
 17622                           ; BSR set to: 2
 17623                           ;oled.c: 411: OLED_update_flag = 0;
 17624  01309E  0E00               	movlw	0
 17625  0130A0  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17626                           
 17627                           ; BSR set to: 2
 17628                           ;oled.c: 413: strcpy(OLED_RAM_Buffer.line0, "+12V Voltage:");
 17629  0130A2  0EBA               	movlw	low _OLED_RAM_Buffer
 17630  0130A4  6F03               	movwf	strcpy@to& (0+255),b
 17631  0130A6  0E02               	movlw	high _OLED_RAM_Buffer
 17632  0130A8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17633  0130AA  0EA6               	movlw	low STR_78
 17634  0130AC  6F05               	movwf	strcpy@from& (0+255),b
 17635  0130AE  0EFC               	movlw	high STR_78
 17636  0130B0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17637  0130B2  EC49  F0D9         	call	_strcpy	;wreg free
 17638                           
 17639                           ;oled.c: 414: sprintf(OLED_RAM_Buffer.line1, "%+.3fV", adc_results.pos12_adc_result);
 17640  0130B6  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17641  0130B8  0102               	movlb	2	; () banked
 17642  0130BA  6F84               	movwf	sprintf@wh& (0+255),b
 17643  0130BC  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17644  0130BE  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17645  0130C0  0E6D               	movlw	low STR_79
 17646  0130C2  6F86               	movwf	sprintf@f& (0+255),b
 17647  0130C4  0EFF               	movlw	high STR_79
 17648  0130C6  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17649  0130C8  C0EA  F288         	movff	_adc_results+12,?_sprintf+4
 17650  0130CC  C0EB  F289         	movff	_adc_results+13,?_sprintf+5
 17651  0130D0  C0EC  F28A         	movff	_adc_results+14,?_sprintf+6
 17652  0130D4  C0ED  F28B         	movff	_adc_results+15,?_sprintf+7
 17653  0130D8  EC6D  F0D9         	call	_sprintf	;wreg free
 17654                           
 17655                           ;oled.c: 415: strcpy(OLED_RAM_Buffer.line2, " ");
 17656  0130DC  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17657  0130DE  0102               	movlb	2	; () banked
 17658  0130E0  6F03               	movwf	strcpy@to& (0+255),b
 17659  0130E2  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17660  0130E4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17661  0130E6  0EEE               	movlw	low (STR_54+10)
 17662  0130E8  6F05               	movwf	strcpy@from& (0+255),b
 17663  0130EA  0EFD               	movlw	high (STR_54+10)
 17664  0130EC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17665  0130EE  EC49  F0D9         	call	_strcpy	;wreg free
 17666                           
 17667                           ;oled.c: 416: strcpy(OLED_RAM_Buffer.line3, " ");
 17668  0130F2  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17669  0130F4  0102               	movlb	2	; () banked
 17670  0130F6  6F03               	movwf	strcpy@to& (0+255),b
 17671  0130F8  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17672  0130FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17673  0130FC  0EEE               	movlw	low (STR_54+10)
 17674  0130FE  6F05               	movwf	strcpy@from& (0+255),b
 17675  013100  0EFD               	movlw	high (STR_54+10)
 17676  013102  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17677  013104  EC49  F0D9         	call	_strcpy	;wreg free
 17678                           
 17679                           ;oled.c: 418: OLED_UpdateFromRAMBuffer();
 17680  013108  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17681                           
 17682                           ;oled.c: 419: OLED_Frame = OLED_POS12_Voltage;
 17683  01310C  0E05               	movlw	5
 17684  01310E  D7C2               	goto	L4
 17685  013110                     l21478:
 17686                           
 17687                           ; BSR set to: 2
 17688                           ;oled.c: 426: OLED_update_flag = 0;
 17689  013110  0E00               	movlw	0
 17690  013112  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17691                           
 17692                           ; BSR set to: 2
 17693                           ;oled.c: 428: strcpy(OLED_RAM_Buffer.line0, "+5V Voltage:");
 17694  013114  0EBA               	movlw	low _OLED_RAM_Buffer
 17695  013116  6F03               	movwf	strcpy@to& (0+255),b
 17696  013118  0E02               	movlw	high _OLED_RAM_Buffer
 17697  01311A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17698  01311C  0E3F               	movlw	low STR_82
 17699  01311E  6F05               	movwf	strcpy@from& (0+255),b
 17700  013120  0EFD               	movlw	high STR_82
 17701  013122  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17702  013124  EC49  F0D9         	call	_strcpy	;wreg free
 17703                           
 17704                           ;oled.c: 429: sprintf(OLED_RAM_Buffer.line1, "%+.3fV", adc_results.pos5_adc_result);
 17705  013128  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17706  01312A  0102               	movlb	2	; () banked
 17707  01312C  6F84               	movwf	sprintf@wh& (0+255),b
 17708  01312E  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17709  013130  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17710  013132  0E6D               	movlw	low STR_79
 17711  013134  6F86               	movwf	sprintf@f& (0+255),b
 17712  013136  0EFF               	movlw	high STR_79
 17713  013138  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17714  01313A  C0E6  F288         	movff	_adc_results+8,?_sprintf+4
 17715  01313E  C0E7  F289         	movff	_adc_results+9,?_sprintf+5
 17716  013142  C0E8  F28A         	movff	_adc_results+10,?_sprintf+6
 17717  013146  C0E9  F28B         	movff	_adc_results+11,?_sprintf+7
 17718  01314A  EC6D  F0D9         	call	_sprintf	;wreg free
 17719                           
 17720                           ;oled.c: 430: strcpy(OLED_RAM_Buffer.line2, " ");
 17721  01314E  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17722  013150  0102               	movlb	2	; () banked
 17723  013152  6F03               	movwf	strcpy@to& (0+255),b
 17724  013154  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17725  013156  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17726  013158  0EEE               	movlw	low (STR_54+10)
 17727  01315A  6F05               	movwf	strcpy@from& (0+255),b
 17728  01315C  0EFD               	movlw	high (STR_54+10)
 17729  01315E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17730  013160  EC49  F0D9         	call	_strcpy	;wreg free
 17731                           
 17732                           ;oled.c: 431: strcpy(OLED_RAM_Buffer.line3, " ");
 17733  013164  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17734  013166  0102               	movlb	2	; () banked
 17735  013168  6F03               	movwf	strcpy@to& (0+255),b
 17736  01316A  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17737  01316C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17738  01316E  0EEE               	movlw	low (STR_54+10)
 17739  013170  6F05               	movwf	strcpy@from& (0+255),b
 17740  013172  0EFD               	movlw	high (STR_54+10)
 17741  013174  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17742  013176  EC49  F0D9         	call	_strcpy	;wreg free
 17743                           
 17744                           ;oled.c: 433: OLED_UpdateFromRAMBuffer();
 17745  01317A  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17746                           
 17747                           ;oled.c: 434: OLED_Frame = OLED_POS5_Voltage;
 17748  01317E  0E06               	movlw	6
 17749  013180  D789               	goto	L4
 17750  013182                     l21494:
 17751                           
 17752                           ; BSR set to: 2
 17753                           ;oled.c: 441: OLED_update_flag = 0;
 17754  013182  0E00               	movlw	0
 17755  013184  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17756                           
 17757                           ; BSR set to: 2
 17758                           ;oled.c: 443: strcpy(OLED_RAM_Buffer.line0, "+12V Current:");
 17759  013186  0EBA               	movlw	low _OLED_RAM_Buffer
 17760  013188  6F03               	movwf	strcpy@to& (0+255),b
 17761  01318A  0E02               	movlw	high _OLED_RAM_Buffer
 17762  01318C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17763  01318E  0EEC               	movlw	low STR_86
 17764  013190  6F05               	movwf	strcpy@from& (0+255),b
 17765  013192  0EFC               	movlw	high STR_86
 17766  013194  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17767  013196  EC49  F0D9         	call	_strcpy	;wreg free
 17768                           
 17769                           ;oled.c: 444: sprintf(OLED_RAM_Buffer.line1, "%+.3fA", adc_results.pos12_isns_adc_result
      +                          );
 17770  01319A  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17771  01319C  0102               	movlb	2	; () banked
 17772  01319E  6F84               	movwf	sprintf@wh& (0+255),b
 17773  0131A0  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17774  0131A2  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17775  0131A4  0E5F               	movlw	low STR_87
 17776  0131A6  6F86               	movwf	sprintf@f& (0+255),b
 17777  0131A8  0EFF               	movlw	high STR_87
 17778  0131AA  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17779  0131AC  C0EE  F288         	movff	_adc_results+16,?_sprintf+4
 17780  0131B0  C0EF  F289         	movff	_adc_results+17,?_sprintf+5
 17781  0131B4  C0F0  F28A         	movff	_adc_results+18,?_sprintf+6
 17782  0131B8  C0F1  F28B         	movff	_adc_results+19,?_sprintf+7
 17783  0131BC  EC6D  F0D9         	call	_sprintf	;wreg free
 17784                           
 17785                           ;oled.c: 445: strcpy(OLED_RAM_Buffer.line2, " ");
 17786  0131C0  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17787  0131C2  0102               	movlb	2	; () banked
 17788  0131C4  6F03               	movwf	strcpy@to& (0+255),b
 17789  0131C6  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17790  0131C8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17791  0131CA  0EEE               	movlw	low (STR_54+10)
 17792  0131CC  6F05               	movwf	strcpy@from& (0+255),b
 17793  0131CE  0EFD               	movlw	high (STR_54+10)
 17794  0131D0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17795  0131D2  EC49  F0D9         	call	_strcpy	;wreg free
 17796                           
 17797                           ;oled.c: 446: strcpy(OLED_RAM_Buffer.line3, " ");
 17798  0131D6  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17799  0131D8  0102               	movlb	2	; () banked
 17800  0131DA  6F03               	movwf	strcpy@to& (0+255),b
 17801  0131DC  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17802  0131DE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17803  0131E0  0EEE               	movlw	low (STR_54+10)
 17804  0131E2  6F05               	movwf	strcpy@from& (0+255),b
 17805  0131E4  0EFD               	movlw	high (STR_54+10)
 17806  0131E6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17807  0131E8  EC49  F0D9         	call	_strcpy	;wreg free
 17808                           
 17809                           ;oled.c: 448: OLED_UpdateFromRAMBuffer();
 17810  0131EC  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17811                           
 17812                           ;oled.c: 449: OLED_Frame = OLED_POS12_Current;
 17813  0131F0  0E07               	movlw	7
 17814  0131F2  D750               	goto	L4
 17815  0131F4                     l21510:
 17816                           
 17817                           ; BSR set to: 2
 17818                           ;oled.c: 456: OLED_update_flag = 0;
 17819  0131F4  0E00               	movlw	0
 17820  0131F6  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17821                           
 17822                           ; BSR set to: 2
 17823                           ;oled.c: 458: strcpy(OLED_RAM_Buffer.line0, "QI Current:");
 17824  0131F8  0EBA               	movlw	low _OLED_RAM_Buffer
 17825  0131FA  6F03               	movwf	strcpy@to& (0+255),b
 17826  0131FC  0E02               	movlw	high _OLED_RAM_Buffer
 17827  0131FE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17828  013200  0ECC               	movlw	low STR_90
 17829  013202  6F05               	movwf	strcpy@from& (0+255),b
 17830  013204  0EFD               	movlw	high STR_90
 17831  013206  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17832  013208  EC49  F0D9         	call	_strcpy	;wreg free
 17833                           
 17834                           ;oled.c: 459: sprintf(OLED_RAM_Buffer.line1, "%+.3fA", adc_results.qi_isns_adc_result);
 17835  01320C  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17836  01320E  0102               	movlb	2	; () banked
 17837  013210  6F84               	movwf	sprintf@wh& (0+255),b
 17838  013212  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17839  013214  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17840  013216  0E5F               	movlw	low STR_87
 17841  013218  6F86               	movwf	sprintf@f& (0+255),b
 17842  01321A  0EFF               	movlw	high STR_87
 17843  01321C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17844  01321E  C0F2  F288         	movff	_adc_results+20,?_sprintf+4
 17845  013222  C0F3  F289         	movff	_adc_results+21,?_sprintf+5
 17846  013226  C0F4  F28A         	movff	_adc_results+22,?_sprintf+6
 17847  01322A  C0F5  F28B         	movff	_adc_results+23,?_sprintf+7
 17848  01322E  EC6D  F0D9         	call	_sprintf	;wreg free
 17849                           
 17850                           ;oled.c: 460: strcpy(OLED_RAM_Buffer.line2, " ");
 17851  013232  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17852  013234  0102               	movlb	2	; () banked
 17853  013236  6F03               	movwf	strcpy@to& (0+255),b
 17854  013238  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17855  01323A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17856  01323C  0EEE               	movlw	low (STR_54+10)
 17857  01323E  6F05               	movwf	strcpy@from& (0+255),b
 17858  013240  0EFD               	movlw	high (STR_54+10)
 17859  013242  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17860  013244  EC49  F0D9         	call	_strcpy	;wreg free
 17861                           
 17862                           ;oled.c: 461: strcpy(OLED_RAM_Buffer.line3, " ");
 17863  013248  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17864  01324A  0102               	movlb	2	; () banked
 17865  01324C  6F03               	movwf	strcpy@to& (0+255),b
 17866  01324E  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17867  013250  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17868  013252  0EEE               	movlw	low (STR_54+10)
 17869  013254  6F05               	movwf	strcpy@from& (0+255),b
 17870  013256  0EFD               	movlw	high (STR_54+10)
 17871  013258  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17872  01325A  EC49  F0D9         	call	_strcpy	;wreg free
 17873                           
 17874                           ;oled.c: 463: OLED_UpdateFromRAMBuffer();
 17875  01325E  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17876                           
 17877                           ;oled.c: 464: OLED_Frame = OLED_QI_Current;
 17878  013262  0E08               	movlw	8
 17879  013264  D717               	goto	L4
 17880  013266                     l21526:
 17881                           
 17882                           ; BSR set to: 2
 17883                           ;oled.c: 471: OLED_update_flag = 0;
 17884  013266  0E00               	movlw	0
 17885  013268  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17886                           
 17887                           ; BSR set to: 2
 17888                           ;oled.c: 473: strcpy(OLED_RAM_Buffer.line0, "Input Power:");
 17889  01326A  0EBA               	movlw	low _OLED_RAM_Buffer
 17890  01326C  6F03               	movwf	strcpy@to& (0+255),b
 17891  01326E  0E02               	movlw	high _OLED_RAM_Buffer
 17892  013270  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17893  013272  0E59               	movlw	low STR_94
 17894  013274  6F05               	movwf	strcpy@from& (0+255),b
 17895  013276  0EFD               	movlw	high STR_94
 17896  013278  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17897  01327A  EC49  F0D9         	call	_strcpy	;wreg free
 17898                           
 17899                           ;oled.c: 474: sprintf(OLED_RAM_Buffer.line1, "%+.3fW", adc_calculations.input_power);
 17900  01327E  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17901  013280  0102               	movlb	2	; () banked
 17902  013282  6F84               	movwf	sprintf@wh& (0+255),b
 17903  013284  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17904  013286  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17905  013288  0E74               	movlw	low STR_95
 17906  01328A  6F86               	movwf	sprintf@f& (0+255),b
 17907  01328C  0EFF               	movlw	high STR_95
 17908  01328E  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17909  013290  C0B9  F288         	movff	_adc_calculations,?_sprintf+4
 17910  013294  C0BA  F289         	movff	_adc_calculations+1,?_sprintf+5
 17911  013298  C0BB  F28A         	movff	_adc_calculations+2,?_sprintf+6
 17912  01329C  C0BC  F28B         	movff	_adc_calculations+3,?_sprintf+7
 17913  0132A0  EC6D  F0D9         	call	_sprintf	;wreg free
 17914                           
 17915                           ;oled.c: 475: strcpy(OLED_RAM_Buffer.line2, " ");
 17916  0132A4  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17917  0132A6  0102               	movlb	2	; () banked
 17918  0132A8  6F03               	movwf	strcpy@to& (0+255),b
 17919  0132AA  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17920  0132AC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17921  0132AE  0EEE               	movlw	low (STR_54+10)
 17922  0132B0  6F05               	movwf	strcpy@from& (0+255),b
 17923  0132B2  0EFD               	movlw	high (STR_54+10)
 17924  0132B4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17925  0132B6  EC49  F0D9         	call	_strcpy	;wreg free
 17926                           
 17927                           ;oled.c: 476: strcpy(OLED_RAM_Buffer.line3, " ");
 17928  0132BA  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17929  0132BC  0102               	movlb	2	; () banked
 17930  0132BE  6F03               	movwf	strcpy@to& (0+255),b
 17931  0132C0  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17932  0132C2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17933  0132C4  0EEE               	movlw	low (STR_54+10)
 17934  0132C6  6F05               	movwf	strcpy@from& (0+255),b
 17935  0132C8  0EFD               	movlw	high (STR_54+10)
 17936  0132CA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17937  0132CC  EC49  F0D9         	call	_strcpy	;wreg free
 17938                           
 17939                           ;oled.c: 478: OLED_UpdateFromRAMBuffer();
 17940  0132D0  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17941                           
 17942                           ;oled.c: 479: OLED_Frame = OLED_Input_Power;
 17943  0132D4  0E09               	movlw	9
 17944  0132D6  D6DE               	goto	L4
 17945  0132D8                     l21542:
 17946                           
 17947                           ; BSR set to: 2
 17948                           ;oled.c: 486: OLED_update_flag = 0;
 17949  0132D8  0E00               	movlw	0
 17950  0132DA  6FB6               	movwf	_OLED_update_flag& (0+255),b
 17951                           
 17952                           ; BSR set to: 2
 17953                           ;oled.c: 488: strcpy(OLED_RAM_Buffer.line0, "Output Power:");
 17954  0132DC  0EBA               	movlw	low _OLED_RAM_Buffer
 17955  0132DE  6F03               	movwf	strcpy@to& (0+255),b
 17956  0132E0  0E02               	movlw	high _OLED_RAM_Buffer
 17957  0132E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17958  0132E4  0EDE               	movlw	low STR_98
 17959  0132E6  6F05               	movwf	strcpy@from& (0+255),b
 17960  0132E8  0EFC               	movlw	high STR_98
 17961  0132EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17962  0132EC  EC49  F0D9         	call	_strcpy	;wreg free
 17963                           
 17964                           ;oled.c: 489: sprintf(OLED_RAM_Buffer.line1, "%+.3fW", adc_calculations.output_power);
 17965  0132F0  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 17966  0132F2  0102               	movlb	2	; () banked
 17967  0132F4  6F84               	movwf	sprintf@wh& (0+255),b
 17968  0132F6  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 17969  0132F8  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 17970  0132FA  0E74               	movlw	low STR_95
 17971  0132FC  6F86               	movwf	sprintf@f& (0+255),b
 17972  0132FE  0EFF               	movlw	high STR_95
 17973  013300  6F87               	movwf	(sprintf@f+1)& (0+255),b
 17974  013302  C0BD  F288         	movff	_adc_calculations+4,?_sprintf+4
 17975  013306  C0BE  F289         	movff	_adc_calculations+5,?_sprintf+5
 17976  01330A  C0BF  F28A         	movff	_adc_calculations+6,?_sprintf+6
 17977  01330E  C0C0  F28B         	movff	_adc_calculations+7,?_sprintf+7
 17978  013312  EC6D  F0D9         	call	_sprintf	;wreg free
 17979                           
 17980                           ;oled.c: 490: strcpy(OLED_RAM_Buffer.line2, " ");
 17981  013316  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 17982  013318  0102               	movlb	2	; () banked
 17983  01331A  6F03               	movwf	strcpy@to& (0+255),b
 17984  01331C  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 17985  01331E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17986  013320  0EEE               	movlw	low (STR_54+10)
 17987  013322  6F05               	movwf	strcpy@from& (0+255),b
 17988  013324  0EFD               	movlw	high (STR_54+10)
 17989  013326  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17990  013328  EC49  F0D9         	call	_strcpy	;wreg free
 17991                           
 17992                           ;oled.c: 491: strcpy(OLED_RAM_Buffer.line3, " ");
 17993  01332C  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 17994  01332E  0102               	movlb	2	; () banked
 17995  013330  6F03               	movwf	strcpy@to& (0+255),b
 17996  013332  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 17997  013334  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17998  013336  0EEE               	movlw	low (STR_54+10)
 17999  013338  6F05               	movwf	strcpy@from& (0+255),b
 18000  01333A  0EFD               	movlw	high (STR_54+10)
 18001  01333C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18002  01333E  EC49  F0D9         	call	_strcpy	;wreg free
 18003                           
 18004                           ;oled.c: 493: OLED_UpdateFromRAMBuffer();
 18005  013342  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18006                           
 18007                           ;oled.c: 494: OLED_Frame = OLED_Output_Power;
 18008  013346  0E0A               	movlw	10
 18009  013348  D6A5               	goto	L4
 18010  01334A                     l21558:
 18011                           
 18012                           ; BSR set to: 2
 18013                           ;oled.c: 501: OLED_update_flag = 0;
 18014  01334A  0E00               	movlw	0
 18015  01334C  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18016                           
 18017                           ; BSR set to: 2
 18018                           ;oled.c: 503: strcpy(OLED_RAM_Buffer.line0, "Efficiency:");
 18019  01334E  0EBA               	movlw	low _OLED_RAM_Buffer
 18020  013350  6F03               	movwf	strcpy@to& (0+255),b
 18021  013352  0E02               	movlw	high _OLED_RAM_Buffer
 18022  013354  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18023  013356  0ED8               	movlw	low STR_102
 18024  013358  6F05               	movwf	strcpy@from& (0+255),b
 18025  01335A  0EFD               	movlw	high STR_102
 18026  01335C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18027  01335E  EC49  F0D9         	call	_strcpy	;wreg free
 18028                           
 18029                           ;oled.c: 504: sprintf(OLED_RAM_Buffer.line1, "%+.3f%%", adc_calculations.efficiency);
 18030  013362  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18031  013364  0102               	movlb	2	; () banked
 18032  013366  6F84               	movwf	sprintf@wh& (0+255),b
 18033  013368  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18034  01336A  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18035  01336C  0E48               	movlw	low STR_103
 18036  01336E  6F86               	movwf	sprintf@f& (0+255),b
 18037  013370  0EFF               	movlw	high STR_103
 18038  013372  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18039  013374  C0C1  F288         	movff	_adc_calculations+8,?_sprintf+4
 18040  013378  C0C2  F289         	movff	_adc_calculations+9,?_sprintf+5
 18041  01337C  C0C3  F28A         	movff	_adc_calculations+10,?_sprintf+6
 18042  013380  C0C4  F28B         	movff	_adc_calculations+11,?_sprintf+7
 18043  013384  EC6D  F0D9         	call	_sprintf	;wreg free
 18044                           
 18045                           ;oled.c: 505: strcpy(OLED_RAM_Buffer.line2, " ");
 18046  013388  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18047  01338A  0102               	movlb	2	; () banked
 18048  01338C  6F03               	movwf	strcpy@to& (0+255),b
 18049  01338E  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18050  013390  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18051  013392  0EEE               	movlw	low (STR_54+10)
 18052  013394  6F05               	movwf	strcpy@from& (0+255),b
 18053  013396  0EFD               	movlw	high (STR_54+10)
 18054  013398  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18055  01339A  EC49  F0D9         	call	_strcpy	;wreg free
 18056                           
 18057                           ;oled.c: 506: strcpy(OLED_RAM_Buffer.line3, " ");
 18058  01339E  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18059  0133A0  0102               	movlb	2	; () banked
 18060  0133A2  6F03               	movwf	strcpy@to& (0+255),b
 18061  0133A4  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18062  0133A6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18063  0133A8  0EEE               	movlw	low (STR_54+10)
 18064  0133AA  6F05               	movwf	strcpy@from& (0+255),b
 18065  0133AC  0EFD               	movlw	high (STR_54+10)
 18066  0133AE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18067  0133B0  EC49  F0D9         	call	_strcpy	;wreg free
 18068                           
 18069                           ;oled.c: 508: OLED_UpdateFromRAMBuffer();
 18070  0133B4  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18071                           
 18072                           ;oled.c: 509: OLED_Frame = OLED_Efficiency;
 18073  0133B8  0E0B               	movlw	11
 18074  0133BA  D66C               	goto	L4
 18075  0133BC                     l21574:
 18076                           
 18077                           ; BSR set to: 2
 18078                           ;oled.c: 516: OLED_update_flag = 0;
 18079  0133BC  0E00               	movlw	0
 18080  0133BE  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18081                           
 18082                           ; BSR set to: 2
 18083                           ;oled.c: 518: strcpy(OLED_RAM_Buffer.line0, "QI Temp:");
 18084  0133C0  0EBA               	movlw	low _OLED_RAM_Buffer
 18085  0133C2  6F03               	movwf	strcpy@to& (0+255),b
 18086  0133C4  0E02               	movlw	high _OLED_RAM_Buffer
 18087  0133C6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18088  0133C8  0E12               	movlw	low STR_106
 18089  0133CA  6F05               	movwf	strcpy@from& (0+255),b
 18090  0133CC  0EFF               	movlw	high STR_106
 18091  0133CE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18092  0133D0  EC49  F0D9         	call	_strcpy	;wreg free
 18093                           
 18094                           ;oled.c: 519: sprintf(OLED_RAM_Buffer.line1, "%+.3fC", LM73_temp_results.QI_temp_result)
      +                          ;
 18095  0133D4  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18096  0133D6  0102               	movlb	2	; () banked
 18097  0133D8  6F84               	movwf	sprintf@wh& (0+255),b
 18098  0133DA  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18099  0133DC  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18100  0133DE  0E66               	movlw	low STR_107
 18101  0133E0  6F86               	movwf	sprintf@f& (0+255),b
 18102  0133E2  0EFF               	movlw	high STR_107
 18103  0133E4  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18104  0133E6  C19C  F288         	movff	_LM73_temp_results,?_sprintf+4
 18105  0133EA  C19D  F289         	movff	_LM73_temp_results+1,?_sprintf+5
 18106  0133EE  C19E  F28A         	movff	_LM73_temp_results+2,?_sprintf+6
 18107  0133F2  C19F  F28B         	movff	_LM73_temp_results+3,?_sprintf+7
 18108  0133F6  EC6D  F0D9         	call	_sprintf	;wreg free
 18109                           
 18110                           ;oled.c: 520: strcpy(OLED_RAM_Buffer.line2, " ");
 18111  0133FA  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18112  0133FC  0102               	movlb	2	; () banked
 18113  0133FE  6F03               	movwf	strcpy@to& (0+255),b
 18114  013400  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18115  013402  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18116  013404  0EEE               	movlw	low (STR_54+10)
 18117  013406  6F05               	movwf	strcpy@from& (0+255),b
 18118  013408  0EFD               	movlw	high (STR_54+10)
 18119  01340A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18120  01340C  EC49  F0D9         	call	_strcpy	;wreg free
 18121                           
 18122                           ;oled.c: 521: strcpy(OLED_RAM_Buffer.line3, " ");
 18123  013410  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18124  013412  0102               	movlb	2	; () banked
 18125  013414  6F03               	movwf	strcpy@to& (0+255),b
 18126  013416  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18127  013418  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18128  01341A  0EEE               	movlw	low (STR_54+10)
 18129  01341C  6F05               	movwf	strcpy@from& (0+255),b
 18130  01341E  0EFD               	movlw	high (STR_54+10)
 18131  013420  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18132  013422  EC49  F0D9         	call	_strcpy	;wreg free
 18133                           
 18134                           ;oled.c: 523: OLED_UpdateFromRAMBuffer();
 18135  013426  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18136                           
 18137                           ;oled.c: 524: OLED_Frame = OLED_QI_Temp;
 18138  01342A  0E0C               	movlw	12
 18139  01342C  D633               	goto	L4
 18140  01342E                     l21590:
 18141                           
 18142                           ; BSR set to: 2
 18143                           ;oled.c: 531: OLED_update_flag = 0;
 18144  01342E  0E00               	movlw	0
 18145  013430  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18146                           
 18147                           ; BSR set to: 2
 18148                           ;oled.c: 533: strcpy(OLED_RAM_Buffer.line0, "+5V Temp:");
 18149  013432  0EBA               	movlw	low _OLED_RAM_Buffer
 18150  013434  6F03               	movwf	strcpy@to& (0+255),b
 18151  013436  0E02               	movlw	high _OLED_RAM_Buffer
 18152  013438  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18153  01343A  0EAE               	movlw	low STR_110
 18154  01343C  6F05               	movwf	strcpy@from& (0+255),b
 18155  01343E  0EFE               	movlw	high STR_110
 18156  013440  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18157  013442  EC49  F0D9         	call	_strcpy	;wreg free
 18158                           
 18159                           ;oled.c: 534: sprintf(OLED_RAM_Buffer.line1, "%+.3fC", LM73_temp_results.POS5_temp_resul
      +                          t);
 18160  013446  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18161  013448  0102               	movlb	2	; () banked
 18162  01344A  6F84               	movwf	sprintf@wh& (0+255),b
 18163  01344C  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18164  01344E  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18165  013450  0E66               	movlw	low STR_107
 18166  013452  6F86               	movwf	sprintf@f& (0+255),b
 18167  013454  0EFF               	movlw	high STR_107
 18168  013456  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18169  013458  C1A0  F288         	movff	_LM73_temp_results+4,?_sprintf+4
 18170  01345C  C1A1  F289         	movff	_LM73_temp_results+5,?_sprintf+5
 18171  013460  C1A2  F28A         	movff	_LM73_temp_results+6,?_sprintf+6
 18172  013464  C1A3  F28B         	movff	_LM73_temp_results+7,?_sprintf+7
 18173  013468  EC6D  F0D9         	call	_sprintf	;wreg free
 18174                           
 18175                           ;oled.c: 535: strcpy(OLED_RAM_Buffer.line2, " ");
 18176  01346C  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18177  01346E  0102               	movlb	2	; () banked
 18178  013470  6F03               	movwf	strcpy@to& (0+255),b
 18179  013472  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18180  013474  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18181  013476  0EEE               	movlw	low (STR_54+10)
 18182  013478  6F05               	movwf	strcpy@from& (0+255),b
 18183  01347A  0EFD               	movlw	high (STR_54+10)
 18184  01347C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18185  01347E  EC49  F0D9         	call	_strcpy	;wreg free
 18186                           
 18187                           ;oled.c: 536: strcpy(OLED_RAM_Buffer.line3, " ");
 18188  013482  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18189  013484  0102               	movlb	2	; () banked
 18190  013486  6F03               	movwf	strcpy@to& (0+255),b
 18191  013488  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18192  01348A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18193  01348C  0EEE               	movlw	low (STR_54+10)
 18194  01348E  6F05               	movwf	strcpy@from& (0+255),b
 18195  013490  0EFD               	movlw	high (STR_54+10)
 18196  013492  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18197  013494  EC49  F0D9         	call	_strcpy	;wreg free
 18198                           
 18199                           ;oled.c: 538: OLED_UpdateFromRAMBuffer();
 18200  013498  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18201                           
 18202                           ;oled.c: 539: OLED_Frame = OLED_POS5_Temp;
 18203  01349C  0E0D               	movlw	13
 18204  01349E  D5FA               	goto	L4
 18205  0134A0                     l21606:
 18206                           
 18207                           ; BSR set to: 2
 18208                           ;oled.c: 546: OLED_update_flag = 0;
 18209  0134A0  0E00               	movlw	0
 18210  0134A2  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18211                           
 18212                           ; BSR set to: 2
 18213                           ;oled.c: 548: strcpy(OLED_RAM_Buffer.line0, "Ambient Temp:");
 18214  0134A4  0EBA               	movlw	low _OLED_RAM_Buffer
 18215  0134A6  6F03               	movwf	strcpy@to& (0+255),b
 18216  0134A8  0E02               	movlw	high _OLED_RAM_Buffer
 18217  0134AA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18218  0134AC  0EC2               	movlw	low STR_114
 18219  0134AE  6F05               	movwf	strcpy@from& (0+255),b
 18220  0134B0  0EFC               	movlw	high STR_114
 18221  0134B2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18222  0134B4  EC49  F0D9         	call	_strcpy	;wreg free
 18223                           
 18224                           ;oled.c: 549: sprintf(OLED_RAM_Buffer.line1, "%+.3fC", LM73_temp_results.Ambient_temp_re
      +                          sult);
 18225  0134B8  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18226  0134BA  0102               	movlb	2	; () banked
 18227  0134BC  6F84               	movwf	sprintf@wh& (0+255),b
 18228  0134BE  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18229  0134C0  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18230  0134C2  0E66               	movlw	low STR_107
 18231  0134C4  6F86               	movwf	sprintf@f& (0+255),b
 18232  0134C6  0EFF               	movlw	high STR_107
 18233  0134C8  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18234  0134CA  C1A4  F288         	movff	_LM73_temp_results+8,?_sprintf+4
 18235  0134CE  C1A5  F289         	movff	_LM73_temp_results+9,?_sprintf+5
 18236  0134D2  C1A6  F28A         	movff	_LM73_temp_results+10,?_sprintf+6
 18237  0134D6  C1A7  F28B         	movff	_LM73_temp_results+11,?_sprintf+7
 18238  0134DA  EC6D  F0D9         	call	_sprintf	;wreg free
 18239                           
 18240                           ;oled.c: 550: strcpy(OLED_RAM_Buffer.line2, " ");
 18241  0134DE  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18242  0134E0  0102               	movlb	2	; () banked
 18243  0134E2  6F03               	movwf	strcpy@to& (0+255),b
 18244  0134E4  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18245  0134E6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18246  0134E8  0EEE               	movlw	low (STR_54+10)
 18247  0134EA  6F05               	movwf	strcpy@from& (0+255),b
 18248  0134EC  0EFD               	movlw	high (STR_54+10)
 18249  0134EE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18250  0134F0  EC49  F0D9         	call	_strcpy	;wreg free
 18251                           
 18252                           ;oled.c: 551: strcpy(OLED_RAM_Buffer.line3, " ");
 18253  0134F4  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18254  0134F6  0102               	movlb	2	; () banked
 18255  0134F8  6F03               	movwf	strcpy@to& (0+255),b
 18256  0134FA  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18257  0134FC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18258  0134FE  0EEE               	movlw	low (STR_54+10)
 18259  013500  6F05               	movwf	strcpy@from& (0+255),b
 18260  013502  0EFD               	movlw	high (STR_54+10)
 18261  013504  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18262  013506  EC49  F0D9         	call	_strcpy	;wreg free
 18263                           
 18264                           ;oled.c: 553: OLED_UpdateFromRAMBuffer();
 18265  01350A  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18266                           
 18267                           ;oled.c: 554: OLED_Frame = OLED_Ambient_Temp;
 18268  01350E  0E0E               	movlw	14
 18269  013510  D5C1               	goto	L4
 18270  013512                     l21622:
 18271                           
 18272                           ; BSR set to: 2
 18273                           ;oled.c: 561: OLED_update_flag = 0;
 18274  013512  0E00               	movlw	0
 18275  013514  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18276                           
 18277                           ; BSR set to: 2
 18278                           ;oled.c: 563: strcpy(OLED_RAM_Buffer.line0, "Micro Temp:");
 18279  013516  0EBA               	movlw	low _OLED_RAM_Buffer
 18280  013518  6F03               	movwf	strcpy@to& (0+255),b
 18281  01351A  0E02               	movlw	high _OLED_RAM_Buffer
 18282  01351C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18283  01351E  0EC0               	movlw	low STR_118
 18284  013520  6F05               	movwf	strcpy@from& (0+255),b
 18285  013522  0EFD               	movlw	high STR_118
 18286  013524  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18287  013526  EC49  F0D9         	call	_strcpy	;wreg free
 18288                           
 18289                           ;oled.c: 564: sprintf(OLED_RAM_Buffer.line1, "%+.3fC", adc_results.die_temp_adc_result);
 18290  01352A  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18291  01352C  0102               	movlb	2	; () banked
 18292  01352E  6F84               	movwf	sprintf@wh& (0+255),b
 18293  013530  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18294  013532  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18295  013534  0E66               	movlw	low STR_107
 18296  013536  6F86               	movwf	sprintf@f& (0+255),b
 18297  013538  0EFF               	movlw	high STR_107
 18298  01353A  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18299  01353C  C0F6  F288         	movff	_adc_results+24,?_sprintf+4
 18300  013540  C0F7  F289         	movff	_adc_results+25,?_sprintf+5
 18301  013544  C0F8  F28A         	movff	_adc_results+26,?_sprintf+6
 18302  013548  C0F9  F28B         	movff	_adc_results+27,?_sprintf+7
 18303  01354C  EC6D  F0D9         	call	_sprintf	;wreg free
 18304                           
 18305                           ;oled.c: 565: strcpy(OLED_RAM_Buffer.line2, " ");
 18306  013550  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18307  013552  0102               	movlb	2	; () banked
 18308  013554  6F03               	movwf	strcpy@to& (0+255),b
 18309  013556  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18310  013558  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18311  01355A  0EEE               	movlw	low (STR_54+10)
 18312  01355C  6F05               	movwf	strcpy@from& (0+255),b
 18313  01355E  0EFD               	movlw	high (STR_54+10)
 18314  013560  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18315  013562  EC49  F0D9         	call	_strcpy	;wreg free
 18316                           
 18317                           ;oled.c: 566: strcpy(OLED_RAM_Buffer.line3, " ");
 18318  013566  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18319  013568  0102               	movlb	2	; () banked
 18320  01356A  6F03               	movwf	strcpy@to& (0+255),b
 18321  01356C  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18322  01356E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18323  013570  0EEE               	movlw	low (STR_54+10)
 18324  013572  6F05               	movwf	strcpy@from& (0+255),b
 18325  013574  0EFD               	movlw	high (STR_54+10)
 18326  013576  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18327  013578  EC49  F0D9         	call	_strcpy	;wreg free
 18328                           
 18329                           ;oled.c: 568: OLED_UpdateFromRAMBuffer();
 18330  01357C  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18331                           
 18332                           ;oled.c: 569: OLED_Frame = OLED_Micro_Temp;
 18333  013580  0E0F               	movlw	15
 18334  013582  D588               	goto	L4
 18335  013584                     l21638:
 18336                           
 18337                           ; BSR set to: 2
 18338                           ;oled.c: 576: OLED_update_flag = 0;
 18339  013584  0E00               	movlw	0
 18340  013586  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18341                           
 18342                           ; BSR set to: 2
 18343                           ;oled.c: 578: strcpy(OLED_RAM_Buffer.line0, "+5V Sw. Freq:");
 18344  013588  0EBA               	movlw	low _OLED_RAM_Buffer
 18345  01358A  6F03               	movwf	strcpy@to& (0+255),b
 18346  01358C  0E02               	movlw	high _OLED_RAM_Buffer
 18347  01358E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18348  013590  0ED0               	movlw	low STR_122
 18349  013592  6F05               	movwf	strcpy@from& (0+255),b
 18350  013594  0EFC               	movlw	high STR_122
 18351  013596  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18352  013598  EC49  F0D9         	call	_strcpy	;wreg free
 18353                           
 18354                           ;oled.c: 579: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 18355  01359C  0101               	movlb	1	; () banked
 18356  01359E  5195               	movf	_nxq_charge_state& (0+255),w,b
 18357  0135A0  B4D8               	btfsc	status,2,c
 18358  0135A2  D004               	goto	u27430
 18359                           
 18360                           ; BSR set to: 1
 18361  0135A4  0E03               	movlw	3
 18362  0135A6  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 18363  0135A8  A4D8               	btfss	status,2,c
 18364  0135AA  D00C               	goto	l21648
 18365  0135AC                     u27430:
 18366                           
 18367                           ; BSR set to: 1
 18368  0135AC  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18369  0135AE  0102               	movlb	2	; () banked
 18370  0135B0  6F03               	movwf	strcpy@to& (0+255),b
 18371  0135B2  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18372  0135B4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18373  0135B6  0E40               	movlw	low STR_123
 18374  0135B8  6F05               	movwf	strcpy@from& (0+255),b
 18375  0135BA  0EFE               	movlw	high STR_123
 18376  0135BC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18377  0135BE  EC49  F0D9         	call	_strcpy	;wreg free
 18378  0135C2  D00B               	goto	l1924
 18379  0135C4                     l21648:
 18380                           
 18381                           ; BSR set to: 1
 18382                           ;oled.c: 580: else strcpy(OLED_RAM_Buffer.line1, "2.5MHz");
 18383  0135C4  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18384  0135C6  0102               	movlb	2	; () banked
 18385  0135C8  6F03               	movwf	strcpy@to& (0+255),b
 18386  0135CA  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18387  0135CC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18388  0135CE  0E82               	movlw	low STR_124
 18389  0135D0  6F05               	movwf	strcpy@from& (0+255),b
 18390  0135D2  0EFF               	movlw	high STR_124
 18391  0135D4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18392  0135D6  EC49  F0D9         	call	_strcpy	;wreg free
 18393  0135DA                     l1924:
 18394                           
 18395                           ;oled.c: 581: strcpy(OLED_RAM_Buffer.line2, " ");
 18396  0135DA  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18397  0135DC  0102               	movlb	2	; () banked
 18398  0135DE  6F03               	movwf	strcpy@to& (0+255),b
 18399  0135E0  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18400  0135E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18401  0135E4  0EEE               	movlw	low (STR_54+10)
 18402  0135E6  6F05               	movwf	strcpy@from& (0+255),b
 18403  0135E8  0EFD               	movlw	high (STR_54+10)
 18404  0135EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18405  0135EC  EC49  F0D9         	call	_strcpy	;wreg free
 18406                           
 18407                           ;oled.c: 582: strcpy(OLED_RAM_Buffer.line3, " ");
 18408  0135F0  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18409  0135F2  0102               	movlb	2	; () banked
 18410  0135F4  6F03               	movwf	strcpy@to& (0+255),b
 18411  0135F6  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18412  0135F8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18413  0135FA  0EEE               	movlw	low (STR_54+10)
 18414  0135FC  6F05               	movwf	strcpy@from& (0+255),b
 18415  0135FE  0EFD               	movlw	high (STR_54+10)
 18416  013600  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18417  013602  EC49  F0D9         	call	_strcpy	;wreg free
 18418                           
 18419                           ;oled.c: 584: OLED_UpdateFromRAMBuffer();
 18420  013606  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18421                           
 18422                           ;oled.c: 585: OLED_Frame = OLED_POS5_FSW;
 18423  01360A  0E10               	movlw	16
 18424  01360C  D543               	goto	L4
 18425  01360E                     l21656:
 18426                           
 18427                           ; BSR set to: 2
 18428                           ;oled.c: 592: OLED_update_flag = 0;
 18429  01360E  0E00               	movlw	0
 18430  013610  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18431                           
 18432                           ; BSR set to: 2
 18433                           ;oled.c: 594: strcpy(OLED_RAM_Buffer.line0, "QI Sw. Freq:");
 18434  013612  0EBA               	movlw	low _OLED_RAM_Buffer
 18435  013614  6F03               	movwf	strcpy@to& (0+255),b
 18436  013616  0E02               	movlw	high _OLED_RAM_Buffer
 18437  013618  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18438  01361A  0E4C               	movlw	low STR_127
 18439  01361C  6F05               	movwf	strcpy@from& (0+255),b
 18440  01361E  0EFD               	movlw	high STR_127
 18441  013620  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18442  013622  EC49  F0D9         	call	_strcpy	;wreg free
 18443                           
 18444                           ;oled.c: 595: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 18445  013626  0101               	movlb	1	; () banked
 18446  013628  5195               	movf	_nxq_charge_state& (0+255),w,b
 18447  01362A  B4D8               	btfsc	status,2,c
 18448  01362C  D004               	goto	u27450
 18449                           
 18450                           ; BSR set to: 1
 18451  01362E  0E03               	movlw	3
 18452  013630  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 18453  013632  A4D8               	btfss	status,2,c
 18454  013634  D00C               	goto	l21666
 18455  013636                     u27450:
 18456                           
 18457                           ; BSR set to: 1
 18458  013636  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18459  013638  0102               	movlb	2	; () banked
 18460  01363A  6F03               	movwf	strcpy@to& (0+255),b
 18461  01363C  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18462  01363E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18463  013640  0E40               	movlw	low STR_123
 18464  013642  6F05               	movwf	strcpy@from& (0+255),b
 18465  013644  0EFE               	movlw	high STR_123
 18466  013646  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18467  013648  EC49  F0D9         	call	_strcpy	;wreg free
 18468  01364C  D025               	goto	l21668
 18469  01364E                     l21666:
 18470                           
 18471                           ; BSR set to: 1
 18472                           ;oled.c: 596: else sprintf(OLED_RAM_Buffer.line1, "%+.3fkHz", freq_meas_results.QI_Freq_
      +                          Meas / 1000.0);
 18473  01364E  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18474  013650  0102               	movlb	2	; () banked
 18475  013652  6F84               	movwf	sprintf@wh& (0+255),b
 18476  013654  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18477  013656  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18478  013658  0E2D               	movlw	low STR_129
 18479  01365A  6F86               	movwf	sprintf@f& (0+255),b
 18480  01365C  0EFF               	movlw	high STR_129
 18481  01365E  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18482  013660  C168  F200         	movff	_freq_meas_results,___fldiv@b
 18483  013664  C169  F201         	movff	_freq_meas_results+1,___fldiv@b+1
 18484  013668  C16A  F202         	movff	_freq_meas_results+2,___fldiv@b+2
 18485  01366C  C16B  F203         	movff	_freq_meas_results+3,___fldiv@b+3
 18486  013670  0E00               	movlw	0
 18487  013672  6F04               	movwf	___fldiv@a& (0+255),b
 18488  013674  0E00               	movlw	0
 18489  013676  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 18490  013678  0E7A               	movlw	122
 18491  01367A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 18492  01367C  0E44               	movlw	68
 18493  01367E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 18494  013680  EC40  F0BE         	call	___fldiv	;wreg free
 18495  013684  C200  F288         	movff	?___fldiv,?_sprintf+4
 18496  013688  C201  F289         	movff	?___fldiv+1,?_sprintf+5
 18497  01368C  C202  F28A         	movff	?___fldiv+2,?_sprintf+6
 18498  013690  C203  F28B         	movff	?___fldiv+3,?_sprintf+7
 18499  013694  EC6D  F0D9         	call	_sprintf	;wreg free
 18500  013698                     l21668:
 18501                           
 18502                           ;oled.c: 597: strcpy(OLED_RAM_Buffer.line2, " ");
 18503  013698  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18504  01369A  0102               	movlb	2	; () banked
 18505  01369C  6F03               	movwf	strcpy@to& (0+255),b
 18506  01369E  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18507  0136A0  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18508  0136A2  0EEE               	movlw	low (STR_54+10)
 18509  0136A4  6F05               	movwf	strcpy@from& (0+255),b
 18510  0136A6  0EFD               	movlw	high (STR_54+10)
 18511  0136A8  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18512  0136AA  EC49  F0D9         	call	_strcpy	;wreg free
 18513                           
 18514                           ;oled.c: 598: strcpy(OLED_RAM_Buffer.line3, " ");
 18515  0136AE  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18516  0136B0  0102               	movlb	2	; () banked
 18517  0136B2  6F03               	movwf	strcpy@to& (0+255),b
 18518  0136B4  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18519  0136B6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18520  0136B8  0EEE               	movlw	low (STR_54+10)
 18521  0136BA  6F05               	movwf	strcpy@from& (0+255),b
 18522  0136BC  0EFD               	movlw	high (STR_54+10)
 18523  0136BE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18524  0136C0  EC49  F0D9         	call	_strcpy	;wreg free
 18525                           
 18526                           ;oled.c: 600: OLED_UpdateFromRAMBuffer();
 18527  0136C4  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18528                           
 18529                           ;oled.c: 601: OLED_Frame = OLED_QI_FSW;
 18530  0136C8  0E11               	movlw	17
 18531  0136CA  D4E4               	goto	L4
 18532  0136CC                     l21678:
 18533                           
 18534                           ; BSR set to: 2
 18535                           ;oled.c: 609: OLED_update_flag = 0;
 18536  0136CC  0E00               	movlw	0
 18537  0136CE  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18538                           
 18539                           ; BSR set to: 2
 18540                           ;oled.c: 611: strcpy(OLED_RAM_Buffer.line0, "Dev. On Time:");
 18541  0136D0  0EBA               	movlw	low _OLED_RAM_Buffer
 18542  0136D2  6F03               	movwf	strcpy@to& (0+255),b
 18543  0136D4  0E02               	movlw	high _OLED_RAM_Buffer
 18544  0136D6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18545  0136D8  0EB4               	movlw	low STR_132
 18546  0136DA  6F05               	movwf	strcpy@from& (0+255),b
 18547  0136DC  0EFC               	movlw	high STR_132
 18548  0136DE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18549  0136E0  EC49  F0D9         	call	_strcpy	;wreg free
 18550                           
 18551                           ;oled.c: 614: if (device_on_time >= 31536000) {
 18552  0136E4  0E80               	movlw	128
 18553  0136E6  0102               	movlb	2	; () banked
 18554  0136E8  5DAE               	subwf	_device_on_time& (0+255),w,b
 18555  0136EA  0E33               	movlw	51
 18556  0136EC  59AF               	subwfb	(_device_on_time+1)& (0+255),w,b
 18557  0136EE  0EE1               	movlw	225
 18558  0136F0  59B0               	subwfb	(_device_on_time+2)& (0+255),w,b
 18559  0136F2  0E01               	movlw	1
 18560  0136F4  59B1               	subwfb	(_device_on_time+3)& (0+255),w,b
 18561  0136F6  A0D8               	btfss	status,0,c
 18562  0136F8  D04E               	goto	l21686
 18563                           
 18564                           ; BSR set to: 2
 18565                           ;oled.c: 616: sprintf(OLED_RAM_Buffer.line1, "%u years", getYearsFromOnTime(device_on_ti
      +                          me));
 18566  0136FA  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18567  0136FC  6F84               	movwf	sprintf@wh& (0+255),b
 18568  0136FE  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18569  013700  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18570  013702  0E1B               	movlw	low STR_133
 18571  013704  6F86               	movwf	sprintf@f& (0+255),b
 18572  013706  0EFF               	movlw	high STR_133
 18573  013708  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18574  01370A  C2AE  F20D         	movff	_device_on_time,getYearsFromOnTime@input_seconds
 18575  01370E  C2AF  F20E         	movff	_device_on_time+1,getYearsFromOnTime@input_seconds+1
 18576  013712  C2B0  F20F         	movff	_device_on_time+2,getYearsFromOnTime@input_seconds+2
 18577  013716  C2B1  F210         	movff	_device_on_time+3,getYearsFromOnTime@input_seconds+3
 18578  01371A  EC04  F0DD         	call	_getYearsFromOnTime	;wreg free
 18579  01371E  0102               	movlb	2	; () banked
 18580  013720  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18581  013722  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18582  013724  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18583  013726  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18584  013728  EC6D  F0D9         	call	_sprintf	;wreg free
 18585                           
 18586                           ;oled.c: 617: sprintf(OLED_RAM_Buffer.line2, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 18587  01372C  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18588  01372E  0102               	movlb	2	; () banked
 18589  013730  6F84               	movwf	sprintf@wh& (0+255),b
 18590  013732  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18591  013734  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18592  013736  0E50               	movlw	low STR_134
 18593  013738  6F86               	movwf	sprintf@f& (0+255),b
 18594  01373A  0EFF               	movlw	high STR_134
 18595  01373C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18596  01373E  C2AE  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 18597  013742  C2AF  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 18598  013746  C2B0  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 18599  01374A  C2B1  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 18600  01374E  EC5E  F0D3         	call	_getDaysFromOnTime	;wreg free
 18601  013752  0102               	movlb	2	; () banked
 18602  013754  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18603  013756  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18604  013758  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18605  01375A  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18606  01375C  EC6D  F0D9         	call	_sprintf	;wreg free
 18607                           
 18608                           ;oled.c: 618: sprintf(OLED_RAM_Buffer.line3, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 18609  013760  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18610  013762  0102               	movlb	2	; () banked
 18611  013764  6F84               	movwf	sprintf@wh& (0+255),b
 18612  013766  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18613  013768  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18614  01376A  0E24               	movlw	low STR_135
 18615  01376C  6F86               	movwf	sprintf@f& (0+255),b
 18616  01376E  0EFF               	movlw	high STR_135
 18617  013770  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18618  013772  C2AE  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 18619  013776  C2AF  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 18620  01377A  C2B0  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 18621  01377E  C2B1  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 18622  013782  ECFC  F0CD         	call	_getHoursFromOnTime	;wreg free
 18623  013786  0102               	movlb	2	; () banked
 18624  013788  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18625  01378A  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18626  01378C  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18627  01378E  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18628  013790  EC6D  F0D9         	call	_sprintf	;wreg free
 18629                           
 18630                           ;oled.c: 621: }
 18631  013794  D125               	goto	l21706
 18632  013796                     l21686:
 18633                           
 18634                           ; BSR set to: 2
 18635                           ;oled.c: 624: else if (device_on_time >= 86400) {
 18636  013796  51B1               	movf	(_device_on_time+3)& (0+255),w,b
 18637  013798  E108               	bnz	u27470
 18638  01379A  0E80               	movlw	128
 18639  01379C  5DAE               	subwf	_device_on_time& (0+255),w,b
 18640  01379E  0E51               	movlw	81
 18641  0137A0  59AF               	subwfb	(_device_on_time+1)& (0+255),w,b
 18642  0137A2  0E01               	movlw	1
 18643  0137A4  59B0               	subwfb	(_device_on_time+2)& (0+255),w,b
 18644  0137A6  A0D8               	btfss	status,0,c
 18645  0137A8  D04E               	goto	l21690
 18646  0137AA                     u27470:
 18647                           
 18648                           ; BSR set to: 2
 18649                           ;oled.c: 626: sprintf(OLED_RAM_Buffer.line1, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 18650  0137AA  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18651  0137AC  6F84               	movwf	sprintf@wh& (0+255),b
 18652  0137AE  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18653  0137B0  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18654  0137B2  0E50               	movlw	low STR_134
 18655  0137B4  6F86               	movwf	sprintf@f& (0+255),b
 18656  0137B6  0EFF               	movlw	high STR_134
 18657  0137B8  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18658  0137BA  C2AE  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 18659  0137BE  C2AF  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 18660  0137C2  C2B0  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 18661  0137C6  C2B1  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 18662  0137CA  EC5E  F0D3         	call	_getDaysFromOnTime	;wreg free
 18663  0137CE  0102               	movlb	2	; () banked
 18664  0137D0  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18665  0137D2  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18666  0137D4  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18667  0137D6  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18668  0137D8  EC6D  F0D9         	call	_sprintf	;wreg free
 18669                           
 18670                           ;oled.c: 627: sprintf(OLED_RAM_Buffer.line2, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 18671  0137DC  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18672  0137DE  0102               	movlb	2	; () banked
 18673  0137E0  6F84               	movwf	sprintf@wh& (0+255),b
 18674  0137E2  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18675  0137E4  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18676  0137E6  0E24               	movlw	low STR_135
 18677  0137E8  6F86               	movwf	sprintf@f& (0+255),b
 18678  0137EA  0EFF               	movlw	high STR_135
 18679  0137EC  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18680  0137EE  C2AE  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 18681  0137F2  C2AF  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 18682  0137F6  C2B0  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 18683  0137FA  C2B1  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 18684  0137FE  ECFC  F0CD         	call	_getHoursFromOnTime	;wreg free
 18685  013802  0102               	movlb	2	; () banked
 18686  013804  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18687  013806  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18688  013808  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18689  01380A  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18690  01380C  EC6D  F0D9         	call	_sprintf	;wreg free
 18691                           
 18692                           ;oled.c: 628: sprintf(OLED_RAM_Buffer.line3, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 18693  013810  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18694  013812  0102               	movlb	2	; () banked
 18695  013814  6F84               	movwf	sprintf@wh& (0+255),b
 18696  013816  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18697  013818  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18698  01381A  0E56               	movlw	low STR_138
 18699  01381C  6F86               	movwf	sprintf@f& (0+255),b
 18700  01381E  0EFE               	movlw	high STR_138
 18701  013820  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18702  013822  C2AE  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 18703  013826  C2AF  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 18704  01382A  C2B0  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 18705  01382E  C2B1  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 18706  013832  EC71  F0C8         	call	_getMinutesFromOnTime	;wreg free
 18707  013836  0102               	movlb	2	; () banked
 18708  013838  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18709  01383A  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18710  01383C  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18711  01383E  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18712  013840  EC6D  F0D9         	call	_sprintf	;wreg free
 18713                           
 18714                           ;oled.c: 630: }
 18715  013844  D0CD               	goto	l21706
 18716  013846                     l21690:
 18717                           
 18718                           ; BSR set to: 2
 18719                           ;oled.c: 633: else if (device_on_time >= 3600) {
 18720  013846  51B1               	movf	(_device_on_time+3)& (0+255),w,b
 18721  013848  11B0               	iorwf	(_device_on_time+2)& (0+255),w,b
 18722  01384A  E106               	bnz	u27480
 18723  01384C  0E10               	movlw	16
 18724  01384E  5DAE               	subwf	_device_on_time& (0+255),w,b
 18725  013850  0E0E               	movlw	14
 18726  013852  59AF               	subwfb	(_device_on_time+1)& (0+255),w,b
 18727  013854  A0D8               	btfss	status,0,c
 18728  013856  D04E               	goto	l21694
 18729  013858                     u27480:
 18730                           
 18731                           ; BSR set to: 2
 18732                           ;oled.c: 635: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 18733  013858  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18734  01385A  6F84               	movwf	sprintf@wh& (0+255),b
 18735  01385C  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18736  01385E  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18737  013860  0E24               	movlw	low STR_135
 18738  013862  6F86               	movwf	sprintf@f& (0+255),b
 18739  013864  0EFF               	movlw	high STR_135
 18740  013866  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18741  013868  C2AE  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 18742  01386C  C2AF  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 18743  013870  C2B0  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 18744  013874  C2B1  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 18745  013878  ECFC  F0CD         	call	_getHoursFromOnTime	;wreg free
 18746  01387C  0102               	movlb	2	; () banked
 18747  01387E  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18748  013880  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18749  013882  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18750  013884  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18751  013886  EC6D  F0D9         	call	_sprintf	;wreg free
 18752                           
 18753                           ;oled.c: 636: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 18754  01388A  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18755  01388C  0102               	movlb	2	; () banked
 18756  01388E  6F84               	movwf	sprintf@wh& (0+255),b
 18757  013890  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18758  013892  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18759  013894  0E56               	movlw	low STR_138
 18760  013896  6F86               	movwf	sprintf@f& (0+255),b
 18761  013898  0EFE               	movlw	high STR_138
 18762  01389A  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18763  01389C  C2AE  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 18764  0138A0  C2AF  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 18765  0138A4  C2B0  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 18766  0138A8  C2B1  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 18767  0138AC  EC71  F0C8         	call	_getMinutesFromOnTime	;wreg free
 18768  0138B0  0102               	movlb	2	; () banked
 18769  0138B2  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18770  0138B4  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18771  0138B6  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18772  0138B8  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18773  0138BA  EC6D  F0D9         	call	_sprintf	;wreg free
 18774                           
 18775                           ;oled.c: 637: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 18776  0138BE  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18777  0138C0  0102               	movlb	2	; () banked
 18778  0138C2  6F84               	movwf	sprintf@wh& (0+255),b
 18779  0138C4  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18780  0138C6  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18781  0138C8  0E4B               	movlw	low STR_141
 18782  0138CA  6F86               	movwf	sprintf@f& (0+255),b
 18783  0138CC  0EFE               	movlw	high STR_141
 18784  0138CE  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18785  0138D0  C2AE  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 18786  0138D4  C2AF  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 18787  0138D8  C2B0  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 18788  0138DC  C2B1  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 18789  0138E0  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 18790  0138E4  0102               	movlb	2	; () banked
 18791  0138E6  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18792  0138E8  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18793  0138EA  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18794  0138EC  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18795  0138EE  EC6D  F0D9         	call	_sprintf	;wreg free
 18796                           
 18797                           ;oled.c: 639: }
 18798  0138F2  D076               	goto	l21706
 18799  0138F4                     l21694:
 18800                           
 18801                           ; BSR set to: 2
 18802                           ;oled.c: 642: else if (device_on_time >= 60) {
 18803  0138F4  51B1               	movf	(_device_on_time+3)& (0+255),w,b
 18804  0138F6  11B0               	iorwf	(_device_on_time+2)& (0+255),w,b
 18805  0138F8  11AF               	iorwf	(_device_on_time+1)& (0+255),w,b
 18806  0138FA  E104               	bnz	u27490
 18807  0138FC  0E3C               	movlw	60
 18808  0138FE  5DAE               	subwf	_device_on_time& (0+255),w,b
 18809  013900  A0D8               	btfss	status,0,c
 18810  013902  D03F               	goto	l21700
 18811  013904                     u27490:
 18812                           
 18813                           ; BSR set to: 2
 18814                           ;oled.c: 644: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 18815  013904  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18816  013906  6F84               	movwf	sprintf@wh& (0+255),b
 18817  013908  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18818  01390A  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18819  01390C  0E56               	movlw	low STR_138
 18820  01390E  6F86               	movwf	sprintf@f& (0+255),b
 18821  013910  0EFE               	movlw	high STR_138
 18822  013912  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18823  013914  C2AE  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 18824  013918  C2AF  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 18825  01391C  C2B0  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 18826  013920  C2B1  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 18827  013924  EC71  F0C8         	call	_getMinutesFromOnTime	;wreg free
 18828  013928  0102               	movlb	2	; () banked
 18829  01392A  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18830  01392C  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18831  01392E  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18832  013930  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18833  013932  EC6D  F0D9         	call	_sprintf	;wreg free
 18834                           
 18835                           ;oled.c: 645: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 18836  013936  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18837  013938  0102               	movlb	2	; () banked
 18838  01393A  6F84               	movwf	sprintf@wh& (0+255),b
 18839  01393C  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18840  01393E  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18841  013940  0E4B               	movlw	low STR_141
 18842  013942  6F86               	movwf	sprintf@f& (0+255),b
 18843  013944  0EFE               	movlw	high STR_141
 18844  013946  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18845  013948  C2AE  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 18846  01394C  C2AF  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 18847  013950  C2B0  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 18848  013954  C2B1  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 18849  013958  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 18850  01395C  0102               	movlb	2	; () banked
 18851  01395E  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18852  013960  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18853  013962  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18854  013964  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18855  013966  EC6D  F0D9         	call	_sprintf	;wreg free
 18856                           
 18857                           ;oled.c: 646: strcpy(OLED_RAM_Buffer.line3, " ");
 18858  01396A  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18859  01396C  0102               	movlb	2	; () banked
 18860  01396E  6F03               	movwf	strcpy@to& (0+255),b
 18861  013970  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18862  013972  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18863  013974  0EEE               	movlw	low (STR_54+10)
 18864  013976  6F05               	movwf	strcpy@from& (0+255),b
 18865  013978  0EFD               	movlw	high (STR_54+10)
 18866  01397A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18867  01397C  EC49  F0D9         	call	_strcpy	;wreg free
 18868                           
 18869                           ;oled.c: 648: }
 18870  013980  D02F               	goto	l21706
 18871  013982                     l21700:
 18872                           
 18873                           ; BSR set to: 2
 18874                           ;oled.c: 651: else {;oled.c: 653: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(device_on_time));
 18875  013982  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18876  013984  6F84               	movwf	sprintf@wh& (0+255),b
 18877  013986  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18878  013988  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18879  01398A  0E4B               	movlw	low STR_141
 18880  01398C  6F86               	movwf	sprintf@f& (0+255),b
 18881  01398E  0EFE               	movlw	high STR_141
 18882  013990  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18883  013992  C2AE  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 18884  013996  C2AF  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 18885  01399A  C2B0  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 18886  01399E  C2B1  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 18887  0139A2  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 18888  0139A6  0102               	movlb	2	; () banked
 18889  0139A8  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18890  0139AA  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18891  0139AC  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18892  0139AE  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18893  0139B0  EC6D  F0D9         	call	_sprintf	;wreg free
 18894                           
 18895                           ;oled.c: 654: strcpy(OLED_RAM_Buffer.line2, " ");
 18896  0139B4  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18897  0139B6  0102               	movlb	2	; () banked
 18898  0139B8  6F03               	movwf	strcpy@to& (0+255),b
 18899  0139BA  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18900  0139BC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18901  0139BE  0EEE               	movlw	low (STR_54+10)
 18902  0139C0  6F05               	movwf	strcpy@from& (0+255),b
 18903  0139C2  0EFD               	movlw	high (STR_54+10)
 18904  0139C4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18905  0139C6  EC49  F0D9         	call	_strcpy	;wreg free
 18906                           
 18907                           ;oled.c: 655: strcpy(OLED_RAM_Buffer.line3, " ");
 18908  0139CA  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 18909  0139CC  0102               	movlb	2	; () banked
 18910  0139CE  6F03               	movwf	strcpy@to& (0+255),b
 18911  0139D0  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 18912  0139D2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18913  0139D4  0EEE               	movlw	low (STR_54+10)
 18914  0139D6  6F05               	movwf	strcpy@from& (0+255),b
 18915  0139D8  0EFD               	movlw	high (STR_54+10)
 18916  0139DA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18917  0139DC  EC49  F0D9         	call	_strcpy	;wreg free
 18918  0139E0                     l21706:
 18919                           
 18920                           ;oled.c: 657: };oled.c: 660: OLED_UpdateFromRAMBuffer();
 18921  0139E0  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18922                           
 18923                           ;oled.c: 661: OLED_Frame = OLED_Dev_On_Time;
 18924  0139E4  0E12               	movlw	18
 18925  0139E6  EF4A  F098         	goto	L4
 18926  0139EA                     l21712:
 18927                           
 18928                           ; BSR set to: 2
 18929                           ;oled.c: 668: OLED_update_flag = 0;
 18930  0139EA  0E00               	movlw	0
 18931  0139EC  6FB6               	movwf	_OLED_update_flag& (0+255),b
 18932                           
 18933                           ; BSR set to: 2
 18934                           ;oled.c: 670: strcpy(OLED_RAM_Buffer.line0, "QI Charge Time:");
 18935  0139EE  0EBA               	movlw	low _OLED_RAM_Buffer
 18936  0139F0  6F03               	movwf	strcpy@to& (0+255),b
 18937  0139F2  0E02               	movlw	high _OLED_RAM_Buffer
 18938  0139F4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18939  0139F6  0EC1               	movlw	low STR_148
 18940  0139F8  6F05               	movwf	strcpy@from& (0+255),b
 18941  0139FA  0EFB               	movlw	high STR_148
 18942  0139FC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18943  0139FE  EC49  F0D9         	call	_strcpy	;wreg free
 18944                           
 18945                           ;oled.c: 673: if (QI_charge_time >= 3600) {
 18946  013A02  0102               	movlb	2	; () banked
 18947  013A04  51B5               	movf	(_QI_charge_time+3)& (0+255),w,b
 18948  013A06  11B4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18949  013A08  E106               	bnz	u27500
 18950  013A0A  0E10               	movlw	16
 18951  013A0C  5DB2               	subwf	_QI_charge_time& (0+255),w,b
 18952  013A0E  0E0E               	movlw	14
 18953  013A10  59B3               	subwfb	(_QI_charge_time+1)& (0+255),w,b
 18954  013A12  A0D8               	btfss	status,0,c
 18955  013A14  D04E               	goto	l21720
 18956  013A16                     u27500:
 18957                           
 18958                           ; BSR set to: 2
 18959                           ;oled.c: 675: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(QI_charge_ti
      +                          me));
 18960  013A16  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 18961  013A18  6F84               	movwf	sprintf@wh& (0+255),b
 18962  013A1A  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 18963  013A1C  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18964  013A1E  0E24               	movlw	low STR_135
 18965  013A20  6F86               	movwf	sprintf@f& (0+255),b
 18966  013A22  0EFF               	movlw	high STR_135
 18967  013A24  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18968  013A26  C2B2  F20D         	movff	_QI_charge_time,getHoursFromOnTime@input_seconds
 18969  013A2A  C2B3  F20E         	movff	_QI_charge_time+1,getHoursFromOnTime@input_seconds+1
 18970  013A2E  C2B4  F20F         	movff	_QI_charge_time+2,getHoursFromOnTime@input_seconds+2
 18971  013A32  C2B5  F210         	movff	_QI_charge_time+3,getHoursFromOnTime@input_seconds+3
 18972  013A36  ECFC  F0CD         	call	_getHoursFromOnTime	;wreg free
 18973  013A3A  0102               	movlb	2	; () banked
 18974  013A3C  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18975  013A3E  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18976  013A40  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18977  013A42  6B89               	clrf	(?_sprintf+5)& (0+255),b
 18978  013A44  EC6D  F0D9         	call	_sprintf	;wreg free
 18979                           
 18980                           ;oled.c: 676: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 18981  013A48  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 18982  013A4A  0102               	movlb	2	; () banked
 18983  013A4C  6F84               	movwf	sprintf@wh& (0+255),b
 18984  013A4E  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 18985  013A50  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 18986  013A52  0E56               	movlw	low STR_138
 18987  013A54  6F86               	movwf	sprintf@f& (0+255),b
 18988  013A56  0EFE               	movlw	high STR_138
 18989  013A58  6F87               	movwf	(sprintf@f+1)& (0+255),b
 18990  013A5A  C2B2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 18991  013A5E  C2B3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 18992  013A62  C2B4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 18993  013A66  C2B5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 18994  013A6A  EC71  F0C8         	call	_getMinutesFromOnTime	;wreg free
 18995  013A6E  0102               	movlb	2	; () banked
 18996  013A70  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 18997  013A72  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 18998  013A74  6F88               	movwf	(?_sprintf+4)& (0+255),b
 18999  013A76  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19000  013A78  EC6D  F0D9         	call	_sprintf	;wreg free
 19001                           
 19002                           ;oled.c: 677: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19003  013A7C  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19004  013A7E  0102               	movlb	2	; () banked
 19005  013A80  6F84               	movwf	sprintf@wh& (0+255),b
 19006  013A82  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19007  013A84  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19008  013A86  0E4B               	movlw	low STR_141
 19009  013A88  6F86               	movwf	sprintf@f& (0+255),b
 19010  013A8A  0EFE               	movlw	high STR_141
 19011  013A8C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19012  013A8E  C2B2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19013  013A92  C2B3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19014  013A96  C2B4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19015  013A9A  C2B5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19016  013A9E  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 19017  013AA2  0102               	movlb	2	; () banked
 19018  013AA4  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 19019  013AA6  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 19020  013AA8  6F88               	movwf	(?_sprintf+4)& (0+255),b
 19021  013AAA  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19022  013AAC  EC6D  F0D9         	call	_sprintf	;wreg free
 19023                           
 19024                           ;oled.c: 679: }
 19025  013AB0  D09D               	goto	l21736
 19026  013AB2                     l21720:
 19027                           
 19028                           ; BSR set to: 2
 19029                           ;oled.c: 682: else if (QI_charge_time >= 60) {
 19030  013AB2  51B5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19031  013AB4  11B4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19032  013AB6  11B3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19033  013AB8  E104               	bnz	u27510
 19034  013ABA  0E3C               	movlw	60
 19035  013ABC  5DB2               	subwf	_QI_charge_time& (0+255),w,b
 19036  013ABE  A0D8               	btfss	status,0,c
 19037  013AC0  D03F               	goto	l21726
 19038  013AC2                     u27510:
 19039                           
 19040                           ; BSR set to: 2
 19041                           ;oled.c: 684: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19042  013AC2  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19043  013AC4  6F84               	movwf	sprintf@wh& (0+255),b
 19044  013AC6  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19045  013AC8  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19046  013ACA  0E56               	movlw	low STR_138
 19047  013ACC  6F86               	movwf	sprintf@f& (0+255),b
 19048  013ACE  0EFE               	movlw	high STR_138
 19049  013AD0  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19050  013AD2  C2B2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19051  013AD6  C2B3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19052  013ADA  C2B4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19053  013ADE  C2B5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19054  013AE2  EC71  F0C8         	call	_getMinutesFromOnTime	;wreg free
 19055  013AE6  0102               	movlb	2	; () banked
 19056  013AE8  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 19057  013AEA  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 19058  013AEC  6F88               	movwf	(?_sprintf+4)& (0+255),b
 19059  013AEE  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19060  013AF0  EC6D  F0D9         	call	_sprintf	;wreg free
 19061                           
 19062                           ;oled.c: 685: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19063  013AF4  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19064  013AF6  0102               	movlb	2	; () banked
 19065  013AF8  6F84               	movwf	sprintf@wh& (0+255),b
 19066  013AFA  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19067  013AFC  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19068  013AFE  0E4B               	movlw	low STR_141
 19069  013B00  6F86               	movwf	sprintf@f& (0+255),b
 19070  013B02  0EFE               	movlw	high STR_141
 19071  013B04  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19072  013B06  C2B2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19073  013B0A  C2B3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19074  013B0E  C2B4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19075  013B12  C2B5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19076  013B16  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 19077  013B1A  0102               	movlb	2	; () banked
 19078  013B1C  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 19079  013B1E  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 19080  013B20  6F88               	movwf	(?_sprintf+4)& (0+255),b
 19081  013B22  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19082  013B24  EC6D  F0D9         	call	_sprintf	;wreg free
 19083                           
 19084                           ;oled.c: 686: strcpy(OLED_RAM_Buffer.line3, " ");
 19085  013B28  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19086  013B2A  0102               	movlb	2	; () banked
 19087  013B2C  6F03               	movwf	strcpy@to& (0+255),b
 19088  013B2E  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19089  013B30  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19090  013B32  0EEE               	movlw	low (STR_54+10)
 19091  013B34  6F05               	movwf	strcpy@from& (0+255),b
 19092  013B36  0EFD               	movlw	high (STR_54+10)
 19093  013B38  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19094  013B3A  EC49  F0D9         	call	_strcpy	;wreg free
 19095                           
 19096                           ;oled.c: 688: }
 19097  013B3E  D056               	goto	l21736
 19098  013B40                     l21726:
 19099                           
 19100                           ; BSR set to: 2
 19101                           ;oled.c: 690: else if (QI_charge_time == 0) {
 19102  013B40  51B2               	movf	_QI_charge_time& (0+255),w,b
 19103  013B42  11B3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19104  013B44  11B4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19105  013B46  11B5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19106  013B48  A4D8               	btfss	status,2,c
 19107  013B4A  D021               	goto	l21730
 19108                           
 19109                           ; BSR set to: 2
 19110                           ;oled.c: 692: strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19111  013B4C  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19112  013B4E  6F03               	movwf	strcpy@to& (0+255),b
 19113  013B50  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19114  013B52  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19115  013B54  0E66               	movlw	low STR_155
 19116  013B56  6F05               	movwf	strcpy@from& (0+255),b
 19117  013B58  0EFD               	movlw	high STR_155
 19118  013B5A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19119  013B5C  EC49  F0D9         	call	_strcpy	;wreg free
 19120                           
 19121                           ;oled.c: 693: strcpy(OLED_RAM_Buffer.line2, " ");
 19122  013B60  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19123  013B62  0102               	movlb	2	; () banked
 19124  013B64  6F03               	movwf	strcpy@to& (0+255),b
 19125  013B66  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19126  013B68  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19127  013B6A  0EEE               	movlw	low (STR_54+10)
 19128  013B6C  6F05               	movwf	strcpy@from& (0+255),b
 19129  013B6E  0EFD               	movlw	high (STR_54+10)
 19130  013B70  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19131  013B72  EC49  F0D9         	call	_strcpy	;wreg free
 19132                           
 19133                           ;oled.c: 694: strcpy(OLED_RAM_Buffer.line3, " ");
 19134  013B76  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19135  013B78  0102               	movlb	2	; () banked
 19136  013B7A  6F03               	movwf	strcpy@to& (0+255),b
 19137  013B7C  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19138  013B7E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19139  013B80  0EEE               	movlw	low (STR_54+10)
 19140  013B82  6F05               	movwf	strcpy@from& (0+255),b
 19141  013B84  0EFD               	movlw	high (STR_54+10)
 19142  013B86  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19143  013B88  EC49  F0D9         	call	_strcpy	;wreg free
 19144                           
 19145                           ;oled.c: 696: }
 19146  013B8C  D02F               	goto	l21736
 19147  013B8E                     l21730:
 19148                           
 19149                           ; BSR set to: 2
 19150                           ;oled.c: 699: else {;oled.c: 701: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(QI_charge_time));
 19151  013B8E  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19152  013B90  6F84               	movwf	sprintf@wh& (0+255),b
 19153  013B92  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19154  013B94  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19155  013B96  0E4B               	movlw	low STR_141
 19156  013B98  6F86               	movwf	sprintf@f& (0+255),b
 19157  013B9A  0EFE               	movlw	high STR_141
 19158  013B9C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19159  013B9E  C2B2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19160  013BA2  C2B3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19161  013BA6  C2B4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19162  013BAA  C2B5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19163  013BAE  ECB4  F0C7         	call	_getSecondsFromOnTime	;wreg free
 19164  013BB2  0102               	movlb	2	; () banked
 19165  013BB4  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 19166  013BB6  5197               	movf	??_OLED_updateHandler& (0+255),w,b
 19167  013BB8  6F88               	movwf	(?_sprintf+4)& (0+255),b
 19168  013BBA  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19169  013BBC  EC6D  F0D9         	call	_sprintf	;wreg free
 19170                           
 19171                           ;oled.c: 702: strcpy(OLED_RAM_Buffer.line2, " ");
 19172  013BC0  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19173  013BC2  0102               	movlb	2	; () banked
 19174  013BC4  6F03               	movwf	strcpy@to& (0+255),b
 19175  013BC6  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19176  013BC8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19177  013BCA  0EEE               	movlw	low (STR_54+10)
 19178  013BCC  6F05               	movwf	strcpy@from& (0+255),b
 19179  013BCE  0EFD               	movlw	high (STR_54+10)
 19180  013BD0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19181  013BD2  EC49  F0D9         	call	_strcpy	;wreg free
 19182                           
 19183                           ;oled.c: 703: strcpy(OLED_RAM_Buffer.line3, " ");
 19184  013BD6  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19185  013BD8  0102               	movlb	2	; () banked
 19186  013BDA  6F03               	movwf	strcpy@to& (0+255),b
 19187  013BDC  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19188  013BDE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19189  013BE0  0EEE               	movlw	low (STR_54+10)
 19190  013BE2  6F05               	movwf	strcpy@from& (0+255),b
 19191  013BE4  0EFD               	movlw	high (STR_54+10)
 19192  013BE6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19193  013BE8  EC49  F0D9         	call	_strcpy	;wreg free
 19194  013BEC                     l21736:
 19195                           
 19196                           ;oled.c: 705: };oled.c: 707: OLED_UpdateFromRAMBuffer();
 19197  013BEC  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19198                           
 19199                           ;oled.c: 708: OLED_Frame = OLED_Charge_Time;
 19200  013BF0  0E13               	movlw	19
 19201  013BF2  EF4A  F098         	goto	L4
 19202  013BF6                     l21742:
 19203                           
 19204                           ; BSR set to: 2
 19205                           ;oled.c: 715: OLED_update_flag = 0;
 19206  013BF6  0E00               	movlw	0
 19207  013BF8  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19208                           
 19209                           ; BSR set to: 2
 19210                           ;oled.c: 717: strcpy(OLED_RAM_Buffer.line0, "Cause of Reset:");
 19211  013BFA  0EBA               	movlw	low _OLED_RAM_Buffer
 19212  013BFC  6F03               	movwf	strcpy@to& (0+255),b
 19213  013BFE  0E02               	movlw	high _OLED_RAM_Buffer
 19214  013C00  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19215  013C02  0EE1               	movlw	low STR_62
 19216  013C04  6F05               	movwf	strcpy@from& (0+255),b
 19217  013C06  0EFB               	movlw	high STR_62
 19218  013C08  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19219  013C0A  EC49  F0D9         	call	_strcpy	;wreg free
 19220                           
 19221                           ;oled.c: 718: strcpy(OLED_RAM_Buffer.line1, " ");
 19222  013C0E  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19223  013C10  0102               	movlb	2	; () banked
 19224  013C12  6F03               	movwf	strcpy@to& (0+255),b
 19225  013C14  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19226  013C16  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19227  013C18  0EEE               	movlw	low (STR_54+10)
 19228  013C1A  6F05               	movwf	strcpy@from& (0+255),b
 19229  013C1C  0EFD               	movlw	high (STR_54+10)
 19230  013C1E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19231  013C20  EC49  F0D9         	call	_strcpy	;wreg free
 19232                           
 19233                           ;oled.c: 719: strcpy(OLED_RAM_Buffer.line2, getCauseOfResetStringSmall(reset_cause));
 19234  013C24  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19235  013C26  0102               	movlb	2	; () banked
 19236  013C28  6F03               	movwf	strcpy@to& (0+255),b
 19237  013C2A  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19238  013C2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19239  013C2E  51FE               	movf	_reset_cause& (0+255),w,b
 19240  013C30  EC1C  F0DD         	call	_getCauseOfResetStringSmall
 19241  013C34  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 19242  013C38  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 19243  013C3C  EC49  F0D9         	call	_strcpy	;wreg free
 19244                           
 19245                           ;oled.c: 720: strcpy(OLED_RAM_Buffer.line3, " ");
 19246  013C40  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19247  013C42  0102               	movlb	2	; () banked
 19248  013C44  6F03               	movwf	strcpy@to& (0+255),b
 19249  013C46  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19250  013C48  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19251  013C4A  0EEE               	movlw	low (STR_54+10)
 19252  013C4C  6F05               	movwf	strcpy@from& (0+255),b
 19253  013C4E  0EFD               	movlw	high (STR_54+10)
 19254  013C50  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19255  013C52  EC49  F0D9         	call	_strcpy	;wreg free
 19256                           
 19257                           ;oled.c: 722: OLED_UpdateFromRAMBuffer();
 19258  013C56  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19259                           
 19260                           ;oled.c: 723: OLED_Frame = OLED_Cause_Of_Reset;
 19261  013C5A  0E14               	movlw	20
 19262  013C5C                     L5:
 19263  013C5C  0102               	movlb	2	; () banked
 19264  013C5E  6FB7               	movwf	_OLED_Frame& (0+255),b
 19265                           
 19266                           ; BSR set to: 2
 19267                           ;oled.c: 724: OLED_update_time = 255;
 19268  013C60  69FF               	setf	_OLED_update_time& (0+255),b
 19269                           
 19270                           ;oled.c: 726: break;
 19271  013C62  0012               	return	
 19272  013C64                     l21758:
 19273                           
 19274                           ; BSR set to: 2
 19275                           ;oled.c: 730: OLED_update_flag = 0;
 19276  013C64  0E00               	movlw	0
 19277  013C66  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19278                           
 19279                           ; BSR set to: 2
 19280                           ;oled.c: 734: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 19281  013C68  0EBA               	movlw	low _OLED_RAM_Buffer
 19282  013C6A  6F03               	movwf	strcpy@to& (0+255),b
 19283  013C6C  0E02               	movlw	high _OLED_RAM_Buffer
 19284  013C6E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19285  013C70  0E2A               	movlw	low STR_63
 19286  013C72  6F05               	movwf	strcpy@from& (0+255),b
 19287  013C74  0EFE               	movlw	high STR_63
 19288  013C76  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19289  013C78  EC49  F0D9         	call	_strcpy	;wreg free
 19290                           
 19291                           ;oled.c: 735: char dev_id_str[17];;oled.c: 736: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 19292  013C7C  0EDD               	movlw	low OLED_updateHandler@dev_id_str
 19293  013C7E  0102               	movlb	2	; () banked
 19294  013C80  6F84               	movwf	sprintf@wh& (0+255),b
 19295  013C82  0E03               	movlw	high OLED_updateHandler@dev_id_str
 19296  013C84  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19297  013C86  0EAB               	movlw	low STR_64
 19298  013C88  6F86               	movwf	sprintf@f& (0+255),b
 19299  013C8A  0EFF               	movlw	high STR_64
 19300  013C8C  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19301  013C8E  ECC3  F0DE         	call	_getDeviceID	;wreg free
 19302  013C92  C20B  F288         	movff	?_getDeviceID,?_sprintf+4
 19303  013C96  C20C  F289         	movff	?_getDeviceID+1,?_sprintf+5
 19304  013C9A  EC6D  F0D9         	call	_sprintf	;wreg free
 19305                           
 19306                           ;oled.c: 737: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 19307  013C9E  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19308  013CA0  0102               	movlb	2	; () banked
 19309  013CA2  6F03               	movwf	strcpy@to& (0+255),b
 19310  013CA4  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19311  013CA6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19312  013CA8  0EDD               	movlw	low OLED_updateHandler@dev_id_str
 19313  013CAA  6F05               	movwf	strcpy@from& (0+255),b
 19314  013CAC  0E03               	movlw	high OLED_updateHandler@dev_id_str
 19315  013CAE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19316  013CB0  EC49  F0D9         	call	_strcpy	;wreg free
 19317                           
 19318                           ;oled.c: 740: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 19319  013CB4  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19320  013CB6  0102               	movlb	2	; () banked
 19321  013CB8  6F03               	movwf	strcpy@to& (0+255),b
 19322  013CBA  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19323  013CBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19324  013CBE  0E32               	movlw	low STR_65
 19325  013CC0  6F05               	movwf	strcpy@from& (0+255),b
 19326  013CC2  0EFD               	movlw	high STR_65
 19327  013CC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19328  013CC6  EC49  F0D9         	call	_strcpy	;wreg free
 19329                           
 19330                           ;oled.c: 741: char rev_id_str[17];;oled.c: 742: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 19331  013CCA  0EEE               	movlw	low OLED_updateHandler@rev_id_str
 19332  013CCC  0102               	movlb	2	; () banked
 19333  013CCE  6F84               	movwf	sprintf@wh& (0+255),b
 19334  013CD0  0E03               	movlw	high OLED_updateHandler@rev_id_str
 19335  013CD2  6F85               	movwf	(sprintf@wh+1)& (0+255),b
 19336  013CD4  0E7B               	movlw	low STR_66
 19337  013CD6  6F86               	movwf	sprintf@f& (0+255),b
 19338  013CD8  0EFF               	movlw	high STR_66
 19339  013CDA  6F87               	movwf	(sprintf@f+1)& (0+255),b
 19340  013CDC  ECC3  F0DB         	call	_getMajorRevisionID	;wreg free
 19341  013CE0  0102               	movlb	2	; () banked
 19342  013CE2  6F97               	movwf	??_OLED_updateHandler& (0+255),b
 19343  013CE4  0E41               	movlw	65
 19344  013CE6  2597               	addwf	??_OLED_updateHandler& (0+255),w,b
 19345  013CE8  6F88               	movwf	(?_sprintf+4)& (0+255),b
 19346  013CEA  6B89               	clrf	(?_sprintf+5)& (0+255),b
 19347  013CEC  0E00               	movlw	0
 19348  013CEE  2389               	addwfc	(?_sprintf+5)& (0+255),f,b
 19349  013CF0  EC05  F0DE         	call	_getMinorRevisionID	;wreg free
 19350  013CF4  0102               	movlb	2	; () banked
 19351  013CF6  6F98               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 19352  013CF8  5198               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 19353  013CFA  6F8A               	movwf	(?_sprintf+6)& (0+255),b
 19354  013CFC  6B8B               	clrf	(?_sprintf+7)& (0+255),b
 19355  013CFE  EC6D  F0D9         	call	_sprintf	;wreg free
 19356                           
 19357                           ;oled.c: 743: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 19358  013D02  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19359  013D04  0102               	movlb	2	; () banked
 19360  013D06  6F03               	movwf	strcpy@to& (0+255),b
 19361  013D08  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19362  013D0A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19363  013D0C  0EEE               	movlw	low OLED_updateHandler@rev_id_str
 19364  013D0E  6F05               	movwf	strcpy@from& (0+255),b
 19365  013D10  0E03               	movlw	high OLED_updateHandler@rev_id_str
 19366  013D12  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19367  013D14  EC49  F0D9         	call	_strcpy	;wreg free
 19368                           
 19369                           ;oled.c: 745: OLED_UpdateFromRAMBuffer();
 19370  013D18  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19371                           
 19372                           ;oled.c: 746: OLED_Frame = OLED_Dev_Rev_ID;
 19373  013D1C  0E15               	movlw	21
 19374  013D1E  D79E               	goto	L5
 19375  013D20                     l21778:
 19376                           
 19377                           ; BSR set to: 2
 19378                           ;oled.c: 753: OLED_update_flag = 0;
 19379  013D20  0E00               	movlw	0
 19380  013D22  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19381                           
 19382                           ; BSR set to: 2
 19383                           ;oled.c: 755: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 19384  013D24  0EBA               	movlw	low _OLED_RAM_Buffer
 19385  013D26  6F03               	movwf	strcpy@to& (0+255),b
 19386  013D28  0E02               	movlw	high _OLED_RAM_Buffer
 19387  013D2A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19388  013D2C  0ED1               	movlw	low STR_67
 19389  013D2E  6F05               	movwf	strcpy@from& (0+255),b
 19390  013D30  0EFB               	movlw	high STR_67
 19391  013D32  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19392  013D34  EC49  F0D9         	call	_strcpy	;wreg free
 19393                           
 19394                           ;oled.c: 756: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 19395  013D38  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19396  013D3A  0102               	movlb	2	; () banked
 19397  013D3C  6F03               	movwf	strcpy@to& (0+255),b
 19398  013D3E  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19399  013D40  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19400  013D42  0EB8               	movlw	low STR_68
 19401  013D44  6F05               	movwf	strcpy@from& (0+255),b
 19402  013D46  0EFE               	movlw	high STR_68
 19403  013D48  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19404  013D4A  EC49  F0D9         	call	_strcpy	;wreg free
 19405                           
 19406                           ;oled.c: 757: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 19407  013D4E  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19408  013D50  0102               	movlb	2	; () banked
 19409  013D52  6F03               	movwf	strcpy@to& (0+255),b
 19410  013D54  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19411  013D56  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19412  013D58  0E01               	movlw	low STR_69
 19413  013D5A  6F05               	movwf	strcpy@from& (0+255),b
 19414  013D5C  0EFC               	movlw	high STR_69
 19415  013D5E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19416  013D60  EC49  F0D9         	call	_strcpy	;wreg free
 19417                           
 19418                           ;oled.c: 758: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 19419  013D64  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19420  013D66  0102               	movlb	2	; () banked
 19421  013D68  6F03               	movwf	strcpy@to& (0+255),b
 19422  013D6A  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19423  013D6C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19424  013D6E  0E4F               	movlw	low STR_70
 19425  013D70  6F05               	movwf	strcpy@from& (0+255),b
 19426  013D72  0EFC               	movlw	high STR_70
 19427  013D74  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19428  013D76  EC49  F0D9         	call	_strcpy	;wreg free
 19429                           
 19430                           ;oled.c: 760: OLED_UpdateFromRAMBuffer();
 19431  013D7A  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19432                           
 19433                           ;oled.c: 761: OLED_Frame = OLED_COM_PORT_SET;
 19434  013D7E  0E16               	movlw	22
 19435  013D80  D76D               	goto	L5
 19436  013D82                     l21794:
 19437                           
 19438                           ; BSR set to: 2
 19439                           ;oled.c: 768: OLED_update_flag = 0;
 19440  013D82  0E00               	movlw	0
 19441  013D84  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19442                           
 19443                           ; BSR set to: 2
 19444                           ;oled.c: 770: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 19445  013D86  0EBA               	movlw	low _OLED_RAM_Buffer
 19446  013D88  6F03               	movwf	strcpy@to& (0+255),b
 19447  013D8A  0E02               	movlw	high _OLED_RAM_Buffer
 19448  013D8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19449  013D8E  0E98               	movlw	low STR_60
 19450  013D90  6F05               	movwf	strcpy@from& (0+255),b
 19451  013D92  0EFC               	movlw	high STR_60
 19452  013D94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19453  013D96  EC49  F0D9         	call	_strcpy	;wreg free
 19454                           
 19455                           ;oled.c: 771: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 19456  013D9A  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 19457  013D9C  0102               	movlb	2	; () banked
 19458  013D9E  6F03               	movwf	strcpy@to& (0+255),b
 19459  013DA0  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 19460  013DA2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19461  013DA4  0EF1               	movlw	low STR_61
 19462  013DA6  6F05               	movwf	strcpy@from& (0+255),b
 19463  013DA8  0EFB               	movlw	high STR_61
 19464  013DAA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19465  013DAC  EC49  F0D9         	call	_strcpy	;wreg free
 19466                           
 19467                           ;oled.c: 772: strcpy(OLED_RAM_Buffer.line2, "Drew Maatman");
 19468  013DB0  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 19469  013DB2  0102               	movlb	2	; () banked
 19470  013DB4  6F03               	movwf	strcpy@to& (0+255),b
 19471  013DB6  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 19472  013DB8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19473  013DBA  0E73               	movlw	low STR_174
 19474  013DBC  6F05               	movwf	strcpy@from& (0+255),b
 19475  013DBE  0EFD               	movlw	high STR_174
 19476  013DC0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19477  013DC2  EC49  F0D9         	call	_strcpy	;wreg free
 19478                           
 19479                           ;oled.c: 773: strcpy(OLED_RAM_Buffer.line3, "Spring 2019");
 19480  013DC6  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 19481  013DC8  0102               	movlb	2	; () banked
 19482  013DCA  6F03               	movwf	strcpy@to& (0+255),b
 19483  013DCC  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 19484  013DCE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19485  013DD0  0EB4               	movlw	low STR_175
 19486  013DD2  6F05               	movwf	strcpy@from& (0+255),b
 19487  013DD4  0EFD               	movlw	high STR_175
 19488  013DD6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19489  013DD8  EC49  F0D9         	call	_strcpy	;wreg free
 19490                           
 19491                           ;oled.c: 775: OLED_UpdateFromRAMBuffer();
 19492  013DDC  ECFD  F0CA         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19493                           
 19494                           ;oled.c: 776: OLED_Frame = OLED_TITLE_FRAME;
 19495  013DE0  0E17               	movlw	23
 19496  013DE2  D73C               	goto	L5
 19497  013DE4                     l21810:
 19498                           
 19499                           ; BSR set to: 2
 19500                           ;oled.c: 783: OLED_update_flag = 0;
 19501  013DE4  0E00               	movlw	0
 19502  013DE6  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19503                           
 19504                           ;oled.c: 785: break;
 19505  013DE8  0012               	return	
 19506  013DEA                     l21812:
 19507                           
 19508                           ; BSR set to: 2
 19509                           ;oled.c: 789: OLED_update_flag = 0;
 19510  013DEA  0E00               	movlw	0
 19511  013DEC  6FB6               	movwf	_OLED_update_flag& (0+255),b
 19512                           
 19513                           ;oled.c: 791: error_handler.I2C_OLED_error_flag = 1;
 19514  013DEE  0E01               	movlw	1
 19515  013DF0  0100               	movlb	0	; () banked
 19516  013DF2  6FC8               	movwf	(_error_handler+3)& (0+255),b
 19517                           
 19518                           ;oled.c: 792: break;
 19519  013DF4  0012               	return	
 19520  013DF6                     l21816:
 19521  013DF6  0102               	movlb	2	; () banked
 19522  013DF8  51B7               	movf	_OLED_Frame& (0+255),w,b
 19523                           
 19524                           ; Switch size 1, requested type "simple"
 19525                           ; Number of cases is 25, Range of values is 0 to 24
 19526                           ; switch strategies available:
 19527                           ; Name         Instructions Cycles
 19528                           ; simple_byte           76    39 (average)
 19529                           ;	Chosen strategy is simple_byte
 19530  013DFA  0A00               	xorlw	0	; case 0
 19531  013DFC  B4D8               	btfsc	status,2,c
 19532  013DFE  EF20  F097         	goto	l21378
 19533  013E02  0A01               	xorlw	1	; case 1
 19534  013E04  B4D8               	btfsc	status,2,c
 19535  013E06  EF58  F097         	goto	l21394
 19536  013E0A  0A03               	xorlw	3	; case 2
 19537  013E0C  B4D8               	btfsc	status,2,c
 19538  013E0E  EFB6  F097         	goto	l21414
 19539  013E12  0A01               	xorlw	1	; case 3
 19540  013E14  B4D8               	btfsc	status,2,c
 19541  013E16  EFE7  F097         	goto	l21430
 19542  013E1A  0A07               	xorlw	7	; case 4
 19543  013E1C  B4D8               	btfsc	status,2,c
 19544  013E1E  EF18  F098         	goto	l21446
 19545  013E22  0A01               	xorlw	1	; case 5
 19546  013E24  B4D8               	btfsc	status,2,c
 19547  013E26  EF4F  F098         	goto	l21462
 19548  013E2A  0A03               	xorlw	3	; case 6
 19549  013E2C  B4D8               	btfsc	status,2,c
 19550  013E2E  EF88  F098         	goto	l21478
 19551  013E32  0A01               	xorlw	1	; case 7
 19552  013E34  B4D8               	btfsc	status,2,c
 19553  013E36  EFC1  F098         	goto	l21494
 19554  013E3A  0A0F               	xorlw	15	; case 8
 19555  013E3C  B4D8               	btfsc	status,2,c
 19556  013E3E  EFFA  F098         	goto	l21510
 19557  013E42  0A01               	xorlw	1	; case 9
 19558  013E44  B4D8               	btfsc	status,2,c
 19559  013E46  EF33  F099         	goto	l21526
 19560  013E4A  0A03               	xorlw	3	; case 10
 19561  013E4C  B4D8               	btfsc	status,2,c
 19562  013E4E  EF6C  F099         	goto	l21542
 19563  013E52  0A01               	xorlw	1	; case 11
 19564  013E54  B4D8               	btfsc	status,2,c
 19565  013E56  EFA5  F099         	goto	l21558
 19566  013E5A  0A07               	xorlw	7	; case 12
 19567  013E5C  B4D8               	btfsc	status,2,c
 19568  013E5E  EFDE  F099         	goto	l21574
 19569  013E62  0A01               	xorlw	1	; case 13
 19570  013E64  B4D8               	btfsc	status,2,c
 19571  013E66  EF17  F09A         	goto	l21590
 19572  013E6A  0A03               	xorlw	3	; case 14
 19573  013E6C  B4D8               	btfsc	status,2,c
 19574  013E6E  EF50  F09A         	goto	l21606
 19575  013E72  0A01               	xorlw	1	; case 15
 19576  013E74  B4D8               	btfsc	status,2,c
 19577  013E76  EF89  F09A         	goto	l21622
 19578  013E7A  0A1F               	xorlw	31	; case 16
 19579  013E7C  B4D8               	btfsc	status,2,c
 19580  013E7E  EFC2  F09A         	goto	l21638
 19581  013E82  0A01               	xorlw	1	; case 17
 19582  013E84  B4D8               	btfsc	status,2,c
 19583  013E86  EF07  F09B         	goto	l21656
 19584  013E8A  0A03               	xorlw	3	; case 18
 19585  013E8C  B4D8               	btfsc	status,2,c
 19586  013E8E  D41E               	goto	l21678
 19587  013E90  0A01               	xorlw	1	; case 19
 19588  013E92  B4D8               	btfsc	status,2,c
 19589  013E94  D5AA               	goto	l21712
 19590  013E96  0A07               	xorlw	7	; case 20
 19591  013E98  B4D8               	btfsc	status,2,c
 19592  013E9A  D6AD               	goto	l21742
 19593  013E9C  0A01               	xorlw	1	; case 21
 19594  013E9E  B4D8               	btfsc	status,2,c
 19595  013EA0  D6E1               	goto	l21758
 19596  013EA2  0A03               	xorlw	3	; case 22
 19597  013EA4  B4D8               	btfsc	status,2,c
 19598  013EA6  D73C               	goto	l21778
 19599  013EA8  0A01               	xorlw	1	; case 23
 19600  013EAA  B4D8               	btfsc	status,2,c
 19601  013EAC  D76A               	goto	l21794
 19602  013EAE  0A0F               	xorlw	15	; case 24
 19603  013EB0  B4D8               	btfsc	status,2,c
 19604  013EB2  D798               	goto	l21810
 19605  013EB4  D79A               	goto	l21812
 19606  013EB6                     __end_of_OLED_updateHandler:
 19607                           	opt callstack 0
 19608                           
 19609 ;; *************** function _strcpy *****************
 19610 ;; Defined at:
 19611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
 19612 ;; Parameters:    Size  Location     Type
 19613 ;;  to              2    3[BANK2 ] PTR unsigned char 
 19614 ;;		 -> OLED_RAM_Buffer(68), 
 19615 ;;  from            2    5[BANK2 ] PTR const unsigned char 
 19616 ;;		 -> STR_175(12), STR_174(13), STR_173(16), STR_172(14), 
 19617 ;;		 -> STR_171(15), STR_170(16), STR_169(10), STR_168(16), 
 19618 ;;		 -> STR_166(13), STR_164(11), STR_163(2), STR_162(2), 
 19619 ;;		 -> STR_161(16), STR_160(2), STR_159(2), STR_157(2), 
 19620 ;;		 -> STR_156(2), STR_155(13), STR_154(2), STR_148(16), 
 19621 ;;		 -> STR_147(2), STR_146(2), STR_144(2), STR_132(14), 
 19622 ;;		 -> STR_131(2), STR_130(2), STR_128(11), STR_127(13), 
 19623 ;;		 -> STR_126(2), STR_125(2), STR_124(7), STR_123(11), 
 19624 ;;		 -> STR_122(14), STR_121(2), STR_120(2), STR_118(12), 
 19625 ;;		 -> STR_117(2), STR_116(2), STR_114(14), STR_113(2), 
 19626 ;;		 -> STR_112(2), STR_110(10), STR_109(2), STR_108(2), 
 19627 ;;		 -> STR_106(9), STR_105(2), STR_104(2), STR_102(12), 
 19628 ;;		 -> STR_101(2), STR_100(2), STR_98(14), STR_97(2), 
 19629 ;;		 -> STR_96(2), STR_94(13), STR_93(2), STR_92(2), 
 19630 ;;		 -> STR_90(12), STR_89(2), STR_88(2), STR_86(14), 
 19631 ;;		 -> STR_85(2), STR_84(2), STR_82(13), STR_81(2), 
 19632 ;;		 -> STR_80(2), STR_78(14), STR_77(2), STR_76(2), 
 19633 ;;		 -> STR_75(15), STR_74(16), STR_73(14), STR_72(11), 
 19634 ;;		 -> STR_71(14), STR_70(15), STR_69(16), STR_68(10), 
 19635 ;;		 -> STR_67(16), OLED_updateHandler@rev_id_str(17), STR_65(13), OLED_updateHandler@dev_id_str(17), 
 19636 ;;		 -> STR_63(11), STR_62(16), STR_61(16), STR_60(14), 
 19637 ;;		 -> STR_40(10), STR_39(11), STR_38(11), STR_37(15), 
 19638 ;;		 -> STR_36(11), STR_35(10), STR_34(11), STR_33(10), 
 19639 ;;		 -> STR_32(10), STR_31(10), STR_20(10), STR_19(6), 
 19640 ;;		 -> STR_18(14), STR_17(9), STR_16(5), 
 19641 ;; Auto vars:     Size  Location     Type
 19642 ;;  cp              2    7[BANK2 ] PTR unsigned char 
 19643 ;;		 -> OLED_RAM_Buffer(68), 
 19644 ;; Return value:  Size  Location     Type
 19645 ;;                  2    3[BANK2 ] PTR unsigned char 
 19646 ;; Registers used:
 19647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19648 ;; Tracked objects:
 19649 ;;		On entry : 0/0
 19650 ;;		On exit  : 0/0
 19651 ;;		Unchanged: 0/0
 19652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19653 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19654 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19656 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;Total ram usage:        6 bytes
 19658 ;; Hardware stack levels used:    1
 19659 ;; Hardware stack levels required when called:   11
 19660 ;; This function calls:
 19661 ;;		Nothing
 19662 ;; This function is called by:
 19663 ;;		_OLED_updateHandler
 19664 ;; This function uses a non-reentrant model
 19665 ;;
 19666                           
 19667                           	psect	text64
 19668  01B292                     __ptext64:
 19669                           	opt callstack 0
 19670  01B292                     _strcpy:
 19671                           	opt callstack 18
 19672                           
 19673                           ;incstack = 0
 19674  01B292  C203  F207         	movff	strcpy@to,strcpy@cp
 19675  01B296  C204  F208         	movff	strcpy@to+1,strcpy@cp+1
 19676  01B29A  D005               	goto	l20974
 19677  01B29C                     l20972:
 19678  01B29C  0102               	movlb	2	; () banked
 19679  01B29E  4B07               	infsnz	strcpy@cp& (0+255),f,b
 19680  01B2A0  2B08               	incf	(strcpy@cp+1)& (0+255),f,b
 19681  01B2A2  4B05               	infsnz	strcpy@from& (0+255),f,b
 19682  01B2A4  2B06               	incf	(strcpy@from+1)& (0+255),f,b
 19683  01B2A6                     l20974:
 19684  01B2A6  C205  FFF6         	movff	strcpy@from,tblptrl
 19685  01B2AA  C206  FFF7         	movff	strcpy@from+1,tblptrh
 19686  01B2AE  0E00               	movlw	low (__mediumconst shr (0+16))
 19687  01B2B0  6EF8               	movwf	tblptru,c
 19688  01B2B2  C207  FFD9         	movff	strcpy@cp,fsr2l
 19689  01B2B6  C208  FFDA         	movff	strcpy@cp+1,fsr2h
 19690  01B2BA  0E0E               	movlw	(high __ramtop+-1)
 19691  01B2BC  64F7               	cpfsgt	tblptrh,c
 19692  01B2BE  D003               	bra	u26937
 19693  01B2C0  0008               	tblrd		*
 19694  01B2C2  50F5               	movf	tablat,w,c
 19695  01B2C4  D005               	bra	u26930
 19696  01B2C6                     u26937:
 19697  01B2C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19698  01B2CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19699  01B2CE  50EF               	movf	indf0,w,c
 19700  01B2D0                     u26930:
 19701  01B2D0  6EDF               	movwf	indf2,c
 19702  01B2D2  50DF               	movf	indf2,w,c
 19703  01B2D4  B4D8               	btfsc	status,2,c
 19704  01B2D6  0012               	return	
 19705  01B2D8  D7E1               	goto	l20972
 19706  01B2DA                     __end_of_strcpy:
 19707                           	opt callstack 0
 19708                           
 19709 ;; *************** function _sprintf *****************
 19710 ;; Defined at:
 19711 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;  wh              2  132[BANK2 ] PTR unsigned char 
 19714 ;;		 -> ftoa@buf(17), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), 
 19715 ;;		 -> getStringSecondsAsTime@buff(20), 
 19716 ;;  f               2  134[BANK2 ] PTR const unsigned char 
 19717 ;;		 -> STR_337(11), STR_167(7), STR_165(5), STR_158(11), 
 19718 ;;		 -> STR_153(11), STR_152(11), STR_151(11), STR_150(11), 
 19719 ;;		 -> STR_149(9), STR_145(11), STR_143(11), STR_142(11), 
 19720 ;;		 -> STR_141(11), STR_140(11), STR_139(9), STR_138(11), 
 19721 ;;		 -> STR_137(9), STR_136(8), STR_135(9), STR_134(8), 
 19722 ;;		 -> STR_133(9), STR_129(9), STR_119(7), STR_115(7), 
 19723 ;;		 -> STR_111(7), STR_107(7), STR_103(8), STR_99(7), 
 19724 ;;		 -> STR_95(7), STR_91(7), STR_87(7), STR_83(7), 
 19725 ;;		 -> STR_79(7), STR_66(7), STR_64(5), STR_57(11), 
 19726 ;;		 -> STR_56(10), STR_55(13), STR_54(12), STR_53(11), 
 19727 ;;		 -> STR_52(10), STR_51(10), STR_50(9), STR_49(11), 
 19728 ;;		 -> STR_48(10), 
 19729 ;; Auto vars:     Size  Location     Type
 19730 ;;  pb              5  146[BANK2 ] struct __prbuf
 19731 ;;  ap              2  144[BANK2 ] PTR void [1]
 19732 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  2  132[BANK2 ] int 
 19735 ;; Registers used:
 19736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/0
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19742 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19743 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19745 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19746 ;;Total ram usage:       19 bytes
 19747 ;; Hardware stack levels used:    1
 19748 ;; Hardware stack levels required when called:   14
 19749 ;; This function calls:
 19750 ;;		__doprnt
 19751 ;; This function is called by:
 19752 ;;		_getStringSecondsAsTime
 19753 ;;		_OLED_updateHandler
 19754 ;;		_ftoa
 19755 ;; This function uses a non-reentrant model
 19756 ;;
 19757                           
 19758                           	psect	text65
 19759  01B2DA                     __ptext65:
 19760                           	opt callstack 0
 19761  01B2DA                     _sprintf:
 19762                           	opt callstack 12
 19763                           
 19764                           ;incstack = 0
 19765  01B2DA  C284  F292         	movff	sprintf@wh,sprintf@pb
 19766  01B2DE  C285  F293         	movff	sprintf@wh+1,sprintf@pb+1
 19767  01B2E2  0E00               	movlw	0
 19768  01B2E4  0102               	movlb	2	; () banked
 19769  01B2E6  6F94               	movwf	(sprintf@pb+2)& (0+255),b
 19770  01B2E8  0E00               	movlw	0
 19771  01B2EA  6F95               	movwf	(sprintf@pb+3)& (0+255),b
 19772  01B2EC  0E00               	movlw	0
 19773  01B2EE  6F96               	movwf	(sprintf@pb+4)& (0+255),b
 19774  01B2F0  0E88               	movlw	low (?_sprintf+4)
 19775  01B2F2  6F90               	movwf	sprintf@ap& (0+255),b
 19776  01B2F4  0E02               	movlw	high (?_sprintf+4)
 19777  01B2F6  6F91               	movwf	(sprintf@ap+1)& (0+255),b
 19778                           
 19779                           ; BSR set to: 2
 19780  01B2F8  0E92               	movlw	low sprintf@pb
 19781  01B2FA  6F4C               	movwf	__doprnt@pb& (0+255),b
 19782  01B2FC  0E02               	movlw	high sprintf@pb
 19783  01B2FE  6F4D               	movwf	(__doprnt@pb+1)& (0+255),b
 19784  01B300  C286  F24E         	movff	sprintf@f,__doprnt@f
 19785  01B304  C287  F24F         	movff	sprintf@f+1,__doprnt@f+1
 19786  01B308  0E90               	movlw	low sprintf@ap
 19787  01B30A  6F50               	movwf	__doprnt@ap& (0+255),b
 19788  01B30C  0E02               	movlw	high sprintf@ap
 19789  01B30E  6F51               	movwf	(__doprnt@ap+1)& (0+255),b
 19790  01B310  EC00  F080         	call	__doprnt	;wreg free
 19791  01B314  C292  FFD9         	movff	sprintf@pb,fsr2l
 19792  01B318  C293  FFDA         	movff	sprintf@pb+1,fsr2h
 19793  01B31C  0E00               	movlw	0
 19794  01B31E  6EDF               	movwf	indf2,c
 19795  01B320  0012               	return		;funcret
 19796  01B322                     __end_of_sprintf:
 19797                           	opt callstack 0
 19798                           
 19799 ;; *************** function __doprnt *****************
 19800 ;; Defined at:
 19801 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 19802 ;; Parameters:    Size  Location     Type
 19803 ;;  pb              2   76[BANK2 ] PTR struct __prbuf
 19804 ;;		 -> sprintf@pb(5), printf@pb(5), 
 19805 ;;  f               2   78[BANK2 ] PTR const unsigned char 
 19806 ;;		 -> STR_337(11), STR_334(60), STR_333(24), STR_332(24), 
 19807 ;;		 -> STR_331(24), STR_330(27), STR_329(20), STR_328(35), 
 19808 ;;		 -> STR_327(34), STR_326(37), STR_325(34), STR_324(36), 
 19809 ;;		 -> STR_323(35), STR_322(33), STR_321(35), STR_320(20), 
 19810 ;;		 -> STR_319(23), STR_318(20), STR_317(22), STR_316(21), 
 19811 ;;		 -> STR_315(19), STR_314(21), STR_313(27), STR_312(18), 
 19812 ;;		 -> STR_311(11), terminalTextAttributes@print_string(16), STR_281(4), STR_280(4), 
 19813 ;;		 -> STR_279(4), STR_278(4), STR_277(5), STR_276(3), 
 19814 ;;		 -> STR_275(39), STR_274(96), STR_273(62), STR_272(34), 
 19815 ;;		 -> STR_271(3), STR_270(50), STR_269(56), STR_268(55), 
 19816 ;;		 -> STR_267(27), STR_266(3), STR_265(63), STR_264(40), 
 19817 ;;		 -> STR_263(64), STR_262(42), STR_261(36), STR_260(3), 
 19818 ;;		 -> STR_259(45), STR_258(3), STR_257(58), STR_256(59), 
 19819 ;;		 -> STR_255(20), STR_254(3), STR_253(54), STR_252(52), 
 19820 ;;		 -> STR_251(23), STR_250(3), STR_249(43), STR_248(44), 
 19821 ;;		 -> STR_247(23), STR_246(3), STR_245(46), STR_244(3), 
 19822 ;;		 -> STR_243(50), STR_242(58), STR_241(35), STR_240(3), 
 19823 ;;		 -> STR_239(47), STR_238(3), STR_237(32), STR_236(64), 
 19824 ;;		 -> STR_235(30), STR_234(31), STR_233(63), STR_232(33), 
 19825 ;;		 -> STR_231(35), STR_230(37), STR_229(40), STR_228(28), 
 19826 ;;		 -> STR_227(46), STR_226(31), STR_225(52), STR_224(14), 
 19827 ;;		 -> STR_223(28), STR_222(50), STR_221(29), STR_220(45), 
 19828 ;;		 -> STR_219(88), STR_218(37), STR_217(3), STR_216(30), 
 19829 ;;		 -> STR_215(46), STR_214(39), STR_213(62), STR_212(57), 
 19830 ;;		 -> STR_211(559), STR_210(22), STR_209(3), STR_205(24), 
 19831 ;;		 -> STR_203(23), STR_201(23), STR_199(3), STR_198(3), 
 19832 ;;		 -> STR_197(54), STR_196(3), STR_195(56), STR_194(3), 
 19833 ;;		 -> STR_193(60), STR_192(61), STR_191(3), STR_190(62), 
 19834 ;;		 -> STR_189(3), STR_188(50), STR_187(3), STR_186(45), 
 19835 ;;		 -> STR_185(3), STR_183(54), STR_181(4), STR_180(5), 
 19836 ;;		 -> STR_178(4), STR_177(5), STR_167(7), STR_165(5), 
 19837 ;;		 -> STR_158(11), STR_153(11), STR_152(11), STR_151(11), 
 19838 ;;		 -> STR_150(11), STR_149(9), STR_145(11), STR_143(11), 
 19839 ;;		 -> STR_142(11), STR_141(11), STR_140(11), STR_139(9), 
 19840 ;;		 -> STR_138(11), STR_137(9), STR_136(8), STR_135(9), 
 19841 ;;		 -> STR_134(8), STR_133(9), STR_129(9), STR_119(7), 
 19842 ;;		 -> STR_115(7), STR_111(7), STR_107(7), STR_103(8), 
 19843 ;;		 -> STR_99(7), STR_95(7), STR_91(7), STR_87(7), 
 19844 ;;		 -> STR_83(7), STR_79(7), STR_66(7), STR_64(5), 
 19845 ;;		 -> STR_57(11), STR_56(10), STR_55(13), STR_54(12), 
 19846 ;;		 -> STR_53(11), STR_52(10), STR_51(10), STR_50(9), 
 19847 ;;		 -> STR_49(11), STR_48(10), STR_10(47), STR_9(30), 
 19848 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 19849 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 19850 ;;  ap              2   80[BANK2 ] PTR PTR void 
 19851 ;;		 -> sprintf@ap(2), printf@ap(2), 
 19852 ;; Auto vars:     Size  Location     Type
 19853 ;;  idx             1   90[BANK2 ] unsigned char 
 19854 ;;  val             4  121[BANK2 ] unsigned long 
 19855 ;;  fval            4  117[BANK2 ] unsigned long 
 19856 ;;  tmpval          4  113[BANK2 ] struct .
 19857 ;;  flag            2  129[BANK2 ] unsigned short 
 19858 ;;  prec            2  127[BANK2 ] int 
 19859 ;;  width           2  125[BANK2 ] int 
 19860 ;;  eexp            2  111[BANK2 ] int 
 19861 ;;  len             2  109[BANK2 ] unsigned int 
 19862 ;;  cp              2  107[BANK2 ] PTR const unsigned char 
 19863 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_335(7), 
 19864 ;;		 -> _doprnt@c(1), freqMeasConvert@qi_period(4), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17)
      +, 
 19865 ;;		 -> OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@return_string(40), STR_47(10), 
 19866 ;;		 -> STR_46(13), STR_45(13), STR_44(12), STR_43(12), 
 19867 ;;		 -> STR_42(13), STR_41(12), STR_30(16), STR_29(22), 
 19868 ;;		 -> STR_28(21), STR_27(27), STR_26(41), STR_25(32), 
 19869 ;;		 -> STR_24(19), STR_23(16), STR_22(15), STR_21(16), 
 19870 ;;		 -> STR_15(10), STR_14(6), STR_13(14), STR_12(9), 
 19871 ;;		 -> STR_11(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), LM73Convert@QI_Conv(2), 
 19872 ;;		 -> NULL(0), 
 19873 ;;  c               1  131[BANK2 ] unsigned char 
 19874 ;;  d               1    0        unsigned char 
 19875 ;; Return value:  Size  Location     Type
 19876 ;;                  2   76[BANK2 ] int 
 19877 ;; Registers used:
 19878 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19879 ;; Tracked objects:
 19880 ;;		On entry : 0/0
 19881 ;;		On exit  : 0/0
 19882 ;;		Unchanged: 0/0
 19883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19884 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19885 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19886 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19887 ;;      Totals:         0       0       0      56       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19888 ;;Total ram usage:       56 bytes
 19889 ;; Hardware stack levels used:    1
 19890 ;; Hardware stack levels required when called:   13
 19891 ;; This function calls:
 19892 ;;		Absolute function
 19893 ;;		___awdiv
 19894 ;;		___fladd
 19895 ;;		___fleq
 19896 ;;		___flge
 19897 ;;		___flmul
 19898 ;;		___flneg
 19899 ;;		___flsub
 19900 ;;		___fltol
 19901 ;;		___lldiv
 19902 ;;		___llmod
 19903 ;;		___wmul
 19904 ;;		___xxtofl
 19905 ;;		__div_to_l_
 19906 ;;		__tdiv_to_l_
 19907 ;;		_fround
 19908 ;;		_isdigit
 19909 ;;		_putch
 19910 ;;		_scale
 19911 ;; This function is called by:
 19912 ;;		_printf
 19913 ;;		_sprintf
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           
 19917                           	psect	text66
 19918  010000                     __ptext66:
 19919                           	opt callstack 0
 19920  010000                     __doprnt:
 19921                           	opt callstack 13
 19922                           
 19923                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 19924                           
 19925                           ;incstack = 0
 19926  010000  EF6F  F08B         	goto	u22730
 19927  010004                     l17542:
 19928                           
 19929                           ; BSR set to: 2
 19930                           ;doprnt.c: 550: if(c != '%')
 19931  010004  0E25               	movlw	37
 19932  010006  1983               	xorwf	__doprnt@c& (0+255),w,b
 19933  010008  B4D8               	btfsc	status,2,c
 19934  01000A  D036               	goto	l17552
 19935                           
 19936                           ; BSR set to: 2
 19937  01000C  EE20 F002          	lfsr	2,2
 19938  010010  514C               	movf	__doprnt@pb& (0+255),w,b
 19939  010012  26D9               	addwf	fsr2l,f,c
 19940  010014  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 19941  010016  22DA               	addwfc	fsr2h,f,c
 19942  010018  50DE               	movf	postinc2,w,c
 19943  01001A  10DE               	iorwf	postinc2,w,c
 19944  01001C  10DE               	iorwf	postinc2,w,c
 19945  01001E  B4D8               	btfsc	status,2,c
 19946  010020  D014               	goto	l17548
 19947                           
 19948                           ; BSR set to: 2
 19949  010022  EE20 F002          	lfsr	2,2
 19950  010026  514C               	movf	__doprnt@pb& (0+255),w,b
 19951  010028  26D9               	addwf	fsr2l,f,c
 19952  01002A  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 19953  01002C  22DA               	addwfc	fsr2h,f,c
 19954  01002E  D802               	call	u21458
 19955  010030  EF6F  F08B         	goto	u22730
 19956  010034                     u21458:
 19957  010034  0005               	push	
 19958  010036  6EFA               	movwf	pclath,c
 19959  010038  50DE               	movf	postinc2,w,c
 19960  01003A  6EFD               	movwf	tosl,c
 19961  01003C  50DE               	movf	postinc2,w,c
 19962  01003E  6EFE               	movwf	tosh,c
 19963  010040  50DE               	movf	postinc2,w,c
 19964  010042  6EFF               	movwf	tosu,c
 19965  010044  50FA               	movf	pclath,w,c
 19966  010046  5183               	movf	__doprnt@c& (0+255),w,b
 19967  010048  0012               	return		;indir
 19968  01004A                     l17548:
 19969                           
 19970                           ; BSR set to: 2
 19971  01004A  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 19972  01004E  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 19973  010052  CFDE F252          	movff	postinc2,??__doprnt
 19974  010056  CFDD F253          	movff	postdec2,??__doprnt+1
 19975  01005A  C252  FFD9         	movff	??__doprnt,fsr2l
 19976  01005E  C253  FFDA         	movff	??__doprnt+1,fsr2h
 19977  010062  C283  FFDF         	movff	__doprnt@c,indf2
 19978                           
 19979                           ; BSR set to: 2
 19980  010066  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 19981  01006A  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 19982  01006E  2ADE               	incf	postinc2,f,c
 19983  010070  0E00               	movlw	0
 19984  010072  22DD               	addwfc	postdec2,f,c
 19985  010074  EF6F  F08B         	goto	u22730
 19986  010078                     l17552:
 19987                           
 19988                           ; BSR set to: 2
 19989                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 19990  010078  0E00               	movlw	0
 19991  01007A  6F7E               	movwf	(__doprnt@width+1)& (0+255),b
 19992  01007C  0E00               	movlw	0
 19993  01007E  6F7D               	movwf	__doprnt@width& (0+255),b
 19994                           
 19995                           ;doprnt.c: 560: flag = 0;
 19996  010080  0E00               	movlw	0
 19997  010082  6F82               	movwf	(__doprnt@flag+1)& (0+255),b
 19998  010084  0E00               	movlw	0
 19999  010086  6F81               	movwf	__doprnt@flag& (0+255),b
 20000  010088  D00A               	goto	l17562
 20001  01008A                     l17554:
 20002                           
 20003                           ;doprnt.c: 573: flag |= 0x01;
 20004  01008A  0102               	movlb	2	; () banked
 20005  01008C  8181               	bsf	__doprnt@flag& (0+255),0,b
 20006  01008E  D005               	goto	L6
 20007  010090                     l17556:
 20008                           
 20009                           ;doprnt.c: 580: flag |= 0x02;
 20010  010090  0102               	movlb	2	; () banked
 20011  010092  8381               	bsf	__doprnt@flag& (0+255),1,b
 20012  010094  D002               	goto	L6
 20013  010096                     l17558:
 20014                           
 20015                           ;doprnt.c: 592: flag |= 0x04;
 20016  010096  0102               	movlb	2	; () banked
 20017  010098  8581               	bsf	__doprnt@flag& (0+255),2,b
 20018  01009A                     L6:
 20019                           
 20020                           ;doprnt.c: 593: f++;
 20021  01009A  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 20022  01009C  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 20023  01009E                     l17562:
 20024                           
 20025                           ; BSR set to: 2
 20026  01009E  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20027  0100A2  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20028  0100A6  0E00               	movlw	low (__mediumconst shr (0+16))
 20029  0100A8  6EF8               	movwf	tblptru,c
 20030  0100AA  0E0E               	movlw	(high __ramtop+-1)
 20031  0100AC  64F7               	cpfsgt	tblptrh,c
 20032  0100AE  D003               	bra	u21467
 20033  0100B0  0008               	tblrd		*
 20034  0100B2  50F5               	movf	tablat,w,c
 20035  0100B4  D005               	bra	u21460
 20036  0100B6                     u21467:
 20037  0100B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20038  0100BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20039  0100BE  50EF               	movf	indf0,w,c
 20040  0100C0                     u21460:
 20041                           
 20042                           ; Switch size 1, requested type "simple"
 20043                           ; Number of cases is 3, Range of values is 32 to 48
 20044                           ; switch strategies available:
 20045                           ; Name         Instructions Cycles
 20046                           ; simple_byte           10     6 (average)
 20047                           ;	Chosen strategy is simple_byte
 20048  0100C0  0A20               	xorlw	32	; case 32
 20049  0100C2  B4D8               	btfsc	status,2,c
 20050  0100C4  D7E2               	goto	l17554
 20051  0100C6  0A0B               	xorlw	11	; case 43
 20052  0100C8  B4D8               	btfsc	status,2,c
 20053  0100CA  D7E2               	goto	l17556
 20054  0100CC  0A1B               	xorlw	27	; case 48
 20055  0100CE  B4D8               	btfsc	status,2,c
 20056  0100D0  D7E2               	goto	l17558
 20057                           
 20058                           ;doprnt.c: 601: if(flag & 0x02)
 20059  0100D2  0102               	movlb	2	; () banked
 20060  0100D4  B381               	btfsc	__doprnt@flag& (0+255),1,b
 20061                           
 20062                           ; BSR set to: 2
 20063                           ;doprnt.c: 602: flag &= ~0x01;
 20064  0100D6  9181               	bcf	__doprnt@flag& (0+255),0,b
 20065                           
 20066                           ; BSR set to: 2
 20067                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 20068  0100D8  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20069  0100DC  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20070  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20071  0100E2  6EF8               	movwf	tblptru,c
 20072  0100E4  0E0E               	movlw	(high __ramtop+-1)
 20073  0100E6  64F7               	cpfsgt	tblptrh,c
 20074  0100E8  D003               	bra	u21487
 20075  0100EA  0008               	tblrd		*
 20076  0100EC  50F5               	movf	tablat,w,c
 20077  0100EE  D005               	bra	u21480
 20078  0100F0                     u21487:
 20079  0100F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20080  0100F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20081  0100F8  50EF               	movf	indf0,w,c
 20082  0100FA                     u21480:
 20083  0100FA  EC72  F0DE         	call	_isdigit
 20084  0100FE  A0D8               	btfss	status,0,c
 20085  010100  D04C               	goto	u21520
 20086                           
 20087                           ;doprnt.c: 610: width = 0;
 20088  010102  0E00               	movlw	0
 20089  010104  0102               	movlb	2	; () banked
 20090  010106  6F7E               	movwf	(__doprnt@width+1)& (0+255),b
 20091  010108  0E00               	movlw	0
 20092  01010A  6F7D               	movwf	__doprnt@width& (0+255),b
 20093  01010C                     l17570:
 20094                           
 20095                           ;doprnt.c: 612: width *= 10;
 20096  01010C  C27D  F200         	movff	__doprnt@width,___wmul@multiplier
 20097  010110  C27E  F201         	movff	__doprnt@width+1,___wmul@multiplier+1
 20098  010114  0E00               	movlw	0
 20099  010116  0102               	movlb	2	; () banked
 20100  010118  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20101  01011A  0E0A               	movlw	10
 20102  01011C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20103  01011E  ECB5  F0DD         	call	___wmul	;wreg free
 20104  010122  C200  F27D         	movff	?___wmul,__doprnt@width
 20105  010126  C201  F27E         	movff	?___wmul+1,__doprnt@width+1
 20106                           
 20107                           ;doprnt.c: 613: width += *f++ - '0';
 20108  01012A  0ED0               	movlw	208
 20109  01012C  0102               	movlb	2	; () banked
 20110  01012E  6F52               	movwf	??__doprnt& (0+255),b
 20111  010130  0EFF               	movlw	255
 20112  010132  6F53               	movwf	(??__doprnt+1)& (0+255),b
 20113  010134  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20114  010138  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20115  01013C  0E00               	movlw	low (__mediumconst shr (0+16))
 20116  01013E  6EF8               	movwf	tblptru,c
 20117  010140  0E0E               	movlw	(high __ramtop+-1)
 20118  010142  64F7               	cpfsgt	tblptrh,c
 20119  010144  D003               	bra	u21507
 20120  010146  0008               	tblrd		*
 20121  010148  50F5               	movf	tablat,w,c
 20122  01014A  D005               	bra	u21500
 20123  01014C                     u21507:
 20124  01014C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20125  010150  CFF7 FFEA          	movff	tblptrh,fsr0h
 20126  010154  50EF               	movf	indf0,w,c
 20127  010156                     u21500:
 20128  010156  0102               	movlb	2	; () banked
 20129  010158  6F54               	movwf	(??__doprnt+2)& (0+255),b
 20130  01015A  6B55               	clrf	(??__doprnt+3)& (0+255),b
 20131  01015C  5152               	movf	??__doprnt& (0+255),w,b
 20132  01015E  2754               	addwf	(??__doprnt+2)& (0+255),f,b
 20133  010160  5153               	movf	(??__doprnt+1)& (0+255),w,b
 20134  010162  2355               	addwfc	(??__doprnt+3)& (0+255),f,b
 20135  010164  5154               	movf	(??__doprnt+2)& (0+255),w,b
 20136  010166  277D               	addwf	__doprnt@width& (0+255),f,b
 20137  010168  5155               	movf	(??__doprnt+3)& (0+255),w,b
 20138  01016A  237E               	addwfc	(__doprnt@width+1)& (0+255),f,b
 20139                           
 20140                           ; BSR set to: 2
 20141  01016C  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 20142  01016E  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 20143                           
 20144                           ; BSR set to: 2
 20145                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 20146  010170  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20147  010174  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20148  010178  0E00               	movlw	low (__mediumconst shr (0+16))
 20149  01017A  6EF8               	movwf	tblptru,c
 20150  01017C  0E0E               	movlw	(high __ramtop+-1)
 20151  01017E  64F7               	cpfsgt	tblptrh,c
 20152  010180  D003               	bra	u21517
 20153  010182  0008               	tblrd		*
 20154  010184  50F5               	movf	tablat,w,c
 20155  010186  D005               	bra	u21510
 20156  010188                     u21517:
 20157  010188  CFF6 FFE9          	movff	tblptrl,fsr0l
 20158  01018C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20159  010190  50EF               	movf	indf0,w,c
 20160  010192                     u21510:
 20161  010192  EC72  F0DE         	call	_isdigit
 20162  010196  B0D8               	btfsc	status,0,c
 20163  010198  D7B9               	goto	l17570
 20164  01019A                     u21520:
 20165                           
 20166                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 20167  01019A  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20168  01019E  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20169  0101A2  0E00               	movlw	low (__mediumconst shr (0+16))
 20170  0101A4  6EF8               	movwf	tblptru,c
 20171  0101A6  0E0E               	movlw	(high __ramtop+-1)
 20172  0101A8  64F7               	cpfsgt	tblptrh,c
 20173  0101AA  D003               	bra	u21537
 20174  0101AC  0008               	tblrd		*
 20175  0101AE  50F5               	movf	tablat,w,c
 20176  0101B0  D005               	bra	u21530
 20177  0101B2                     u21537:
 20178  0101B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20179  0101B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20180  0101BA  50EF               	movf	indf0,w,c
 20181  0101BC                     u21530:
 20182  0101BC  0A2E               	xorlw	46
 20183  0101BE  A4D8               	btfss	status,2,c
 20184  0101C0  D049               	goto	l17590
 20185                           
 20186                           ;doprnt.c: 624: flag |= 0x4000;
 20187  0101C2  0102               	movlb	2	; () banked
 20188  0101C4  8D82               	bsf	(__doprnt@flag+1)& (0+255),6,b
 20189                           
 20190                           ;doprnt.c: 625: f++;
 20191  0101C6  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 20192  0101C8  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 20193                           
 20194                           ; BSR set to: 2
 20195                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 20196  0101CA  0E00               	movlw	0
 20197  0101CC  6F80               	movwf	(__doprnt@prec+1)& (0+255),b
 20198  0101CE  0E00               	movlw	0
 20199  0101D0  6F7F               	movwf	__doprnt@prec& (0+255),b
 20200                           
 20201                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 20202  0101D2  D02A               	goto	l17588
 20203  0101D4                     l17584:
 20204                           
 20205                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 20206  0101D4  C27F  F200         	movff	__doprnt@prec,___wmul@multiplier
 20207  0101D8  C280  F201         	movff	__doprnt@prec+1,___wmul@multiplier+1
 20208  0101DC  0E00               	movlw	0
 20209  0101DE  0102               	movlb	2	; () banked
 20210  0101E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20211  0101E2  0E0A               	movlw	10
 20212  0101E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20213  0101E6  ECB5  F0DD         	call	___wmul	;wreg free
 20214  0101EA  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20215  0101EE  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20216  0101F2  0E00               	movlw	low (__mediumconst shr (0+16))
 20217  0101F4  6EF8               	movwf	tblptru,c
 20218  0101F6  0E0E               	movlw	(high __ramtop+-1)
 20219  0101F8  64F7               	cpfsgt	tblptrh,c
 20220  0101FA  D003               	bra	u21557
 20221  0101FC  0008               	tblrd		*
 20222  0101FE  50F5               	movf	tablat,w,c
 20223  010200  D005               	bra	u21550
 20224  010202                     u21557:
 20225  010202  CFF6 FFE9          	movff	tblptrl,fsr0l
 20226  010206  CFF7 FFEA          	movff	tblptrh,fsr0h
 20227  01020A  50EF               	movf	indf0,w,c
 20228  01020C                     u21550:
 20229  01020C  0102               	movlb	2	; () banked
 20230  01020E  6F52               	movwf	??__doprnt& (0+255),b
 20231  010210  5152               	movf	??__doprnt& (0+255),w,b
 20232  010212  2700               	addwf	?___wmul& (0+255),f,b
 20233  010214  0E00               	movlw	0
 20234  010216  2301               	addwfc	(?___wmul+1)& (0+255),f,b
 20235  010218  0ED0               	movlw	208
 20236  01021A  2500               	addwf	?___wmul& (0+255),w,b
 20237  01021C  6F7F               	movwf	__doprnt@prec& (0+255),b
 20238  01021E  0EFF               	movlw	255
 20239  010220  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 20240  010222  6F80               	movwf	(__doprnt@prec+1)& (0+255),b
 20241                           
 20242                           ; BSR set to: 2
 20243  010224  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 20244  010226  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 20245  010228                     l17588:
 20246                           
 20247                           ; BSR set to: 2
 20248  010228  C24E  FFF6         	movff	__doprnt@f,tblptrl
 20249  01022C  C24F  FFF7         	movff	__doprnt@f+1,tblptrh
 20250  010230  0E00               	movlw	low (__mediumconst shr (0+16))
 20251  010232  6EF8               	movwf	tblptru,c
 20252  010234  0E0E               	movlw	(high __ramtop+-1)
 20253  010236  64F7               	cpfsgt	tblptrh,c
 20254  010238  D003               	bra	u21567
 20255  01023A  0008               	tblrd		*
 20256  01023C  50F5               	movf	tablat,w,c
 20257  01023E  D005               	bra	u21560
 20258  010240                     u21567:
 20259  010240  CFF6 FFE9          	movff	tblptrl,fsr0l
 20260  010244  CFF7 FFEA          	movff	tblptrh,fsr0h
 20261  010248  50EF               	movf	indf0,w,c
 20262  01024A                     u21560:
 20263  01024A  EC72  F0DE         	call	_isdigit
 20264  01024E  A0D8               	btfss	status,0,c
 20265  010250  D12A               	goto	l17658
 20266  010252  D7C0               	goto	l17584
 20267  010254                     l17590:
 20268                           
 20269                           ;doprnt.c: 645: prec = 0;
 20270  010254  0E00               	movlw	0
 20271  010256  0102               	movlb	2	; () banked
 20272  010258  6F80               	movwf	(__doprnt@prec+1)& (0+255),b
 20273  01025A  0E00               	movlw	0
 20274  01025C  6F7F               	movwf	__doprnt@prec& (0+255),b
 20275                           
 20276                           ; BSR set to: 2
 20277                           ;doprnt.c: 647: flag |= 0x1000;
 20278  01025E  8982               	bsf	(__doprnt@flag+1)& (0+255),4,b
 20279  010260  D122               	goto	l17658
 20280  010262                     l17594:
 20281                           
 20282                           ; BSR set to: 2
 20283                           ;doprnt.c: 662: flag |= 0x10;
 20284  010262  8981               	bsf	__doprnt@flag& (0+255),4,b
 20285                           
 20286                           ;doprnt.c: 663: goto loop;
 20287  010264  D120               	goto	l17658
 20288  010266                     l17596:
 20289                           
 20290                           ; BSR set to: 2
 20291                           ;doprnt.c: 682: flag |= 0x400;
 20292  010266  8582               	bsf	(__doprnt@flag+1)& (0+255),2,b
 20293                           
 20294                           ;doprnt.c: 683: break;
 20295  010268  D159               	goto	l17660
 20296  01026A                     l17598:
 20297                           
 20298                           ; BSR set to: 2
 20299                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 20300  01026A  8F81               	bsf	__doprnt@flag& (0+255),7,b
 20301                           
 20302                           ;doprnt.c: 742: break;
 20303  01026C  D157               	goto	l17660
 20304  01026E                     l17600:
 20305                           
 20306                           ; BSR set to: 2
 20307                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20308  01026E  C250  FFD9         	movff	__doprnt@ap,fsr2l
 20309  010272  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 20310  010276  CFDF F252          	movff	indf2,??__doprnt
 20311  01027A  0E02               	movlw	2
 20312  01027C  26DE               	addwf	postinc2,f,c
 20313  01027E  CFDF F253          	movff	indf2,??__doprnt+1
 20314  010282  0E00               	movlw	0
 20315  010284  22DD               	addwfc	postdec2,f,c
 20316  010286  C252  FFD9         	movff	??__doprnt,fsr2l
 20317  01028A  C253  FFDA         	movff	??__doprnt+1,fsr2h
 20318  01028E  CFDE F26B          	movff	postinc2,__doprnt@cp
 20319  010292  CFDD F26C          	movff	postdec2,__doprnt@cp+1
 20320                           
 20321                           ; BSR set to: 2
 20322                           ;doprnt.c: 759: if(!cp)
 20323  010296  516B               	movf	__doprnt@cp& (0+255),w,b
 20324  010298  116C               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 20325  01029A  A4D8               	btfss	status,2,c
 20326  01029C  D004               	goto	l17606
 20327                           
 20328                           ; BSR set to: 2
 20329                           ;doprnt.c: 760: cp = "(null)";
 20330  01029E  0E58               	movlw	low STR_335
 20331  0102A0  6F6B               	movwf	__doprnt@cp& (0+255),b
 20332  0102A2  0EFF               	movlw	high STR_335
 20333  0102A4  6F6C               	movwf	(__doprnt@cp+1)& (0+255),b
 20334  0102A6                     l17606:
 20335                           
 20336                           ; BSR set to: 2
 20337                           ;doprnt.c: 764: len = 0;
 20338  0102A6  0E00               	movlw	0
 20339  0102A8  6F6E               	movwf	(__doprnt@len+1)& (0+255),b
 20340  0102AA  0E00               	movlw	0
 20341  0102AC  6F6D               	movwf	__doprnt@len& (0+255),b
 20342                           
 20343                           ;doprnt.c: 765: while(cp[len])
 20344  0102AE  D003               	goto	l17610
 20345  0102B0                     l17608:
 20346                           
 20347                           ;doprnt.c: 766: len++;
 20348  0102B0  0102               	movlb	2	; () banked
 20349  0102B2  4B6D               	infsnz	__doprnt@len& (0+255),f,b
 20350  0102B4  2B6E               	incf	(__doprnt@len+1)& (0+255),f,b
 20351  0102B6                     l17610:
 20352                           
 20353                           ; BSR set to: 2
 20354  0102B6  516D               	movf	__doprnt@len& (0+255),w,b
 20355  0102B8  256B               	addwf	__doprnt@cp& (0+255),w,b
 20356  0102BA  6F52               	movwf	??__doprnt& (0+255),b
 20357  0102BC  516E               	movf	(__doprnt@len+1)& (0+255),w,b
 20358  0102BE  216C               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 20359  0102C0  6F53               	movwf	(??__doprnt+1)& (0+255),b
 20360  0102C2  C252  FFF6         	movff	??__doprnt,tblptrl
 20361  0102C6  C253  FFF7         	movff	??__doprnt+1,tblptrh
 20362  0102CA  0E00               	movlw	low (__mediumconst shr (0+16))
 20363  0102CC  6EF8               	movwf	tblptru,c
 20364  0102CE  0E0E               	movlw	(high __ramtop+-1)
 20365  0102D0  64F7               	cpfsgt	tblptrh,c
 20366  0102D2  D003               	bra	u21597
 20367  0102D4  0008               	tblrd		*
 20368  0102D6  50F5               	movf	tablat,w,c
 20369  0102D8  D005               	bra	u21590
 20370  0102DA                     u21597:
 20371  0102DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 20372  0102DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 20373  0102E2  50EF               	movf	indf0,w,c
 20374  0102E4                     u21590:
 20375  0102E4  0900               	iorlw	0
 20376  0102E6  A4D8               	btfss	status,2,c
 20377  0102E8  D7E3               	goto	l17608
 20378  0102EA                     u21600:
 20379                           
 20380                           ;doprnt.c: 772: if(prec && prec < len)
 20381  0102EA  0102               	movlb	2	; () banked
 20382  0102EC  517F               	movf	__doprnt@prec& (0+255),w,b
 20383  0102EE  1180               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 20384  0102F0  B4D8               	btfsc	status,2,c
 20385  0102F2  D00A               	goto	l17618
 20386                           
 20387                           ; BSR set to: 2
 20388  0102F4  516D               	movf	__doprnt@len& (0+255),w,b
 20389  0102F6  5D7F               	subwf	__doprnt@prec& (0+255),w,b
 20390  0102F8  516E               	movf	(__doprnt@len+1)& (0+255),w,b
 20391  0102FA  5980               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 20392  0102FC  B0D8               	btfsc	status,0,c
 20393  0102FE  D004               	goto	l17618
 20394                           
 20395                           ; BSR set to: 2
 20396                           ;doprnt.c: 773: len = prec;
 20397  010300  C27F  F26D         	movff	__doprnt@prec,__doprnt@len
 20398  010304  C280  F26E         	movff	__doprnt@prec+1,__doprnt@len+1
 20399  010308                     l17618:
 20400                           
 20401                           ; BSR set to: 2
 20402                           ;doprnt.c: 776: if(width > len)
 20403  010308  517D               	movf	__doprnt@width& (0+255),w,b
 20404  01030A  5D6D               	subwf	__doprnt@len& (0+255),w,b
 20405  01030C  517E               	movf	(__doprnt@width+1)& (0+255),w,b
 20406  01030E  596E               	subwfb	(__doprnt@len+1)& (0+255),w,b
 20407  010310  B0D8               	btfsc	status,0,c
 20408  010312  D005               	goto	l17622
 20409                           
 20410                           ; BSR set to: 2
 20411                           ;doprnt.c: 777: width -= len;
 20412  010314  516D               	movf	__doprnt@len& (0+255),w,b
 20413  010316  5F7D               	subwf	__doprnt@width& (0+255),f,b
 20414  010318  516E               	movf	(__doprnt@len+1)& (0+255),w,b
 20415  01031A  5B7E               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20416  01031C  D038               	goto	l17632
 20417  01031E                     l17622:
 20418                           
 20419                           ; BSR set to: 2
 20420                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 20421  01031E  0E00               	movlw	0
 20422  010320  6F7E               	movwf	(__doprnt@width+1)& (0+255),b
 20423  010322  0E00               	movlw	0
 20424  010324  6F7D               	movwf	__doprnt@width& (0+255),b
 20425  010326  D033               	goto	l17632
 20426  010328                     l17624:
 20427                           
 20428                           ; BSR set to: 2
 20429  010328  EE20 F002          	lfsr	2,2
 20430  01032C  514C               	movf	__doprnt@pb& (0+255),w,b
 20431  01032E  26D9               	addwf	fsr2l,f,c
 20432  010330  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20433  010332  22DA               	addwfc	fsr2h,f,c
 20434  010334  50DE               	movf	postinc2,w,c
 20435  010336  10DE               	iorwf	postinc2,w,c
 20436  010338  10DE               	iorwf	postinc2,w,c
 20437  01033A  B4D8               	btfsc	status,2,c
 20438  01033C  D013               	goto	l17628
 20439                           
 20440                           ; BSR set to: 2
 20441  01033E  EE20 F002          	lfsr	2,2
 20442  010342  514C               	movf	__doprnt@pb& (0+255),w,b
 20443  010344  26D9               	addwf	fsr2l,f,c
 20444  010346  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20445  010348  22DA               	addwfc	fsr2h,f,c
 20446  01034A  D801               	call	u21658
 20447  01034C  D020               	goto	l17632
 20448  01034E                     u21658:
 20449  01034E  0005               	push	
 20450  010350  6EFA               	movwf	pclath,c
 20451  010352  50DE               	movf	postinc2,w,c
 20452  010354  6EFD               	movwf	tosl,c
 20453  010356  50DE               	movf	postinc2,w,c
 20454  010358  6EFE               	movwf	tosh,c
 20455  01035A  50DE               	movf	postinc2,w,c
 20456  01035C  6EFF               	movwf	tosu,c
 20457  01035E  50FA               	movf	pclath,w,c
 20458  010360  0E20               	movlw	32
 20459  010362  0012               	return		;indir
 20460  010364                     l17628:
 20461                           
 20462                           ; BSR set to: 2
 20463  010364  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 20464  010368  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20465  01036C  CFDE F252          	movff	postinc2,??__doprnt
 20466  010370  CFDD F253          	movff	postdec2,??__doprnt+1
 20467  010374  C252  FFD9         	movff	??__doprnt,fsr2l
 20468  010378  C253  FFDA         	movff	??__doprnt+1,fsr2h
 20469  01037C  0E20               	movlw	32
 20470  01037E  6EDF               	movwf	indf2,c
 20471                           
 20472                           ; BSR set to: 2
 20473  010380  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 20474  010384  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20475  010388  2ADE               	incf	postinc2,f,c
 20476  01038A  0E00               	movlw	0
 20477  01038C  22DD               	addwfc	postdec2,f,c
 20478  01038E                     l17632:
 20479  01038E  0102               	movlb	2	; () banked
 20480  010390  077D               	decf	__doprnt@width& (0+255),f,b
 20481  010392  A0D8               	btfss	status,0,c
 20482  010394  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 20483  010396  297D               	incf	__doprnt@width& (0+255),w,b
 20484  010398  E1C7               	bnz	l17624
 20485  01039A  297E               	incf	(__doprnt@width+1)& (0+255),w,b
 20486  01039C  B4D8               	btfsc	status,2,c
 20487  01039E  D05B               	goto	l17646
 20488  0103A0  D7C3               	goto	l17624
 20489  0103A2                     l17634:
 20490                           
 20491                           ; BSR set to: 2
 20492  0103A2  EE20 F002          	lfsr	2,2
 20493  0103A6  514C               	movf	__doprnt@pb& (0+255),w,b
 20494  0103A8  26D9               	addwf	fsr2l,f,c
 20495  0103AA  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20496  0103AC  22DA               	addwfc	fsr2h,f,c
 20497  0103AE  50DE               	movf	postinc2,w,c
 20498  0103B0  10DE               	iorwf	postinc2,w,c
 20499  0103B2  10DE               	iorwf	postinc2,w,c
 20500  0103B4  B4D8               	btfsc	status,2,c
 20501  0103B6  D027               	goto	l17640
 20502                           
 20503                           ; BSR set to: 2
 20504  0103B8  EE20 F002          	lfsr	2,2
 20505  0103BC  514C               	movf	__doprnt@pb& (0+255),w,b
 20506  0103BE  26D9               	addwf	fsr2l,f,c
 20507  0103C0  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20508  0103C2  22DA               	addwfc	fsr2h,f,c
 20509  0103C4  D801               	call	u21688
 20510  0103C6  D01B               	goto	u21689
 20511  0103C8                     u21688:
 20512  0103C8  0005               	push	
 20513  0103CA  6EFA               	movwf	pclath,c
 20514  0103CC  50DE               	movf	postinc2,w,c
 20515  0103CE  6EFD               	movwf	tosl,c
 20516  0103D0  50DE               	movf	postinc2,w,c
 20517  0103D2  6EFE               	movwf	tosh,c
 20518  0103D4  50DE               	movf	postinc2,w,c
 20519  0103D6  6EFF               	movwf	tosu,c
 20520  0103D8  50FA               	movf	pclath,w,c
 20521  0103DA  C26B  FFF6         	movff	__doprnt@cp,tblptrl
 20522  0103DE  C26C  FFF7         	movff	__doprnt@cp+1,tblptrh
 20523  0103E2  0E00               	movlw	low (__mediumconst shr (0+16))
 20524  0103E4  6EF8               	movwf	tblptru,c
 20525  0103E6  0E0E               	movlw	(high __ramtop+-1)
 20526  0103E8  64F7               	cpfsgt	tblptrh,c
 20527  0103EA  D003               	bra	u21697
 20528  0103EC  0008               	tblrd		*
 20529  0103EE  50F5               	movf	tablat,w,c
 20530  0103F0  D005               	bra	u21690
 20531  0103F2                     u21697:
 20532  0103F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20533  0103F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20534  0103FA  50EF               	movf	indf0,w,c
 20535  0103FC                     u21690:
 20536  0103FC  0012               	return		;indir
 20537  0103FE                     u21689:
 20538  0103FE  0102               	movlb	2	; () banked
 20539  010400  4B6B               	infsnz	__doprnt@cp& (0+255),f,b
 20540  010402  2B6C               	incf	(__doprnt@cp+1)& (0+255),f,b
 20541  010404  D028               	goto	l17646
 20542  010406                     l17640:
 20543                           
 20544                           ; BSR set to: 2
 20545  010406  C26B  FFF6         	movff	__doprnt@cp,tblptrl
 20546  01040A  C26C  FFF7         	movff	__doprnt@cp+1,tblptrh
 20547  01040E  0E00               	movlw	low (__mediumconst shr (0+16))
 20548  010410  6EF8               	movwf	tblptru,c
 20549  010412  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 20550  010416  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20551  01041A  CFDE F252          	movff	postinc2,??__doprnt
 20552  01041E  CFDD F253          	movff	postdec2,??__doprnt+1
 20553  010422  C252  FFD9         	movff	??__doprnt,fsr2l
 20554  010426  C253  FFDA         	movff	??__doprnt+1,fsr2h
 20555  01042A  0E0E               	movlw	(high __ramtop+-1)
 20556  01042C  64F7               	cpfsgt	tblptrh,c
 20557  01042E  D003               	bra	u21707
 20558  010430  0008               	tblrd		*
 20559  010432  50F5               	movf	tablat,w,c
 20560  010434  D005               	bra	u21700
 20561  010436                     u21707:
 20562  010436  CFF6 FFE9          	movff	tblptrl,fsr0l
 20563  01043A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20564  01043E  50EF               	movf	indf0,w,c
 20565  010440                     u21700:
 20566  010440  6EDF               	movwf	indf2,c
 20567  010442  0102               	movlb	2	; () banked
 20568  010444  4B6B               	infsnz	__doprnt@cp& (0+255),f,b
 20569  010446  2B6C               	incf	(__doprnt@cp+1)& (0+255),f,b
 20570                           
 20571                           ; BSR set to: 2
 20572  010448  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 20573  01044C  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20574  010450  2ADE               	incf	postinc2,f,c
 20575  010452  0E00               	movlw	0
 20576  010454  22DD               	addwfc	postdec2,f,c
 20577  010456                     l17646:
 20578                           
 20579                           ; BSR set to: 2
 20580  010456  076D               	decf	__doprnt@len& (0+255),f,b
 20581  010458  A0D8               	btfss	status,0,c
 20582  01045A  076E               	decf	(__doprnt@len+1)& (0+255),f,b
 20583  01045C  296D               	incf	__doprnt@len& (0+255),w,b
 20584  01045E  E1A1               	bnz	l17634
 20585  010460  296E               	incf	(__doprnt@len+1)& (0+255),w,b
 20586  010462  B4D8               	btfsc	status,2,c
 20587  010464  EF6F  F08B         	goto	u22730
 20588  010468  D79C               	goto	l17634
 20589  01046A                     l17648:
 20590                           
 20591                           ; BSR set to: 2
 20592                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20593  01046A  C250  FFD9         	movff	__doprnt@ap,fsr2l
 20594  01046E  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 20595  010472  CFDF F252          	movff	indf2,??__doprnt
 20596  010476  0E02               	movlw	2
 20597  010478  26DE               	addwf	postinc2,f,c
 20598  01047A  CFDF F253          	movff	indf2,??__doprnt+1
 20599  01047E  0E00               	movlw	0
 20600  010480  22DD               	addwfc	postdec2,f,c
 20601  010482  C252  FFD9         	movff	??__doprnt,fsr2l
 20602  010486  C253  FFDA         	movff	??__doprnt+1,fsr2h
 20603  01048A  50DF               	movf	indf2,w,c
 20604  01048C  6F83               	movwf	__doprnt@c& (0+255),b
 20605  01048E                     l17650:
 20606                           
 20607                           ; BSR set to: 2
 20608                           ;doprnt.c: 824: cp = (char *)&c;
 20609  01048E  0E83               	movlw	low __doprnt@c
 20610  010490  6F6B               	movwf	__doprnt@cp& (0+255),b
 20611  010492  0E02               	movlw	high __doprnt@c
 20612  010494  6F6C               	movwf	(__doprnt@cp+1)& (0+255),b
 20613                           
 20614                           ; BSR set to: 2
 20615                           ;doprnt.c: 825: len = 1;
 20616  010496  0E00               	movlw	0
 20617  010498  6F6E               	movwf	(__doprnt@len+1)& (0+255),b
 20618  01049A  0E01               	movlw	1
 20619  01049C  6F6D               	movwf	__doprnt@len& (0+255),b
 20620                           
 20621                           ;doprnt.c: 826: goto dostring;
 20622  01049E  D725               	goto	u21600
 20623  0104A0                     l17654:
 20624                           
 20625                           ; BSR set to: 2
 20626                           ;doprnt.c: 837: flag |= 0xC0;
 20627  0104A0  0EC0               	movlw	192
 20628  0104A2  1381               	iorwf	__doprnt@flag& (0+255),f,b
 20629                           
 20630                           ;doprnt.c: 838: break;
 20631  0104A4  D03B               	goto	l17660
 20632  0104A6                     l17658:
 20633  0104A6  0102               	movlb	2	; () banked
 20634  0104A8  514E               	movf	__doprnt@f& (0+255),w,b
 20635  0104AA  6F52               	movwf	??__doprnt& (0+255),b
 20636  0104AC  514F               	movf	(__doprnt@f+1)& (0+255),w,b
 20637  0104AE  6F53               	movwf	(??__doprnt+1)& (0+255),b
 20638  0104B0  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 20639  0104B2  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 20640  0104B4  C252  FFF6         	movff	??__doprnt,tblptrl
 20641  0104B8  C253  FFF7         	movff	??__doprnt+1,tblptrh
 20642  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
 20643  0104BE  6EF8               	movwf	tblptru,c
 20644  0104C0  0E0E               	movlw	(high __ramtop+-1)
 20645  0104C2  64F7               	cpfsgt	tblptrh,c
 20646  0104C4  D003               	bra	u21727
 20647  0104C6  0008               	tblrd		*
 20648  0104C8  50F5               	movf	tablat,w,c
 20649  0104CA  D005               	bra	u21720
 20650  0104CC                     u21727:
 20651  0104CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20652  0104D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20653  0104D4  50EF               	movf	indf0,w,c
 20654  0104D6                     u21720:
 20655  0104D6  0102               	movlb	2	; () banked
 20656  0104D8  6F83               	movwf	__doprnt@c& (0+255),b
 20657  0104DA  5183               	movf	__doprnt@c& (0+255),w,b
 20658                           
 20659                           ; Switch size 1, requested type "simple"
 20660                           ; Number of cases is 10, Range of values is 0 to 120
 20661                           ; switch strategies available:
 20662                           ; Name         Instructions Cycles
 20663                           ; simple_byte           31    16 (average)
 20664                           ;	Chosen strategy is simple_byte
 20665  0104DC  0A00               	xorlw	0	; case 0
 20666  0104DE  B4D8               	btfsc	status,2,c
 20667  0104E0  EF8D  F08B         	goto	u22750
 20668  0104E4  0A58               	xorlw	88	; case 88
 20669  0104E6  B4D8               	btfsc	status,2,c
 20670  0104E8  D6C0               	goto	l17598
 20671  0104EA  0A3B               	xorlw	59	; case 99
 20672  0104EC  B4D8               	btfsc	status,2,c
 20673  0104EE  D7BD               	goto	l17648
 20674  0104F0  0A07               	xorlw	7	; case 100
 20675  0104F2  B4D8               	btfsc	status,2,c
 20676  0104F4  D013               	goto	l17660
 20677  0104F6  0A02               	xorlw	2	; case 102
 20678  0104F8  B4D8               	btfsc	status,2,c
 20679  0104FA  D6B5               	goto	l17596
 20680  0104FC  0A0F               	xorlw	15	; case 105
 20681  0104FE  B4D8               	btfsc	status,2,c
 20682  010500  D00D               	goto	l17660
 20683  010502  0A05               	xorlw	5	; case 108
 20684  010504  B4D8               	btfsc	status,2,c
 20685  010506  D6AD               	goto	l17594
 20686  010508  0A1F               	xorlw	31	; case 115
 20687  01050A  B4D8               	btfsc	status,2,c
 20688  01050C  D6B0               	goto	l17600
 20689  01050E  0A06               	xorlw	6	; case 117
 20690  010510  B4D8               	btfsc	status,2,c
 20691  010512  D7C6               	goto	l17654
 20692  010514  0A0D               	xorlw	13	; case 120
 20693  010516  B4D8               	btfsc	status,2,c
 20694  010518  D6A8               	goto	l17598
 20695  01051A  D7B9               	goto	l17650
 20696  01051C                     l17660:
 20697                           
 20698                           ; BSR set to: 2
 20699                           ;doprnt.c: 844: if(flag & (0x700)) {
 20700  01051C  0E07               	movlw	7
 20701  01051E  1582               	andwf	(__doprnt@flag+1)& (0+255),w,b
 20702  010520  B4D8               	btfsc	status,2,c
 20703  010522  EF0F  F088         	goto	l17904
 20704                           
 20705                           ; BSR set to: 2
 20706                           ;doprnt.c: 846: if(flag & 0x1000)
 20707  010526  A982               	btfss	(__doprnt@flag+1)& (0+255),4,b
 20708  010528  D004               	goto	l17666
 20709                           
 20710                           ; BSR set to: 2
 20711                           ;doprnt.c: 848: prec = 6;
 20712  01052A  0E00               	movlw	0
 20713  01052C  6F80               	movwf	(__doprnt@prec+1)& (0+255),b
 20714  01052E  0E06               	movlw	6
 20715  010530  6F7F               	movwf	__doprnt@prec& (0+255),b
 20716  010532                     l17666:
 20717                           
 20718                           ; BSR set to: 2
 20719                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20720  010532  C250  FFD9         	movff	__doprnt@ap,fsr2l
 20721  010536  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 20722  01053A  CFDF F252          	movff	indf2,??__doprnt
 20723  01053E  0E04               	movlw	4
 20724  010540  26DE               	addwf	postinc2,f,c
 20725  010542  CFDF F253          	movff	indf2,??__doprnt+1
 20726  010546  0E00               	movlw	0
 20727  010548  22DD               	addwfc	postdec2,f,c
 20728  01054A  C252  FFD9         	movff	??__doprnt,fsr2l
 20729  01054E  C253  FFDA         	movff	??__doprnt+1,fsr2h
 20730  010552  CFDE F275          	movff	postinc2,__doprnt@fval
 20731  010556  CFDE F276          	movff	postinc2,__doprnt@fval+1
 20732  01055A  CFDE F277          	movff	postinc2,__doprnt@fval+2
 20733  01055E  CFDE F278          	movff	postinc2,__doprnt@fval+3
 20734                           
 20735                           ; BSR set to: 2
 20736                           ;doprnt.c: 850: if(fval < 0.0) {
 20737  010562  AF78               	btfss	(__doprnt@fval+3)& (0+255),7,b
 20738  010564  D015               	goto	l17674
 20739                           
 20740                           ; BSR set to: 2
 20741                           ;doprnt.c: 851: fval = -fval;
 20742  010566  C275  F200         	movff	__doprnt@fval,___flneg@f1
 20743  01056A  C276  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 20744  01056E  C277  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 20745  010572  C278  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 20746  010576  ECEC  F0DC         	call	___flneg
 20747  01057A  C200  F275         	movff	?___flneg,__doprnt@fval
 20748  01057E  C201  F276         	movff	?___flneg+1,__doprnt@fval+1
 20749  010582  C202  F277         	movff	?___flneg+2,__doprnt@fval+2
 20750  010586  C203  F278         	movff	?___flneg+3,__doprnt@fval+3
 20751                           
 20752                           ;doprnt.c: 852: flag |= 0x03;
 20753  01058A  0E03               	movlw	3
 20754  01058C  0102               	movlb	2	; () banked
 20755  01058E  1381               	iorwf	__doprnt@flag& (0+255),f,b
 20756  010590                     l17674:
 20757                           
 20758                           ; BSR set to: 2
 20759                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 20760  010590  0E00               	movlw	0
 20761  010592  6F70               	movwf	(__doprnt@eexp+1)& (0+255),b
 20762  010594  0E00               	movlw	0
 20763  010596  6F6F               	movwf	__doprnt@eexp& (0+255),b
 20764                           
 20765                           ; BSR set to: 2
 20766                           ;doprnt.c: 855: if( fval!=0) {
 20767  010598  C275  F200         	movff	__doprnt@fval,___fleq@ff1
 20768  01059C  C276  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 20769  0105A0  C277  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 20770  0105A4  C278  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 20771  0105A8  0E00               	movlw	0
 20772  0105AA  6F04               	movwf	___fleq@ff2& (0+255),b
 20773  0105AC  0E00               	movlw	0
 20774  0105AE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 20775  0105B0  0E00               	movlw	0
 20776  0105B2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 20777  0105B4  0E00               	movlw	0
 20778  0105B6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 20779  0105B8  ECED  F0D3         	call	___fleq	;wreg free
 20780  0105BC  0102               	movlb	2	; () banked
 20781  0105BE  B0D8               	btfsc	status,0,c
 20782  0105C0  D084               	goto	l17702
 20783                           
 20784                           ; BSR set to: 2
 20785                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 20786  0105C2  3577               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 20787  0105C4  3578               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 20788  0105C6  0F82               	addlw	130
 20789  0105C8  6F6F               	movwf	__doprnt@eexp& (0+255),b
 20790  0105CA  6B70               	clrf	(__doprnt@eexp+1)& (0+255),b
 20791  0105CC  0EFF               	movlw	255
 20792  0105CE  2370               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 20793                           
 20794                           ; BSR set to: 2
 20795                           ;doprnt.c: 857: eexp--;
 20796  0105D0  076F               	decf	__doprnt@eexp& (0+255),f,b
 20797  0105D2  A0D8               	btfss	status,0,c
 20798  0105D4  0770               	decf	(__doprnt@eexp+1)& (0+255),f,b
 20799                           
 20800                           ; BSR set to: 2
 20801                           ;doprnt.c: 858: eexp *= 3;
 20802  0105D6  C26F  F200         	movff	__doprnt@eexp,___wmul@multiplier
 20803  0105DA  C270  F201         	movff	__doprnt@eexp+1,___wmul@multiplier+1
 20804  0105DE  0E00               	movlw	0
 20805  0105E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20806  0105E2  0E03               	movlw	3
 20807  0105E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20808  0105E6  ECB5  F0DD         	call	___wmul	;wreg free
 20809  0105EA  C200  F26F         	movff	?___wmul,__doprnt@eexp
 20810  0105EE  C201  F270         	movff	?___wmul+1,__doprnt@eexp+1
 20811                           
 20812                           ;doprnt.c: 859: eexp /= 10;
 20813  0105F2  C26F  F206         	movff	__doprnt@eexp,___awdiv@dividend
 20814  0105F6  C270  F207         	movff	__doprnt@eexp+1,___awdiv@dividend+1
 20815  0105FA  0E00               	movlw	0
 20816  0105FC  0102               	movlb	2	; () banked
 20817  0105FE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 20818  010600  0E0A               	movlw	10
 20819  010602  6F08               	movwf	___awdiv@divisor& (0+255),b
 20820  010604  EC78  F0D4         	call	___awdiv	;wreg free
 20821  010608  C206  F26F         	movff	?___awdiv,__doprnt@eexp
 20822  01060C  C207  F270         	movff	?___awdiv+1,__doprnt@eexp+1
 20823                           
 20824                           ;doprnt.c: 860: if(eexp < 0)
 20825  010610  0102               	movlb	2	; () banked
 20826  010612  AF70               	btfss	(__doprnt@eexp+1)& (0+255),7,b
 20827  010614  D003               	goto	l17690
 20828                           
 20829                           ; BSR set to: 2
 20830                           ;doprnt.c: 861: eexp--;
 20831  010616  076F               	decf	__doprnt@eexp& (0+255),f,b
 20832  010618  A0D8               	btfss	status,0,c
 20833  01061A  0770               	decf	(__doprnt@eexp+1)& (0+255),f,b
 20834  01061C                     l17690:
 20835                           
 20836                           ; BSR set to: 2
 20837                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 20838  01061C  516F               	movf	__doprnt@eexp& (0+255),w,b
 20839  01061E  0800               	sublw	0
 20840  010620  ECEC  F0A8         	call	_scale
 20841  010624  C227  F271         	movff	?_scale,__doprnt@tmpval
 20842  010628  C228  F272         	movff	?_scale+1,__doprnt@tmpval+1
 20843  01062C  C229  F273         	movff	?_scale+2,__doprnt@tmpval+2
 20844  010630  C22A  F274         	movff	?_scale+3,__doprnt@tmpval+3
 20845                           
 20846                           ;doprnt.c: 866: tmpval.integ *= fval;
 20847  010634  C271  F20E         	movff	__doprnt@tmpval,___flmul@b
 20848  010638  C272  F20F         	movff	__doprnt@tmpval+1,___flmul@b+1
 20849  01063C  C273  F210         	movff	__doprnt@tmpval+2,___flmul@b+2
 20850  010640  C274  F211         	movff	__doprnt@tmpval+3,___flmul@b+3
 20851  010644  C275  F212         	movff	__doprnt@fval,___flmul@a
 20852  010648  C276  F213         	movff	__doprnt@fval+1,___flmul@a+1
 20853  01064C  C277  F214         	movff	__doprnt@fval+2,___flmul@a+2
 20854  010650  C278  F215         	movff	__doprnt@fval+3,___flmul@a+3
 20855  010654  ECA8  F0B0         	call	___flmul	;wreg free
 20856  010658  C20E  F271         	movff	?___flmul,__doprnt@tmpval
 20857  01065C  C20F  F272         	movff	?___flmul+1,__doprnt@tmpval+1
 20858  010660  C210  F273         	movff	?___flmul+2,__doprnt@tmpval+2
 20859  010664  C211  F274         	movff	?___flmul+3,__doprnt@tmpval+3
 20860                           
 20861                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 20862  010668  C271  F200         	movff	__doprnt@tmpval,___flge@ff1
 20863  01066C  C272  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 20864  010670  C273  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 20865  010674  C274  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 20866  010678  0E00               	movlw	0
 20867  01067A  0102               	movlb	2	; () banked
 20868  01067C  6F04               	movwf	___flge@ff2& (0+255),b
 20869  01067E  0E00               	movlw	0
 20870  010680  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 20871  010682  0E80               	movlw	128
 20872  010684  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 20873  010686  0E3F               	movlw	63
 20874  010688  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 20875  01068A  EC74  F0CE         	call	___flge	;wreg free
 20876  01068E  0102               	movlb	2	; () banked
 20877  010690  B0D8               	btfsc	status,0,c
 20878  010692  D004               	goto	l17698
 20879                           
 20880                           ; BSR set to: 2
 20881                           ;doprnt.c: 868: eexp--;
 20882  010694  076F               	decf	__doprnt@eexp& (0+255),f,b
 20883  010696  A0D8               	btfss	status,0,c
 20884  010698  0770               	decf	(__doprnt@eexp+1)& (0+255),f,b
 20885  01069A  D017               	goto	l17702
 20886  01069C                     l17698:
 20887                           
 20888                           ; BSR set to: 2
 20889                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 20890  01069C  C271  F200         	movff	__doprnt@tmpval,___flge@ff1
 20891  0106A0  C272  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 20892  0106A4  C273  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 20893  0106A8  C274  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 20894  0106AC  0E00               	movlw	0
 20895  0106AE  6F04               	movwf	___flge@ff2& (0+255),b
 20896  0106B0  0E00               	movlw	0
 20897  0106B2  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 20898  0106B4  0E20               	movlw	32
 20899  0106B6  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 20900  0106B8  0E41               	movlw	65
 20901  0106BA  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 20902  0106BC  EC74  F0CE         	call	___flge	;wreg free
 20903  0106C0  0102               	movlb	2	; () banked
 20904  0106C2  A0D8               	btfss	status,0,c
 20905  0106C4  D002               	goto	l17702
 20906                           
 20907                           ; BSR set to: 2
 20908                           ;doprnt.c: 870: eexp++;
 20909  0106C6  4B6F               	infsnz	__doprnt@eexp& (0+255),f,b
 20910  0106C8  2B70               	incf	(__doprnt@eexp+1)& (0+255),f,b
 20911  0106CA                     l17702:
 20912                           
 20913                           ; BSR set to: 2
 20914                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 20915  0106CA  BF80               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 20916  0106CC  D006               	goto	u21800
 20917  0106CE  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 20918  0106D0  E121               	bnz	l17706
 20919  0106D2  0E0D               	movlw	13
 20920  0106D4  5D7F               	subwf	__doprnt@prec& (0+255),w,b
 20921  0106D6  B0D8               	btfsc	status,0,c
 20922  0106D8  D01D               	goto	l17706
 20923  0106DA                     u21800:
 20924                           
 20925                           ; BSR set to: 2
 20926                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 20927  0106DA  C275  F234         	movff	__doprnt@fval,___fladd@b
 20928  0106DE  C276  F235         	movff	__doprnt@fval+1,___fladd@b+1
 20929  0106E2  C277  F236         	movff	__doprnt@fval+2,___fladd@b+2
 20930  0106E6  C278  F237         	movff	__doprnt@fval+3,___fladd@b+3
 20931  0106EA  517F               	movf	__doprnt@prec& (0+255),w,b
 20932  0106EC  EC3A  F0BA         	call	_fround
 20933  0106F0  C227  F238         	movff	?_fround,___fladd@a
 20934  0106F4  C228  F239         	movff	?_fround+1,___fladd@a+1
 20935  0106F8  C229  F23A         	movff	?_fround+2,___fladd@a+2
 20936  0106FC  C22A  F23B         	movff	?_fround+3,___fladd@a+3
 20937  010700  ECA5  F0B5         	call	___fladd	;wreg free
 20938  010704  C234  F275         	movff	?___fladd,__doprnt@fval
 20939  010708  C235  F276         	movff	?___fladd+1,__doprnt@fval+1
 20940  01070C  C236  F277         	movff	?___fladd+2,__doprnt@fval+2
 20941  010710  C237  F278         	movff	?___fladd+3,__doprnt@fval+3
 20942  010714                     l17706:
 20943                           
 20944                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 20945  010714  0102               	movlb	2	; () banked
 20946  010716  BF70               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 20947  010718  D006               	goto	u21810
 20948  01071A  5170               	movf	(__doprnt@eexp+1)& (0+255),w,b
 20949  01071C  E131               	bnz	l17714
 20950  01071E  0E0A               	movlw	10
 20951  010720  5D6F               	subwf	__doprnt@eexp& (0+255),w,b
 20952  010722  B0D8               	btfsc	status,0,c
 20953  010724  D02D               	goto	u21840
 20954  010726                     u21810:
 20955                           
 20956                           ; BSR set to: 2
 20957  010726  C275  F200         	movff	__doprnt@fval,___fleq@ff1
 20958  01072A  C276  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 20959  01072E  C277  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 20960  010732  C278  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 20961  010736  0E00               	movlw	0
 20962  010738  6F04               	movwf	___fleq@ff2& (0+255),b
 20963  01073A  0E00               	movlw	0
 20964  01073C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 20965  01073E  0E00               	movlw	0
 20966  010740  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 20967  010742  0E00               	movlw	0
 20968  010744  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 20969  010746  ECED  F0D3         	call	___fleq	;wreg free
 20970  01074A  0102               	movlb	2	; () banked
 20971  01074C  B0D8               	btfsc	status,0,c
 20972  01074E  D062               	goto	l17728
 20973                           
 20974                           ; BSR set to: 2
 20975  010750  C275  F230         	movff	__doprnt@fval,___fltol@f1
 20976  010754  C276  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 20977  010758  C277  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 20978  01075C  C278  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 20979  010760  EC72  F0D0         	call	___fltol	;wreg free
 20980  010764  0102               	movlb	2	; () banked
 20981  010766  5130               	movf	?___fltol& (0+255),w,b
 20982  010768  1131               	iorwf	(?___fltol+1)& (0+255),w,b
 20983  01076A  1132               	iorwf	(?___fltol+2)& (0+255),w,b
 20984  01076C  1133               	iorwf	(?___fltol+3)& (0+255),w,b
 20985  01076E  B4D8               	btfsc	status,2,c
 20986                           
 20987                           ; BSR set to: 2
 20988  010770  BF70               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 20989  010772  D050               	goto	l17728
 20990  010774  5170               	movf	(__doprnt@eexp+1)& (0+255),w,b
 20991  010776  E104               	bnz	u21840
 20992  010778  0E02               	movlw	2
 20993  01077A  5D6F               	subwf	__doprnt@eexp& (0+255),w,b
 20994  01077C  A0D8               	btfss	status,0,c
 20995  01077E  D04A               	goto	l17728
 20996  010780                     u21840:
 20997  010780                     l17714:
 20998                           
 20999                           ; BSR set to: 2
 21000                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 21001  010780  C271  F200         	movff	__doprnt@tmpval,___flge@ff1
 21002  010784  C272  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 21003  010788  C273  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 21004  01078C  C274  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 21005  010790  0E5F               	movlw	95
 21006  010792  6F04               	movwf	___flge@ff2& (0+255),b
 21007  010794  0E70               	movlw	112
 21008  010796  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 21009  010798  0E89               	movlw	137
 21010  01079A  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 21011  01079C  0E40               	movlw	64
 21012  01079E  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 21013  0107A0  EC74  F0CE         	call	___flge	;wreg free
 21014  0107A4  0102               	movlb	2	; () banked
 21015  0107A6  B0D8               	btfsc	status,0,c
 21016  0107A8  D002               	goto	l17718
 21017                           
 21018                           ; BSR set to: 2
 21019                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 21020  0107AA  0EF7               	movlw	247
 21021  0107AC  D001               	goto	L7
 21022  0107AE                     l17718:
 21023                           
 21024                           ; BSR set to: 2
 21025                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 21026  0107AE  0EF8               	movlw	248
 21027  0107B0                     L7:
 21028  0107B0  276F               	addwf	__doprnt@eexp& (0+255),f,b
 21029  0107B2  0EFF               	movlw	255
 21030  0107B4  2370               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 21031                           
 21032                           ; BSR set to: 2
 21033                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 21034  0107B6  516F               	movf	__doprnt@eexp& (0+255),w,b
 21035  0107B8  ECEC  F0A8         	call	_scale
 21036  0107BC  C227  F271         	movff	?_scale,__doprnt@tmpval
 21037  0107C0  C228  F272         	movff	?_scale+1,__doprnt@tmpval+1
 21038  0107C4  C229  F273         	movff	?_scale+2,__doprnt@tmpval+2
 21039  0107C8  C22A  F274         	movff	?_scale+3,__doprnt@tmpval+3
 21040  0107CC  C275  F200         	movff	__doprnt@fval,__div_to_l_@f1
 21041  0107D0  C276  F201         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 21042  0107D4  C277  F202         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 21043  0107D8  C278  F203         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 21044  0107DC  C271  F204         	movff	__doprnt@tmpval,__div_to_l_@f2
 21045  0107E0  C272  F205         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 21046  0107E4  C273  F206         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 21047  0107E8  C274  F207         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 21048  0107EC  EC8D  F0CC         	call	__div_to_l_	;wreg free
 21049  0107F0  C200  F279         	movff	?__div_to_l_,__doprnt@val
 21050  0107F4  C201  F27A         	movff	?__div_to_l_+1,__doprnt@val+1
 21051  0107F8  C202  F27B         	movff	?__div_to_l_+2,__doprnt@val+2
 21052  0107FC  C203  F27C         	movff	?__div_to_l_+3,__doprnt@val+3
 21053                           
 21054                           ;doprnt.c: 1148: fval = 0.0;
 21055  010800  0E00               	movlw	0
 21056  010802  0102               	movlb	2	; () banked
 21057  010804  6F75               	movwf	__doprnt@fval& (0+255),b
 21058  010806  0E00               	movlw	0
 21059  010808  6F76               	movwf	(__doprnt@fval+1)& (0+255),b
 21060  01080A  0E00               	movlw	0
 21061  01080C  6F77               	movwf	(__doprnt@fval+2)& (0+255),b
 21062  01080E  0E00               	movlw	0
 21063  010810  6F78               	movwf	(__doprnt@fval+3)& (0+255),b
 21064                           
 21065                           ;doprnt.c: 1149: } else {
 21066  010812  D03C               	goto	l17732
 21067  010814                     l17728:
 21068                           
 21069                           ; BSR set to: 2
 21070                           ;doprnt.c: 1150: val = (unsigned long)fval;
 21071  010814  C275  F230         	movff	__doprnt@fval,___fltol@f1
 21072  010818  C276  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 21073  01081C  C277  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 21074  010820  C278  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 21075  010824  EC72  F0D0         	call	___fltol	;wreg free
 21076  010828  C230  F279         	movff	?___fltol,__doprnt@val
 21077  01082C  C231  F27A         	movff	?___fltol+1,__doprnt@val+1
 21078  010830  C232  F27B         	movff	?___fltol+2,__doprnt@val+2
 21079  010834  C233  F27C         	movff	?___fltol+3,__doprnt@val+3
 21080                           
 21081                           ;doprnt.c: 1151: fval -= (double)val;
 21082  010838  C275  F244         	movff	__doprnt@fval,___flsub@b
 21083  01083C  C276  F245         	movff	__doprnt@fval+1,___flsub@b+1
 21084  010840  C277  F246         	movff	__doprnt@fval+2,___flsub@b+2
 21085  010844  C278  F247         	movff	__doprnt@fval+3,___flsub@b+3
 21086  010848  C279  F200         	movff	__doprnt@val,___xxtofl@val
 21087  01084C  C27A  F201         	movff	__doprnt@val+1,___xxtofl@val+1
 21088  010850  C27B  F202         	movff	__doprnt@val+2,___xxtofl@val+2
 21089  010854  C27C  F203         	movff	__doprnt@val+3,___xxtofl@val+3
 21090  010858  0E00               	movlw	0
 21091  01085A  EC19  F0C9         	call	___xxtofl
 21092  01085E  C200  F248         	movff	?___xxtofl,___flsub@a
 21093  010862  C201  F249         	movff	?___xxtofl+1,___flsub@a+1
 21094  010866  C202  F24A         	movff	?___xxtofl+2,___flsub@a+2
 21095  01086A  C203  F24B         	movff	?___xxtofl+3,___flsub@a+3
 21096  01086E  EC91  F0D9         	call	___flsub	;wreg free
 21097  010872  C244  F275         	movff	?___flsub,__doprnt@fval
 21098  010876  C245  F276         	movff	?___flsub+1,__doprnt@fval+1
 21099  01087A  C246  F277         	movff	?___flsub+2,__doprnt@fval+2
 21100  01087E  C247  F278         	movff	?___flsub+3,__doprnt@fval+3
 21101                           
 21102                           ;doprnt.c: 1152: eexp = 0;
 21103  010882  0E00               	movlw	0
 21104  010884  0102               	movlb	2	; () banked
 21105  010886  6F70               	movwf	(__doprnt@eexp+1)& (0+255),b
 21106  010888  0E00               	movlw	0
 21107  01088A  6F6F               	movwf	__doprnt@eexp& (0+255),b
 21108  01088C                     l17732:
 21109                           
 21110                           ; BSR set to: 2
 21111                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 21112  01088C  0E01               	movlw	1
 21113  01088E  6F83               	movwf	__doprnt@c& (0+255),b
 21114  010890                     l17734:
 21115                           
 21116                           ; BSR set to: 2
 21117  010890  0E0A               	movlw	10
 21118  010892  1983               	xorwf	__doprnt@c& (0+255),w,b
 21119  010894  B4D8               	btfsc	status,2,c
 21120  010896  D01B               	goto	l17746
 21121                           
 21122                           ; BSR set to: 2
 21123                           ;doprnt.c: 1156: if(val < dpowers[c])
 21124  010898  5183               	movf	__doprnt@c& (0+255),w,b
 21125  01089A  0D04               	mullw	4
 21126  01089C  0E1F               	movlw	low _dpowers
 21127  01089E  24F3               	addwf	prodl,w,c
 21128  0108A0  6EF6               	movwf	tblptrl,c
 21129  0108A2  0EEA               	movlw	high _dpowers
 21130  0108A4  20F4               	addwfc	prodh,w,c
 21131  0108A6  6EF7               	movwf	tblptrh,c
 21132  0108A8                     	if	1	;There are 3 active tblptr bytes
 21133  0108A8  6AF8               	clrf	tblptru,c
 21134  0108AA  0E00               	movlw	low (__mediumconst shr (0+16))
 21135  0108AC  22F8               	addwfc	tblptru,f,c
 21136  0108AE                     	endif
 21137  0108AE  0009               	tblrd		*+
 21138  0108B0  50F5               	movf	tablat,w,c
 21139  0108B2  5D79               	subwf	__doprnt@val& (0+255),w,b
 21140  0108B4  0009               	tblrd		*+
 21141  0108B6  50F5               	movf	tablat,w,c
 21142  0108B8  597A               	subwfb	(__doprnt@val+1)& (0+255),w,b
 21143  0108BA  0009               	tblrd		*+
 21144  0108BC  50F5               	movf	tablat,w,c
 21145  0108BE  597B               	subwfb	(__doprnt@val+2)& (0+255),w,b
 21146  0108C0  0009               	tblrd		*+
 21147  0108C2  50F5               	movf	tablat,w,c
 21148  0108C4  597C               	subwfb	(__doprnt@val+3)& (0+255),w,b
 21149  0108C6  A0D8               	btfss	status,0,c
 21150  0108C8  D002               	goto	l17746
 21151                           
 21152                           ; BSR set to: 2
 21153  0108CA  2B83               	incf	__doprnt@c& (0+255),f,b
 21154  0108CC  D7E1               	goto	l17734
 21155  0108CE                     l17746:
 21156                           
 21157                           ; BSR set to: 2
 21158                           ;doprnt.c: 1161: width -= prec + c + eexp;
 21159  0108CE  5183               	movf	__doprnt@c& (0+255),w,b
 21160  0108D0  257F               	addwf	__doprnt@prec& (0+255),w,b
 21161  0108D2  6F52               	movwf	??__doprnt& (0+255),b
 21162  0108D4  0E00               	movlw	0
 21163  0108D6  2180               	addwfc	(__doprnt@prec+1)& (0+255),w,b
 21164  0108D8  6F53               	movwf	(??__doprnt+1)& (0+255),b
 21165  0108DA  516F               	movf	__doprnt@eexp& (0+255),w,b
 21166  0108DC  2752               	addwf	??__doprnt& (0+255),f,b
 21167  0108DE  5170               	movf	(__doprnt@eexp+1)& (0+255),w,b
 21168  0108E0  2353               	addwfc	(??__doprnt+1)& (0+255),f,b
 21169  0108E2  5152               	movf	??__doprnt& (0+255),w,b
 21170  0108E4  5F7D               	subwf	__doprnt@width& (0+255),f,b
 21171  0108E6  5153               	movf	(??__doprnt+1)& (0+255),w,b
 21172  0108E8  5B7E               	subwfb	(__doprnt@width+1)& (0+255),f,b
 21173                           
 21174                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 21175  0108EA  517F               	movf	__doprnt@prec& (0+255),w,b
 21176  0108EC  1180               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 21177  0108EE  B4D8               	btfsc	status,2,c
 21178  0108F0  D003               	goto	l17750
 21179                           
 21180                           ; BSR set to: 2
 21181                           ;doprnt.c: 1167: width--;
 21182  0108F2  077D               	decf	__doprnt@width& (0+255),f,b
 21183  0108F4  A0D8               	btfss	status,0,c
 21184  0108F6  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 21185  0108F8                     l17750:
 21186                           
 21187                           ; BSR set to: 2
 21188                           ;doprnt.c: 1168: if(flag & 0x03)
 21189  0108F8  0E03               	movlw	3
 21190  0108FA  1581               	andwf	__doprnt@flag& (0+255),w,b
 21191  0108FC  6F52               	movwf	??__doprnt& (0+255),b
 21192  0108FE  0E00               	movlw	0
 21193  010900  1582               	andwf	(__doprnt@flag+1)& (0+255),w,b
 21194  010902  6F53               	movwf	(??__doprnt+1)& (0+255),b
 21195  010904  5152               	movf	??__doprnt& (0+255),w,b
 21196  010906  1153               	iorwf	(??__doprnt+1)& (0+255),w,b
 21197  010908  B4D8               	btfsc	status,2,c
 21198  01090A  D003               	goto	l17754
 21199                           
 21200                           ; BSR set to: 2
 21201                           ;doprnt.c: 1169: width--;
 21202  01090C  077D               	decf	__doprnt@width& (0+255),f,b
 21203  01090E  A0D8               	btfss	status,0,c
 21204  010910  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 21205  010912                     l17754:
 21206                           
 21207                           ; BSR set to: 2
 21208                           ;doprnt.c: 1172: if(flag & 0x04) {
 21209  010912  A581               	btfss	__doprnt@flag& (0+255),2,b
 21210  010914  D0F0               	goto	l17806
 21211                           
 21212                           ; BSR set to: 2
 21213                           ;doprnt.c: 1174: if(flag & 0x02)
 21214  010916  A381               	btfss	__doprnt@flag& (0+255),1,b
 21215  010918  D041               	goto	l2393
 21216                           
 21217                           ; BSR set to: 2
 21218  01091A  EE20 F002          	lfsr	2,2
 21219  01091E  514C               	movf	__doprnt@pb& (0+255),w,b
 21220  010920  26D9               	addwf	fsr2l,f,c
 21221  010922  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21222  010924  22DA               	addwfc	fsr2h,f,c
 21223  010926  50DE               	movf	postinc2,w,c
 21224  010928  10DE               	iorwf	postinc2,w,c
 21225  01092A  10DE               	iorwf	postinc2,w,c
 21226  01092C  B4D8               	btfsc	status,2,c
 21227  01092E  D01D               	goto	l2395
 21228                           
 21229                           ; BSR set to: 2
 21230  010930  B181               	btfsc	__doprnt@flag& (0+255),0,b
 21231  010932  D004               	goto	l17764
 21232                           
 21233                           ; BSR set to: 2
 21234  010934  0E00               	movlw	0
 21235  010936  6F5C               	movwf	(__doprnt$4883+1)& (0+255),b
 21236  010938  0E2B               	movlw	43
 21237  01093A  D003               	goto	L8
 21238  01093C                     l17764:
 21239                           
 21240                           ; BSR set to: 2
 21241  01093C  0E00               	movlw	0
 21242  01093E  6F5C               	movwf	(__doprnt$4883+1)& (0+255),b
 21243  010940  0E2D               	movlw	45
 21244  010942                     L8:
 21245  010942  6F5B               	movwf	__doprnt$4883& (0+255),b
 21246                           
 21247                           ; BSR set to: 2
 21248  010944  EE20 F002          	lfsr	2,2
 21249  010948  514C               	movf	__doprnt@pb& (0+255),w,b
 21250  01094A  26D9               	addwf	fsr2l,f,c
 21251  01094C  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21252  01094E  22DA               	addwfc	fsr2h,f,c
 21253  010950  D801               	call	u21948
 21254  010952  D091               	goto	l17794
 21255  010954                     u21948:
 21256  010954  0005               	push	
 21257  010956  6EFA               	movwf	pclath,c
 21258  010958  50DE               	movf	postinc2,w,c
 21259  01095A  6EFD               	movwf	tosl,c
 21260  01095C  50DE               	movf	postinc2,w,c
 21261  01095E  6EFE               	movwf	tosh,c
 21262  010960  50DE               	movf	postinc2,w,c
 21263  010962  6EFF               	movwf	tosu,c
 21264  010964  50FA               	movf	pclath,w,c
 21265  010966  515B               	movf	__doprnt$4883& (0+255),w,b
 21266  010968  0012               	return		;indir
 21267  01096A                     l2395:
 21268                           
 21269                           ; BSR set to: 2
 21270  01096A  B181               	btfsc	__doprnt@flag& (0+255),0,b
 21271  01096C  D004               	goto	l17770
 21272                           
 21273                           ; BSR set to: 2
 21274  01096E  0E00               	movlw	0
 21275  010970  6F5E               	movwf	(__doprnt$4884+1)& (0+255),b
 21276  010972  0E2B               	movlw	43
 21277  010974  D003               	goto	L9
 21278  010976                     l17770:
 21279                           
 21280                           ; BSR set to: 2
 21281  010976  0E00               	movlw	0
 21282  010978  6F5E               	movwf	(__doprnt$4884+1)& (0+255),b
 21283  01097A  0E2D               	movlw	45
 21284  01097C                     L9:
 21285  01097C  6F5D               	movwf	__doprnt$4884& (0+255),b
 21286                           
 21287                           ; BSR set to: 2
 21288  01097E  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21289  010982  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21290  010986  CFDE F252          	movff	postinc2,??__doprnt
 21291  01098A  CFDD F253          	movff	postdec2,??__doprnt+1
 21292  01098E  C252  FFD9         	movff	??__doprnt,fsr2l
 21293  010992  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21294  010996  C25D  FFDF         	movff	__doprnt$4884,indf2
 21295  01099A  D02E               	goto	l17782
 21296  01099C                     l2393:
 21297                           
 21298                           ; BSR set to: 2
 21299                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 21300  01099C  A181               	btfss	__doprnt@flag& (0+255),0,b
 21301  01099E  D06B               	goto	l17794
 21302                           
 21303                           ; BSR set to: 2
 21304  0109A0  EE20 F002          	lfsr	2,2
 21305  0109A4  514C               	movf	__doprnt@pb& (0+255),w,b
 21306  0109A6  26D9               	addwf	fsr2l,f,c
 21307  0109A8  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21308  0109AA  22DA               	addwfc	fsr2h,f,c
 21309  0109AC  50DE               	movf	postinc2,w,c
 21310  0109AE  10DE               	iorwf	postinc2,w,c
 21311  0109B0  10DE               	iorwf	postinc2,w,c
 21312  0109B2  B4D8               	btfsc	status,2,c
 21313  0109B4  D013               	goto	l17780
 21314                           
 21315                           ; BSR set to: 2
 21316  0109B6  EE20 F002          	lfsr	2,2
 21317  0109BA  514C               	movf	__doprnt@pb& (0+255),w,b
 21318  0109BC  26D9               	addwf	fsr2l,f,c
 21319  0109BE  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21320  0109C0  22DA               	addwfc	fsr2h,f,c
 21321  0109C2  D801               	call	u21988
 21322  0109C4  D058               	goto	l17794
 21323  0109C6                     u21988:
 21324  0109C6  0005               	push	
 21325  0109C8  6EFA               	movwf	pclath,c
 21326  0109CA  50DE               	movf	postinc2,w,c
 21327  0109CC  6EFD               	movwf	tosl,c
 21328  0109CE  50DE               	movf	postinc2,w,c
 21329  0109D0  6EFE               	movwf	tosh,c
 21330  0109D2  50DE               	movf	postinc2,w,c
 21331  0109D4  6EFF               	movwf	tosu,c
 21332  0109D6  50FA               	movf	pclath,w,c
 21333  0109D8  0E20               	movlw	32
 21334  0109DA  0012               	return		;indir
 21335  0109DC                     l17780:
 21336                           
 21337                           ; BSR set to: 2
 21338  0109DC  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21339  0109E0  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21340  0109E4  CFDE F252          	movff	postinc2,??__doprnt
 21341  0109E8  CFDD F253          	movff	postdec2,??__doprnt+1
 21342  0109EC  C252  FFD9         	movff	??__doprnt,fsr2l
 21343  0109F0  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21344  0109F4  0E20               	movlw	32
 21345  0109F6  6EDF               	movwf	indf2,c
 21346  0109F8                     l17782:
 21347                           
 21348                           ; BSR set to: 2
 21349  0109F8  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21350  0109FC  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21351  010A00  2ADE               	incf	postinc2,f,c
 21352  010A02  0E00               	movlw	0
 21353  010A04  22DD               	addwfc	postdec2,f,c
 21354  010A06  D037               	goto	l17794
 21355  010A08                     l17784:
 21356                           
 21357                           ; BSR set to: 2
 21358  010A08  EE20 F002          	lfsr	2,2
 21359  010A0C  514C               	movf	__doprnt@pb& (0+255),w,b
 21360  010A0E  26D9               	addwf	fsr2l,f,c
 21361  010A10  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21362  010A12  22DA               	addwfc	fsr2h,f,c
 21363  010A14  50DE               	movf	postinc2,w,c
 21364  010A16  10DE               	iorwf	postinc2,w,c
 21365  010A18  10DE               	iorwf	postinc2,w,c
 21366  010A1A  B4D8               	btfsc	status,2,c
 21367  010A1C  D013               	goto	l17788
 21368                           
 21369                           ; BSR set to: 2
 21370  010A1E  EE20 F002          	lfsr	2,2
 21371  010A22  514C               	movf	__doprnt@pb& (0+255),w,b
 21372  010A24  26D9               	addwf	fsr2l,f,c
 21373  010A26  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21374  010A28  22DA               	addwfc	fsr2h,f,c
 21375  010A2A  D801               	call	u22008
 21376  010A2C  D020               	goto	l17792
 21377  010A2E                     u22008:
 21378  010A2E  0005               	push	
 21379  010A30  6EFA               	movwf	pclath,c
 21380  010A32  50DE               	movf	postinc2,w,c
 21381  010A34  6EFD               	movwf	tosl,c
 21382  010A36  50DE               	movf	postinc2,w,c
 21383  010A38  6EFE               	movwf	tosh,c
 21384  010A3A  50DE               	movf	postinc2,w,c
 21385  010A3C  6EFF               	movwf	tosu,c
 21386  010A3E  50FA               	movf	pclath,w,c
 21387  010A40  0E30               	movlw	48
 21388  010A42  0012               	return		;indir
 21389  010A44                     l17788:
 21390                           
 21391                           ; BSR set to: 2
 21392  010A44  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21393  010A48  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21394  010A4C  CFDE F252          	movff	postinc2,??__doprnt
 21395  010A50  CFDD F253          	movff	postdec2,??__doprnt+1
 21396  010A54  C252  FFD9         	movff	??__doprnt,fsr2l
 21397  010A58  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21398  010A5C  0E30               	movlw	48
 21399  010A5E  6EDF               	movwf	indf2,c
 21400                           
 21401                           ; BSR set to: 2
 21402  010A60  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21403  010A64  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21404  010A68  2ADE               	incf	postinc2,f,c
 21405  010A6A  0E00               	movlw	0
 21406  010A6C  22DD               	addwfc	postdec2,f,c
 21407  010A6E                     l17792:
 21408                           
 21409                           ;doprnt.c: 1189: width--;
 21410  010A6E  0102               	movlb	2	; () banked
 21411  010A70  077D               	decf	__doprnt@width& (0+255),f,b
 21412  010A72  A0D8               	btfss	status,0,c
 21413  010A74  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 21414  010A76                     l17794:
 21415  010A76  0102               	movlb	2	; () banked
 21416  010A78  BF7E               	btfsc	(__doprnt@width+1)& (0+255),7,b
 21417  010A7A  D12F               	goto	l17844
 21418  010A7C  517E               	movf	(__doprnt@width+1)& (0+255),w,b
 21419  010A7E  E1C4               	bnz	l17784
 21420  010A80  057D               	decf	__doprnt@width& (0+255),w,b
 21421  010A82  A0D8               	btfss	status,0,c
 21422  010A84  D12A               	goto	l17844
 21423  010A86  D7C0               	goto	l17784
 21424  010A88                     l17796:
 21425                           
 21426                           ; BSR set to: 2
 21427  010A88  EE20 F002          	lfsr	2,2
 21428  010A8C  514C               	movf	__doprnt@pb& (0+255),w,b
 21429  010A8E  26D9               	addwf	fsr2l,f,c
 21430  010A90  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21431  010A92  22DA               	addwfc	fsr2h,f,c
 21432  010A94  50DE               	movf	postinc2,w,c
 21433  010A96  10DE               	iorwf	postinc2,w,c
 21434  010A98  10DE               	iorwf	postinc2,w,c
 21435  010A9A  B4D8               	btfsc	status,2,c
 21436  010A9C  D013               	goto	l17800
 21437                           
 21438                           ; BSR set to: 2
 21439  010A9E  EE20 F002          	lfsr	2,2
 21440  010AA2  514C               	movf	__doprnt@pb& (0+255),w,b
 21441  010AA4  26D9               	addwf	fsr2l,f,c
 21442  010AA6  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21443  010AA8  22DA               	addwfc	fsr2h,f,c
 21444  010AAA  D801               	call	u22038
 21445  010AAC  D020               	goto	l17804
 21446  010AAE                     u22038:
 21447  010AAE  0005               	push	
 21448  010AB0  6EFA               	movwf	pclath,c
 21449  010AB2  50DE               	movf	postinc2,w,c
 21450  010AB4  6EFD               	movwf	tosl,c
 21451  010AB6  50DE               	movf	postinc2,w,c
 21452  010AB8  6EFE               	movwf	tosh,c
 21453  010ABA  50DE               	movf	postinc2,w,c
 21454  010ABC  6EFF               	movwf	tosu,c
 21455  010ABE  50FA               	movf	pclath,w,c
 21456  010AC0  0E20               	movlw	32
 21457  010AC2  0012               	return		;indir
 21458  010AC4                     l17800:
 21459                           
 21460                           ; BSR set to: 2
 21461  010AC4  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21462  010AC8  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21463  010ACC  CFDE F252          	movff	postinc2,??__doprnt
 21464  010AD0  CFDD F253          	movff	postdec2,??__doprnt+1
 21465  010AD4  C252  FFD9         	movff	??__doprnt,fsr2l
 21466  010AD8  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21467  010ADC  0E20               	movlw	32
 21468  010ADE  6EDF               	movwf	indf2,c
 21469                           
 21470                           ; BSR set to: 2
 21471  010AE0  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21472  010AE4  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21473  010AE8  2ADE               	incf	postinc2,f,c
 21474  010AEA  0E00               	movlw	0
 21475  010AEC  22DD               	addwfc	postdec2,f,c
 21476  010AEE                     l17804:
 21477                           
 21478                           ;doprnt.c: 1201: width--;
 21479  010AEE  0102               	movlb	2	; () banked
 21480  010AF0  077D               	decf	__doprnt@width& (0+255),f,b
 21481  010AF2  A0D8               	btfss	status,0,c
 21482  010AF4  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 21483  010AF6                     l17806:
 21484                           
 21485                           ; BSR set to: 2
 21486  010AF6  BF7E               	btfsc	(__doprnt@width+1)& (0+255),7,b
 21487  010AF8  D005               	goto	u22040
 21488  010AFA  517E               	movf	(__doprnt@width+1)& (0+255),w,b
 21489  010AFC  E1C5               	bnz	l17796
 21490  010AFE  057D               	decf	__doprnt@width& (0+255),w,b
 21491  010B00  B0D8               	btfsc	status,0,c
 21492  010B02  D7C2               	goto	l17796
 21493  010B04                     u22040:
 21494                           
 21495                           ; BSR set to: 2
 21496                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 21497  010B04  A381               	btfss	__doprnt@flag& (0+255),1,b
 21498  010B06  D041               	goto	l2427
 21499                           
 21500                           ; BSR set to: 2
 21501  010B08  EE20 F002          	lfsr	2,2
 21502  010B0C  514C               	movf	__doprnt@pb& (0+255),w,b
 21503  010B0E  26D9               	addwf	fsr2l,f,c
 21504  010B10  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21505  010B12  22DA               	addwfc	fsr2h,f,c
 21506  010B14  50DE               	movf	postinc2,w,c
 21507  010B16  10DE               	iorwf	postinc2,w,c
 21508  010B18  10DE               	iorwf	postinc2,w,c
 21509  010B1A  B4D8               	btfsc	status,2,c
 21510  010B1C  D01D               	goto	l2429
 21511                           
 21512                           ; BSR set to: 2
 21513  010B1E  B181               	btfsc	__doprnt@flag& (0+255),0,b
 21514  010B20  D004               	goto	l17814
 21515                           
 21516                           ; BSR set to: 2
 21517  010B22  0E00               	movlw	0
 21518  010B24  6F60               	movwf	(__doprnt$4885+1)& (0+255),b
 21519  010B26  0E2B               	movlw	43
 21520  010B28  D003               	goto	L10
 21521  010B2A                     l17814:
 21522                           
 21523                           ; BSR set to: 2
 21524  010B2A  0E00               	movlw	0
 21525  010B2C  6F60               	movwf	(__doprnt$4885+1)& (0+255),b
 21526  010B2E  0E2D               	movlw	45
 21527  010B30                     L10:
 21528  010B30  6F5F               	movwf	__doprnt$4885& (0+255),b
 21529                           
 21530                           ; BSR set to: 2
 21531  010B32  EE20 F002          	lfsr	2,2
 21532  010B36  514C               	movf	__doprnt@pb& (0+255),w,b
 21533  010B38  26D9               	addwf	fsr2l,f,c
 21534  010B3A  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21535  010B3C  22DA               	addwfc	fsr2h,f,c
 21536  010B3E  D801               	call	u22088
 21537  010B40  D0CC               	goto	l17844
 21538  010B42                     u22088:
 21539  010B42  0005               	push	
 21540  010B44  6EFA               	movwf	pclath,c
 21541  010B46  50DE               	movf	postinc2,w,c
 21542  010B48  6EFD               	movwf	tosl,c
 21543  010B4A  50DE               	movf	postinc2,w,c
 21544  010B4C  6EFE               	movwf	tosh,c
 21545  010B4E  50DE               	movf	postinc2,w,c
 21546  010B50  6EFF               	movwf	tosu,c
 21547  010B52  50FA               	movf	pclath,w,c
 21548  010B54  515F               	movf	__doprnt$4885& (0+255),w,b
 21549  010B56  0012               	return		;indir
 21550  010B58                     l2429:
 21551                           
 21552                           ; BSR set to: 2
 21553  010B58  B181               	btfsc	__doprnt@flag& (0+255),0,b
 21554  010B5A  D004               	goto	l17820
 21555                           
 21556                           ; BSR set to: 2
 21557  010B5C  0E00               	movlw	0
 21558  010B5E  6F62               	movwf	(__doprnt$4886+1)& (0+255),b
 21559  010B60  0E2B               	movlw	43
 21560  010B62  D003               	goto	L11
 21561  010B64                     l17820:
 21562                           
 21563                           ; BSR set to: 2
 21564  010B64  0E00               	movlw	0
 21565  010B66  6F62               	movwf	(__doprnt$4886+1)& (0+255),b
 21566  010B68  0E2D               	movlw	45
 21567  010B6A                     L11:
 21568  010B6A  6F61               	movwf	__doprnt$4886& (0+255),b
 21569                           
 21570                           ; BSR set to: 2
 21571  010B6C  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21572  010B70  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21573  010B74  CFDE F252          	movff	postinc2,??__doprnt
 21574  010B78  CFDD F253          	movff	postdec2,??__doprnt+1
 21575  010B7C  C252  FFD9         	movff	??__doprnt,fsr2l
 21576  010B80  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21577  010B84  C261  FFDF         	movff	__doprnt$4886,indf2
 21578  010B88  D0A1               	goto	L12
 21579  010B8A                     l2427:
 21580                           
 21581                           ; BSR set to: 2
 21582                           ;doprnt.c: 1211: else if(flag & 0x01)
 21583  010B8A  A181               	btfss	__doprnt@flag& (0+255),0,b
 21584  010B8C  D0A6               	goto	l17844
 21585                           
 21586                           ; BSR set to: 2
 21587  010B8E  EE20 F002          	lfsr	2,2
 21588  010B92  514C               	movf	__doprnt@pb& (0+255),w,b
 21589  010B94  26D9               	addwf	fsr2l,f,c
 21590  010B96  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21591  010B98  22DA               	addwfc	fsr2h,f,c
 21592  010B9A  50DE               	movf	postinc2,w,c
 21593  010B9C  10DE               	iorwf	postinc2,w,c
 21594  010B9E  10DE               	iorwf	postinc2,w,c
 21595  010BA0  B4D8               	btfsc	status,2,c
 21596  010BA2  D013               	goto	l17830
 21597                           
 21598                           ; BSR set to: 2
 21599  010BA4  EE20 F002          	lfsr	2,2
 21600  010BA8  514C               	movf	__doprnt@pb& (0+255),w,b
 21601  010BAA  26D9               	addwf	fsr2l,f,c
 21602  010BAC  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21603  010BAE  22DA               	addwfc	fsr2h,f,c
 21604  010BB0  D801               	call	u22128
 21605  010BB2  D093               	goto	l17844
 21606  010BB4                     u22128:
 21607  010BB4  0005               	push	
 21608  010BB6  6EFA               	movwf	pclath,c
 21609  010BB8  50DE               	movf	postinc2,w,c
 21610  010BBA  6EFD               	movwf	tosl,c
 21611  010BBC  50DE               	movf	postinc2,w,c
 21612  010BBE  6EFE               	movwf	tosh,c
 21613  010BC0  50DE               	movf	postinc2,w,c
 21614  010BC2  6EFF               	movwf	tosu,c
 21615  010BC4  50FA               	movf	pclath,w,c
 21616  010BC6  0E20               	movlw	32
 21617  010BC8  0012               	return		;indir
 21618  010BCA                     l17830:
 21619                           
 21620                           ; BSR set to: 2
 21621  010BCA  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21622  010BCE  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21623  010BD2  CFDE F252          	movff	postinc2,??__doprnt
 21624  010BD6  CFDD F253          	movff	postdec2,??__doprnt+1
 21625  010BDA  C252  FFD9         	movff	??__doprnt,fsr2l
 21626  010BDE  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21627  010BE2  0E20               	movlw	32
 21628  010BE4  D072               	goto	L57
 21629  010BE6                     l17834:
 21630                           
 21631                           ; BSR set to: 2
 21632                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 21633  010BE6  C279  F200         	movff	__doprnt@val,___lldiv@dividend
 21634  010BEA  C27A  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 21635  010BEE  C27B  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 21636  010BF2  C27C  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 21637  010BF6  5183               	movf	__doprnt@c& (0+255),w,b
 21638  010BF8  0D04               	mullw	4
 21639  010BFA  0E1F               	movlw	low _dpowers
 21640  010BFC  24F3               	addwf	prodl,w,c
 21641  010BFE  6EF6               	movwf	tblptrl,c
 21642  010C00  0EEA               	movlw	high _dpowers
 21643  010C02  20F4               	addwfc	prodh,w,c
 21644  010C04  6EF7               	movwf	tblptrh,c
 21645  010C06                     	if	1	;There are 3 active tblptr bytes
 21646  010C06  6AF8               	clrf	tblptru,c
 21647  010C08  0E00               	movlw	low (__mediumconst shr (0+16))
 21648  010C0A  22F8               	addwfc	tblptru,f,c
 21649  010C0C                     	endif
 21650  010C0C  0009               	tblrd		*+
 21651  010C0E  CFF5 F204          	movff	tablat,___lldiv@divisor
 21652  010C12  0009               	tblrd		*+
 21653  010C14  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 21654  010C18  0009               	tblrd		*+
 21655  010C1A  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 21656  010C1E  000A               	tblrd		*-
 21657  010C20  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 21658  010C24  ECBB  F0D4         	call	___lldiv
 21659  010C28  C200  F271         	movff	?___lldiv,__doprnt@tmpval
 21660  010C2C  C201  F272         	movff	?___lldiv+1,__doprnt@tmpval+1
 21661  010C30  C202  F273         	movff	?___lldiv+2,__doprnt@tmpval+2
 21662  010C34  C203  F274         	movff	?___lldiv+3,__doprnt@tmpval+3
 21663                           
 21664                           ;doprnt.c: 1221: tmpval.vd %= 10;
 21665  010C38  C271  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 21666  010C3C  C272  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 21667  010C40  C273  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 21668  010C44  C274  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 21669  010C48  0E0A               	movlw	10
 21670  010C4A  0102               	movlb	2	; () banked
 21671  010C4C  6F11               	movwf	___llmod@divisor& (0+255),b
 21672  010C4E  0E00               	movlw	0
 21673  010C50  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 21674  010C52  0E00               	movlw	0
 21675  010C54  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 21676  010C56  0E00               	movlw	0
 21677  010C58  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 21678  010C5A  ECF1  F0D5         	call	___llmod	;wreg free
 21679  010C5E  C20D  F271         	movff	?___llmod,__doprnt@tmpval
 21680  010C62  C20E  F272         	movff	?___llmod+1,__doprnt@tmpval+1
 21681  010C66  C20F  F273         	movff	?___llmod+2,__doprnt@tmpval+2
 21682  010C6A  C210  F274         	movff	?___llmod+3,__doprnt@tmpval+3
 21683  010C6E  0102               	movlb	2	; () banked
 21684  010C70  EE20 F002          	lfsr	2,2
 21685  010C74  514C               	movf	__doprnt@pb& (0+255),w,b
 21686  010C76  26D9               	addwf	fsr2l,f,c
 21687  010C78  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21688  010C7A  22DA               	addwfc	fsr2h,f,c
 21689  010C7C  50DE               	movf	postinc2,w,c
 21690  010C7E  10DE               	iorwf	postinc2,w,c
 21691  010C80  10DE               	iorwf	postinc2,w,c
 21692  010C82  B4D8               	btfsc	status,2,c
 21693  010C84  D014               	goto	l17842
 21694                           
 21695                           ; BSR set to: 2
 21696  010C86  EE20 F002          	lfsr	2,2
 21697  010C8A  514C               	movf	__doprnt@pb& (0+255),w,b
 21698  010C8C  26D9               	addwf	fsr2l,f,c
 21699  010C8E  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21700  010C90  22DA               	addwfc	fsr2h,f,c
 21701  010C92  D801               	call	u22148
 21702  010C94  D022               	goto	l17844
 21703  010C96                     u22148:
 21704  010C96  0005               	push	
 21705  010C98  6EFA               	movwf	pclath,c
 21706  010C9A  50DE               	movf	postinc2,w,c
 21707  010C9C  6EFD               	movwf	tosl,c
 21708  010C9E  50DE               	movf	postinc2,w,c
 21709  010CA0  6EFE               	movwf	tosh,c
 21710  010CA2  50DE               	movf	postinc2,w,c
 21711  010CA4  6EFF               	movwf	tosu,c
 21712  010CA6  50FA               	movf	pclath,w,c
 21713  010CA8  5171               	movf	__doprnt@tmpval& (0+255),w,b
 21714  010CAA  0F30               	addlw	48
 21715  010CAC  0012               	return		;indir
 21716  010CAE                     l17842:
 21717                           
 21718                           ; BSR set to: 2
 21719  010CAE  5171               	movf	__doprnt@tmpval& (0+255),w,b
 21720  010CB0  0F30               	addlw	48
 21721  010CB2  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21722  010CB6  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21723  010CBA  CFDE F252          	movff	postinc2,??__doprnt
 21724  010CBE  CFDD F253          	movff	postdec2,??__doprnt+1
 21725  010CC2  C252  FFD9         	movff	??__doprnt,fsr2l
 21726  010CC6  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21727  010CCA                     L57:
 21728  010CCA  6EDF               	movwf	indf2,c
 21729  010CCC                     L12:
 21730  010CCC  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21731  010CD0  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21732  010CD4  2ADE               	incf	postinc2,f,c
 21733  010CD6  0E00               	movlw	0
 21734  010CD8  22DD               	addwfc	postdec2,f,c
 21735  010CDA                     l17844:
 21736  010CDA  0102               	movlb	2	; () banked
 21737  010CDC  0783               	decf	__doprnt@c& (0+255),f,b
 21738  010CDE  2983               	incf	__doprnt@c& (0+255),w,b
 21739  010CE0  B4D8               	btfsc	status,2,c
 21740  010CE2  D038               	goto	l17856
 21741  010CE4  D780               	goto	l17834
 21742  010CE6                     l17846:
 21743                           
 21744                           ; BSR set to: 2
 21745  010CE6  EE20 F002          	lfsr	2,2
 21746  010CEA  514C               	movf	__doprnt@pb& (0+255),w,b
 21747  010CEC  26D9               	addwf	fsr2l,f,c
 21748  010CEE  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21749  010CF0  22DA               	addwfc	fsr2h,f,c
 21750  010CF2  50DE               	movf	postinc2,w,c
 21751  010CF4  10DE               	iorwf	postinc2,w,c
 21752  010CF6  10DE               	iorwf	postinc2,w,c
 21753  010CF8  B4D8               	btfsc	status,2,c
 21754  010CFA  D013               	goto	l17850
 21755                           
 21756                           ; BSR set to: 2
 21757  010CFC  EE20 F002          	lfsr	2,2
 21758  010D00  514C               	movf	__doprnt@pb& (0+255),w,b
 21759  010D02  26D9               	addwf	fsr2l,f,c
 21760  010D04  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21761  010D06  22DA               	addwfc	fsr2h,f,c
 21762  010D08  D801               	call	u22178
 21763  010D0A  D020               	goto	l17854
 21764  010D0C                     u22178:
 21765  010D0C  0005               	push	
 21766  010D0E  6EFA               	movwf	pclath,c
 21767  010D10  50DE               	movf	postinc2,w,c
 21768  010D12  6EFD               	movwf	tosl,c
 21769  010D14  50DE               	movf	postinc2,w,c
 21770  010D16  6EFE               	movwf	tosh,c
 21771  010D18  50DE               	movf	postinc2,w,c
 21772  010D1A  6EFF               	movwf	tosu,c
 21773  010D1C  50FA               	movf	pclath,w,c
 21774  010D1E  0E30               	movlw	48
 21775  010D20  0012               	return		;indir
 21776  010D22                     l17850:
 21777                           
 21778                           ; BSR set to: 2
 21779  010D22  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21780  010D26  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21781  010D2A  CFDE F252          	movff	postinc2,??__doprnt
 21782  010D2E  CFDD F253          	movff	postdec2,??__doprnt+1
 21783  010D32  C252  FFD9         	movff	??__doprnt,fsr2l
 21784  010D36  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21785  010D3A  0E30               	movlw	48
 21786  010D3C  6EDF               	movwf	indf2,c
 21787                           
 21788                           ; BSR set to: 2
 21789  010D3E  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21790  010D42  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21791  010D46  2ADE               	incf	postinc2,f,c
 21792  010D48  0E00               	movlw	0
 21793  010D4A  22DD               	addwfc	postdec2,f,c
 21794  010D4C                     l17854:
 21795                           
 21796                           ;doprnt.c: 1228: eexp--;
 21797  010D4C  0102               	movlb	2	; () banked
 21798  010D4E  076F               	decf	__doprnt@eexp& (0+255),f,b
 21799  010D50  A0D8               	btfss	status,0,c
 21800  010D52  0770               	decf	(__doprnt@eexp+1)& (0+255),f,b
 21801  010D54                     l17856:
 21802                           
 21803                           ; BSR set to: 2
 21804  010D54  BF70               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 21805  010D56  D005               	goto	u22180
 21806  010D58  5170               	movf	(__doprnt@eexp+1)& (0+255),w,b
 21807  010D5A  E1C5               	bnz	l17846
 21808  010D5C  056F               	decf	__doprnt@eexp& (0+255),w,b
 21809  010D5E  B0D8               	btfsc	status,0,c
 21810  010D60  D7C2               	goto	l17846
 21811  010D62                     u22180:
 21812                           
 21813                           ; BSR set to: 2
 21814                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 21815  010D62  BF80               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 21816  010D64  D009               	goto	l2460
 21817  010D66  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 21818  010D68  E104               	bnz	u22190
 21819  010D6A  0E09               	movlw	9
 21820  010D6C  5D7F               	subwf	__doprnt@prec& (0+255),w,b
 21821  010D6E  A0D8               	btfss	status,0,c
 21822  010D70  D003               	goto	l2460
 21823  010D72                     u22190:
 21824                           
 21825                           ; BSR set to: 2
 21826                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 21827  010D72  0E08               	movlw	8
 21828  010D74  6F83               	movwf	__doprnt@c& (0+255),b
 21829  010D76  D002               	goto	l17862
 21830  010D78                     l2460:
 21831                           
 21832                           ; BSR set to: 2
 21833                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 21834  010D78  C27F  F283         	movff	__doprnt@prec,__doprnt@c
 21835  010D7C                     l17862:
 21836                           
 21837                           ; BSR set to: 2
 21838                           ;doprnt.c: 1234: prec -= (int)c;
 21839  010D7C  5183               	movf	__doprnt@c& (0+255),w,b
 21840  010D7E  5F7F               	subwf	__doprnt@prec& (0+255),f,b
 21841  010D80  0E00               	movlw	0
 21842  010D82  5B80               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 21843                           
 21844                           ; BSR set to: 2
 21845                           ;doprnt.c: 1238: if(c)
 21846  010D84  5183               	movf	__doprnt@c& (0+255),w,b
 21847  010D86  B4D8               	btfsc	status,2,c
 21848  010D88  D033               	goto	l17874
 21849                           
 21850                           ; BSR set to: 2
 21851  010D8A  EE20 F002          	lfsr	2,2
 21852  010D8E  514C               	movf	__doprnt@pb& (0+255),w,b
 21853  010D90  26D9               	addwf	fsr2l,f,c
 21854  010D92  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21855  010D94  22DA               	addwfc	fsr2h,f,c
 21856  010D96  50DE               	movf	postinc2,w,c
 21857  010D98  10DE               	iorwf	postinc2,w,c
 21858  010D9A  10DE               	iorwf	postinc2,w,c
 21859  010D9C  B4D8               	btfsc	status,2,c
 21860  010D9E  D013               	goto	l17870
 21861                           
 21862                           ; BSR set to: 2
 21863  010DA0  EE20 F002          	lfsr	2,2
 21864  010DA4  514C               	movf	__doprnt@pb& (0+255),w,b
 21865  010DA6  26D9               	addwf	fsr2l,f,c
 21866  010DA8  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21867  010DAA  22DA               	addwfc	fsr2h,f,c
 21868  010DAC  D801               	call	u22228
 21869  010DAE  D020               	goto	l17874
 21870  010DB0                     u22228:
 21871  010DB0  0005               	push	
 21872  010DB2  6EFA               	movwf	pclath,c
 21873  010DB4  50DE               	movf	postinc2,w,c
 21874  010DB6  6EFD               	movwf	tosl,c
 21875  010DB8  50DE               	movf	postinc2,w,c
 21876  010DBA  6EFE               	movwf	tosh,c
 21877  010DBC  50DE               	movf	postinc2,w,c
 21878  010DBE  6EFF               	movwf	tosu,c
 21879  010DC0  50FA               	movf	pclath,w,c
 21880  010DC2  0E2E               	movlw	46
 21881  010DC4  0012               	return		;indir
 21882  010DC6                     l17870:
 21883                           
 21884                           ; BSR set to: 2
 21885  010DC6  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21886  010DCA  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21887  010DCE  CFDE F252          	movff	postinc2,??__doprnt
 21888  010DD2  CFDD F253          	movff	postdec2,??__doprnt+1
 21889  010DD6  C252  FFD9         	movff	??__doprnt,fsr2l
 21890  010DDA  C253  FFDA         	movff	??__doprnt+1,fsr2h
 21891  010DDE  0E2E               	movlw	46
 21892  010DE0  6EDF               	movwf	indf2,c
 21893                           
 21894                           ; BSR set to: 2
 21895  010DE2  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 21896  010DE6  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21897  010DEA  2ADE               	incf	postinc2,f,c
 21898  010DEC  0E00               	movlw	0
 21899  010DEE  22DD               	addwfc	postdec2,f,c
 21900  010DF0                     l17874:
 21901                           
 21902                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 21903  010DF0  0102               	movlb	2	; () banked
 21904  010DF2  5183               	movf	__doprnt@c& (0+255),w,b
 21905  010DF4  ECEC  F0A8         	call	_scale
 21906  010DF8  C227  F256         	movff	?_scale,__doprnt$5932
 21907  010DFC  C228  F257         	movff	?_scale+1,__doprnt$5932+1
 21908  010E00  C229  F258         	movff	?_scale+2,__doprnt$5932+2
 21909  010E04  C22A  F259         	movff	?_scale+3,__doprnt$5932+3
 21910                           
 21911                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 21912  010E08  C275  F212         	movff	__doprnt@fval,___flmul@a
 21913  010E0C  C276  F213         	movff	__doprnt@fval+1,___flmul@a+1
 21914  010E10  C277  F214         	movff	__doprnt@fval+2,___flmul@a+2
 21915  010E14  C278  F215         	movff	__doprnt@fval+3,___flmul@a+3
 21916  010E18  C256  F20E         	movff	__doprnt$5932,___flmul@b
 21917  010E1C  C257  F20F         	movff	__doprnt$5932+1,___flmul@b+1
 21918  010E20  C258  F210         	movff	__doprnt$5932+2,___flmul@b+2
 21919  010E24  C259  F211         	movff	__doprnt$5932+3,___flmul@b+3
 21920  010E28  ECA8  F0B0         	call	___flmul	;wreg free
 21921  010E2C  C20E  F230         	movff	?___flmul,___fltol@f1
 21922  010E30  C20F  F231         	movff	?___flmul+1,___fltol@f1+1
 21923  010E34  C210  F232         	movff	?___flmul+2,___fltol@f1+2
 21924  010E38  C211  F233         	movff	?___flmul+3,___fltol@f1+3
 21925  010E3C  EC72  F0D0         	call	___fltol	;wreg free
 21926  010E40  C230  F279         	movff	?___fltol,__doprnt@val
 21927  010E44  C231  F27A         	movff	?___fltol+1,__doprnt@val+1
 21928  010E48  C232  F27B         	movff	?___fltol+2,__doprnt@val+2
 21929  010E4C  C233  F27C         	movff	?___fltol+3,__doprnt@val+3
 21930                           
 21931                           ;doprnt.c: 1247: while(c--) {
 21932  010E50  D0A4               	goto	l17890
 21933  010E52                     l17878:
 21934                           
 21935                           ; BSR set to: 2
 21936                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 21937  010E52  C279  F200         	movff	__doprnt@val,___lldiv@dividend
 21938  010E56  C27A  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 21939  010E5A  C27B  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 21940  010E5E  C27C  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 21941  010E62  5183               	movf	__doprnt@c& (0+255),w,b
 21942  010E64  0D04               	mullw	4
 21943  010E66  0E1F               	movlw	low _dpowers
 21944  010E68  24F3               	addwf	prodl,w,c
 21945  010E6A  6EF6               	movwf	tblptrl,c
 21946  010E6C  0EEA               	movlw	high _dpowers
 21947  010E6E  20F4               	addwfc	prodh,w,c
 21948  010E70  6EF7               	movwf	tblptrh,c
 21949  010E72                     	if	1	;There are 3 active tblptr bytes
 21950  010E72  6AF8               	clrf	tblptru,c
 21951  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
 21952  010E76  22F8               	addwfc	tblptru,f,c
 21953  010E78                     	endif
 21954  010E78  0009               	tblrd		*+
 21955  010E7A  CFF5 F204          	movff	tablat,___lldiv@divisor
 21956  010E7E  0009               	tblrd		*+
 21957  010E80  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 21958  010E84  0009               	tblrd		*+
 21959  010E86  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 21960  010E8A  000A               	tblrd		*-
 21961  010E8C  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 21962  010E90  ECBB  F0D4         	call	___lldiv	;wreg free
 21963  010E94  C200  F271         	movff	?___lldiv,__doprnt@tmpval
 21964  010E98  C201  F272         	movff	?___lldiv+1,__doprnt@tmpval+1
 21965  010E9C  C202  F273         	movff	?___lldiv+2,__doprnt@tmpval+2
 21966  010EA0  C203  F274         	movff	?___lldiv+3,__doprnt@tmpval+3
 21967                           
 21968                           ;doprnt.c: 1249: tmpval.vd %= 10;
 21969  010EA4  C271  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 21970  010EA8  C272  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 21971  010EAC  C273  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 21972  010EB0  C274  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 21973  010EB4  0E0A               	movlw	10
 21974  010EB6  0102               	movlb	2	; () banked
 21975  010EB8  6F11               	movwf	___llmod@divisor& (0+255),b
 21976  010EBA  0E00               	movlw	0
 21977  010EBC  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 21978  010EBE  0E00               	movlw	0
 21979  010EC0  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 21980  010EC2  0E00               	movlw	0
 21981  010EC4  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 21982  010EC6  ECF1  F0D5         	call	___llmod	;wreg free
 21983  010ECA  C20D  F271         	movff	?___llmod,__doprnt@tmpval
 21984  010ECE  C20E  F272         	movff	?___llmod+1,__doprnt@tmpval+1
 21985  010ED2  C20F  F273         	movff	?___llmod+2,__doprnt@tmpval+2
 21986  010ED6  C210  F274         	movff	?___llmod+3,__doprnt@tmpval+3
 21987  010EDA  0102               	movlb	2	; () banked
 21988  010EDC  EE20 F002          	lfsr	2,2
 21989  010EE0  514C               	movf	__doprnt@pb& (0+255),w,b
 21990  010EE2  26D9               	addwf	fsr2l,f,c
 21991  010EE4  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21992  010EE6  22DA               	addwfc	fsr2h,f,c
 21993  010EE8  50DE               	movf	postinc2,w,c
 21994  010EEA  10DE               	iorwf	postinc2,w,c
 21995  010EEC  10DE               	iorwf	postinc2,w,c
 21996  010EEE  B4D8               	btfsc	status,2,c
 21997  010EF0  D014               	goto	l17886
 21998                           
 21999                           ; BSR set to: 2
 22000  010EF2  EE20 F002          	lfsr	2,2
 22001  010EF6  514C               	movf	__doprnt@pb& (0+255),w,b
 22002  010EF8  26D9               	addwf	fsr2l,f,c
 22003  010EFA  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22004  010EFC  22DA               	addwfc	fsr2h,f,c
 22005  010EFE  D801               	call	u22248
 22006  010F00  D022               	goto	l17888
 22007  010F02                     u22248:
 22008  010F02  0005               	push	
 22009  010F04  6EFA               	movwf	pclath,c
 22010  010F06  50DE               	movf	postinc2,w,c
 22011  010F08  6EFD               	movwf	tosl,c
 22012  010F0A  50DE               	movf	postinc2,w,c
 22013  010F0C  6EFE               	movwf	tosh,c
 22014  010F0E  50DE               	movf	postinc2,w,c
 22015  010F10  6EFF               	movwf	tosu,c
 22016  010F12  50FA               	movf	pclath,w,c
 22017  010F14  5171               	movf	__doprnt@tmpval& (0+255),w,b
 22018  010F16  0F30               	addlw	48
 22019  010F18  0012               	return		;indir
 22020  010F1A                     l17886:
 22021                           
 22022                           ; BSR set to: 2
 22023  010F1A  5171               	movf	__doprnt@tmpval& (0+255),w,b
 22024  010F1C  0F30               	addlw	48
 22025  010F1E  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22026  010F22  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22027  010F26  CFDE F252          	movff	postinc2,??__doprnt
 22028  010F2A  CFDD F253          	movff	postdec2,??__doprnt+1
 22029  010F2E  C252  FFD9         	movff	??__doprnt,fsr2l
 22030  010F32  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22031  010F36  6EDF               	movwf	indf2,c
 22032  010F38  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22033  010F3C  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22034  010F40  2ADE               	incf	postinc2,f,c
 22035  010F42  0E00               	movlw	0
 22036  010F44  22DD               	addwfc	postdec2,f,c
 22037  010F46                     l17888:
 22038                           
 22039                           ;doprnt.c: 1251: val %= dpowers[c];
 22040  010F46  C279  F20D         	movff	__doprnt@val,___llmod@dividend
 22041  010F4A  C27A  F20E         	movff	__doprnt@val+1,___llmod@dividend+1
 22042  010F4E  C27B  F20F         	movff	__doprnt@val+2,___llmod@dividend+2
 22043  010F52  C27C  F210         	movff	__doprnt@val+3,___llmod@dividend+3
 22044  010F56  0102               	movlb	2	; () banked
 22045  010F58  5183               	movf	__doprnt@c& (0+255),w,b
 22046  010F5A  0D04               	mullw	4
 22047  010F5C  0E1F               	movlw	low _dpowers
 22048  010F5E  24F3               	addwf	prodl,w,c
 22049  010F60  6EF6               	movwf	tblptrl,c
 22050  010F62  0EEA               	movlw	high _dpowers
 22051  010F64  20F4               	addwfc	prodh,w,c
 22052  010F66  6EF7               	movwf	tblptrh,c
 22053  010F68                     	if	1	;There are 3 active tblptr bytes
 22054  010F68  6AF8               	clrf	tblptru,c
 22055  010F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 22056  010F6C  22F8               	addwfc	tblptru,f,c
 22057  010F6E                     	endif
 22058  010F6E  0009               	tblrd		*+
 22059  010F70  CFF5 F211          	movff	tablat,___llmod@divisor
 22060  010F74  0009               	tblrd		*+
 22061  010F76  CFF5 F212          	movff	tablat,___llmod@divisor+1
 22062  010F7A  0009               	tblrd		*+
 22063  010F7C  CFF5 F213          	movff	tablat,___llmod@divisor+2
 22064  010F80  000A               	tblrd		*-
 22065  010F82  CFF5 F214          	movff	tablat,___llmod@divisor+3
 22066  010F86  ECF1  F0D5         	call	___llmod
 22067  010F8A  C20D  F279         	movff	?___llmod,__doprnt@val
 22068  010F8E  C20E  F27A         	movff	?___llmod+1,__doprnt@val+1
 22069  010F92  C20F  F27B         	movff	?___llmod+2,__doprnt@val+2
 22070  010F96  C210  F27C         	movff	?___llmod+3,__doprnt@val+3
 22071  010F9A                     l17890:
 22072  010F9A  0102               	movlb	2	; () banked
 22073  010F9C  0783               	decf	__doprnt@c& (0+255),f,b
 22074  010F9E  2983               	incf	__doprnt@c& (0+255),w,b
 22075  010FA0  B4D8               	btfsc	status,2,c
 22076  010FA2  D038               	goto	l17902
 22077  010FA4  D756               	goto	l17878
 22078  010FA6                     l17892:
 22079                           
 22080                           ; BSR set to: 2
 22081  010FA6  EE20 F002          	lfsr	2,2
 22082  010FAA  514C               	movf	__doprnt@pb& (0+255),w,b
 22083  010FAC  26D9               	addwf	fsr2l,f,c
 22084  010FAE  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22085  010FB0  22DA               	addwfc	fsr2h,f,c
 22086  010FB2  50DE               	movf	postinc2,w,c
 22087  010FB4  10DE               	iorwf	postinc2,w,c
 22088  010FB6  10DE               	iorwf	postinc2,w,c
 22089  010FB8  B4D8               	btfsc	status,2,c
 22090  010FBA  D013               	goto	l17896
 22091                           
 22092                           ; BSR set to: 2
 22093  010FBC  EE20 F002          	lfsr	2,2
 22094  010FC0  514C               	movf	__doprnt@pb& (0+255),w,b
 22095  010FC2  26D9               	addwf	fsr2l,f,c
 22096  010FC4  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22097  010FC6  22DA               	addwfc	fsr2h,f,c
 22098  010FC8  D801               	call	u22278
 22099  010FCA  D020               	goto	l17900
 22100  010FCC                     u22278:
 22101  010FCC  0005               	push	
 22102  010FCE  6EFA               	movwf	pclath,c
 22103  010FD0  50DE               	movf	postinc2,w,c
 22104  010FD2  6EFD               	movwf	tosl,c
 22105  010FD4  50DE               	movf	postinc2,w,c
 22106  010FD6  6EFE               	movwf	tosh,c
 22107  010FD8  50DE               	movf	postinc2,w,c
 22108  010FDA  6EFF               	movwf	tosu,c
 22109  010FDC  50FA               	movf	pclath,w,c
 22110  010FDE  0E30               	movlw	48
 22111  010FE0  0012               	return		;indir
 22112  010FE2                     l17896:
 22113                           
 22114                           ; BSR set to: 2
 22115  010FE2  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22116  010FE6  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22117  010FEA  CFDE F252          	movff	postinc2,??__doprnt
 22118  010FEE  CFDD F253          	movff	postdec2,??__doprnt+1
 22119  010FF2  C252  FFD9         	movff	??__doprnt,fsr2l
 22120  010FF6  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22121  010FFA  0E30               	movlw	48
 22122  010FFC  6EDF               	movwf	indf2,c
 22123                           
 22124                           ; BSR set to: 2
 22125  010FFE  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22126  011002  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22127  011006  2ADE               	incf	postinc2,f,c
 22128  011008  0E00               	movlw	0
 22129  01100A  22DD               	addwfc	postdec2,f,c
 22130  01100C                     l17900:
 22131                           
 22132                           ;doprnt.c: 1256: prec--;
 22133  01100C  0102               	movlb	2	; () banked
 22134  01100E  077F               	decf	__doprnt@prec& (0+255),f,b
 22135  011010  A0D8               	btfss	status,0,c
 22136  011012  0780               	decf	(__doprnt@prec+1)& (0+255),f,b
 22137  011014                     l17902:
 22138                           
 22139                           ; BSR set to: 2
 22140  011014  517F               	movf	__doprnt@prec& (0+255),w,b
 22141  011016  1180               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 22142  011018  B4D8               	btfsc	status,2,c
 22143  01101A  D361               	goto	u22730
 22144  01101C  D7C4               	goto	l17892
 22145  01101E                     l17904:
 22146                           
 22147                           ; BSR set to: 2
 22148                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 22149  01101E  0EC0               	movlw	192
 22150  011020  1581               	andwf	__doprnt@flag& (0+255),w,b
 22151  011022  6F52               	movwf	??__doprnt& (0+255),b
 22152  011024  0E00               	movlw	0
 22153  011026  1582               	andwf	(__doprnt@flag+1)& (0+255),w,b
 22154  011028  6F53               	movwf	(??__doprnt+1)& (0+255),b
 22155  01102A  5152               	movf	??__doprnt& (0+255),w,b
 22156  01102C  1153               	iorwf	(??__doprnt+1)& (0+255),w,b
 22157  01102E  A4D8               	btfss	status,2,c
 22158  011030  D041               	goto	l2481
 22159                           
 22160                           ; BSR set to: 2
 22161                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 22162  011032  A981               	btfss	__doprnt@flag& (0+255),4,b
 22163  011034  D019               	goto	l17910
 22164                           
 22165                           ; BSR set to: 2
 22166                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 22167  011036  C250  FFD9         	movff	__doprnt@ap,fsr2l
 22168  01103A  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 22169  01103E  CFDF F252          	movff	indf2,??__doprnt
 22170  011042  0E04               	movlw	4
 22171  011044  26DE               	addwf	postinc2,f,c
 22172  011046  CFDF F253          	movff	indf2,??__doprnt+1
 22173  01104A  0E00               	movlw	0
 22174  01104C  22DD               	addwfc	postdec2,f,c
 22175  01104E  C252  FFD9         	movff	??__doprnt,fsr2l
 22176  011052  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22177  011056  CFDE F279          	movff	postinc2,__doprnt@val
 22178  01105A  CFDE F27A          	movff	postinc2,__doprnt@val+1
 22179  01105E  CFDE F27B          	movff	postinc2,__doprnt@val+2
 22180  011062  CFDE F27C          	movff	postinc2,__doprnt@val+3
 22181  011066  D019               	goto	l17912
 22182  011068                     l17910:
 22183                           
 22184                           ; BSR set to: 2
 22185                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 22186  011068  C250  FFD9         	movff	__doprnt@ap,fsr2l
 22187  01106C  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 22188  011070  CFDF F252          	movff	indf2,??__doprnt
 22189  011074  0E02               	movlw	2
 22190  011076  26DE               	addwf	postinc2,f,c
 22191  011078  CFDF F253          	movff	indf2,??__doprnt+1
 22192  01107C  0E00               	movlw	0
 22193  01107E  22DD               	addwfc	postdec2,f,c
 22194  011080  C252  FFD9         	movff	??__doprnt,fsr2l
 22195  011084  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22196  011088  CFDE F279          	movff	postinc2,__doprnt@val
 22197  01108C  CFDD F27A          	movff	postdec2,__doprnt@val+1
 22198  011090  0E00               	movlw	0
 22199  011092  BF7A               	btfsc	(__doprnt@val+1)& (0+255),7,b
 22200  011094  0EFF               	movlw	-1
 22201  011096  6F7B               	movwf	(__doprnt@val+2)& (0+255),b
 22202  011098  6F7C               	movwf	(__doprnt@val+3)& (0+255),b
 22203  01109A                     l17912:
 22204                           
 22205                           ; BSR set to: 2
 22206                           ;doprnt.c: 1280: if((long)val < 0) {
 22207  01109A  AF7C               	btfss	(__doprnt@val+3)& (0+255),7,b
 22208  01109C  D040               	goto	l17922
 22209                           
 22210                           ; BSR set to: 2
 22211                           ;doprnt.c: 1281: flag |= 0x03;
 22212  01109E  0E03               	movlw	3
 22213  0110A0  1381               	iorwf	__doprnt@flag& (0+255),f,b
 22214                           
 22215                           ; BSR set to: 2
 22216                           ;doprnt.c: 1282: val = -val;
 22217  0110A2  1F7C               	comf	(__doprnt@val+3)& (0+255),f,b
 22218  0110A4  1F7B               	comf	(__doprnt@val+2)& (0+255),f,b
 22219  0110A6  1F7A               	comf	(__doprnt@val+1)& (0+255),f,b
 22220  0110A8  6D79               	negf	__doprnt@val& (0+255),b
 22221  0110AA  0E00               	movlw	0
 22222  0110AC  237A               	addwfc	(__doprnt@val+1)& (0+255),f,b
 22223  0110AE  237B               	addwfc	(__doprnt@val+2)& (0+255),f,b
 22224  0110B0  237C               	addwfc	(__doprnt@val+3)& (0+255),f,b
 22225  0110B2  D035               	goto	l17922
 22226  0110B4                     l2481:
 22227                           
 22228                           ; BSR set to: 2
 22229                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 22230  0110B4  A981               	btfss	__doprnt@flag& (0+255),4,b
 22231  0110B6  D019               	goto	l17920
 22232                           
 22233                           ; BSR set to: 2
 22234                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 22235  0110B8  C250  FFD9         	movff	__doprnt@ap,fsr2l
 22236  0110BC  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 22237  0110C0  CFDF F252          	movff	indf2,??__doprnt
 22238  0110C4  0E04               	movlw	4
 22239  0110C6  26DE               	addwf	postinc2,f,c
 22240  0110C8  CFDF F253          	movff	indf2,??__doprnt+1
 22241  0110CC  0E00               	movlw	0
 22242  0110CE  22DD               	addwfc	postdec2,f,c
 22243  0110D0  C252  FFD9         	movff	??__doprnt,fsr2l
 22244  0110D4  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22245  0110D8  CFDE F279          	movff	postinc2,__doprnt@val
 22246  0110DC  CFDE F27A          	movff	postinc2,__doprnt@val+1
 22247  0110E0  CFDE F27B          	movff	postinc2,__doprnt@val+2
 22248  0110E4  CFDE F27C          	movff	postinc2,__doprnt@val+3
 22249  0110E8  D01A               	goto	l17922
 22250  0110EA                     l17920:
 22251                           
 22252                           ; BSR set to: 2
 22253                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 22254  0110EA  C250  FFD9         	movff	__doprnt@ap,fsr2l
 22255  0110EE  C251  FFDA         	movff	__doprnt@ap+1,fsr2h
 22256  0110F2  CFDF F252          	movff	indf2,??__doprnt
 22257  0110F6  0E02               	movlw	2
 22258  0110F8  26DE               	addwf	postinc2,f,c
 22259  0110FA  CFDF F253          	movff	indf2,??__doprnt+1
 22260  0110FE  0E00               	movlw	0
 22261  011100  22DD               	addwfc	postdec2,f,c
 22262  011102  C252  FFD9         	movff	??__doprnt,fsr2l
 22263  011106  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22264  01110A  CFDE F254          	movff	postinc2,??__doprnt+2
 22265  01110E  CFDD F255          	movff	postdec2,??__doprnt+3
 22266  011112  C254  F279         	movff	??__doprnt+2,__doprnt@val
 22267  011116  C255  F27A         	movff	??__doprnt+3,__doprnt@val+1
 22268  01111A  6B7B               	clrf	(__doprnt@val+2)& (0+255),b
 22269  01111C  6B7C               	clrf	(__doprnt@val+3)& (0+255),b
 22270  01111E                     l17922:
 22271                           
 22272                           ; BSR set to: 2
 22273                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 22274  01111E  517F               	movf	__doprnt@prec& (0+255),w,b
 22275  011120  1180               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 22276  011122  A4D8               	btfss	status,2,c
 22277  011124  D04B               	goto	l17958
 22278                           
 22279                           ; BSR set to: 2
 22280  011126  5179               	movf	__doprnt@val& (0+255),w,b
 22281  011128  117A               	iorwf	(__doprnt@val+1)& (0+255),w,b
 22282  01112A  117B               	iorwf	(__doprnt@val+2)& (0+255),w,b
 22283  01112C  117C               	iorwf	(__doprnt@val+3)& (0+255),w,b
 22284  01112E  A4D8               	btfss	status,2,c
 22285  011130  D045               	goto	l17958
 22286                           
 22287                           ; BSR set to: 2
 22288                           ;doprnt.c: 1310: prec++;
 22289  011132  4B7F               	infsnz	__doprnt@prec& (0+255),f,b
 22290  011134  2B80               	incf	(__doprnt@prec+1)& (0+255),f,b
 22291  011136  D042               	goto	l17958
 22292  011138                     l17928:
 22293                           
 22294                           ; BSR set to: 2
 22295                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 22296  011138  0E01               	movlw	1
 22297  01113A  6F83               	movwf	__doprnt@c& (0+255),b
 22298  01113C                     l17930:
 22299                           
 22300                           ; BSR set to: 2
 22301  01113C  0E0A               	movlw	10
 22302  01113E  1983               	xorwf	__doprnt@c& (0+255),w,b
 22303  011140  B4D8               	btfsc	status,2,c
 22304  011142  D047               	goto	l17960
 22305                           
 22306                           ; BSR set to: 2
 22307                           ;doprnt.c: 1325: if(val < dpowers[c])
 22308  011144  5183               	movf	__doprnt@c& (0+255),w,b
 22309  011146  0D04               	mullw	4
 22310  011148  0E1F               	movlw	low _dpowers
 22311  01114A  24F3               	addwf	prodl,w,c
 22312  01114C  6EF6               	movwf	tblptrl,c
 22313  01114E  0EEA               	movlw	high _dpowers
 22314  011150  20F4               	addwfc	prodh,w,c
 22315  011152  6EF7               	movwf	tblptrh,c
 22316  011154                     	if	1	;There are 3 active tblptr bytes
 22317  011154  6AF8               	clrf	tblptru,c
 22318  011156  0E00               	movlw	low (__mediumconst shr (0+16))
 22319  011158  22F8               	addwfc	tblptru,f,c
 22320  01115A                     	endif
 22321  01115A  0009               	tblrd		*+
 22322  01115C  50F5               	movf	tablat,w,c
 22323  01115E  5D79               	subwf	__doprnt@val& (0+255),w,b
 22324  011160  0009               	tblrd		*+
 22325  011162  50F5               	movf	tablat,w,c
 22326  011164  597A               	subwfb	(__doprnt@val+1)& (0+255),w,b
 22327  011166  0009               	tblrd		*+
 22328  011168  50F5               	movf	tablat,w,c
 22329  01116A  597B               	subwfb	(__doprnt@val+2)& (0+255),w,b
 22330  01116C  0009               	tblrd		*+
 22331  01116E  50F5               	movf	tablat,w,c
 22332  011170  597C               	subwfb	(__doprnt@val+3)& (0+255),w,b
 22333  011172  A0D8               	btfss	status,0,c
 22334  011174  D02E               	goto	l17960
 22335                           
 22336                           ; BSR set to: 2
 22337  011176  2B83               	incf	__doprnt@c& (0+255),f,b
 22338  011178  D7E1               	goto	l17930
 22339  01117A                     l17942:
 22340                           
 22341                           ; BSR set to: 2
 22342                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 22343  01117A  0E01               	movlw	1
 22344  01117C  6F83               	movwf	__doprnt@c& (0+255),b
 22345  01117E                     l17944:
 22346                           
 22347                           ; BSR set to: 2
 22348  01117E  0E08               	movlw	8
 22349  011180  1983               	xorwf	__doprnt@c& (0+255),w,b
 22350  011182  B4D8               	btfsc	status,2,c
 22351  011184  D026               	goto	l17960
 22352                           
 22353                           ; BSR set to: 2
 22354                           ;doprnt.c: 1336: if(val < hexpowers[c])
 22355  011186  5183               	movf	__doprnt@c& (0+255),w,b
 22356  011188  0D04               	mullw	4
 22357  01118A  0EFF               	movlw	low _hexpowers
 22358  01118C  24F3               	addwf	prodl,w,c
 22359  01118E  6EF6               	movwf	tblptrl,c
 22360  011190  0EE6               	movlw	high _hexpowers
 22361  011192  20F4               	addwfc	prodh,w,c
 22362  011194  6EF7               	movwf	tblptrh,c
 22363  011196                     	if	1	;There are 3 active tblptr bytes
 22364  011196  6AF8               	clrf	tblptru,c
 22365  011198  0E00               	movlw	low (__mediumconst shr (0+16))
 22366  01119A  22F8               	addwfc	tblptru,f,c
 22367  01119C                     	endif
 22368  01119C  0009               	tblrd		*+
 22369  01119E  50F5               	movf	tablat,w,c
 22370  0111A0  5D79               	subwf	__doprnt@val& (0+255),w,b
 22371  0111A2  0009               	tblrd		*+
 22372  0111A4  50F5               	movf	tablat,w,c
 22373  0111A6  597A               	subwfb	(__doprnt@val+1)& (0+255),w,b
 22374  0111A8  0009               	tblrd		*+
 22375  0111AA  50F5               	movf	tablat,w,c
 22376  0111AC  597B               	subwfb	(__doprnt@val+2)& (0+255),w,b
 22377  0111AE  0009               	tblrd		*+
 22378  0111B0  50F5               	movf	tablat,w,c
 22379  0111B2  597C               	subwfb	(__doprnt@val+3)& (0+255),w,b
 22380  0111B4  A0D8               	btfss	status,0,c
 22381  0111B6  D00D               	goto	l17960
 22382                           
 22383                           ; BSR set to: 2
 22384  0111B8  2B83               	incf	__doprnt@c& (0+255),f,b
 22385  0111BA  D7E1               	goto	l17944
 22386  0111BC                     l17958:
 22387                           
 22388                           ; BSR set to: 2
 22389  0111BC  5181               	movf	__doprnt@flag& (0+255),w,b
 22390  0111BE  0BC0               	andlw	192
 22391                           
 22392                           ; Switch size 1, requested type "simple"
 22393                           ; Number of cases is 3, Range of values is 0 to 192
 22394                           ; switch strategies available:
 22395                           ; Name         Instructions Cycles
 22396                           ; simple_byte           10     6 (average)
 22397                           ;	Chosen strategy is simple_byte
 22398  0111C0  0A00               	xorlw	0	; case 0
 22399  0111C2  B4D8               	btfsc	status,2,c
 22400  0111C4  D7B9               	goto	l17928
 22401  0111C6  0A80               	xorlw	128	; case 128
 22402  0111C8  B4D8               	btfsc	status,2,c
 22403  0111CA  D7D7               	goto	l17942
 22404  0111CC  0A40               	xorlw	64	; case 192
 22405  0111CE  B4D8               	btfsc	status,2,c
 22406  0111D0  D7B3               	goto	l17928
 22407  0111D2                     l17960:
 22408                           
 22409                           ; BSR set to: 2
 22410                           ;doprnt.c: 1358: if(c < prec)
 22411  0111D2  5183               	movf	__doprnt@c& (0+255),w,b
 22412  0111D4  6F52               	movwf	??__doprnt& (0+255),b
 22413  0111D6  6B53               	clrf	(??__doprnt+1)& (0+255),b
 22414  0111D8  517F               	movf	__doprnt@prec& (0+255),w,b
 22415  0111DA  5D52               	subwf	??__doprnt& (0+255),w,b
 22416  0111DC  5153               	movf	(??__doprnt+1)& (0+255),w,b
 22417  0111DE  0A80               	xorlw	128
 22418  0111E0  6F54               	movwf	(??__doprnt+2)& (0+255),b
 22419  0111E2  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 22420  0111E4  0A80               	xorlw	128
 22421  0111E6  5954               	subwfb	(??__doprnt+2)& (0+255),w,b
 22422  0111E8  B0D8               	btfsc	status,0,c
 22423  0111EA  D003               	goto	l17964
 22424                           
 22425                           ; BSR set to: 2
 22426                           ;doprnt.c: 1359: c = prec;
 22427  0111EC  C27F  F283         	movff	__doprnt@prec,__doprnt@c
 22428  0111F0  D010               	goto	l17968
 22429  0111F2                     l17964:
 22430                           
 22431                           ; BSR set to: 2
 22432                           ;doprnt.c: 1360: else if(prec < c)
 22433  0111F2  5183               	movf	__doprnt@c& (0+255),w,b
 22434  0111F4  6F52               	movwf	??__doprnt& (0+255),b
 22435  0111F6  6B53               	clrf	(??__doprnt+1)& (0+255),b
 22436  0111F8  5152               	movf	??__doprnt& (0+255),w,b
 22437  0111FA  5D7F               	subwf	__doprnt@prec& (0+255),w,b
 22438  0111FC  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 22439  0111FE  0A80               	xorlw	128
 22440  011200  6F54               	movwf	(??__doprnt+2)& (0+255),b
 22441  011202  5153               	movf	(??__doprnt+1)& (0+255),w,b
 22442  011204  0A80               	xorlw	128
 22443  011206  5954               	subwfb	(??__doprnt+2)& (0+255),w,b
 22444  011208  B0D8               	btfsc	status,0,c
 22445  01120A  D003               	goto	l17968
 22446                           
 22447                           ; BSR set to: 2
 22448                           ;doprnt.c: 1361: prec = c;
 22449  01120C  C283  F27F         	movff	__doprnt@c,__doprnt@prec
 22450  011210  6B80               	clrf	(__doprnt@prec+1)& (0+255),b
 22451  011212                     l17968:
 22452                           
 22453                           ; BSR set to: 2
 22454                           ;doprnt.c: 1364: if(width && flag & 0x03)
 22455  011212  517D               	movf	__doprnt@width& (0+255),w,b
 22456  011214  117E               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22457  011216  B4D8               	btfsc	status,2,c
 22458  011218  D00D               	goto	l17974
 22459                           
 22460                           ; BSR set to: 2
 22461  01121A  0E03               	movlw	3
 22462  01121C  1581               	andwf	__doprnt@flag& (0+255),w,b
 22463  01121E  6F52               	movwf	??__doprnt& (0+255),b
 22464  011220  0E00               	movlw	0
 22465  011222  1582               	andwf	(__doprnt@flag+1)& (0+255),w,b
 22466  011224  6F53               	movwf	(??__doprnt+1)& (0+255),b
 22467  011226  5152               	movf	??__doprnt& (0+255),w,b
 22468  011228  1153               	iorwf	(??__doprnt+1)& (0+255),w,b
 22469  01122A  B4D8               	btfsc	status,2,c
 22470  01122C  D003               	goto	l17974
 22471                           
 22472                           ; BSR set to: 2
 22473                           ;doprnt.c: 1365: width--;
 22474  01122E  077D               	decf	__doprnt@width& (0+255),f,b
 22475  011230  A0D8               	btfss	status,0,c
 22476  011232  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 22477  011234                     l17974:
 22478                           
 22479                           ; BSR set to: 2
 22480                           ;doprnt.c: 1367: if(flag & 0x4000) {
 22481  011234  AD82               	btfss	(__doprnt@flag+1)& (0+255),6,b
 22482  011236  D013               	goto	l17982
 22483                           
 22484                           ; BSR set to: 2
 22485                           ;doprnt.c: 1368: if(width > prec)
 22486  011238  517D               	movf	__doprnt@width& (0+255),w,b
 22487  01123A  5D7F               	subwf	__doprnt@prec& (0+255),w,b
 22488  01123C  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 22489  01123E  0A80               	xorlw	128
 22490  011240  6F52               	movwf	??__doprnt& (0+255),b
 22491  011242  517E               	movf	(__doprnt@width+1)& (0+255),w,b
 22492  011244  0A80               	xorlw	128
 22493  011246  5952               	subwfb	??__doprnt& (0+255),w,b
 22494  011248  B0D8               	btfsc	status,0,c
 22495  01124A  D005               	goto	l17980
 22496                           
 22497                           ; BSR set to: 2
 22498                           ;doprnt.c: 1369: width -= prec;
 22499  01124C  517F               	movf	__doprnt@prec& (0+255),w,b
 22500  01124E  5F7D               	subwf	__doprnt@width& (0+255),f,b
 22501  011250  5180               	movf	(__doprnt@prec+1)& (0+255),w,b
 22502  011252  5B7E               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22503  011254  D004               	goto	l17982
 22504  011256                     l17980:
 22505                           
 22506                           ; BSR set to: 2
 22507                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 22508  011256  0E00               	movlw	0
 22509  011258  6F7E               	movwf	(__doprnt@width+1)& (0+255),b
 22510  01125A  0E00               	movlw	0
 22511  01125C  6F7D               	movwf	__doprnt@width& (0+255),b
 22512  01125E                     l17982:
 22513                           
 22514                           ; BSR set to: 2
 22515                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 22516  01125E  5183               	movf	__doprnt@c& (0+255),w,b
 22517  011260  6F52               	movwf	??__doprnt& (0+255),b
 22518  011262  6B53               	clrf	(??__doprnt+1)& (0+255),b
 22519  011264  517D               	movf	__doprnt@width& (0+255),w,b
 22520  011266  5D52               	subwf	??__doprnt& (0+255),w,b
 22521  011268  5153               	movf	(??__doprnt+1)& (0+255),w,b
 22522  01126A  0A80               	xorlw	128
 22523  01126C  6F54               	movwf	(??__doprnt+2)& (0+255),b
 22524  01126E  517E               	movf	(__doprnt@width+1)& (0+255),w,b
 22525  011270  0A80               	xorlw	128
 22526  011272  5954               	subwfb	(??__doprnt+2)& (0+255),w,b
 22527  011274  B0D8               	btfsc	status,0,c
 22528  011276  D005               	goto	l17986
 22529                           
 22530                           ; BSR set to: 2
 22531                           ;doprnt.c: 1401: width -= c;
 22532  011278  5183               	movf	__doprnt@c& (0+255),w,b
 22533  01127A  5F7D               	subwf	__doprnt@width& (0+255),f,b
 22534  01127C  0E00               	movlw	0
 22535  01127E  5B7E               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22536  011280  D004               	goto	l17988
 22537  011282                     l17986:
 22538                           
 22539                           ; BSR set to: 2
 22540                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 22541  011282  0E00               	movlw	0
 22542  011284  6F7E               	movwf	(__doprnt@width+1)& (0+255),b
 22543  011286  0E00               	movlw	0
 22544  011288  6F7D               	movwf	__doprnt@width& (0+255),b
 22545  01128A                     l17988:
 22546                           
 22547                           ; BSR set to: 2
 22548                           ;doprnt.c: 1406: if(flag & 0x04) {
 22549  01128A  A581               	btfss	__doprnt@flag& (0+255),2,b
 22550  01128C  D0B5               	goto	l18030
 22551                           
 22552                           ; BSR set to: 2
 22553                           ;doprnt.c: 1408: if(flag & 0x02)
 22554  01128E  A381               	btfss	__doprnt@flag& (0+255),1,b
 22555  011290  D041               	goto	l2510
 22556                           
 22557                           ; BSR set to: 2
 22558  011292  EE20 F002          	lfsr	2,2
 22559  011296  514C               	movf	__doprnt@pb& (0+255),w,b
 22560  011298  26D9               	addwf	fsr2l,f,c
 22561  01129A  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22562  01129C  22DA               	addwfc	fsr2h,f,c
 22563  01129E  50DE               	movf	postinc2,w,c
 22564  0112A0  10DE               	iorwf	postinc2,w,c
 22565  0112A2  10DE               	iorwf	postinc2,w,c
 22566  0112A4  B4D8               	btfsc	status,2,c
 22567  0112A6  D01D               	goto	l2512
 22568                           
 22569                           ; BSR set to: 2
 22570  0112A8  B181               	btfsc	__doprnt@flag& (0+255),0,b
 22571  0112AA  D004               	goto	l17998
 22572                           
 22573                           ; BSR set to: 2
 22574  0112AC  0E00               	movlw	0
 22575  0112AE  6F64               	movwf	(__doprnt$4887+1)& (0+255),b
 22576  0112B0  0E2B               	movlw	43
 22577  0112B2  D003               	goto	L13
 22578  0112B4                     l17998:
 22579                           
 22580                           ; BSR set to: 2
 22581  0112B4  0E00               	movlw	0
 22582  0112B6  6F64               	movwf	(__doprnt$4887+1)& (0+255),b
 22583  0112B8  0E2D               	movlw	45
 22584  0112BA                     L13:
 22585  0112BA  6F63               	movwf	__doprnt$4887& (0+255),b
 22586                           
 22587                           ; BSR set to: 2
 22588  0112BC  EE20 F002          	lfsr	2,2
 22589  0112C0  514C               	movf	__doprnt@pb& (0+255),w,b
 22590  0112C2  26D9               	addwf	fsr2l,f,c
 22591  0112C4  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22592  0112C6  22DA               	addwfc	fsr2h,f,c
 22593  0112C8  D801               	call	u22508
 22594  0112CA  D059               	goto	l18018
 22595  0112CC                     u22508:
 22596  0112CC  0005               	push	
 22597  0112CE  6EFA               	movwf	pclath,c
 22598  0112D0  50DE               	movf	postinc2,w,c
 22599  0112D2  6EFD               	movwf	tosl,c
 22600  0112D4  50DE               	movf	postinc2,w,c
 22601  0112D6  6EFE               	movwf	tosh,c
 22602  0112D8  50DE               	movf	postinc2,w,c
 22603  0112DA  6EFF               	movwf	tosu,c
 22604  0112DC  50FA               	movf	pclath,w,c
 22605  0112DE  5163               	movf	__doprnt$4887& (0+255),w,b
 22606  0112E0  0012               	return		;indir
 22607  0112E2                     l2512:
 22608                           
 22609                           ; BSR set to: 2
 22610  0112E2  B181               	btfsc	__doprnt@flag& (0+255),0,b
 22611  0112E4  D004               	goto	l18004
 22612                           
 22613                           ; BSR set to: 2
 22614  0112E6  0E00               	movlw	0
 22615  0112E8  6F66               	movwf	(__doprnt$4888+1)& (0+255),b
 22616  0112EA  0E2B               	movlw	43
 22617  0112EC  D003               	goto	L14
 22618  0112EE                     l18004:
 22619                           
 22620                           ; BSR set to: 2
 22621  0112EE  0E00               	movlw	0
 22622  0112F0  6F66               	movwf	(__doprnt$4888+1)& (0+255),b
 22623  0112F2  0E2D               	movlw	45
 22624  0112F4                     L14:
 22625  0112F4  6F65               	movwf	__doprnt$4888& (0+255),b
 22626                           
 22627                           ; BSR set to: 2
 22628  0112F6  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22629  0112FA  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22630  0112FE  CFDE F252          	movff	postinc2,??__doprnt
 22631  011302  CFDD F253          	movff	postdec2,??__doprnt+1
 22632  011306  C252  FFD9         	movff	??__doprnt,fsr2l
 22633  01130A  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22634  01130E  C265  FFDF         	movff	__doprnt$4888,indf2
 22635  011312  D02E               	goto	l18016
 22636  011314                     l2510:
 22637                           
 22638                           ; BSR set to: 2
 22639                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 22640  011314  A181               	btfss	__doprnt@flag& (0+255),0,b
 22641  011316  D033               	goto	l18018
 22642                           
 22643                           ; BSR set to: 2
 22644  011318  EE20 F002          	lfsr	2,2
 22645  01131C  514C               	movf	__doprnt@pb& (0+255),w,b
 22646  01131E  26D9               	addwf	fsr2l,f,c
 22647  011320  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22648  011322  22DA               	addwfc	fsr2h,f,c
 22649  011324  50DE               	movf	postinc2,w,c
 22650  011326  10DE               	iorwf	postinc2,w,c
 22651  011328  10DE               	iorwf	postinc2,w,c
 22652  01132A  B4D8               	btfsc	status,2,c
 22653  01132C  D013               	goto	l18014
 22654                           
 22655                           ; BSR set to: 2
 22656  01132E  EE20 F002          	lfsr	2,2
 22657  011332  514C               	movf	__doprnt@pb& (0+255),w,b
 22658  011334  26D9               	addwf	fsr2l,f,c
 22659  011336  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22660  011338  22DA               	addwfc	fsr2h,f,c
 22661  01133A  D801               	call	u22548
 22662  01133C  D020               	goto	l18018
 22663  01133E                     u22548:
 22664  01133E  0005               	push	
 22665  011340  6EFA               	movwf	pclath,c
 22666  011342  50DE               	movf	postinc2,w,c
 22667  011344  6EFD               	movwf	tosl,c
 22668  011346  50DE               	movf	postinc2,w,c
 22669  011348  6EFE               	movwf	tosh,c
 22670  01134A  50DE               	movf	postinc2,w,c
 22671  01134C  6EFF               	movwf	tosu,c
 22672  01134E  50FA               	movf	pclath,w,c
 22673  011350  0E20               	movlw	32
 22674  011352  0012               	return		;indir
 22675  011354                     l18014:
 22676                           
 22677                           ; BSR set to: 2
 22678  011354  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22679  011358  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22680  01135C  CFDE F252          	movff	postinc2,??__doprnt
 22681  011360  CFDD F253          	movff	postdec2,??__doprnt+1
 22682  011364  C252  FFD9         	movff	??__doprnt,fsr2l
 22683  011368  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22684  01136C  0E20               	movlw	32
 22685  01136E  6EDF               	movwf	indf2,c
 22686  011370                     l18016:
 22687                           
 22688                           ; BSR set to: 2
 22689  011370  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22690  011374  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22691  011378  2ADE               	incf	postinc2,f,c
 22692  01137A  0E00               	movlw	0
 22693  01137C  22DD               	addwfc	postdec2,f,c
 22694  01137E                     l18018:
 22695                           
 22696                           ;doprnt.c: 1434: if(width)
 22697  01137E  0102               	movlb	2	; () banked
 22698  011380  517D               	movf	__doprnt@width& (0+255),w,b
 22699  011382  117E               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22700  011384  B4D8               	btfsc	status,2,c
 22701  011386  D1A2               	goto	l18086
 22702                           
 22703                           ; BSR set to: 2
 22704  011388  EE20 F002          	lfsr	2,2
 22705  01138C  514C               	movf	__doprnt@pb& (0+255),w,b
 22706  01138E  26D9               	addwf	fsr2l,f,c
 22707  011390  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22708  011392  22DA               	addwfc	fsr2h,f,c
 22709  011394  50DE               	movf	postinc2,w,c
 22710  011396  10DE               	iorwf	postinc2,w,c
 22711  011398  10DE               	iorwf	postinc2,w,c
 22712  01139A  B4D8               	btfsc	status,2,c
 22713  01139C  D013               	goto	l18024
 22714                           
 22715                           ; BSR set to: 2
 22716  01139E  EE20 F002          	lfsr	2,2
 22717  0113A2  514C               	movf	__doprnt@pb& (0+255),w,b
 22718  0113A4  26D9               	addwf	fsr2l,f,c
 22719  0113A6  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22720  0113A8  22DA               	addwfc	fsr2h,f,c
 22721  0113AA  D801               	call	u22578
 22722  0113AC  D020               	goto	l18028
 22723  0113AE                     u22578:
 22724  0113AE  0005               	push	
 22725  0113B0  6EFA               	movwf	pclath,c
 22726  0113B2  50DE               	movf	postinc2,w,c
 22727  0113B4  6EFD               	movwf	tosl,c
 22728  0113B6  50DE               	movf	postinc2,w,c
 22729  0113B8  6EFE               	movwf	tosh,c
 22730  0113BA  50DE               	movf	postinc2,w,c
 22731  0113BC  6EFF               	movwf	tosu,c
 22732  0113BE  50FA               	movf	pclath,w,c
 22733  0113C0  0E30               	movlw	48
 22734  0113C2  0012               	return		;indir
 22735  0113C4                     l18024:
 22736                           
 22737                           ; BSR set to: 2
 22738  0113C4  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22739  0113C8  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22740  0113CC  CFDE F252          	movff	postinc2,??__doprnt
 22741  0113D0  CFDD F253          	movff	postdec2,??__doprnt+1
 22742  0113D4  C252  FFD9         	movff	??__doprnt,fsr2l
 22743  0113D8  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22744  0113DC  0E30               	movlw	48
 22745  0113DE  6EDF               	movwf	indf2,c
 22746                           
 22747                           ; BSR set to: 2
 22748  0113E0  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22749  0113E4  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22750  0113E8  2ADE               	incf	postinc2,f,c
 22751  0113EA  0E00               	movlw	0
 22752  0113EC  22DD               	addwfc	postdec2,f,c
 22753  0113EE                     l18028:
 22754                           
 22755                           ;doprnt.c: 1437: while(--width);
 22756  0113EE  0102               	movlb	2	; () banked
 22757  0113F0  077D               	decf	__doprnt@width& (0+255),f,b
 22758  0113F2  A0D8               	btfss	status,0,c
 22759  0113F4  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 22760  0113F6  D7C4               	goto	L56
 22761  0113F8                     l18030:
 22762                           
 22763                           ; BSR set to: 2
 22764                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 22765  0113F8  517D               	movf	__doprnt@width& (0+255),w,b
 22766  0113FA  117E               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22767  0113FC  B4D8               	btfsc	status,2,c
 22768  0113FE  D03B               	goto	u22620
 22769  011400                     u22590:
 22770                           
 22771                           ; BSR set to: 2
 22772  011400  EE20 F002          	lfsr	2,2
 22773  011404  514C               	movf	__doprnt@pb& (0+255),w,b
 22774  011406  26D9               	addwf	fsr2l,f,c
 22775  011408  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22776  01140A  22DA               	addwfc	fsr2h,f,c
 22777  01140C  50DE               	movf	postinc2,w,c
 22778  01140E  10DE               	iorwf	postinc2,w,c
 22779  011410  10DE               	iorwf	postinc2,w,c
 22780  011412  B4D8               	btfsc	status,2,c
 22781  011414  D013               	goto	l18036
 22782                           
 22783                           ; BSR set to: 2
 22784  011416  EE20 F002          	lfsr	2,2
 22785  01141A  514C               	movf	__doprnt@pb& (0+255),w,b
 22786  01141C  26D9               	addwf	fsr2l,f,c
 22787  01141E  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22788  011420  22DA               	addwfc	fsr2h,f,c
 22789  011422  D801               	call	u22618
 22790  011424  D020               	goto	l18040
 22791  011426                     u22618:
 22792  011426  0005               	push	
 22793  011428  6EFA               	movwf	pclath,c
 22794  01142A  50DE               	movf	postinc2,w,c
 22795  01142C  6EFD               	movwf	tosl,c
 22796  01142E  50DE               	movf	postinc2,w,c
 22797  011430  6EFE               	movwf	tosh,c
 22798  011432  50DE               	movf	postinc2,w,c
 22799  011434  6EFF               	movwf	tosu,c
 22800  011436  50FA               	movf	pclath,w,c
 22801  011438  0E20               	movlw	32
 22802  01143A  0012               	return		;indir
 22803  01143C                     l18036:
 22804                           
 22805                           ; BSR set to: 2
 22806  01143C  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22807  011440  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22808  011444  CFDE F252          	movff	postinc2,??__doprnt
 22809  011448  CFDD F253          	movff	postdec2,??__doprnt+1
 22810  01144C  C252  FFD9         	movff	??__doprnt,fsr2l
 22811  011450  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22812  011454  0E20               	movlw	32
 22813  011456  6EDF               	movwf	indf2,c
 22814                           
 22815                           ; BSR set to: 2
 22816  011458  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22817  01145C  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22818  011460  2ADE               	incf	postinc2,f,c
 22819  011462  0E00               	movlw	0
 22820  011464  22DD               	addwfc	postdec2,f,c
 22821  011466                     l18040:
 22822                           
 22823                           ;doprnt.c: 1450: while(--width);
 22824  011466  0102               	movlb	2	; () banked
 22825  011468  077D               	decf	__doprnt@width& (0+255),f,b
 22826  01146A  A0D8               	btfss	status,0,c
 22827  01146C  077E               	decf	(__doprnt@width+1)& (0+255),f,b
 22828  01146E  517D               	movf	__doprnt@width& (0+255),w,b
 22829  011470  117E               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22830  011472  A4D8               	btfss	status,2,c
 22831  011474  D7C5               	goto	u22590
 22832  011476                     u22620:
 22833                           
 22834                           ; BSR set to: 2
 22835                           ;doprnt.c: 1453: if(flag & 0x02)
 22836  011476  A381               	btfss	__doprnt@flag& (0+255),1,b
 22837  011478  D041               	goto	l2544
 22838                           
 22839                           ; BSR set to: 2
 22840  01147A  EE20 F002          	lfsr	2,2
 22841  01147E  514C               	movf	__doprnt@pb& (0+255),w,b
 22842  011480  26D9               	addwf	fsr2l,f,c
 22843  011482  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22844  011484  22DA               	addwfc	fsr2h,f,c
 22845  011486  50DE               	movf	postinc2,w,c
 22846  011488  10DE               	iorwf	postinc2,w,c
 22847  01148A  10DE               	iorwf	postinc2,w,c
 22848  01148C  B4D8               	btfsc	status,2,c
 22849  01148E  D01D               	goto	l2546
 22850                           
 22851                           ; BSR set to: 2
 22852  011490  B181               	btfsc	__doprnt@flag& (0+255),0,b
 22853  011492  D004               	goto	l18048
 22854                           
 22855                           ; BSR set to: 2
 22856  011494  0E00               	movlw	0
 22857  011496  6F68               	movwf	(__doprnt$4889+1)& (0+255),b
 22858  011498  0E2B               	movlw	43
 22859  01149A  D003               	goto	L15
 22860  01149C                     l18048:
 22861                           
 22862                           ; BSR set to: 2
 22863  01149C  0E00               	movlw	0
 22864  01149E  6F68               	movwf	(__doprnt$4889+1)& (0+255),b
 22865  0114A0  0E2D               	movlw	45
 22866  0114A2                     L15:
 22867  0114A2  6F67               	movwf	__doprnt$4889& (0+255),b
 22868                           
 22869                           ; BSR set to: 2
 22870  0114A4  EE20 F002          	lfsr	2,2
 22871  0114A8  514C               	movf	__doprnt@pb& (0+255),w,b
 22872  0114AA  26D9               	addwf	fsr2l,f,c
 22873  0114AC  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22874  0114AE  22DA               	addwfc	fsr2h,f,c
 22875  0114B0  D801               	call	u22668
 22876  0114B2  D10C               	goto	l18086
 22877  0114B4                     u22668:
 22878  0114B4  0005               	push	
 22879  0114B6  6EFA               	movwf	pclath,c
 22880  0114B8  50DE               	movf	postinc2,w,c
 22881  0114BA  6EFD               	movwf	tosl,c
 22882  0114BC  50DE               	movf	postinc2,w,c
 22883  0114BE  6EFE               	movwf	tosh,c
 22884  0114C0  50DE               	movf	postinc2,w,c
 22885  0114C2  6EFF               	movwf	tosu,c
 22886  0114C4  50FA               	movf	pclath,w,c
 22887  0114C6  5167               	movf	__doprnt$4889& (0+255),w,b
 22888  0114C8  0012               	return		;indir
 22889  0114CA                     l2546:
 22890                           
 22891                           ; BSR set to: 2
 22892  0114CA  B181               	btfsc	__doprnt@flag& (0+255),0,b
 22893  0114CC  D004               	goto	l18054
 22894                           
 22895                           ; BSR set to: 2
 22896  0114CE  0E00               	movlw	0
 22897  0114D0  6F6A               	movwf	(__doprnt$4890+1)& (0+255),b
 22898  0114D2  0E2B               	movlw	43
 22899  0114D4  D003               	goto	L16
 22900  0114D6                     l18054:
 22901                           
 22902                           ; BSR set to: 2
 22903  0114D6  0E00               	movlw	0
 22904  0114D8  6F6A               	movwf	(__doprnt$4890+1)& (0+255),b
 22905  0114DA  0E2D               	movlw	45
 22906  0114DC                     L16:
 22907  0114DC  6F69               	movwf	__doprnt$4890& (0+255),b
 22908                           
 22909                           ; BSR set to: 2
 22910  0114DE  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22911  0114E2  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22912  0114E6  CFDE F252          	movff	postinc2,??__doprnt
 22913  0114EA  CFDD F253          	movff	postdec2,??__doprnt+1
 22914  0114EE  C252  FFD9         	movff	??__doprnt,fsr2l
 22915  0114F2  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22916  0114F6  C269  FFDF         	movff	__doprnt$4890,indf2
 22917  0114FA  D0E1               	goto	l18084
 22918  0114FC                     l2544:
 22919                           
 22920                           ; BSR set to: 2
 22921                           ;doprnt.c: 1462: else if(flag & 0x01)
 22922  0114FC  A181               	btfss	__doprnt@flag& (0+255),0,b
 22923  0114FE  D0E6               	goto	l18086
 22924                           
 22925                           ; BSR set to: 2
 22926  011500  EE20 F002          	lfsr	2,2
 22927  011504  514C               	movf	__doprnt@pb& (0+255),w,b
 22928  011506  26D9               	addwf	fsr2l,f,c
 22929  011508  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22930  01150A  22DA               	addwfc	fsr2h,f,c
 22931  01150C  50DE               	movf	postinc2,w,c
 22932  01150E  10DE               	iorwf	postinc2,w,c
 22933  011510  10DE               	iorwf	postinc2,w,c
 22934  011512  B4D8               	btfsc	status,2,c
 22935  011514  D013               	goto	l18064
 22936                           
 22937                           ; BSR set to: 2
 22938  011516  EE20 F002          	lfsr	2,2
 22939  01151A  514C               	movf	__doprnt@pb& (0+255),w,b
 22940  01151C  26D9               	addwf	fsr2l,f,c
 22941  01151E  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22942  011520  22DA               	addwfc	fsr2h,f,c
 22943  011522  D801               	call	u22708
 22944  011524  D0D3               	goto	l18086
 22945  011526                     u22708:
 22946  011526  0005               	push	
 22947  011528  6EFA               	movwf	pclath,c
 22948  01152A  50DE               	movf	postinc2,w,c
 22949  01152C  6EFD               	movwf	tosl,c
 22950  01152E  50DE               	movf	postinc2,w,c
 22951  011530  6EFE               	movwf	tosh,c
 22952  011532  50DE               	movf	postinc2,w,c
 22953  011534  6EFF               	movwf	tosu,c
 22954  011536  50FA               	movf	pclath,w,c
 22955  011538  0E20               	movlw	32
 22956  01153A  0012               	return		;indir
 22957  01153C                     l18064:
 22958                           
 22959                           ; BSR set to: 2
 22960  01153C  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 22961  011540  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22962  011544  CFDE F252          	movff	postinc2,??__doprnt
 22963  011548  CFDD F253          	movff	postdec2,??__doprnt+1
 22964  01154C  C252  FFD9         	movff	??__doprnt,fsr2l
 22965  011550  C253  FFDA         	movff	??__doprnt+1,fsr2h
 22966  011554  0E20               	movlw	32
 22967  011556  6EDF               	movwf	indf2,c
 22968  011558  D0B2               	goto	l18084
 22969  01155A                     l18068:
 22970                           
 22971                           ; BSR set to: 2
 22972                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 22973  01155A  C27F  F252         	movff	__doprnt@prec,??__doprnt
 22974  01155E  C280  F253         	movff	__doprnt@prec+1,??__doprnt+1
 22975  011562  90D8               	bcf	status,0,c
 22976  011564  3752               	rlcf	??__doprnt& (0+255),f,b
 22977  011566  3753               	rlcf	(??__doprnt+1)& (0+255),f,b
 22978  011568  90D8               	bcf	status,0,c
 22979  01156A  3752               	rlcf	??__doprnt& (0+255),f,b
 22980  01156C  3753               	rlcf	(??__doprnt+1)& (0+255),f,b
 22981  01156E  0E1F               	movlw	low _dpowers
 22982  011570  2552               	addwf	??__doprnt& (0+255),w,b
 22983  011572  6EF6               	movwf	tblptrl,c
 22984  011574  0EEA               	movlw	high _dpowers
 22985  011576  2153               	addwfc	(??__doprnt+1)& (0+255),w,b
 22986  011578  6EF7               	movwf	tblptrh,c
 22987  01157A                     	if	1	;There are 3 active tblptr bytes
 22988  01157A  6AF8               	clrf	tblptru,c
 22989  01157C  0E00               	movlw	low (__mediumconst shr (0+16))
 22990  01157E  22F8               	addwfc	tblptru,f,c
 22991  011580                     	endif
 22992  011580  0009               	tblrd		*+
 22993  011582  CFF5 F204          	movff	tablat,___lldiv@divisor
 22994  011586  0009               	tblrd		*+
 22995  011588  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 22996  01158C  0009               	tblrd		*+
 22997  01158E  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 22998  011592  000A               	tblrd		*-
 22999  011594  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 23000  011598  C279  F200         	movff	__doprnt@val,___lldiv@dividend
 23001  01159C  C27A  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 23002  0115A0  C27B  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 23003  0115A4  C27C  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 23004  0115A8  ECBB  F0D4         	call	___lldiv
 23005  0115AC  C200  F20D         	movff	?___lldiv,___llmod@dividend
 23006  0115B0  C201  F20E         	movff	?___lldiv+1,___llmod@dividend+1
 23007  0115B4  C202  F20F         	movff	?___lldiv+2,___llmod@dividend+2
 23008  0115B8  C203  F210         	movff	?___lldiv+3,___llmod@dividend+3
 23009  0115BC  0E0A               	movlw	10
 23010  0115BE  0102               	movlb	2	; () banked
 23011  0115C0  6F11               	movwf	___llmod@divisor& (0+255),b
 23012  0115C2  0E00               	movlw	0
 23013  0115C4  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 23014  0115C6  0E00               	movlw	0
 23015  0115C8  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 23016  0115CA  0E00               	movlw	0
 23017  0115CC  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 23018  0115CE  ECF1  F0D5         	call	___llmod	;wreg free
 23019  0115D2  0102               	movlb	2	; () banked
 23020  0115D4  510D               	movf	?___llmod& (0+255),w,b
 23021  0115D6  0F30               	addlw	48
 23022  0115D8  6F83               	movwf	__doprnt@c& (0+255),b
 23023                           
 23024                           ;doprnt.c: 1510: break;
 23025  0115DA  D045               	goto	l18078
 23026  0115DC                     l18070:
 23027                           
 23028                           ; BSR set to: 2
 23029                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 23030  0115DC  C279  F200         	movff	__doprnt@val,___lldiv@dividend
 23031  0115E0  C27A  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 23032  0115E4  C27B  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 23033  0115E8  C27C  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 23034  0115EC  C27F  F252         	movff	__doprnt@prec,??__doprnt
 23035  0115F0  C280  F253         	movff	__doprnt@prec+1,??__doprnt+1
 23036  0115F4  90D8               	bcf	status,0,c
 23037  0115F6  3752               	rlcf	??__doprnt& (0+255),f,b
 23038  0115F8  3753               	rlcf	(??__doprnt+1)& (0+255),f,b
 23039  0115FA  90D8               	bcf	status,0,c
 23040  0115FC  3752               	rlcf	??__doprnt& (0+255),f,b
 23041  0115FE  3753               	rlcf	(??__doprnt+1)& (0+255),f,b
 23042  011600  0EFF               	movlw	low _hexpowers
 23043  011602  2552               	addwf	??__doprnt& (0+255),w,b
 23044  011604  6EF6               	movwf	tblptrl,c
 23045  011606  0EE6               	movlw	high _hexpowers
 23046  011608  2153               	addwfc	(??__doprnt+1)& (0+255),w,b
 23047  01160A  6EF7               	movwf	tblptrh,c
 23048  01160C                     	if	1	;There are 3 active tblptr bytes
 23049  01160C  6AF8               	clrf	tblptru,c
 23050  01160E  0E00               	movlw	low (__mediumconst shr (0+16))
 23051  011610  22F8               	addwfc	tblptru,f,c
 23052  011612                     	endif
 23053  011612  0009               	tblrd		*+
 23054  011614  CFF5 F204          	movff	tablat,___lldiv@divisor
 23055  011618  0009               	tblrd		*+
 23056  01161A  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 23057  01161E  0009               	tblrd		*+
 23058  011620  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 23059  011624  000A               	tblrd		*-
 23060  011626  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 23061  01162A  ECBB  F0D4         	call	___lldiv	;wreg free
 23062  01162E  0102               	movlb	2	; () banked
 23063  011630  5100               	movf	?___lldiv& (0+255),w,b
 23064  011632  0B0F               	andlw	15
 23065  011634  6F5A               	movwf	__doprnt@idx& (0+255),b
 23066                           
 23067                           ; BSR set to: 2
 23068                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 23069  011636  0E7E               	movlw	low STR_336
 23070  011638  255A               	addwf	__doprnt@idx& (0+255),w,b
 23071  01163A  6EF6               	movwf	tblptrl,c
 23072  01163C  6AF7               	clrf	tblptrh,c
 23073  01163E  0EFB               	movlw	high STR_336
 23074  011640  22F7               	addwfc	tblptrh,f,c
 23075  011642                     	if	1	;There are 3 active tblptr bytes
 23076  011642  6AF8               	clrf	tblptru,c
 23077  011644  0E00               	movlw	low (__mediumconst shr (0+16))
 23078  011646  22F8               	addwfc	tblptru,f,c
 23079  011648                     	endif
 23080  011648  0008               	tblrd		*
 23081  01164A  CFF5 F283          	movff	tablat,__doprnt@c
 23082                           
 23083                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 23084  01164E  D00B               	goto	l18078
 23085  011650                     l18076:
 23086                           
 23087                           ; BSR set to: 2
 23088  011650  5181               	movf	__doprnt@flag& (0+255),w,b
 23089  011652  0BC0               	andlw	192
 23090                           
 23091                           ; Switch size 1, requested type "simple"
 23092                           ; Number of cases is 3, Range of values is 0 to 192
 23093                           ; switch strategies available:
 23094                           ; Name         Instructions Cycles
 23095                           ; simple_byte           10     6 (average)
 23096                           ;	Chosen strategy is simple_byte
 23097  011654  0A00               	xorlw	0	; case 0
 23098  011656  B4D8               	btfsc	status,2,c
 23099  011658  D780               	goto	l18068
 23100  01165A  0A80               	xorlw	128	; case 128
 23101  01165C  B4D8               	btfsc	status,2,c
 23102  01165E  D7BE               	goto	l18070
 23103  011660  0A40               	xorlw	64	; case 192
 23104  011662  B4D8               	btfsc	status,2,c
 23105  011664  D77A               	goto	l18068
 23106  011666                     l18078:
 23107                           
 23108                           ; BSR set to: 2
 23109  011666  EE20 F002          	lfsr	2,2
 23110  01166A  514C               	movf	__doprnt@pb& (0+255),w,b
 23111  01166C  26D9               	addwf	fsr2l,f,c
 23112  01166E  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 23113  011670  22DA               	addwfc	fsr2h,f,c
 23114  011672  50DE               	movf	postinc2,w,c
 23115  011674  10DE               	iorwf	postinc2,w,c
 23116  011676  10DE               	iorwf	postinc2,w,c
 23117  011678  B4D8               	btfsc	status,2,c
 23118  01167A  D013               	goto	l18082
 23119                           
 23120                           ; BSR set to: 2
 23121  01167C  EE20 F002          	lfsr	2,2
 23122  011680  514C               	movf	__doprnt@pb& (0+255),w,b
 23123  011682  26D9               	addwf	fsr2l,f,c
 23124  011684  514D               	movf	(__doprnt@pb+1)& (0+255),w,b
 23125  011686  22DA               	addwfc	fsr2h,f,c
 23126  011688  D801               	call	u22728
 23127  01168A  D020               	goto	l18086
 23128  01168C                     u22728:
 23129  01168C  0005               	push	
 23130  01168E  6EFA               	movwf	pclath,c
 23131  011690  50DE               	movf	postinc2,w,c
 23132  011692  6EFD               	movwf	tosl,c
 23133  011694  50DE               	movf	postinc2,w,c
 23134  011696  6EFE               	movwf	tosh,c
 23135  011698  50DE               	movf	postinc2,w,c
 23136  01169A  6EFF               	movwf	tosu,c
 23137  01169C  50FA               	movf	pclath,w,c
 23138  01169E  5183               	movf	__doprnt@c& (0+255),w,b
 23139  0116A0  0012               	return		;indir
 23140  0116A2                     l18082:
 23141                           
 23142                           ; BSR set to: 2
 23143  0116A2  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 23144  0116A6  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 23145  0116AA  CFDE F252          	movff	postinc2,??__doprnt
 23146  0116AE  CFDD F253          	movff	postdec2,??__doprnt+1
 23147  0116B2  C252  FFD9         	movff	??__doprnt,fsr2l
 23148  0116B6  C253  FFDA         	movff	??__doprnt+1,fsr2h
 23149  0116BA  C283  FFDF         	movff	__doprnt@c,indf2
 23150  0116BE                     l18084:
 23151                           
 23152                           ; BSR set to: 2
 23153  0116BE  C24C  FFD9         	movff	__doprnt@pb,fsr2l
 23154  0116C2  C24D  FFDA         	movff	__doprnt@pb+1,fsr2h
 23155  0116C6  2ADE               	incf	postinc2,f,c
 23156  0116C8  0E00               	movlw	0
 23157  0116CA  22DD               	addwfc	postdec2,f,c
 23158  0116CC                     l18086:
 23159  0116CC  0102               	movlb	2	; () banked
 23160  0116CE  077F               	decf	__doprnt@prec& (0+255),f,b
 23161  0116D0  A0D8               	btfss	status,0,c
 23162  0116D2  0780               	decf	(__doprnt@prec+1)& (0+255),f,b
 23163  0116D4  297F               	incf	__doprnt@prec& (0+255),w,b
 23164  0116D6  E1BC               	bnz	l18076
 23165  0116D8  2980               	incf	(__doprnt@prec+1)& (0+255),w,b
 23166  0116DA  A4D8               	btfss	status,2,c
 23167  0116DC  D7B9               	goto	l18076
 23168  0116DE                     u22730:
 23169  0116DE  0102               	movlb	2	; () banked
 23170  0116E0  514E               	movf	__doprnt@f& (0+255),w,b
 23171  0116E2  6F52               	movwf	??__doprnt& (0+255),b
 23172  0116E4  514F               	movf	(__doprnt@f+1)& (0+255),w,b
 23173  0116E6  6F53               	movwf	(??__doprnt+1)& (0+255),b
 23174  0116E8  4B4E               	infsnz	__doprnt@f& (0+255),f,b
 23175  0116EA  2B4F               	incf	(__doprnt@f+1)& (0+255),f,b
 23176  0116EC  C252  FFF6         	movff	??__doprnt,tblptrl
 23177  0116F0  C253  FFF7         	movff	??__doprnt+1,tblptrh
 23178  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 23179  0116F6  6EF8               	movwf	tblptru,c
 23180  0116F8  0E0E               	movlw	(high __ramtop+-1)
 23181  0116FA  64F7               	cpfsgt	tblptrh,c
 23182  0116FC  D003               	bra	u22747
 23183  0116FE  0008               	tblrd		*
 23184  011700  50F5               	movf	tablat,w,c
 23185  011702  D005               	bra	u22740
 23186  011704                     u22747:
 23187  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 23188  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 23189  01170C  50EF               	movf	indf0,w,c
 23190  01170E                     u22740:
 23191  01170E  0102               	movlb	2	; () banked
 23192  011710  6F83               	movwf	__doprnt@c& (0+255),b
 23193  011712  5183               	movf	__doprnt@c& (0+255),w,b
 23194  011714  A4D8               	btfss	status,2,c
 23195  011716  EF02  F080         	goto	l17542
 23196  01171A                     u22750:
 23197                           
 23198                           ; BSR set to: 2
 23199                           ;doprnt.c: 1559: return 0;
 23200  01171A  0E00               	movlw	0
 23201  01171C  6F4D               	movwf	(?__doprnt+1)& (0+255),b
 23202  01171E  0E00               	movlw	0
 23203  011720  6F4C               	movwf	?__doprnt& (0+255),b
 23204                           
 23205                           ; BSR set to: 2
 23206  011722  0012               	return		;funcret
 23207  011724                     __end_of__doprnt:
 23208                           	opt callstack 0
 23209                           
 23210 ;; *************** function _scale *****************
 23211 ;; Defined at:
 23212 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 23213 ;; Parameters:    Size  Location     Type
 23214 ;;  scl             1    wreg     char 
 23215 ;; Auto vars:     Size  Location     Type
 23216 ;;  scl             1   47[BANK2 ] char 
 23217 ;; Return value:  Size  Location     Type
 23218 ;;                  4   39[BANK2 ] char 
 23219 ;; Registers used:
 23220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23221 ;; Tracked objects:
 23222 ;;		On entry : 0/0
 23223 ;;		On exit  : 0/0
 23224 ;;		Unchanged: 0/0
 23225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23226 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23227 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23229 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23230 ;;Total ram usage:        9 bytes
 23231 ;; Hardware stack levels used:    1
 23232 ;; Hardware stack levels required when called:   12
 23233 ;; This function calls:
 23234 ;;		___awdiv
 23235 ;;		___awmod
 23236 ;;		___flmul
 23237 ;; This function is called by:
 23238 ;;		__doprnt
 23239 ;; This function uses a non-reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text67
 23243  0151D8                     __ptext67:
 23244                           	opt callstack 0
 23245  0151D8                     _scale:
 23246                           	opt callstack 13
 23247                           
 23248                           ; BSR set to: 2
 23249                           ;incstack = 0
 23250                           ;scale@scl stored from wreg
 23251  0151D8  0102               	movlb	2	; () banked
 23252  0151DA  6F2F               	movwf	scale@scl& (0+255),b
 23253                           
 23254                           ;doprnt.c: 436: if(scl < 0) {
 23255  0151DC  0102               	movlb	2	; () banked
 23256  0151DE  AF2F               	btfss	scale@scl& (0+255),7,b
 23257  0151E0  D10B               	goto	l17174
 23258                           
 23259                           ; BSR set to: 2
 23260                           ;doprnt.c: 437: scl = -scl;
 23261  0151E2  6D2F               	negf	scale@scl& (0+255),b
 23262                           
 23263                           ;doprnt.c: 438: if(scl>=110)
 23264  0151E4  512F               	movf	scale@scl& (0+255),w,b
 23265  0151E6  0A80               	xorlw	128
 23266  0151E8  0F12               	addlw	-238
 23267  0151EA  A0D8               	btfss	status,0,c
 23268  0151EC  D095               	goto	l17164
 23269                           
 23270                           ; BSR set to: 2
 23271                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 23272  0151EE  0E00               	movlw	0
 23273  0151F0  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23274  0151F2  0E0A               	movlw	10
 23275  0151F4  6F08               	movwf	___awdiv@divisor& (0+255),b
 23276  0151F6  0E00               	movlw	0
 23277  0151F8  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23278  0151FA  0E64               	movlw	100
 23279  0151FC  6F02               	movwf	___awmod@divisor& (0+255),b
 23280  0151FE  512F               	movf	scale@scl& (0+255),w,b
 23281  015200  6F00               	movwf	___awmod@dividend& (0+255),b
 23282  015202  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23283  015204  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23284  015206  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23285  015208  EC80  F0D5         	call	___awmod
 23286  01520C  C200  F206         	movff	?___awmod,___awdiv@dividend
 23287  015210  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 23288  015214  EC78  F0D4         	call	___awdiv	;wreg free
 23289  015218  0E09               	movlw	9
 23290  01521A  0102               	movlb	2	; () banked
 23291  01521C  2706               	addwf	?___awdiv& (0+255),f,b
 23292  01521E  5106               	movf	?___awdiv& (0+255),w,b
 23293  015220  0D04               	mullw	4
 23294  015222  0ECB               	movlw	low __npowers_
 23295  015224  24F3               	addwf	prodl,w,c
 23296  015226  6EF6               	movwf	tblptrl,c
 23297  015228  0EE6               	movlw	high __npowers_
 23298  01522A  20F4               	addwfc	prodh,w,c
 23299  01522C  6EF7               	movwf	tblptrh,c
 23300  01522E                     	if	1	;There are 3 active tblptr bytes
 23301  01522E  6AF8               	clrf	tblptru,c
 23302  015230  0E00               	movlw	low (__mediumconst shr (0+16))
 23303  015232  22F8               	addwfc	tblptru,f,c
 23304  015234                     	endif
 23305  015234  0009               	tblrd		*+
 23306  015236  CFF5 F212          	movff	tablat,___flmul@a
 23307  01523A  0009               	tblrd		*+
 23308  01523C  CFF5 F213          	movff	tablat,___flmul@a+1
 23309  015240  0009               	tblrd		*+
 23310  015242  CFF5 F214          	movff	tablat,___flmul@a+2
 23311  015246  000A               	tblrd		*-
 23312  015248  CFF5 F215          	movff	tablat,___flmul@a+3
 23313  01524C  0E00               	movlw	0
 23314  01524E  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23315  015250  0E64               	movlw	100
 23316  015252  6F08               	movwf	___awdiv@divisor& (0+255),b
 23317  015254  512F               	movf	scale@scl& (0+255),w,b
 23318  015256  6F06               	movwf	___awdiv@dividend& (0+255),b
 23319  015258  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 23320  01525A  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 23321  01525C  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23322  01525E  EC78  F0D4         	call	___awdiv	;wreg free
 23323  015262  0E12               	movlw	18
 23324  015264  0102               	movlb	2	; () banked
 23325  015266  2706               	addwf	?___awdiv& (0+255),f,b
 23326  015268  5106               	movf	?___awdiv& (0+255),w,b
 23327  01526A  0D04               	mullw	4
 23328  01526C  0ECB               	movlw	low __npowers_
 23329  01526E  24F3               	addwf	prodl,w,c
 23330  015270  6EF6               	movwf	tblptrl,c
 23331  015272  0EE6               	movlw	high __npowers_
 23332  015274  20F4               	addwfc	prodh,w,c
 23333  015276  6EF7               	movwf	tblptrh,c
 23334  015278                     	if	1	;There are 3 active tblptr bytes
 23335  015278  6AF8               	clrf	tblptru,c
 23336  01527A  0E00               	movlw	low (__mediumconst shr (0+16))
 23337  01527C  22F8               	addwfc	tblptru,f,c
 23338  01527E                     	endif
 23339  01527E  0009               	tblrd		*+
 23340  015280  CFF5 F20E          	movff	tablat,___flmul@b
 23341  015284  0009               	tblrd		*+
 23342  015286  CFF5 F20F          	movff	tablat,___flmul@b+1
 23343  01528A  0009               	tblrd		*+
 23344  01528C  CFF5 F210          	movff	tablat,___flmul@b+2
 23345  015290  000A               	tblrd		*-
 23346  015292  CFF5 F211          	movff	tablat,___flmul@b+3
 23347  015296  ECA8  F0B0         	call	___flmul	;wreg free
 23348  01529A  C20E  F22B         	movff	?___flmul,_scale$5931
 23349  01529E  C20F  F22C         	movff	?___flmul+1,_scale$5931+1
 23350  0152A2  C210  F22D         	movff	?___flmul+2,_scale$5931+2
 23351  0152A6  C211  F22E         	movff	?___flmul+3,_scale$5931+3
 23352                           
 23353                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 23354  0152AA  C22B  F20E         	movff	_scale$5931,___flmul@b
 23355  0152AE  C22C  F20F         	movff	_scale$5931+1,___flmul@b+1
 23356  0152B2  C22D  F210         	movff	_scale$5931+2,___flmul@b+2
 23357  0152B6  C22E  F211         	movff	_scale$5931+3,___flmul@b+3
 23358  0152BA  0E00               	movlw	0
 23359  0152BC  0102               	movlb	2	; () banked
 23360  0152BE  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23361  0152C0  0E0A               	movlw	10
 23362  0152C2  6F02               	movwf	___awmod@divisor& (0+255),b
 23363  0152C4  512F               	movf	scale@scl& (0+255),w,b
 23364  0152C6  6F00               	movwf	___awmod@dividend& (0+255),b
 23365  0152C8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23366  0152CA  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23367  0152CC  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23368  0152CE  EC80  F0D5         	call	___awmod	;wreg free
 23369  0152D2  0102               	movlb	2	; () banked
 23370  0152D4  5100               	movf	?___awmod& (0+255),w,b
 23371  0152D6  0D04               	mullw	4
 23372  0152D8  0ECB               	movlw	low __npowers_
 23373  0152DA  24F3               	addwf	prodl,w,c
 23374  0152DC  6EF6               	movwf	tblptrl,c
 23375  0152DE  0EE6               	movlw	high __npowers_
 23376  0152E0  20F4               	addwfc	prodh,w,c
 23377  0152E2  6EF7               	movwf	tblptrh,c
 23378  0152E4                     	if	1	;There are 3 active tblptr bytes
 23379  0152E4  6AF8               	clrf	tblptru,c
 23380  0152E6  0E00               	movlw	low (__mediumconst shr (0+16))
 23381  0152E8  22F8               	addwfc	tblptru,f,c
 23382  0152EA                     	endif
 23383  0152EA  0009               	tblrd		*+
 23384  0152EC  CFF5 F212          	movff	tablat,___flmul@a
 23385  0152F0  0009               	tblrd		*+
 23386  0152F2  CFF5 F213          	movff	tablat,___flmul@a+1
 23387  0152F6  0009               	tblrd		*+
 23388  0152F8  CFF5 F214          	movff	tablat,___flmul@a+2
 23389  0152FC  000A               	tblrd		*-
 23390  0152FE  CFF5 F215          	movff	tablat,___flmul@a+3
 23391  015302  ECA8  F0B0         	call	___flmul	;wreg free
 23392  015306  C20E  F227         	movff	?___flmul,?_scale
 23393  01530A  C20F  F228         	movff	?___flmul+1,?_scale+1
 23394  01530E  C210  F229         	movff	?___flmul+2,?_scale+2
 23395  015312  C211  F22A         	movff	?___flmul+3,?_scale+3
 23396  015316  0012               	return	
 23397  015318                     l17164:
 23398                           
 23399                           ; BSR set to: 2
 23400                           ;doprnt.c: 440: else if(scl > 10)
 23401  015318  512F               	movf	scale@scl& (0+255),w,b
 23402  01531A  0A80               	xorlw	128
 23403  01531C  0F75               	addlw	-139
 23404  01531E  A0D8               	btfss	status,0,c
 23405  015320  D053               	goto	l17170
 23406                           
 23407                           ; BSR set to: 2
 23408                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 23409  015322  0E00               	movlw	0
 23410  015324  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23411  015326  0E0A               	movlw	10
 23412  015328  6F08               	movwf	___awdiv@divisor& (0+255),b
 23413  01532A  512F               	movf	scale@scl& (0+255),w,b
 23414  01532C  6F06               	movwf	___awdiv@dividend& (0+255),b
 23415  01532E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 23416  015330  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 23417  015332  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23418  015334  EC78  F0D4         	call	___awdiv	;wreg free
 23419  015338  0E09               	movlw	9
 23420  01533A  0102               	movlb	2	; () banked
 23421  01533C  2706               	addwf	?___awdiv& (0+255),f,b
 23422  01533E  5106               	movf	?___awdiv& (0+255),w,b
 23423  015340  0D04               	mullw	4
 23424  015342  0ECB               	movlw	low __npowers_
 23425  015344  24F3               	addwf	prodl,w,c
 23426  015346  6EF6               	movwf	tblptrl,c
 23427  015348  0EE6               	movlw	high __npowers_
 23428  01534A  20F4               	addwfc	prodh,w,c
 23429  01534C  6EF7               	movwf	tblptrh,c
 23430  01534E                     	if	1	;There are 3 active tblptr bytes
 23431  01534E  6AF8               	clrf	tblptru,c
 23432  015350  0E00               	movlw	low (__mediumconst shr (0+16))
 23433  015352  22F8               	addwfc	tblptru,f,c
 23434  015354                     	endif
 23435  015354  0009               	tblrd		*+
 23436  015356  CFF5 F20E          	movff	tablat,___flmul@b
 23437  01535A  0009               	tblrd		*+
 23438  01535C  CFF5 F20F          	movff	tablat,___flmul@b+1
 23439  015360  0009               	tblrd		*+
 23440  015362  CFF5 F210          	movff	tablat,___flmul@b+2
 23441  015366  000A               	tblrd		*-
 23442  015368  CFF5 F211          	movff	tablat,___flmul@b+3
 23443  01536C  0E00               	movlw	0
 23444  01536E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23445  015370  0E0A               	movlw	10
 23446  015372  6F02               	movwf	___awmod@divisor& (0+255),b
 23447  015374  512F               	movf	scale@scl& (0+255),w,b
 23448  015376  6F00               	movwf	___awmod@dividend& (0+255),b
 23449  015378  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23450  01537A  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23451  01537C  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23452  01537E  EC80  F0D5         	call	___awmod	;wreg free
 23453  015382  0102               	movlb	2	; () banked
 23454  015384  5100               	movf	?___awmod& (0+255),w,b
 23455  015386  0D04               	mullw	4
 23456  015388  0ECB               	movlw	low __npowers_
 23457  01538A  24F3               	addwf	prodl,w,c
 23458  01538C  6EF6               	movwf	tblptrl,c
 23459  01538E  0EE6               	movlw	high __npowers_
 23460  015390  20F4               	addwfc	prodh,w,c
 23461  015392  6EF7               	movwf	tblptrh,c
 23462  015394                     	if	1	;There are 3 active tblptr bytes
 23463  015394  6AF8               	clrf	tblptru,c
 23464  015396  0E00               	movlw	low (__mediumconst shr (0+16))
 23465  015398  22F8               	addwfc	tblptru,f,c
 23466  01539A                     	endif
 23467  01539A  0009               	tblrd		*+
 23468  01539C  CFF5 F212          	movff	tablat,___flmul@a
 23469  0153A0  0009               	tblrd		*+
 23470  0153A2  CFF5 F213          	movff	tablat,___flmul@a+1
 23471  0153A6  0009               	tblrd		*+
 23472  0153A8  CFF5 F214          	movff	tablat,___flmul@a+2
 23473  0153AC  000A               	tblrd		*-
 23474  0153AE  CFF5 F215          	movff	tablat,___flmul@a+3
 23475  0153B2  ECA8  F0B0         	call	___flmul	;wreg free
 23476  0153B6  C20E  F227         	movff	?___flmul,?_scale
 23477  0153BA  C20F  F228         	movff	?___flmul+1,?_scale+1
 23478  0153BE  C210  F229         	movff	?___flmul+2,?_scale+2
 23479  0153C2  C211  F22A         	movff	?___flmul+3,?_scale+3
 23480  0153C6  0012               	return	
 23481  0153C8                     l17170:
 23482                           
 23483                           ; BSR set to: 2
 23484                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 23485  0153C8  512F               	movf	scale@scl& (0+255),w,b
 23486  0153CA  0D04               	mullw	4
 23487  0153CC  0ECB               	movlw	low __npowers_
 23488  0153CE  24F3               	addwf	prodl,w,c
 23489  0153D0  6EF6               	movwf	tblptrl,c
 23490  0153D2  0EE6               	movlw	high __npowers_
 23491  0153D4  20F4               	addwfc	prodh,w,c
 23492  0153D6  6EF7               	movwf	tblptrh,c
 23493  0153D8                     	if	1	;There are 3 active tblptr bytes
 23494  0153D8  6AF8               	clrf	tblptru,c
 23495  0153DA  0E00               	movlw	low (__mediumconst shr (0+16))
 23496  0153DC  22F8               	addwfc	tblptru,f,c
 23497  0153DE                     	endif
 23498  0153DE  0009               	tblrd		*+
 23499  0153E0  CFF5 F227          	movff	tablat,?_scale
 23500  0153E4  0009               	tblrd		*+
 23501  0153E6  CFF5 F228          	movff	tablat,?_scale+1
 23502  0153EA  0009               	tblrd		*+
 23503  0153EC  CFF5 F229          	movff	tablat,?_scale+2
 23504  0153F0  000A               	tblrd		*-
 23505  0153F2  CFF5 F22A          	movff	tablat,?_scale+3
 23506  0153F6  0012               	return	
 23507  0153F8                     l17174:
 23508                           
 23509                           ; BSR set to: 2
 23510                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 23511  0153F8  512F               	movf	scale@scl& (0+255),w,b
 23512  0153FA  0A80               	xorlw	128
 23513  0153FC  0F12               	addlw	-238
 23514  0153FE  A0D8               	btfss	status,0,c
 23515  015400  D095               	goto	l17182
 23516                           
 23517                           ; BSR set to: 2
 23518                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 23519  015402  0E00               	movlw	0
 23520  015404  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23521  015406  0E0A               	movlw	10
 23522  015408  6F08               	movwf	___awdiv@divisor& (0+255),b
 23523  01540A  0E00               	movlw	0
 23524  01540C  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23525  01540E  0E64               	movlw	100
 23526  015410  6F02               	movwf	___awmod@divisor& (0+255),b
 23527  015412  512F               	movf	scale@scl& (0+255),w,b
 23528  015414  6F00               	movwf	___awmod@dividend& (0+255),b
 23529  015416  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23530  015418  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23531  01541A  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23532  01541C  EC80  F0D5         	call	___awmod	;wreg free
 23533  015420  C200  F206         	movff	?___awmod,___awdiv@dividend
 23534  015424  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 23535  015428  EC78  F0D4         	call	___awdiv	;wreg free
 23536  01542C  0E09               	movlw	9
 23537  01542E  0102               	movlb	2	; () banked
 23538  015430  2706               	addwf	?___awdiv& (0+255),f,b
 23539  015432  5106               	movf	?___awdiv& (0+255),w,b
 23540  015434  0D04               	mullw	4
 23541  015436  0E97               	movlw	low __powers_
 23542  015438  24F3               	addwf	prodl,w,c
 23543  01543A  6EF6               	movwf	tblptrl,c
 23544  01543C  0EE6               	movlw	high __powers_
 23545  01543E  20F4               	addwfc	prodh,w,c
 23546  015440  6EF7               	movwf	tblptrh,c
 23547  015442                     	if	1	;There are 3 active tblptr bytes
 23548  015442  6AF8               	clrf	tblptru,c
 23549  015444  0E00               	movlw	low (__mediumconst shr (0+16))
 23550  015446  22F8               	addwfc	tblptru,f,c
 23551  015448                     	endif
 23552  015448  0009               	tblrd		*+
 23553  01544A  CFF5 F212          	movff	tablat,___flmul@a
 23554  01544E  0009               	tblrd		*+
 23555  015450  CFF5 F213          	movff	tablat,___flmul@a+1
 23556  015454  0009               	tblrd		*+
 23557  015456  CFF5 F214          	movff	tablat,___flmul@a+2
 23558  01545A  000A               	tblrd		*-
 23559  01545C  CFF5 F215          	movff	tablat,___flmul@a+3
 23560  015460  0E00               	movlw	0
 23561  015462  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23562  015464  0E64               	movlw	100
 23563  015466  6F08               	movwf	___awdiv@divisor& (0+255),b
 23564  015468  512F               	movf	scale@scl& (0+255),w,b
 23565  01546A  6F06               	movwf	___awdiv@dividend& (0+255),b
 23566  01546C  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 23567  01546E  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 23568  015470  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23569  015472  EC78  F0D4         	call	___awdiv	;wreg free
 23570  015476  0E12               	movlw	18
 23571  015478  0102               	movlb	2	; () banked
 23572  01547A  2706               	addwf	?___awdiv& (0+255),f,b
 23573  01547C  5106               	movf	?___awdiv& (0+255),w,b
 23574  01547E  0D04               	mullw	4
 23575  015480  0E97               	movlw	low __powers_
 23576  015482  24F3               	addwf	prodl,w,c
 23577  015484  6EF6               	movwf	tblptrl,c
 23578  015486  0EE6               	movlw	high __powers_
 23579  015488  20F4               	addwfc	prodh,w,c
 23580  01548A  6EF7               	movwf	tblptrh,c
 23581  01548C                     	if	1	;There are 3 active tblptr bytes
 23582  01548C  6AF8               	clrf	tblptru,c
 23583  01548E  0E00               	movlw	low (__mediumconst shr (0+16))
 23584  015490  22F8               	addwfc	tblptru,f,c
 23585  015492                     	endif
 23586  015492  0009               	tblrd		*+
 23587  015494  CFF5 F20E          	movff	tablat,___flmul@b
 23588  015498  0009               	tblrd		*+
 23589  01549A  CFF5 F20F          	movff	tablat,___flmul@b+1
 23590  01549E  0009               	tblrd		*+
 23591  0154A0  CFF5 F210          	movff	tablat,___flmul@b+2
 23592  0154A4  000A               	tblrd		*-
 23593  0154A6  CFF5 F211          	movff	tablat,___flmul@b+3
 23594  0154AA  ECA8  F0B0         	call	___flmul	;wreg free
 23595  0154AE  C20E  F22B         	movff	?___flmul,_scale$5931
 23596  0154B2  C20F  F22C         	movff	?___flmul+1,_scale$5931+1
 23597  0154B6  C210  F22D         	movff	?___flmul+2,_scale$5931+2
 23598  0154BA  C211  F22E         	movff	?___flmul+3,_scale$5931+3
 23599                           
 23600                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 23601  0154BE  C22B  F20E         	movff	_scale$5931,___flmul@b
 23602  0154C2  C22C  F20F         	movff	_scale$5931+1,___flmul@b+1
 23603  0154C6  C22D  F210         	movff	_scale$5931+2,___flmul@b+2
 23604  0154CA  C22E  F211         	movff	_scale$5931+3,___flmul@b+3
 23605  0154CE  0E00               	movlw	0
 23606  0154D0  0102               	movlb	2	; () banked
 23607  0154D2  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23608  0154D4  0E0A               	movlw	10
 23609  0154D6  6F02               	movwf	___awmod@divisor& (0+255),b
 23610  0154D8  512F               	movf	scale@scl& (0+255),w,b
 23611  0154DA  6F00               	movwf	___awmod@dividend& (0+255),b
 23612  0154DC  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23613  0154DE  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23614  0154E0  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23615  0154E2  EC80  F0D5         	call	___awmod	;wreg free
 23616  0154E6  0102               	movlb	2	; () banked
 23617  0154E8  5100               	movf	?___awmod& (0+255),w,b
 23618  0154EA  0D04               	mullw	4
 23619  0154EC  0E97               	movlw	low __powers_
 23620  0154EE  24F3               	addwf	prodl,w,c
 23621  0154F0  6EF6               	movwf	tblptrl,c
 23622  0154F2  0EE6               	movlw	high __powers_
 23623  0154F4  20F4               	addwfc	prodh,w,c
 23624  0154F6  6EF7               	movwf	tblptrh,c
 23625  0154F8                     	if	1	;There are 3 active tblptr bytes
 23626  0154F8  6AF8               	clrf	tblptru,c
 23627  0154FA  0E00               	movlw	low (__mediumconst shr (0+16))
 23628  0154FC  22F8               	addwfc	tblptru,f,c
 23629  0154FE                     	endif
 23630  0154FE  0009               	tblrd		*+
 23631  015500  CFF5 F212          	movff	tablat,___flmul@a
 23632  015504  0009               	tblrd		*+
 23633  015506  CFF5 F213          	movff	tablat,___flmul@a+1
 23634  01550A  0009               	tblrd		*+
 23635  01550C  CFF5 F214          	movff	tablat,___flmul@a+2
 23636  015510  000A               	tblrd		*-
 23637  015512  CFF5 F215          	movff	tablat,___flmul@a+3
 23638  015516  ECA8  F0B0         	call	___flmul	;wreg free
 23639  01551A  C20E  F227         	movff	?___flmul,?_scale
 23640  01551E  C20F  F228         	movff	?___flmul+1,?_scale+1
 23641  015522  C210  F229         	movff	?___flmul+2,?_scale+2
 23642  015526  C211  F22A         	movff	?___flmul+3,?_scale+3
 23643  01552A  0012               	return	
 23644  01552C                     l17182:
 23645                           
 23646                           ; BSR set to: 2
 23647                           ;doprnt.c: 446: else if(scl > 10)
 23648  01552C  512F               	movf	scale@scl& (0+255),w,b
 23649  01552E  0A80               	xorlw	128
 23650  015530  0F75               	addlw	-139
 23651  015532  A0D8               	btfss	status,0,c
 23652  015534  D053               	goto	l17188
 23653                           
 23654                           ; BSR set to: 2
 23655                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 23656  015536  0E00               	movlw	0
 23657  015538  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23658  01553A  0E0A               	movlw	10
 23659  01553C  6F08               	movwf	___awdiv@divisor& (0+255),b
 23660  01553E  512F               	movf	scale@scl& (0+255),w,b
 23661  015540  6F06               	movwf	___awdiv@dividend& (0+255),b
 23662  015542  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 23663  015544  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 23664  015546  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23665  015548  EC78  F0D4         	call	___awdiv	;wreg free
 23666  01554C  0E09               	movlw	9
 23667  01554E  0102               	movlb	2	; () banked
 23668  015550  2706               	addwf	?___awdiv& (0+255),f,b
 23669  015552  5106               	movf	?___awdiv& (0+255),w,b
 23670  015554  0D04               	mullw	4
 23671  015556  0E97               	movlw	low __powers_
 23672  015558  24F3               	addwf	prodl,w,c
 23673  01555A  6EF6               	movwf	tblptrl,c
 23674  01555C  0EE6               	movlw	high __powers_
 23675  01555E  20F4               	addwfc	prodh,w,c
 23676  015560  6EF7               	movwf	tblptrh,c
 23677  015562                     	if	1	;There are 3 active tblptr bytes
 23678  015562  6AF8               	clrf	tblptru,c
 23679  015564  0E00               	movlw	low (__mediumconst shr (0+16))
 23680  015566  22F8               	addwfc	tblptru,f,c
 23681  015568                     	endif
 23682  015568  0009               	tblrd		*+
 23683  01556A  CFF5 F20E          	movff	tablat,___flmul@b
 23684  01556E  0009               	tblrd		*+
 23685  015570  CFF5 F20F          	movff	tablat,___flmul@b+1
 23686  015574  0009               	tblrd		*+
 23687  015576  CFF5 F210          	movff	tablat,___flmul@b+2
 23688  01557A  000A               	tblrd		*-
 23689  01557C  CFF5 F211          	movff	tablat,___flmul@b+3
 23690  015580  0E00               	movlw	0
 23691  015582  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 23692  015584  0E0A               	movlw	10
 23693  015586  6F02               	movwf	___awmod@divisor& (0+255),b
 23694  015588  512F               	movf	scale@scl& (0+255),w,b
 23695  01558A  6F00               	movwf	___awmod@dividend& (0+255),b
 23696  01558C  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 23697  01558E  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 23698  015590  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 23699  015592  EC80  F0D5         	call	___awmod	;wreg free
 23700  015596  0102               	movlb	2	; () banked
 23701  015598  5100               	movf	?___awmod& (0+255),w,b
 23702  01559A  0D04               	mullw	4
 23703  01559C  0E97               	movlw	low __powers_
 23704  01559E  24F3               	addwf	prodl,w,c
 23705  0155A0  6EF6               	movwf	tblptrl,c
 23706  0155A2  0EE6               	movlw	high __powers_
 23707  0155A4  20F4               	addwfc	prodh,w,c
 23708  0155A6  6EF7               	movwf	tblptrh,c
 23709  0155A8                     	if	1	;There are 3 active tblptr bytes
 23710  0155A8  6AF8               	clrf	tblptru,c
 23711  0155AA  0E00               	movlw	low (__mediumconst shr (0+16))
 23712  0155AC  22F8               	addwfc	tblptru,f,c
 23713  0155AE                     	endif
 23714  0155AE  0009               	tblrd		*+
 23715  0155B0  CFF5 F212          	movff	tablat,___flmul@a
 23716  0155B4  0009               	tblrd		*+
 23717  0155B6  CFF5 F213          	movff	tablat,___flmul@a+1
 23718  0155BA  0009               	tblrd		*+
 23719  0155BC  CFF5 F214          	movff	tablat,___flmul@a+2
 23720  0155C0  000A               	tblrd		*-
 23721  0155C2  CFF5 F215          	movff	tablat,___flmul@a+3
 23722  0155C6  ECA8  F0B0         	call	___flmul	;wreg free
 23723  0155CA  C20E  F227         	movff	?___flmul,?_scale
 23724  0155CE  C20F  F228         	movff	?___flmul+1,?_scale+1
 23725  0155D2  C210  F229         	movff	?___flmul+2,?_scale+2
 23726  0155D6  C211  F22A         	movff	?___flmul+3,?_scale+3
 23727  0155DA  0012               	return	
 23728  0155DC                     l17188:
 23729                           
 23730                           ; BSR set to: 2
 23731                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 23732  0155DC  512F               	movf	scale@scl& (0+255),w,b
 23733  0155DE  0D04               	mullw	4
 23734  0155E0  0E97               	movlw	low __powers_
 23735  0155E2  24F3               	addwf	prodl,w,c
 23736  0155E4  6EF6               	movwf	tblptrl,c
 23737  0155E6  0EE6               	movlw	high __powers_
 23738  0155E8  20F4               	addwfc	prodh,w,c
 23739  0155EA  6EF7               	movwf	tblptrh,c
 23740  0155EC                     	if	1	;There are 3 active tblptr bytes
 23741  0155EC  6AF8               	clrf	tblptru,c
 23742  0155EE  0E00               	movlw	low (__mediumconst shr (0+16))
 23743  0155F0  22F8               	addwfc	tblptru,f,c
 23744  0155F2                     	endif
 23745  0155F2  0009               	tblrd		*+
 23746  0155F4  CFF5 F227          	movff	tablat,?_scale
 23747  0155F8  0009               	tblrd		*+
 23748  0155FA  CFF5 F228          	movff	tablat,?_scale+1
 23749  0155FE  0009               	tblrd		*+
 23750  015600  CFF5 F229          	movff	tablat,?_scale+2
 23751  015604  000A               	tblrd		*-
 23752  015606  CFF5 F22A          	movff	tablat,?_scale+3
 23753  01560A  0012               	return		;funcret
 23754  01560C                     __end_of_scale:
 23755                           	opt callstack 0
 23756                           
 23757 ;; *************** function ___awmod *****************
 23758 ;; Defined at:
 23759 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;  dividend        2    0[BANK2 ] int 
 23762 ;;  divisor         2    2[BANK2 ] int 
 23763 ;; Auto vars:     Size  Location     Type
 23764 ;;  sign            1    5[BANK2 ] unsigned char 
 23765 ;;  counter         1    4[BANK2 ] unsigned char 
 23766 ;; Return value:  Size  Location     Type
 23767 ;;                  2    0[BANK2 ] int 
 23768 ;; Registers used:
 23769 ;;		wreg, status,2, status,0
 23770 ;; Tracked objects:
 23771 ;;		On entry : 0/0
 23772 ;;		On exit  : 0/0
 23773 ;;		Unchanged: 0/0
 23774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23775 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23776 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23779 ;;Total ram usage:        6 bytes
 23780 ;; Hardware stack levels used:    1
 23781 ;; Hardware stack levels required when called:   11
 23782 ;; This function calls:
 23783 ;;		Nothing
 23784 ;; This function is called by:
 23785 ;;		_scale
 23786 ;; This function uses a non-reentrant model
 23787 ;;
 23788                           
 23789                           	psect	text68
 23790  01AB00                     __ptext68:
 23791                           	opt callstack 0
 23792  01AB00                     ___awmod:
 23793                           	opt callstack 13
 23794                           
 23795                           ;incstack = 0
 23796  01AB00  0E00               	movlw	0
 23797  01AB02  0102               	movlb	2	; () banked
 23798  01AB04  6F05               	movwf	___awmod@sign& (0+255),b
 23799                           
 23800                           ; BSR set to: 2
 23801  01AB06  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23802  01AB08  D006               	goto	l17064
 23803                           
 23804                           ; BSR set to: 2
 23805  01AB0A  6D00               	negf	___awmod@dividend& (0+255),b
 23806  01AB0C  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 23807  01AB0E  B0D8               	btfsc	status,0,c
 23808  01AB10  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 23809                           
 23810                           ; BSR set to: 2
 23811  01AB12  0E01               	movlw	1
 23812  01AB14  6F05               	movwf	___awmod@sign& (0+255),b
 23813  01AB16                     l17064:
 23814                           
 23815                           ; BSR set to: 2
 23816  01AB16  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23817  01AB18  D004               	goto	l17068
 23818                           
 23819                           ; BSR set to: 2
 23820  01AB1A  6D02               	negf	___awmod@divisor& (0+255),b
 23821  01AB1C  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 23822  01AB1E  B0D8               	btfsc	status,0,c
 23823  01AB20  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 23824  01AB22                     l17068:
 23825                           
 23826                           ; BSR set to: 2
 23827  01AB22  5102               	movf	___awmod@divisor& (0+255),w,b
 23828  01AB24  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23829  01AB26  B4D8               	btfsc	status,2,c
 23830  01AB28  D018               	goto	l17084
 23831                           
 23832                           ; BSR set to: 2
 23833  01AB2A  0E01               	movlw	1
 23834  01AB2C  6F04               	movwf	___awmod@counter& (0+255),b
 23835  01AB2E  D004               	goto	l17074
 23836  01AB30                     l17072:
 23837                           
 23838                           ; BSR set to: 2
 23839  01AB30  90D8               	bcf	status,0,c
 23840  01AB32  3702               	rlcf	___awmod@divisor& (0+255),f,b
 23841  01AB34  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23842  01AB36  2B04               	incf	___awmod@counter& (0+255),f,b
 23843  01AB38                     l17074:
 23844                           
 23845                           ; BSR set to: 2
 23846  01AB38  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23847  01AB3A  D7FA               	goto	l17072
 23848  01AB3C                     u20720:
 23849                           
 23850                           ; BSR set to: 2
 23851  01AB3C  5102               	movf	___awmod@divisor& (0+255),w,b
 23852  01AB3E  5D00               	subwf	___awmod@dividend& (0+255),w,b
 23853  01AB40  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 23854  01AB42  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23855  01AB44  A0D8               	btfss	status,0,c
 23856  01AB46  D004               	goto	l17080
 23857                           
 23858                           ; BSR set to: 2
 23859  01AB48  5102               	movf	___awmod@divisor& (0+255),w,b
 23860  01AB4A  5F00               	subwf	___awmod@dividend& (0+255),f,b
 23861  01AB4C  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 23862  01AB4E  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23863  01AB50                     l17080:
 23864                           
 23865                           ; BSR set to: 2
 23866  01AB50  90D8               	bcf	status,0,c
 23867  01AB52  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23868  01AB54  3302               	rrcf	___awmod@divisor& (0+255),f,b
 23869                           
 23870                           ; BSR set to: 2
 23871  01AB56  2F04               	decfsz	___awmod@counter& (0+255),f,b
 23872  01AB58  D7F1               	goto	u20720
 23873  01AB5A                     l17084:
 23874                           
 23875                           ; BSR set to: 2
 23876  01AB5A  5105               	movf	___awmod@sign& (0+255),w,b
 23877  01AB5C  B4D8               	btfsc	status,2,c
 23878  01AB5E  D004               	goto	l17088
 23879                           
 23880                           ; BSR set to: 2
 23881  01AB60  6D00               	negf	___awmod@dividend& (0+255),b
 23882  01AB62  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 23883  01AB64  B0D8               	btfsc	status,0,c
 23884  01AB66  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 23885  01AB68                     l17088:
 23886                           
 23887                           ; BSR set to: 2
 23888  01AB68  C200  F200         	movff	___awmod@dividend,?___awmod
 23889  01AB6C  C201  F201         	movff	___awmod@dividend+1,?___awmod+1
 23890                           
 23891                           ; BSR set to: 2
 23892  01AB70  0012               	return		;funcret
 23893  01AB72                     __end_of___awmod:
 23894                           	opt callstack 0
 23895                           
 23896 ;; *************** function ___awdiv *****************
 23897 ;; Defined at:
 23898 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  dividend        2    6[BANK2 ] int 
 23901 ;;  divisor         2    8[BANK2 ] int 
 23902 ;; Auto vars:     Size  Location     Type
 23903 ;;  quotient        2   12[BANK2 ] int 
 23904 ;;  sign            1   11[BANK2 ] unsigned char 
 23905 ;;  counter         1   10[BANK2 ] unsigned char 
 23906 ;; Return value:  Size  Location     Type
 23907 ;;                  2    6[BANK2 ] int 
 23908 ;; Registers used:
 23909 ;;		wreg, status,2, status,0
 23910 ;; Tracked objects:
 23911 ;;		On entry : 0/0
 23912 ;;		On exit  : 0/0
 23913 ;;		Unchanged: 0/0
 23914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23915 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23916 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23918 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23919 ;;Total ram usage:        8 bytes
 23920 ;; Hardware stack levels used:    1
 23921 ;; Hardware stack levels required when called:   11
 23922 ;; This function calls:
 23923 ;;		Nothing
 23924 ;; This function is called by:
 23925 ;;		_scale
 23926 ;;		__doprnt
 23927 ;; This function uses a non-reentrant model
 23928 ;;
 23929                           
 23930                           	psect	text69
 23931  01A8F0                     __ptext69:
 23932                           	opt callstack 0
 23933  01A8F0                     ___awdiv:
 23934                           	opt callstack 13
 23935                           
 23936                           ; BSR set to: 2
 23937                           ;incstack = 0
 23938  01A8F0  0E00               	movlw	0
 23939  01A8F2  0102               	movlb	2	; () banked
 23940  01A8F4  6F0B               	movwf	___awdiv@sign& (0+255),b
 23941                           
 23942                           ; BSR set to: 2
 23943  01A8F6  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23944  01A8F8  D006               	goto	l17020
 23945                           
 23946                           ; BSR set to: 2
 23947  01A8FA  6D08               	negf	___awdiv@divisor& (0+255),b
 23948  01A8FC  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23949  01A8FE  B0D8               	btfsc	status,0,c
 23950  01A900  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23951                           
 23952                           ; BSR set to: 2
 23953  01A902  0E01               	movlw	1
 23954  01A904  6F0B               	movwf	___awdiv@sign& (0+255),b
 23955  01A906                     l17020:
 23956                           
 23957                           ; BSR set to: 2
 23958  01A906  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23959  01A908  D006               	goto	l17026
 23960                           
 23961                           ; BSR set to: 2
 23962  01A90A  6D06               	negf	___awdiv@dividend& (0+255),b
 23963  01A90C  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23964  01A90E  B0D8               	btfsc	status,0,c
 23965  01A910  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23966                           
 23967                           ; BSR set to: 2
 23968  01A912  0E01               	movlw	1
 23969  01A914  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 23970  01A916                     l17026:
 23971                           
 23972                           ; BSR set to: 2
 23973  01A916  0E00               	movlw	0
 23974  01A918  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 23975  01A91A  0E00               	movlw	0
 23976  01A91C  6F0C               	movwf	___awdiv@quotient& (0+255),b
 23977                           
 23978                           ; BSR set to: 2
 23979  01A91E  5108               	movf	___awdiv@divisor& (0+255),w,b
 23980  01A920  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23981  01A922  B4D8               	btfsc	status,2,c
 23982  01A924  D01C               	goto	l17048
 23983                           
 23984                           ; BSR set to: 2
 23985  01A926  0E01               	movlw	1
 23986  01A928  6F0A               	movwf	___awdiv@counter& (0+255),b
 23987  01A92A  D004               	goto	l17034
 23988  01A92C                     l17032:
 23989                           
 23990                           ; BSR set to: 2
 23991  01A92C  90D8               	bcf	status,0,c
 23992  01A92E  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 23993  01A930  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23994  01A932  2B0A               	incf	___awdiv@counter& (0+255),f,b
 23995  01A934                     l17034:
 23996                           
 23997                           ; BSR set to: 2
 23998  01A934  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23999  01A936  D7FA               	goto	l17032
 24000  01A938                     u20660:
 24001                           
 24002                           ; BSR set to: 2
 24003  01A938  90D8               	bcf	status,0,c
 24004  01A93A  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 24005  01A93C  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24006                           
 24007                           ; BSR set to: 2
 24008  01A93E  5108               	movf	___awdiv@divisor& (0+255),w,b
 24009  01A940  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 24010  01A942  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24011  01A944  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24012  01A946  A0D8               	btfss	status,0,c
 24013  01A948  D005               	goto	l17044
 24014                           
 24015                           ; BSR set to: 2
 24016  01A94A  5108               	movf	___awdiv@divisor& (0+255),w,b
 24017  01A94C  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 24018  01A94E  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24019  01A950  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24020                           
 24021                           ; BSR set to: 2
 24022  01A952  810C               	bsf	___awdiv@quotient& (0+255),0,b
 24023  01A954                     l17044:
 24024                           
 24025                           ; BSR set to: 2
 24026  01A954  90D8               	bcf	status,0,c
 24027  01A956  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24028  01A958  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 24029                           
 24030                           ; BSR set to: 2
 24031  01A95A  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 24032  01A95C  D7ED               	goto	u20660
 24033  01A95E                     l17048:
 24034                           
 24035                           ; BSR set to: 2
 24036  01A95E  510B               	movf	___awdiv@sign& (0+255),w,b
 24037  01A960  B4D8               	btfsc	status,2,c
 24038  01A962  D004               	goto	l17052
 24039                           
 24040                           ; BSR set to: 2
 24041  01A964  6D0C               	negf	___awdiv@quotient& (0+255),b
 24042  01A966  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24043  01A968  B0D8               	btfsc	status,0,c
 24044  01A96A  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24045  01A96C                     l17052:
 24046                           
 24047                           ; BSR set to: 2
 24048  01A96C  C20C  F206         	movff	___awdiv@quotient,?___awdiv
 24049  01A970  C20D  F207         	movff	___awdiv@quotient+1,?___awdiv+1
 24050                           
 24051                           ; BSR set to: 2
 24052  01A974  0012               	return		;funcret
 24053  01A976                     __end_of___awdiv:
 24054                           	opt callstack 0
 24055                           
 24056 ;; *************** function _putch *****************
 24057 ;; Defined at:
 24058 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 24059 ;; Parameters:    Size  Location     Type
 24060 ;;  txData          1    wreg     unsigned char 
 24061 ;; Auto vars:     Size  Location     Type
 24062 ;;  txData          1    1[BANK2 ] unsigned char 
 24063 ;; Return value:  Size  Location     Type
 24064 ;;                  1    wreg      void 
 24065 ;; Registers used:
 24066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24067 ;; Tracked objects:
 24068 ;;		On entry : 0/0
 24069 ;;		On exit  : 0/0
 24070 ;;		Unchanged: 0/0
 24071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24073 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24075 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24076 ;;Total ram usage:        1 bytes
 24077 ;; Hardware stack levels used:    1
 24078 ;; Hardware stack levels required when called:   12
 24079 ;; This function calls:
 24080 ;;		_EUSART2_Write
 24081 ;; This function is called by:
 24082 ;;		_printf
 24083 ;;		__doprnt
 24084 ;;		i2__doprnt
 24085 ;; This function uses a non-reentrant model
 24086 ;;
 24087                           
 24088                           	psect	text70
 24089  01BF68                     __ptext70:
 24090                           	opt callstack 0
 24091  01BF68                     _putch:
 24092                           	opt callstack 0
 24093                           
 24094                           ; BSR set to: 2
 24095                           ;Skip over the trampoline to the duplicate function for level 2
 24096  01BF68  B25E               	btfsc	btemp,1,c
 24097  01BF6A  EFA9  F0E0         	goto	i2_putch
 24098  01BF6E                     _putch$intlevel0:
 24099                           	opt callstack 13
 24100                           
 24101                           ;incstack = 0
 24102                           ;putch@txData stored from wreg
 24103  01BF6E  0102               	movlb	2	; () banked
 24104  01BF70  6F01               	movwf	putch@txData& (0+255),b
 24105                           
 24106                           ;eusart2.c: 184: EUSART2_Write(txData);
 24107  01BF72  0102               	movlb	2	; () banked
 24108  01BF74  5101               	movf	putch@txData& (0+255),w,b
 24109  01BF76  EC1F  F0DA         	call	_EUSART2_Write
 24110  01BF7A  0012               	return		;funcret
 24111  01BF7C                     __end_of_putch:
 24112                           	opt callstack 0
 24113                           
 24114 ;; *************** function _EUSART2_Write *****************
 24115 ;; Defined at:
 24116 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 24117 ;; Parameters:    Size  Location     Type
 24118 ;;  txData          1    wreg     unsigned char 
 24119 ;; Auto vars:     Size  Location     Type
 24120 ;;  txData          1    0[BANK2 ] unsigned char 
 24121 ;; Return value:  Size  Location     Type
 24122 ;;                  1    wreg      void 
 24123 ;; Registers used:
 24124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24125 ;; Tracked objects:
 24126 ;;		On entry : 0/0
 24127 ;;		On exit  : 0/0
 24128 ;;		Unchanged: 0/0
 24129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24131 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24133 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24134 ;;Total ram usage:        1 bytes
 24135 ;; Hardware stack levels used:    1
 24136 ;; Hardware stack levels required when called:   11
 24137 ;; This function calls:
 24138 ;;		Nothing
 24139 ;; This function is called by:
 24140 ;;		_putch
 24141 ;; This function uses a non-reentrant model
 24142 ;;
 24143                           
 24144                           	psect	text71
 24145  01B43E                     __ptext71:
 24146                           	opt callstack 0
 24147  01B43E                     _EUSART2_Write:
 24148                           	opt callstack 13
 24149                           
 24150                           ;incstack = 0
 24151                           ;EUSART2_Write@txData stored from wreg
 24152  01B43E  0102               	movlb	2	; () banked
 24153  01B440  6F00               	movwf	EUSART2_Write@txData& (0+255),b
 24154                           
 24155                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 24156  01B442  D001               	goto	l16664
 24157  01B444                     l122:
 24158                           
 24159                           ; BSR set to: 1
 24160  01B444  0004               	clrwdt		;# 
 24161  01B446                     l16664:
 24162  01B446  0101               	movlb	1	; () banked
 24163  01B448  5199               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 24164  01B44A  B4D8               	btfsc	status,2,c
 24165  01B44C  D7FB               	goto	l122
 24166                           
 24167                           ; BSR set to: 1
 24168                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 24169  01B44E  010E               	movlb	14	; () banked
 24170  01B450  BDC5               	btfsc	197,6,b	;volatile
 24171  01B452  D003               	goto	l124
 24172                           
 24173                           ; BSR set to: 14
 24174                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 24175  01B454  C200  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 24176                           
 24177                           ;eusart2.c: 163: }
 24178  01B458  D011               	goto	l16678
 24179  01B45A                     l124:
 24180                           
 24181                           ; BSR set to: 14
 24182                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 24183  01B45A  9DC5               	bcf	197,6,b	;volatile
 24184                           
 24185                           ; BSR set to: 14
 24186                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 24187  01B45C  0E80               	movlw	low _eusart2TxBuffer
 24188  01B45E  0101               	movlb	1	; () banked
 24189  01B460  259B               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 24190  01B462  6ED9               	movwf	fsr2l,c
 24191  01B464  6ADA               	clrf	fsr2h,c
 24192  01B466  0E04               	movlw	high _eusart2TxBuffer
 24193  01B468  22DA               	addwfc	fsr2h,f,c
 24194  01B46A  C200  FFDF         	movff	EUSART2_Write@txData,indf2
 24195                           
 24196                           ; BSR set to: 1
 24197  01B46E  2B9B               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 24201  01B470  0E3F               	movlw	63
 24202  01B472  659B               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 24203  01B474  D002               	goto	l16676
 24204                           
 24205                           ; BSR set to: 1
 24206                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 24207  01B476  0E00               	movlw	0
 24208  01B478  6F9B               	movwf	_eusart2TxHead& (0+255),b	;volatile
 24209  01B47A                     l16676:
 24210                           
 24211                           ; BSR set to: 1
 24212                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 24213  01B47A  0799               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 24214  01B47C                     l16678:
 24215                           
 24216                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 24217  01B47C  010E               	movlb	14	; () banked
 24218  01B47E  8DC5               	bsf	197,6,b	;volatile
 24219                           
 24220                           ; BSR set to: 14
 24221  01B480  0012               	return		;funcret
 24222  01B482                     __end_of_EUSART2_Write:
 24223                           	opt callstack 0
 24224                           
 24225 ;; *************** function _isdigit *****************
 24226 ;; Defined at:
 24227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 24228 ;; Parameters:    Size  Location     Type
 24229 ;;  c               1    wreg     unsigned char 
 24230 ;; Auto vars:     Size  Location     Type
 24231 ;;  c               1    2[BANK2 ] unsigned char 
 24232 ;; Return value:  Size  Location     Type
 24233 ;;		None               void
 24234 ;; Registers used:
 24235 ;;		wreg, status,2, status,0
 24236 ;; Tracked objects:
 24237 ;;		On entry : 0/0
 24238 ;;		On exit  : 0/0
 24239 ;;		Unchanged: 0/0
 24240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24242 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24243 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24244 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;Total ram usage:        3 bytes
 24246 ;; Hardware stack levels used:    1
 24247 ;; Hardware stack levels required when called:   11
 24248 ;; This function calls:
 24249 ;;		Nothing
 24250 ;; This function is called by:
 24251 ;;		__doprnt
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text72
 24256  01BCE4                     __ptext72:
 24257                           	opt callstack 0
 24258  01BCE4                     _isdigit:
 24259                           	opt callstack 14
 24260                           
 24261                           ; BSR set to: 14
 24262                           ;incstack = 0
 24263                           ;isdigit@c stored from wreg
 24264  01BCE4  0102               	movlb	2	; () banked
 24265  01BCE6  6F02               	movwf	isdigit@c& (0+255),b
 24266  01BCE8  0E00               	movlw	0
 24267  01BCEA  0102               	movlb	2	; () banked
 24268  01BCEC  6F01               	movwf	_isdigit$5355& (0+255),b
 24269                           
 24270                           ; BSR set to: 2
 24271  01BCEE  0E3A               	movlw	58
 24272  01BCF0  6102               	cpfslt	isdigit@c& (0+255),b
 24273  01BCF2  D005               	goto	l17200
 24274                           
 24275                           ; BSR set to: 2
 24276  01BCF4  0E2F               	movlw	47
 24277  01BCF6  6502               	cpfsgt	isdigit@c& (0+255),b
 24278  01BCF8  D002               	goto	l17200
 24279                           
 24280                           ; BSR set to: 2
 24281  01BCFA  0E01               	movlw	1
 24282  01BCFC  6F01               	movwf	_isdigit$5355& (0+255),b
 24283  01BCFE                     l17200:
 24284                           
 24285                           ; BSR set to: 2
 24286  01BCFE  C201  F200         	movff	_isdigit$5355,??_isdigit
 24287  01BD02  3100               	rrcf	??_isdigit& (0+255),w,b
 24288                           
 24289                           ; BSR set to: 2
 24290  01BD04  0012               	return		;funcret
 24291  01BD06                     __end_of_isdigit:
 24292                           	opt callstack 0
 24293                           
 24294 ;; *************** function _fround *****************
 24295 ;; Defined at:
 24296 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;  prec            1    wreg     unsigned char 
 24299 ;; Auto vars:     Size  Location     Type
 24300 ;;  prec            1   51[BANK2 ] unsigned char 
 24301 ;; Return value:  Size  Location     Type
 24302 ;;                  4   39[BANK2 ] unsigned char 
 24303 ;; Registers used:
 24304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24305 ;; Tracked objects:
 24306 ;;		On entry : 0/0
 24307 ;;		On exit  : 0/0
 24308 ;;		Unchanged: 0/0
 24309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24310 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24311 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24313 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24314 ;;Total ram usage:       13 bytes
 24315 ;; Hardware stack levels used:    1
 24316 ;; Hardware stack levels required when called:   12
 24317 ;; This function calls:
 24318 ;;		___flmul
 24319 ;;		___lwdiv
 24320 ;;		___lwmod
 24321 ;; This function is called by:
 24322 ;;		__doprnt
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text73
 24327  017474                     __ptext73:
 24328                           	opt callstack 0
 24329  017474                     _fround:
 24330                           	opt callstack 13
 24331                           
 24332                           ; BSR set to: 2
 24333                           ;incstack = 0
 24334                           ;fround@prec stored from wreg
 24335  017474  0102               	movlb	2	; () banked
 24336  017476  6F33               	movwf	fround@prec& (0+255),b
 24337                           
 24338                           ;doprnt.c: 421: if(prec>=110)
 24339  017478  0E6D               	movlw	109
 24340  01747A  0102               	movlb	2	; () banked
 24341  01747C  6533               	cpfsgt	fround@prec& (0+255),b
 24342  01747E  D0BA               	goto	l17144
 24343                           
 24344                           ; BSR set to: 2
 24345                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 24346  017480  0E00               	movlw	0
 24347  017482  6F12               	movwf	___flmul@a& (0+255),b
 24348  017484  0E00               	movlw	0
 24349  017486  6F13               	movwf	(___flmul@a+1)& (0+255),b
 24350  017488  0E00               	movlw	0
 24351  01748A  6F14               	movwf	(___flmul@a+2)& (0+255),b
 24352  01748C  0E3F               	movlw	63
 24353  01748E  6F15               	movwf	(___flmul@a+3)& (0+255),b
 24354  017490  0E00               	movlw	0
 24355  017492  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24356  017494  0E64               	movlw	100
 24357  017496  6F07               	movwf	___lwdiv@divisor& (0+255),b
 24358  017498  C233  F205         	movff	fround@prec,___lwdiv@dividend
 24359  01749C  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 24360  01749E  EC05  F0D8         	call	___lwdiv	;wreg free
 24361  0174A2  0102               	movlb	2	; () banked
 24362  0174A4  90D8               	bcf	status,0,c
 24363  0174A6  3705               	rlcf	?___lwdiv& (0+255),f,b
 24364  0174A8  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24365  0174AA  90D8               	bcf	status,0,c
 24366  0174AC  3705               	rlcf	?___lwdiv& (0+255),f,b
 24367  0174AE  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24368  0174B0  0E48               	movlw	72
 24369  0174B2  2705               	addwf	?___lwdiv& (0+255),f,b
 24370  0174B4  0E00               	movlw	0
 24371  0174B6  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 24372  0174B8  0ECB               	movlw	low __npowers_
 24373  0174BA  2505               	addwf	?___lwdiv& (0+255),w,b
 24374  0174BC  6EF6               	movwf	tblptrl,c
 24375  0174BE  0EE6               	movlw	high __npowers_
 24376  0174C0  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 24377  0174C2  6EF7               	movwf	tblptrh,c
 24378  0174C4                     	if	1	;There are 3 active tblptr bytes
 24379  0174C4  6AF8               	clrf	tblptru,c
 24380  0174C6  0E00               	movlw	low (__mediumconst shr (0+16))
 24381  0174C8  22F8               	addwfc	tblptru,f,c
 24382  0174CA                     	endif
 24383  0174CA  0009               	tblrd		*+
 24384  0174CC  CFF5 F20E          	movff	tablat,___flmul@b
 24385  0174D0  0009               	tblrd		*+
 24386  0174D2  CFF5 F20F          	movff	tablat,___flmul@b+1
 24387  0174D6  0009               	tblrd		*+
 24388  0174D8  CFF5 F210          	movff	tablat,___flmul@b+2
 24389  0174DC  000A               	tblrd		*-
 24390  0174DE  CFF5 F211          	movff	tablat,___flmul@b+3
 24391  0174E2  ECA8  F0B0         	call	___flmul	;wreg free
 24392  0174E6  C20E  F22F         	movff	?___flmul,_fround$5929
 24393  0174EA  C20F  F230         	movff	?___flmul+1,_fround$5929+1
 24394  0174EE  C210  F231         	movff	?___flmul+2,_fround$5929+2
 24395  0174F2  C211  F232         	movff	?___flmul+3,_fround$5929+3
 24396                           
 24397                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 24398  0174F6  0E00               	movlw	0
 24399  0174F8  0102               	movlb	2	; () banked
 24400  0174FA  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24401  0174FC  0E0A               	movlw	10
 24402  0174FE  6F07               	movwf	___lwdiv@divisor& (0+255),b
 24403  017500  0E00               	movlw	0
 24404  017502  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 24405  017504  0E64               	movlw	100
 24406  017506  6F02               	movwf	___lwmod@divisor& (0+255),b
 24407  017508  C233  F200         	movff	fround@prec,___lwmod@dividend
 24408  01750C  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 24409  01750E  EC41  F0DA         	call	___lwmod	;wreg free
 24410  017512  C200  F205         	movff	?___lwmod,___lwdiv@dividend
 24411  017516  C201  F206         	movff	?___lwmod+1,___lwdiv@dividend+1
 24412  01751A  EC05  F0D8         	call	___lwdiv	;wreg free
 24413  01751E  0102               	movlb	2	; () banked
 24414  017520  90D8               	bcf	status,0,c
 24415  017522  3705               	rlcf	?___lwdiv& (0+255),f,b
 24416  017524  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24417  017526  90D8               	bcf	status,0,c
 24418  017528  3705               	rlcf	?___lwdiv& (0+255),f,b
 24419  01752A  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24420  01752C  0E24               	movlw	36
 24421  01752E  2705               	addwf	?___lwdiv& (0+255),f,b
 24422  017530  0E00               	movlw	0
 24423  017532  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 24424  017534  0ECB               	movlw	low __npowers_
 24425  017536  2505               	addwf	?___lwdiv& (0+255),w,b
 24426  017538  6EF6               	movwf	tblptrl,c
 24427  01753A  0EE6               	movlw	high __npowers_
 24428  01753C  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 24429  01753E  6EF7               	movwf	tblptrh,c
 24430  017540                     	if	1	;There are 3 active tblptr bytes
 24431  017540  6AF8               	clrf	tblptru,c
 24432  017542  0E00               	movlw	low (__mediumconst shr (0+16))
 24433  017544  22F8               	addwfc	tblptru,f,c
 24434  017546                     	endif
 24435  017546  0009               	tblrd		*+
 24436  017548  CFF5 F212          	movff	tablat,___flmul@a
 24437  01754C  0009               	tblrd		*+
 24438  01754E  CFF5 F213          	movff	tablat,___flmul@a+1
 24439  017552  0009               	tblrd		*+
 24440  017554  CFF5 F214          	movff	tablat,___flmul@a+2
 24441  017558  000A               	tblrd		*-
 24442  01755A  CFF5 F215          	movff	tablat,___flmul@a+3
 24443  01755E  C22F  F20E         	movff	_fround$5929,___flmul@b
 24444  017562  C230  F20F         	movff	_fround$5929+1,___flmul@b+1
 24445  017566  C231  F210         	movff	_fround$5929+2,___flmul@b+2
 24446  01756A  C232  F211         	movff	_fround$5929+3,___flmul@b+3
 24447  01756E  ECA8  F0B0         	call	___flmul	;wreg free
 24448  017572  C20E  F22B         	movff	?___flmul,_fround$5930
 24449  017576  C20F  F22C         	movff	?___flmul+1,_fround$5930+1
 24450  01757A  C210  F22D         	movff	?___flmul+2,_fround$5930+2
 24451  01757E  C211  F22E         	movff	?___flmul+3,_fround$5930+3
 24452                           
 24453                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 24454  017582  C22B  F20E         	movff	_fround$5930,___flmul@b
 24455  017586  C22C  F20F         	movff	_fround$5930+1,___flmul@b+1
 24456  01758A  C22D  F210         	movff	_fround$5930+2,___flmul@b+2
 24457  01758E  C22E  F211         	movff	_fround$5930+3,___flmul@b+3
 24458  017592  0E00               	movlw	0
 24459  017594  0102               	movlb	2	; () banked
 24460  017596  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 24461  017598  0E0A               	movlw	10
 24462  01759A  6F02               	movwf	___lwmod@divisor& (0+255),b
 24463  01759C  C233  F200         	movff	fround@prec,___lwmod@dividend
 24464  0175A0  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 24465  0175A2  EC41  F0DA         	call	___lwmod	;wreg free
 24466  0175A6  0102               	movlb	2	; () banked
 24467  0175A8  90D8               	bcf	status,0,c
 24468  0175AA  3700               	rlcf	?___lwmod& (0+255),f,b
 24469  0175AC  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 24470  0175AE  90D8               	bcf	status,0,c
 24471  0175B0  3700               	rlcf	?___lwmod& (0+255),f,b
 24472  0175B2  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 24473  0175B4  0ECB               	movlw	low __npowers_
 24474  0175B6  2500               	addwf	?___lwmod& (0+255),w,b
 24475  0175B8  6EF6               	movwf	tblptrl,c
 24476  0175BA  0EE6               	movlw	high __npowers_
 24477  0175BC  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 24478  0175BE  6EF7               	movwf	tblptrh,c
 24479  0175C0                     	if	1	;There are 3 active tblptr bytes
 24480  0175C0  6AF8               	clrf	tblptru,c
 24481  0175C2  0E00               	movlw	low (__mediumconst shr (0+16))
 24482  0175C4  22F8               	addwfc	tblptru,f,c
 24483  0175C6                     	endif
 24484  0175C6  0009               	tblrd		*+
 24485  0175C8  CFF5 F212          	movff	tablat,___flmul@a
 24486  0175CC  0009               	tblrd		*+
 24487  0175CE  CFF5 F213          	movff	tablat,___flmul@a+1
 24488  0175D2  0009               	tblrd		*+
 24489  0175D4  CFF5 F214          	movff	tablat,___flmul@a+2
 24490  0175D8  000A               	tblrd		*-
 24491  0175DA  CFF5 F215          	movff	tablat,___flmul@a+3
 24492  0175DE  ECA8  F0B0         	call	___flmul	;wreg free
 24493  0175E2  C20E  F227         	movff	?___flmul,?_fround
 24494  0175E6  C20F  F228         	movff	?___flmul+1,?_fround+1
 24495  0175EA  C210  F229         	movff	?___flmul+2,?_fround+2
 24496  0175EE  C211  F22A         	movff	?___flmul+3,?_fround+3
 24497  0175F2  0012               	return	
 24498  0175F4                     l17144:
 24499                           
 24500                           ; BSR set to: 2
 24501                           ;doprnt.c: 423: else if(prec > 10)
 24502  0175F4  0E0A               	movlw	10
 24503  0175F6  6533               	cpfsgt	fround@prec& (0+255),b
 24504  0175F8  D074               	goto	l17150
 24505                           
 24506                           ; BSR set to: 2
 24507                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 24508  0175FA  0E00               	movlw	0
 24509  0175FC  6F12               	movwf	___flmul@a& (0+255),b
 24510  0175FE  0E00               	movlw	0
 24511  017600  6F13               	movwf	(___flmul@a+1)& (0+255),b
 24512  017602  0E00               	movlw	0
 24513  017604  6F14               	movwf	(___flmul@a+2)& (0+255),b
 24514  017606  0E3F               	movlw	63
 24515  017608  6F15               	movwf	(___flmul@a+3)& (0+255),b
 24516  01760A  0E00               	movlw	0
 24517  01760C  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24518  01760E  0E0A               	movlw	10
 24519  017610  6F07               	movwf	___lwdiv@divisor& (0+255),b
 24520  017612  C233  F205         	movff	fround@prec,___lwdiv@dividend
 24521  017616  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 24522  017618  EC05  F0D8         	call	___lwdiv	;wreg free
 24523  01761C  0102               	movlb	2	; () banked
 24524  01761E  90D8               	bcf	status,0,c
 24525  017620  3705               	rlcf	?___lwdiv& (0+255),f,b
 24526  017622  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24527  017624  90D8               	bcf	status,0,c
 24528  017626  3705               	rlcf	?___lwdiv& (0+255),f,b
 24529  017628  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 24530  01762A  0E24               	movlw	36
 24531  01762C  2705               	addwf	?___lwdiv& (0+255),f,b
 24532  01762E  0E00               	movlw	0
 24533  017630  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 24534  017632  0ECB               	movlw	low __npowers_
 24535  017634  2505               	addwf	?___lwdiv& (0+255),w,b
 24536  017636  6EF6               	movwf	tblptrl,c
 24537  017638  0EE6               	movlw	high __npowers_
 24538  01763A  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 24539  01763C  6EF7               	movwf	tblptrh,c
 24540  01763E                     	if	1	;There are 3 active tblptr bytes
 24541  01763E  6AF8               	clrf	tblptru,c
 24542  017640  0E00               	movlw	low (__mediumconst shr (0+16))
 24543  017642  22F8               	addwfc	tblptru,f,c
 24544  017644                     	endif
 24545  017644  0009               	tblrd		*+
 24546  017646  CFF5 F20E          	movff	tablat,___flmul@b
 24547  01764A  0009               	tblrd		*+
 24548  01764C  CFF5 F20F          	movff	tablat,___flmul@b+1
 24549  017650  0009               	tblrd		*+
 24550  017652  CFF5 F210          	movff	tablat,___flmul@b+2
 24551  017656  000A               	tblrd		*-
 24552  017658  CFF5 F211          	movff	tablat,___flmul@b+3
 24553  01765C  ECA8  F0B0         	call	___flmul	;wreg free
 24554  017660  C20E  F22F         	movff	?___flmul,_fround$5929
 24555  017664  C20F  F230         	movff	?___flmul+1,_fround$5929+1
 24556  017668  C210  F231         	movff	?___flmul+2,_fround$5929+2
 24557  01766C  C211  F232         	movff	?___flmul+3,_fround$5929+3
 24558                           
 24559                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 24560  017670  C22F  F20E         	movff	_fround$5929,___flmul@b
 24561  017674  C230  F20F         	movff	_fround$5929+1,___flmul@b+1
 24562  017678  C231  F210         	movff	_fround$5929+2,___flmul@b+2
 24563  01767C  C232  F211         	movff	_fround$5929+3,___flmul@b+3
 24564  017680  0E00               	movlw	0
 24565  017682  0102               	movlb	2	; () banked
 24566  017684  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 24567  017686  0E0A               	movlw	10
 24568  017688  6F02               	movwf	___lwmod@divisor& (0+255),b
 24569  01768A  C233  F200         	movff	fround@prec,___lwmod@dividend
 24570  01768E  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 24571  017690  EC41  F0DA         	call	___lwmod	;wreg free
 24572  017694  0102               	movlb	2	; () banked
 24573  017696  90D8               	bcf	status,0,c
 24574  017698  3700               	rlcf	?___lwmod& (0+255),f,b
 24575  01769A  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 24576  01769C  90D8               	bcf	status,0,c
 24577  01769E  3700               	rlcf	?___lwmod& (0+255),f,b
 24578  0176A0  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 24579  0176A2  0ECB               	movlw	low __npowers_
 24580  0176A4  2500               	addwf	?___lwmod& (0+255),w,b
 24581  0176A6  6EF6               	movwf	tblptrl,c
 24582  0176A8  0EE6               	movlw	high __npowers_
 24583  0176AA  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 24584  0176AC  6EF7               	movwf	tblptrh,c
 24585  0176AE                     	if	1	;There are 3 active tblptr bytes
 24586  0176AE  6AF8               	clrf	tblptru,c
 24587  0176B0  0E00               	movlw	low (__mediumconst shr (0+16))
 24588  0176B2  22F8               	addwfc	tblptru,f,c
 24589  0176B4                     	endif
 24590  0176B4  0009               	tblrd		*+
 24591  0176B6  CFF5 F212          	movff	tablat,___flmul@a
 24592  0176BA  0009               	tblrd		*+
 24593  0176BC  CFF5 F213          	movff	tablat,___flmul@a+1
 24594  0176C0  0009               	tblrd		*+
 24595  0176C2  CFF5 F214          	movff	tablat,___flmul@a+2
 24596  0176C6  000A               	tblrd		*-
 24597  0176C8  CFF5 F215          	movff	tablat,___flmul@a+3
 24598  0176CC  ECA8  F0B0         	call	___flmul	;wreg free
 24599  0176D0  C20E  F227         	movff	?___flmul,?_fround
 24600  0176D4  C20F  F228         	movff	?___flmul+1,?_fround+1
 24601  0176D8  C210  F229         	movff	?___flmul+2,?_fround+2
 24602  0176DC  C211  F22A         	movff	?___flmul+3,?_fround+3
 24603  0176E0  0012               	return	
 24604  0176E2                     l17150:
 24605                           
 24606                           ; BSR set to: 2
 24607                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 24608  0176E2  5133               	movf	fround@prec& (0+255),w,b
 24609  0176E4  0D04               	mullw	4
 24610  0176E6  0ECB               	movlw	low __npowers_
 24611  0176E8  24F3               	addwf	prodl,w,c
 24612  0176EA  6EF6               	movwf	tblptrl,c
 24613  0176EC  0EE6               	movlw	high __npowers_
 24614  0176EE  20F4               	addwfc	prodh,w,c
 24615  0176F0  6EF7               	movwf	tblptrh,c
 24616  0176F2                     	if	1	;There are 3 active tblptr bytes
 24617  0176F2  6AF8               	clrf	tblptru,c
 24618  0176F4  0E00               	movlw	low (__mediumconst shr (0+16))
 24619  0176F6  22F8               	addwfc	tblptru,f,c
 24620  0176F8                     	endif
 24621  0176F8  0009               	tblrd		*+
 24622  0176FA  CFF5 F20E          	movff	tablat,___flmul@b
 24623  0176FE  0009               	tblrd		*+
 24624  017700  CFF5 F20F          	movff	tablat,___flmul@b+1
 24625  017704  0009               	tblrd		*+
 24626  017706  CFF5 F210          	movff	tablat,___flmul@b+2
 24627  01770A  000A               	tblrd		*-
 24628  01770C  CFF5 F211          	movff	tablat,___flmul@b+3
 24629  017710  0E00               	movlw	0
 24630  017712  6F12               	movwf	___flmul@a& (0+255),b
 24631  017714  0E00               	movlw	0
 24632  017716  6F13               	movwf	(___flmul@a+1)& (0+255),b
 24633  017718  0E00               	movlw	0
 24634  01771A  6F14               	movwf	(___flmul@a+2)& (0+255),b
 24635  01771C  0E3F               	movlw	63
 24636  01771E  6F15               	movwf	(___flmul@a+3)& (0+255),b
 24637  017720  ECA8  F0B0         	call	___flmul	;wreg free
 24638  017724  C20E  F227         	movff	?___flmul,?_fround
 24639  017728  C20F  F228         	movff	?___flmul+1,?_fround+1
 24640  01772C  C210  F229         	movff	?___flmul+2,?_fround+2
 24641  017730  C211  F22A         	movff	?___flmul+3,?_fround+3
 24642  017734  0012               	return		;funcret
 24643  017736                     __end_of_fround:
 24644                           	opt callstack 0
 24645                           
 24646 ;; *************** function ___lwmod *****************
 24647 ;; Defined at:
 24648 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 24649 ;; Parameters:    Size  Location     Type
 24650 ;;  dividend        2    0[BANK2 ] unsigned int 
 24651 ;;  divisor         2    2[BANK2 ] unsigned int 
 24652 ;; Auto vars:     Size  Location     Type
 24653 ;;  counter         1    4[BANK2 ] unsigned char 
 24654 ;; Return value:  Size  Location     Type
 24655 ;;                  2    0[BANK2 ] unsigned int 
 24656 ;; Registers used:
 24657 ;;		wreg, status,2, status,0
 24658 ;; Tracked objects:
 24659 ;;		On entry : 0/0
 24660 ;;		On exit  : 0/0
 24661 ;;		Unchanged: 0/0
 24662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24663 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24664 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24666 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24667 ;;Total ram usage:        5 bytes
 24668 ;; Hardware stack levels used:    1
 24669 ;; Hardware stack levels required when called:   11
 24670 ;; This function calls:
 24671 ;;		Nothing
 24672 ;; This function is called by:
 24673 ;;		_fround
 24674 ;; This function uses a non-reentrant model
 24675 ;;
 24676                           
 24677                           	psect	text74
 24678  01B482                     __ptext74:
 24679                           	opt callstack 0
 24680  01B482                     ___lwmod:
 24681                           	opt callstack 13
 24682                           
 24683                           ;incstack = 0
 24684  01B482  0102               	movlb	2	; () banked
 24685  01B484  5102               	movf	___lwmod@divisor& (0+255),w,b
 24686  01B486  1103               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 24687  01B488  B4D8               	btfsc	status,2,c
 24688  01B48A  D018               	goto	l3102
 24689                           
 24690                           ; BSR set to: 2
 24691  01B48C  0E01               	movlw	1
 24692  01B48E  6F04               	movwf	___lwmod@counter& (0+255),b
 24693  01B490  D004               	goto	l17120
 24694  01B492                     l17118:
 24695                           
 24696                           ; BSR set to: 2
 24697  01B492  90D8               	bcf	status,0,c
 24698  01B494  3702               	rlcf	___lwmod@divisor& (0+255),f,b
 24699  01B496  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 24700  01B498  2B04               	incf	___lwmod@counter& (0+255),f,b
 24701  01B49A                     l17120:
 24702                           
 24703                           ; BSR set to: 2
 24704  01B49A  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 24705  01B49C  D7FA               	goto	l17118
 24706  01B49E                     u20790:
 24707                           
 24708                           ; BSR set to: 2
 24709  01B49E  5102               	movf	___lwmod@divisor& (0+255),w,b
 24710  01B4A0  5D00               	subwf	___lwmod@dividend& (0+255),w,b
 24711  01B4A2  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 24712  01B4A4  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 24713  01B4A6  A0D8               	btfss	status,0,c
 24714  01B4A8  D004               	goto	l17126
 24715                           
 24716                           ; BSR set to: 2
 24717  01B4AA  5102               	movf	___lwmod@divisor& (0+255),w,b
 24718  01B4AC  5F00               	subwf	___lwmod@dividend& (0+255),f,b
 24719  01B4AE  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 24720  01B4B0  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 24721  01B4B2                     l17126:
 24722                           
 24723                           ; BSR set to: 2
 24724  01B4B2  90D8               	bcf	status,0,c
 24725  01B4B4  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 24726  01B4B6  3302               	rrcf	___lwmod@divisor& (0+255),f,b
 24727                           
 24728                           ; BSR set to: 2
 24729  01B4B8  2F04               	decfsz	___lwmod@counter& (0+255),f,b
 24730  01B4BA  D7F1               	goto	u20790
 24731  01B4BC                     l3102:
 24732                           
 24733                           ; BSR set to: 2
 24734  01B4BC  C200  F200         	movff	___lwmod@dividend,?___lwmod
 24735  01B4C0  C201  F201         	movff	___lwmod@dividend+1,?___lwmod+1
 24736                           
 24737                           ; BSR set to: 2
 24738  01B4C4  0012               	return		;funcret
 24739  01B4C6                     __end_of___lwmod:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function ___lwdiv *****************
 24743 ;; Defined at:
 24744 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;  dividend        2    5[BANK2 ] unsigned int 
 24747 ;;  divisor         2    7[BANK2 ] unsigned int 
 24748 ;; Auto vars:     Size  Location     Type
 24749 ;;  quotient        2   10[BANK2 ] unsigned int 
 24750 ;;  counter         1    9[BANK2 ] unsigned char 
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  2    5[BANK2 ] unsigned int 
 24753 ;; Registers used:
 24754 ;;		wreg, status,2, status,0
 24755 ;; Tracked objects:
 24756 ;;		On entry : 0/0
 24757 ;;		On exit  : 0/0
 24758 ;;		Unchanged: 0/0
 24759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24760 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24763 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;Total ram usage:        7 bytes
 24765 ;; Hardware stack levels used:    1
 24766 ;; Hardware stack levels required when called:   11
 24767 ;; This function calls:
 24768 ;;		Nothing
 24769 ;; This function is called by:
 24770 ;;		_fround
 24771 ;; This function uses a non-reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text75
 24775  01B00A                     __ptext75:
 24776                           	opt callstack 0
 24777  01B00A                     ___lwdiv:
 24778                           	opt callstack 13
 24779                           
 24780                           ; BSR set to: 2
 24781                           ;incstack = 0
 24782  01B00A  0E00               	movlw	0
 24783  01B00C  0102               	movlb	2	; () banked
 24784  01B00E  6F0B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 24785  01B010  0E00               	movlw	0
 24786  01B012  6F0A               	movwf	___lwdiv@quotient& (0+255),b
 24787                           
 24788                           ; BSR set to: 2
 24789  01B014  5107               	movf	___lwdiv@divisor& (0+255),w,b
 24790  01B016  1108               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 24791  01B018  B4D8               	btfsc	status,2,c
 24792  01B01A  D01C               	goto	l3092
 24793                           
 24794                           ; BSR set to: 2
 24795  01B01C  0E01               	movlw	1
 24796  01B01E  6F09               	movwf	___lwdiv@counter& (0+255),b
 24797  01B020  D004               	goto	l17100
 24798  01B022                     l17098:
 24799                           
 24800                           ; BSR set to: 2
 24801  01B022  90D8               	bcf	status,0,c
 24802  01B024  3707               	rlcf	___lwdiv@divisor& (0+255),f,b
 24803  01B026  3708               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 24804  01B028  2B09               	incf	___lwdiv@counter& (0+255),f,b
 24805  01B02A                     l17100:
 24806                           
 24807                           ; BSR set to: 2
 24808  01B02A  AF08               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 24809  01B02C  D7FA               	goto	l17098
 24810  01B02E                     u20760:
 24811                           
 24812                           ; BSR set to: 2
 24813  01B02E  90D8               	bcf	status,0,c
 24814  01B030  370A               	rlcf	___lwdiv@quotient& (0+255),f,b
 24815  01B032  370B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 24816                           
 24817                           ; BSR set to: 2
 24818  01B034  5107               	movf	___lwdiv@divisor& (0+255),w,b
 24819  01B036  5D05               	subwf	___lwdiv@dividend& (0+255),w,b
 24820  01B038  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24821  01B03A  5906               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 24822  01B03C  A0D8               	btfss	status,0,c
 24823  01B03E  D005               	goto	l17110
 24824                           
 24825                           ; BSR set to: 2
 24826  01B040  5107               	movf	___lwdiv@divisor& (0+255),w,b
 24827  01B042  5F05               	subwf	___lwdiv@dividend& (0+255),f,b
 24828  01B044  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24829  01B046  5B06               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 24830                           
 24831                           ; BSR set to: 2
 24832  01B048  810A               	bsf	___lwdiv@quotient& (0+255),0,b
 24833  01B04A                     l17110:
 24834                           
 24835                           ; BSR set to: 2
 24836  01B04A  90D8               	bcf	status,0,c
 24837  01B04C  3308               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 24838  01B04E  3307               	rrcf	___lwdiv@divisor& (0+255),f,b
 24839                           
 24840                           ; BSR set to: 2
 24841  01B050  2F09               	decfsz	___lwdiv@counter& (0+255),f,b
 24842  01B052  D7ED               	goto	u20760
 24843  01B054                     l3092:
 24844                           
 24845                           ; BSR set to: 2
 24846  01B054  C20A  F205         	movff	___lwdiv@quotient,?___lwdiv
 24847  01B058  C20B  F206         	movff	___lwdiv@quotient+1,?___lwdiv+1
 24848                           
 24849                           ; BSR set to: 2
 24850  01B05C  0012               	return		;funcret
 24851  01B05E                     __end_of___lwdiv:
 24852                           	opt callstack 0
 24853                           
 24854 ;; *************** function __tdiv_to_l_ *****************
 24855 ;; Defined at:
 24856 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;  f1              4    0[BANK2 ] float 
 24859 ;;  f2              4    4[BANK2 ] float 
 24860 ;; Auto vars:     Size  Location     Type
 24861 ;;  quot            4   11[BANK2 ] unsigned long 
 24862 ;;  exp1            1   16[BANK2 ] unsigned char 
 24863 ;;  cntr            1   15[BANK2 ] unsigned char 
 24864 ;; Return value:  Size  Location     Type
 24865 ;;                  4    0[BANK2 ] unsigned long 
 24866 ;; Registers used:
 24867 ;;		wreg, status,2, status,0
 24868 ;; Tracked objects:
 24869 ;;		On entry : 0/0
 24870 ;;		On exit  : 0/0
 24871 ;;		Unchanged: 0/0
 24872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24873 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24874 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24875 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24876 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24877 ;;Total ram usage:       17 bytes
 24878 ;; Hardware stack levels used:    1
 24879 ;; Hardware stack levels required when called:   11
 24880 ;; This function calls:
 24881 ;;		Nothing
 24882 ;; This function is called by:
 24883 ;;		__doprnt
 24884 ;; This function uses a non-reentrant model
 24885 ;;
 24886                           
 24887                           	psect	text76
 24888  01971C                     __ptext76:
 24889                           	opt callstack 0
 24890  01971C                     __tdiv_to_l_:
 24891                           	opt callstack 14
 24892                           
 24893                           ; BSR set to: 2
 24894                           ;incstack = 0
 24895  01971C  C202  F208         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 24896  019720  0102               	movlb	2	; () banked
 24897  019722  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24898  019724  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24899  019726  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24900  019728  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24901  01972A  E301               	bnc	u20911
 24902  01972C  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24903  01972E                     u20911:
 24904  01972E  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 24905  019730  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
 24906  019732  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24907  019734  A4D8               	btfss	status,2,c
 24908  019736  D009               	goto	l17210
 24909  019738                     u20920:
 24910                           
 24911                           ; BSR set to: 2
 24912  019738  0E00               	movlw	0
 24913  01973A  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 24914  01973C  0E00               	movlw	0
 24915  01973E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24916  019740  0E00               	movlw	0
 24917  019742  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24918  019744  0E00               	movlw	0
 24919  019746  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24920  019748  0012               	return	
 24921  01974A                     l17210:
 24922                           
 24923                           ; BSR set to: 2
 24924  01974A  C206  F208         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 24925  01974E  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24926  019750  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24927  019752  3505               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24928  019754  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24929  019756  E301               	bnc	u20931
 24930  019758  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24931  01975A                     u20931:
 24932  01975A  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 24933  01975C  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24934  01975E  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24935  019760  B4D8               	btfsc	status,2,c
 24936  019762  D7EA               	goto	u20920
 24937                           
 24938                           ; BSR set to: 2
 24939  019764  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 24940                           
 24941                           ; BSR set to: 2
 24942  019766  0EFF               	movlw	255
 24943  019768  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 24944  01976A  0EFF               	movlw	255
 24945  01976C  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24946  01976E  0E00               	movlw	0
 24947  019770  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24948  019772  8F05               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 24949                           
 24950                           ; BSR set to: 2
 24951  019774  0EFF               	movlw	255
 24952  019776  1704               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 24953  019778  0EFF               	movlw	255
 24954  01977A  1705               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 24955  01977C  0E00               	movlw	0
 24956  01977E  1706               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 24957                           
 24958                           ; BSR set to: 2
 24959  019780  0E00               	movlw	0
 24960  019782  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
 24961  019784  0E00               	movlw	0
 24962  019786  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 24963  019788  0E00               	movlw	0
 24964  01978A  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 24965  01978C  0E00               	movlw	0
 24966  01978E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 24967                           
 24968                           ; BSR set to: 2
 24969  019790  0E7F               	movlw	127
 24970  019792  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24971                           
 24972                           ; BSR set to: 2
 24973  019794  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24974  019796  0F98               	addlw	152
 24975  019798  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24976                           
 24977                           ; BSR set to: 2
 24978  01979A  0E18               	movlw	24
 24979  01979C  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24980  01979E                     l2944:
 24981                           
 24982                           ; BSR set to: 2
 24983  01979E  90D8               	bcf	status,0,c
 24984  0197A0  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24985  0197A2  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24986  0197A4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24987  0197A6  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24988                           
 24989                           ; BSR set to: 2
 24990  0197A8  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24991  0197AA  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 24992  0197AC  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24993  0197AE  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24994  0197B0  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24995  0197B2  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 24996  0197B4  A0D8               	btfss	status,0,c
 24997  0197B6  D007               	goto	l2945
 24998                           
 24999                           ; BSR set to: 2
 25000  0197B8  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 25001  0197BA  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 25002  0197BC  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 25003  0197BE  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 25004  0197C0  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 25005  0197C2  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 25006                           
 25007                           ; BSR set to: 2
 25008  0197C4  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 25009  0197C6                     l2945:
 25010                           
 25011                           ; BSR set to: 2
 25012  0197C6  90D8               	bcf	status,0,c
 25013  0197C8  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 25014  0197CA  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 25015  0197CC  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 25016                           
 25017                           ; BSR set to: 2
 25018  0197CE  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 25019  0197D0  D7E6               	goto	l2944
 25020                           
 25021                           ; BSR set to: 2
 25022  0197D2  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 25023  0197D4  D00D               	goto	l17250
 25024                           
 25025                           ; BSR set to: 2
 25026  0197D6  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 25027  0197D8  0A80               	xorlw	128
 25028  0197DA  0F97               	addlw	151
 25029  0197DC  A0D8               	btfss	status,0,c
 25030  0197DE  D7AC               	goto	u20920
 25031  0197E0                     l17246:
 25032                           
 25033                           ; BSR set to: 2
 25034  0197E0  90D8               	bcf	status,0,c
 25035  0197E2  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 25036  0197E4  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 25037  0197E6  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 25038  0197E8  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 25039                           
 25040                           ; BSR set to: 2
 25041  0197EA  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 25042  0197EC  D7F9               	goto	l17246
 25043  0197EE  D00D               	goto	u20990
 25044  0197F0                     l17250:
 25045                           
 25046                           ; BSR set to: 2
 25047  0197F0  0E17               	movlw	23
 25048  0197F2  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 25049  0197F4  D007               	goto	l17258
 25050  0197F6  D7A0               	goto	u20920
 25051  0197F8                     l17256:
 25052                           
 25053                           ; BSR set to: 2
 25054  0197F8  90D8               	bcf	status,0,c
 25055  0197FA  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 25056  0197FC  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 25057  0197FE  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 25058  019800  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 25059  019802  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 25060  019804                     l17258:
 25061                           
 25062                           ; BSR set to: 2
 25063  019804  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 25064  019806  A4D8               	btfss	status,2,c
 25065  019808  D7F7               	goto	l17256
 25066  01980A                     u20990:
 25067                           
 25068                           ; BSR set to: 2
 25069  01980A  C20B  F200         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 25070  01980E  C20C  F201         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 25071  019812  C20D  F202         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 25072  019816  C20E  F203         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 25073                           
 25074                           ; BSR set to: 2
 25075  01981A  0012               	return		;funcret
 25076  01981C                     __end_of__tdiv_to_l_:
 25077                           	opt callstack 0
 25078                           
 25079 ;; *************** function __div_to_l_ *****************
 25080 ;; Defined at:
 25081 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;  f1              4    0[BANK2 ] unsigned long 
 25084 ;;  f2              4    4[BANK2 ] unsigned long 
 25085 ;; Auto vars:     Size  Location     Type
 25086 ;;  quot            4    8[BANK2 ] unsigned long 
 25087 ;;  exp1            1   13[BANK2 ] unsigned char 
 25088 ;;  cntr            1   12[BANK2 ] unsigned char 
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  4    0[BANK2 ] unsigned long 
 25091 ;; Registers used:
 25092 ;;		wreg, status,2, status,0
 25093 ;; Tracked objects:
 25094 ;;		On entry : 0/0
 25095 ;;		On exit  : 0/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25098 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25099 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25101 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25102 ;;Total ram usage:       14 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:   11
 25105 ;; This function calls:
 25106 ;;		Nothing
 25107 ;; This function is called by:
 25108 ;;		__doprnt
 25109 ;; This function uses a non-reentrant model
 25110 ;;
 25111                           
 25112                           	psect	text77
 25113  01991A                     __ptext77:
 25114                           	opt callstack 0
 25115  01991A                     __div_to_l_:
 25116                           	opt callstack 14
 25117                           
 25118                           ; BSR set to: 2
 25119                           ;incstack = 0
 25120  01991A  0102               	movlb	2	; () banked
 25121  01991C  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 25122  01991E  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 25123  019920  6F0D               	movwf	__div_to_l_@exp1& (0+255),b
 25124  019922  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 25125  019924  A4D8               	btfss	status,2,c
 25126  019926  D009               	goto	l17266
 25127  019928                     u21000:
 25128                           
 25129                           ; BSR set to: 2
 25130  019928  0E00               	movlw	0
 25131  01992A  6F00               	movwf	?__div_to_l_& (0+255),b
 25132  01992C  0E00               	movlw	0
 25133  01992E  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 25134  019930  0E00               	movlw	0
 25135  019932  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 25136  019934  0E00               	movlw	0
 25137  019936  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 25138  019938  0012               	return	
 25139  01993A                     l17266:
 25140                           
 25141                           ; BSR set to: 2
 25142  01993A  3506               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 25143  01993C  3507               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 25144  01993E  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 25145  019940  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 25146  019942  B4D8               	btfsc	status,2,c
 25147  019944  D7F1               	goto	u21000
 25148                           
 25149                           ; BSR set to: 2
 25150  019946  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 25151                           
 25152                           ; BSR set to: 2
 25153  019948  0EFF               	movlw	255
 25154  01994A  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 25155  01994C  0EFF               	movlw	255
 25156  01994E  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 25157  019950  0EFF               	movlw	255
 25158  019952  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 25159  019954  0E00               	movlw	0
 25160  019956  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 25161                           
 25162                           ; BSR set to: 2
 25163  019958  8F06               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 25164  01995A  0EFF               	movlw	255
 25165  01995C  1704               	andwf	__div_to_l_@f2& (0+255),f,b
 25166  01995E  0EFF               	movlw	255
 25167  019960  1705               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 25168  019962  0EFF               	movlw	255
 25169  019964  1706               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 25170  019966  0E00               	movlw	0
 25171  019968  1707               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 25172                           
 25173                           ; BSR set to: 2
 25174  01996A  0E00               	movlw	0
 25175  01996C  6F08               	movwf	__div_to_l_@quot& (0+255),b
 25176  01996E  0E00               	movlw	0
 25177  019970  6F09               	movwf	(__div_to_l_@quot+1)& (0+255),b
 25178  019972  0E00               	movlw	0
 25179  019974  6F0A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 25180  019976  0E00               	movlw	0
 25181  019978  6F0B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 25182                           
 25183                           ; BSR set to: 2
 25184  01997A  0E7F               	movlw	127
 25185  01997C  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 25186                           
 25187                           ; BSR set to: 2
 25188  01997E  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 25189  019980  0FA0               	addlw	160
 25190  019982  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 25191                           
 25192                           ; BSR set to: 2
 25193  019984  0E20               	movlw	32
 25194  019986  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 25195  019988                     l17286:
 25196                           
 25197                           ; BSR set to: 2
 25198  019988  90D8               	bcf	status,0,c
 25199  01998A  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 25200  01998C  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 25201  01998E  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 25202  019990  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 25203                           
 25204                           ; BSR set to: 2
 25205  019992  5104               	movf	__div_to_l_@f2& (0+255),w,b
 25206  019994  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 25207  019996  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 25208  019998  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 25209  01999A  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 25210  01999C  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 25211  01999E  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 25212  0199A0  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 25213  0199A2  A0D8               	btfss	status,0,c
 25214  0199A4  D009               	goto	l17294
 25215                           
 25216                           ; BSR set to: 2
 25217  0199A6  5104               	movf	__div_to_l_@f2& (0+255),w,b
 25218  0199A8  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 25219  0199AA  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 25220  0199AC  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 25221  0199AE  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 25222  0199B0  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 25223  0199B2  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 25224  0199B4  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 25225                           
 25226                           ; BSR set to: 2
 25227  0199B6  8108               	bsf	__div_to_l_@quot& (0+255),0,b
 25228  0199B8                     l17294:
 25229                           
 25230                           ; BSR set to: 2
 25231  0199B8  90D8               	bcf	status,0,c
 25232  0199BA  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 25233  0199BC  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 25234  0199BE  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 25235  0199C0  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 25236                           
 25237                           ; BSR set to: 2
 25238  0199C2  2F0C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 25239  0199C4  D7E1               	goto	l17286
 25240                           
 25241                           ; BSR set to: 2
 25242  0199C6  AF0D               	btfss	__div_to_l_@exp1& (0+255),7,b
 25243  0199C8  D00D               	goto	l17310
 25244                           
 25245                           ; BSR set to: 2
 25246  0199CA  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 25247  0199CC  0A80               	xorlw	128
 25248  0199CE  0F9F               	addlw	159
 25249  0199D0  A0D8               	btfss	status,0,c
 25250  0199D2  D7AA               	goto	u21000
 25251  0199D4                     l17306:
 25252                           
 25253                           ; BSR set to: 2
 25254  0199D4  90D8               	bcf	status,0,c
 25255  0199D6  330B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 25256  0199D8  330A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 25257  0199DA  3309               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 25258  0199DC  3308               	rrcf	__div_to_l_@quot& (0+255),f,b
 25259                           
 25260                           ; BSR set to: 2
 25261  0199DE  3F0D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 25262  0199E0  D7F9               	goto	l17306
 25263  0199E2  D00D               	goto	u21060
 25264  0199E4                     l17310:
 25265                           
 25266                           ; BSR set to: 2
 25267  0199E4  0E1F               	movlw	31
 25268  0199E6  650D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 25269  0199E8  D007               	goto	l17318
 25270  0199EA  D79E               	goto	u21000
 25271  0199EC                     l17316:
 25272                           
 25273                           ; BSR set to: 2
 25274  0199EC  90D8               	bcf	status,0,c
 25275  0199EE  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 25276  0199F0  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 25277  0199F2  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 25278  0199F4  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 25279  0199F6  070D               	decf	__div_to_l_@exp1& (0+255),f,b
 25280  0199F8                     l17318:
 25281                           
 25282                           ; BSR set to: 2
 25283  0199F8  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 25284  0199FA  A4D8               	btfss	status,2,c
 25285  0199FC  D7F7               	goto	l17316
 25286  0199FE                     u21060:
 25287                           
 25288                           ; BSR set to: 2
 25289  0199FE  C208  F200         	movff	__div_to_l_@quot,?__div_to_l_
 25290  019A02  C209  F201         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 25291  019A06  C20A  F202         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 25292  019A0A  C20B  F203         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 25293                           
 25294                           ; BSR set to: 2
 25295  019A0E  0012               	return		;funcret
 25296  019A10                     __end_of__div_to_l_:
 25297                           	opt callstack 0
 25298                           
 25299 ;; *************** function ___llmod *****************
 25300 ;; Defined at:
 25301 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;  dividend        4   13[BANK2 ] unsigned long 
 25304 ;;  divisor         4   17[BANK2 ] unsigned long 
 25305 ;; Auto vars:     Size  Location     Type
 25306 ;;  counter         1   21[BANK2 ] unsigned char 
 25307 ;; Return value:  Size  Location     Type
 25308 ;;                  4   13[BANK2 ] unsigned long 
 25309 ;; Registers used:
 25310 ;;		wreg, status,2, status,0
 25311 ;; Tracked objects:
 25312 ;;		On entry : 0/0
 25313 ;;		On exit  : 0/0
 25314 ;;		Unchanged: 0/0
 25315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25316 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25317 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25319 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25320 ;;Total ram usage:        9 bytes
 25321 ;; Hardware stack levels used:    1
 25322 ;; Hardware stack levels required when called:   11
 25323 ;; This function calls:
 25324 ;;		Nothing
 25325 ;; This function is called by:
 25326 ;;		__doprnt
 25327 ;; This function uses a non-reentrant model
 25328 ;;
 25329                           
 25330                           	psect	text78
 25331  01ABE2                     __ptext78:
 25332                           	opt callstack 0
 25333  01ABE2                     ___llmod:
 25334                           	opt callstack 14
 25335                           
 25336                           ; BSR set to: 2
 25337                           ;incstack = 0
 25338  01ABE2  0102               	movlb	2	; () banked
 25339  01ABE4  5111               	movf	___llmod@divisor& (0+255),w,b
 25340  01ABE6  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 25341  01ABE8  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 25342  01ABEA  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 25343  01ABEC  B4D8               	btfsc	status,2,c
 25344  01ABEE  D024               	goto	l3021
 25345                           
 25346                           ; BSR set to: 2
 25347  01ABF0  0E01               	movlw	1
 25348  01ABF2  6F15               	movwf	___llmod@counter& (0+255),b
 25349  01ABF4  D006               	goto	l17450
 25350  01ABF6                     l17448:
 25351                           
 25352                           ; BSR set to: 2
 25353  01ABF6  90D8               	bcf	status,0,c
 25354  01ABF8  3711               	rlcf	___llmod@divisor& (0+255),f,b
 25355  01ABFA  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25356  01ABFC  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25357  01ABFE  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25358  01AC00  2B15               	incf	___llmod@counter& (0+255),f,b
 25359  01AC02                     l17450:
 25360                           
 25361                           ; BSR set to: 2
 25362  01AC02  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25363  01AC04  D7F8               	goto	l17448
 25364  01AC06                     u21270:
 25365                           
 25366                           ; BSR set to: 2
 25367  01AC06  5111               	movf	___llmod@divisor& (0+255),w,b
 25368  01AC08  5D0D               	subwf	___llmod@dividend& (0+255),w,b
 25369  01AC0A  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 25370  01AC0C  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25371  01AC0E  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 25372  01AC10  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25373  01AC12  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 25374  01AC14  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25375  01AC16  A0D8               	btfss	status,0,c
 25376  01AC18  D008               	goto	l17456
 25377                           
 25378                           ; BSR set to: 2
 25379  01AC1A  5111               	movf	___llmod@divisor& (0+255),w,b
 25380  01AC1C  5F0D               	subwf	___llmod@dividend& (0+255),f,b
 25381  01AC1E  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 25382  01AC20  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25383  01AC22  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 25384  01AC24  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25385  01AC26  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 25386  01AC28  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25387  01AC2A                     l17456:
 25388                           
 25389                           ; BSR set to: 2
 25390  01AC2A  90D8               	bcf	status,0,c
 25391  01AC2C  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25392  01AC2E  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25393  01AC30  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25394  01AC32  3311               	rrcf	___llmod@divisor& (0+255),f,b
 25395                           
 25396                           ; BSR set to: 2
 25397  01AC34  2F15               	decfsz	___llmod@counter& (0+255),f,b
 25398  01AC36  D7E7               	goto	u21270
 25399  01AC38                     l3021:
 25400                           
 25401                           ; BSR set to: 2
 25402  01AC38  C20D  F20D         	movff	___llmod@dividend,?___llmod
 25403  01AC3C  C20E  F20E         	movff	___llmod@dividend+1,?___llmod+1
 25404  01AC40  C20F  F20F         	movff	___llmod@dividend+2,?___llmod+2
 25405  01AC44  C210  F210         	movff	___llmod@dividend+3,?___llmod+3
 25406                           
 25407                           ; BSR set to: 2
 25408  01AC48  0012               	return		;funcret
 25409  01AC4A                     __end_of___llmod:
 25410                           	opt callstack 0
 25411                           
 25412 ;; *************** function ___fltol *****************
 25413 ;; Defined at:
 25414 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 25415 ;; Parameters:    Size  Location     Type
 25416 ;;  f1              4   48[BANK2 ] unsigned long 
 25417 ;; Auto vars:     Size  Location     Type
 25418 ;;  exp1            1   57[BANK2 ] unsigned char 
 25419 ;;  sign1           1   56[BANK2 ] unsigned char 
 25420 ;; Return value:  Size  Location     Type
 25421 ;;                  4   48[BANK2 ] long 
 25422 ;; Registers used:
 25423 ;;		wreg, status,2, status,0
 25424 ;; Tracked objects:
 25425 ;;		On entry : 0/0
 25426 ;;		On exit  : 0/0
 25427 ;;		Unchanged: 0/0
 25428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25429 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25430 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25431 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25432 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25433 ;;Total ram usage:       10 bytes
 25434 ;; Hardware stack levels used:    1
 25435 ;; Hardware stack levels required when called:   11
 25436 ;; This function calls:
 25437 ;;		Nothing
 25438 ;; This function is called by:
 25439 ;;		__doprnt
 25440 ;;		_ftoa
 25441 ;; This function uses a non-reentrant model
 25442 ;;
 25443                           
 25444                           	psect	text79
 25445  01A0E4                     __ptext79:
 25446                           	opt callstack 0
 25447  01A0E4                     ___fltol:
 25448                           	opt callstack 14
 25449                           
 25450                           ; BSR set to: 2
 25451                           ;incstack = 0
 25452  01A0E4  0102               	movlb	2	; () banked
 25453  01A0E6  3532               	rlcf	(___fltol@f1+2)& (0+255),w,b
 25454  01A0E8  3533               	rlcf	(___fltol@f1+3)& (0+255),w,b
 25455  01A0EA  6F39               	movwf	___fltol@exp1& (0+255),b
 25456  01A0EC  5139               	movf	___fltol@exp1& (0+255),w,b
 25457  01A0EE  A4D8               	btfss	status,2,c
 25458  01A0F0  D009               	goto	l17406
 25459  01A0F2                     u21190:
 25460                           
 25461                           ; BSR set to: 2
 25462  01A0F2  0E00               	movlw	0
 25463  01A0F4  6F30               	movwf	?___fltol& (0+255),b
 25464  01A0F6  0E00               	movlw	0
 25465  01A0F8  6F31               	movwf	(?___fltol+1)& (0+255),b
 25466  01A0FA  0E00               	movlw	0
 25467  01A0FC  6F32               	movwf	(?___fltol+2)& (0+255),b
 25468  01A0FE  0E00               	movlw	0
 25469  01A100  6F33               	movwf	(?___fltol+3)& (0+255),b
 25470  01A102  0012               	return	
 25471  01A104                     l17406:
 25472                           
 25473                           ; BSR set to: 2
 25474  01A104  C230  F234         	movff	___fltol@f1,??___fltol
 25475  01A108  C231  F235         	movff	___fltol@f1+1,??___fltol+1
 25476  01A10C  C232  F236         	movff	___fltol@f1+2,??___fltol+2
 25477  01A110  C233  F237         	movff	___fltol@f1+3,??___fltol+3
 25478  01A114  0E20               	movlw	32
 25479  01A116  D005               	goto	u21200
 25480  01A118                     u21205:
 25481  01A118  90D8               	bcf	status,0,c
 25482  01A11A  3337               	rrcf	(??___fltol+3)& (0+255),f,b
 25483  01A11C  3336               	rrcf	(??___fltol+2)& (0+255),f,b
 25484  01A11E  3335               	rrcf	(??___fltol+1)& (0+255),f,b
 25485  01A120  3334               	rrcf	??___fltol& (0+255),f,b
 25486  01A122                     u21200:
 25487  01A122  2EE8               	decfsz	wreg,f,c
 25488  01A124  D7F9               	goto	u21205
 25489  01A126  5134               	movf	??___fltol& (0+255),w,b
 25490  01A128  6F38               	movwf	___fltol@sign1& (0+255),b
 25491                           
 25492                           ; BSR set to: 2
 25493  01A12A  8F32               	bsf	(___fltol@f1+2)& (0+255),7,b
 25494                           
 25495                           ; BSR set to: 2
 25496  01A12C  0EFF               	movlw	255
 25497  01A12E  1730               	andwf	___fltol@f1& (0+255),f,b
 25498  01A130  0EFF               	movlw	255
 25499  01A132  1731               	andwf	(___fltol@f1+1)& (0+255),f,b
 25500  01A134  0EFF               	movlw	255
 25501  01A136  1732               	andwf	(___fltol@f1+2)& (0+255),f,b
 25502  01A138  0E00               	movlw	0
 25503  01A13A  1733               	andwf	(___fltol@f1+3)& (0+255),f,b
 25504                           
 25505                           ; BSR set to: 2
 25506  01A13C  0E96               	movlw	150
 25507  01A13E  5F39               	subwf	___fltol@exp1& (0+255),f,b
 25508                           
 25509                           ; BSR set to: 2
 25510  01A140  AF39               	btfss	___fltol@exp1& (0+255),7,b
 25511  01A142  D00D               	goto	l17426
 25512                           
 25513                           ; BSR set to: 2
 25514  01A144  5139               	movf	___fltol@exp1& (0+255),w,b
 25515  01A146  0A80               	xorlw	128
 25516  01A148  0F97               	addlw	151
 25517  01A14A  A0D8               	btfss	status,0,c
 25518  01A14C  D7D2               	goto	u21190
 25519  01A14E                     l17422:
 25520                           
 25521                           ; BSR set to: 2
 25522  01A14E  90D8               	bcf	status,0,c
 25523  01A150  3333               	rrcf	(___fltol@f1+3)& (0+255),f,b
 25524  01A152  3332               	rrcf	(___fltol@f1+2)& (0+255),f,b
 25525  01A154  3331               	rrcf	(___fltol@f1+1)& (0+255),f,b
 25526  01A156  3330               	rrcf	___fltol@f1& (0+255),f,b
 25527                           
 25528                           ; BSR set to: 2
 25529  01A158  3F39               	incfsz	___fltol@exp1& (0+255),f,b
 25530  01A15A  D7F9               	goto	l17422
 25531  01A15C  D00D               	goto	u21240
 25532  01A15E                     l17426:
 25533                           
 25534                           ; BSR set to: 2
 25535  01A15E  0E1F               	movlw	31
 25536  01A160  6539               	cpfsgt	___fltol@exp1& (0+255),b
 25537  01A162  D007               	goto	l17434
 25538  01A164  D7C6               	goto	u21190
 25539  01A166                     l17432:
 25540                           
 25541                           ; BSR set to: 2
 25542  01A166  90D8               	bcf	status,0,c
 25543  01A168  3730               	rlcf	___fltol@f1& (0+255),f,b
 25544  01A16A  3731               	rlcf	(___fltol@f1+1)& (0+255),f,b
 25545  01A16C  3732               	rlcf	(___fltol@f1+2)& (0+255),f,b
 25546  01A16E  3733               	rlcf	(___fltol@f1+3)& (0+255),f,b
 25547  01A170  0739               	decf	___fltol@exp1& (0+255),f,b
 25548  01A172                     l17434:
 25549                           
 25550                           ; BSR set to: 2
 25551  01A172  5139               	movf	___fltol@exp1& (0+255),w,b
 25552  01A174  A4D8               	btfss	status,2,c
 25553  01A176  D7F7               	goto	l17432
 25554  01A178                     u21240:
 25555                           
 25556                           ; BSR set to: 2
 25557  01A178  5138               	movf	___fltol@sign1& (0+255),w,b
 25558  01A17A  B4D8               	btfsc	status,2,c
 25559  01A17C  D008               	goto	l17440
 25560                           
 25561                           ; BSR set to: 2
 25562  01A17E  1F33               	comf	(___fltol@f1+3)& (0+255),f,b
 25563  01A180  1F32               	comf	(___fltol@f1+2)& (0+255),f,b
 25564  01A182  1F31               	comf	(___fltol@f1+1)& (0+255),f,b
 25565  01A184  6D30               	negf	___fltol@f1& (0+255),b
 25566  01A186  0E00               	movlw	0
 25567  01A188  2331               	addwfc	(___fltol@f1+1)& (0+255),f,b
 25568  01A18A  2332               	addwfc	(___fltol@f1+2)& (0+255),f,b
 25569  01A18C  2333               	addwfc	(___fltol@f1+3)& (0+255),f,b
 25570  01A18E                     l17440:
 25571                           
 25572                           ; BSR set to: 2
 25573  01A18E  C230  F230         	movff	___fltol@f1,?___fltol
 25574  01A192  C231  F231         	movff	___fltol@f1+1,?___fltol+1
 25575  01A196  C232  F232         	movff	___fltol@f1+2,?___fltol+2
 25576  01A19A  C233  F233         	movff	___fltol@f1+3,?___fltol+3
 25577                           
 25578                           ; BSR set to: 2
 25579  01A19E  0012               	return		;funcret
 25580  01A1A0                     __end_of___fltol:
 25581                           	opt callstack 0
 25582                           
 25583 ;; *************** function ___flsub *****************
 25584 ;; Defined at:
 25585 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 25586 ;; Parameters:    Size  Location     Type
 25587 ;;  b               4   68[BANK2 ] long 
 25588 ;;  a               4   72[BANK2 ] long 
 25589 ;; Auto vars:     Size  Location     Type
 25590 ;;		None
 25591 ;; Return value:  Size  Location     Type
 25592 ;;                  4   68[BANK2 ] long 
 25593 ;; Registers used:
 25594 ;;		wreg, status,2, status,0, cstack
 25595 ;; Tracked objects:
 25596 ;;		On entry : 0/0
 25597 ;;		On exit  : 0/0
 25598 ;;		Unchanged: 0/0
 25599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25600 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25603 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25604 ;;Total ram usage:        8 bytes
 25605 ;; Hardware stack levels used:    1
 25606 ;; Hardware stack levels required when called:   12
 25607 ;; This function calls:
 25608 ;;		___fladd
 25609 ;; This function is called by:
 25610 ;;		__doprnt
 25611 ;;		_ftoa
 25612 ;; This function uses a non-reentrant model
 25613 ;;
 25614                           
 25615                           	psect	text80
 25616  01B322                     __ptext80:
 25617                           	opt callstack 0
 25618  01B322                     ___flsub:
 25619                           	opt callstack 13
 25620                           
 25621                           ; BSR set to: 2
 25622                           ;incstack = 0
 25623  01B322  0E00               	movlw	0
 25624  01B324  0102               	movlb	2	; () banked
 25625  01B326  1B48               	xorwf	___flsub@a& (0+255),f,b
 25626  01B328  0E00               	movlw	0
 25627  01B32A  1B49               	xorwf	(___flsub@a+1)& (0+255),f,b
 25628  01B32C  0E00               	movlw	0
 25629  01B32E  1B4A               	xorwf	(___flsub@a+2)& (0+255),f,b
 25630  01B330  0E80               	movlw	128
 25631  01B332  1B4B               	xorwf	(___flsub@a+3)& (0+255),f,b
 25632                           
 25633                           ; BSR set to: 2
 25634  01B334  C244  F234         	movff	___flsub@b,___fladd@b
 25635  01B338  C245  F235         	movff	___flsub@b+1,___fladd@b+1
 25636  01B33C  C246  F236         	movff	___flsub@b+2,___fladd@b+2
 25637  01B340  C247  F237         	movff	___flsub@b+3,___fladd@b+3
 25638  01B344  C248  F238         	movff	___flsub@a,___fladd@a
 25639  01B348  C249  F239         	movff	___flsub@a+1,___fladd@a+1
 25640  01B34C  C24A  F23A         	movff	___flsub@a+2,___fladd@a+2
 25641  01B350  C24B  F23B         	movff	___flsub@a+3,___fladd@a+3
 25642  01B354  ECA5  F0B5         	call	___fladd	;wreg free
 25643  01B358  C234  F244         	movff	?___fladd,?___flsub
 25644  01B35C  C235  F245         	movff	?___fladd+1,?___flsub+1
 25645  01B360  C236  F246         	movff	?___fladd+2,?___flsub+2
 25646  01B364  C237  F247         	movff	?___fladd+3,?___flsub+3
 25647  01B368  0012               	return		;funcret
 25648  01B36A                     __end_of___flsub:
 25649                           	opt callstack 0
 25650                           
 25651 ;; *************** function ___fladd *****************
 25652 ;; Defined at:
 25653 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;  b               4   52[BANK2 ] long 
 25656 ;;  a               4   56[BANK2 ] long 
 25657 ;; Auto vars:     Size  Location     Type
 25658 ;;  grs             1   67[BANK2 ] unsigned char 
 25659 ;;  bexp            1   66[BANK2 ] unsigned char 
 25660 ;;  aexp            1   65[BANK2 ] unsigned char 
 25661 ;;  signs           1   64[BANK2 ] unsigned char 
 25662 ;; Return value:  Size  Location     Type
 25663 ;;                  4   52[BANK2 ] unsigned char 
 25664 ;; Registers used:
 25665 ;;		wreg, status,2, status,0
 25666 ;; Tracked objects:
 25667 ;;		On entry : 0/0
 25668 ;;		On exit  : 0/0
 25669 ;;		Unchanged: 0/0
 25670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25671 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25672 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25673 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25674 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25675 ;;Total ram usage:       16 bytes
 25676 ;; Hardware stack levels used:    1
 25677 ;; Hardware stack levels required when called:   11
 25678 ;; This function calls:
 25679 ;;		Nothing
 25680 ;; This function is called by:
 25681 ;;		__doprnt
 25682 ;;		___flsub
 25683 ;; This function uses a non-reentrant model
 25684 ;;
 25685                           
 25686                           	psect	text81
 25687  016B4A                     __ptext81:
 25688                           	opt callstack 0
 25689  016B4A                     ___fladd:
 25690                           	opt callstack 13
 25691                           
 25692                           ;incstack = 0
 25693  016B4A  0102               	movlb	2	; () banked
 25694  016B4C  5137               	movf	(___fladd@b+3)& (0+255),w,b
 25695  016B4E  0B80               	andlw	128
 25696  016B50  6F40               	movwf	___fladd@signs& (0+255),b
 25697  016B52  5137               	movf	(___fladd@b+3)& (0+255),w,b
 25698  016B54  2537               	addwf	(___fladd@b+3)& (0+255),w,b
 25699  016B56  6F42               	movwf	___fladd@bexp& (0+255),b
 25700                           
 25701                           ; BSR set to: 2
 25702  016B58  BF36               	btfsc	(___fladd@b+2)& (0+255),7,b
 25703                           
 25704                           ; BSR set to: 2
 25705  016B5A  8142               	bsf	___fladd@bexp& (0+255),0,b
 25706                           
 25707                           ; BSR set to: 2
 25708  016B5C  5142               	movf	___fladd@bexp& (0+255),w,b
 25709  016B5E  B4D8               	btfsc	status,2,c
 25710  016B60  D00D               	goto	l16696
 25711                           
 25712                           ; BSR set to: 2
 25713  016B62  2942               	incf	___fladd@bexp& (0+255),w,b
 25714  016B64  A4D8               	btfss	status,2,c
 25715  016B66  D008               	goto	l16692
 25716                           
 25717                           ; BSR set to: 2
 25718  016B68  0E00               	movlw	0
 25719  016B6A  6F34               	movwf	___fladd@b& (0+255),b
 25720  016B6C  0E00               	movlw	0
 25721  016B6E  6F35               	movwf	(___fladd@b+1)& (0+255),b
 25722  016B70  0E00               	movlw	0
 25723  016B72  6F36               	movwf	(___fladd@b+2)& (0+255),b
 25724  016B74  0E00               	movlw	0
 25725  016B76  6F37               	movwf	(___fladd@b+3)& (0+255),b
 25726  016B78                     l16692:
 25727                           
 25728                           ; BSR set to: 2
 25729  016B78  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 25730  016B7A  D006               	goto	L17
 25731  016B7C                     l16696:
 25732                           
 25733                           ; BSR set to: 2
 25734  016B7C  0E00               	movlw	0
 25735  016B7E  6F34               	movwf	___fladd@b& (0+255),b
 25736  016B80  0E00               	movlw	0
 25737  016B82  6F35               	movwf	(___fladd@b+1)& (0+255),b
 25738  016B84  0E00               	movlw	0
 25739  016B86  6F36               	movwf	(___fladd@b+2)& (0+255),b
 25740  016B88                     L17:
 25741  016B88  0E00               	movlw	0
 25742  016B8A  6F37               	movwf	(___fladd@b+3)& (0+255),b
 25743                           
 25744                           ; BSR set to: 2
 25745  016B8C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 25746  016B8E  0B80               	andlw	128
 25747  016B90  6F41               	movwf	___fladd@aexp& (0+255),b
 25748                           
 25749                           ; BSR set to: 2
 25750  016B92  5140               	movf	___fladd@signs& (0+255),w,b
 25751  016B94  1941               	xorwf	___fladd@aexp& (0+255),w,b
 25752  016B96  A4D8               	btfss	status,2,c
 25753                           
 25754                           ; BSR set to: 2
 25755  016B98  8D40               	bsf	___fladd@signs& (0+255),6,b
 25756                           
 25757                           ; BSR set to: 2
 25758  016B9A  513B               	movf	(___fladd@a+3)& (0+255),w,b
 25759  016B9C  253B               	addwf	(___fladd@a+3)& (0+255),w,b
 25760  016B9E  6F41               	movwf	___fladd@aexp& (0+255),b
 25761                           
 25762                           ; BSR set to: 2
 25763  016BA0  BF3A               	btfsc	(___fladd@a+2)& (0+255),7,b
 25764                           
 25765                           ; BSR set to: 2
 25766  016BA2  8141               	bsf	___fladd@aexp& (0+255),0,b
 25767                           
 25768                           ; BSR set to: 2
 25769  016BA4  5141               	movf	___fladd@aexp& (0+255),w,b
 25770  016BA6  B4D8               	btfsc	status,2,c
 25771  016BA8  D00D               	goto	l16720
 25772                           
 25773                           ; BSR set to: 2
 25774  016BAA  2941               	incf	___fladd@aexp& (0+255),w,b
 25775  016BAC  A4D8               	btfss	status,2,c
 25776  016BAE  D008               	goto	l16716
 25777                           
 25778                           ; BSR set to: 2
 25779  016BB0  0E00               	movlw	0
 25780  016BB2  6F38               	movwf	___fladd@a& (0+255),b
 25781  016BB4  0E00               	movlw	0
 25782  016BB6  6F39               	movwf	(___fladd@a+1)& (0+255),b
 25783  016BB8  0E00               	movlw	0
 25784  016BBA  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 25785  016BBC  0E00               	movlw	0
 25786  016BBE  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 25787  016BC0                     l16716:
 25788                           
 25789                           ; BSR set to: 2
 25790  016BC0  8F3A               	bsf	(___fladd@a+2)& (0+255),7,b
 25791  016BC2  D006               	goto	L18
 25792  016BC4                     l16720:
 25793                           
 25794                           ; BSR set to: 2
 25795  016BC4  0E00               	movlw	0
 25796  016BC6  6F38               	movwf	___fladd@a& (0+255),b
 25797  016BC8  0E00               	movlw	0
 25798  016BCA  6F39               	movwf	(___fladd@a+1)& (0+255),b
 25799  016BCC  0E00               	movlw	0
 25800  016BCE  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 25801  016BD0                     L18:
 25802  016BD0  0E00               	movlw	0
 25803  016BD2  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 25804                           
 25805                           ; BSR set to: 2
 25806  016BD4  5142               	movf	___fladd@bexp& (0+255),w,b
 25807  016BD6  5D41               	subwf	___fladd@aexp& (0+255),w,b
 25808  016BD8  B0D8               	btfsc	status,0,c
 25809  016BDA  D022               	goto	l16758
 25810                           
 25811                           ; BSR set to: 2
 25812  016BDC  AD40               	btfss	___fladd@signs& (0+255),6,b
 25813  016BDE  D002               	goto	l16728
 25814                           
 25815                           ; BSR set to: 2
 25816  016BE0  0E80               	movlw	128
 25817  016BE2  1B40               	xorwf	___fladd@signs& (0+255),f,b
 25818  016BE4                     l16728:
 25819                           
 25820                           ; BSR set to: 2
 25821  016BE4  C242  F243         	movff	___fladd@bexp,___fladd@grs
 25822                           
 25823                           ; BSR set to: 2
 25824  016BE8  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 25825                           
 25826                           ; BSR set to: 2
 25827  016BEC  C243  F241         	movff	___fladd@grs,___fladd@aexp
 25828                           
 25829                           ; BSR set to: 2
 25830  016BF0  C234  F243         	movff	___fladd@b,___fladd@grs
 25831                           
 25832                           ; BSR set to: 2
 25833  016BF4  C238  F234         	movff	___fladd@a,___fladd@b
 25834                           
 25835                           ; BSR set to: 2
 25836  016BF8  C243  F238         	movff	___fladd@grs,___fladd@a
 25837                           
 25838                           ; BSR set to: 2
 25839  016BFC  C235  F243         	movff	___fladd@b+1,___fladd@grs
 25840                           
 25841                           ; BSR set to: 2
 25842  016C00  C239  F235         	movff	___fladd@a+1,___fladd@b+1
 25843                           
 25844                           ; BSR set to: 2
 25845  016C04  C243  F239         	movff	___fladd@grs,___fladd@a+1
 25846                           
 25847                           ; BSR set to: 2
 25848  016C08  C236  F243         	movff	___fladd@b+2,___fladd@grs
 25849                           
 25850                           ; BSR set to: 2
 25851  016C0C  C23A  F236         	movff	___fladd@a+2,___fladd@b+2
 25852                           
 25853                           ; BSR set to: 2
 25854  016C10  C243  F23A         	movff	___fladd@grs,___fladd@a+2
 25855                           
 25856                           ; BSR set to: 2
 25857  016C14  C237  F243         	movff	___fladd@b+3,___fladd@grs
 25858                           
 25859                           ; BSR set to: 2
 25860  016C18  C23B  F237         	movff	___fladd@a+3,___fladd@b+3
 25861                           
 25862                           ; BSR set to: 2
 25863  016C1C  C243  F23B         	movff	___fladd@grs,___fladd@a+3
 25864  016C20                     l16758:
 25865                           
 25866                           ; BSR set to: 2
 25867  016C20  0E00               	movlw	0
 25868  016C22  6F43               	movwf	___fladd@grs& (0+255),b
 25869                           
 25870                           ; BSR set to: 2
 25871  016C24  5142               	movf	___fladd@bexp& (0+255),w,b
 25872  016C26  C241  F23C         	movff	___fladd@aexp,??___fladd
 25873  016C2A  6B3D               	clrf	(??___fladd+1)& (0+255),b
 25874  016C2C  5F3C               	subwf	??___fladd& (0+255),f,b
 25875  016C2E  0E00               	movlw	0
 25876  016C30  5B3D               	subwfb	(??___fladd+1)& (0+255),f,b
 25877  016C32  BF3D               	btfsc	(??___fladd+1)& (0+255),7,b
 25878  016C34  D02C               	goto	l3130
 25879  016C36  513D               	movf	(??___fladd+1)& (0+255),w,b
 25880  016C38  E104               	bnz	u20140
 25881  016C3A  0E1A               	movlw	26
 25882  016C3C  5D3C               	subwf	??___fladd& (0+255),w,b
 25883  016C3E  A0D8               	btfss	status,0,c
 25884  016C40  D026               	goto	l3130
 25885  016C42                     u20140:
 25886                           
 25887                           ; BSR set to: 2
 25888  016C42  5134               	movf	___fladd@b& (0+255),w,b
 25889  016C44  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 25890  016C46  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 25891  016C48  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 25892  016C4A  B4D8               	btfsc	status,2,c
 25893  016C4C  D002               	goto	u20150
 25894  016C4E  0E01               	movlw	1
 25895  016C50  D001               	goto	u20160
 25896  016C52                     u20150:
 25897  016C52  0E00               	movlw	0
 25898  016C54                     u20160:
 25899  016C54  6F43               	movwf	___fladd@grs& (0+255),b
 25900                           
 25901                           ; BSR set to: 2
 25902  016C56  0E00               	movlw	0
 25903  016C58  6F34               	movwf	___fladd@b& (0+255),b
 25904  016C5A  0E00               	movlw	0
 25905  016C5C  6F35               	movwf	(___fladd@b+1)& (0+255),b
 25906  016C5E  0E00               	movlw	0
 25907  016C60  6F36               	movwf	(___fladd@b+2)& (0+255),b
 25908  016C62  0E00               	movlw	0
 25909  016C64  6F37               	movwf	(___fladd@b+3)& (0+255),b
 25910                           
 25911                           ; BSR set to: 2
 25912  016C66  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 25913  016C6A  D015               	goto	u20190
 25914  016C6C                     l3131:
 25915                           
 25916                           ; BSR set to: 2
 25917  016C6C  A143               	btfss	___fladd@grs& (0+255),0,b
 25918  016C6E  D005               	goto	l16770
 25919                           
 25920                           ; BSR set to: 2
 25921  016C70  90D8               	bcf	status,0,c
 25922  016C72  3143               	rrcf	___fladd@grs& (0+255),w,b
 25923  016C74  0901               	iorlw	1
 25924  016C76  6F43               	movwf	___fladd@grs& (0+255),b
 25925  016C78  D002               	goto	l16772
 25926  016C7A                     l16770:
 25927                           
 25928                           ; BSR set to: 2
 25929  016C7A  90D8               	bcf	status,0,c
 25930  016C7C  3343               	rrcf	___fladd@grs& (0+255),f,b
 25931  016C7E                     l16772:
 25932                           
 25933                           ; BSR set to: 2
 25934  016C7E  B134               	btfsc	___fladd@b& (0+255),0,b
 25935                           
 25936                           ; BSR set to: 2
 25937  016C80  8F43               	bsf	___fladd@grs& (0+255),7,b
 25938                           
 25939                           ; BSR set to: 2
 25940  016C82  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 25941  016C84  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 25942  016C86  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 25943  016C88  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 25944  016C8A  3334               	rrcf	___fladd@b& (0+255),f,b
 25945                           
 25946                           ; BSR set to: 2
 25947  016C8C  2B42               	incf	___fladd@bexp& (0+255),f,b
 25948  016C8E                     l3130:
 25949                           
 25950                           ; BSR set to: 2
 25951  016C8E  5141               	movf	___fladd@aexp& (0+255),w,b
 25952  016C90  5D42               	subwf	___fladd@bexp& (0+255),w,b
 25953  016C92  A0D8               	btfss	status,0,c
 25954  016C94  D7EB               	goto	l3131
 25955  016C96                     u20190:
 25956                           
 25957                           ; BSR set to: 2
 25958  016C96  BD40               	btfsc	___fladd@signs& (0+255),6,b
 25959  016C98  D028               	goto	l16804
 25960                           
 25961                           ; BSR set to: 2
 25962  016C9A  5142               	movf	___fladd@bexp& (0+255),w,b
 25963  016C9C  A4D8               	btfss	status,2,c
 25964  016C9E  D009               	goto	l16786
 25965                           
 25966                           ; BSR set to: 2
 25967  016CA0  0E00               	movlw	0
 25968  016CA2  6F34               	movwf	?___fladd& (0+255),b
 25969  016CA4  0E00               	movlw	0
 25970  016CA6  6F35               	movwf	(?___fladd+1)& (0+255),b
 25971  016CA8  0E00               	movlw	0
 25972  016CAA  6F36               	movwf	(?___fladd+2)& (0+255),b
 25973  016CAC  0E00               	movlw	0
 25974  016CAE  6F37               	movwf	(?___fladd+3)& (0+255),b
 25975  016CB0  0012               	return	
 25976  016CB2                     l16786:
 25977                           
 25978                           ; BSR set to: 2
 25979  016CB2  5138               	movf	___fladd@a& (0+255),w,b
 25980  016CB4  2734               	addwf	___fladd@b& (0+255),f,b
 25981  016CB6  5139               	movf	(___fladd@a+1)& (0+255),w,b
 25982  016CB8  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 25983  016CBA  513A               	movf	(___fladd@a+2)& (0+255),w,b
 25984  016CBC  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 25985  016CBE  513B               	movf	(___fladd@a+3)& (0+255),w,b
 25986  016CC0  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 25987                           
 25988                           ; BSR set to: 2
 25989  016CC2  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 25990  016CC4  D071               	goto	u20320
 25991                           
 25992                           ; BSR set to: 2
 25993  016CC6  A143               	btfss	___fladd@grs& (0+255),0,b
 25994  016CC8  D005               	goto	l16794
 25995                           
 25996                           ; BSR set to: 2
 25997  016CCA  90D8               	bcf	status,0,c
 25998  016CCC  3143               	rrcf	___fladd@grs& (0+255),w,b
 25999  016CCE  0901               	iorlw	1
 26000  016CD0  6F43               	movwf	___fladd@grs& (0+255),b
 26001  016CD2  D002               	goto	l16796
 26002  016CD4                     l16794:
 26003                           
 26004                           ; BSR set to: 2
 26005  016CD4  90D8               	bcf	status,0,c
 26006  016CD6  3343               	rrcf	___fladd@grs& (0+255),f,b
 26007  016CD8                     l16796:
 26008                           
 26009                           ; BSR set to: 2
 26010  016CD8  B134               	btfsc	___fladd@b& (0+255),0,b
 26011                           
 26012                           ; BSR set to: 2
 26013  016CDA  8F43               	bsf	___fladd@grs& (0+255),7,b
 26014                           
 26015                           ; BSR set to: 2
 26016  016CDC  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 26017  016CDE  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 26018  016CE0  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 26019  016CE2  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 26020  016CE4  3334               	rrcf	___fladd@b& (0+255),f,b
 26021                           
 26022                           ; BSR set to: 2
 26023  016CE6  2B42               	incf	___fladd@bexp& (0+255),f,b
 26024  016CE8  D05F               	goto	u20320
 26025  016CEA                     l16804:
 26026                           
 26027                           ; BSR set to: 2
 26028  016CEA  5138               	movf	___fladd@a& (0+255),w,b
 26029  016CEC  5D34               	subwf	___fladd@b& (0+255),w,b
 26030  016CEE  5139               	movf	(___fladd@a+1)& (0+255),w,b
 26031  016CF0  5935               	subwfb	(___fladd@b+1)& (0+255),w,b
 26032  016CF2  513A               	movf	(___fladd@a+2)& (0+255),w,b
 26033  016CF4  5936               	subwfb	(___fladd@b+2)& (0+255),w,b
 26034  016CF6  5137               	movf	(___fladd@b+3)& (0+255),w,b
 26035  016CF8  0A80               	xorlw	128
 26036  016CFA  6F3C               	movwf	??___fladd& (0+255),b
 26037  016CFC  513B               	movf	(___fladd@a+3)& (0+255),w,b
 26038  016CFE  0A80               	xorlw	128
 26039  016D00  593C               	subwfb	??___fladd& (0+255),w,b
 26040  016D02  B0D8               	btfsc	status,0,c
 26041  016D04  D025               	goto	l16814
 26042                           
 26043                           ; BSR set to: 2
 26044  016D06  5134               	movf	___fladd@b& (0+255),w,b
 26045  016D08  5D38               	subwf	___fladd@a& (0+255),w,b
 26046  016D0A  6F3C               	movwf	??___fladd& (0+255),b
 26047  016D0C  5135               	movf	(___fladd@b+1)& (0+255),w,b
 26048  016D0E  5939               	subwfb	(___fladd@a+1)& (0+255),w,b
 26049  016D10  6F3D               	movwf	(??___fladd+1)& (0+255),b
 26050  016D12  5136               	movf	(___fladd@b+2)& (0+255),w,b
 26051  016D14  593A               	subwfb	(___fladd@a+2)& (0+255),w,b
 26052  016D16  6F3E               	movwf	(??___fladd+2)& (0+255),b
 26053  016D18  5137               	movf	(___fladd@b+3)& (0+255),w,b
 26054  016D1A  593B               	subwfb	(___fladd@a+3)& (0+255),w,b
 26055  016D1C  6F3F               	movwf	(??___fladd+3)& (0+255),b
 26056  016D1E  0EFF               	movlw	255
 26057  016D20  253C               	addwf	??___fladd& (0+255),w,b
 26058  016D22  6F34               	movwf	___fladd@b& (0+255),b
 26059  016D24  0EFF               	movlw	255
 26060  016D26  213D               	addwfc	(??___fladd+1)& (0+255),w,b
 26061  016D28  6F35               	movwf	(___fladd@b+1)& (0+255),b
 26062  016D2A  0EFF               	movlw	255
 26063  016D2C  213E               	addwfc	(??___fladd+2)& (0+255),w,b
 26064  016D2E  6F36               	movwf	(___fladd@b+2)& (0+255),b
 26065  016D30  0EFF               	movlw	255
 26066  016D32  213F               	addwfc	(??___fladd+3)& (0+255),w,b
 26067  016D34  6F37               	movwf	(___fladd@b+3)& (0+255),b
 26068  016D36  0E80               	movlw	128
 26069  016D38  1B40               	xorwf	___fladd@signs& (0+255),f,b
 26070                           
 26071                           ; BSR set to: 2
 26072  016D3A  6D43               	negf	___fladd@grs& (0+255),b
 26073                           
 26074                           ; BSR set to: 2
 26075  016D3C  5143               	movf	___fladd@grs& (0+255),w,b
 26076  016D3E  A4D8               	btfss	status,2,c
 26077  016D40  D00F               	goto	l3146
 26078                           
 26079                           ; BSR set to: 2
 26080  016D42  0E01               	movlw	1
 26081  016D44  2734               	addwf	___fladd@b& (0+255),f,b
 26082  016D46  0E00               	movlw	0
 26083  016D48  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 26084  016D4A  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 26085  016D4C  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 26086  016D4E  D008               	goto	l3146
 26087  016D50                     l16814:
 26088                           
 26089                           ; BSR set to: 2
 26090  016D50  5138               	movf	___fladd@a& (0+255),w,b
 26091  016D52  5F34               	subwf	___fladd@b& (0+255),f,b
 26092  016D54  5139               	movf	(___fladd@a+1)& (0+255),w,b
 26093  016D56  5B35               	subwfb	(___fladd@b+1)& (0+255),f,b
 26094  016D58  513A               	movf	(___fladd@a+2)& (0+255),w,b
 26095  016D5A  5B36               	subwfb	(___fladd@b+2)& (0+255),f,b
 26096  016D5C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 26097  016D5E  5B37               	subwfb	(___fladd@b+3)& (0+255),f,b
 26098  016D60                     l3146:
 26099                           
 26100                           ; BSR set to: 2
 26101  016D60  5134               	movf	___fladd@b& (0+255),w,b
 26102  016D62  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 26103  016D64  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 26104  016D66  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 26105  016D68  A4D8               	btfss	status,2,c
 26106  016D6A  D01C               	goto	l16838
 26107                           
 26108                           ; BSR set to: 2
 26109  016D6C  5143               	movf	___fladd@grs& (0+255),w,b
 26110  016D6E  A4D8               	btfss	status,2,c
 26111  016D70  D019               	goto	l16838
 26112                           
 26113                           ; BSR set to: 2
 26114  016D72  0E00               	movlw	0
 26115  016D74  6F34               	movwf	?___fladd& (0+255),b
 26116  016D76  0E00               	movlw	0
 26117  016D78  6F35               	movwf	(?___fladd+1)& (0+255),b
 26118  016D7A  0E00               	movlw	0
 26119  016D7C  6F36               	movwf	(?___fladd+2)& (0+255),b
 26120  016D7E  0E00               	movlw	0
 26121  016D80  6F37               	movwf	(?___fladd+3)& (0+255),b
 26122  016D82  0012               	return	
 26123  016D84                     l16822:
 26124                           
 26125                           ; BSR set to: 2
 26126  016D84  90D8               	bcf	status,0,c
 26127  016D86  3734               	rlcf	___fladd@b& (0+255),f,b
 26128  016D88  3735               	rlcf	(___fladd@b+1)& (0+255),f,b
 26129  016D8A  3736               	rlcf	(___fladd@b+2)& (0+255),f,b
 26130  016D8C  3737               	rlcf	(___fladd@b+3)& (0+255),f,b
 26131                           
 26132                           ; BSR set to: 2
 26133  016D8E  BF43               	btfsc	___fladd@grs& (0+255),7,b
 26134                           
 26135                           ; BSR set to: 2
 26136  016D90  8134               	bsf	___fladd@b& (0+255),0,b
 26137                           
 26138                           ; BSR set to: 2
 26139  016D92  A143               	btfss	___fladd@grs& (0+255),0,b
 26140  016D94  D002               	goto	l16832
 26141                           
 26142                           ; BSR set to: 2
 26143  016D96  80D8               	bsf	status,0,c
 26144  016D98  D001               	goto	L19
 26145  016D9A                     l16832:
 26146                           
 26147                           ; BSR set to: 2
 26148  016D9A  90D8               	bcf	status,0,c
 26149  016D9C                     L19:
 26150  016D9C  3743               	rlcf	___fladd@grs& (0+255),f,b
 26151                           
 26152                           ; BSR set to: 2
 26153  016D9E  5142               	movf	___fladd@bexp& (0+255),w,b
 26154  016DA0  A4D8               	btfss	status,2,c
 26155                           
 26156                           ; BSR set to: 2
 26157  016DA2  0742               	decf	___fladd@bexp& (0+255),f,b
 26158  016DA4                     l16838:
 26159                           
 26160                           ; BSR set to: 2
 26161  016DA4  AF36               	btfss	(___fladd@b+2)& (0+255),7,b
 26162  016DA6  D7EE               	goto	l16822
 26163  016DA8                     u20320:
 26164                           
 26165                           ; BSR set to: 2
 26166  016DA8  0E00               	movlw	0
 26167  016DAA  6F41               	movwf	___fladd@aexp& (0+255),b
 26168                           
 26169                           ; BSR set to: 2
 26170  016DAC  AF43               	btfss	___fladd@grs& (0+255),7,b
 26171  016DAE  D00B               	goto	l3155
 26172                           
 26173                           ; BSR set to: 2
 26174  016DB0  C243  F23C         	movff	___fladd@grs,??___fladd
 26175  016DB4  0E7F               	movlw	127
 26176  016DB6  173C               	andwf	??___fladd& (0+255),f,b
 26177  016DB8  B4D8               	btfsc	status,2,c
 26178  016DBA  D003               	goto	l3156
 26179  016DBC                     u20340:
 26180                           
 26181                           ; BSR set to: 2
 26182  016DBC  0E01               	movlw	1
 26183  016DBE  6F41               	movwf	___fladd@aexp& (0+255),b
 26184  016DC0  D002               	goto	l3155
 26185  016DC2                     l3156:
 26186                           
 26187                           ; BSR set to: 2
 26188  016DC2  B134               	btfsc	___fladd@b& (0+255),0,b
 26189  016DC4  D7FB               	goto	u20340
 26190  016DC6                     l3155:
 26191                           
 26192                           ; BSR set to: 2
 26193  016DC6  5141               	movf	___fladd@aexp& (0+255),w,b
 26194  016DC8  B4D8               	btfsc	status,2,c
 26195  016DCA  D020               	goto	l16858
 26196                           
 26197                           ; BSR set to: 2
 26198  016DCC  0E01               	movlw	1
 26199  016DCE  2734               	addwf	___fladd@b& (0+255),f,b
 26200  016DD0  0E00               	movlw	0
 26201  016DD2  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 26202  016DD4  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 26203  016DD6  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 26204                           
 26205                           ; BSR set to: 2
 26206  016DD8  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 26207  016DDA  D018               	goto	l16858
 26208                           
 26209                           ; BSR set to: 2
 26210  016DDC  C234  F23C         	movff	___fladd@b,??___fladd
 26211  016DE0  C235  F23D         	movff	___fladd@b+1,??___fladd+1
 26212  016DE4  C236  F23E         	movff	___fladd@b+2,??___fladd+2
 26213  016DE8  C237  F23F         	movff	___fladd@b+3,??___fladd+3
 26214  016DEC  353F               	rlcf	(??___fladd+3)& (0+255),w,b
 26215  016DEE  333F               	rrcf	(??___fladd+3)& (0+255),f,b
 26216  016DF0  333E               	rrcf	(??___fladd+2)& (0+255),f,b
 26217  016DF2  333D               	rrcf	(??___fladd+1)& (0+255),f,b
 26218  016DF4  333C               	rrcf	??___fladd& (0+255),f,b
 26219  016DF6  C23C  F234         	movff	??___fladd,___fladd@b
 26220  016DFA  C23D  F235         	movff	??___fladd+1,___fladd@b+1
 26221  016DFE  C23E  F236         	movff	??___fladd+2,___fladd@b+2
 26222  016E02  C23F  F237         	movff	??___fladd+3,___fladd@b+3
 26223  016E06  2942               	incf	___fladd@bexp& (0+255),w,b
 26224  016E08  A4D8               	btfss	status,2,c
 26225                           
 26226                           ; BSR set to: 2
 26227  016E0A  2B42               	incf	___fladd@bexp& (0+255),f,b
 26228  016E0C                     l16858:
 26229                           
 26230                           ; BSR set to: 2
 26231  016E0C  2942               	incf	___fladd@bexp& (0+255),w,b
 26232  016E0E  B4D8               	btfsc	status,2,c
 26233  016E10  D003               	goto	u20400
 26234                           
 26235                           ; BSR set to: 2
 26236  016E12  5142               	movf	___fladd@bexp& (0+255),w,b
 26237  016E14  A4D8               	btfss	status,2,c
 26238  016E16  D00D               	goto	l16866
 26239  016E18                     u20400:
 26240                           
 26241                           ; BSR set to: 2
 26242  016E18  0E00               	movlw	0
 26243  016E1A  6F34               	movwf	___fladd@b& (0+255),b
 26244  016E1C  0E00               	movlw	0
 26245  016E1E  6F35               	movwf	(___fladd@b+1)& (0+255),b
 26246  016E20  0E00               	movlw	0
 26247  016E22  6F36               	movwf	(___fladd@b+2)& (0+255),b
 26248  016E24  0E00               	movlw	0
 26249  016E26  6F37               	movwf	(___fladd@b+3)& (0+255),b
 26250  016E28  5142               	movf	___fladd@bexp& (0+255),w,b
 26251  016E2A  A4D8               	btfss	status,2,c
 26252  016E2C  D002               	goto	l16866
 26253                           
 26254                           ; BSR set to: 2
 26255  016E2E  0E00               	movlw	0
 26256  016E30  6F40               	movwf	___fladd@signs& (0+255),b
 26257  016E32                     l16866:
 26258                           
 26259                           ; BSR set to: 2
 26260  016E32  A142               	btfss	___fladd@bexp& (0+255),0,b
 26261  016E34  D002               	goto	l16870
 26262                           
 26263                           ; BSR set to: 2
 26264  016E36  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 26265  016E38  D001               	goto	l16872
 26266  016E3A                     l16870:
 26267                           
 26268                           ; BSR set to: 2
 26269  016E3A  9F36               	bcf	(___fladd@b+2)& (0+255),7,b
 26270  016E3C                     l16872:
 26271                           
 26272                           ; BSR set to: 2
 26273  016E3C  90D8               	bcf	status,0,c
 26274  016E3E  3142               	rrcf	___fladd@bexp& (0+255),w,b
 26275  016E40  6F37               	movwf	(___fladd@b+3)& (0+255),b
 26276                           
 26277                           ; BSR set to: 2
 26278  016E42  BF40               	btfsc	___fladd@signs& (0+255),7,b
 26279                           
 26280                           ; BSR set to: 2
 26281  016E44  8F37               	bsf	(___fladd@b+3)& (0+255),7,b
 26282                           
 26283                           ; BSR set to: 2
 26284  016E46  C234  F234         	movff	___fladd@b,?___fladd
 26285  016E4A  C235  F235         	movff	___fladd@b+1,?___fladd+1
 26286  016E4E  C236  F236         	movff	___fladd@b+2,?___fladd+2
 26287  016E52  C237  F237         	movff	___fladd@b+3,?___fladd+3
 26288                           
 26289                           ; BSR set to: 2
 26290  016E56  0012               	return		;funcret
 26291  016E58                     __end_of___fladd:
 26292                           	opt callstack 0
 26293                           
 26294 ;; *************** function ___flneg *****************
 26295 ;; Defined at:
 26296 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 26297 ;; Parameters:    Size  Location     Type
 26298 ;;  f1              4    0[BANK2 ] unsigned char 
 26299 ;; Auto vars:     Size  Location     Type
 26300 ;;		None
 26301 ;; Return value:  Size  Location     Type
 26302 ;;                  4    0[BANK2 ] unsigned char 
 26303 ;; Registers used:
 26304 ;;		wreg, status,2, status,0
 26305 ;; Tracked objects:
 26306 ;;		On entry : 0/0
 26307 ;;		On exit  : 0/0
 26308 ;;		Unchanged: 0/0
 26309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26310 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26313 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26314 ;;Total ram usage:        4 bytes
 26315 ;; Hardware stack levels used:    1
 26316 ;; Hardware stack levels required when called:   11
 26317 ;; This function calls:
 26318 ;;		Nothing
 26319 ;; This function is called by:
 26320 ;;		__doprnt
 26321 ;;		_ftoa
 26322 ;; This function uses a non-reentrant model
 26323 ;;
 26324                           
 26325                           	psect	text82
 26326  01B9D8                     __ptext82:
 26327                           	opt callstack 0
 26328  01B9D8                     ___flneg:
 26329                           	opt callstack 14
 26330                           
 26331                           ; BSR set to: 2
 26332                           ;incstack = 0
 26333  01B9D8  0102               	movlb	2	; () banked
 26334  01B9DA  5100               	movf	___flneg@f1& (0+255),w,b
 26335  01B9DC  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 26336  01B9DE  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 26337  01B9E0  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 26338  01B9E2  B4D8               	btfsc	status,2,c
 26339  01B9E4  D008               	goto	l17396
 26340                           
 26341                           ; BSR set to: 2
 26342  01B9E6  0E00               	movlw	0
 26343  01B9E8  1B00               	xorwf	___flneg@f1& (0+255),f,b
 26344  01B9EA  0E00               	movlw	0
 26345  01B9EC  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 26346  01B9EE  0E00               	movlw	0
 26347  01B9F0  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 26348  01B9F2  0E80               	movlw	128
 26349  01B9F4  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 26350  01B9F6                     l17396:
 26351                           
 26352                           ; BSR set to: 2
 26353  01B9F6  C200  F200         	movff	___flneg@f1,?___flneg
 26354  01B9FA  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 26355  01B9FE  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 26356  01BA02  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 26357                           
 26358                           ; BSR set to: 2
 26359  01BA06  0012               	return		;funcret
 26360  01BA08                     __end_of___flneg:
 26361                           	opt callstack 0
 26362                           
 26363 ;; *************** function ___flge *****************
 26364 ;; Defined at:
 26365 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 26366 ;; Parameters:    Size  Location     Type
 26367 ;;  ff1             4    0[BANK2 ] unsigned char 
 26368 ;;  ff2             4    4[BANK2 ] unsigned char 
 26369 ;; Auto vars:     Size  Location     Type
 26370 ;;		None
 26371 ;; Return value:  Size  Location     Type
 26372 ;;		None               void
 26373 ;; Registers used:
 26374 ;;		wreg, status,2, status,0
 26375 ;; Tracked objects:
 26376 ;;		On entry : 0/0
 26377 ;;		On exit  : 0/0
 26378 ;;		Unchanged: 0/0
 26379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26380 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26382 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26383 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26384 ;;Total ram usage:       12 bytes
 26385 ;; Hardware stack levels used:    1
 26386 ;; Hardware stack levels required when called:   11
 26387 ;; This function calls:
 26388 ;;		Nothing
 26389 ;; This function is called by:
 26390 ;;		__doprnt
 26391 ;; This function uses a non-reentrant model
 26392 ;;
 26393                           
 26394                           	psect	text83
 26395  019CE8                     __ptext83:
 26396                           	opt callstack 0
 26397  019CE8                     ___flge:
 26398                           	opt callstack 14
 26399                           
 26400                           ; BSR set to: 2
 26401                           ;incstack = 0
 26402  019CE8  0E00               	movlw	0
 26403  019CEA  0102               	movlb	2	; () banked
 26404  019CEC  1500               	andwf	___flge@ff1& (0+255),w,b
 26405  019CEE  6F08               	movwf	??___flge& (0+255),b
 26406  019CF0  0E00               	movlw	0
 26407  019CF2  1501               	andwf	(___flge@ff1+1)& (0+255),w,b
 26408  019CF4  6F09               	movwf	(??___flge+1)& (0+255),b
 26409  019CF6  0E80               	movlw	128
 26410  019CF8  1502               	andwf	(___flge@ff1+2)& (0+255),w,b
 26411  019CFA  6F0A               	movwf	(??___flge+2)& (0+255),b
 26412  019CFC  0E7F               	movlw	127
 26413  019CFE  1503               	andwf	(___flge@ff1+3)& (0+255),w,b
 26414  019D00  6F0B               	movwf	(??___flge+3)& (0+255),b
 26415  019D02  5108               	movf	??___flge& (0+255),w,b
 26416  019D04  1109               	iorwf	(??___flge+1)& (0+255),w,b
 26417  019D06  110A               	iorwf	(??___flge+2)& (0+255),w,b
 26418  019D08  110B               	iorwf	(??___flge+3)& (0+255),w,b
 26419  019D0A  A4D8               	btfss	status,2,c
 26420  019D0C  D008               	goto	l17374
 26421                           
 26422                           ; BSR set to: 2
 26423  019D0E  0E00               	movlw	0
 26424  019D10  6F00               	movwf	___flge@ff1& (0+255),b
 26425  019D12  0E00               	movlw	0
 26426  019D14  6F01               	movwf	(___flge@ff1+1)& (0+255),b
 26427  019D16  0E00               	movlw	0
 26428  019D18  6F02               	movwf	(___flge@ff1+2)& (0+255),b
 26429  019D1A  0E00               	movlw	0
 26430  019D1C  6F03               	movwf	(___flge@ff1+3)& (0+255),b
 26431  019D1E                     l17374:
 26432                           
 26433                           ; BSR set to: 2
 26434  019D1E  0E00               	movlw	0
 26435  019D20  1504               	andwf	___flge@ff2& (0+255),w,b
 26436  019D22  6F08               	movwf	??___flge& (0+255),b
 26437  019D24  0E00               	movlw	0
 26438  019D26  1505               	andwf	(___flge@ff2+1)& (0+255),w,b
 26439  019D28  6F09               	movwf	(??___flge+1)& (0+255),b
 26440  019D2A  0E80               	movlw	128
 26441  019D2C  1506               	andwf	(___flge@ff2+2)& (0+255),w,b
 26442  019D2E  6F0A               	movwf	(??___flge+2)& (0+255),b
 26443  019D30  0E7F               	movlw	127
 26444  019D32  1507               	andwf	(___flge@ff2+3)& (0+255),w,b
 26445  019D34  6F0B               	movwf	(??___flge+3)& (0+255),b
 26446  019D36  5108               	movf	??___flge& (0+255),w,b
 26447  019D38  1109               	iorwf	(??___flge+1)& (0+255),w,b
 26448  019D3A  110A               	iorwf	(??___flge+2)& (0+255),w,b
 26449  019D3C  110B               	iorwf	(??___flge+3)& (0+255),w,b
 26450  019D3E  A4D8               	btfss	status,2,c
 26451  019D40  D008               	goto	l17378
 26452                           
 26453                           ; BSR set to: 2
 26454  019D42  0E00               	movlw	0
 26455  019D44  6F04               	movwf	___flge@ff2& (0+255),b
 26456  019D46  0E00               	movlw	0
 26457  019D48  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 26458  019D4A  0E00               	movlw	0
 26459  019D4C  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 26460  019D4E  0E00               	movlw	0
 26461  019D50  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 26462  019D52                     l17378:
 26463                           
 26464                           ; BSR set to: 2
 26465  019D52  AF03               	btfss	(___flge@ff1+3)& (0+255),7,b
 26466  019D54  D009               	goto	l17382
 26467                           
 26468                           ; BSR set to: 2
 26469  019D56  6D00               	negf	___flge@ff1& (0+255),b
 26470  019D58  1F01               	comf	(___flge@ff1+1)& (0+255),f,b
 26471  019D5A  B0D8               	btfsc	status,0,c
 26472  019D5C  2B01               	incf	(___flge@ff1+1)& (0+255),f,b
 26473  019D5E  1F02               	comf	(___flge@ff1+2)& (0+255),f,b
 26474  019D60  B0D8               	btfsc	status,0,c
 26475  019D62  2B02               	incf	(___flge@ff1+2)& (0+255),f,b
 26476  019D64  0E80               	movlw	128
 26477  019D66  5703               	subfwb	(___flge@ff1+3)& (0+255),f,b
 26478  019D68                     l17382:
 26479                           
 26480                           ; BSR set to: 2
 26481  019D68  AF07               	btfss	(___flge@ff2+3)& (0+255),7,b
 26482  019D6A  D009               	goto	l2857
 26483                           
 26484                           ; BSR set to: 2
 26485  019D6C  6D04               	negf	___flge@ff2& (0+255),b
 26486  019D6E  1F05               	comf	(___flge@ff2+1)& (0+255),f,b
 26487  019D70  B0D8               	btfsc	status,0,c
 26488  019D72  2B05               	incf	(___flge@ff2+1)& (0+255),f,b
 26489  019D74  1F06               	comf	(___flge@ff2+2)& (0+255),f,b
 26490  019D76  B0D8               	btfsc	status,0,c
 26491  019D78  2B06               	incf	(___flge@ff2+2)& (0+255),f,b
 26492  019D7A  0E80               	movlw	128
 26493  019D7C  5707               	subfwb	(___flge@ff2+3)& (0+255),f,b
 26494  019D7E                     l2857:
 26495                           
 26496                           ; BSR set to: 2
 26497  019D7E  0E00               	movlw	0
 26498  019D80  1B00               	xorwf	___flge@ff1& (0+255),f,b
 26499  019D82  0E00               	movlw	0
 26500  019D84  1B01               	xorwf	(___flge@ff1+1)& (0+255),f,b
 26501  019D86  0E00               	movlw	0
 26502  019D88  1B02               	xorwf	(___flge@ff1+2)& (0+255),f,b
 26503  019D8A  0E80               	movlw	128
 26504  019D8C  1B03               	xorwf	(___flge@ff1+3)& (0+255),f,b
 26505  019D8E  0E00               	movlw	0
 26506  019D90  1B04               	xorwf	___flge@ff2& (0+255),f,b
 26507  019D92  0E00               	movlw	0
 26508  019D94  1B05               	xorwf	(___flge@ff2+1)& (0+255),f,b
 26509  019D96  0E00               	movlw	0
 26510  019D98  1B06               	xorwf	(___flge@ff2+2)& (0+255),f,b
 26511  019D9A  0E80               	movlw	128
 26512  019D9C  1B07               	xorwf	(___flge@ff2+3)& (0+255),f,b
 26513  019D9E  5104               	movf	___flge@ff2& (0+255),w,b
 26514  019DA0  5D00               	subwf	___flge@ff1& (0+255),w,b
 26515  019DA2  5105               	movf	(___flge@ff2+1)& (0+255),w,b
 26516  019DA4  5901               	subwfb	(___flge@ff1+1)& (0+255),w,b
 26517  019DA6  5106               	movf	(___flge@ff2+2)& (0+255),w,b
 26518  019DA8  5902               	subwfb	(___flge@ff1+2)& (0+255),w,b
 26519  019DAA  5107               	movf	(___flge@ff2+3)& (0+255),w,b
 26520  019DAC  5903               	subwfb	(___flge@ff1+3)& (0+255),w,b
 26521  019DAE  B0D8               	btfsc	status,0,c
 26522  019DB0  D002               	goto	l17388
 26523                           
 26524                           ; BSR set to: 2
 26525  019DB2  90D8               	bcf	status,0,c
 26526  019DB4  0012               	return	
 26527  019DB6                     l17388:
 26528                           
 26529                           ; BSR set to: 2
 26530  019DB6  80D8               	bsf	status,0,c
 26531                           
 26532                           ; BSR set to: 2
 26533  019DB8  0012               	return		;funcret
 26534  019DBA                     __end_of___flge:
 26535                           	opt callstack 0
 26536                           
 26537 ;; *************** function ___fleq *****************
 26538 ;; Defined at:
 26539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 26540 ;; Parameters:    Size  Location     Type
 26541 ;;  ff1             4    0[BANK2 ] unsigned char 
 26542 ;;  ff2             4    4[BANK2 ] unsigned char 
 26543 ;; Auto vars:     Size  Location     Type
 26544 ;;		None
 26545 ;; Return value:  Size  Location     Type
 26546 ;;		None               void
 26547 ;; Registers used:
 26548 ;;		wreg, status,2, status,0
 26549 ;; Tracked objects:
 26550 ;;		On entry : 0/0
 26551 ;;		On exit  : 0/0
 26552 ;;		Unchanged: 0/0
 26553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26554 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26556 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26557 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26558 ;;Total ram usage:       12 bytes
 26559 ;; Hardware stack levels used:    1
 26560 ;; Hardware stack levels required when called:   11
 26561 ;; This function calls:
 26562 ;;		Nothing
 26563 ;; This function is called by:
 26564 ;;		__doprnt
 26565 ;; This function uses a non-reentrant model
 26566 ;;
 26567                           
 26568                           	psect	text84
 26569  01A7DA                     __ptext84:
 26570                           	opt callstack 0
 26571  01A7DA                     ___fleq:
 26572                           	opt callstack 14
 26573                           
 26574                           ; BSR set to: 2
 26575                           ;incstack = 0
 26576  01A7DA  0E00               	movlw	0
 26577  01A7DC  0102               	movlb	2	; () banked
 26578  01A7DE  1500               	andwf	___fleq@ff1& (0+255),w,b
 26579  01A7E0  6F08               	movwf	??___fleq& (0+255),b
 26580  01A7E2  0E00               	movlw	0
 26581  01A7E4  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
 26582  01A7E6  6F09               	movwf	(??___fleq+1)& (0+255),b
 26583  01A7E8  0E80               	movlw	128
 26584  01A7EA  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
 26585  01A7EC  6F0A               	movwf	(??___fleq+2)& (0+255),b
 26586  01A7EE  0E7F               	movlw	127
 26587  01A7F0  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
 26588  01A7F2  6F0B               	movwf	(??___fleq+3)& (0+255),b
 26589  01A7F4  5108               	movf	??___fleq& (0+255),w,b
 26590  01A7F6  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 26591  01A7F8  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 26592  01A7FA  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 26593  01A7FC  A4D8               	btfss	status,2,c
 26594  01A7FE  D008               	goto	l17358
 26595                           
 26596                           ; BSR set to: 2
 26597  01A800  0E00               	movlw	0
 26598  01A802  6F00               	movwf	___fleq@ff1& (0+255),b
 26599  01A804  0E00               	movlw	0
 26600  01A806  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
 26601  01A808  0E00               	movlw	0
 26602  01A80A  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
 26603  01A80C  0E00               	movlw	0
 26604  01A80E  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
 26605  01A810                     l17358:
 26606                           
 26607                           ; BSR set to: 2
 26608  01A810  0E00               	movlw	0
 26609  01A812  1504               	andwf	___fleq@ff2& (0+255),w,b
 26610  01A814  6F08               	movwf	??___fleq& (0+255),b
 26611  01A816  0E00               	movlw	0
 26612  01A818  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
 26613  01A81A  6F09               	movwf	(??___fleq+1)& (0+255),b
 26614  01A81C  0E80               	movlw	128
 26615  01A81E  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
 26616  01A820  6F0A               	movwf	(??___fleq+2)& (0+255),b
 26617  01A822  0E7F               	movlw	127
 26618  01A824  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
 26619  01A826  6F0B               	movwf	(??___fleq+3)& (0+255),b
 26620  01A828  5108               	movf	??___fleq& (0+255),w,b
 26621  01A82A  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 26622  01A82C  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 26623  01A82E  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 26624  01A830  A4D8               	btfss	status,2,c
 26625  01A832  D008               	goto	l17362
 26626                           
 26627                           ; BSR set to: 2
 26628  01A834  0E00               	movlw	0
 26629  01A836  6F04               	movwf	___fleq@ff2& (0+255),b
 26630  01A838  0E00               	movlw	0
 26631  01A83A  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 26632  01A83C  0E00               	movlw	0
 26633  01A83E  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 26634  01A840  0E00               	movlw	0
 26635  01A842  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 26636  01A844                     l17362:
 26637                           
 26638                           ; BSR set to: 2
 26639  01A844  5104               	movf	___fleq@ff2& (0+255),w,b
 26640  01A846  1900               	xorwf	___fleq@ff1& (0+255),w,b
 26641  01A848  E10A               	bnz	u21120
 26642  01A84A  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
 26643  01A84C  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 26644  01A84E  E107               	bnz	u21120
 26645  01A850  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
 26646  01A852  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 26647  01A854  E104               	bnz	u21120
 26648  01A856  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
 26649  01A858  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 26650  01A85A  B4D8               	btfsc	status,2,c
 26651  01A85C  D002               	goto	l17366
 26652  01A85E                     u21120:
 26653                           
 26654                           ; BSR set to: 2
 26655  01A85E  90D8               	bcf	status,0,c
 26656  01A860  0012               	return	
 26657  01A862                     l17366:
 26658                           
 26659                           ; BSR set to: 2
 26660  01A862  80D8               	bsf	status,0,c
 26661                           
 26662                           ; BSR set to: 2
 26663  01A864  0012               	return		;funcret
 26664  01A866                     __end_of___fleq:
 26665                           	opt callstack 0
 26666                           
 26667 ;; *************** function _getYearsFromOnTime *****************
 26668 ;; Defined at:
 26669 ;;		line 165 in file "heartbeat_timer.c"
 26670 ;; Parameters:    Size  Location     Type
 26671 ;;  input_second    4   13[BANK2 ] unsigned long 
 26672 ;; Auto vars:     Size  Location     Type
 26673 ;;  years           1   17[BANK2 ] unsigned char 
 26674 ;; Return value:  Size  Location     Type
 26675 ;;                  1    wreg      unsigned char 
 26676 ;; Registers used:
 26677 ;;		wreg, status,2, status,0, cstack
 26678 ;; Tracked objects:
 26679 ;;		On entry : 0/0
 26680 ;;		On exit  : 0/0
 26681 ;;		Unchanged: 0/0
 26682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26683 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26684 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26686 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26687 ;;Total ram usage:        5 bytes
 26688 ;; Hardware stack levels used:    1
 26689 ;; Hardware stack levels required when called:   12
 26690 ;; This function calls:
 26691 ;;		___lldiv
 26692 ;; This function is called by:
 26693 ;;		_OLED_updateHandler
 26694 ;; This function uses a non-reentrant model
 26695 ;;
 26696                           
 26697                           	psect	text85
 26698  01BA08                     __ptext85:
 26699                           	opt callstack 0
 26700  01BA08                     _getYearsFromOnTime:
 26701                           	opt callstack 17
 26702                           
 26703                           ;heartbeat_timer.c: 167: uint8_t years;;heartbeat_timer.c: 168: return years = input_sec
      +                          onds / (60 * 60 * 24 * 365);
 26704                           
 26705                           ; BSR set to: 2
 26706                           ;incstack = 0
 26707  01BA08  C20D  F200         	movff	getYearsFromOnTime@input_seconds,___lldiv@dividend
 26708  01BA0C  C20E  F201         	movff	getYearsFromOnTime@input_seconds+1,___lldiv@dividend+1
 26709  01BA10  C20F  F202         	movff	getYearsFromOnTime@input_seconds+2,___lldiv@dividend+2
 26710  01BA14  C210  F203         	movff	getYearsFromOnTime@input_seconds+3,___lldiv@dividend+3
 26711  01BA18  0E80               	movlw	128
 26712  01BA1A  0102               	movlb	2	; () banked
 26713  01BA1C  6F04               	movwf	___lldiv@divisor& (0+255),b
 26714  01BA1E  0E33               	movlw	51
 26715  01BA20  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 26716  01BA22  0E00               	movlw	0
 26717  01BA24  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 26718  01BA26  0E00               	movlw	0
 26719  01BA28  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 26720  01BA2A  ECBB  F0D4         	call	___lldiv	;wreg free
 26721  01BA2E  0102               	movlb	2	; () banked
 26722  01BA30  5100               	movf	?___lldiv& (0+255),w,b
 26723  01BA32  6F11               	movwf	getYearsFromOnTime@years& (0+255),b
 26724  01BA34  5111               	movf	getYearsFromOnTime@years& (0+255),w,b
 26725                           
 26726                           ; BSR set to: 2
 26727  01BA36  0012               	return		;funcret
 26728  01BA38                     __end_of_getYearsFromOnTime:
 26729                           	opt callstack 0
 26730                           
 26731 ;; *************** function _getSecondsFromOnTime *****************
 26732 ;; Defined at:
 26733 ;;		line 209 in file "heartbeat_timer.c"
 26734 ;; Parameters:    Size  Location     Type
 26735 ;;  input_second    4   13[BANK2 ] unsigned long 
 26736 ;; Auto vars:     Size  Location     Type
 26737 ;;  minutes         1   25[BANK2 ] unsigned char 
 26738 ;;  hours           1   24[BANK2 ] unsigned char 
 26739 ;;  days            1   23[BANK2 ] unsigned char 
 26740 ;;  years           1   22[BANK2 ] unsigned char 
 26741 ;;  seconds         1   21[BANK2 ] unsigned char 
 26742 ;; Return value:  Size  Location     Type
 26743 ;;                  1    wreg      unsigned char 
 26744 ;; Registers used:
 26745 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26746 ;; Tracked objects:
 26747 ;;		On entry : 0/0
 26748 ;;		On exit  : 0/0
 26749 ;;		Unchanged: 0/0
 26750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26751 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26752 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26753 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26754 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26755 ;;Total ram usage:       13 bytes
 26756 ;; Hardware stack levels used:    1
 26757 ;; Hardware stack levels required when called:   12
 26758 ;; This function calls:
 26759 ;;		___lldiv
 26760 ;;		___wmul
 26761 ;; This function is called by:
 26762 ;;		_OLED_updateHandler
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text86
 26767  018F68                     __ptext86:
 26768                           	opt callstack 0
 26769  018F68                     _getSecondsFromOnTime:
 26770                           	opt callstack 17
 26771                           
 26772                           ;heartbeat_timer.c: 211: uint8_t years, days, hours, minutes, seconds;;heartbeat_timer.c
      +                          : 212: years = input_seconds / (60 * 60 * 24 * 365);
 26773                           
 26774                           ; BSR set to: 2
 26775                           ;incstack = 0
 26776  018F68  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 26777  018F6C  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 26778  018F70  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 26779  018F74  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 26780  018F78  0E80               	movlw	128
 26781  018F7A  0102               	movlb	2	; () banked
 26782  018F7C  6F04               	movwf	___lldiv@divisor& (0+255),b
 26783  018F7E  0E33               	movlw	51
 26784  018F80  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 26785  018F82  0E00               	movlw	0
 26786  018F84  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 26787  018F86  0E00               	movlw	0
 26788  018F88  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 26789  018F8A  ECBB  F0D4         	call	___lldiv	;wreg free
 26790  018F8E  0102               	movlb	2	; () banked
 26791  018F90  5100               	movf	?___lldiv& (0+255),w,b
 26792  018F92  6F16               	movwf	getSecondsFromOnTime@years& (0+255),b
 26793                           
 26794                           ; BSR set to: 2
 26795                           ;heartbeat_timer.c: 213: input_seconds -= years * (60 * 60 * 24 * 365);
 26796  018F94  C216  F200         	movff	getSecondsFromOnTime@years,___wmul@multiplier
 26797  018F98  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 26798  018F9A  0E33               	movlw	51
 26799  018F9C  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26800  018F9E  0E80               	movlw	128
 26801  018FA0  6F02               	movwf	___wmul@multiplicand& (0+255),b
 26802  018FA2  ECB5  F0DD         	call	___wmul	;wreg free
 26803  018FA6  0102               	movlb	2	; () banked
 26804  018FA8  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 26805  018FAC  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 26806  018FB0  0E00               	movlw	0
 26807  018FB2  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 26808  018FB4  0EFF               	movlw	255
 26809  018FB6  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 26810  018FB8  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 26811  018FBA  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 26812  018FBC  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 26813  018FBE  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 26814  018FC0  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 26815  018FC2  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 26816  018FC4  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 26817  018FC6  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 26818  018FC8  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 26819                           
 26820                           ; BSR set to: 2
 26821                           ;heartbeat_timer.c: 214: days = input_seconds / (60 * 60 * 24);
 26822  018FCA  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 26823  018FCE  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 26824  018FD2  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 26825  018FD6  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 26826  018FDA  0E80               	movlw	128
 26827  018FDC  6F04               	movwf	___lldiv@divisor& (0+255),b
 26828  018FDE  0E51               	movlw	81
 26829  018FE0  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 26830  018FE2  0E00               	movlw	0
 26831  018FE4  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 26832  018FE6  0E00               	movlw	0
 26833  018FE8  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 26834  018FEA  ECBB  F0D4         	call	___lldiv	;wreg free
 26835  018FEE  0102               	movlb	2	; () banked
 26836  018FF0  5100               	movf	?___lldiv& (0+255),w,b
 26837  018FF2  6F17               	movwf	getSecondsFromOnTime@days& (0+255),b
 26838                           
 26839                           ;heartbeat_timer.c: 215: input_seconds -= days * (60 * 60 * 24);
 26840  018FF4  C217  F200         	movff	getSecondsFromOnTime@days,___wmul@multiplier
 26841  018FF8  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 26842  018FFA  0E51               	movlw	81
 26843  018FFC  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26844  018FFE  0E80               	movlw	128
 26845  019000  6F02               	movwf	___wmul@multiplicand& (0+255),b
 26846  019002  ECB5  F0DD         	call	___wmul	;wreg free
 26847  019006  0102               	movlb	2	; () banked
 26848  019008  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 26849  01900C  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 26850  019010  0E00               	movlw	0
 26851  019012  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 26852  019014  0EFF               	movlw	255
 26853  019016  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 26854  019018  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 26855  01901A  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 26856  01901C  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 26857  01901E  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 26858  019020  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 26859  019022  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 26860  019024  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 26861  019026  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 26862  019028  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 26863                           
 26864                           ; BSR set to: 2
 26865                           ;heartbeat_timer.c: 216: hours = input_seconds / (60 * 60);
 26866  01902A  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 26867  01902E  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 26868  019032  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 26869  019036  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 26870  01903A  0E10               	movlw	16
 26871  01903C  6F04               	movwf	___lldiv@divisor& (0+255),b
 26872  01903E  0E0E               	movlw	14
 26873  019040  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 26874  019042  0E00               	movlw	0
 26875  019044  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 26876  019046  0E00               	movlw	0
 26877  019048  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 26878  01904A  ECBB  F0D4         	call	___lldiv	;wreg free
 26879  01904E  0102               	movlb	2	; () banked
 26880  019050  5100               	movf	?___lldiv& (0+255),w,b
 26881  019052  6F18               	movwf	getSecondsFromOnTime@hours& (0+255),b
 26882                           
 26883                           ; BSR set to: 2
 26884                           ;heartbeat_timer.c: 217: input_seconds -= hours * (60 * 60);
 26885  019054  C218  F200         	movff	getSecondsFromOnTime@hours,___wmul@multiplier
 26886  019058  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 26887  01905A  0E0E               	movlw	14
 26888  01905C  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26889  01905E  0E10               	movlw	16
 26890  019060  6F02               	movwf	___wmul@multiplicand& (0+255),b
 26891  019062  ECB5  F0DD         	call	___wmul	;wreg free
 26892  019066  0102               	movlb	2	; () banked
 26893  019068  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 26894  01906C  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 26895  019070  0E00               	movlw	0
 26896  019072  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 26897  019074  0EFF               	movlw	255
 26898  019076  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 26899  019078  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 26900  01907A  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 26901  01907C  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 26902  01907E  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 26903  019080  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 26904  019082  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 26905  019084  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 26906  019086  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 26907  019088  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 26908                           
 26909                           ;heartbeat_timer.c: 218: minutes = input_seconds / 60;
 26910  01908A  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 26911  01908E  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 26912  019092  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 26913  019096  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 26914  01909A  0E3C               	movlw	60
 26915  01909C  6F04               	movwf	___lldiv@divisor& (0+255),b
 26916  01909E  0E00               	movlw	0
 26917  0190A0  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 26918  0190A2  0E00               	movlw	0
 26919  0190A4  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 26920  0190A6  0E00               	movlw	0
 26921  0190A8  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 26922  0190AA  ECBB  F0D4         	call	___lldiv	;wreg free
 26923  0190AE  0102               	movlb	2	; () banked
 26924  0190B0  5100               	movf	?___lldiv& (0+255),w,b
 26925  0190B2  6F19               	movwf	getSecondsFromOnTime@minutes& (0+255),b
 26926                           
 26927                           ; BSR set to: 2
 26928                           ;heartbeat_timer.c: 219: input_seconds -= minutes * 60;
 26929  0190B4  5119               	movf	getSecondsFromOnTime@minutes& (0+255),w,b
 26930  0190B6  0D3C               	mullw	60
 26931  0190B8  CFF3 F211          	movff	prodl,??_getSecondsFromOnTime
 26932  0190BC  CFF4 F212          	movff	prodh,??_getSecondsFromOnTime+1
 26933  0190C0  0E00               	movlw	0
 26934  0190C2  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 26935  0190C4  0EFF               	movlw	255
 26936  0190C6  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 26937  0190C8  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 26938  0190CA  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 26939  0190CC  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 26940  0190CE  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 26941  0190D0  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 26942  0190D2  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 26943  0190D4  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 26944  0190D6  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 26945  0190D8  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 26946                           
 26947                           ; BSR set to: 2
 26948                           ;heartbeat_timer.c: 220: return seconds = input_seconds;
 26949  0190DA  C20D  F215         	movff	getSecondsFromOnTime@input_seconds,getSecondsFromOnTime@seconds
 26950  0190DE  5115               	movf	getSecondsFromOnTime@seconds& (0+255),w,b
 26951                           
 26952                           ; BSR set to: 2
 26953  0190E0  0012               	return		;funcret
 26954  0190E2                     __end_of_getSecondsFromOnTime:
 26955                           	opt callstack 0
 26956                           
 26957 ;; *************** function _getNXQChargeStateStringCaps *****************
 26958 ;; Defined at:
 26959 ;;		line 38 in file "NXQ_charge_state.c"
 26960 ;; Parameters:    Size  Location     Type
 26961 ;;		None
 26962 ;; Auto vars:     Size  Location     Type
 26963 ;;		None
 26964 ;; Return value:  Size  Location     Type
 26965 ;;                  2    0[BANK2 ] PTR unsigned char 
 26966 ;; Registers used:
 26967 ;;		wreg, status,2, status,0
 26968 ;; Tracked objects:
 26969 ;;		On entry : 0/0
 26970 ;;		On exit  : 0/0
 26971 ;;		Unchanged: 0/0
 26972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26973 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26976 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26977 ;;Total ram usage:        2 bytes
 26978 ;; Hardware stack levels used:    1
 26979 ;; Hardware stack levels required when called:   11
 26980 ;; This function calls:
 26981 ;;		Nothing
 26982 ;; This function is called by:
 26983 ;;		_OLED_updateHandler
 26984 ;; This function uses a non-reentrant model
 26985 ;;
 26986                           
 26987                           	psect	text87
 26988  01AEFC                     __ptext87:
 26989                           	opt callstack 0
 26990  01AEFC                     _getNXQChargeStateStringCaps:
 26991                           	opt callstack 18
 26992                           
 26993                           ;NXQ_charge_state.c: 40: switch (nxq_charge_state) {
 26994                           
 26995                           ; BSR set to: 2
 26996                           ;incstack = 0
 26997  01AEFC  D01E               	goto	l20724
 26998  01AEFE                     l20692:
 26999                           
 27000                           ; BSR set to: 1
 27001                           ;NXQ_charge_state.c: 43: return "Idle";
 27002  01AEFE  0EB0               	movlw	low STR_16
 27003  01AF00  0102               	movlb	2	; () banked
 27004  01AF02  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 27005  01AF04  0EFF               	movlw	high STR_16
 27006  01AF06  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 27007  01AF08  0012               	return	
 27008  01AF0A                     l20698:
 27009                           
 27010                           ; BSR set to: 1
 27011                           ;NXQ_charge_state.c: 47: return "Charging";
 27012  01AF0A  0E6A               	movlw	low (STR_155+4)
 27013  01AF0C  0102               	movlb	2	; () banked
 27014  01AF0E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 27015  01AF10  0EFD               	movlw	high (STR_155+4)
 27016  01AF12  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 27017  01AF14  0012               	return	
 27018  01AF16                     l20704:
 27019                           
 27020                           ; BSR set to: 1
 27021                           ;NXQ_charge_state.c: 51: return "Fully Charged";
 27022  01AF16  0E16               	movlw	low STR_18
 27023  01AF18  0102               	movlb	2	; () banked
 27024  01AF1A  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 27025  01AF1C  0EFD               	movlw	high STR_18
 27026  01AF1E  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 27027  01AF20  0012               	return	
 27028  01AF22                     l20710:
 27029                           
 27030                           ; BSR set to: 1
 27031                           ;NXQ_charge_state.c: 55: return "Error";
 27032  01AF22  0E95               	movlw	low STR_19
 27033  01AF24  0102               	movlb	2	; () banked
 27034  01AF26  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 27035  01AF28  0EFF               	movlw	high STR_19
 27036  01AF2A  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 27037  01AF2C  0012               	return	
 27038  01AF2E                     l20716:
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;NXQ_charge_state.c: 59: return "Undefined";
 27042  01AF2E  0EFE               	movlw	low STR_20
 27043  01AF30  0102               	movlb	2	; () banked
 27044  01AF32  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 27045  01AF34  0EFE               	movlw	high STR_20
 27046  01AF36  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 27047  01AF38  0012               	return	
 27048  01AF3A                     l20724:
 27049  01AF3A  0101               	movlb	1	; () banked
 27050  01AF3C  5195               	movf	_nxq_charge_state& (0+255),w,b
 27051                           
 27052                           ; Switch size 1, requested type "simple"
 27053                           ; Number of cases is 4, Range of values is 0 to 3
 27054                           ; switch strategies available:
 27055                           ; Name         Instructions Cycles
 27056                           ; simple_byte           13     7 (average)
 27057                           ;	Chosen strategy is simple_byte
 27058  01AF3E  0A00               	xorlw	0	; case 0
 27059  01AF40  B4D8               	btfsc	status,2,c
 27060  01AF42  D7DD               	goto	l20692
 27061  01AF44  0A01               	xorlw	1	; case 1
 27062  01AF46  B4D8               	btfsc	status,2,c
 27063  01AF48  D7E0               	goto	l20698
 27064  01AF4A  0A03               	xorlw	3	; case 2
 27065  01AF4C  B4D8               	btfsc	status,2,c
 27066  01AF4E  D7E3               	goto	l20704
 27067  01AF50  0A01               	xorlw	1	; case 3
 27068  01AF52  B4D8               	btfsc	status,2,c
 27069  01AF54  D7E6               	goto	l20710
 27070  01AF56  D7EB               	goto	l20716
 27071  01AF58                     __end_of_getNXQChargeStateStringCaps:
 27072                           	opt callstack 0
 27073                           
 27074 ;; *************** function _getMinutesFromOnTime *****************
 27075 ;; Defined at:
 27076 ;;		line 195 in file "heartbeat_timer.c"
 27077 ;; Parameters:    Size  Location     Type
 27078 ;;  input_second    4   13[BANK2 ] unsigned long 
 27079 ;; Auto vars:     Size  Location     Type
 27080 ;;  hours           1   24[BANK2 ] unsigned char 
 27081 ;;  days            1   23[BANK2 ] unsigned char 
 27082 ;;  years           1   22[BANK2 ] unsigned char 
 27083 ;;  minutes         1   21[BANK2 ] unsigned char 
 27084 ;; Return value:  Size  Location     Type
 27085 ;;                  1    wreg      unsigned char 
 27086 ;; Registers used:
 27087 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27088 ;; Tracked objects:
 27089 ;;		On entry : 0/0
 27090 ;;		On exit  : 0/0
 27091 ;;		Unchanged: 0/0
 27092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27093 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27094 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27095 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27096 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;Total ram usage:       12 bytes
 27098 ;; Hardware stack levels used:    1
 27099 ;; Hardware stack levels required when called:   12
 27100 ;; This function calls:
 27101 ;;		___lldiv
 27102 ;;		___wmul
 27103 ;; This function is called by:
 27104 ;;		_OLED_updateHandler
 27105 ;; This function uses a non-reentrant model
 27106 ;;
 27107                           
 27108                           	psect	text88
 27109  0190E2                     __ptext88:
 27110                           	opt callstack 0
 27111  0190E2                     _getMinutesFromOnTime:
 27112                           	opt callstack 17
 27113                           
 27114                           ;heartbeat_timer.c: 197: uint8_t years, days, hours, minutes;;heartbeat_timer.c: 198: ye
      +                          ars = input_seconds / (60 * 60 * 24 * 365);
 27115                           
 27116                           ; BSR set to: 2
 27117                           ;incstack = 0
 27118  0190E2  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 27119  0190E6  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 27120  0190EA  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 27121  0190EE  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 27122  0190F2  0E80               	movlw	128
 27123  0190F4  0102               	movlb	2	; () banked
 27124  0190F6  6F04               	movwf	___lldiv@divisor& (0+255),b
 27125  0190F8  0E33               	movlw	51
 27126  0190FA  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27127  0190FC  0E00               	movlw	0
 27128  0190FE  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27129  019100  0E00               	movlw	0
 27130  019102  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27131  019104  ECBB  F0D4         	call	___lldiv	;wreg free
 27132  019108  0102               	movlb	2	; () banked
 27133  01910A  5100               	movf	?___lldiv& (0+255),w,b
 27134  01910C  6F16               	movwf	getMinutesFromOnTime@years& (0+255),b
 27135                           
 27136                           ; BSR set to: 2
 27137                           ;heartbeat_timer.c: 199: input_seconds -= years * (60 * 60 * 24 * 365);
 27138  01910E  C216  F200         	movff	getMinutesFromOnTime@years,___wmul@multiplier
 27139  019112  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27140  019114  0E33               	movlw	51
 27141  019116  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27142  019118  0E80               	movlw	128
 27143  01911A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27144  01911C  ECB5  F0DD         	call	___wmul	;wreg free
 27145  019120  0102               	movlb	2	; () banked
 27146  019122  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 27147  019126  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 27148  01912A  0E00               	movlw	0
 27149  01912C  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 27150  01912E  0EFF               	movlw	255
 27151  019130  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 27152  019132  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 27153  019134  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 27154  019136  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 27155  019138  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 27156  01913A  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 27157  01913C  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 27158  01913E  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 27159  019140  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 27160  019142  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 27161                           
 27162                           ; BSR set to: 2
 27163                           ;heartbeat_timer.c: 200: days = input_seconds / (60 * 60 * 24);
 27164  019144  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 27165  019148  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 27166  01914C  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 27167  019150  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 27168  019154  0E80               	movlw	128
 27169  019156  6F04               	movwf	___lldiv@divisor& (0+255),b
 27170  019158  0E51               	movlw	81
 27171  01915A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27172  01915C  0E00               	movlw	0
 27173  01915E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27174  019160  0E00               	movlw	0
 27175  019162  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27176  019164  ECBB  F0D4         	call	___lldiv	;wreg free
 27177  019168  0102               	movlb	2	; () banked
 27178  01916A  5100               	movf	?___lldiv& (0+255),w,b
 27179  01916C  6F17               	movwf	getMinutesFromOnTime@days& (0+255),b
 27180                           
 27181                           ;heartbeat_timer.c: 201: input_seconds -= days * (60 * 60 * 24);
 27182  01916E  C217  F200         	movff	getMinutesFromOnTime@days,___wmul@multiplier
 27183  019172  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27184  019174  0E51               	movlw	81
 27185  019176  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27186  019178  0E80               	movlw	128
 27187  01917A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27188  01917C  ECB5  F0DD         	call	___wmul	;wreg free
 27189  019180  0102               	movlb	2	; () banked
 27190  019182  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 27191  019186  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 27192  01918A  0E00               	movlw	0
 27193  01918C  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 27194  01918E  0EFF               	movlw	255
 27195  019190  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 27196  019192  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 27197  019194  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 27198  019196  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 27199  019198  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 27200  01919A  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 27201  01919C  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 27202  01919E  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 27203  0191A0  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 27204  0191A2  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 27205                           
 27206                           ; BSR set to: 2
 27207                           ;heartbeat_timer.c: 202: hours = input_seconds / (60 * 60);
 27208  0191A4  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 27209  0191A8  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 27210  0191AC  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 27211  0191B0  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 27212  0191B4  0E10               	movlw	16
 27213  0191B6  6F04               	movwf	___lldiv@divisor& (0+255),b
 27214  0191B8  0E0E               	movlw	14
 27215  0191BA  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27216  0191BC  0E00               	movlw	0
 27217  0191BE  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27218  0191C0  0E00               	movlw	0
 27219  0191C2  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27220  0191C4  ECBB  F0D4         	call	___lldiv	;wreg free
 27221  0191C8  0102               	movlb	2	; () banked
 27222  0191CA  5100               	movf	?___lldiv& (0+255),w,b
 27223  0191CC  6F18               	movwf	getMinutesFromOnTime@hours& (0+255),b
 27224                           
 27225                           ; BSR set to: 2
 27226                           ;heartbeat_timer.c: 203: input_seconds -= hours * (60 * 60);
 27227  0191CE  C218  F200         	movff	getMinutesFromOnTime@hours,___wmul@multiplier
 27228  0191D2  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27229  0191D4  0E0E               	movlw	14
 27230  0191D6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27231  0191D8  0E10               	movlw	16
 27232  0191DA  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27233  0191DC  ECB5  F0DD         	call	___wmul	;wreg free
 27234  0191E0  0102               	movlb	2	; () banked
 27235  0191E2  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 27236  0191E6  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 27237  0191EA  0E00               	movlw	0
 27238  0191EC  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 27239  0191EE  0EFF               	movlw	255
 27240  0191F0  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 27241  0191F2  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 27242  0191F4  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 27243  0191F6  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 27244  0191F8  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 27245  0191FA  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 27246  0191FC  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 27247  0191FE  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 27248  019200  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 27249  019202  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 27250                           
 27251                           ;heartbeat_timer.c: 204: return minutes = input_seconds / 60;
 27252  019204  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 27253  019208  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 27254  01920C  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 27255  019210  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 27256  019214  0E3C               	movlw	60
 27257  019216  6F04               	movwf	___lldiv@divisor& (0+255),b
 27258  019218  0E00               	movlw	0
 27259  01921A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27260  01921C  0E00               	movlw	0
 27261  01921E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27262  019220  0E00               	movlw	0
 27263  019222  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27264  019224  ECBB  F0D4         	call	___lldiv	;wreg free
 27265  019228  0102               	movlb	2	; () banked
 27266  01922A  5100               	movf	?___lldiv& (0+255),w,b
 27267  01922C  6F15               	movwf	getMinutesFromOnTime@minutes& (0+255),b
 27268  01922E  5115               	movf	getMinutesFromOnTime@minutes& (0+255),w,b
 27269                           
 27270                           ; BSR set to: 2
 27271  019230  0012               	return		;funcret
 27272  019232                     __end_of_getMinutesFromOnTime:
 27273                           	opt callstack 0
 27274                           
 27275 ;; *************** function _getMinorRevisionID *****************
 27276 ;; Defined at:
 27277 ;;		line 23 in file "device_IDs.c"
 27278 ;; Parameters:    Size  Location     Type
 27279 ;;		None
 27280 ;; Auto vars:     Size  Location     Type
 27281 ;;  REVID_RAW       2   11[BANK2 ] unsigned int 
 27282 ;; Return value:  Size  Location     Type
 27283 ;;                  1    wreg      unsigned char 
 27284 ;; Registers used:
 27285 ;;		wreg, status,2, status,0, cstack
 27286 ;; Tracked objects:
 27287 ;;		On entry : 0/0
 27288 ;;		On exit  : 0/0
 27289 ;;		Unchanged: 0/0
 27290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27292 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27294 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27295 ;;Total ram usage:        2 bytes
 27296 ;; Hardware stack levels used:    1
 27297 ;; Hardware stack levels required when called:   13
 27298 ;; This function calls:
 27299 ;;		_FLASH_ReadWord
 27300 ;; This function is called by:
 27301 ;;		_OLED_updateHandler
 27302 ;;		_ringBufferLUT
 27303 ;; This function uses a non-reentrant model
 27304 ;;
 27305                           
 27306                           	psect	text89
 27307  01BC0A                     __ptext89:
 27308                           	opt callstack 0
 27309  01BC0A                     _getMinorRevisionID:
 27310                           	opt callstack 15
 27311                           
 27312                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 27313                           
 27314                           ; BSR set to: 2
 27315                           ;incstack = 0
 27316  01BC0A  0EFC               	movlw	252
 27317  01BC0C  0102               	movlb	2	; () banked
 27318  01BC0E  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 27319  01BC10  0EFF               	movlw	255
 27320  01BC12  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 27321  01BC14  0E3F               	movlw	63
 27322  01BC16  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 27323  01BC18  0E00               	movlw	0
 27324  01BC1A  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 27325  01BC1C  ECA7  F0DA         	call	_FLASH_ReadWord	;wreg free
 27326  01BC20  C204  F20B         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 27327  01BC24  C205  F20C         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 27328                           
 27329                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 27330  01BC28  0102               	movlb	2	; () banked
 27331  01BC2A  510B               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 27332  01BC2C  0B1F               	andlw	31
 27333                           
 27334                           ; BSR set to: 2
 27335  01BC2E  0012               	return		;funcret
 27336  01BC30                     __end_of_getMinorRevisionID:
 27337                           	opt callstack 0
 27338                           
 27339 ;; *************** function _getMajorRevisionID *****************
 27340 ;; Defined at:
 27341 ;;		line 12 in file "device_IDs.c"
 27342 ;; Parameters:    Size  Location     Type
 27343 ;;		None
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;  REVID_RAW       2   14[BANK2 ] unsigned int 
 27346 ;; Return value:  Size  Location     Type
 27347 ;;                  1    wreg      unsigned char 
 27348 ;; Registers used:
 27349 ;;		wreg, status,2, status,0, cstack
 27350 ;; Tracked objects:
 27351 ;;		On entry : 0/0
 27352 ;;		On exit  : 0/0
 27353 ;;		Unchanged: 0/0
 27354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27356 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27357 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27358 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27359 ;;Total ram usage:        5 bytes
 27360 ;; Hardware stack levels used:    1
 27361 ;; Hardware stack levels required when called:   13
 27362 ;; This function calls:
 27363 ;;		_FLASH_ReadWord
 27364 ;; This function is called by:
 27365 ;;		_OLED_updateHandler
 27366 ;;		_ringBufferLUT
 27367 ;; This function uses a non-reentrant model
 27368 ;;
 27369                           
 27370                           	psect	text90
 27371  01B786                     __ptext90:
 27372                           	opt callstack 0
 27373  01B786                     _getMajorRevisionID:
 27374                           	opt callstack 15
 27375                           
 27376                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 27377                           
 27378                           ; BSR set to: 2
 27379                           ;incstack = 0
 27380  01B786  0EFC               	movlw	252
 27381  01B788  0102               	movlb	2	; () banked
 27382  01B78A  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 27383  01B78C  0EFF               	movlw	255
 27384  01B78E  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 27385  01B790  0E3F               	movlw	63
 27386  01B792  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 27387  01B794  0E00               	movlw	0
 27388  01B796  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 27389  01B798  ECA7  F0DA         	call	_FLASH_ReadWord	;wreg free
 27390  01B79C  C204  F20E         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 27391  01B7A0  C205  F20F         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 27392                           
 27393                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 27394  01B7A4  C20E  F20B         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 27395  01B7A8  C20F  F20C         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 27396  01B7AC  0E06               	movlw	6
 27397  01B7AE  0102               	movlb	2	; () banked
 27398  01B7B0  6F0D               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 27399  01B7B2                     u24845:
 27400  01B7B2  90D8               	bcf	status,0,c
 27401  01B7B4  330C               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 27402  01B7B6  330B               	rrcf	??_getMajorRevisionID& (0+255),f,b
 27403  01B7B8  2F0D               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 27404  01B7BA  D7FB               	goto	u24845
 27405  01B7BC  510B               	movf	??_getMajorRevisionID& (0+255),w,b
 27406  01B7BE  0B1F               	andlw	31
 27407                           
 27408                           ; BSR set to: 2
 27409  01B7C0  0012               	return		;funcret
 27410  01B7C2                     __end_of_getMajorRevisionID:
 27411                           	opt callstack 0
 27412                           
 27413 ;; *************** function _getHoursFromOnTime *****************
 27414 ;; Defined at:
 27415 ;;		line 183 in file "heartbeat_timer.c"
 27416 ;; Parameters:    Size  Location     Type
 27417 ;;  input_second    4   13[BANK2 ] unsigned long 
 27418 ;; Auto vars:     Size  Location     Type
 27419 ;;  days            1   23[BANK2 ] unsigned char 
 27420 ;;  years           1   22[BANK2 ] unsigned char 
 27421 ;;  hours           1   21[BANK2 ] unsigned char 
 27422 ;; Return value:  Size  Location     Type
 27423 ;;                  1    wreg      unsigned char 
 27424 ;; Registers used:
 27425 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27426 ;; Tracked objects:
 27427 ;;		On entry : 0/0
 27428 ;;		On exit  : 0/0
 27429 ;;		Unchanged: 0/0
 27430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27431 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27432 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27433 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27434 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27435 ;;Total ram usage:       11 bytes
 27436 ;; Hardware stack levels used:    1
 27437 ;; Hardware stack levels required when called:   12
 27438 ;; This function calls:
 27439 ;;		___lldiv
 27440 ;;		___wmul
 27441 ;; This function is called by:
 27442 ;;		_OLED_updateHandler
 27443 ;; This function uses a non-reentrant model
 27444 ;;
 27445                           
 27446                           	psect	text91
 27447  019BF8                     __ptext91:
 27448                           	opt callstack 0
 27449  019BF8                     _getHoursFromOnTime:
 27450                           	opt callstack 17
 27451                           
 27452                           ;heartbeat_timer.c: 185: uint8_t years, days, hours;;heartbeat_timer.c: 186: years = inp
      +                          ut_seconds / (60 * 60 * 24 * 365);
 27453                           
 27454                           ; BSR set to: 2
 27455                           ;incstack = 0
 27456  019BF8  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 27457  019BFC  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 27458  019C00  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 27459  019C04  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 27460  019C08  0E80               	movlw	128
 27461  019C0A  0102               	movlb	2	; () banked
 27462  019C0C  6F04               	movwf	___lldiv@divisor& (0+255),b
 27463  019C0E  0E33               	movlw	51
 27464  019C10  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27465  019C12  0E00               	movlw	0
 27466  019C14  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27467  019C16  0E00               	movlw	0
 27468  019C18  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27469  019C1A  ECBB  F0D4         	call	___lldiv	;wreg free
 27470  019C1E  0102               	movlb	2	; () banked
 27471  019C20  5100               	movf	?___lldiv& (0+255),w,b
 27472  019C22  6F16               	movwf	getHoursFromOnTime@years& (0+255),b
 27473                           
 27474                           ; BSR set to: 2
 27475                           ;heartbeat_timer.c: 187: input_seconds -= years * (60 * 60 * 24 * 365);
 27476  019C24  C216  F200         	movff	getHoursFromOnTime@years,___wmul@multiplier
 27477  019C28  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27478  019C2A  0E33               	movlw	51
 27479  019C2C  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27480  019C2E  0E80               	movlw	128
 27481  019C30  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27482  019C32  ECB5  F0DD         	call	___wmul	;wreg free
 27483  019C36  0102               	movlb	2	; () banked
 27484  019C38  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 27485  019C3C  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 27486  019C40  0E00               	movlw	0
 27487  019C42  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 27488  019C44  0EFF               	movlw	255
 27489  019C46  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 27490  019C48  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 27491  019C4A  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 27492  019C4C  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 27493  019C4E  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 27494  019C50  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 27495  019C52  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 27496  019C54  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 27497  019C56  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 27498  019C58  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 27499                           
 27500                           ; BSR set to: 2
 27501                           ;heartbeat_timer.c: 188: days = input_seconds / (60 * 60 * 24);
 27502  019C5A  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 27503  019C5E  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 27504  019C62  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 27505  019C66  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 27506  019C6A  0E80               	movlw	128
 27507  019C6C  6F04               	movwf	___lldiv@divisor& (0+255),b
 27508  019C6E  0E51               	movlw	81
 27509  019C70  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27510  019C72  0E00               	movlw	0
 27511  019C74  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27512  019C76  0E00               	movlw	0
 27513  019C78  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27514  019C7A  ECBB  F0D4         	call	___lldiv	;wreg free
 27515  019C7E  0102               	movlb	2	; () banked
 27516  019C80  5100               	movf	?___lldiv& (0+255),w,b
 27517  019C82  6F17               	movwf	getHoursFromOnTime@days& (0+255),b
 27518                           
 27519                           ;heartbeat_timer.c: 189: input_seconds -= days * (60 * 60 * 24);
 27520  019C84  C217  F200         	movff	getHoursFromOnTime@days,___wmul@multiplier
 27521  019C88  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27522  019C8A  0E51               	movlw	81
 27523  019C8C  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27524  019C8E  0E80               	movlw	128
 27525  019C90  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27526  019C92  ECB5  F0DD         	call	___wmul	;wreg free
 27527  019C96  0102               	movlb	2	; () banked
 27528  019C98  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 27529  019C9C  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 27530  019CA0  0E00               	movlw	0
 27531  019CA2  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 27532  019CA4  0EFF               	movlw	255
 27533  019CA6  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 27534  019CA8  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 27535  019CAA  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 27536  019CAC  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 27537  019CAE  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 27538  019CB0  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 27539  019CB2  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 27540  019CB4  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 27541  019CB6  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 27542  019CB8  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 27543                           
 27544                           ; BSR set to: 2
 27545                           ;heartbeat_timer.c: 190: return hours = input_seconds / (60 * 60);
 27546  019CBA  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 27547  019CBE  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 27548  019CC2  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 27549  019CC6  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 27550  019CCA  0E10               	movlw	16
 27551  019CCC  6F04               	movwf	___lldiv@divisor& (0+255),b
 27552  019CCE  0E0E               	movlw	14
 27553  019CD0  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27554  019CD2  0E00               	movlw	0
 27555  019CD4  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27556  019CD6  0E00               	movlw	0
 27557  019CD8  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27558  019CDA  ECBB  F0D4         	call	___lldiv	;wreg free
 27559  019CDE  0102               	movlb	2	; () banked
 27560  019CE0  5100               	movf	?___lldiv& (0+255),w,b
 27561  019CE2  6F15               	movwf	getHoursFromOnTime@hours& (0+255),b
 27562  019CE4  5115               	movf	getHoursFromOnTime@hours& (0+255),w,b
 27563                           
 27564                           ; BSR set to: 2
 27565  019CE6  0012               	return		;funcret
 27566  019CE8                     __end_of_getHoursFromOnTime:
 27567                           	opt callstack 0
 27568                           
 27569 ;; *************** function _getDeviceID *****************
 27570 ;; Defined at:
 27571 ;;		line 4 in file "device_IDs.c"
 27572 ;; Parameters:    Size  Location     Type
 27573 ;;		None
 27574 ;; Auto vars:     Size  Location     Type
 27575 ;;		None
 27576 ;; Return value:  Size  Location     Type
 27577 ;;                  2   11[BANK2 ] unsigned int 
 27578 ;; Registers used:
 27579 ;;		wreg, status,2, status,0, cstack
 27580 ;; Tracked objects:
 27581 ;;		On entry : 0/0
 27582 ;;		On exit  : 0/0
 27583 ;;		Unchanged: 0/0
 27584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27585 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27588 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27589 ;;Total ram usage:        2 bytes
 27590 ;; Hardware stack levels used:    1
 27591 ;; Hardware stack levels required when called:   13
 27592 ;; This function calls:
 27593 ;;		_FLASH_ReadWord
 27594 ;; This function is called by:
 27595 ;;		_OLED_updateHandler
 27596 ;;		_ringBufferLUT
 27597 ;; This function uses a non-reentrant model
 27598 ;;
 27599                           
 27600                           	psect	text92
 27601  01BD86                     __ptext92:
 27602                           	opt callstack 0
 27603  01BD86                     _getDeviceID:
 27604                           	opt callstack 15
 27605                           
 27606                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 27607                           
 27608                           ; BSR set to: 2
 27609                           ;incstack = 0
 27610  01BD86  0EFE               	movlw	254
 27611  01BD88  0102               	movlb	2	; () banked
 27612  01BD8A  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 27613  01BD8C  0EFF               	movlw	255
 27614  01BD8E  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 27615  01BD90  0E3F               	movlw	63
 27616  01BD92  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 27617  01BD94  0E00               	movlw	0
 27618  01BD96  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 27619  01BD98  ECA7  F0DA         	call	_FLASH_ReadWord	;wreg free
 27620  01BD9C  C204  F20B         	movff	?_FLASH_ReadWord,?_getDeviceID
 27621  01BDA0  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 27622  01BDA4  0012               	return		;funcret
 27623  01BDA6                     __end_of_getDeviceID:
 27624                           	opt callstack 0
 27625                           
 27626 ;; *************** function _FLASH_ReadWord *****************
 27627 ;; Defined at:
 27628 ;;		line 71 in file "mcc_generated_files/memory.c"
 27629 ;; Parameters:    Size  Location     Type
 27630 ;;  flashAddr       4    4[BANK2 ] unsigned long 
 27631 ;; Auto vars:     Size  Location     Type
 27632 ;;		None
 27633 ;; Return value:  Size  Location     Type
 27634 ;;                  2    4[BANK2 ] unsigned int 
 27635 ;; Registers used:
 27636 ;;		wreg, status,2, status,0, cstack
 27637 ;; Tracked objects:
 27638 ;;		On entry : 0/0
 27639 ;;		On exit  : 0/0
 27640 ;;		Unchanged: 0/0
 27641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27642 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27644 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27645 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27646 ;;Total ram usage:        7 bytes
 27647 ;; Hardware stack levels used:    1
 27648 ;; Hardware stack levels required when called:   12
 27649 ;; This function calls:
 27650 ;;		_FLASH_ReadByte
 27651 ;; This function is called by:
 27652 ;;		_getDeviceID
 27653 ;;		_getMajorRevisionID
 27654 ;;		_getMinorRevisionID
 27655 ;;		_getUserID
 27656 ;; This function uses a non-reentrant model
 27657 ;;
 27658                           
 27659                           	psect	text93
 27660  01B54E                     __ptext93:
 27661                           	opt callstack 0
 27662  01B54E                     _FLASH_ReadWord:
 27663                           	opt callstack 15
 27664                           
 27665                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 27666                           
 27667                           ;incstack = 0
 27668  01B54E  C204  F200         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 27669  01B552  C205  F201         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 27670  01B556  C206  F202         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 27671  01B55A  C207  F203         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 27672  01B55E  EC48  F0DF         	call	_FLASH_ReadByte	;wreg free
 27673  01B562  0102               	movlb	2	; () banked
 27674  01B564  6F08               	movwf	??_FLASH_ReadWord& (0+255),b
 27675  01B566  0E01               	movlw	1
 27676  01B568  2504               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 27677  01B56A  6F00               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 27678  01B56C  0E00               	movlw	0
 27679  01B56E  2105               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 27680  01B570  6F01               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 27681  01B572  0E00               	movlw	0
 27682  01B574  2106               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 27683  01B576  6F02               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 27684  01B578  0E00               	movlw	0
 27685  01B57A  2107               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 27686  01B57C  6F03               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 27687  01B57E  EC48  F0DF         	call	_FLASH_ReadByte	;wreg free
 27688  01B582  0102               	movlb	2	; () banked
 27689  01B584  6F09               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 27690  01B586  5108               	movf	??_FLASH_ReadWord& (0+255),w,b
 27691  01B588  6F04               	movwf	?_FLASH_ReadWord& (0+255),b
 27692  01B58A  C209  F205         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 27693                           
 27694                           ; BSR set to: 2
 27695  01B58E  0012               	return		;funcret
 27696  01B590                     __end_of_FLASH_ReadWord:
 27697                           	opt callstack 0
 27698                           
 27699 ;; *************** function _FLASH_ReadByte *****************
 27700 ;; Defined at:
 27701 ;;		line 59 in file "mcc_generated_files/memory.c"
 27702 ;; Parameters:    Size  Location     Type
 27703 ;;  flashAddr       4    0[BANK2 ] unsigned long 
 27704 ;; Auto vars:     Size  Location     Type
 27705 ;;		None
 27706 ;; Return value:  Size  Location     Type
 27707 ;;                  1    wreg      unsigned char 
 27708 ;; Registers used:
 27709 ;;		wreg, status,2
 27710 ;; Tracked objects:
 27711 ;;		On entry : 0/0
 27712 ;;		On exit  : 0/0
 27713 ;;		Unchanged: 0/0
 27714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27715 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27718 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27719 ;;Total ram usage:        4 bytes
 27720 ;; Hardware stack levels used:    1
 27721 ;; Hardware stack levels required when called:   11
 27722 ;; This function calls:
 27723 ;;		Nothing
 27724 ;; This function is called by:
 27725 ;;		_FLASH_ReadWord
 27726 ;;		_FLASH_WriteByte
 27727 ;; This function uses a non-reentrant model
 27728 ;;
 27729                           
 27730                           	psect	text94
 27731  01BE90                     __ptext94:
 27732                           	opt callstack 0
 27733  01BE90                     _FLASH_ReadByte:
 27734                           	opt callstack 15
 27735                           
 27736                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 27737                           
 27738                           ; BSR set to: 2
 27739                           ;incstack = 0
 27740  01BE90  5081               	movf	3969,w,c	;volsfr
 27741  01BE92  0B3F               	andlw	-193
 27742  01BE94  0980               	iorlw	128
 27743  01BE96  6E81               	movwf	3969,c	;volsfr
 27744                           
 27745                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 27746  01BE98  C202  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 27747                           
 27748                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 27749  01BE9C  C201  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 27750                           
 27751                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 27752  01BEA0  C200  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 27753  01BEA4  0008               	tblrd		*	;# 
 27754                           
 27755                           ;memory.c: 68: return (TABLAT);
 27756  01BEA6  50F5               	movf	tablat,w,c	;volatile
 27757  01BEA8  0012               	return		;funcret
 27758  01BEAA                     __end_of_FLASH_ReadByte:
 27759                           	opt callstack 0
 27760                           
 27761 ;; *************** function _getDaysFromOnTime *****************
 27762 ;; Defined at:
 27763 ;;		line 173 in file "heartbeat_timer.c"
 27764 ;; Parameters:    Size  Location     Type
 27765 ;;  input_second    4   13[BANK2 ] unsigned long 
 27766 ;; Auto vars:     Size  Location     Type
 27767 ;;  years           1   22[BANK2 ] unsigned char 
 27768 ;;  days            1   21[BANK2 ] unsigned char 
 27769 ;; Return value:  Size  Location     Type
 27770 ;;                  1    wreg      unsigned char 
 27771 ;; Registers used:
 27772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27773 ;; Tracked objects:
 27774 ;;		On entry : 0/0
 27775 ;;		On exit  : 0/0
 27776 ;;		Unchanged: 0/0
 27777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27778 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27779 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27780 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27781 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27782 ;;Total ram usage:       10 bytes
 27783 ;; Hardware stack levels used:    1
 27784 ;; Hardware stack levels required when called:   12
 27785 ;; This function calls:
 27786 ;;		___lldiv
 27787 ;;		___wmul
 27788 ;; This function is called by:
 27789 ;;		_OLED_updateHandler
 27790 ;; This function uses a non-reentrant model
 27791 ;;
 27792                           
 27793                           	psect	text95
 27794  01A6BC                     __ptext95:
 27795                           	opt callstack 0
 27796  01A6BC                     _getDaysFromOnTime:
 27797                           	opt callstack 17
 27798                           
 27799                           ;heartbeat_timer.c: 175: uint8_t years, days;;heartbeat_timer.c: 176: years = input_seco
      +                          nds / (60 * 60 * 24 * 365);
 27800                           
 27801                           ;incstack = 0
 27802  01A6BC  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 27803  01A6C0  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 27804  01A6C4  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 27805  01A6C8  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 27806  01A6CC  0E80               	movlw	128
 27807  01A6CE  0102               	movlb	2	; () banked
 27808  01A6D0  6F04               	movwf	___lldiv@divisor& (0+255),b
 27809  01A6D2  0E33               	movlw	51
 27810  01A6D4  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27811  01A6D6  0E00               	movlw	0
 27812  01A6D8  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27813  01A6DA  0E00               	movlw	0
 27814  01A6DC  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27815  01A6DE  ECBB  F0D4         	call	___lldiv	;wreg free
 27816  01A6E2  0102               	movlb	2	; () banked
 27817  01A6E4  5100               	movf	?___lldiv& (0+255),w,b
 27818  01A6E6  6F16               	movwf	getDaysFromOnTime@years& (0+255),b
 27819                           
 27820                           ; BSR set to: 2
 27821                           ;heartbeat_timer.c: 177: input_seconds -= years * (60 * 60 * 24 * 365);
 27822  01A6E8  C216  F200         	movff	getDaysFromOnTime@years,___wmul@multiplier
 27823  01A6EC  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 27824  01A6EE  0E33               	movlw	51
 27825  01A6F0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27826  01A6F2  0E80               	movlw	128
 27827  01A6F4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 27828  01A6F6  ECB5  F0DD         	call	___wmul	;wreg free
 27829  01A6FA  0102               	movlb	2	; () banked
 27830  01A6FC  C200  F211         	movff	?___wmul,??_getDaysFromOnTime
 27831  01A700  C201  F212         	movff	?___wmul+1,??_getDaysFromOnTime+1
 27832  01A704  0E00               	movlw	0
 27833  01A706  BF12               	btfsc	(??_getDaysFromOnTime+1)& (0+255),7,b
 27834  01A708  0EFF               	movlw	255
 27835  01A70A  6F13               	movwf	(??_getDaysFromOnTime+2)& (0+255),b
 27836  01A70C  6F14               	movwf	(??_getDaysFromOnTime+3)& (0+255),b
 27837  01A70E  5111               	movf	??_getDaysFromOnTime& (0+255),w,b
 27838  01A710  5F0D               	subwf	getDaysFromOnTime@input_seconds& (0+255),f,b
 27839  01A712  5112               	movf	(??_getDaysFromOnTime+1)& (0+255),w,b
 27840  01A714  5B0E               	subwfb	(getDaysFromOnTime@input_seconds+1)& (0+255),f,b
 27841  01A716  5113               	movf	(??_getDaysFromOnTime+2)& (0+255),w,b
 27842  01A718  5B0F               	subwfb	(getDaysFromOnTime@input_seconds+2)& (0+255),f,b
 27843  01A71A  5114               	movf	(??_getDaysFromOnTime+3)& (0+255),w,b
 27844  01A71C  5B10               	subwfb	(getDaysFromOnTime@input_seconds+3)& (0+255),f,b
 27845                           
 27846                           ; BSR set to: 2
 27847                           ;heartbeat_timer.c: 178: return days = input_seconds / (60 * 60 * 24);
 27848  01A71E  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 27849  01A722  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 27850  01A726  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 27851  01A72A  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 27852  01A72E  0E80               	movlw	128
 27853  01A730  6F04               	movwf	___lldiv@divisor& (0+255),b
 27854  01A732  0E51               	movlw	81
 27855  01A734  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 27856  01A736  0E00               	movlw	0
 27857  01A738  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 27858  01A73A  0E00               	movlw	0
 27859  01A73C  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 27860  01A73E  ECBB  F0D4         	call	___lldiv	;wreg free
 27861  01A742  0102               	movlb	2	; () banked
 27862  01A744  5100               	movf	?___lldiv& (0+255),w,b
 27863  01A746  6F15               	movwf	getDaysFromOnTime@days& (0+255),b
 27864  01A748  5115               	movf	getDaysFromOnTime@days& (0+255),w,b
 27865                           
 27866                           ; BSR set to: 2
 27867  01A74A  0012               	return		;funcret
 27868  01A74C                     __end_of_getDaysFromOnTime:
 27869                           	opt callstack 0
 27870                           
 27871 ;; *************** function ___wmul *****************
 27872 ;; Defined at:
 27873 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 27874 ;; Parameters:    Size  Location     Type
 27875 ;;  multiplier      2    0[BANK2 ] unsigned int 
 27876 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 27877 ;; Auto vars:     Size  Location     Type
 27878 ;;  product         2    4[BANK2 ] unsigned int 
 27879 ;; Return value:  Size  Location     Type
 27880 ;;                  2    0[BANK2 ] unsigned int 
 27881 ;; Registers used:
 27882 ;;		wreg, status,2, status,0, prodl, prodh
 27883 ;; Tracked objects:
 27884 ;;		On entry : 0/0
 27885 ;;		On exit  : 0/0
 27886 ;;		Unchanged: 0/0
 27887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27888 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27889 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27891 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27892 ;;Total ram usage:        6 bytes
 27893 ;; Hardware stack levels used:    1
 27894 ;; Hardware stack levels required when called:   11
 27895 ;; This function calls:
 27896 ;;		Nothing
 27897 ;; This function is called by:
 27898 ;;		_getStringSecondsAsTime
 27899 ;;		_getDaysFromOnTime
 27900 ;;		_getHoursFromOnTime
 27901 ;;		_getMinutesFromOnTime
 27902 ;;		_getSecondsFromOnTime
 27903 ;;		__doprnt
 27904 ;; This function uses a non-reentrant model
 27905 ;;
 27906                           
 27907                           	psect	text96
 27908  01BB6A                     __ptext96:
 27909                           	opt callstack 0
 27910  01BB6A                     ___wmul:
 27911                           	opt callstack 14
 27912                           
 27913                           ; BSR set to: 2
 27914                           ;incstack = 0
 27915  01BB6A  0102               	movlb	2	; () banked
 27916  01BB6C  5100               	movf	___wmul@multiplier& (0+255),w,b
 27917  01BB6E  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27918  01BB70  CFF3 F204          	movff	prodl,___wmul@product
 27919  01BB74  CFF4 F205          	movff	prodh,___wmul@product+1
 27920  01BB78  5100               	movf	___wmul@multiplier& (0+255),w,b
 27921  01BB7A  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 27922  01BB7C  50F3               	movf	prodl,w,c
 27923  01BB7E  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27924  01BB80  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 27925  01BB82  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27926  01BB84  50F3               	movf	prodl,w,c
 27927  01BB86  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27928                           
 27929                           ; BSR set to: 2
 27930  01BB88  C204  F200         	movff	___wmul@product,?___wmul
 27931  01BB8C  C205  F201         	movff	___wmul@product+1,?___wmul+1
 27932                           
 27933                           ; BSR set to: 2
 27934  01BB90  0012               	return		;funcret
 27935  01BB92                     __end_of___wmul:
 27936                           	opt callstack 0
 27937                           
 27938 ;; *************** function ___lldiv *****************
 27939 ;; Defined at:
 27940 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 27941 ;; Parameters:    Size  Location     Type
 27942 ;;  dividend        4    0[BANK2 ] unsigned long 
 27943 ;;  divisor         4    4[BANK2 ] unsigned long 
 27944 ;; Auto vars:     Size  Location     Type
 27945 ;;  quotient        4    8[BANK2 ] unsigned long 
 27946 ;;  counter         1   12[BANK2 ] unsigned char 
 27947 ;; Return value:  Size  Location     Type
 27948 ;;                  4    0[BANK2 ] unsigned long 
 27949 ;; Registers used:
 27950 ;;		wreg, status,2, status,0
 27951 ;; Tracked objects:
 27952 ;;		On entry : 0/0
 27953 ;;		On exit  : 0/0
 27954 ;;		Unchanged: 0/0
 27955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27956 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27957 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27959 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27960 ;;Total ram usage:       13 bytes
 27961 ;; Hardware stack levels used:    1
 27962 ;; Hardware stack levels required when called:   11
 27963 ;; This function calls:
 27964 ;;		Nothing
 27965 ;; This function is called by:
 27966 ;;		_getStringSecondsAsTime
 27967 ;;		_getYearsFromOnTime
 27968 ;;		_getDaysFromOnTime
 27969 ;;		_getHoursFromOnTime
 27970 ;;		_getMinutesFromOnTime
 27971 ;;		_getSecondsFromOnTime
 27972 ;;		__doprnt
 27973 ;; This function uses a non-reentrant model
 27974 ;;
 27975                           
 27976                           	psect	text97
 27977  01A976                     __ptext97:
 27978                           	opt callstack 0
 27979  01A976                     ___lldiv:
 27980                           	opt callstack 14
 27981                           
 27982                           ; BSR set to: 2
 27983                           ;incstack = 0
 27984  01A976  0E00               	movlw	0
 27985  01A978  0102               	movlb	2	; () banked
 27986  01A97A  6F08               	movwf	___lldiv@quotient& (0+255),b
 27987  01A97C  0E00               	movlw	0
 27988  01A97E  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 27989  01A980  0E00               	movlw	0
 27990  01A982  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27991  01A984  0E00               	movlw	0
 27992  01A986  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27993                           
 27994                           ; BSR set to: 2
 27995  01A988  5104               	movf	___lldiv@divisor& (0+255),w,b
 27996  01A98A  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27997  01A98C  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27998  01A98E  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27999  01A990  B4D8               	btfsc	status,2,c
 28000  01A992  D02A               	goto	l2606
 28001                           
 28002                           ; BSR set to: 2
 28003  01A994  0E01               	movlw	1
 28004  01A996  6F0C               	movwf	___lldiv@counter& (0+255),b
 28005  01A998  D006               	goto	l17334
 28006  01A99A                     l17332:
 28007                           
 28008                           ; BSR set to: 2
 28009  01A99A  90D8               	bcf	status,0,c
 28010  01A99C  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 28011  01A99E  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28012  01A9A0  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28013  01A9A2  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28014  01A9A4  2B0C               	incf	___lldiv@counter& (0+255),f,b
 28015  01A9A6                     l17334:
 28016                           
 28017                           ; BSR set to: 2
 28018  01A9A6  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28019  01A9A8  D7F8               	goto	l17332
 28020  01A9AA                     u21080:
 28021                           
 28022                           ; BSR set to: 2
 28023  01A9AA  90D8               	bcf	status,0,c
 28024  01A9AC  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 28025  01A9AE  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28026  01A9B0  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28027  01A9B2  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28028                           
 28029                           ; BSR set to: 2
 28030  01A9B4  5104               	movf	___lldiv@divisor& (0+255),w,b
 28031  01A9B6  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 28032  01A9B8  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28033  01A9BA  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28034  01A9BC  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28035  01A9BE  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28036  01A9C0  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28037  01A9C2  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28038  01A9C4  A0D8               	btfss	status,0,c
 28039  01A9C6  D009               	goto	l17344
 28040                           
 28041                           ; BSR set to: 2
 28042  01A9C8  5104               	movf	___lldiv@divisor& (0+255),w,b
 28043  01A9CA  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 28044  01A9CC  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28045  01A9CE  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28046  01A9D0  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28047  01A9D2  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28048  01A9D4  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28049  01A9D6  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28050                           
 28051                           ; BSR set to: 2
 28052  01A9D8  8108               	bsf	___lldiv@quotient& (0+255),0,b
 28053  01A9DA                     l17344:
 28054                           
 28055                           ; BSR set to: 2
 28056  01A9DA  90D8               	bcf	status,0,c
 28057  01A9DC  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28058  01A9DE  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28059  01A9E0  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28060  01A9E2  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 28061                           
 28062                           ; BSR set to: 2
 28063  01A9E4  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 28064  01A9E6  D7E1               	goto	u21080
 28065  01A9E8                     l2606:
 28066                           
 28067                           ; BSR set to: 2
 28068  01A9E8  C208  F200         	movff	___lldiv@quotient,?___lldiv
 28069  01A9EC  C209  F201         	movff	___lldiv@quotient+1,?___lldiv+1
 28070  01A9F0  C20A  F202         	movff	___lldiv@quotient+2,?___lldiv+2
 28071  01A9F4  C20B  F203         	movff	___lldiv@quotient+3,?___lldiv+3
 28072                           
 28073                           ; BSR set to: 2
 28074  01A9F8  0012               	return		;funcret
 28075  01A9FA                     __end_of___lldiv:
 28076                           	opt callstack 0
 28077                           
 28078 ;; *************** function _getCauseOfResetStringSmall *****************
 28079 ;; Defined at:
 28080 ;;		line 118 in file "cause_of_reset.c"
 28081 ;; Parameters:    Size  Location     Type
 28082 ;;  r               1    wreg     enum E9577
 28083 ;; Auto vars:     Size  Location     Type
 28084 ;;  r               1    2[BANK2 ] enum E9577
 28085 ;; Return value:  Size  Location     Type
 28086 ;;                  2    0[BANK2 ] PTR inline unsigned char
 28087 ;; Registers used:
 28088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28089 ;; Tracked objects:
 28090 ;;		On entry : 0/0
 28091 ;;		On exit  : 0/0
 28092 ;;		Unchanged: 0/0
 28093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28094 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28095 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28097 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28098 ;;Total ram usage:        3 bytes
 28099 ;; Hardware stack levels used:    1
 28100 ;; Hardware stack levels required when called:   11
 28101 ;; This function calls:
 28102 ;;		Nothing
 28103 ;; This function is called by:
 28104 ;;		_OLED_updateHandler
 28105 ;; This function uses a non-reentrant model
 28106 ;;
 28107                           
 28108                           	psect	text98
 28109  01BA38                     __ptext98:
 28110                           	opt callstack 0
 28111  01BA38                     _getCauseOfResetStringSmall:
 28112                           	opt callstack 18
 28113                           
 28114                           ; BSR set to: 2
 28115                           ;incstack = 0
 28116                           ;getCauseOfResetStringSmall@r stored from wreg
 28117  01BA38  0102               	movlb	2	; () banked
 28118  01BA3A  6F02               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 28119                           
 28120                           ;cause_of_reset.c: 121: static char *strings[] = {;cause_of_reset.c: 122: "Undefined",;c
      +                          ause_of_reset.c: 123: "POR Reset",;cause_of_reset.c: 124: "BOR Reset",;cause_of_reset.c:
      +                           125: "MCLR Reset",;cause_of_reset.c: 126: "WDT Reset",;cause_of_reset.c: 127: "WWDT Res
      +                          et",;cause_of_reset.c: 128: "RESET Executed",;cause_of_reset.c: 129: "STOF Reset",;cause
      +                          _of_reset.c: 130: "STUF Reset",;cause_of_reset.c: 131: };;cause_of_reset.c: 134: if (r <
      +                          = 8) {
 28121  01BA3C  0E09               	movlw	9
 28122  01BA3E  0102               	movlb	2	; () banked
 28123  01BA40  6102               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 28124  01BA42  D00D               	goto	l20844
 28125                           
 28126                           ; BSR set to: 2
 28127                           ;cause_of_reset.c: 136: return strings[r];
 28128  01BA44  5102               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 28129  01BA46  0D02               	mullw	2
 28130  01BA48  0EB9               	movlw	low getCauseOfResetStringSmall@strings
 28131  01BA4A  24F3               	addwf	prodl,w,c
 28132  01BA4C  6ED9               	movwf	fsr2l,c
 28133  01BA4E  0E03               	movlw	high getCauseOfResetStringSmall@strings
 28134  01BA50  20F4               	addwfc	prodh,w,c
 28135  01BA52  6EDA               	movwf	fsr2h,c
 28136  01BA54  CFDE F200          	movff	postinc2,?_getCauseOfResetStringSmall
 28137  01BA58  CFDD F201          	movff	postdec2,?_getCauseOfResetStringSmall+1
 28138  01BA5C  0012               	return	
 28139  01BA5E                     l20844:
 28140                           
 28141                           ; BSR set to: 2
 28142                           ;cause_of_reset.c: 140: else {;cause_of_reset.c: 142: return "Undefined";
 28143  01BA5E  0EFE               	movlw	low STR_20
 28144  01BA60  6F00               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 28145  01BA62  0EFE               	movlw	high STR_20
 28146  01BA64  6F01               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 28147                           
 28148                           ; BSR set to: 2
 28149  01BA66  0012               	return		;funcret
 28150  01BA68                     __end_of_getCauseOfResetStringSmall:
 28151                           	opt callstack 0
 28152                           
 28153 ;; *************** function ___fldiv *****************
 28154 ;; Defined at:
 28155 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 28156 ;; Parameters:    Size  Location     Type
 28157 ;;  b               4    0[BANK2 ] PTR inline unsigned char
 28158 ;;  a               4    4[BANK2 ] PTR inline unsigned char
 28159 ;; Auto vars:     Size  Location     Type
 28160 ;;  grs             4   19[BANK2 ] unsigned long 
 28161 ;;  rem             4   12[BANK2 ] unsigned long 
 28162 ;;  new_exp         2   17[BANK2 ] int 
 28163 ;;  aexp            1   24[BANK2 ] unsigned char 
 28164 ;;  bexp            1   23[BANK2 ] unsigned char 
 28165 ;;  sign            1   16[BANK2 ] unsigned char 
 28166 ;; Return value:  Size  Location     Type
 28167 ;;                  4    0[BANK2 ] unsigned char 
 28168 ;; Registers used:
 28169 ;;		wreg, status,2, status,0
 28170 ;; Tracked objects:
 28171 ;;		On entry : 0/0
 28172 ;;		On exit  : 0/0
 28173 ;;		Unchanged: 0/0
 28174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28175 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28176 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28177 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28178 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28179 ;;Total ram usage:       25 bytes
 28180 ;; Hardware stack levels used:    1
 28181 ;; Hardware stack levels required when called:   11
 28182 ;; This function calls:
 28183 ;;		Nothing
 28184 ;; This function is called by:
 28185 ;;		_OLED_updateHandler
 28186 ;;		_printCurrentMeasurements
 28187 ;; This function uses a non-reentrant model
 28188 ;;
 28189                           
 28190                           	psect	text99
 28191  017C80                     __ptext99:
 28192                           	opt callstack 0
 28193  017C80                     ___fldiv:
 28194                           	opt callstack 16
 28195                           
 28196                           ; BSR set to: 2
 28197                           ;incstack = 0
 28198  017C80  0102               	movlb	2	; () banked
 28199  017C82  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 28200  017C84  0B80               	andlw	128
 28201  017C86  6F10               	movwf	___fldiv@sign& (0+255),b
 28202  017C88  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 28203  017C8A  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
 28204  017C8C  6F17               	movwf	___fldiv@bexp& (0+255),b
 28205                           
 28206                           ; BSR set to: 2
 28207  017C8E  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
 28208                           
 28209                           ; BSR set to: 2
 28210  017C90  8117               	bsf	___fldiv@bexp& (0+255),0,b
 28211                           
 28212                           ; BSR set to: 2
 28213  017C92  5117               	movf	___fldiv@bexp& (0+255),w,b
 28214  017C94  B4D8               	btfsc	status,2,c
 28215  017C96  D00D               	goto	l18958
 28216                           
 28217                           ; BSR set to: 2
 28218  017C98  2917               	incf	___fldiv@bexp& (0+255),w,b
 28219  017C9A  A4D8               	btfss	status,2,c
 28220  017C9C  D008               	goto	l18954
 28221                           
 28222                           ; BSR set to: 2
 28223  017C9E  0E00               	movlw	0
 28224  017CA0  6F00               	movwf	___fldiv@b& (0+255),b
 28225  017CA2  0E00               	movlw	0
 28226  017CA4  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28227  017CA6  0E00               	movlw	0
 28228  017CA8  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28229  017CAA  0E00               	movlw	0
 28230  017CAC  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28231  017CAE                     l18954:
 28232                           
 28233                           ; BSR set to: 2
 28234  017CAE  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 28235  017CB0  D006               	goto	L20
 28236  017CB2                     l18958:
 28237                           
 28238                           ; BSR set to: 2
 28239  017CB2  0E00               	movlw	0
 28240  017CB4  6F00               	movwf	___fldiv@b& (0+255),b
 28241  017CB6  0E00               	movlw	0
 28242  017CB8  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28243  017CBA  0E00               	movlw	0
 28244  017CBC  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28245  017CBE                     L20:
 28246  017CBE  0E00               	movlw	0
 28247  017CC0  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28248                           
 28249                           ; BSR set to: 2
 28250  017CC2  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 28251  017CC4  0B80               	andlw	128
 28252  017CC6  1B10               	xorwf	___fldiv@sign& (0+255),f,b
 28253                           
 28254                           ; BSR set to: 2
 28255  017CC8  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 28256  017CCA  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
 28257  017CCC  6F18               	movwf	___fldiv@aexp& (0+255),b
 28258                           
 28259                           ; BSR set to: 2
 28260  017CCE  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28261                           
 28262                           ; BSR set to: 2
 28263  017CD0  8118               	bsf	___fldiv@aexp& (0+255),0,b
 28264                           
 28265                           ; BSR set to: 2
 28266  017CD2  5118               	movf	___fldiv@aexp& (0+255),w,b
 28267  017CD4  B4D8               	btfsc	status,2,c
 28268  017CD6  D00D               	goto	l18978
 28269                           
 28270                           ; BSR set to: 2
 28271  017CD8  2918               	incf	___fldiv@aexp& (0+255),w,b
 28272  017CDA  A4D8               	btfss	status,2,c
 28273  017CDC  D008               	goto	l18974
 28274                           
 28275                           ; BSR set to: 2
 28276  017CDE  0E00               	movlw	0
 28277  017CE0  6F04               	movwf	___fldiv@a& (0+255),b
 28278  017CE2  0E00               	movlw	0
 28279  017CE4  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 28280  017CE6  0E00               	movlw	0
 28281  017CE8  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 28282  017CEA  0E00               	movlw	0
 28283  017CEC  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 28284  017CEE                     l18974:
 28285                           
 28286                           ; BSR set to: 2
 28287  017CEE  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
 28288  017CF0  D006               	goto	L21
 28289  017CF2                     l18978:
 28290                           
 28291                           ; BSR set to: 2
 28292  017CF2  0E00               	movlw	0
 28293  017CF4  6F04               	movwf	___fldiv@a& (0+255),b
 28294  017CF6  0E00               	movlw	0
 28295  017CF8  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 28296  017CFA  0E00               	movlw	0
 28297  017CFC  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 28298  017CFE                     L21:
 28299  017CFE  0E00               	movlw	0
 28300  017D00  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 28301                           
 28302                           ; BSR set to: 2
 28303  017D02  5104               	movf	___fldiv@a& (0+255),w,b
 28304  017D04  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28305  017D06  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28306  017D08  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28307  017D0A  A4D8               	btfss	status,2,c
 28308  017D0C  D017               	goto	l18992
 28309                           
 28310                           ; BSR set to: 2
 28311  017D0E  0E00               	movlw	0
 28312  017D10  6F00               	movwf	___fldiv@b& (0+255),b
 28313  017D12  0E00               	movlw	0
 28314  017D14  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28315  017D16  0E00               	movlw	0
 28316  017D18  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28317  017D1A  0E00               	movlw	0
 28318  017D1C  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28319                           
 28320                           ; BSR set to: 2
 28321  017D1E  0E80               	movlw	128
 28322  017D20  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28323  017D22  0E7F               	movlw	127
 28324  017D24  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28325  017D26                     l18986:
 28326                           
 28327                           ; BSR set to: 2
 28328  017D26  5110               	movf	___fldiv@sign& (0+255),w,b
 28329  017D28  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28330                           
 28331                           ; BSR set to: 2
 28332  017D2A  C200  F200         	movff	___fldiv@b,?___fldiv
 28333  017D2E  C201  F201         	movff	___fldiv@b+1,?___fldiv+1
 28334  017D32  C202  F202         	movff	___fldiv@b+2,?___fldiv+2
 28335  017D36  C203  F203         	movff	___fldiv@b+3,?___fldiv+3
 28336  017D3A  0012               	return	
 28337  017D3C                     l18992:
 28338                           
 28339                           ; BSR set to: 2
 28340  017D3C  5117               	movf	___fldiv@bexp& (0+255),w,b
 28341  017D3E  A4D8               	btfss	status,2,c
 28342  017D40  D009               	goto	l19000
 28343                           
 28344                           ; BSR set to: 2
 28345                           
 28346                           ; BSR set to: 2
 28347  017D42  0E00               	movlw	0
 28348  017D44  6F00               	movwf	?___fldiv& (0+255),b
 28349  017D46  0E00               	movlw	0
 28350  017D48  6F01               	movwf	(?___fldiv+1)& (0+255),b
 28351  017D4A  0E00               	movlw	0
 28352  017D4C  6F02               	movwf	(?___fldiv+2)& (0+255),b
 28353  017D4E  0E00               	movlw	0
 28354  017D50  6F03               	movwf	(?___fldiv+3)& (0+255),b
 28355  017D52  0012               	return	
 28356  017D54                     l19000:
 28357                           
 28358                           ; BSR set to: 2
 28359  017D54  5118               	movf	___fldiv@aexp& (0+255),w,b
 28360  017D56  C217  F208         	movff	___fldiv@bexp,??___fldiv
 28361  017D5A  6B09               	clrf	(??___fldiv+1)& (0+255),b
 28362  017D5C  5F08               	subwf	??___fldiv& (0+255),f,b
 28363  017D5E  0E00               	movlw	0
 28364  017D60  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
 28365  017D62  0E7F               	movlw	127
 28366  017D64  2508               	addwf	??___fldiv& (0+255),w,b
 28367  017D66  6F11               	movwf	___fldiv@new_exp& (0+255),b
 28368  017D68  0E00               	movlw	0
 28369  017D6A  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
 28370  017D6C  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28371                           
 28372                           ; BSR set to: 2
 28373  017D6E  C200  F20C         	movff	___fldiv@b,___fldiv@rem
 28374  017D72  C201  F20D         	movff	___fldiv@b+1,___fldiv@rem+1
 28375  017D76  C202  F20E         	movff	___fldiv@b+2,___fldiv@rem+2
 28376  017D7A  C203  F20F         	movff	___fldiv@b+3,___fldiv@rem+3
 28377                           
 28378                           ; BSR set to: 2
 28379  017D7E  0E00               	movlw	0
 28380  017D80  6F00               	movwf	___fldiv@b& (0+255),b
 28381  017D82  0E00               	movlw	0
 28382  017D84  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28383  017D86  0E00               	movlw	0
 28384  017D88  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28385  017D8A  0E00               	movlw	0
 28386  017D8C  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28387                           
 28388                           ; BSR set to: 2
 28389  017D8E  0E00               	movlw	0
 28390  017D90  6F13               	movwf	___fldiv@grs& (0+255),b
 28391  017D92  0E00               	movlw	0
 28392  017D94  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
 28393  017D96  0E00               	movlw	0
 28394  017D98  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
 28395  017D9A  0E00               	movlw	0
 28396  017D9C  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
 28397                           
 28398                           ; BSR set to: 2
 28399  017D9E  0E00               	movlw	0
 28400  017DA0  6F18               	movwf	___fldiv@aexp& (0+255),b
 28401  017DA2  D028               	goto	l3185
 28402  017DA4                     l19010:
 28403                           
 28404                           ; BSR set to: 2
 28405  017DA4  5118               	movf	___fldiv@aexp& (0+255),w,b
 28406  017DA6  B4D8               	btfsc	status,2,c
 28407  017DA8  D011               	goto	l19018
 28408                           
 28409                           ; BSR set to: 2
 28410  017DAA  90D8               	bcf	status,0,c
 28411  017DAC  370C               	rlcf	___fldiv@rem& (0+255),f,b
 28412  017DAE  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28413  017DB0  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28414  017DB2  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28415  017DB4  90D8               	bcf	status,0,c
 28416  017DB6  3700               	rlcf	___fldiv@b& (0+255),f,b
 28417  017DB8  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28418  017DBA  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28419  017DBC  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28420                           
 28421                           ; BSR set to: 2
 28422  017DBE  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28423                           
 28424                           ; BSR set to: 2
 28425  017DC0  8100               	bsf	___fldiv@b& (0+255),0,b
 28426                           
 28427                           ; BSR set to: 2
 28428  017DC2  90D8               	bcf	status,0,c
 28429  017DC4  3713               	rlcf	___fldiv@grs& (0+255),f,b
 28430  017DC6  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28431  017DC8  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28432  017DCA  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28433  017DCC                     l19018:
 28434                           
 28435                           ; BSR set to: 2
 28436  017DCC  5104               	movf	___fldiv@a& (0+255),w,b
 28437  017DCE  5D0C               	subwf	___fldiv@rem& (0+255),w,b
 28438  017DD0  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 28439  017DD2  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28440  017DD4  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 28441  017DD6  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28442  017DD8  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 28443  017DDA  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28444  017DDC  A0D8               	btfss	status,0,c
 28445  017DDE  D009               	goto	l19024
 28446                           
 28447                           ; BSR set to: 2
 28448  017DE0  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28449                           
 28450                           ; BSR set to: 2
 28451  017DE2  5104               	movf	___fldiv@a& (0+255),w,b
 28452  017DE4  5F0C               	subwf	___fldiv@rem& (0+255),f,b
 28453  017DE6  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 28454  017DE8  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28455  017DEA  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 28456  017DEC  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28457  017DEE  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 28458  017DF0  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28459  017DF2                     l19024:
 28460                           
 28461                           ; BSR set to: 2
 28462  017DF2  2B18               	incf	___fldiv@aexp& (0+255),f,b
 28463  017DF4                     l3185:
 28464                           
 28465                           ; BSR set to: 2
 28466  017DF4  0E19               	movlw	25
 28467  017DF6  6518               	cpfsgt	___fldiv@aexp& (0+255),b
 28468  017DF8  D7D5               	goto	l19010
 28469                           
 28470                           ; BSR set to: 2
 28471  017DFA  510C               	movf	___fldiv@rem& (0+255),w,b
 28472  017DFC  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28473  017DFE  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28474  017E00  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28475  017E02  B4D8               	btfsc	status,2,c
 28476  017E04  D011               	goto	l19036
 28477                           
 28478                           ; BSR set to: 2
 28479  017E06  8113               	bsf	___fldiv@grs& (0+255),0,b
 28480  017E08  D00F               	goto	l19036
 28481  017E0A                     l19030:
 28482                           
 28483                           ; BSR set to: 2
 28484  017E0A  90D8               	bcf	status,0,c
 28485  017E0C  3700               	rlcf	___fldiv@b& (0+255),f,b
 28486  017E0E  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28487  017E10  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28488  017E12  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28489                           
 28490                           ; BSR set to: 2
 28491  017E14  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28492                           
 28493                           ; BSR set to: 2
 28494  017E16  8100               	bsf	___fldiv@b& (0+255),0,b
 28495                           
 28496                           ; BSR set to: 2
 28497  017E18  90D8               	bcf	status,0,c
 28498  017E1A  3713               	rlcf	___fldiv@grs& (0+255),f,b
 28499  017E1C  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28500  017E1E  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28501  017E20  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28502  017E22  0711               	decf	___fldiv@new_exp& (0+255),f,b
 28503  017E24  A0D8               	btfss	status,0,c
 28504  017E26  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28505  017E28                     l19036:
 28506                           
 28507                           ; BSR set to: 2
 28508  017E28  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
 28509  017E2A  D7EF               	goto	l19030
 28510                           
 28511                           ; BSR set to: 2
 28512  017E2C  0E00               	movlw	0
 28513  017E2E  6F18               	movwf	___fldiv@aexp& (0+255),b
 28514                           
 28515                           ; BSR set to: 2
 28516  017E30  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28517  017E32  D017               	goto	l3196
 28518                           
 28519                           ; BSR set to: 2
 28520  017E34  0EFF               	movlw	255
 28521  017E36  1513               	andwf	___fldiv@grs& (0+255),w,b
 28522  017E38  6F08               	movwf	??___fldiv& (0+255),b
 28523  017E3A  0EFF               	movlw	255
 28524  017E3C  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28525  017E3E  6F09               	movwf	(??___fldiv+1)& (0+255),b
 28526  017E40  0EFF               	movlw	255
 28527  017E42  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28528  017E44  6F0A               	movwf	(??___fldiv+2)& (0+255),b
 28529  017E46  0E7F               	movlw	127
 28530  017E48  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28531  017E4A  6F0B               	movwf	(??___fldiv+3)& (0+255),b
 28532  017E4C  5108               	movf	??___fldiv& (0+255),w,b
 28533  017E4E  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
 28534  017E50  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
 28535  017E52  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
 28536  017E54  B4D8               	btfsc	status,2,c
 28537  017E56  D003               	goto	l3197
 28538  017E58                     u24170:
 28539                           
 28540                           ; BSR set to: 2
 28541  017E58  0E01               	movlw	1
 28542  017E5A  6F18               	movwf	___fldiv@aexp& (0+255),b
 28543  017E5C  D002               	goto	l3196
 28544  017E5E                     l3197:
 28545                           
 28546                           ; BSR set to: 2
 28547  017E5E  B100               	btfsc	___fldiv@b& (0+255),0,b
 28548  017E60  D7FB               	goto	u24170
 28549  017E62                     l3196:
 28550                           
 28551                           ; BSR set to: 2
 28552  017E62  5118               	movf	___fldiv@aexp& (0+255),w,b
 28553  017E64  B4D8               	btfsc	status,2,c
 28554  017E66  D01F               	goto	l19056
 28555                           
 28556                           ; BSR set to: 2
 28557  017E68  0E01               	movlw	1
 28558  017E6A  2700               	addwf	___fldiv@b& (0+255),f,b
 28559  017E6C  0E00               	movlw	0
 28560  017E6E  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28561  017E70  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28562  017E72  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28563                           
 28564                           ; BSR set to: 2
 28565  017E74  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
 28566  017E76  D017               	goto	l19056
 28567                           
 28568                           ; BSR set to: 2
 28569  017E78  C200  F208         	movff	___fldiv@b,??___fldiv
 28570  017E7C  C201  F209         	movff	___fldiv@b+1,??___fldiv+1
 28571  017E80  C202  F20A         	movff	___fldiv@b+2,??___fldiv+2
 28572  017E84  C203  F20B         	movff	___fldiv@b+3,??___fldiv+3
 28573  017E88  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
 28574  017E8A  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
 28575  017E8C  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
 28576  017E8E  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
 28577  017E90  3308               	rrcf	??___fldiv& (0+255),f,b
 28578  017E92  C208  F200         	movff	??___fldiv,___fldiv@b
 28579  017E96  C209  F201         	movff	??___fldiv+1,___fldiv@b+1
 28580  017E9A  C20A  F202         	movff	??___fldiv+2,___fldiv@b+2
 28581  017E9E  C20B  F203         	movff	??___fldiv+3,___fldiv@b+3
 28582                           
 28583                           ; BSR set to: 2
 28584  017EA2  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
 28585  017EA4  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28586  017EA6                     l19056:
 28587                           
 28588                           ; BSR set to: 2
 28589  017EA6  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28590  017EA8  D010               	goto	l19060
 28591  017EAA  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28592  017EAC  E103               	bnz	u24210
 28593  017EAE  2911               	incf	___fldiv@new_exp& (0+255),w,b
 28594  017EB0  A0D8               	btfss	status,0,c
 28595  017EB2  D00B               	goto	l19060
 28596  017EB4                     u24210:
 28597                           
 28598                           ; BSR set to: 2
 28599  017EB4  0E00               	movlw	0
 28600  017EB6  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28601  017EB8  6911               	setf	___fldiv@new_exp& (0+255),b
 28602  017EBA  0E00               	movlw	0
 28603  017EBC  6F00               	movwf	___fldiv@b& (0+255),b
 28604  017EBE  0E00               	movlw	0
 28605  017EC0  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28606  017EC2  0E00               	movlw	0
 28607  017EC4  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28608  017EC6  0E00               	movlw	0
 28609  017EC8  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28610  017ECA                     l19060:
 28611                           
 28612                           ; BSR set to: 2
 28613  017ECA  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28614  017ECC  D005               	goto	u24220
 28615  017ECE  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28616  017ED0  E111               	bnz	l19064
 28617  017ED2  0511               	decf	___fldiv@new_exp& (0+255),w,b
 28618  017ED4  B0D8               	btfsc	status,0,c
 28619  017ED6  D00E               	goto	l19064
 28620  017ED8                     u24220:
 28621                           
 28622                           ; BSR set to: 2
 28623  017ED8  0E00               	movlw	0
 28624  017EDA  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28625  017EDC  0E00               	movlw	0
 28626  017EDE  6F11               	movwf	___fldiv@new_exp& (0+255),b
 28627  017EE0  0E00               	movlw	0
 28628  017EE2  6F00               	movwf	___fldiv@b& (0+255),b
 28629  017EE4  0E00               	movlw	0
 28630  017EE6  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 28631  017EE8  0E00               	movlw	0
 28632  017EEA  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 28633  017EEC  0E00               	movlw	0
 28634  017EEE  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28635  017EF0  0E00               	movlw	0
 28636  017EF2  6F10               	movwf	___fldiv@sign& (0+255),b
 28637  017EF4                     l19064:
 28638                           
 28639                           ; BSR set to: 2
 28640  017EF4  C211  F217         	movff	___fldiv@new_exp,___fldiv@bexp
 28641                           
 28642                           ; BSR set to: 2
 28643  017EF8  A117               	btfss	___fldiv@bexp& (0+255),0,b
 28644  017EFA  D002               	goto	l19070
 28645                           
 28646                           ; BSR set to: 2
 28647  017EFC  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 28648  017EFE  D001               	goto	l19072
 28649  017F00                     l19070:
 28650                           
 28651                           ; BSR set to: 2
 28652  017F00  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
 28653  017F02                     l19072:
 28654                           
 28655                           ; BSR set to: 2
 28656  017F02  90D8               	bcf	status,0,c
 28657  017F04  3117               	rrcf	___fldiv@bexp& (0+255),w,b
 28658  017F06  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 28659  017F08  D70E               	goto	l18986
 28660  017F0A                     __end_of___fldiv:
 28661                           	opt callstack 0
 28662                           
 28663 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 28664 ;; Defined at:
 28665 ;;		line 293 in file "oled.c"
 28666 ;; Parameters:    Size  Location     Type
 28667 ;;		None
 28668 ;; Auto vars:     Size  Location     Type
 28669 ;;  char_index      1   38[BANK2 ] unsigned char 
 28670 ;;  char_index      1   37[BANK2 ] unsigned char 
 28671 ;;  char_index      1   36[BANK2 ] unsigned char 
 28672 ;;  char_index      1   35[BANK2 ] unsigned char 
 28673 ;; Return value:  Size  Location     Type
 28674 ;;                  1    wreg      void 
 28675 ;; Registers used:
 28676 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28677 ;; Tracked objects:
 28678 ;;		On entry : 0/0
 28679 ;;		On exit  : 0/0
 28680 ;;		Unchanged: 0/0
 28681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28683 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28685 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28686 ;;Total ram usage:        4 bytes
 28687 ;; Hardware stack levels used:    1
 28688 ;; Hardware stack levels required when called:   16
 28689 ;; This function calls:
 28690 ;;		_OLED_WriteString
 28691 ;;		_OLED_YX
 28692 ;;		_strlen
 28693 ;; This function is called by:
 28694 ;;		_OLED_updateHandler
 28695 ;; This function uses a non-reentrant model
 28696 ;;
 28697                           
 28698                           	psect	text100
 28699  0195FA                     __ptext100:
 28700                           	opt callstack 0
 28701  0195FA                     _OLED_UpdateFromRAMBuffer:
 28702                           	opt callstack 13
 28703                           
 28704                           ;oled.c: 296: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line0); char_index < size
      +                          of(OLED_RAM_Buffer.line0) - 1; char_index++) {
 28705                           
 28706                           ; BSR set to: 2
 28707                           ;incstack = 0
 28708  0195FA  0EBA               	movlw	low _OLED_RAM_Buffer
 28709  0195FC  0102               	movlb	2	; () banked
 28710  0195FE  6F00               	movwf	strlen@s& (0+255),b
 28711  019600  0E02               	movlw	high _OLED_RAM_Buffer
 28712  019602  6F01               	movwf	(strlen@s+1)& (0+255),b
 28713  019604  EC34  F0DD         	call	_strlen	;wreg free
 28714  019608  0102               	movlb	2	; () banked
 28715  01960A  5100               	movf	?_strlen& (0+255),w,b
 28716  01960C  6F23               	movwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 28717  01960E                     l20912:
 28718                           
 28719                           ; BSR set to: 2
 28720  01960E  0E0F               	movlw	15
 28721  019610  6523               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 28722  019612  D001               	goto	l20916
 28723  019614  D00A               	goto	l20922
 28724  019616                     l20916:
 28725                           
 28726                           ; BSR set to: 2
 28727                           ;oled.c: 297: OLED_RAM_Buffer.line0[char_index] = ' ';
 28728  019616  0EBA               	movlw	low _OLED_RAM_Buffer
 28729  019618  2523               	addwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),w,b
 28730  01961A  6ED9               	movwf	fsr2l,c
 28731  01961C  6ADA               	clrf	fsr2h,c
 28732  01961E  0E02               	movlw	high _OLED_RAM_Buffer
 28733  019620  22DA               	addwfc	fsr2h,f,c
 28734  019622  0E20               	movlw	32
 28735  019624  6EDF               	movwf	indf2,c
 28736                           
 28737                           ; BSR set to: 2
 28738  019626  2B23               	incf	OLED_UpdateFromRAMBuffer@char_index& (0+255),f,b
 28739  019628  D7F2               	goto	l20912
 28740  01962A                     l20922:
 28741                           
 28742                           ; BSR set to: 2
 28743                           ;oled.c: 298: };oled.c: 299: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line1); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line1) - 1; char_index++) {
 28744  01962A  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 28745  01962C  6F00               	movwf	strlen@s& (0+255),b
 28746  01962E  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 28747  019630  6F01               	movwf	(strlen@s+1)& (0+255),b
 28748  019632  EC34  F0DD         	call	_strlen	;wreg free
 28749  019636  0102               	movlb	2	; () banked
 28750  019638  5100               	movf	?_strlen& (0+255),w,b
 28751  01963A  6F24               	movwf	OLED_UpdateFromRAMBuffer@char_index_4057& (0+255),b
 28752  01963C                     l20924:
 28753                           
 28754                           ; BSR set to: 2
 28755  01963C  0E0F               	movlw	15
 28756  01963E  6524               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4057& (0+255),b
 28757  019640  D001               	goto	l20928
 28758  019642  D00A               	goto	l20934
 28759  019644                     l20928:
 28760                           
 28761                           ; BSR set to: 2
 28762                           ;oled.c: 300: OLED_RAM_Buffer.line1[char_index] = ' ';
 28763  019644  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 28764  019646  2524               	addwf	OLED_UpdateFromRAMBuffer@char_index_4057& (0+255),w,b
 28765  019648  6ED9               	movwf	fsr2l,c
 28766  01964A  6ADA               	clrf	fsr2h,c
 28767  01964C  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 28768  01964E  22DA               	addwfc	fsr2h,f,c
 28769  019650  0E20               	movlw	32
 28770  019652  6EDF               	movwf	indf2,c
 28771                           
 28772                           ; BSR set to: 2
 28773  019654  2B24               	incf	OLED_UpdateFromRAMBuffer@char_index_4057& (0+255),f,b
 28774  019656  D7F2               	goto	l20924
 28775  019658                     l20934:
 28776                           
 28777                           ; BSR set to: 2
 28778                           ;oled.c: 301: };oled.c: 302: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line2); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line2) - 1; char_index++) {
 28779  019658  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 28780  01965A  6F00               	movwf	strlen@s& (0+255),b
 28781  01965C  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 28782  01965E  6F01               	movwf	(strlen@s+1)& (0+255),b
 28783  019660  EC34  F0DD         	call	_strlen	;wreg free
 28784  019664  0102               	movlb	2	; () banked
 28785  019666  5100               	movf	?_strlen& (0+255),w,b
 28786  019668  6F25               	movwf	OLED_UpdateFromRAMBuffer@char_index_4058& (0+255),b
 28787  01966A                     l20936:
 28788                           
 28789                           ; BSR set to: 2
 28790  01966A  0E0F               	movlw	15
 28791  01966C  6525               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4058& (0+255),b
 28792  01966E  D001               	goto	l20940
 28793  019670  D00A               	goto	l20946
 28794  019672                     l20940:
 28795                           
 28796                           ; BSR set to: 2
 28797                           ;oled.c: 303: OLED_RAM_Buffer.line2[char_index] = ' ';
 28798  019672  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 28799  019674  2525               	addwf	OLED_UpdateFromRAMBuffer@char_index_4058& (0+255),w,b
 28800  019676  6ED9               	movwf	fsr2l,c
 28801  019678  6ADA               	clrf	fsr2h,c
 28802  01967A  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 28803  01967C  22DA               	addwfc	fsr2h,f,c
 28804  01967E  0E20               	movlw	32
 28805  019680  6EDF               	movwf	indf2,c
 28806                           
 28807                           ; BSR set to: 2
 28808  019682  2B25               	incf	OLED_UpdateFromRAMBuffer@char_index_4058& (0+255),f,b
 28809  019684  D7F2               	goto	l20936
 28810  019686                     l20946:
 28811                           
 28812                           ; BSR set to: 2
 28813                           ;oled.c: 304: };oled.c: 305: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line3); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line3) - 1; char_index++) {
 28814  019686  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 28815  019688  6F00               	movwf	strlen@s& (0+255),b
 28816  01968A  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 28817  01968C  6F01               	movwf	(strlen@s+1)& (0+255),b
 28818  01968E  EC34  F0DD         	call	_strlen	;wreg free
 28819  019692  0102               	movlb	2	; () banked
 28820  019694  5100               	movf	?_strlen& (0+255),w,b
 28821  019696  6F26               	movwf	OLED_UpdateFromRAMBuffer@char_index_4059& (0+255),b
 28822  019698                     l20948:
 28823                           
 28824                           ; BSR set to: 2
 28825  019698  0E0F               	movlw	15
 28826  01969A  6526               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4059& (0+255),b
 28827  01969C  D001               	goto	l20952
 28828  01969E  D00A               	goto	l20958
 28829  0196A0                     l20952:
 28830                           
 28831                           ; BSR set to: 2
 28832                           ;oled.c: 306: OLED_RAM_Buffer.line3[char_index] = ' ';
 28833  0196A0  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 28834  0196A2  2526               	addwf	OLED_UpdateFromRAMBuffer@char_index_4059& (0+255),w,b
 28835  0196A4  6ED9               	movwf	fsr2l,c
 28836  0196A6  6ADA               	clrf	fsr2h,c
 28837  0196A8  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 28838  0196AA  22DA               	addwfc	fsr2h,f,c
 28839  0196AC  0E20               	movlw	32
 28840  0196AE  6EDF               	movwf	indf2,c
 28841                           
 28842                           ; BSR set to: 2
 28843  0196B0  2B26               	incf	OLED_UpdateFromRAMBuffer@char_index_4059& (0+255),f,b
 28844  0196B2  D7F2               	goto	l20948
 28845  0196B4                     l20958:
 28846                           
 28847                           ; BSR set to: 2
 28848                           ;oled.c: 307: };oled.c: 309: OLED_YX(0,0);
 28849  0196B4  0E00               	movlw	0
 28850  0196B6  6F14               	movwf	OLED_YX@Column& (0+255),b
 28851  0196B8  0E00               	movlw	0
 28852  0196BA  EC63  F0DA         	call	_OLED_YX
 28853                           
 28854                           ;oled.c: 310: OLED_WriteString(OLED_RAM_Buffer.line0);
 28855  0196BE  0EBA               	movlw	low _OLED_RAM_Buffer
 28856  0196C0  0102               	movlb	2	; () banked
 28857  0196C2  6F21               	movwf	OLED_WriteString@s& (0+255),b
 28858  0196C4  0E02               	movlw	high _OLED_RAM_Buffer
 28859  0196C6  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 28860  0196C8  ECD9  F0D7         	call	_OLED_WriteString	;wreg free
 28861                           
 28862                           ;oled.c: 311: OLED_YX(1,0);
 28863  0196CC  0E00               	movlw	0
 28864  0196CE  0102               	movlb	2	; () banked
 28865  0196D0  6F14               	movwf	OLED_YX@Column& (0+255),b
 28866  0196D2  0E01               	movlw	1
 28867  0196D4  EC63  F0DA         	call	_OLED_YX
 28868                           
 28869                           ;oled.c: 312: OLED_WriteString(OLED_RAM_Buffer.line1);
 28870  0196D8  0ECB               	movlw	low (_OLED_RAM_Buffer+17)
 28871  0196DA  0102               	movlb	2	; () banked
 28872  0196DC  6F21               	movwf	OLED_WriteString@s& (0+255),b
 28873  0196DE  0E02               	movlw	high (_OLED_RAM_Buffer+17)
 28874  0196E0  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 28875  0196E2  ECD9  F0D7         	call	_OLED_WriteString	;wreg free
 28876                           
 28877                           ;oled.c: 313: OLED_YX(2,0);
 28878  0196E6  0E00               	movlw	0
 28879  0196E8  0102               	movlb	2	; () banked
 28880  0196EA  6F14               	movwf	OLED_YX@Column& (0+255),b
 28881  0196EC  0E02               	movlw	2
 28882  0196EE  EC63  F0DA         	call	_OLED_YX
 28883                           
 28884                           ;oled.c: 314: OLED_WriteString(OLED_RAM_Buffer.line2);
 28885  0196F2  0EDC               	movlw	low (_OLED_RAM_Buffer+34)
 28886  0196F4  0102               	movlb	2	; () banked
 28887  0196F6  6F21               	movwf	OLED_WriteString@s& (0+255),b
 28888  0196F8  0E02               	movlw	high (_OLED_RAM_Buffer+34)
 28889  0196FA  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 28890  0196FC  ECD9  F0D7         	call	_OLED_WriteString	;wreg free
 28891                           
 28892                           ;oled.c: 315: OLED_YX(3,0);
 28893  019700  0E00               	movlw	0
 28894  019702  0102               	movlb	2	; () banked
 28895  019704  6F14               	movwf	OLED_YX@Column& (0+255),b
 28896  019706  0E03               	movlw	3
 28897  019708  EC63  F0DA         	call	_OLED_YX
 28898                           
 28899                           ;oled.c: 316: OLED_WriteString(OLED_RAM_Buffer.line3);
 28900  01970C  0EED               	movlw	low (_OLED_RAM_Buffer+51)
 28901  01970E  0102               	movlb	2	; () banked
 28902  019710  6F21               	movwf	OLED_WriteString@s& (0+255),b
 28903  019712  0E02               	movlw	high (_OLED_RAM_Buffer+51)
 28904  019714  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 28905  019716  ECD9  F0D7         	call	_OLED_WriteString	;wreg free
 28906  01971A  0012               	return		;funcret
 28907  01971C                     __end_of_OLED_UpdateFromRAMBuffer:
 28908                           	opt callstack 0
 28909                           
 28910 ;; *************** function _strlen *****************
 28911 ;; Defined at:
 28912 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
 28913 ;; Parameters:    Size  Location     Type
 28914 ;;  s               2    0[BANK2 ] PTR const unsigned char 
 28915 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 28916 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 28917 ;; Auto vars:     Size  Location     Type
 28918 ;;  cp              2    2[BANK2 ] PTR const unsigned char 
 28919 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 28920 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 28921 ;; Return value:  Size  Location     Type
 28922 ;;                  2    0[BANK2 ] unsigned int 
 28923 ;; Registers used:
 28924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28925 ;; Tracked objects:
 28926 ;;		On entry : 0/0
 28927 ;;		On exit  : 0/0
 28928 ;;		Unchanged: 0/0
 28929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28930 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28931 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28933 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28934 ;;Total ram usage:        4 bytes
 28935 ;; Hardware stack levels used:    1
 28936 ;; Hardware stack levels required when called:   11
 28937 ;; This function calls:
 28938 ;;		Nothing
 28939 ;; This function is called by:
 28940 ;;		_getStringSecondsAsTime
 28941 ;;		_OLED_UpdateFromRAMBuffer
 28942 ;;		_ringBufferLUT
 28943 ;;		_terminal_ringBufferPull
 28944 ;; This function uses a non-reentrant model
 28945 ;;
 28946                           
 28947                           	psect	text101
 28948  01BA68                     __ptext101:
 28949                           	opt callstack 0
 28950  01BA68                     _strlen:
 28951                           	opt callstack 18
 28952                           
 28953                           ;incstack = 0
 28954  01BA68  C200  F202         	movff	strlen@s,strlen@cp
 28955  01BA6C  C201  F203         	movff	strlen@s+1,strlen@cp+1
 28956  01BA70  D003               	goto	l18158
 28957  01BA72                     l18156:
 28958  01BA72  0102               	movlb	2	; () banked
 28959  01BA74  4B02               	infsnz	strlen@cp& (0+255),f,b
 28960  01BA76  2B03               	incf	(strlen@cp+1)& (0+255),f,b
 28961  01BA78                     l18158:
 28962  01BA78  C202  FFD9         	movff	strlen@cp,fsr2l
 28963  01BA7C  C203  FFDA         	movff	strlen@cp+1,fsr2h
 28964  01BA80  50DF               	movf	indf2,w,c
 28965  01BA82  A4D8               	btfss	status,2,c
 28966  01BA84  D7F6               	goto	l18156
 28967  01BA86  0102               	movlb	2	; () banked
 28968  01BA88  5100               	movf	strlen@s& (0+255),w,b
 28969  01BA8A  5D02               	subwf	strlen@cp& (0+255),w,b
 28970  01BA8C  6F00               	movwf	?_strlen& (0+255),b
 28971  01BA8E  5101               	movf	(strlen@s+1)& (0+255),w,b
 28972  01BA90  5903               	subwfb	(strlen@cp+1)& (0+255),w,b
 28973  01BA92  6F01               	movwf	(?_strlen+1)& (0+255),b
 28974                           
 28975                           ; BSR set to: 2
 28976  01BA94  0012               	return		;funcret
 28977  01BA96                     __end_of_strlen:
 28978                           	opt callstack 0
 28979                           
 28980 ;; *************** function _OLED_YX *****************
 28981 ;; Defined at:
 28982 ;;		line 203 in file "oled.c"
 28983 ;; Parameters:    Size  Location     Type
 28984 ;;  Row             1    wreg     unsigned char 
 28985 ;;  Column          1   20[BANK2 ] unsigned char 
 28986 ;; Auto vars:     Size  Location     Type
 28987 ;;  Row             1   24[BANK2 ] unsigned char 
 28988 ;; Return value:  Size  Location     Type
 28989 ;;                  1    wreg      void 
 28990 ;; Registers used:
 28991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28992 ;; Tracked objects:
 28993 ;;		On entry : 0/0
 28994 ;;		On exit  : 0/0
 28995 ;;		Unchanged: 0/0
 28996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28997 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28998 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28999 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29000 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29001 ;;Total ram usage:        5 bytes
 29002 ;; Hardware stack levels used:    1
 29003 ;; Hardware stack levels required when called:   15
 29004 ;; This function calls:
 29005 ;;		_OLED_Command
 29006 ;; This function is called by:
 29007 ;;		_OLED_UpdateFromRAMBuffer
 29008 ;; This function uses a non-reentrant model
 29009 ;;
 29010                           
 29011                           	psect	text102
 29012  01B4C6                     __ptext102:
 29013                           	opt callstack 0
 29014  01B4C6                     _OLED_YX:
 29015                           	opt callstack 13
 29016                           
 29017                           ; BSR set to: 2
 29018                           ;incstack = 0
 29019                           ;OLED_YX@Row stored from wreg
 29020  01B4C6  0102               	movlb	2	; () banked
 29021  01B4C8  6F18               	movwf	OLED_YX@Row& (0+255),b
 29022                           
 29023                           ;oled.c: 205: OLED_Command(0xB0 + Row);
 29024  01B4CA  0102               	movlb	2	; () banked
 29025  01B4CC  5118               	movf	OLED_YX@Row& (0+255),w,b
 29026  01B4CE  0FB0               	addlw	176
 29027  01B4D0  EC8B  F0D6         	call	_OLED_Command
 29028                           
 29029                           ;oled.c: 206: OLED_Command(0x00 + (8 * Column & 0x0F));
 29030  01B4D4  0102               	movlb	2	; () banked
 29031  01B4D6  5114               	movf	OLED_YX@Column& (0+255),w,b
 29032  01B4D8  0D08               	mullw	8
 29033  01B4DA  50F3               	movf	prodl,w,c
 29034  01B4DC  0B0F               	andlw	15
 29035  01B4DE  EC8B  F0D6         	call	_OLED_Command
 29036                           
 29037                           ;oled.c: 207: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 29038  01B4E2  0102               	movlb	2	; () banked
 29039  01B4E4  5114               	movf	OLED_YX@Column& (0+255),w,b
 29040  01B4E6  0D08               	mullw	8
 29041  01B4E8  CFF3 F215          	movff	prodl,??_OLED_YX
 29042  01B4EC  CFF4 F216          	movff	prodh,??_OLED_YX+1
 29043  01B4F0  0E04               	movlw	4
 29044  01B4F2  6F17               	movwf	(??_OLED_YX+2)& (0+255),b
 29045  01B4F4                     u24855:
 29046  01B4F4  3516               	rlcf	(??_OLED_YX+1)& (0+255),w,b
 29047  01B4F6  3316               	rrcf	(??_OLED_YX+1)& (0+255),f,b
 29048  01B4F8  3315               	rrcf	??_OLED_YX& (0+255),f,b
 29049  01B4FA  2F17               	decfsz	(??_OLED_YX+2)& (0+255),f,b
 29050  01B4FC  D7FB               	goto	u24855
 29051  01B4FE  5115               	movf	??_OLED_YX& (0+255),w,b
 29052  01B500  0B0F               	andlw	15
 29053  01B502  0F10               	addlw	16
 29054  01B504  EC8B  F0D6         	call	_OLED_Command
 29055  01B508  0012               	return		;funcret
 29056  01B50A                     __end_of_OLED_YX:
 29057                           	opt callstack 0
 29058                           
 29059 ;; *************** function _OLED_WriteString *****************
 29060 ;; Defined at:
 29061 ;;		line 261 in file "oled.c"
 29062 ;; Parameters:    Size  Location     Type
 29063 ;;  s               2   33[BANK2 ] PTR unsigned char 
 29064 ;;		 -> ftoa@buf(17), OLED_RAM_Buffer(68), STR_59(1), STR_58(1), 
 29065 ;;		 -> OLED_WriteInteger@s(20), 
 29066 ;; Auto vars:     Size  Location     Type
 29067 ;;		None
 29068 ;; Return value:  Size  Location     Type
 29069 ;;                  1    wreg      void 
 29070 ;; Registers used:
 29071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29072 ;; Tracked objects:
 29073 ;;		On entry : 0/0
 29074 ;;		On exit  : 0/0
 29075 ;;		Unchanged: 0/0
 29076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29077 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29081 ;;Total ram usage:        2 bytes
 29082 ;; Hardware stack levels used:    1
 29083 ;; Hardware stack levels required when called:   15
 29084 ;; This function calls:
 29085 ;;		_OLED_PutChar
 29086 ;; This function is called by:
 29087 ;;		_OLED_UpdateFromRAMBuffer
 29088 ;;		_OLED_WriteInteger
 29089 ;;		_OLED_WriteFloat
 29090 ;; This function uses a non-reentrant model
 29091 ;;
 29092                           
 29093                           	psect	text103
 29094  01AFB2                     __ptext103:
 29095                           	opt callstack 0
 29096  01AFB2                     _OLED_WriteString:
 29097                           	opt callstack 13
 29098                           
 29099                           ;oled.c: 263: while(*s) {
 29100                           
 29101                           ;incstack = 0
 29102  01AFB2  D016               	goto	l19628
 29103  01AFB4                     l19624:
 29104                           
 29105                           ;oled.c: 265: OLED_PutChar(*s++);
 29106  01AFB4  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 29107  01AFB8  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 29108  01AFBC  0E00               	movlw	low (__mediumconst shr (0+16))
 29109  01AFBE  6EF8               	movwf	tblptru,c
 29110  01AFC0  0E0E               	movlw	(high __ramtop+-1)
 29111  01AFC2  64F7               	cpfsgt	tblptrh,c
 29112  01AFC4  D003               	bra	u24867
 29113  01AFC6  0008               	tblrd		*
 29114  01AFC8  50F5               	movf	tablat,w,c
 29115  01AFCA  D005               	bra	u24860
 29116  01AFCC                     u24867:
 29117  01AFCC  CFF6 FFE9          	movff	tblptrl,fsr0l
 29118  01AFD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 29119  01AFD4  50EF               	movf	indf0,w,c
 29120  01AFD6                     u24860:
 29121  01AFD6  EC10  F0D0         	call	_OLED_PutChar
 29122  01AFDA  0102               	movlb	2	; () banked
 29123  01AFDC  4B21               	infsnz	OLED_WriteString@s& (0+255),f,b
 29124  01AFDE  2B22               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 29125  01AFE0                     l19628:
 29126  01AFE0  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 29127  01AFE4  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 29128  01AFE8  0E00               	movlw	low (__mediumconst shr (0+16))
 29129  01AFEA  6EF8               	movwf	tblptru,c
 29130  01AFEC  0E0E               	movlw	(high __ramtop+-1)
 29131  01AFEE  64F7               	cpfsgt	tblptrh,c
 29132  01AFF0  D003               	bra	u24877
 29133  01AFF2  0008               	tblrd		*
 29134  01AFF4  50F5               	movf	tablat,w,c
 29135  01AFF6  D005               	bra	u24870
 29136  01AFF8                     u24877:
 29137  01AFF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29138  01AFFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29139  01B000  50EF               	movf	indf0,w,c
 29140  01B002                     u24870:
 29141  01B002  0900               	iorlw	0
 29142  01B004  B4D8               	btfsc	status,2,c
 29143  01B006  0012               	return	
 29144  01B008  D7D5               	goto	l19624
 29145  01B00A                     __end_of_OLED_WriteString:
 29146                           	opt callstack 0
 29147                           
 29148 ;; *************** function _OLED_Init *****************
 29149 ;; Defined at:
 29150 ;;		line 173 in file "oled.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;		None
 29153 ;; Auto vars:     Size  Location     Type
 29154 ;;		None
 29155 ;; Return value:  Size  Location     Type
 29156 ;;                  1    wreg      void 
 29157 ;; Registers used:
 29158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29159 ;; Tracked objects:
 29160 ;;		On entry : 0/0
 29161 ;;		On exit  : 0/0
 29162 ;;		Unchanged: 0/0
 29163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29168 ;;Total ram usage:        0 bytes
 29169 ;; Hardware stack levels used:    1
 29170 ;; Hardware stack levels required when called:   15
 29171 ;; This function calls:
 29172 ;;		_OLED_Command
 29173 ;; This function is called by:
 29174 ;;		_main
 29175 ;; This function uses a non-reentrant model
 29176 ;;
 29177                           
 29178                           	psect	text104
 29179  01A624                     __ptext104:
 29180                           	opt callstack 0
 29181  01A624                     _OLED_Init:
 29182                           	opt callstack 15
 29183                           
 29184                           ;oled.c: 175: OLED_Command(0xAE);
 29185                           
 29186                           ;incstack = 0
 29187  01A624  0EAE               	movlw	174
 29188  01A626  EC8B  F0D6         	call	_OLED_Command
 29189                           
 29190                           ;oled.c: 176: OLED_Command(0xD5);
 29191  01A62A  0ED5               	movlw	213
 29192  01A62C  EC8B  F0D6         	call	_OLED_Command
 29193                           
 29194                           ;oled.c: 177: OLED_Command(0x80);
 29195  01A630  0E80               	movlw	128
 29196  01A632  EC8B  F0D6         	call	_OLED_Command
 29197                           
 29198                           ;oled.c: 178: OLED_Command(0xA8);
 29199  01A636  0EA8               	movlw	168
 29200  01A638  EC8B  F0D6         	call	_OLED_Command
 29201                           
 29202                           ;oled.c: 179: OLED_Command(0x1F);
 29203  01A63C  0E1F               	movlw	31
 29204  01A63E  EC8B  F0D6         	call	_OLED_Command
 29205                           
 29206                           ;oled.c: 180: OLED_Command(0xD3);
 29207  01A642  0ED3               	movlw	211
 29208  01A644  EC8B  F0D6         	call	_OLED_Command
 29209                           
 29210                           ;oled.c: 181: OLED_Command(0x0);
 29211  01A648  0E00               	movlw	0
 29212  01A64A  EC8B  F0D6         	call	_OLED_Command
 29213                           
 29214                           ;oled.c: 182: OLED_Command(0x40 | 0x0);
 29215  01A64E  0E40               	movlw	64
 29216  01A650  EC8B  F0D6         	call	_OLED_Command
 29217                           
 29218                           ;oled.c: 183: OLED_Command(0x8D);
 29219  01A654  0E8D               	movlw	141
 29220  01A656  EC8B  F0D6         	call	_OLED_Command
 29221                           
 29222                           ;oled.c: 184: OLED_Command(0xAF);
 29223  01A65A  0EAF               	movlw	175
 29224  01A65C  EC8B  F0D6         	call	_OLED_Command
 29225                           
 29226                           ;oled.c: 185: OLED_Command(0x20);
 29227  01A660  0E20               	movlw	32
 29228  01A662  EC8B  F0D6         	call	_OLED_Command
 29229                           
 29230                           ;oled.c: 186: OLED_Command(0x00);
 29231  01A666  0E00               	movlw	0
 29232  01A668  EC8B  F0D6         	call	_OLED_Command
 29233                           
 29234                           ;oled.c: 187: OLED_Command(0xA0 | 0x1);
 29235  01A66C  0EA1               	movlw	161
 29236  01A66E  EC8B  F0D6         	call	_OLED_Command
 29237                           
 29238                           ;oled.c: 188: OLED_Command(0xC8);
 29239  01A672  0EC8               	movlw	200
 29240  01A674  EC8B  F0D6         	call	_OLED_Command
 29241                           
 29242                           ;oled.c: 189: OLED_Command(0xDA);
 29243  01A678  0EDA               	movlw	218
 29244  01A67A  EC8B  F0D6         	call	_OLED_Command
 29245                           
 29246                           ;oled.c: 190: OLED_Command(0x02);
 29247  01A67E  0E02               	movlw	2
 29248  01A680  EC8B  F0D6         	call	_OLED_Command
 29249                           
 29250                           ;oled.c: 191: OLED_Command(0x81);
 29251  01A684  0E81               	movlw	129
 29252  01A686  EC8B  F0D6         	call	_OLED_Command
 29253                           
 29254                           ;oled.c: 192: OLED_Command(0x8F);
 29255  01A68A  0E8F               	movlw	143
 29256  01A68C  EC8B  F0D6         	call	_OLED_Command
 29257                           
 29258                           ;oled.c: 193: OLED_Command(0xD9);
 29259  01A690  0ED9               	movlw	217
 29260  01A692  EC8B  F0D6         	call	_OLED_Command
 29261                           
 29262                           ;oled.c: 194: OLED_Command(0xF1);
 29263  01A696  0EF1               	movlw	241
 29264  01A698  EC8B  F0D6         	call	_OLED_Command
 29265                           
 29266                           ;oled.c: 195: OLED_Command(0xDB);
 29267  01A69C  0EDB               	movlw	219
 29268  01A69E  EC8B  F0D6         	call	_OLED_Command
 29269                           
 29270                           ;oled.c: 196: OLED_Command(0x40);
 29271  01A6A2  0E40               	movlw	64
 29272  01A6A4  EC8B  F0D6         	call	_OLED_Command
 29273                           
 29274                           ;oled.c: 197: OLED_Command(0xA4);
 29275  01A6A8  0EA4               	movlw	164
 29276  01A6AA  EC8B  F0D6         	call	_OLED_Command
 29277                           
 29278                           ;oled.c: 198: OLED_Command(0xA6);
 29279  01A6AE  0EA6               	movlw	166
 29280  01A6B0  EC8B  F0D6         	call	_OLED_Command
 29281                           
 29282                           ;oled.c: 199: OLED_Command(0xAF);
 29283  01A6B4  0EAF               	movlw	175
 29284  01A6B6  EC8B  F0D6         	call	_OLED_Command
 29285  01A6BA  0012               	return		;funcret
 29286  01A6BC                     __end_of_OLED_Init:
 29287                           	opt callstack 0
 29288                           
 29289 ;; *************** function _OLED_Command *****************
 29290 ;; Defined at:
 29291 ;;		line 121 in file "oled.c"
 29292 ;; Parameters:    Size  Location     Type
 29293 ;;  temp            1    wreg     unsigned char 
 29294 ;; Auto vars:     Size  Location     Type
 29295 ;;  temp            1   16[BANK2 ] unsigned char 
 29296 ;;  data_array      2   18[BANK2 ] unsigned char [2]
 29297 ;;  length          1    0        unsigned char 
 29298 ;; Return value:  Size  Location     Type
 29299 ;;                  1    wreg      void 
 29300 ;; Registers used:
 29301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29302 ;; Tracked objects:
 29303 ;;		On entry : 0/0
 29304 ;;		On exit  : 0/0
 29305 ;;		Unchanged: 0/0
 29306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29308 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29310 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29311 ;;Total ram usage:        4 bytes
 29312 ;; Hardware stack levels used:    1
 29313 ;; Hardware stack levels required when called:   14
 29314 ;; This function calls:
 29315 ;;		_I2C2_MasterWrite
 29316 ;; This function is called by:
 29317 ;;		_OLED_Init
 29318 ;;		_OLED_YX
 29319 ;; This function uses a non-reentrant model
 29320 ;;
 29321                           
 29322                           	psect	text105
 29323  01AD16                     __ptext105:
 29324                           	opt callstack 0
 29325  01AD16                     _OLED_Command:
 29326                           	opt callstack 13
 29327                           
 29328                           ;incstack = 0
 29329                           ;OLED_Command@temp stored from wreg
 29330  01AD16  0102               	movlb	2	; () banked
 29331  01AD18  6F10               	movwf	OLED_Command@temp& (0+255),b
 29332                           
 29333                           ;oled.c: 123: uint8_t length;;oled.c: 125: uint8_t data_array[2];;oled.c: 126: data_arra
      +                          y[0] = 0x00;
 29334  01AD1A  0E00               	movlw	0
 29335  01AD1C  0102               	movlb	2	; () banked
 29336  01AD1E  6F12               	movwf	OLED_Command@data_array& (0+255),b
 29337                           
 29338                           ; BSR set to: 2
 29339                           ;oled.c: 127: data_array[1] = temp;
 29340  01AD20  C210  F213         	movff	OLED_Command@temp,OLED_Command@data_array+1
 29341                           
 29342                           ; BSR set to: 2
 29343                           ;oled.c: 132: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 29344                           
 29345                           ; BSR set to: 2
 29346  01AD24  0E12               	movlw	low OLED_Command@data_array
 29347  01AD26  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 29348  01AD28  0E02               	movlw	high OLED_Command@data_array
 29349  01AD2A  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 29350  01AD2C  0E02               	movlw	2
 29351  01AD2E  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 29352  01AD30  0E00               	movlw	0
 29353  01AD32  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 29354  01AD34  0E3C               	movlw	60
 29355  01AD36  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 29356  01AD38  0EBD               	movlw	low _I2C_STATUS
 29357  01AD3A  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 29358  01AD3C  0E01               	movlw	high _I2C_STATUS
 29359  01AD3E  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 29360  01AD40  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 29361  01AD44                     l18900:
 29362  01AD44  0E02               	movlw	2
 29363  01AD46  0101               	movlb	1	; () banked
 29364  01AD48  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29365  01AD4A  B4D8               	btfsc	status,2,c
 29366  01AD4C  D7FB               	goto	l18900
 29367                           
 29368                           ; BSR set to: 1
 29369                           ;oled.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 137: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 139: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 140: I2C_STATUS == I2C2_LOST_STATE ) {
 29370  01AD4E  05BD               	decf	_I2C_STATUS& (0+255),w,b
 29371  01AD50  B4D8               	btfsc	status,2,c
 29372  01AD52  D010               	goto	u23920
 29373                           
 29374                           ; BSR set to: 1
 29375  01AD54  0E03               	movlw	3
 29376  01AD56  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29377  01AD58  B4D8               	btfsc	status,2,c
 29378  01AD5A  D00C               	goto	u23920
 29379                           
 29380                           ; BSR set to: 1
 29381  01AD5C  0E04               	movlw	4
 29382  01AD5E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29383  01AD60  B4D8               	btfsc	status,2,c
 29384  01AD62  D008               	goto	u23920
 29385                           
 29386                           ; BSR set to: 1
 29387  01AD64  0E05               	movlw	5
 29388  01AD66  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29389  01AD68  B4D8               	btfsc	status,2,c
 29390  01AD6A  D004               	goto	u23920
 29391                           
 29392                           ; BSR set to: 1
 29393  01AD6C  0E06               	movlw	6
 29394  01AD6E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29395  01AD70  A4D8               	btfss	status,2,c
 29396  01AD72  0012               	return	
 29397  01AD74                     u23920:
 29398                           
 29399                           ; BSR set to: 1
 29400                           ;oled.c: 141: error_handler.I2C_OLED_error_flag = 1;
 29401  01AD74  0E01               	movlw	1
 29402  01AD76  0100               	movlb	0	; () banked
 29403  01AD78  6FC8               	movwf	(_error_handler+3)& (0+255),b
 29404  01AD7A  0012               	return		;funcret
 29405  01AD7C                     __end_of_OLED_Command:
 29406                           	opt callstack 0
 29407                           
 29408 ;; *************** function _OLED_Clear *****************
 29409 ;; Defined at:
 29410 ;;		line 246 in file "oled.c"
 29411 ;; Parameters:    Size  Location     Type
 29412 ;;		None
 29413 ;; Auto vars:     Size  Location     Type
 29414 ;;  col             2   35[BANK2 ] unsigned int 
 29415 ;;  row             2   33[BANK2 ] unsigned int 
 29416 ;; Return value:  Size  Location     Type
 29417 ;;                  1    wreg      void 
 29418 ;; Registers used:
 29419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29420 ;; Tracked objects:
 29421 ;;		On entry : 0/0
 29422 ;;		On exit  : 0/0
 29423 ;;		Unchanged: 0/0
 29424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29428 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29429 ;;Total ram usage:        4 bytes
 29430 ;; Hardware stack levels used:    1
 29431 ;; Hardware stack levels required when called:   15
 29432 ;; This function calls:
 29433 ;;		_OLED_PutChar
 29434 ;; This function is called by:
 29435 ;;		_main
 29436 ;; This function uses a non-reentrant model
 29437 ;;
 29438                           
 29439                           	psect	text106
 29440  01B6D0                     __ptext106:
 29441                           	opt callstack 0
 29442  01B6D0                     _OLED_Clear:
 29443                           	opt callstack 15
 29444                           
 29445                           ;oled.c: 248: for(uint16_t row = 0; row < 8; row++) {
 29446                           
 29447                           ;incstack = 0
 29448  01B6D0  0E00               	movlw	0
 29449  01B6D2  0102               	movlb	2	; () banked
 29450  01B6D4  6F22               	movwf	(OLED_Clear@row+1)& (0+255),b
 29451  01B6D6  0E00               	movlw	0
 29452  01B6D8  6F21               	movwf	OLED_Clear@row& (0+255),b
 29453  01B6DA                     l21360:
 29454                           
 29455                           ; BSR set to: 2
 29456                           ;oled.c: 250: for(uint16_t col = 0; col < 16; col++) {
 29457  01B6DA  0E00               	movlw	0
 29458  01B6DC  6F24               	movwf	(OLED_Clear@col+1)& (0+255),b
 29459  01B6DE  0E00               	movlw	0
 29460  01B6E0  6F23               	movwf	OLED_Clear@col& (0+255),b
 29461  01B6E2                     l21366:
 29462                           
 29463                           ; BSR set to: 2
 29464                           ;oled.c: 252: OLED_PutChar('\0');
 29465  01B6E2  0E00               	movlw	0
 29466  01B6E4  EC10  F0D0         	call	_OLED_PutChar
 29467  01B6E8  0102               	movlb	2	; () banked
 29468  01B6EA  4B23               	infsnz	OLED_Clear@col& (0+255),f,b
 29469  01B6EC  2B24               	incf	(OLED_Clear@col+1)& (0+255),f,b
 29470                           
 29471                           ; BSR set to: 2
 29472  01B6EE  5124               	movf	(OLED_Clear@col+1)& (0+255),w,b
 29473  01B6F0  E104               	bnz	u27400
 29474  01B6F2  0E10               	movlw	16
 29475  01B6F4  5D23               	subwf	OLED_Clear@col& (0+255),w,b
 29476  01B6F6  A0D8               	btfss	status,0,c
 29477  01B6F8  D7F4               	goto	l21366
 29478  01B6FA                     u27400:
 29479                           
 29480                           ; BSR set to: 2
 29481  01B6FA  4B21               	infsnz	OLED_Clear@row& (0+255),f,b
 29482  01B6FC  2B22               	incf	(OLED_Clear@row+1)& (0+255),f,b
 29483                           
 29484                           ; BSR set to: 2
 29485  01B6FE  5122               	movf	(OLED_Clear@row+1)& (0+255),w,b
 29486  01B700  E105               	bnz	u27410
 29487  01B702  0E08               	movlw	8
 29488  01B704  5D21               	subwf	OLED_Clear@row& (0+255),w,b
 29489  01B706  B0D8               	btfsc	status,0,c
 29490  01B708  0012               	return	
 29491  01B70A  D7E7               	goto	l21360
 29492  01B70C                     u27410:
 29493                           
 29494                           ; BSR set to: 2
 29495  01B70C  0012               	return		;funcret
 29496  01B70E                     __end_of_OLED_Clear:
 29497                           	opt callstack 0
 29498                           
 29499 ;; *************** function _OLED_PutChar *****************
 29500 ;; Defined at:
 29501 ;;		line 211 in file "oled.c"
 29502 ;; Parameters:    Size  Location     Type
 29503 ;;  ch              1    wreg     unsigned char 
 29504 ;; Auto vars:     Size  Location     Type
 29505 ;;  ch              1   32[BANK2 ] unsigned char 
 29506 ;;  data_array      9   20[BANK2 ] unsigned char [9]
 29507 ;;  input_base      2   29[BANK2 ] PTR const unsigned char 
 29508 ;;		 -> OledFont(768), 
 29509 ;;  length          1    0        unsigned char 
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  1    wreg      void 
 29512 ;; Registers used:
 29513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29514 ;; Tracked objects:
 29515 ;;		On entry : 0/0
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29520 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29521 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29522 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29523 ;;Total ram usage:       17 bytes
 29524 ;; Hardware stack levels used:    1
 29525 ;; Hardware stack levels required when called:   14
 29526 ;; This function calls:
 29527 ;;		_I2C2_MasterWrite
 29528 ;;		_memmove
 29529 ;; This function is called by:
 29530 ;;		_OLED_Clear
 29531 ;;		_OLED_WriteString
 29532 ;; This function uses a non-reentrant model
 29533 ;;
 29534                           
 29535                           	psect	text107
 29536  01A020                     __ptext107:
 29537                           	opt callstack 0
 29538  01A020                     _OLED_PutChar:
 29539                           	opt callstack 13
 29540                           
 29541                           ; BSR set to: 2
 29542                           ;incstack = 0
 29543                           ;OLED_PutChar@ch stored from wreg
 29544  01A020  0102               	movlb	2	; () banked
 29545  01A022  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 29546                           
 29547                           ;oled.c: 213: if((ch < 32) || (ch > 127)) {
 29548  01A024  0E1F               	movlw	31
 29549  01A026  0102               	movlb	2	; () banked
 29550  01A028  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 29551  01A02A  D003               	goto	u23940
 29552                           
 29553                           ; BSR set to: 2
 29554  01A02C  0E7F               	movlw	127
 29555  01A02E  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 29556  01A030  D002               	goto	l1860
 29557  01A032                     u23940:
 29558                           
 29559                           ; BSR set to: 2
 29560                           ;oled.c: 215: ch = ' ';
 29561  01A032  0E20               	movlw	32
 29562  01A034  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 29563  01A036                     l1860:
 29564                           
 29565                           ; BSR set to: 2
 29566                           ;oled.c: 217: };oled.c: 219: uint8_t length;;oled.c: 221: uint8_t data_array[9];;oled.c:
      +                           223: data_array[0] = 0x40;
 29567  01A036  0E40               	movlw	64
 29568  01A038  6F14               	movwf	OLED_PutChar@data_array& (0+255),b
 29569                           
 29570                           ; BSR set to: 2
 29571                           ;oled.c: 225: const uint8_t *input_base = &OledFont[ch - 32][0];
 29572  01A03A  0E00               	movlw	0
 29573  01A03C  6F10               	movwf	??_OLED_PutChar& (0+255),b
 29574  01A03E  0EFF               	movlw	255
 29575  01A040  6F11               	movwf	(??_OLED_PutChar+1)& (0+255),b
 29576  01A042  5120               	movf	OLED_PutChar@ch& (0+255),w,b
 29577  01A044  6F12               	movwf	(??_OLED_PutChar+2)& (0+255),b
 29578  01A046  6B13               	clrf	(??_OLED_PutChar+3)& (0+255),b
 29579  01A048  90D8               	bcf	status,0,c
 29580  01A04A  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 29581  01A04C  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 29582  01A04E  90D8               	bcf	status,0,c
 29583  01A050  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 29584  01A052  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 29585  01A054  90D8               	bcf	status,0,c
 29586  01A056  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 29587  01A058  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 29588  01A05A  5110               	movf	??_OLED_PutChar& (0+255),w,b
 29589  01A05C  2712               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 29590  01A05E  5111               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 29591  01A060  2313               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 29592  01A062  0E1F               	movlw	low _OledFont
 29593  01A064  2512               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 29594  01A066  6F1D               	movwf	OLED_PutChar@input_base& (0+255),b
 29595  01A068  0EE7               	movlw	high _OledFont
 29596  01A06A  2113               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 29597  01A06C  6F1E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 29598                           
 29599                           ; BSR set to: 2
 29600                           ;oled.c: 227: memmove(data_array + 1, input_base, 8);
 29601  01A06E  0E15               	movlw	low (OLED_PutChar@data_array+1)
 29602  01A070  6F00               	movwf	memmove@d1& (0+255),b
 29603  01A072  0E02               	movlw	high (OLED_PutChar@data_array+1)
 29604  01A074  6F01               	movwf	(memmove@d1+1)& (0+255),b
 29605  01A076  C21D  F202         	movff	OLED_PutChar@input_base,memmove@s1
 29606  01A07A  C21E  F203         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 29607  01A07E  0E00               	movlw	0
 29608  01A080  6F05               	movwf	(memmove@n+1)& (0+255),b
 29609  01A082  0E08               	movlw	8
 29610  01A084  6F04               	movwf	memmove@n& (0+255),b
 29611  01A086  EC2D  F0D1         	call	_memmove	;wreg free
 29612                           
 29613                           ;oled.c: 232: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 29614  01A08A  0E14               	movlw	low OLED_PutChar@data_array
 29615  01A08C  0102               	movlb	2	; () banked
 29616  01A08E  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 29617  01A090  0E02               	movlw	high OLED_PutChar@data_array
 29618  01A092  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 29619  01A094  0E09               	movlw	9
 29620  01A096  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 29621  01A098  0E00               	movlw	0
 29622  01A09A  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 29623  01A09C  0E3C               	movlw	60
 29624  01A09E  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 29625  01A0A0  0EBD               	movlw	low _I2C_STATUS
 29626  01A0A2  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 29627  01A0A4  0E01               	movlw	high _I2C_STATUS
 29628  01A0A6  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 29629  01A0A8  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 29630  01A0AC                     l18928:
 29631  01A0AC  0E02               	movlw	2
 29632  01A0AE  0101               	movlb	1	; () banked
 29633  01A0B0  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29634  01A0B2  B4D8               	btfsc	status,2,c
 29635  01A0B4  D7FB               	goto	l18928
 29636                           
 29637                           ; BSR set to: 1
 29638                           ;oled.c: 236: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 237: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 238: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 239: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 240: I2C_STATUS == I2C2_LOST_STATE ) {
 29639  01A0B6  05BD               	decf	_I2C_STATUS& (0+255),w,b
 29640  01A0B8  B4D8               	btfsc	status,2,c
 29641  01A0BA  D010               	goto	u24000
 29642                           
 29643                           ; BSR set to: 1
 29644  01A0BC  0E03               	movlw	3
 29645  01A0BE  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29646  01A0C0  B4D8               	btfsc	status,2,c
 29647  01A0C2  D00C               	goto	u24000
 29648                           
 29649                           ; BSR set to: 1
 29650  01A0C4  0E04               	movlw	4
 29651  01A0C6  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29652  01A0C8  B4D8               	btfsc	status,2,c
 29653  01A0CA  D008               	goto	u24000
 29654                           
 29655                           ; BSR set to: 1
 29656  01A0CC  0E05               	movlw	5
 29657  01A0CE  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29658  01A0D0  B4D8               	btfsc	status,2,c
 29659  01A0D2  D004               	goto	u24000
 29660                           
 29661                           ; BSR set to: 1
 29662  01A0D4  0E06               	movlw	6
 29663  01A0D6  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29664  01A0D8  A4D8               	btfss	status,2,c
 29665  01A0DA  0012               	return	
 29666  01A0DC                     u24000:
 29667                           
 29668                           ; BSR set to: 1
 29669                           ;oled.c: 241: error_handler.I2C_OLED_error_flag = 1;
 29670  01A0DC  0E01               	movlw	1
 29671  01A0DE  0100               	movlb	0	; () banked
 29672  01A0E0  6FC8               	movwf	(_error_handler+3)& (0+255),b
 29673  01A0E2  0012               	return		;funcret
 29674  01A0E4                     __end_of_OLED_PutChar:
 29675                           	opt callstack 0
 29676                           
 29677 ;; *************** function _memmove *****************
 29678 ;; Defined at:
 29679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 29680 ;; Parameters:    Size  Location     Type
 29681 ;;  d1              2    0[BANK2 ] PTR void 
 29682 ;;		 -> OLED_PutChar@data_array(9), 
 29683 ;;  s1              2    2[BANK2 ] PTR const void 
 29684 ;;		 -> OledFont(768), 
 29685 ;;  n               2    4[BANK2 ] unsigned int 
 29686 ;; Auto vars:     Size  Location     Type
 29687 ;;  s               2   10[BANK2 ] PTR const unsigned char 
 29688 ;;		 -> OledFont(768), 
 29689 ;;  d               2    8[BANK2 ] PTR unsigned char 
 29690 ;;		 -> OLED_PutChar@data_array(9), 
 29691 ;; Return value:  Size  Location     Type
 29692 ;;                  2    0[BANK2 ] PTR void 
 29693 ;; Registers used:
 29694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29695 ;; Tracked objects:
 29696 ;;		On entry : 0/0
 29697 ;;		On exit  : 0/0
 29698 ;;		Unchanged: 0/0
 29699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29700 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29701 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29702 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29703 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29704 ;;Total ram usage:       12 bytes
 29705 ;; Hardware stack levels used:    1
 29706 ;; Hardware stack levels required when called:   11
 29707 ;; This function calls:
 29708 ;;		Nothing
 29709 ;; This function is called by:
 29710 ;;		_OLED_PutChar
 29711 ;; This function uses a non-reentrant model
 29712 ;;
 29713                           
 29714                           	psect	text108
 29715  01A25A                     __ptext108:
 29716                           	opt callstack 0
 29717  01A25A                     _memmove:
 29718                           	opt callstack 15
 29719                           
 29720                           ;incstack = 0
 29721  01A25A  C202  F20A         	movff	memmove@s1,memmove@s
 29722  01A25E  C203  F20B         	movff	memmove@s1+1,memmove@s+1
 29723  01A262  C200  F208         	movff	memmove@d1,memmove@d
 29724  01A266  C201  F209         	movff	memmove@d1+1,memmove@d+1
 29725  01A26A  0102               	movlb	2	; () banked
 29726  01A26C  5108               	movf	memmove@d& (0+255),w,b
 29727  01A26E  5D0A               	subwf	memmove@s& (0+255),w,b
 29728  01A270  5109               	movf	(memmove@d+1)& (0+255),w,b
 29729  01A272  590B               	subwfb	(memmove@s+1)& (0+255),w,b
 29730  01A274  B0D8               	btfsc	status,0,c
 29731  01A276  D02F               	goto	l18192
 29732                           
 29733                           ; BSR set to: 2
 29734  01A278  5104               	movf	memmove@n& (0+255),w,b
 29735  01A27A  250A               	addwf	memmove@s& (0+255),w,b
 29736  01A27C  6F06               	movwf	??_memmove& (0+255),b
 29737  01A27E  5105               	movf	(memmove@n+1)& (0+255),w,b
 29738  01A280  210B               	addwfc	(memmove@s+1)& (0+255),w,b
 29739  01A282  6F07               	movwf	(??_memmove+1)& (0+255),b
 29740  01A284  5106               	movf	??_memmove& (0+255),w,b
 29741  01A286  5D08               	subwf	memmove@d& (0+255),w,b
 29742  01A288  5107               	movf	(??_memmove+1)& (0+255),w,b
 29743  01A28A  5909               	subwfb	(memmove@d+1)& (0+255),w,b
 29744  01A28C  B0D8               	btfsc	status,0,c
 29745  01A28E  D023               	goto	l18192
 29746                           
 29747                           ; BSR set to: 2
 29748  01A290  5104               	movf	memmove@n& (0+255),w,b
 29749  01A292  270A               	addwf	memmove@s& (0+255),f,b
 29750  01A294  5105               	movf	(memmove@n+1)& (0+255),w,b
 29751  01A296  230B               	addwfc	(memmove@s+1)& (0+255),f,b
 29752  01A298  5104               	movf	memmove@n& (0+255),w,b
 29753  01A29A  2708               	addwf	memmove@d& (0+255),f,b
 29754  01A29C  5105               	movf	(memmove@n+1)& (0+255),w,b
 29755  01A29E  2309               	addwfc	(memmove@d+1)& (0+255),f,b
 29756  01A2A0                     l18188:
 29757                           
 29758                           ; BSR set to: 2
 29759  01A2A0  070A               	decf	memmove@s& (0+255),f,b
 29760  01A2A2  A0D8               	btfss	status,0,c
 29761  01A2A4  070B               	decf	(memmove@s+1)& (0+255),f,b
 29762  01A2A6  C20A  FFF6         	movff	memmove@s,tblptrl
 29763  01A2AA  C20B  FFF7         	movff	memmove@s+1,tblptrh
 29764  01A2AE                     	if	0	;tblptru may be non-zero
 29765  01A2AE                     	endif
 29766  01A2AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29767  01A2AE  0E00               	movlw	low (__mediumconst shr (0+16))
 29768  01A2B0  6EF8               	movwf	tblptru,c
 29769  01A2B2                     	endif
 29770  01A2B2  0708               	decf	memmove@d& (0+255),f,b
 29771  01A2B4  A0D8               	btfss	status,0,c
 29772  01A2B6  0709               	decf	(memmove@d+1)& (0+255),f,b
 29773  01A2B8  C208  FFD9         	movff	memmove@d,fsr2l
 29774  01A2BC  C209  FFDA         	movff	memmove@d+1,fsr2h
 29775  01A2C0  0008               	tblrd		*
 29776  01A2C2  CFF5 FFDF          	movff	tablat,indf2
 29777                           
 29778                           ; BSR set to: 2
 29779  01A2C6  0704               	decf	memmove@n& (0+255),f,b
 29780  01A2C8  A0D8               	btfss	status,0,c
 29781  01A2CA  0705               	decf	(memmove@n+1)& (0+255),f,b
 29782  01A2CC  5104               	movf	memmove@n& (0+255),w,b
 29783  01A2CE  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 29784  01A2D0  B4D8               	btfsc	status,2,c
 29785  01A2D2  0012               	return	
 29786  01A2D4  D7E5               	goto	l18188
 29787  01A2D6                     l18192:
 29788                           
 29789                           ; BSR set to: 2
 29790  01A2D6  5104               	movf	memmove@n& (0+255),w,b
 29791  01A2D8  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 29792  01A2DA  B4D8               	btfsc	status,2,c
 29793  01A2DC  0012               	return	
 29794                           
 29795                           ; BSR set to: 2
 29796  01A2DE  C20A  FFF6         	movff	memmove@s,tblptrl
 29797  01A2E2  C20B  FFF7         	movff	memmove@s+1,tblptrh
 29798  01A2E6                     	if	0	;tblptru may be non-zero
 29799  01A2E6                     	endif
 29800  01A2E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29801  01A2E6  0E00               	movlw	low (__mediumconst shr (0+16))
 29802  01A2E8  6EF8               	movwf	tblptru,c
 29803  01A2EA                     	endif
 29804  01A2EA  C208  FFD9         	movff	memmove@d,fsr2l
 29805  01A2EE  C209  FFDA         	movff	memmove@d+1,fsr2h
 29806  01A2F2  0008               	tblrd		*
 29807  01A2F4  CFF5 FFDF          	movff	tablat,indf2
 29808                           
 29809                           ; BSR set to: 2
 29810  01A2F8  4B0A               	infsnz	memmove@s& (0+255),f,b
 29811  01A2FA  2B0B               	incf	(memmove@s+1)& (0+255),f,b
 29812                           
 29813                           ; BSR set to: 2
 29814  01A2FC  4B08               	infsnz	memmove@d& (0+255),f,b
 29815  01A2FE  2B09               	incf	(memmove@d+1)& (0+255),f,b
 29816                           
 29817                           ; BSR set to: 2
 29818  01A300  0704               	decf	memmove@n& (0+255),f,b
 29819  01A302  A0D8               	btfss	status,0,c
 29820  01A304  0705               	decf	(memmove@n+1)& (0+255),f,b
 29821  01A306  D7E7               	goto	l18192
 29822  01A308                     __end_of_memmove:
 29823                           	opt callstack 0
 29824                           
 29825 ;; *************** function _LM73TempSensorInitialize *****************
 29826 ;; Defined at:
 29827 ;;		line 13 in file "LM73_I2C.c"
 29828 ;; Parameters:    Size  Location     Type
 29829 ;;		None
 29830 ;; Auto vars:     Size  Location     Type
 29831 ;;  output_data_    2   16[BANK2 ] unsigned char [2]
 29832 ;;  length          1    0        unsigned char 
 29833 ;; Return value:  Size  Location     Type
 29834 ;;                  1    wreg      void 
 29835 ;; Registers used:
 29836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29837 ;; Tracked objects:
 29838 ;;		On entry : 0/0
 29839 ;;		On exit  : 0/0
 29840 ;;		Unchanged: 0/0
 29841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29843 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29845 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29846 ;;Total ram usage:        3 bytes
 29847 ;; Hardware stack levels used:    1
 29848 ;; Hardware stack levels required when called:   14
 29849 ;; This function calls:
 29850 ;;		_I2C2_MasterWrite
 29851 ;; This function is called by:
 29852 ;;		_main
 29853 ;; This function uses a non-reentrant model
 29854 ;;
 29855                           
 29856                           	psect	text109
 29857  018910                     __ptext109:
 29858                           	opt callstack 0
 29859  018910                     _LM73TempSensorInitialize:
 29860                           	opt callstack 16
 29861                           
 29862                           ;LM73_I2C.c: 16: PIE0bits.INT1IE = 0;
 29863                           
 29864                           ; BSR set to: 2
 29865                           ;incstack = 0
 29866  018910  010E               	movlb	14	; () banked
 29867  018912  93C2               	bcf	194,1,b	;volatile
 29868                           
 29869                           ;LM73_I2C.c: 17: PIE0bits.INT2IE = 0;
 29870  018914  95C2               	bcf	194,2,b	;volatile
 29871  018916                     l21820:
 29872  018916  0E02               	movlw	2
 29873  018918  0101               	movlb	1	; () banked
 29874  01891A  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29875  01891C  B4D8               	btfsc	status,2,c
 29876  01891E  D7FB               	goto	l21820
 29877                           
 29878                           ; BSR set to: 1
 29879                           ;LM73_I2C.c: 22: uint8_t length;;LM73_I2C.c: 23: uint8_t output_data_array[2];;LM73_I2C.
      +                          c: 24: output_data_array[0] = 0x01;
 29880  018920  0E01               	movlw	1
 29881  018922  0102               	movlb	2	; () banked
 29882  018924  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 29883                           
 29884                           ;LM73_I2C.c: 25: output_data_array[1] = 0b01000000;
 29885  018926  0E40               	movlw	64
 29886  018928  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 29887                           
 29888                           ; BSR set to: 2
 29889                           ;LM73_I2C.c: 27: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 29890  01892A  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 29891  01892C  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 29892  01892E  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 29893  018930  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 29894  018932  0E02               	movlw	2
 29895  018934  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 29896  018936  0E00               	movlw	0
 29897  018938  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 29898  01893A  0E4D               	movlw	77
 29899  01893C  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 29900  01893E  0EBD               	movlw	low _I2C_STATUS
 29901  018940  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 29902  018942  0E01               	movlw	high _I2C_STATUS
 29903  018944  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 29904  018946  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 29905  01894A                     l21826:
 29906  01894A  0E02               	movlw	2
 29907  01894C  0101               	movlb	1	; () banked
 29908  01894E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29909  018950  B4D8               	btfsc	status,2,c
 29910  018952  D7FB               	goto	l21826
 29911                           
 29912                           ; BSR set to: 1
 29913                           ;LM73_I2C.c: 29: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 30: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 31: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 32: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 33: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 29914  018954  05BD               	decf	_I2C_STATUS& (0+255),w,b
 29915  018956  B4D8               	btfsc	status,2,c
 29916  018958  D010               	goto	u27590
 29917                           
 29918                           ; BSR set to: 1
 29919  01895A  0E03               	movlw	3
 29920  01895C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29921  01895E  B4D8               	btfsc	status,2,c
 29922  018960  D00C               	goto	u27590
 29923                           
 29924                           ; BSR set to: 1
 29925  018962  0E04               	movlw	4
 29926  018964  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29927  018966  B4D8               	btfsc	status,2,c
 29928  018968  D008               	goto	u27590
 29929                           
 29930                           ; BSR set to: 1
 29931  01896A  0E05               	movlw	5
 29932  01896C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29933  01896E  B4D8               	btfsc	status,2,c
 29934  018970  D004               	goto	u27590
 29935                           
 29936                           ; BSR set to: 1
 29937  018972  0E06               	movlw	6
 29938  018974  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29939  018976  A4D8               	btfss	status,2,c
 29940  018978  D003               	goto	l21840
 29941  01897A                     u27590:
 29942                           
 29943                           ; BSR set to: 1
 29944                           ;LM73_I2C.c: 34: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 29945  01897A  0E01               	movlw	1
 29946  01897C  0100               	movlb	0	; () banked
 29947  01897E  6FC9               	movwf	(_error_handler+4)& (0+255),b
 29948  018980                     l21840:
 29949                           
 29950                           ;LM73_I2C.c: 35: };LM73_I2C.c: 38: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 29951  018980  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 29952  018982  0102               	movlb	2	; () banked
 29953  018984  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 29954  018986  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 29955  018988  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 29956  01898A  0E02               	movlw	2
 29957  01898C  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 29958  01898E  0E00               	movlw	0
 29959  018990  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 29960  018992  0E4C               	movlw	76
 29961  018994  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 29962  018996  0EBD               	movlw	low _I2C_STATUS
 29963  018998  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 29964  01899A  0E01               	movlw	high _I2C_STATUS
 29965  01899C  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 29966  01899E  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 29967  0189A2                     l21842:
 29968  0189A2  0E02               	movlw	2
 29969  0189A4  0101               	movlb	1	; () banked
 29970  0189A6  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29971  0189A8  B4D8               	btfsc	status,2,c
 29972  0189AA  D7FB               	goto	l21842
 29973                           
 29974                           ; BSR set to: 1
 29975                           ;LM73_I2C.c: 40: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 41: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 42: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 43: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 44: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 29976  0189AC  05BD               	decf	_I2C_STATUS& (0+255),w,b
 29977  0189AE  B4D8               	btfsc	status,2,c
 29978  0189B0  D010               	goto	u27650
 29979                           
 29980                           ; BSR set to: 1
 29981  0189B2  0E03               	movlw	3
 29982  0189B4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29983  0189B6  B4D8               	btfsc	status,2,c
 29984  0189B8  D00C               	goto	u27650
 29985                           
 29986                           ; BSR set to: 1
 29987  0189BA  0E04               	movlw	4
 29988  0189BC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29989  0189BE  B4D8               	btfsc	status,2,c
 29990  0189C0  D008               	goto	u27650
 29991                           
 29992                           ; BSR set to: 1
 29993  0189C2  0E05               	movlw	5
 29994  0189C4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 29995  0189C6  B4D8               	btfsc	status,2,c
 29996  0189C8  D004               	goto	u27650
 29997                           
 29998                           ; BSR set to: 1
 29999  0189CA  0E06               	movlw	6
 30000  0189CC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30001  0189CE  A4D8               	btfss	status,2,c
 30002  0189D0  D003               	goto	l21856
 30003  0189D2                     u27650:
 30004                           
 30005                           ; BSR set to: 1
 30006                           ;LM73_I2C.c: 45: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 30007  0189D2  0E01               	movlw	1
 30008  0189D4  0100               	movlb	0	; () banked
 30009  0189D6  6FCA               	movwf	(_error_handler+5)& (0+255),b
 30010  0189D8                     l21856:
 30011                           
 30012                           ;LM73_I2C.c: 46: };LM73_I2C.c: 49: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 30013  0189D8  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 30014  0189DA  0102               	movlb	2	; () banked
 30015  0189DC  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30016  0189DE  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 30017  0189E0  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30018  0189E2  0E02               	movlw	2
 30019  0189E4  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30020  0189E6  0E00               	movlw	0
 30021  0189E8  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30022  0189EA  0E4E               	movlw	78
 30023  0189EC  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30024  0189EE  0EBD               	movlw	low _I2C_STATUS
 30025  0189F0  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30026  0189F2  0E01               	movlw	high _I2C_STATUS
 30027  0189F4  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30028  0189F6  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30029  0189FA                     l21858:
 30030  0189FA  0E02               	movlw	2
 30031  0189FC  0101               	movlb	1	; () banked
 30032  0189FE  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30033  018A00  B4D8               	btfsc	status,2,c
 30034  018A02  D7FB               	goto	l21858
 30035                           
 30036                           ; BSR set to: 1
 30037                           ;LM73_I2C.c: 51: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 52: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 53: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 54: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 55: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 30038  018A04  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30039  018A06  B4D8               	btfsc	status,2,c
 30040  018A08  D010               	goto	u27710
 30041                           
 30042                           ; BSR set to: 1
 30043  018A0A  0E03               	movlw	3
 30044  018A0C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30045  018A0E  B4D8               	btfsc	status,2,c
 30046  018A10  D00C               	goto	u27710
 30047                           
 30048                           ; BSR set to: 1
 30049  018A12  0E04               	movlw	4
 30050  018A14  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30051  018A16  B4D8               	btfsc	status,2,c
 30052  018A18  D008               	goto	u27710
 30053                           
 30054                           ; BSR set to: 1
 30055  018A1A  0E05               	movlw	5
 30056  018A1C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30057  018A1E  B4D8               	btfsc	status,2,c
 30058  018A20  D004               	goto	u27710
 30059                           
 30060                           ; BSR set to: 1
 30061  018A22  0E06               	movlw	6
 30062  018A24  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30063  018A26  A4D8               	btfss	status,2,c
 30064  018A28  D003               	goto	l1321
 30065  018A2A                     u27710:
 30066                           
 30067                           ; BSR set to: 1
 30068                           ;LM73_I2C.c: 56: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 30069  018A2A  0E01               	movlw	1
 30070  018A2C  0100               	movlb	0	; () banked
 30071  018A2E  6FCB               	movwf	(_error_handler+6)& (0+255),b
 30072  018A30                     l1321:
 30073                           
 30074                           ;LM73_I2C.c: 57: };LM73_I2C.c: 60: output_data_array[0] = 0x04;
 30075  018A30  0E04               	movlw	4
 30076  018A32  0102               	movlb	2	; () banked
 30077  018A34  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 30078                           
 30079                           ;LM73_I2C.c: 61: output_data_array[1] = 0b11100000;
 30080  018A36  0EE0               	movlw	224
 30081  018A38  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 30082                           
 30083                           ; BSR set to: 2
 30084                           ;LM73_I2C.c: 63: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 30085  018A3A  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 30086  018A3C  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30087  018A3E  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 30088  018A40  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30089  018A42  0E02               	movlw	2
 30090  018A44  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30091  018A46  0E00               	movlw	0
 30092  018A48  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30093  018A4A  0E4D               	movlw	77
 30094  018A4C  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30095  018A4E  0EBD               	movlw	low _I2C_STATUS
 30096  018A50  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30097  018A52  0E01               	movlw	high _I2C_STATUS
 30098  018A54  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30099  018A56  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30100  018A5A                     l21874:
 30101  018A5A  0E02               	movlw	2
 30102  018A5C  0101               	movlb	1	; () banked
 30103  018A5E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30104  018A60  B4D8               	btfsc	status,2,c
 30105  018A62  D7FB               	goto	l21874
 30106                           
 30107                           ; BSR set to: 1
 30108                           ;LM73_I2C.c: 65: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 66: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 67: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 68: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 69: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 30109  018A64  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30110  018A66  B4D8               	btfsc	status,2,c
 30111  018A68  D010               	goto	u27770
 30112                           
 30113                           ; BSR set to: 1
 30114  018A6A  0E03               	movlw	3
 30115  018A6C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30116  018A6E  B4D8               	btfsc	status,2,c
 30117  018A70  D00C               	goto	u27770
 30118                           
 30119                           ; BSR set to: 1
 30120  018A72  0E04               	movlw	4
 30121  018A74  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30122  018A76  B4D8               	btfsc	status,2,c
 30123  018A78  D008               	goto	u27770
 30124                           
 30125                           ; BSR set to: 1
 30126  018A7A  0E05               	movlw	5
 30127  018A7C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30128  018A7E  B4D8               	btfsc	status,2,c
 30129  018A80  D004               	goto	u27770
 30130                           
 30131                           ; BSR set to: 1
 30132  018A82  0E06               	movlw	6
 30133  018A84  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30134  018A86  A4D8               	btfss	status,2,c
 30135  018A88  D003               	goto	l21888
 30136  018A8A                     u27770:
 30137                           
 30138                           ; BSR set to: 1
 30139                           ;LM73_I2C.c: 70: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 30140  018A8A  0E01               	movlw	1
 30141  018A8C  0100               	movlb	0	; () banked
 30142  018A8E  6FC9               	movwf	(_error_handler+4)& (0+255),b
 30143  018A90                     l21888:
 30144                           
 30145                           ;LM73_I2C.c: 71: };LM73_I2C.c: 74: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 30146  018A90  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 30147  018A92  0102               	movlb	2	; () banked
 30148  018A94  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30149  018A96  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 30150  018A98  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30151  018A9A  0E02               	movlw	2
 30152  018A9C  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30153  018A9E  0E00               	movlw	0
 30154  018AA0  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30155  018AA2  0E4C               	movlw	76
 30156  018AA4  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30157  018AA6  0EBD               	movlw	low _I2C_STATUS
 30158  018AA8  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30159  018AAA  0E01               	movlw	high _I2C_STATUS
 30160  018AAC  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30161  018AAE  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30162  018AB2                     l21890:
 30163  018AB2  0E02               	movlw	2
 30164  018AB4  0101               	movlb	1	; () banked
 30165  018AB6  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30166  018AB8  B4D8               	btfsc	status,2,c
 30167  018ABA  D7FB               	goto	l21890
 30168                           
 30169                           ; BSR set to: 1
 30170                           ;LM73_I2C.c: 76: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 77: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 78: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 79: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 80: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 30171  018ABC  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30172  018ABE  B4D8               	btfsc	status,2,c
 30173  018AC0  D010               	goto	u27830
 30174                           
 30175                           ; BSR set to: 1
 30176  018AC2  0E03               	movlw	3
 30177  018AC4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30178  018AC6  B4D8               	btfsc	status,2,c
 30179  018AC8  D00C               	goto	u27830
 30180                           
 30181                           ; BSR set to: 1
 30182  018ACA  0E04               	movlw	4
 30183  018ACC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30184  018ACE  B4D8               	btfsc	status,2,c
 30185  018AD0  D008               	goto	u27830
 30186                           
 30187                           ; BSR set to: 1
 30188  018AD2  0E05               	movlw	5
 30189  018AD4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30190  018AD6  B4D8               	btfsc	status,2,c
 30191  018AD8  D004               	goto	u27830
 30192                           
 30193                           ; BSR set to: 1
 30194  018ADA  0E06               	movlw	6
 30195  018ADC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30196  018ADE  A4D8               	btfss	status,2,c
 30197  018AE0  D003               	goto	l21904
 30198  018AE2                     u27830:
 30199                           
 30200                           ; BSR set to: 1
 30201                           ;LM73_I2C.c: 81: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 30202  018AE2  0E01               	movlw	1
 30203  018AE4  0100               	movlb	0	; () banked
 30204  018AE6  6FCA               	movwf	(_error_handler+5)& (0+255),b
 30205  018AE8                     l21904:
 30206                           
 30207                           ;LM73_I2C.c: 82: };LM73_I2C.c: 85: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 30208  018AE8  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 30209  018AEA  0102               	movlb	2	; () banked
 30210  018AEC  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30211  018AEE  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 30212  018AF0  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30213  018AF2  0E02               	movlw	2
 30214  018AF4  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30215  018AF6  0E00               	movlw	0
 30216  018AF8  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30217  018AFA  0E4E               	movlw	78
 30218  018AFC  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30219  018AFE  0EBD               	movlw	low _I2C_STATUS
 30220  018B00  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30221  018B02  0E01               	movlw	high _I2C_STATUS
 30222  018B04  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30223  018B06  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30224  018B0A                     l21906:
 30225  018B0A  0E02               	movlw	2
 30226  018B0C  0101               	movlb	1	; () banked
 30227  018B0E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30228  018B10  B4D8               	btfsc	status,2,c
 30229  018B12  D7FB               	goto	l21906
 30230                           
 30231                           ; BSR set to: 1
 30232                           ;LM73_I2C.c: 87: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 88: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 89: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 90: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 91: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 30233  018B14  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30234  018B16  B4D8               	btfsc	status,2,c
 30235  018B18  D010               	goto	u27890
 30236                           
 30237                           ; BSR set to: 1
 30238  018B1A  0E03               	movlw	3
 30239  018B1C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30240  018B1E  B4D8               	btfsc	status,2,c
 30241  018B20  D00C               	goto	u27890
 30242                           
 30243                           ; BSR set to: 1
 30244  018B22  0E04               	movlw	4
 30245  018B24  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30246  018B26  B4D8               	btfsc	status,2,c
 30247  018B28  D008               	goto	u27890
 30248                           
 30249                           ; BSR set to: 1
 30250  018B2A  0E05               	movlw	5
 30251  018B2C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30252  018B2E  B4D8               	btfsc	status,2,c
 30253  018B30  D004               	goto	u27890
 30254                           
 30255                           ; BSR set to: 1
 30256  018B32  0E06               	movlw	6
 30257  018B34  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30258  018B36  A4D8               	btfss	status,2,c
 30259  018B38  D003               	goto	l21920
 30260  018B3A                     u27890:
 30261                           
 30262                           ; BSR set to: 1
 30263                           ;LM73_I2C.c: 92: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 30264  018B3A  0E01               	movlw	1
 30265  018B3C  0100               	movlb	0	; () banked
 30266  018B3E  6FCB               	movwf	(_error_handler+6)& (0+255),b
 30267  018B40                     l21920:
 30268                           
 30269                           ;LM73_I2C.c: 93: };LM73_I2C.c: 96: PIE0bits.INT1IE = 1;
 30270  018B40  010E               	movlb	14	; () banked
 30271  018B42  83C2               	bsf	194,1,b	;volatile
 30272                           
 30273                           ; BSR set to: 14
 30274                           ;LM73_I2C.c: 97: PIE0bits.INT2IE = 1;
 30275  018B44  85C2               	bsf	194,2,b	;volatile
 30276                           
 30277                           ; BSR set to: 14
 30278  018B46  0012               	return		;funcret
 30279  018B48                     __end_of_LM73TempSensorInitialize:
 30280                           	opt callstack 0
 30281                           
 30282 ;; *************** function _LM73AcquisitionHandler *****************
 30283 ;; Defined at:
 30284 ;;		line 102 in file "LM73_I2C.c"
 30285 ;; Parameters:    Size  Location     Type
 30286 ;;		None
 30287 ;; Auto vars:     Size  Location     Type
 30288 ;;		None
 30289 ;; Return value:  Size  Location     Type
 30290 ;;                  1    wreg      void 
 30291 ;; Registers used:
 30292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30293 ;; Tracked objects:
 30294 ;;		On entry : 0/0
 30295 ;;		On exit  : 0/0
 30296 ;;		Unchanged: 0/0
 30297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;Total ram usage:        0 bytes
 30303 ;; Hardware stack levels used:    1
 30304 ;; Hardware stack levels required when called:   14
 30305 ;; This function calls:
 30306 ;;		_I2C2_MasterRead
 30307 ;;		_I2C2_MasterWrite
 30308 ;;		_LM73Convert
 30309 ;; This function is called by:
 30310 ;;		_main
 30311 ;; This function uses a non-reentrant model
 30312 ;;
 30313                           
 30314                           	psect	text110
 30315  018B48                     __ptext110:
 30316                           	opt callstack 0
 30317  018B48                     _LM73AcquisitionHandler:
 30318                           	opt callstack 16
 30319                           
 30320                           ;LM73_I2C.c: 105: PIE0bits.INT1IE = 0;
 30321                           
 30322                           ; BSR set to: 14
 30323                           ;incstack = 0
 30324  018B48  010E               	movlb	14	; () banked
 30325  018B4A  93C2               	bcf	194,1,b	;volatile
 30326                           
 30327                           ;LM73_I2C.c: 106: PIE0bits.INT2IE = 0;
 30328  018B4C  95C2               	bcf	194,2,b	;volatile
 30329  018B4E                     l21954:
 30330  018B4E  0E02               	movlw	2
 30331  018B50  0101               	movlb	1	; () banked
 30332  018B52  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30333  018B54  B4D8               	btfsc	status,2,c
 30334  018B56  D7FB               	goto	l21954
 30335                           
 30336                           ; BSR set to: 1
 30337                           ;LM73_I2C.c: 112: I2C2_MasterWrite(0x00, 1, 0x4D, &I2C_STATUS);
 30338  018B58  0E00               	movlw	0
 30339  018B5A  0102               	movlb	2	; () banked
 30340  018B5C  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30341  018B5E  0E00               	movlw	0
 30342  018B60  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30343  018B62  0E01               	movlw	1
 30344  018B64  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30345  018B66  0E00               	movlw	0
 30346  018B68  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30347  018B6A  0E4D               	movlw	77
 30348  018B6C  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30349  018B6E  0EBD               	movlw	low _I2C_STATUS
 30350  018B70  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30351  018B72  0E01               	movlw	high _I2C_STATUS
 30352  018B74  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30353  018B76  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30354  018B7A                     l21958:
 30355  018B7A  0E02               	movlw	2
 30356  018B7C  0101               	movlb	1	; () banked
 30357  018B7E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30358  018B80  B4D8               	btfsc	status,2,c
 30359  018B82  D7FB               	goto	l21958
 30360                           
 30361                           ; BSR set to: 1
 30362                           ;LM73_I2C.c: 114: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 115: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 116: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 117: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 118: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30363  018B84  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30364  018B86  B4D8               	btfsc	status,2,c
 30365  018B88  D010               	goto	u28000
 30366                           
 30367                           ; BSR set to: 1
 30368  018B8A  0E03               	movlw	3
 30369  018B8C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30370  018B8E  B4D8               	btfsc	status,2,c
 30371  018B90  D00C               	goto	u28000
 30372                           
 30373                           ; BSR set to: 1
 30374  018B92  0E04               	movlw	4
 30375  018B94  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30376  018B96  B4D8               	btfsc	status,2,c
 30377  018B98  D008               	goto	u28000
 30378                           
 30379                           ; BSR set to: 1
 30380  018B9A  0E05               	movlw	5
 30381  018B9C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30382  018B9E  B4D8               	btfsc	status,2,c
 30383  018BA0  D004               	goto	u28000
 30384                           
 30385                           ; BSR set to: 1
 30386  018BA2  0E06               	movlw	6
 30387  018BA4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30388  018BA6  A4D8               	btfss	status,2,c
 30389  018BA8  D003               	goto	l21972
 30390  018BAA                     u28000:
 30391                           
 30392                           ; BSR set to: 1
 30393                           ;LM73_I2C.c: 119: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 30394  018BAA  0E01               	movlw	1
 30395  018BAC  0100               	movlb	0	; () banked
 30396  018BAE  6FC9               	movwf	(_error_handler+4)& (0+255),b
 30397  018BB0                     l21972:
 30398                           
 30399                           ;LM73_I2C.c: 120: };LM73_I2C.c: 122: I2C2_MasterRead(LM73_temp_results.QI_data_raw, 2, 0
      +                          x4D, &I2C_STATUS);
 30400  018BB0  0EA8               	movlw	low (_LM73_temp_results+12)
 30401  018BB2  0102               	movlb	2	; () banked
 30402  018BB4  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 30403  018BB6  0E01               	movlw	high (_LM73_temp_results+12)
 30404  018BB8  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 30405  018BBA  0E02               	movlw	2
 30406  018BBC  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 30407  018BBE  0E00               	movlw	0
 30408  018BC0  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 30409  018BC2  0E4D               	movlw	77
 30410  018BC4  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 30411  018BC6  0EBD               	movlw	low _I2C_STATUS
 30412  018BC8  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 30413  018BCA  0E01               	movlw	high _I2C_STATUS
 30414  018BCC  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 30415  018BCE  EC21  F0D9         	call	_I2C2_MasterRead	;wreg free
 30416  018BD2                     l21974:
 30417  018BD2  0E02               	movlw	2
 30418  018BD4  0101               	movlb	1	; () banked
 30419  018BD6  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30420  018BD8  B4D8               	btfsc	status,2,c
 30421  018BDA  D7FB               	goto	l21974
 30422                           
 30423                           ; BSR set to: 1
 30424                           ;LM73_I2C.c: 124: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 125: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 126: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 127: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 128: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30425  018BDC  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30426  018BDE  B4D8               	btfsc	status,2,c
 30427  018BE0  D010               	goto	u28060
 30428                           
 30429                           ; BSR set to: 1
 30430  018BE2  0E03               	movlw	3
 30431  018BE4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30432  018BE6  B4D8               	btfsc	status,2,c
 30433  018BE8  D00C               	goto	u28060
 30434                           
 30435                           ; BSR set to: 1
 30436  018BEA  0E04               	movlw	4
 30437  018BEC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30438  018BEE  B4D8               	btfsc	status,2,c
 30439  018BF0  D008               	goto	u28060
 30440                           
 30441                           ; BSR set to: 1
 30442  018BF2  0E05               	movlw	5
 30443  018BF4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30444  018BF6  B4D8               	btfsc	status,2,c
 30445  018BF8  D004               	goto	u28060
 30446                           
 30447                           ; BSR set to: 1
 30448  018BFA  0E06               	movlw	6
 30449  018BFC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30450  018BFE  A4D8               	btfss	status,2,c
 30451  018C00  D003               	goto	l21988
 30452  018C02                     u28060:
 30453                           
 30454                           ; BSR set to: 1
 30455                           ;LM73_I2C.c: 129: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 30456  018C02  0E01               	movlw	1
 30457  018C04  0100               	movlb	0	; () banked
 30458  018C06  6FC9               	movwf	(_error_handler+4)& (0+255),b
 30459  018C08                     l21988:
 30460                           
 30461                           ;LM73_I2C.c: 130: };LM73_I2C.c: 134: I2C2_MasterWrite(0x00, 1, 0x4C, &I2C_STATUS);
 30462  018C08  0E00               	movlw	0
 30463  018C0A  0102               	movlb	2	; () banked
 30464  018C0C  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30465  018C0E  0E00               	movlw	0
 30466  018C10  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30467  018C12  0E01               	movlw	1
 30468  018C14  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30469  018C16  0E00               	movlw	0
 30470  018C18  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30471  018C1A  0E4C               	movlw	76
 30472  018C1C  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30473  018C1E  0EBD               	movlw	low _I2C_STATUS
 30474  018C20  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30475  018C22  0E01               	movlw	high _I2C_STATUS
 30476  018C24  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30477  018C26  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30478  018C2A                     l21990:
 30479  018C2A  0E02               	movlw	2
 30480  018C2C  0101               	movlb	1	; () banked
 30481  018C2E  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30482  018C30  B4D8               	btfsc	status,2,c
 30483  018C32  D7FB               	goto	l21990
 30484                           
 30485                           ; BSR set to: 1
 30486                           ;LM73_I2C.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 137: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 139: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 140: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30487  018C34  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30488  018C36  B4D8               	btfsc	status,2,c
 30489  018C38  D010               	goto	u28120
 30490                           
 30491                           ; BSR set to: 1
 30492  018C3A  0E03               	movlw	3
 30493  018C3C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30494  018C3E  B4D8               	btfsc	status,2,c
 30495  018C40  D00C               	goto	u28120
 30496                           
 30497                           ; BSR set to: 1
 30498  018C42  0E04               	movlw	4
 30499  018C44  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30500  018C46  B4D8               	btfsc	status,2,c
 30501  018C48  D008               	goto	u28120
 30502                           
 30503                           ; BSR set to: 1
 30504  018C4A  0E05               	movlw	5
 30505  018C4C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30506  018C4E  B4D8               	btfsc	status,2,c
 30507  018C50  D004               	goto	u28120
 30508                           
 30509                           ; BSR set to: 1
 30510  018C52  0E06               	movlw	6
 30511  018C54  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30512  018C56  A4D8               	btfss	status,2,c
 30513  018C58  D003               	goto	l22004
 30514  018C5A                     u28120:
 30515                           
 30516                           ; BSR set to: 1
 30517                           ;LM73_I2C.c: 141: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 30518  018C5A  0E01               	movlw	1
 30519  018C5C  0100               	movlb	0	; () banked
 30520  018C5E  6FCA               	movwf	(_error_handler+5)& (0+255),b
 30521  018C60                     l22004:
 30522                           
 30523                           ;LM73_I2C.c: 142: };LM73_I2C.c: 144: I2C2_MasterRead(LM73_temp_results.POS5_data_raw, 2,
      +                           0x4C, &I2C_STATUS);
 30524  018C60  0EAA               	movlw	low (_LM73_temp_results+14)
 30525  018C62  0102               	movlb	2	; () banked
 30526  018C64  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 30527  018C66  0E01               	movlw	high (_LM73_temp_results+14)
 30528  018C68  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 30529  018C6A  0E02               	movlw	2
 30530  018C6C  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 30531  018C6E  0E00               	movlw	0
 30532  018C70  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 30533  018C72  0E4C               	movlw	76
 30534  018C74  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 30535  018C76  0EBD               	movlw	low _I2C_STATUS
 30536  018C78  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 30537  018C7A  0E01               	movlw	high _I2C_STATUS
 30538  018C7C  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 30539  018C7E  EC21  F0D9         	call	_I2C2_MasterRead	;wreg free
 30540  018C82                     l22006:
 30541  018C82  0E02               	movlw	2
 30542  018C84  0101               	movlb	1	; () banked
 30543  018C86  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30544  018C88  B4D8               	btfsc	status,2,c
 30545  018C8A  D7FB               	goto	l22006
 30546                           
 30547                           ; BSR set to: 1
 30548                           ;LM73_I2C.c: 146: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 147: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 148: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 149: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 150: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30549  018C8C  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30550  018C8E  B4D8               	btfsc	status,2,c
 30551  018C90  D010               	goto	u28180
 30552                           
 30553                           ; BSR set to: 1
 30554  018C92  0E03               	movlw	3
 30555  018C94  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30556  018C96  B4D8               	btfsc	status,2,c
 30557  018C98  D00C               	goto	u28180
 30558                           
 30559                           ; BSR set to: 1
 30560  018C9A  0E04               	movlw	4
 30561  018C9C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30562  018C9E  B4D8               	btfsc	status,2,c
 30563  018CA0  D008               	goto	u28180
 30564                           
 30565                           ; BSR set to: 1
 30566  018CA2  0E05               	movlw	5
 30567  018CA4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30568  018CA6  B4D8               	btfsc	status,2,c
 30569  018CA8  D004               	goto	u28180
 30570                           
 30571                           ; BSR set to: 1
 30572  018CAA  0E06               	movlw	6
 30573  018CAC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30574  018CAE  A4D8               	btfss	status,2,c
 30575  018CB0  D003               	goto	l22020
 30576  018CB2                     u28180:
 30577                           
 30578                           ; BSR set to: 1
 30579                           ;LM73_I2C.c: 151: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 30580  018CB2  0E01               	movlw	1
 30581  018CB4  0100               	movlb	0	; () banked
 30582  018CB6  6FCA               	movwf	(_error_handler+5)& (0+255),b
 30583  018CB8                     l22020:
 30584                           
 30585                           ;LM73_I2C.c: 152: };LM73_I2C.c: 156: I2C2_MasterWrite(0x00, 1, 0x4E, &I2C_STATUS);
 30586  018CB8  0E00               	movlw	0
 30587  018CBA  0102               	movlb	2	; () banked
 30588  018CBC  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30589  018CBE  0E00               	movlw	0
 30590  018CC0  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30591  018CC2  0E01               	movlw	1
 30592  018CC4  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30593  018CC6  0E00               	movlw	0
 30594  018CC8  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30595  018CCA  0E4E               	movlw	78
 30596  018CCC  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30597  018CCE  0EBD               	movlw	low _I2C_STATUS
 30598  018CD0  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30599  018CD2  0E01               	movlw	high _I2C_STATUS
 30600  018CD4  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30601  018CD6  ECF9  F0D8         	call	_I2C2_MasterWrite	;wreg free
 30602  018CDA                     l22022:
 30603  018CDA  0E02               	movlw	2
 30604  018CDC  0101               	movlb	1	; () banked
 30605  018CDE  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30606  018CE0  B4D8               	btfsc	status,2,c
 30607  018CE2  D7FB               	goto	l22022
 30608                           
 30609                           ; BSR set to: 1
 30610                           ;LM73_I2C.c: 158: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 159: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 160: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 161: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 162: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30611  018CE4  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30612  018CE6  B4D8               	btfsc	status,2,c
 30613  018CE8  D010               	goto	u28240
 30614                           
 30615                           ; BSR set to: 1
 30616  018CEA  0E03               	movlw	3
 30617  018CEC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30618  018CEE  B4D8               	btfsc	status,2,c
 30619  018CF0  D00C               	goto	u28240
 30620                           
 30621                           ; BSR set to: 1
 30622  018CF2  0E04               	movlw	4
 30623  018CF4  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30624  018CF6  B4D8               	btfsc	status,2,c
 30625  018CF8  D008               	goto	u28240
 30626                           
 30627                           ; BSR set to: 1
 30628  018CFA  0E05               	movlw	5
 30629  018CFC  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30630  018CFE  B4D8               	btfsc	status,2,c
 30631  018D00  D004               	goto	u28240
 30632                           
 30633                           ; BSR set to: 1
 30634  018D02  0E06               	movlw	6
 30635  018D04  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30636  018D06  A4D8               	btfss	status,2,c
 30637  018D08  D003               	goto	l22036
 30638  018D0A                     u28240:
 30639                           
 30640                           ; BSR set to: 1
 30641                           ;LM73_I2C.c: 163: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 30642  018D0A  0E01               	movlw	1
 30643  018D0C  0100               	movlb	0	; () banked
 30644  018D0E  6FCB               	movwf	(_error_handler+6)& (0+255),b
 30645  018D10                     l22036:
 30646                           
 30647                           ;LM73_I2C.c: 164: };LM73_I2C.c: 166: I2C2_MasterRead(LM73_temp_results.Ambient_data_raw,
      +                           2, 0x4E, &I2C_STATUS);
 30648  018D10  0EAC               	movlw	low (_LM73_temp_results+16)
 30649  018D12  0102               	movlb	2	; () banked
 30650  018D14  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 30651  018D16  0E01               	movlw	high (_LM73_temp_results+16)
 30652  018D18  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 30653  018D1A  0E02               	movlw	2
 30654  018D1C  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 30655  018D1E  0E00               	movlw	0
 30656  018D20  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 30657  018D22  0E4E               	movlw	78
 30658  018D24  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 30659  018D26  0EBD               	movlw	low _I2C_STATUS
 30660  018D28  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 30661  018D2A  0E01               	movlw	high _I2C_STATUS
 30662  018D2C  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 30663  018D2E  EC21  F0D9         	call	_I2C2_MasterRead	;wreg free
 30664  018D32                     l22038:
 30665  018D32  0E02               	movlw	2
 30666  018D34  0101               	movlb	1	; () banked
 30667  018D36  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30668  018D38  B4D8               	btfsc	status,2,c
 30669  018D3A  D7FB               	goto	l22038
 30670                           
 30671                           ; BSR set to: 1
 30672                           ;LM73_I2C.c: 168: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 169: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 170: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 171: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 172: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 30673  018D3C  05BD               	decf	_I2C_STATUS& (0+255),w,b
 30674  018D3E  B4D8               	btfsc	status,2,c
 30675  018D40  D010               	goto	u28300
 30676                           
 30677                           ; BSR set to: 1
 30678  018D42  0E03               	movlw	3
 30679  018D44  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30680  018D46  B4D8               	btfsc	status,2,c
 30681  018D48  D00C               	goto	u28300
 30682                           
 30683                           ; BSR set to: 1
 30684  018D4A  0E04               	movlw	4
 30685  018D4C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30686  018D4E  B4D8               	btfsc	status,2,c
 30687  018D50  D008               	goto	u28300
 30688                           
 30689                           ; BSR set to: 1
 30690  018D52  0E05               	movlw	5
 30691  018D54  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30692  018D56  B4D8               	btfsc	status,2,c
 30693  018D58  D004               	goto	u28300
 30694                           
 30695                           ; BSR set to: 1
 30696  018D5A  0E06               	movlw	6
 30697  018D5C  19BD               	xorwf	_I2C_STATUS& (0+255),w,b
 30698  018D5E  A4D8               	btfss	status,2,c
 30699  018D60  D003               	goto	l22052
 30700  018D62                     u28300:
 30701                           
 30702                           ; BSR set to: 1
 30703                           ;LM73_I2C.c: 173: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 30704  018D62  0E01               	movlw	1
 30705  018D64  0100               	movlb	0	; () banked
 30706  018D66  6FCB               	movwf	(_error_handler+6)& (0+255),b
 30707  018D68                     l22052:
 30708                           
 30709                           ;LM73_I2C.c: 174: };LM73_I2C.c: 177: LM73Convert();
 30710  018D68  ECF2  F0BC         	call	_LM73Convert	;wreg free
 30711                           
 30712                           ;LM73_I2C.c: 179: LM73_start_flag = 0;
 30713  018D6C  0E00               	movlw	0
 30714  018D6E  0102               	movlb	2	; () banked
 30715  018D70  6FB8               	movwf	_LM73_start_flag& (0+255),b
 30716                           
 30717                           ; BSR set to: 2
 30718  018D72  0012               	return		;funcret
 30719  018D74                     __end_of_LM73AcquisitionHandler:
 30720                           	opt callstack 0
 30721                           
 30722 ;; *************** function _LM73Convert *****************
 30723 ;; Defined at:
 30724 ;;		line 184 in file "LM73_I2C.c"
 30725 ;; Parameters:    Size  Location     Type
 30726 ;;		None
 30727 ;; Auto vars:     Size  Location     Type
 30728 ;;  Ambient_Conv    2   46[BANK2 ] unsigned int 
 30729 ;;  POS5_Conv       2   44[BANK2 ] unsigned int 
 30730 ;;  QI_Conv         2   42[BANK2 ] unsigned int 
 30731 ;; Return value:  Size  Location     Type
 30732 ;;                  1    wreg      void 
 30733 ;; Registers used:
 30734 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30735 ;; Tracked objects:
 30736 ;;		On entry : 0/0
 30737 ;;		On exit  : 0/0
 30738 ;;		Unchanged: 0/0
 30739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30741 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30742 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30743 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30744 ;;Total ram usage:        9 bytes
 30745 ;; Hardware stack levels used:    1
 30746 ;; Hardware stack levels required when called:   12
 30747 ;; This function calls:
 30748 ;;		___flmul
 30749 ;;		___xxtofl
 30750 ;; This function is called by:
 30751 ;;		_LM73AcquisitionHandler
 30752 ;; This function uses a non-reentrant model
 30753 ;;
 30754                           
 30755                           	psect	text111
 30756  0179E4                     __ptext111:
 30757                           	opt callstack 0
 30758  0179E4                     _LM73Convert:
 30759                           	opt callstack 17
 30760                           
 30761                           ;LM73_I2C.c: 186: uint16_t QI_Conv, POS5_Conv, Ambient_Conv;;LM73_I2C.c: 189: QI_Conv = 
      +                          LM73_temp_results.QI_data_raw[0] << 6 | LM73_temp_results.QI_data_raw[1] >> 2;
 30762                           
 30763                           ; BSR set to: 2
 30764                           ;incstack = 0
 30765  0179E4  0101               	movlb	1	; () banked
 30766  0179E6  51A8               	movf	(_LM73_temp_results+12)& (0+255),w,b
 30767  0179E8  0102               	movlb	2	; () banked
 30768  0179EA  6F27               	movwf	??_LM73Convert& (0+255),b
 30769  0179EC  6B28               	clrf	(??_LM73Convert+1)& (0+255),b
 30770  0179EE  0E06               	movlw	6
 30771  0179F0                     u26695:
 30772  0179F0  90D8               	bcf	status,0,c
 30773  0179F2  3727               	rlcf	??_LM73Convert& (0+255),f,b
 30774  0179F4  3728               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 30775  0179F6  2EE8               	decfsz	wreg,f,c
 30776  0179F8  D7FB               	goto	u26695
 30777  0179FA  C1A9  F229         	movff	_LM73_temp_results+13,??_LM73Convert+2
 30778  0179FE  90D8               	bcf	status,0,c
 30779  017A00  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 30780  017A02  90D8               	bcf	status,0,c
 30781  017A04  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 30782  017A06  5129               	movf	(??_LM73Convert+2)& (0+255),w,b
 30783  017A08  1127               	iorwf	??_LM73Convert& (0+255),w,b
 30784  017A0A  6F2A               	movwf	LM73Convert@QI_Conv& (0+255),b
 30785  017A0C  5128               	movf	(??_LM73Convert+1)& (0+255),w,b
 30786  017A0E  6F2B               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 30787                           
 30788                           ;LM73_I2C.c: 193: if ((LM73_temp_results.QI_data_raw[0] >> 6) == 1) {
 30789  017A10  0101               	movlb	1	; () banked
 30790  017A12  45A8               	rlncf	(_LM73_temp_results+12)& (0+255),w,b
 30791  017A14  46E8               	rlncf	wreg,f,c
 30792  017A16  0B03               	andlw	3
 30793  017A18  06E8               	decf	wreg,f,c
 30794  017A1A  A4D8               	btfss	status,2,c
 30795  017A1C  D026               	goto	l20654
 30796                           
 30797                           ; BSR set to: 1
 30798                           ;LM73_I2C.c: 194: QI_Conv = ~(QI_Conv);
 30799  017A1E  0102               	movlb	2	; () banked
 30800  017A20  1F2A               	comf	LM73Convert@QI_Conv& (0+255),f,b
 30801  017A22  1F2B               	comf	(LM73Convert@QI_Conv+1)& (0+255),f,b
 30802                           
 30803                           ; BSR set to: 2
 30804                           ;LM73_I2C.c: 196: QI_Conv = QI_Conv & 0x1FFF;
 30805  017A24  0EFF               	movlw	255
 30806  017A26  152A               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 30807  017A28  6F2A               	movwf	LM73Convert@QI_Conv& (0+255),b
 30808  017A2A  0E1F               	movlw	31
 30809  017A2C  152B               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 30810  017A2E  6F2B               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 30811                           
 30812                           ; BSR set to: 2
 30813                           ;LM73_I2C.c: 197: LM73_temp_results.QI_temp_result = -0.03125 * QI_Conv;
 30814  017A30  C22A  F200         	movff	LM73Convert@QI_Conv,___xxtofl@val
 30815  017A34  C22B  F201         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 30816  017A38  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 30817  017A3A  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 30818  017A3C  0E00               	movlw	0
 30819  017A3E  EC19  F0C9         	call	___xxtofl
 30820  017A42  C200  F20E         	movff	?___xxtofl,___flmul@b
 30821  017A46  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 30822  017A4A  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 30823  017A4E  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 30824  017A52  0E00               	movlw	0
 30825  017A54  0102               	movlb	2	; () banked
 30826  017A56  6F12               	movwf	___flmul@a& (0+255),b
 30827  017A58  0E00               	movlw	0
 30828  017A5A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 30829  017A5C  0E00               	movlw	0
 30830  017A5E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 30831  017A60  0EBD               	movlw	189
 30832  017A62  6F15               	movwf	(___flmul@a+3)& (0+255),b
 30833  017A64  ECA8  F0B0         	call	___flmul	;wreg free
 30834  017A68  D023               	goto	L22
 30835  017A6A                     l20654:
 30836                           
 30837                           ; BSR set to: 1
 30838                           ;LM73_I2C.c: 200: else {;LM73_I2C.c: 202: QI_Conv = QI_Conv & 0x1FFF;
 30839  017A6A  0EFF               	movlw	255
 30840  017A6C  0102               	movlb	2	; () banked
 30841  017A6E  152A               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 30842  017A70  6F2A               	movwf	LM73Convert@QI_Conv& (0+255),b
 30843  017A72  0E1F               	movlw	31
 30844  017A74  152B               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 30845  017A76  6F2B               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 30846                           
 30847                           ; BSR set to: 2
 30848                           ;LM73_I2C.c: 203: LM73_temp_results.QI_temp_result = 0.03125 * QI_Conv;
 30849  017A78  C22A  F200         	movff	LM73Convert@QI_Conv,___xxtofl@val
 30850  017A7C  C22B  F201         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 30851  017A80  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 30852  017A82  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 30853  017A84  0E00               	movlw	0
 30854  017A86  EC19  F0C9         	call	___xxtofl
 30855  017A8A  C200  F20E         	movff	?___xxtofl,___flmul@b
 30856  017A8E  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 30857  017A92  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 30858  017A96  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 30859  017A9A  0E00               	movlw	0
 30860  017A9C  0102               	movlb	2	; () banked
 30861  017A9E  6F12               	movwf	___flmul@a& (0+255),b
 30862  017AA0  0E00               	movlw	0
 30863  017AA2  6F13               	movwf	(___flmul@a+1)& (0+255),b
 30864  017AA4  0E00               	movlw	0
 30865  017AA6  6F14               	movwf	(___flmul@a+2)& (0+255),b
 30866  017AA8  0E3D               	movlw	61
 30867  017AAA  6F15               	movwf	(___flmul@a+3)& (0+255),b
 30868  017AAC  ECA8  F0B0         	call	___flmul	;wreg free
 30869  017AB0                     L22:
 30870  017AB0  C20E  F19C         	movff	?___flmul,_LM73_temp_results
 30871  017AB4  C20F  F19D         	movff	?___flmul+1,_LM73_temp_results+1
 30872  017AB8  C210  F19E         	movff	?___flmul+2,_LM73_temp_results+2
 30873  017ABC  C211  F19F         	movff	?___flmul+3,_LM73_temp_results+3
 30874                           
 30875                           ;LM73_I2C.c: 204: };LM73_I2C.c: 207: POS5_Conv = LM73_temp_results.POS5_data_raw[0] << 6
      +                           | LM73_temp_results.POS5_data_raw[1] >> 2;
 30876  017AC0  0101               	movlb	1	; () banked
 30877  017AC2  51AA               	movf	(_LM73_temp_results+14)& (0+255),w,b
 30878  017AC4  0102               	movlb	2	; () banked
 30879  017AC6  6F27               	movwf	??_LM73Convert& (0+255),b
 30880  017AC8  6B28               	clrf	(??_LM73Convert+1)& (0+255),b
 30881  017ACA  0E06               	movlw	6
 30882  017ACC                     u26715:
 30883  017ACC  90D8               	bcf	status,0,c
 30884  017ACE  3727               	rlcf	??_LM73Convert& (0+255),f,b
 30885  017AD0  3728               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 30886  017AD2  2EE8               	decfsz	wreg,f,c
 30887  017AD4  D7FB               	goto	u26715
 30888  017AD6  C1AB  F229         	movff	_LM73_temp_results+15,??_LM73Convert+2
 30889  017ADA  90D8               	bcf	status,0,c
 30890  017ADC  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 30891  017ADE  90D8               	bcf	status,0,c
 30892  017AE0  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 30893  017AE2  5129               	movf	(??_LM73Convert+2)& (0+255),w,b
 30894  017AE4  1127               	iorwf	??_LM73Convert& (0+255),w,b
 30895  017AE6  6F2C               	movwf	LM73Convert@POS5_Conv& (0+255),b
 30896  017AE8  5128               	movf	(??_LM73Convert+1)& (0+255),w,b
 30897  017AEA  6F2D               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 30898                           
 30899                           ; BSR set to: 2
 30900                           ;LM73_I2C.c: 211: if ((LM73_temp_results.POS5_data_raw[0] >> 6) == 1) {
 30901  017AEC  0101               	movlb	1	; () banked
 30902  017AEE  45AA               	rlncf	(_LM73_temp_results+14)& (0+255),w,b
 30903  017AF0  46E8               	rlncf	wreg,f,c
 30904  017AF2  0B03               	andlw	3
 30905  017AF4  06E8               	decf	wreg,f,c
 30906  017AF6  A4D8               	btfss	status,2,c
 30907  017AF8  D026               	goto	l20668
 30908                           
 30909                           ; BSR set to: 1
 30910                           ;LM73_I2C.c: 212: POS5_Conv = ~(POS5_Conv);
 30911  017AFA  0102               	movlb	2	; () banked
 30912  017AFC  1F2C               	comf	LM73Convert@POS5_Conv& (0+255),f,b
 30913  017AFE  1F2D               	comf	(LM73Convert@POS5_Conv+1)& (0+255),f,b
 30914                           
 30915                           ; BSR set to: 2
 30916                           ;LM73_I2C.c: 214: POS5_Conv = POS5_Conv & 0x1FFF;
 30917  017B00  0EFF               	movlw	255
 30918  017B02  152C               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 30919  017B04  6F2C               	movwf	LM73Convert@POS5_Conv& (0+255),b
 30920  017B06  0E1F               	movlw	31
 30921  017B08  152D               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 30922  017B0A  6F2D               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 30923                           
 30924                           ; BSR set to: 2
 30925                           ;LM73_I2C.c: 215: LM73_temp_results.POS5_temp_result = -0.03125 * POS5_Conv;
 30926  017B0C  C22C  F200         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 30927  017B10  C22D  F201         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 30928  017B14  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 30929  017B16  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 30930  017B18  0E00               	movlw	0
 30931  017B1A  EC19  F0C9         	call	___xxtofl
 30932  017B1E  C200  F20E         	movff	?___xxtofl,___flmul@b
 30933  017B22  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 30934  017B26  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 30935  017B2A  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 30936  017B2E  0E00               	movlw	0
 30937  017B30  0102               	movlb	2	; () banked
 30938  017B32  6F12               	movwf	___flmul@a& (0+255),b
 30939  017B34  0E00               	movlw	0
 30940  017B36  6F13               	movwf	(___flmul@a+1)& (0+255),b
 30941  017B38  0E00               	movlw	0
 30942  017B3A  6F14               	movwf	(___flmul@a+2)& (0+255),b
 30943  017B3C  0EBD               	movlw	189
 30944  017B3E  6F15               	movwf	(___flmul@a+3)& (0+255),b
 30945  017B40  ECA8  F0B0         	call	___flmul	;wreg free
 30946  017B44  D023               	goto	L23
 30947  017B46                     l20668:
 30948                           
 30949                           ; BSR set to: 1
 30950                           ;LM73_I2C.c: 218: else {;LM73_I2C.c: 220: POS5_Conv = POS5_Conv & 0x1FFF;
 30951  017B46  0EFF               	movlw	255
 30952  017B48  0102               	movlb	2	; () banked
 30953  017B4A  152C               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 30954  017B4C  6F2C               	movwf	LM73Convert@POS5_Conv& (0+255),b
 30955  017B4E  0E1F               	movlw	31
 30956  017B50  152D               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 30957  017B52  6F2D               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 30958                           
 30959                           ; BSR set to: 2
 30960                           ;LM73_I2C.c: 221: LM73_temp_results.POS5_temp_result = 0.03125 * POS5_Conv;
 30961  017B54  C22C  F200         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 30962  017B58  C22D  F201         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 30963  017B5C  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 30964  017B5E  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 30965  017B60  0E00               	movlw	0
 30966  017B62  EC19  F0C9         	call	___xxtofl
 30967  017B66  C200  F20E         	movff	?___xxtofl,___flmul@b
 30968  017B6A  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 30969  017B6E  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 30970  017B72  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 30971  017B76  0E00               	movlw	0
 30972  017B78  0102               	movlb	2	; () banked
 30973  017B7A  6F12               	movwf	___flmul@a& (0+255),b
 30974  017B7C  0E00               	movlw	0
 30975  017B7E  6F13               	movwf	(___flmul@a+1)& (0+255),b
 30976  017B80  0E00               	movlw	0
 30977  017B82  6F14               	movwf	(___flmul@a+2)& (0+255),b
 30978  017B84  0E3D               	movlw	61
 30979  017B86  6F15               	movwf	(___flmul@a+3)& (0+255),b
 30980  017B88  ECA8  F0B0         	call	___flmul	;wreg free
 30981  017B8C                     L23:
 30982  017B8C  C20E  F1A0         	movff	?___flmul,_LM73_temp_results+4
 30983  017B90  C20F  F1A1         	movff	?___flmul+1,_LM73_temp_results+5
 30984  017B94  C210  F1A2         	movff	?___flmul+2,_LM73_temp_results+6
 30985  017B98  C211  F1A3         	movff	?___flmul+3,_LM73_temp_results+7
 30986                           
 30987                           ;LM73_I2C.c: 222: };LM73_I2C.c: 225: Ambient_Conv = LM73_temp_results.Ambient_data_raw[0
      +                          ] << 6 | LM73_temp_results.Ambient_data_raw[1] >> 2;
 30988  017B9C  0101               	movlb	1	; () banked
 30989  017B9E  51AC               	movf	(_LM73_temp_results+16)& (0+255),w,b
 30990  017BA0  0102               	movlb	2	; () banked
 30991  017BA2  6F27               	movwf	??_LM73Convert& (0+255),b
 30992  017BA4  6B28               	clrf	(??_LM73Convert+1)& (0+255),b
 30993  017BA6  0E06               	movlw	6
 30994  017BA8                     u26735:
 30995  017BA8  90D8               	bcf	status,0,c
 30996  017BAA  3727               	rlcf	??_LM73Convert& (0+255),f,b
 30997  017BAC  3728               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 30998  017BAE  2EE8               	decfsz	wreg,f,c
 30999  017BB0  D7FB               	goto	u26735
 31000  017BB2  C1AD  F229         	movff	_LM73_temp_results+17,??_LM73Convert+2
 31001  017BB6  90D8               	bcf	status,0,c
 31002  017BB8  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 31003  017BBA  90D8               	bcf	status,0,c
 31004  017BBC  3329               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 31005  017BBE  5129               	movf	(??_LM73Convert+2)& (0+255),w,b
 31006  017BC0  1127               	iorwf	??_LM73Convert& (0+255),w,b
 31007  017BC2  6F2E               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 31008  017BC4  5128               	movf	(??_LM73Convert+1)& (0+255),w,b
 31009  017BC6  6F2F               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 31010                           
 31011                           ; BSR set to: 2
 31012                           ;LM73_I2C.c: 229: if ((LM73_temp_results.Ambient_data_raw[0] >> 6) == 1) {
 31013  017BC8  0101               	movlb	1	; () banked
 31014  017BCA  45AC               	rlncf	(_LM73_temp_results+16)& (0+255),w,b
 31015  017BCC  46E8               	rlncf	wreg,f,c
 31016  017BCE  0B03               	andlw	3
 31017  017BD0  06E8               	decf	wreg,f,c
 31018  017BD2  A4D8               	btfss	status,2,c
 31019  017BD4  D026               	goto	l20682
 31020                           
 31021                           ; BSR set to: 1
 31022                           ;LM73_I2C.c: 230: Ambient_Conv = ~(Ambient_Conv);
 31023  017BD6  0102               	movlb	2	; () banked
 31024  017BD8  1F2E               	comf	LM73Convert@Ambient_Conv& (0+255),f,b
 31025  017BDA  1F2F               	comf	(LM73Convert@Ambient_Conv+1)& (0+255),f,b
 31026                           
 31027                           ; BSR set to: 2
 31028                           ;LM73_I2C.c: 232: Ambient_Conv = Ambient_Conv & 0x1FFF;
 31029  017BDC  0EFF               	movlw	255
 31030  017BDE  152E               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 31031  017BE0  6F2E               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 31032  017BE2  0E1F               	movlw	31
 31033  017BE4  152F               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 31034  017BE6  6F2F               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 31035                           
 31036                           ; BSR set to: 2
 31037                           ;LM73_I2C.c: 233: LM73_temp_results.Ambient_temp_result = -0.03125 * Ambient_Conv;
 31038  017BE8  C22E  F200         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 31039  017BEC  C22F  F201         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 31040  017BF0  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 31041  017BF2  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 31042  017BF4  0E00               	movlw	0
 31043  017BF6  EC19  F0C9         	call	___xxtofl
 31044  017BFA  C200  F20E         	movff	?___xxtofl,___flmul@b
 31045  017BFE  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 31046  017C02  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 31047  017C06  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 31048  017C0A  0E00               	movlw	0
 31049  017C0C  0102               	movlb	2	; () banked
 31050  017C0E  6F12               	movwf	___flmul@a& (0+255),b
 31051  017C10  0E00               	movlw	0
 31052  017C12  6F13               	movwf	(___flmul@a+1)& (0+255),b
 31053  017C14  0E00               	movlw	0
 31054  017C16  6F14               	movwf	(___flmul@a+2)& (0+255),b
 31055  017C18  0EBD               	movlw	189
 31056  017C1A  6F15               	movwf	(___flmul@a+3)& (0+255),b
 31057  017C1C  ECA8  F0B0         	call	___flmul	;wreg free
 31058  017C20  D023               	goto	L24
 31059  017C22                     l20682:
 31060                           
 31061                           ; BSR set to: 1
 31062                           ;LM73_I2C.c: 236: else {;LM73_I2C.c: 238: Ambient_Conv = Ambient_Conv & 0x1FFF;
 31063  017C22  0EFF               	movlw	255
 31064  017C24  0102               	movlb	2	; () banked
 31065  017C26  152E               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 31066  017C28  6F2E               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 31067  017C2A  0E1F               	movlw	31
 31068  017C2C  152F               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 31069  017C2E  6F2F               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 31070                           
 31071                           ; BSR set to: 2
 31072                           ;LM73_I2C.c: 239: LM73_temp_results.Ambient_temp_result = 0.03125 * Ambient_Conv;
 31073  017C30  C22E  F200         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 31074  017C34  C22F  F201         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 31075  017C38  6B02               	clrf	(___xxtofl@val+2)& (0+255),b
 31076  017C3A  6B03               	clrf	(___xxtofl@val+3)& (0+255),b
 31077  017C3C  0E00               	movlw	0
 31078  017C3E  EC19  F0C9         	call	___xxtofl
 31079  017C42  C200  F20E         	movff	?___xxtofl,___flmul@b
 31080  017C46  C201  F20F         	movff	?___xxtofl+1,___flmul@b+1
 31081  017C4A  C202  F210         	movff	?___xxtofl+2,___flmul@b+2
 31082  017C4E  C203  F211         	movff	?___xxtofl+3,___flmul@b+3
 31083  017C52  0E00               	movlw	0
 31084  017C54  0102               	movlb	2	; () banked
 31085  017C56  6F12               	movwf	___flmul@a& (0+255),b
 31086  017C58  0E00               	movlw	0
 31087  017C5A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 31088  017C5C  0E00               	movlw	0
 31089  017C5E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 31090  017C60  0E3D               	movlw	61
 31091  017C62  6F15               	movwf	(___flmul@a+3)& (0+255),b
 31092  017C64  ECA8  F0B0         	call	___flmul	;wreg free
 31093  017C68                     L24:
 31094  017C68  C20E  F1A4         	movff	?___flmul,_LM73_temp_results+8
 31095  017C6C  C20F  F1A5         	movff	?___flmul+1,_LM73_temp_results+9
 31096  017C70  C210  F1A6         	movff	?___flmul+2,_LM73_temp_results+10
 31097  017C74  C211  F1A7         	movff	?___flmul+3,_LM73_temp_results+11
 31098                           
 31099                           ;LM73_I2C.c: 240: };LM73_I2C.c: 243: PIE0bits.INT1IE = 1;
 31100  017C78  010E               	movlb	14	; () banked
 31101  017C7A  83C2               	bsf	194,1,b	;volatile
 31102                           
 31103                           ; BSR set to: 14
 31104                           ;LM73_I2C.c: 244: PIE0bits.INT2IE = 1;
 31105  017C7C  85C2               	bsf	194,2,b	;volatile
 31106                           
 31107                           ; BSR set to: 14
 31108  017C7E  0012               	return		;funcret
 31109  017C80                     __end_of_LM73Convert:
 31110                           	opt callstack 0
 31111                           
 31112 ;; *************** function ___xxtofl *****************
 31113 ;; Defined at:
 31114 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 31115 ;; Parameters:    Size  Location     Type
 31116 ;;  sign            1    wreg     unsigned char 
 31117 ;;  val             4    0[BANK2 ] long 
 31118 ;; Auto vars:     Size  Location     Type
 31119 ;;  sign            1    8[BANK2 ] unsigned char 
 31120 ;;  arg             4   10[BANK2 ] unsigned long 
 31121 ;;  exp             1    9[BANK2 ] unsigned char 
 31122 ;; Return value:  Size  Location     Type
 31123 ;;                  4    0[BANK2 ] unsigned char 
 31124 ;; Registers used:
 31125 ;;		wreg, status,2, status,0
 31126 ;; Tracked objects:
 31127 ;;		On entry : 0/0
 31128 ;;		On exit  : 0/0
 31129 ;;		Unchanged: 0/0
 31130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31131 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31132 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31133 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31134 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31135 ;;Total ram usage:       14 bytes
 31136 ;; Hardware stack levels used:    1
 31137 ;; Hardware stack levels required when called:   11
 31138 ;; This function calls:
 31139 ;;		Nothing
 31140 ;; This function is called by:
 31141 ;;		_LM73Convert
 31142 ;;		__doprnt
 31143 ;;		_ftoa
 31144 ;; This function uses a non-reentrant model
 31145 ;;
 31146                           
 31147                           	psect	text112
 31148  019232                     __ptext112:
 31149                           	opt callstack 0
 31150  019232                     ___xxtofl:
 31151                           	opt callstack 14
 31152                           
 31153                           ; BSR set to: 14
 31154                           ;incstack = 0
 31155                           ;___xxtofl@sign stored from wreg
 31156  019232  0102               	movlb	2	; () banked
 31157  019234  6F08               	movwf	___xxtofl@sign& (0+255),b
 31158  019236  0102               	movlb	2	; () banked
 31159  019238  5108               	movf	___xxtofl@sign& (0+255),w,b
 31160  01923A  A4D8               	btfss	status,2,c
 31161                           
 31162                           ; BSR set to: 2
 31163  01923C  AF03               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31164  01923E  D01A               	goto	l3256
 31165                           
 31166                           ; BSR set to: 2
 31167  019240  C200  F204         	movff	___xxtofl@val,??___xxtofl
 31168  019244  C201  F205         	movff	___xxtofl@val+1,??___xxtofl+1
 31169  019248  C202  F206         	movff	___xxtofl@val+2,??___xxtofl+2
 31170  01924C  C203  F207         	movff	___xxtofl@val+3,??___xxtofl+3
 31171  019250  1F04               	comf	??___xxtofl& (0+255),f,b
 31172  019252  1F05               	comf	(??___xxtofl+1)& (0+255),f,b
 31173  019254  1F06               	comf	(??___xxtofl+2)& (0+255),f,b
 31174  019256  1F07               	comf	(??___xxtofl+3)& (0+255),f,b
 31175  019258  2B04               	incf	??___xxtofl& (0+255),f,b
 31176  01925A  0E00               	movlw	0
 31177  01925C  2305               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31178  01925E  2306               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31179  019260  2307               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31180  019262  C204  F20A         	movff	??___xxtofl,___xxtofl@arg
 31181  019266  C205  F20B         	movff	??___xxtofl+1,___xxtofl@arg+1
 31182  01926A  C206  F20C         	movff	??___xxtofl+2,___xxtofl@arg+2
 31183  01926E  C207  F20D         	movff	??___xxtofl+3,___xxtofl@arg+3
 31184  019272  D008               	goto	l17466
 31185  019274                     l3256:
 31186                           
 31187                           ; BSR set to: 2
 31188  019274  C200  F20A         	movff	___xxtofl@val,___xxtofl@arg
 31189  019278  C201  F20B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31190  01927C  C202  F20C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31191  019280  C203  F20D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31192  019284                     l17466:
 31193                           
 31194                           ; BSR set to: 2
 31195  019284  5100               	movf	___xxtofl@val& (0+255),w,b
 31196  019286  1101               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31197  019288  1102               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31198  01928A  1103               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31199  01928C  A4D8               	btfss	status,2,c
 31200  01928E  D009               	goto	l17472
 31201                           
 31202                           ; BSR set to: 2
 31203  019290  0E00               	movlw	0
 31204  019292  6F00               	movwf	?___xxtofl& (0+255),b
 31205  019294  0E00               	movlw	0
 31206  019296  6F01               	movwf	(?___xxtofl+1)& (0+255),b
 31207  019298  0E00               	movlw	0
 31208  01929A  6F02               	movwf	(?___xxtofl+2)& (0+255),b
 31209  01929C  0E00               	movlw	0
 31210  01929E  6F03               	movwf	(?___xxtofl+3)& (0+255),b
 31211  0192A0  0012               	return	
 31212  0192A2                     l17472:
 31213                           
 31214                           ; BSR set to: 2
 31215  0192A2  0E96               	movlw	150
 31216  0192A4  6F09               	movwf	___xxtofl@exp& (0+255),b
 31217  0192A6  D006               	goto	l17476
 31218  0192A8                     l17474:
 31219                           
 31220                           ; BSR set to: 2
 31221  0192A8  2B09               	incf	___xxtofl@exp& (0+255),f,b
 31222  0192AA  90D8               	bcf	status,0,c
 31223  0192AC  330D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31224  0192AE  330C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31225  0192B0  330B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31226  0192B2  330A               	rrcf	___xxtofl@arg& (0+255),f,b
 31227  0192B4                     l17476:
 31228                           
 31229                           ; BSR set to: 2
 31230  0192B4  0E00               	movlw	0
 31231  0192B6  150A               	andwf	___xxtofl@arg& (0+255),w,b
 31232  0192B8  6F04               	movwf	??___xxtofl& (0+255),b
 31233  0192BA  0E00               	movlw	0
 31234  0192BC  150B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31235  0192BE  6F05               	movwf	(??___xxtofl+1)& (0+255),b
 31236  0192C0  0E00               	movlw	0
 31237  0192C2  150C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31238  0192C4  6F06               	movwf	(??___xxtofl+2)& (0+255),b
 31239  0192C6  0EFE               	movlw	254
 31240  0192C8  150D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31241  0192CA  6F07               	movwf	(??___xxtofl+3)& (0+255),b
 31242  0192CC  5104               	movf	??___xxtofl& (0+255),w,b
 31243  0192CE  1105               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31244  0192D0  1106               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31245  0192D2  1107               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31246  0192D4  B4D8               	btfsc	status,2,c
 31247  0192D6  D00D               	goto	l3263
 31248  0192D8  D7E7               	goto	l17474
 31249  0192DA                     l17478:
 31250                           
 31251                           ; BSR set to: 2
 31252  0192DA  2B09               	incf	___xxtofl@exp& (0+255),f,b
 31253                           
 31254                           ; BSR set to: 2
 31255  0192DC  0E01               	movlw	1
 31256  0192DE  270A               	addwf	___xxtofl@arg& (0+255),f,b
 31257  0192E0  0E00               	movlw	0
 31258  0192E2  230B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31259  0192E4  230C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31260  0192E6  230D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31261                           
 31262                           ; BSR set to: 2
 31263  0192E8  90D8               	bcf	status,0,c
 31264  0192EA  330D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31265  0192EC  330C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31266  0192EE  330B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31267  0192F0  330A               	rrcf	___xxtofl@arg& (0+255),f,b
 31268  0192F2                     l3263:
 31269                           
 31270                           ; BSR set to: 2
 31271  0192F2  0E00               	movlw	0
 31272  0192F4  150A               	andwf	___xxtofl@arg& (0+255),w,b
 31273  0192F6  6F04               	movwf	??___xxtofl& (0+255),b
 31274  0192F8  0E00               	movlw	0
 31275  0192FA  150B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31276  0192FC  6F05               	movwf	(??___xxtofl+1)& (0+255),b
 31277  0192FE  0E00               	movlw	0
 31278  019300  150C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31279  019302  6F06               	movwf	(??___xxtofl+2)& (0+255),b
 31280  019304  0EFF               	movlw	255
 31281  019306  150D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31282  019308  6F07               	movwf	(??___xxtofl+3)& (0+255),b
 31283  01930A  5104               	movf	??___xxtofl& (0+255),w,b
 31284  01930C  1105               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31285  01930E  1106               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31286  019310  1107               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31287  019312  B4D8               	btfsc	status,2,c
 31288  019314  D007               	goto	l17486
 31289  019316  D7E1               	goto	l17478
 31290  019318                     l17484:
 31291                           
 31292                           ; BSR set to: 2
 31293  019318  0709               	decf	___xxtofl@exp& (0+255),f,b
 31294  01931A  90D8               	bcf	status,0,c
 31295  01931C  370A               	rlcf	___xxtofl@arg& (0+255),f,b
 31296  01931E  370B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31297  019320  370C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31298  019322  370D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31299  019324                     l17486:
 31300                           
 31301                           ; BSR set to: 2
 31302  019324  BF0C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31303  019326  D003               	goto	u21350
 31304                           
 31305                           ; BSR set to: 2
 31306  019328  0E02               	movlw	2
 31307  01932A  6109               	cpfslt	___xxtofl@exp& (0+255),b
 31308  01932C  D7F5               	goto	l17484
 31309  01932E                     u21350:
 31310                           
 31311                           ; BSR set to: 2
 31312  01932E  A109               	btfss	___xxtofl@exp& (0+255),0,b
 31313                           
 31314                           ; BSR set to: 2
 31315  019330  9F0C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31316                           
 31317                           ; BSR set to: 2
 31318  019332  90D8               	bcf	status,0,c
 31319  019334  3309               	rrcf	___xxtofl@exp& (0+255),f,b
 31320                           
 31321                           ; BSR set to: 2
 31322  019336  C209  F204         	movff	___xxtofl@exp,??___xxtofl
 31323  01933A  6B05               	clrf	(??___xxtofl+1)& (0+255),b
 31324  01933C  6B06               	clrf	(??___xxtofl+2)& (0+255),b
 31325  01933E  6B07               	clrf	(??___xxtofl+3)& (0+255),b
 31326  019340  C204  F207         	movff	??___xxtofl,??___xxtofl+3
 31327  019344  6B06               	clrf	(??___xxtofl+2)& (0+255),b
 31328  019346  6B05               	clrf	(??___xxtofl+1)& (0+255),b
 31329  019348  6B04               	clrf	??___xxtofl& (0+255),b
 31330  01934A  5104               	movf	??___xxtofl& (0+255),w,b
 31331  01934C  130A               	iorwf	___xxtofl@arg& (0+255),f,b
 31332  01934E  5105               	movf	(??___xxtofl+1)& (0+255),w,b
 31333  019350  130B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31334  019352  5106               	movf	(??___xxtofl+2)& (0+255),w,b
 31335  019354  130C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31336  019356  5107               	movf	(??___xxtofl+3)& (0+255),w,b
 31337  019358  130D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31338                           
 31339                           ; BSR set to: 2
 31340  01935A  5108               	movf	___xxtofl@sign& (0+255),w,b
 31341  01935C  A4D8               	btfss	status,2,c
 31342                           
 31343                           ; BSR set to: 2
 31344  01935E  AF03               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31345  019360  D001               	goto	l17502
 31346                           
 31347                           ; BSR set to: 2
 31348  019362  8F0D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31349  019364                     l17502:
 31350                           
 31351                           ; BSR set to: 2
 31352  019364  C20A  F200         	movff	___xxtofl@arg,?___xxtofl
 31353  019368  C20B  F201         	movff	___xxtofl@arg+1,?___xxtofl+1
 31354  01936C  C20C  F202         	movff	___xxtofl@arg+2,?___xxtofl+2
 31355  019370  C20D  F203         	movff	___xxtofl@arg+3,?___xxtofl+3
 31356                           
 31357                           ; BSR set to: 2
 31358  019374  0012               	return		;funcret
 31359  019376                     __end_of___xxtofl:
 31360                           	opt callstack 0
 31361                           
 31362 ;; *************** function ___flmul *****************
 31363 ;; Defined at:
 31364 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 31365 ;; Parameters:    Size  Location     Type
 31366 ;;  b               4   14[BANK2 ] unsigned char 
 31367 ;;  a               4   18[BANK2 ] unsigned char 
 31368 ;; Auto vars:     Size  Location     Type
 31369 ;;  prod            4   33[BANK2 ] struct .
 31370 ;;  grs             4   28[BANK2 ] unsigned long 
 31371 ;;  temp            2   37[BANK2 ] struct .
 31372 ;;  bexp            1   32[BANK2 ] unsigned char 
 31373 ;;  aexp            1   27[BANK2 ] unsigned char 
 31374 ;;  sign            1   26[BANK2 ] unsigned char 
 31375 ;; Return value:  Size  Location     Type
 31376 ;;                  4   14[BANK2 ] unsigned char 
 31377 ;; Registers used:
 31378 ;;		wreg, status,2, status,0, prodl, prodh
 31379 ;; Tracked objects:
 31380 ;;		On entry : 0/0
 31381 ;;		On exit  : 0/0
 31382 ;;		Unchanged: 0/0
 31383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31384 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31385 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31386 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31387 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31388 ;;Total ram usage:       25 bytes
 31389 ;; Hardware stack levels used:    1
 31390 ;; Hardware stack levels required when called:   11
 31391 ;; This function calls:
 31392 ;;		Nothing
 31393 ;; This function is called by:
 31394 ;;		_LM73Convert
 31395 ;;		_fround
 31396 ;;		_scale
 31397 ;;		__doprnt
 31398 ;;		_ftoa
 31399 ;; This function uses a non-reentrant model
 31400 ;;
 31401                           
 31402                           	psect	text113
 31403  016150                     __ptext113:
 31404                           	opt callstack 0
 31405  016150                     ___flmul:
 31406                           	opt callstack 13
 31407                           
 31408                           ; BSR set to: 2
 31409                           ;incstack = 0
 31410  016150  0102               	movlb	2	; () banked
 31411  016152  5111               	movf	(___flmul@b+3)& (0+255),w,b
 31412  016154  0B80               	andlw	128
 31413  016156  6F1A               	movwf	___flmul@sign& (0+255),b
 31414  016158  5111               	movf	(___flmul@b+3)& (0+255),w,b
 31415  01615A  2511               	addwf	(___flmul@b+3)& (0+255),w,b
 31416  01615C  6F20               	movwf	___flmul@bexp& (0+255),b
 31417                           
 31418                           ; BSR set to: 2
 31419  01615E  BF10               	btfsc	(___flmul@b+2)& (0+255),7,b
 31420                           
 31421                           ; BSR set to: 2
 31422  016160  8120               	bsf	___flmul@bexp& (0+255),0,b
 31423                           
 31424                           ; BSR set to: 2
 31425  016162  5120               	movf	___flmul@bexp& (0+255),w,b
 31426  016164  B4D8               	btfsc	status,2,c
 31427  016166  D00D               	goto	l16896
 31428                           
 31429                           ; BSR set to: 2
 31430  016168  2920               	incf	___flmul@bexp& (0+255),w,b
 31431  01616A  A4D8               	btfss	status,2,c
 31432  01616C  D008               	goto	l16894
 31433                           
 31434                           ; BSR set to: 2
 31435  01616E  0E00               	movlw	0
 31436  016170  6F0E               	movwf	___flmul@b& (0+255),b
 31437  016172  0E00               	movlw	0
 31438  016174  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 31439  016176  0E00               	movlw	0
 31440  016178  6F10               	movwf	(___flmul@b+2)& (0+255),b
 31441  01617A  0E00               	movlw	0
 31442  01617C  6F11               	movwf	(___flmul@b+3)& (0+255),b
 31443  01617E                     l16894:
 31444                           
 31445                           ; BSR set to: 2
 31446  01617E  8F10               	bsf	(___flmul@b+2)& (0+255),7,b
 31447  016180  D008               	goto	l16898
 31448  016182                     l16896:
 31449                           
 31450                           ; BSR set to: 2
 31451  016182  0E00               	movlw	0
 31452  016184  6F0E               	movwf	___flmul@b& (0+255),b
 31453  016186  0E00               	movlw	0
 31454  016188  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 31455  01618A  0E00               	movlw	0
 31456  01618C  6F10               	movwf	(___flmul@b+2)& (0+255),b
 31457  01618E  0E00               	movlw	0
 31458  016190  6F11               	movwf	(___flmul@b+3)& (0+255),b
 31459  016192                     l16898:
 31460                           
 31461                           ; BSR set to: 2
 31462  016192  5115               	movf	(___flmul@a+3)& (0+255),w,b
 31463  016194  0B80               	andlw	128
 31464  016196  1B1A               	xorwf	___flmul@sign& (0+255),f,b
 31465                           
 31466                           ; BSR set to: 2
 31467  016198  5115               	movf	(___flmul@a+3)& (0+255),w,b
 31468  01619A  2515               	addwf	(___flmul@a+3)& (0+255),w,b
 31469  01619C  6F1B               	movwf	___flmul@aexp& (0+255),b
 31470                           
 31471                           ; BSR set to: 2
 31472  01619E  BF14               	btfsc	(___flmul@a+2)& (0+255),7,b
 31473                           
 31474                           ; BSR set to: 2
 31475  0161A0  811B               	bsf	___flmul@aexp& (0+255),0,b
 31476                           
 31477                           ; BSR set to: 2
 31478  0161A2  511B               	movf	___flmul@aexp& (0+255),w,b
 31479  0161A4  B4D8               	btfsc	status,2,c
 31480  0161A6  D00D               	goto	l16914
 31481                           
 31482                           ; BSR set to: 2
 31483  0161A8  291B               	incf	___flmul@aexp& (0+255),w,b
 31484  0161AA  A4D8               	btfss	status,2,c
 31485  0161AC  D008               	goto	l16912
 31486                           
 31487                           ; BSR set to: 2
 31488  0161AE  0E00               	movlw	0
 31489  0161B0  6F12               	movwf	___flmul@a& (0+255),b
 31490  0161B2  0E00               	movlw	0
 31491  0161B4  6F13               	movwf	(___flmul@a+1)& (0+255),b
 31492  0161B6  0E00               	movlw	0
 31493  0161B8  6F14               	movwf	(___flmul@a+2)& (0+255),b
 31494  0161BA  0E00               	movlw	0
 31495  0161BC  6F15               	movwf	(___flmul@a+3)& (0+255),b
 31496  0161BE                     l16912:
 31497                           
 31498                           ; BSR set to: 2
 31499  0161BE  8F14               	bsf	(___flmul@a+2)& (0+255),7,b
 31500  0161C0  D008               	goto	l3215
 31501  0161C2                     l16914:
 31502                           
 31503                           ; BSR set to: 2
 31504  0161C2  0E00               	movlw	0
 31505  0161C4  6F12               	movwf	___flmul@a& (0+255),b
 31506  0161C6  0E00               	movlw	0
 31507  0161C8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 31508  0161CA  0E00               	movlw	0
 31509  0161CC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 31510  0161CE  0E00               	movlw	0
 31511  0161D0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 31512  0161D2                     l3215:
 31513                           
 31514                           ; BSR set to: 2
 31515  0161D2  511B               	movf	___flmul@aexp& (0+255),w,b
 31516  0161D4  B4D8               	btfsc	status,2,c
 31517  0161D6  D003               	goto	u20510
 31518                           
 31519                           ; BSR set to: 2
 31520  0161D8  5120               	movf	___flmul@bexp& (0+255),w,b
 31521  0161DA  A4D8               	btfss	status,2,c
 31522  0161DC  D009               	goto	l16922
 31523  0161DE                     u20510:
 31524                           
 31525                           ; BSR set to: 2
 31526  0161DE  0E00               	movlw	0
 31527  0161E0  6F0E               	movwf	?___flmul& (0+255),b
 31528  0161E2  0E00               	movlw	0
 31529  0161E4  6F0F               	movwf	(?___flmul+1)& (0+255),b
 31530  0161E6  0E00               	movlw	0
 31531  0161E8  6F10               	movwf	(?___flmul+2)& (0+255),b
 31532  0161EA  0E00               	movlw	0
 31533  0161EC  6F11               	movwf	(?___flmul+3)& (0+255),b
 31534  0161EE  0012               	return	
 31535  0161F0                     l16922:
 31536                           
 31537                           ; BSR set to: 2
 31538  0161F0  5114               	movf	(___flmul@a+2)& (0+255),w,b
 31539  0161F2  030E               	mulwf	___flmul@b& (0+255),b
 31540  0161F4  CFF3 F225          	movff	prodl,___flmul@temp
 31541  0161F8  CFF4 F226          	movff	prodh,___flmul@temp+1
 31542                           
 31543                           ; BSR set to: 2
 31544  0161FC  5125               	movf	___flmul@temp& (0+255),w,b
 31545  0161FE  6F1C               	movwf	___flmul@grs& (0+255),b
 31546  016200  6B1D               	clrf	(___flmul@grs+1)& (0+255),b
 31547  016202  6B1E               	clrf	(___flmul@grs+2)& (0+255),b
 31548  016204  6B1F               	clrf	(___flmul@grs+3)& (0+255),b
 31549                           
 31550                           ; BSR set to: 2
 31551  016206  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31552  016208  6F21               	movwf	___flmul@prod& (0+255),b
 31553  01620A  6B22               	clrf	(___flmul@prod+1)& (0+255),b
 31554  01620C  6B23               	clrf	(___flmul@prod+2)& (0+255),b
 31555  01620E  6B24               	clrf	(___flmul@prod+3)& (0+255),b
 31556  016210  5113               	movf	(___flmul@a+1)& (0+255),w,b
 31557  016212  030F               	mulwf	(___flmul@b+1)& (0+255),b
 31558  016214  CFF3 F225          	movff	prodl,___flmul@temp
 31559  016218  CFF4 F226          	movff	prodh,___flmul@temp+1
 31560                           
 31561                           ; BSR set to: 2
 31562  01621C  5125               	movf	___flmul@temp& (0+255),w,b
 31563  01621E  271C               	addwf	___flmul@grs& (0+255),f,b
 31564  016220  0E00               	movlw	0
 31565  016222  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31566  016224  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31567  016226  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31568                           
 31569                           ; BSR set to: 2
 31570  016228  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31571  01622A  2721               	addwf	___flmul@prod& (0+255),f,b
 31572  01622C  0E00               	movlw	0
 31573  01622E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31574  016230  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31575  016232  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31576  016234  5112               	movf	___flmul@a& (0+255),w,b
 31577  016236  0310               	mulwf	(___flmul@b+2)& (0+255),b
 31578  016238  CFF3 F225          	movff	prodl,___flmul@temp
 31579  01623C  CFF4 F226          	movff	prodh,___flmul@temp+1
 31580                           
 31581                           ; BSR set to: 2
 31582  016240  5125               	movf	___flmul@temp& (0+255),w,b
 31583  016242  271C               	addwf	___flmul@grs& (0+255),f,b
 31584  016244  0E00               	movlw	0
 31585  016246  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31586  016248  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31587  01624A  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31588                           
 31589                           ; BSR set to: 2
 31590  01624C  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31591  01624E  2721               	addwf	___flmul@prod& (0+255),f,b
 31592  016250  0E00               	movlw	0
 31593  016252  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31594  016254  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31595  016256  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31596                           
 31597                           ; BSR set to: 2
 31598  016258  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 31599  01625C  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 31600  016260  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 31601  016264  6B1C               	clrf	___flmul@grs& (0+255),b
 31602                           
 31603                           ; BSR set to: 2
 31604  016266  5112               	movf	___flmul@a& (0+255),w,b
 31605  016268  030F               	mulwf	(___flmul@b+1)& (0+255),b
 31606  01626A  CFF3 F225          	movff	prodl,___flmul@temp
 31607  01626E  CFF4 F226          	movff	prodh,___flmul@temp+1
 31608                           
 31609                           ; BSR set to: 2
 31610  016272  5125               	movf	___flmul@temp& (0+255),w,b
 31611  016274  271C               	addwf	___flmul@grs& (0+255),f,b
 31612  016276  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31613  016278  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31614  01627A  0E00               	movlw	0
 31615  01627C  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31616  01627E  0E00               	movlw	0
 31617  016280  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31618                           
 31619                           ; BSR set to: 2
 31620  016282  5113               	movf	(___flmul@a+1)& (0+255),w,b
 31621  016284  030E               	mulwf	___flmul@b& (0+255),b
 31622  016286  CFF3 F225          	movff	prodl,___flmul@temp
 31623  01628A  CFF4 F226          	movff	prodh,___flmul@temp+1
 31624                           
 31625                           ; BSR set to: 2
 31626  01628E  5125               	movf	___flmul@temp& (0+255),w,b
 31627  016290  271C               	addwf	___flmul@grs& (0+255),f,b
 31628  016292  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31629  016294  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31630  016296  0E00               	movlw	0
 31631  016298  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31632  01629A  0E00               	movlw	0
 31633  01629C  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31634                           
 31635                           ; BSR set to: 2
 31636  01629E  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 31637  0162A2  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 31638  0162A6  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 31639  0162AA  6B1C               	clrf	___flmul@grs& (0+255),b
 31640  0162AC  5112               	movf	___flmul@a& (0+255),w,b
 31641  0162AE  030E               	mulwf	___flmul@b& (0+255),b
 31642  0162B0  CFF3 F225          	movff	prodl,___flmul@temp
 31643  0162B4  CFF4 F226          	movff	prodh,___flmul@temp+1
 31644                           
 31645                           ; BSR set to: 2
 31646  0162B8  5125               	movf	___flmul@temp& (0+255),w,b
 31647  0162BA  271C               	addwf	___flmul@grs& (0+255),f,b
 31648  0162BC  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31649  0162BE  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31650  0162C0  0E00               	movlw	0
 31651  0162C2  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31652  0162C4  0E00               	movlw	0
 31653  0162C6  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31654                           
 31655                           ; BSR set to: 2
 31656  0162C8  5114               	movf	(___flmul@a+2)& (0+255),w,b
 31657  0162CA  030F               	mulwf	(___flmul@b+1)& (0+255),b
 31658  0162CC  CFF3 F225          	movff	prodl,___flmul@temp
 31659  0162D0  CFF4 F226          	movff	prodh,___flmul@temp+1
 31660  0162D4  5125               	movf	___flmul@temp& (0+255),w,b
 31661  0162D6  2721               	addwf	___flmul@prod& (0+255),f,b
 31662  0162D8  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31663  0162DA  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31664  0162DC  0E00               	movlw	0
 31665  0162DE  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31666  0162E0  0E00               	movlw	0
 31667  0162E2  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31668                           
 31669                           ; BSR set to: 2
 31670  0162E4  5113               	movf	(___flmul@a+1)& (0+255),w,b
 31671  0162E6  0310               	mulwf	(___flmul@b+2)& (0+255),b
 31672  0162E8  CFF3 F225          	movff	prodl,___flmul@temp
 31673  0162EC  CFF4 F226          	movff	prodh,___flmul@temp+1
 31674                           
 31675                           ; BSR set to: 2
 31676  0162F0  5125               	movf	___flmul@temp& (0+255),w,b
 31677  0162F2  2721               	addwf	___flmul@prod& (0+255),f,b
 31678  0162F4  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31679  0162F6  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31680  0162F8  0E00               	movlw	0
 31681  0162FA  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31682  0162FC  0E00               	movlw	0
 31683  0162FE  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31684  016300  5114               	movf	(___flmul@a+2)& (0+255),w,b
 31685  016302  0310               	mulwf	(___flmul@b+2)& (0+255),b
 31686  016304  CFF3 F225          	movff	prodl,___flmul@temp
 31687  016308  CFF4 F226          	movff	prodh,___flmul@temp+1
 31688                           
 31689                           ; BSR set to: 2
 31690  01630C  5125               	movf	___flmul@temp& (0+255),w,b
 31691  01630E  6F16               	movwf	??___flmul& (0+255),b
 31692  016310  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31693  016312  6F17               	movwf	(??___flmul+1)& (0+255),b
 31694  016314  6B18               	clrf	(??___flmul+2)& (0+255),b
 31695  016316  6B19               	clrf	(??___flmul+3)& (0+255),b
 31696  016318  C218  F219         	movff	??___flmul+2,??___flmul+3
 31697  01631C  C217  F218         	movff	??___flmul+1,??___flmul+2
 31698  016320  C216  F217         	movff	??___flmul,??___flmul+1
 31699  016324  6B16               	clrf	??___flmul& (0+255),b
 31700  016326  5116               	movf	??___flmul& (0+255),w,b
 31701  016328  2721               	addwf	___flmul@prod& (0+255),f,b
 31702  01632A  5117               	movf	(??___flmul+1)& (0+255),w,b
 31703  01632C  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31704  01632E  5118               	movf	(??___flmul+2)& (0+255),w,b
 31705  016330  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31706  016332  5119               	movf	(??___flmul+3)& (0+255),w,b
 31707  016334  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31708                           
 31709                           ; BSR set to: 2
 31710  016336  C21C  F216         	movff	___flmul@grs,??___flmul
 31711  01633A  C21D  F217         	movff	___flmul@grs+1,??___flmul+1
 31712  01633E  C21E  F218         	movff	___flmul@grs+2,??___flmul+2
 31713  016342  C21F  F219         	movff	___flmul@grs+3,??___flmul+3
 31714  016346  0E19               	movlw	25
 31715  016348  D005               	goto	u20520
 31716  01634A                     u20525:
 31717  01634A  90D8               	bcf	status,0,c
 31718  01634C  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 31719  01634E  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 31720  016350  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 31721  016352  3316               	rrcf	??___flmul& (0+255),f,b
 31722  016354                     u20520:
 31723  016354  2EE8               	decfsz	wreg,f,c
 31724  016356  D7F9               	goto	u20525
 31725  016358  5116               	movf	??___flmul& (0+255),w,b
 31726  01635A  2721               	addwf	___flmul@prod& (0+255),f,b
 31727  01635C  5117               	movf	(??___flmul+1)& (0+255),w,b
 31728  01635E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31729  016360  5118               	movf	(??___flmul+2)& (0+255),w,b
 31730  016362  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31731  016364  5119               	movf	(??___flmul+3)& (0+255),w,b
 31732  016366  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31733                           
 31734                           ; BSR set to: 2
 31735  016368  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 31736  01636C  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 31737  016370  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 31738  016374  6B1C               	clrf	___flmul@grs& (0+255),b
 31739                           
 31740                           ; BSR set to: 2
 31741  016376  511B               	movf	___flmul@aexp& (0+255),w,b
 31742  016378  C220  F216         	movff	___flmul@bexp,??___flmul
 31743  01637C  6B17               	clrf	(??___flmul+1)& (0+255),b
 31744  01637E  2716               	addwf	??___flmul& (0+255),f,b
 31745  016380  0E00               	movlw	0
 31746  016382  2317               	addwfc	(??___flmul+1)& (0+255),f,b
 31747  016384  0E82               	movlw	130
 31748  016386  2516               	addwf	??___flmul& (0+255),w,b
 31749  016388  6F25               	movwf	___flmul@temp& (0+255),b
 31750  01638A  0EFF               	movlw	255
 31751  01638C  2117               	addwfc	(??___flmul+1)& (0+255),w,b
 31752  01638E  6F26               	movwf	(___flmul@temp+1)& (0+255),b
 31753  016390  D00F               	goto	l16970
 31754  016392                     l16964:
 31755                           
 31756                           ; BSR set to: 2
 31757  016392  90D8               	bcf	status,0,c
 31758  016394  3721               	rlcf	___flmul@prod& (0+255),f,b
 31759  016396  3722               	rlcf	(___flmul@prod+1)& (0+255),f,b
 31760  016398  3723               	rlcf	(___flmul@prod+2)& (0+255),f,b
 31761  01639A  3724               	rlcf	(___flmul@prod+3)& (0+255),f,b
 31762                           
 31763                           ; BSR set to: 2
 31764  01639C  BF1F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 31765                           
 31766                           ; BSR set to: 2
 31767  01639E  8121               	bsf	___flmul@prod& (0+255),0,b
 31768                           
 31769                           ; BSR set to: 2
 31770  0163A0  90D8               	bcf	status,0,c
 31771  0163A2  371C               	rlcf	___flmul@grs& (0+255),f,b
 31772  0163A4  371D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 31773  0163A6  371E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 31774  0163A8  371F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 31775  0163AA  0725               	decf	___flmul@temp& (0+255),f,b
 31776  0163AC  A0D8               	btfss	status,0,c
 31777  0163AE  0726               	decf	(___flmul@temp+1)& (0+255),f,b
 31778  0163B0                     l16970:
 31779                           
 31780                           ; BSR set to: 2
 31781  0163B0  AF23               	btfss	(___flmul@prod+2)& (0+255),7,b
 31782  0163B2  D7EF               	goto	l16964
 31783                           
 31784                           ; BSR set to: 2
 31785  0163B4  0E00               	movlw	0
 31786  0163B6  6F1B               	movwf	___flmul@aexp& (0+255),b
 31787                           
 31788                           ; BSR set to: 2
 31789  0163B8  AF1F               	btfss	(___flmul@grs+3)& (0+255),7,b
 31790  0163BA  D017               	goto	l3224
 31791                           
 31792                           ; BSR set to: 2
 31793  0163BC  0EFF               	movlw	255
 31794  0163BE  151C               	andwf	___flmul@grs& (0+255),w,b
 31795  0163C0  6F16               	movwf	??___flmul& (0+255),b
 31796  0163C2  0EFF               	movlw	255
 31797  0163C4  151D               	andwf	(___flmul@grs+1)& (0+255),w,b
 31798  0163C6  6F17               	movwf	(??___flmul+1)& (0+255),b
 31799  0163C8  0EFF               	movlw	255
 31800  0163CA  151E               	andwf	(___flmul@grs+2)& (0+255),w,b
 31801  0163CC  6F18               	movwf	(??___flmul+2)& (0+255),b
 31802  0163CE  0E7F               	movlw	127
 31803  0163D0  151F               	andwf	(___flmul@grs+3)& (0+255),w,b
 31804  0163D2  6F19               	movwf	(??___flmul+3)& (0+255),b
 31805  0163D4  5116               	movf	??___flmul& (0+255),w,b
 31806  0163D6  1117               	iorwf	(??___flmul+1)& (0+255),w,b
 31807  0163D8  1118               	iorwf	(??___flmul+2)& (0+255),w,b
 31808  0163DA  1119               	iorwf	(??___flmul+3)& (0+255),w,b
 31809  0163DC  B4D8               	btfsc	status,2,c
 31810  0163DE  D003               	goto	l3225
 31811  0163E0                     u20560:
 31812                           
 31813                           ; BSR set to: 2
 31814  0163E0  0E01               	movlw	1
 31815  0163E2  6F1B               	movwf	___flmul@aexp& (0+255),b
 31816  0163E4  D002               	goto	l3224
 31817  0163E6                     l3225:
 31818                           
 31819                           ; BSR set to: 2
 31820  0163E6  B121               	btfsc	___flmul@prod& (0+255),0,b
 31821  0163E8  D7FB               	goto	u20560
 31822  0163EA                     l3224:
 31823                           
 31824                           ; BSR set to: 2
 31825  0163EA  511B               	movf	___flmul@aexp& (0+255),w,b
 31826  0163EC  B4D8               	btfsc	status,2,c
 31827  0163EE  D01F               	goto	l16990
 31828                           
 31829                           ; BSR set to: 2
 31830  0163F0  0E01               	movlw	1
 31831  0163F2  2721               	addwf	___flmul@prod& (0+255),f,b
 31832  0163F4  0E00               	movlw	0
 31833  0163F6  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31834  0163F8  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31835  0163FA  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31836                           
 31837                           ; BSR set to: 2
 31838  0163FC  A124               	btfss	(___flmul@prod+3)& (0+255),0,b
 31839  0163FE  D017               	goto	l16990
 31840                           
 31841                           ; BSR set to: 2
 31842  016400  C221  F216         	movff	___flmul@prod,??___flmul
 31843  016404  C222  F217         	movff	___flmul@prod+1,??___flmul+1
 31844  016408  C223  F218         	movff	___flmul@prod+2,??___flmul+2
 31845  01640C  C224  F219         	movff	___flmul@prod+3,??___flmul+3
 31846  016410  3519               	rlcf	(??___flmul+3)& (0+255),w,b
 31847  016412  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 31848  016414  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 31849  016416  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 31850  016418  3316               	rrcf	??___flmul& (0+255),f,b
 31851  01641A  C216  F221         	movff	??___flmul,___flmul@prod
 31852  01641E  C217  F222         	movff	??___flmul+1,___flmul@prod+1
 31853  016422  C218  F223         	movff	??___flmul+2,___flmul@prod+2
 31854  016426  C219  F224         	movff	??___flmul+3,___flmul@prod+3
 31855                           
 31856                           ; BSR set to: 2
 31857  01642A  4B25               	infsnz	___flmul@temp& (0+255),f,b
 31858  01642C  2B26               	incf	(___flmul@temp+1)& (0+255),f,b
 31859  01642E                     l16990:
 31860                           
 31861                           ; BSR set to: 2
 31862  01642E  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 31863  016430  D00D               	goto	l16994
 31864  016432  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31865  016434  E103               	bnz	u20600
 31866  016436  2925               	incf	___flmul@temp& (0+255),w,b
 31867  016438  A0D8               	btfss	status,0,c
 31868  01643A  D008               	goto	l16994
 31869  01643C                     u20600:
 31870                           
 31871                           ; BSR set to: 2
 31872  01643C  0E00               	movlw	0
 31873  01643E  6F21               	movwf	___flmul@prod& (0+255),b
 31874  016440  0E00               	movlw	0
 31875  016442  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 31876  016444  0E80               	movlw	128
 31877  016446  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 31878  016448  0E7F               	movlw	127
 31879  01644A  D020               	goto	L25
 31880  01644C                     l16994:
 31881                           
 31882                           ; BSR set to: 2
 31883  01644C  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 31884  01644E  D005               	goto	u20610
 31885  016450  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 31886  016452  E10E               	bnz	l3232
 31887  016454  0525               	decf	___flmul@temp& (0+255),w,b
 31888  016456  B0D8               	btfsc	status,0,c
 31889  016458  D00B               	goto	l3232
 31890  01645A                     u20610:
 31891                           
 31892                           ; BSR set to: 2
 31893  01645A  0E00               	movlw	0
 31894  01645C  6F21               	movwf	___flmul@prod& (0+255),b
 31895  01645E  0E00               	movlw	0
 31896  016460  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 31897  016462  0E00               	movlw	0
 31898  016464  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 31899  016466  0E00               	movlw	0
 31900  016468  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 31901  01646A  0E00               	movlw	0
 31902  01646C  6F1A               	movwf	___flmul@sign& (0+255),b
 31903  01646E  D00F               	goto	l17006
 31904  016470                     l3232:
 31905                           
 31906                           ; BSR set to: 2
 31907  016470  C225  F220         	movff	___flmul@temp,___flmul@bexp
 31908                           
 31909                           ; BSR set to: 2
 31910  016474  0EFF               	movlw	255
 31911  016476  1721               	andwf	___flmul@prod& (0+255),f,b
 31912  016478  0EFF               	movlw	255
 31913  01647A  1722               	andwf	(___flmul@prod+1)& (0+255),f,b
 31914  01647C  0E7F               	movlw	127
 31915  01647E  1723               	andwf	(___flmul@prod+2)& (0+255),f,b
 31916  016480  0E00               	movlw	0
 31917  016482  1724               	andwf	(___flmul@prod+3)& (0+255),f,b
 31918                           
 31919                           ; BSR set to: 2
 31920  016484  B120               	btfsc	___flmul@bexp& (0+255),0,b
 31921                           
 31922                           ; BSR set to: 2
 31923  016486  8F23               	bsf	(___flmul@prod+2)& (0+255),7,b
 31924                           
 31925                           ; BSR set to: 2
 31926  016488  90D8               	bcf	status,0,c
 31927  01648A  3120               	rrcf	___flmul@bexp& (0+255),w,b
 31928  01648C                     L25:
 31929  01648C  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 31930  01648E                     l17006:
 31931                           
 31932                           ; BSR set to: 2
 31933  01648E  511A               	movf	___flmul@sign& (0+255),w,b
 31934  016490  1324               	iorwf	(___flmul@prod+3)& (0+255),f,b
 31935                           
 31936                           ; BSR set to: 2
 31937  016492  C221  F20E         	movff	___flmul@prod,?___flmul
 31938  016496  C222  F20F         	movff	___flmul@prod+1,?___flmul+1
 31939  01649A  C223  F210         	movff	___flmul@prod+2,?___flmul+2
 31940  01649E  C224  F211         	movff	___flmul@prod+3,?___flmul+3
 31941                           
 31942                           ; BSR set to: 2
 31943  0164A2  0012               	return		;funcret
 31944  0164A4                     __end_of___flmul:
 31945                           	opt callstack 0
 31946                           
 31947 ;; *************** function _I2C2_MasterWrite *****************
 31948 ;; Defined at:
 31949 ;;		line 601 in file "mcc_generated_files/i2c2.c"
 31950 ;; Parameters:    Size  Location     Type
 31951 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 31952 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 31953 ;;		 -> NULL(0), 
 31954 ;;  length          1   11[BANK2 ] unsigned char 
 31955 ;;  address         2   12[BANK2 ] unsigned int 
 31956 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 31957 ;;		 -> I2C_STATUS(1), 
 31958 ;; Auto vars:     Size  Location     Type
 31959 ;;		None
 31960 ;; Return value:  Size  Location     Type
 31961 ;;                  1    wreg      void 
 31962 ;; Registers used:
 31963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31964 ;; Tracked objects:
 31965 ;;		On entry : 0/0
 31966 ;;		On exit  : 0/0
 31967 ;;		Unchanged: 0/0
 31968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31969 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31972 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31973 ;;Total ram usage:        7 bytes
 31974 ;; Hardware stack levels used:    1
 31975 ;; Hardware stack levels required when called:   13
 31976 ;; This function calls:
 31977 ;;		_I2C2_MasterTRBInsert
 31978 ;;		_I2C2_MasterWriteTRBBuild
 31979 ;; This function is called by:
 31980 ;;		_LM73TempSensorInitialize
 31981 ;;		_LM73AcquisitionHandler
 31982 ;;		_OLED_Command
 31983 ;;		_OLED_PutChar
 31984 ;;		_OLED_Data
 31985 ;; This function uses a non-reentrant model
 31986 ;;
 31987                           
 31988                           	psect	text114
 31989  01B1F2                     __ptext114:
 31990                           	opt callstack 0
 31991  01B1F2                     _I2C2_MasterWrite:
 31992                           	opt callstack 13
 31993                           
 31994                           ;i2c2.c: 607: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 610: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 31995                           
 31996                           ; BSR set to: 2
 31997                           ;incstack = 0
 31998  01B1F2  0101               	movlb	1	; () banked
 31999  01B1F4  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 32000  01B1F6  D01E               	goto	l18114
 32001                           
 32002                           ; BSR set to: 1
 32003                           ;i2c2.c: 611: {;i2c2.c: 612: I2C2_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 32004  01B1F8  0EB3               	movlw	low I2C2_MasterWrite@trBlock
 32005  01B1FA  0102               	movlb	2	; () banked
 32006  01B1FC  6F00               	movwf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),b
 32007  01B1FE  0E01               	movlw	high I2C2_MasterWrite@trBlock
 32008  01B200  6F01               	movwf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 32009  01B202  C209  F202         	movff	I2C2_MasterWrite@pdata,I2C2_MasterWriteTRBBuild@pdata
 32010  01B206  C20A  F203         	movff	I2C2_MasterWrite@pdata+1,I2C2_MasterWriteTRBBuild@pdata+1
 32011  01B20A  C20B  F204         	movff	I2C2_MasterWrite@length,I2C2_MasterWriteTRBBuild@length
 32012  01B20E  C20C  F205         	movff	I2C2_MasterWrite@address,I2C2_MasterWriteTRBBuild@address
 32013  01B212  C20D  F206         	movff	I2C2_MasterWrite@address+1,I2C2_MasterWriteTRBBuild@address+1
 32014  01B216  ECFC  F0D9         	call	_I2C2_MasterWriteTRBBuild	;wreg free
 32015                           
 32016                           ;i2c2.c: 613: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 32017  01B21A  0EB3               	movlw	low I2C2_MasterWrite@trBlock
 32018  01B21C  0102               	movlb	2	; () banked
 32019  01B21E  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 32020  01B220  0E01               	movlw	high I2C2_MasterWrite@trBlock
 32021  01B222  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 32022  01B224  C20E  F202         	movff	I2C2_MasterWrite@pflag,I2C2_MasterTRBInsert@pflag
 32023  01B228  C20F  F203         	movff	I2C2_MasterWrite@pflag+1,I2C2_MasterTRBInsert@pflag+1
 32024  01B22C  0E01               	movlw	1
 32025  01B22E  ECD6  F0D1         	call	_I2C2_MasterTRBInsert
 32026                           
 32027                           ;i2c2.c: 614: }
 32028  01B232  0012               	return	
 32029  01B234                     l18114:
 32030                           
 32031                           ; BSR set to: 1
 32032                           ;i2c2.c: 615: else;i2c2.c: 616: {;i2c2.c: 617: *pflag = I2C2_MESSAGE_FAIL;
 32033  01B234  C20E  FFD9         	movff	I2C2_MasterWrite@pflag,fsr2l
 32034  01B238  C20F  FFDA         	movff	I2C2_MasterWrite@pflag+1,fsr2h
 32035  01B23C  0E01               	movlw	1
 32036  01B23E  6EDF               	movwf	indf2,c
 32037  01B240  0012               	return		;funcret
 32038  01B242                     __end_of_I2C2_MasterWrite:
 32039                           	opt callstack 0
 32040                           
 32041 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 32042 ;; Defined at:
 32043 ;;		line 722 in file "mcc_generated_files/i2c2.c"
 32044 ;; Parameters:    Size  Location     Type
 32045 ;;  ptrb            2    0[BANK2 ] PTR struct .
 32046 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 32047 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 32048 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 32049 ;;		 -> NULL(0), 
 32050 ;;  length          1    4[BANK2 ] unsigned char 
 32051 ;;  address         2    5[BANK2 ] unsigned int 
 32052 ;; Auto vars:     Size  Location     Type
 32053 ;;		None
 32054 ;; Return value:  Size  Location     Type
 32055 ;;                  1    wreg      void 
 32056 ;; Registers used:
 32057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32058 ;; Tracked objects:
 32059 ;;		On entry : 0/0
 32060 ;;		On exit  : 0/0
 32061 ;;		Unchanged: 0/0
 32062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32063 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32065 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32066 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32067 ;;Total ram usage:        9 bytes
 32068 ;; Hardware stack levels used:    1
 32069 ;; Hardware stack levels required when called:   11
 32070 ;; This function calls:
 32071 ;;		Nothing
 32072 ;; This function is called by:
 32073 ;;		_I2C2_MasterWrite
 32074 ;; This function uses a non-reentrant model
 32075 ;;
 32076                           
 32077                           	psect	text115
 32078  01B3F8                     __ptext115:
 32079                           	opt callstack 0
 32080  01B3F8                     _I2C2_MasterWriteTRBBuild:
 32081                           	opt callstack 14
 32082                           
 32083                           ;i2c2.c: 728: ptrb->address = address << 1;
 32084                           
 32085                           ;incstack = 0
 32086  01B3F8  C205  F207         	movff	I2C2_MasterWriteTRBBuild@address,??_I2C2_MasterWriteTRBBuild
 32087  01B3FC  C206  F208         	movff	I2C2_MasterWriteTRBBuild@address+1,??_I2C2_MasterWriteTRBBuild+1
 32088  01B400  90D8               	bcf	status,0,c
 32089  01B402  0102               	movlb	2	; () banked
 32090  01B404  3707               	rlcf	??_I2C2_MasterWriteTRBBuild& (0+255),f,b
 32091  01B406  3708               	rlcf	(??_I2C2_MasterWriteTRBBuild+1)& (0+255),f,b
 32092  01B408  C200  FFD9         	movff	I2C2_MasterWriteTRBBuild@ptrb,fsr2l
 32093  01B40C  C201  FFDA         	movff	I2C2_MasterWriteTRBBuild@ptrb+1,fsr2h
 32094  01B410  C207  FFDE         	movff	??_I2C2_MasterWriteTRBBuild,postinc2
 32095  01B414  C208  FFDD         	movff	??_I2C2_MasterWriteTRBBuild+1,postdec2
 32096                           
 32097                           ; BSR set to: 2
 32098                           ;i2c2.c: 729: ptrb->length = length;
 32099  01B418  EE20 F002          	lfsr	2,2
 32100  01B41C  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 32101  01B41E  26D9               	addwf	fsr2l,f,c
 32102  01B420  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 32103  01B422  22DA               	addwfc	fsr2h,f,c
 32104  01B424  C204  FFDF         	movff	I2C2_MasterWriteTRBBuild@length,indf2
 32105                           
 32106                           ; BSR set to: 2
 32107                           ;i2c2.c: 730: ptrb->pbuffer = pdata;
 32108  01B428  EE20 F003          	lfsr	2,3
 32109  01B42C  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 32110  01B42E  26D9               	addwf	fsr2l,f,c
 32111  01B430  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 32112  01B432  22DA               	addwfc	fsr2h,f,c
 32113  01B434  C202  FFDE         	movff	I2C2_MasterWriteTRBBuild@pdata,postinc2
 32114  01B438  C203  FFDD         	movff	I2C2_MasterWriteTRBBuild@pdata+1,postdec2
 32115                           
 32116                           ; BSR set to: 2
 32117  01B43C  0012               	return		;funcret
 32118  01B43E                     __end_of_I2C2_MasterWriteTRBBuild:
 32119                           	opt callstack 0
 32120                           
 32121 ;; *************** function _I2C2_MasterRead *****************
 32122 ;; Defined at:
 32123 ;;		line 622 in file "mcc_generated_files/i2c2.c"
 32124 ;; Parameters:    Size  Location     Type
 32125 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 32126 ;;		 -> LM73_temp_results(18), 
 32127 ;;  length          1   11[BANK2 ] unsigned char 
 32128 ;;  address         2   12[BANK2 ] unsigned int 
 32129 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 32130 ;;		 -> I2C_STATUS(1), 
 32131 ;; Auto vars:     Size  Location     Type
 32132 ;;		None
 32133 ;; Return value:  Size  Location     Type
 32134 ;;                  1    wreg      void 
 32135 ;; Registers used:
 32136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32137 ;; Tracked objects:
 32138 ;;		On entry : 0/0
 32139 ;;		On exit  : 0/0
 32140 ;;		Unchanged: 0/0
 32141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32142 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32145 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32146 ;;Total ram usage:        7 bytes
 32147 ;; Hardware stack levels used:    1
 32148 ;; Hardware stack levels required when called:   13
 32149 ;; This function calls:
 32150 ;;		_I2C2_MasterReadTRBBuild
 32151 ;;		_I2C2_MasterTRBInsert
 32152 ;; This function is called by:
 32153 ;;		_LM73AcquisitionHandler
 32154 ;; This function uses a non-reentrant model
 32155 ;;
 32156                           
 32157                           	psect	text116
 32158  01B242                     __ptext116:
 32159                           	opt callstack 0
 32160  01B242                     _I2C2_MasterRead:
 32161                           	opt callstack 16
 32162                           
 32163                           ;i2c2.c: 628: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 632: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 32164                           
 32165                           ; BSR set to: 2
 32166                           ;incstack = 0
 32167  01B242  0101               	movlb	1	; () banked
 32168  01B244  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 32169  01B246  D01E               	goto	l20644
 32170                           
 32171                           ; BSR set to: 1
 32172                           ;i2c2.c: 633: {;i2c2.c: 634: I2C2_MasterReadTRBBuild(&trBlock, pdata, length, address);
 32173  01B248  0EAE               	movlw	low I2C2_MasterRead@trBlock
 32174  01B24A  0102               	movlb	2	; () banked
 32175  01B24C  6F00               	movwf	I2C2_MasterReadTRBBuild@ptrb& (0+255),b
 32176  01B24E  0E01               	movlw	high I2C2_MasterRead@trBlock
 32177  01B250  6F01               	movwf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),b
 32178  01B252  C209  F202         	movff	I2C2_MasterRead@pdata,I2C2_MasterReadTRBBuild@pdata
 32179  01B256  C20A  F203         	movff	I2C2_MasterRead@pdata+1,I2C2_MasterReadTRBBuild@pdata+1
 32180  01B25A  C20B  F204         	movff	I2C2_MasterRead@length,I2C2_MasterReadTRBBuild@length
 32181  01B25E  C20C  F205         	movff	I2C2_MasterRead@address,I2C2_MasterReadTRBBuild@address
 32182  01B262  C20D  F206         	movff	I2C2_MasterRead@address+1,I2C2_MasterReadTRBBuild@address+1
 32183  01B266  EC2F  F0D8         	call	_I2C2_MasterReadTRBBuild	;wreg free
 32184                           
 32185                           ;i2c2.c: 635: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 32186  01B26A  0EAE               	movlw	low I2C2_MasterRead@trBlock
 32187  01B26C  0102               	movlb	2	; () banked
 32188  01B26E  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 32189  01B270  0E01               	movlw	high I2C2_MasterRead@trBlock
 32190  01B272  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 32191  01B274  C20E  F202         	movff	I2C2_MasterRead@pflag,I2C2_MasterTRBInsert@pflag
 32192  01B278  C20F  F203         	movff	I2C2_MasterRead@pflag+1,I2C2_MasterTRBInsert@pflag+1
 32193  01B27C  0E01               	movlw	1
 32194  01B27E  ECD6  F0D1         	call	_I2C2_MasterTRBInsert
 32195                           
 32196                           ;i2c2.c: 636: }
 32197  01B282  0012               	return	
 32198  01B284                     l20644:
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;i2c2.c: 637: else;i2c2.c: 638: {;i2c2.c: 639: *pflag = I2C2_MESSAGE_FAIL;
 32202  01B284  C20E  FFD9         	movff	I2C2_MasterRead@pflag,fsr2l
 32203  01B288  C20F  FFDA         	movff	I2C2_MasterRead@pflag+1,fsr2h
 32204  01B28C  0E01               	movlw	1
 32205  01B28E  6EDF               	movwf	indf2,c
 32206  01B290  0012               	return		;funcret
 32207  01B292                     __end_of_I2C2_MasterRead:
 32208                           	opt callstack 0
 32209                           
 32210 ;; *************** function _I2C2_MasterTRBInsert *****************
 32211 ;; Defined at:
 32212 ;;		line 655 in file "mcc_generated_files/i2c2.c"
 32213 ;; Parameters:    Size  Location     Type
 32214 ;;  count           1    wreg     unsigned char 
 32215 ;;  ptrb_list       2    0[BANK2 ] PTR struct .
 32216 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 32217 ;;  pflag           2    2[BANK2 ] PTR enum E9433
 32218 ;;		 -> I2C_STATUS(1), 
 32219 ;; Auto vars:     Size  Location     Type
 32220 ;;  count           1    5[BANK2 ] unsigned char 
 32221 ;; Return value:  Size  Location     Type
 32222 ;;                  1    wreg      void 
 32223 ;; Registers used:
 32224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32225 ;; Tracked objects:
 32226 ;;		On entry : 0/0
 32227 ;;		On exit  : 0/0
 32228 ;;		Unchanged: 0/0
 32229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32230 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32231 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;Total ram usage:        6 bytes
 32235 ;; Hardware stack levels used:    1
 32236 ;; Hardware stack levels required when called:   12
 32237 ;; This function calls:
 32238 ;;		_I2C2_WaitForLastPacketToComplete
 32239 ;; This function is called by:
 32240 ;;		_I2C2_MasterWrite
 32241 ;;		_I2C2_MasterRead
 32242 ;; This function uses a non-reentrant model
 32243 ;;
 32244                           
 32245                           	psect	text117
 32246  01A3AC                     __ptext117:
 32247                           	opt callstack 0
 32248  01A3AC                     _I2C2_MasterTRBInsert:
 32249                           	opt callstack 13
 32250                           
 32251                           ;incstack = 0
 32252                           ;I2C2_MasterTRBInsert@count stored from wreg
 32253  01A3AC  0102               	movlb	2	; () banked
 32254  01A3AE  6F05               	movwf	I2C2_MasterTRBInsert@count& (0+255),b
 32255                           
 32256                           ;i2c2.c: 662: if (i2c2_object.trStatus.s.full != 1)
 32257  01A3B0  0101               	movlb	1	; () banked
 32258  01A3B2  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 32259  01A3B4  D039               	goto	l17532
 32260                           
 32261                           ; BSR set to: 1
 32262                           ;i2c2.c: 663: {;i2c2.c: 664: *pflag = I2C2_MESSAGE_PENDING;
 32263  01A3B6  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 32264  01A3BA  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 32265  01A3BE  0E02               	movlw	2
 32266  01A3C0  6EDF               	movwf	indf2,c
 32267                           
 32268                           ; BSR set to: 1
 32269                           ;i2c2.c: 666: i2c2_object.pTrTail->ptrb_list = ptrb_list;
 32270  01A3C2  EE20 F001          	lfsr	2,1
 32271  01A3C6  5161               	movf	_i2c2_object& (0+255),w,b
 32272  01A3C8  26D9               	addwf	fsr2l,f,c
 32273  01A3CA  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 32274  01A3CC  22DA               	addwfc	fsr2h,f,c
 32275  01A3CE  C200  FFDE         	movff	I2C2_MasterTRBInsert@ptrb_list,postinc2
 32276  01A3D2  C201  FFDD         	movff	I2C2_MasterTRBInsert@ptrb_list+1,postdec2
 32277                           
 32278                           ; BSR set to: 1
 32279                           ;i2c2.c: 667: i2c2_object.pTrTail->count = count;
 32280  01A3D6  C161  FFD9         	movff	_i2c2_object,fsr2l
 32281  01A3DA  C162  FFDA         	movff	_i2c2_object+1,fsr2h
 32282  01A3DE  C205  FFDF         	movff	I2C2_MasterTRBInsert@count,indf2
 32283                           
 32284                           ; BSR set to: 1
 32285                           ;i2c2.c: 668: i2c2_object.pTrTail->pTrFlag = pflag;
 32286  01A3E2  EE20 F003          	lfsr	2,3
 32287  01A3E6  5161               	movf	_i2c2_object& (0+255),w,b
 32288  01A3E8  26D9               	addwf	fsr2l,f,c
 32289  01A3EA  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 32290  01A3EC  22DA               	addwfc	fsr2h,f,c
 32291  01A3EE  C202  FFDE         	movff	I2C2_MasterTRBInsert@pflag,postinc2
 32292  01A3F2  C203  FFDD         	movff	I2C2_MasterTRBInsert@pflag+1,postdec2
 32293                           
 32294                           ; BSR set to: 1
 32295                           ;i2c2.c: 669: i2c2_object.pTrTail++;
 32296  01A3F6  0E05               	movlw	5
 32297  01A3F8  2761               	addwf	_i2c2_object& (0+255),f,b
 32298  01A3FA  0E00               	movlw	0
 32299  01A3FC  2362               	addwfc	(_i2c2_object+1)& (0+255),f,b
 32300                           
 32301                           ; BSR set to: 1
 32302                           ;i2c2.c: 672: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
 32303  01A3FE  0EBD               	movlw	low (_i2c2_tr_queue+5)
 32304  01A400  1961               	xorwf	_i2c2_object& (0+255),w,b
 32305  01A402  E108               	bnz	l17528
 32306  01A404  0E01               	movlw	high (_i2c2_tr_queue+5)
 32307  01A406  1962               	xorwf	(_i2c2_object+1)& (0+255),w,b
 32308  01A408  A4D8               	btfss	status,2,c
 32309  01A40A  D004               	goto	l17528
 32310                           
 32311                           ; BSR set to: 1
 32312                           ;i2c2.c: 673: {;i2c2.c: 675: i2c2_object.pTrTail = i2c2_tr_queue;
 32313  01A40C  0EB8               	movlw	low _i2c2_tr_queue
 32314  01A40E  6F61               	movwf	_i2c2_object& (0+255),b
 32315  01A410  0E01               	movlw	high _i2c2_tr_queue
 32316  01A412  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 32317  01A414                     l17528:
 32318                           
 32319                           ; BSR set to: 1
 32320                           ;i2c2.c: 676: };i2c2.c: 680: i2c2_object.trStatus.s.empty = 0;
 32321  01A414  9365               	bcf	(_i2c2_object+4)& (0+255),1,b
 32322                           
 32323                           ;i2c2.c: 683: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
 32324  01A416  5161               	movf	_i2c2_object& (0+255),w,b
 32325  01A418  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 32326  01A41A  E10C               	bnz	l17534
 32327  01A41C  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 32328  01A41E  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 32329  01A420  A4D8               	btfss	status,2,c
 32330  01A422  D008               	goto	l17534
 32331                           
 32332                           ; BSR set to: 1
 32333                           ;i2c2.c: 684: {;i2c2.c: 686: i2c2_object.trStatus.s.full = 1;
 32334  01A424  8165               	bsf	(_i2c2_object+4)& (0+255),0,b
 32335  01A426  D006               	goto	l17534
 32336  01A428                     l17532:
 32337                           
 32338                           ; BSR set to: 1
 32339                           ;i2c2.c: 690: else;i2c2.c: 691: {;i2c2.c: 692: *pflag = I2C2_MESSAGE_FAIL;
 32340  01A428  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 32341  01A42C  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 32342  01A430  0E01               	movlw	1
 32343  01A432  6EDF               	movwf	indf2,c
 32344  01A434                     l17534:
 32345                           
 32346                           ; BSR set to: 1
 32347                           ;i2c2.c: 693: };i2c2.c: 696: if (*pflag == I2C2_MESSAGE_PENDING)
 32348  01A434  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 32349  01A438  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 32350  01A43C  0E02               	movlw	2
 32351  01A43E  18DE               	xorwf	postinc2,w,c
 32352  01A440  A4D8               	btfss	status,2,c
 32353  01A442  0012               	return	
 32354                           
 32355                           ; BSR set to: 1
 32356                           ;i2c2.c: 697: {;i2c2.c: 698: I2C2_WaitForLastPacketToComplete();
 32357  01A444  EC9A  F0E0         	call	_I2C2_WaitForLastPacketToComplete	;wreg free
 32358                           
 32359                           ;i2c2.c: 703: PIR3bits.SSP2IF = 1;
 32360  01A448  010E               	movlb	14	; () banked
 32361  01A44A  85CD               	bsf	205,2,b	;volatile
 32362  01A44C  0012               	return		;funcret
 32363  01A44E                     __end_of_I2C2_MasterTRBInsert:
 32364                           	opt callstack 0
 32365                           
 32366 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 32367 ;; Defined at:
 32368 ;;		line 645 in file "mcc_generated_files/i2c2.c"
 32369 ;; Parameters:    Size  Location     Type
 32370 ;;		None
 32371 ;; Auto vars:     Size  Location     Type
 32372 ;;		None
 32373 ;; Return value:  Size  Location     Type
 32374 ;;                  1    wreg      void 
 32375 ;; Registers used:
 32376 ;;		wreg, status,2
 32377 ;; Tracked objects:
 32378 ;;		On entry : 0/0
 32379 ;;		On exit  : 0/0
 32380 ;;		Unchanged: 0/0
 32381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32386 ;;Total ram usage:        0 bytes
 32387 ;; Hardware stack levels used:    1
 32388 ;; Hardware stack levels required when called:   11
 32389 ;; This function calls:
 32390 ;;		Nothing
 32391 ;; This function is called by:
 32392 ;;		_I2C2_MasterTRBInsert
 32393 ;; This function uses a non-reentrant model
 32394 ;;
 32395                           
 32396                           	psect	text118
 32397  01C134                     __ptext118:
 32398                           	opt callstack 0
 32399  01C134                     _I2C2_WaitForLastPacketToComplete:
 32400                           	opt callstack 13
 32401                           
 32402                           ;i2c2.c: 647: while(i2c2_state != S_MASTER_IDLE)
 32403                           
 32404                           ;incstack = 0
 32405  01C134  0100               	movlb	0	; () banked
 32406  01C136  51DC               	movf	_i2c2_state& (0+255),w,b
 32407  01C138  B4D8               	btfsc	status,2,c
 32408  01C13A  0012               	return	
 32409  01C13C  D7FB               	goto	_I2C2_WaitForLastPacketToComplete
 32410  01C13E                     __end_of_I2C2_WaitForLastPacketToComplete:
 32411                           	opt callstack 0
 32412                           
 32413 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 32414 ;; Defined at:
 32415 ;;		line 709 in file "mcc_generated_files/i2c2.c"
 32416 ;; Parameters:    Size  Location     Type
 32417 ;;  ptrb            2    0[BANK2 ] PTR struct .
 32418 ;;		 -> I2C2_MasterRead@trBlock(5), 
 32419 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 32420 ;;		 -> LM73_temp_results(18), 
 32421 ;;  length          1    4[BANK2 ] unsigned char 
 32422 ;;  address         2    5[BANK2 ] unsigned int 
 32423 ;; Auto vars:     Size  Location     Type
 32424 ;;		None
 32425 ;; Return value:  Size  Location     Type
 32426 ;;                  1    wreg      void 
 32427 ;; Registers used:
 32428 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32429 ;; Tracked objects:
 32430 ;;		On entry : 0/0
 32431 ;;		On exit  : 0/0
 32432 ;;		Unchanged: 0/0
 32433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32434 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32436 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32437 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32438 ;;Total ram usage:        9 bytes
 32439 ;; Hardware stack levels used:    1
 32440 ;; Hardware stack levels required when called:   11
 32441 ;; This function calls:
 32442 ;;		Nothing
 32443 ;; This function is called by:
 32444 ;;		_I2C2_MasterRead
 32445 ;; This function uses a non-reentrant model
 32446 ;;
 32447                           
 32448                           	psect	text119
 32449  01B05E                     __ptext119:
 32450                           	opt callstack 0
 32451  01B05E                     _I2C2_MasterReadTRBBuild:
 32452                           	opt callstack 17
 32453                           
 32454                           ;i2c2.c: 715: ptrb->address = address << 1;
 32455                           
 32456                           ; BSR set to: 0
 32457                           ;incstack = 0
 32458  01B05E  C205  F207         	movff	I2C2_MasterReadTRBBuild@address,??_I2C2_MasterReadTRBBuild
 32459  01B062  C206  F208         	movff	I2C2_MasterReadTRBBuild@address+1,??_I2C2_MasterReadTRBBuild+1
 32460  01B066  90D8               	bcf	status,0,c
 32461  01B068  0102               	movlb	2	; () banked
 32462  01B06A  3707               	rlcf	??_I2C2_MasterReadTRBBuild& (0+255),f,b
 32463  01B06C  3708               	rlcf	(??_I2C2_MasterReadTRBBuild+1)& (0+255),f,b
 32464  01B06E  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 32465  01B072  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 32466  01B076  C207  FFDE         	movff	??_I2C2_MasterReadTRBBuild,postinc2
 32467  01B07A  C208  FFDD         	movff	??_I2C2_MasterReadTRBBuild+1,postdec2
 32468                           
 32469                           ; BSR set to: 2
 32470                           ;i2c2.c: 717: ptrb->address |= 0x01;
 32471  01B07E  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 32472  01B082  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 32473  01B086  0E00               	movlw	0
 32474  01B088  80DB               	bsf	plusw2,0,c
 32475                           
 32476                           ; BSR set to: 2
 32477                           ;i2c2.c: 718: ptrb->length = length;
 32478  01B08A  EE20 F002          	lfsr	2,2
 32479  01B08E  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 32480  01B090  26D9               	addwf	fsr2l,f,c
 32481  01B092  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 32482  01B094  22DA               	addwfc	fsr2h,f,c
 32483  01B096  C204  FFDF         	movff	I2C2_MasterReadTRBBuild@length,indf2
 32484                           
 32485                           ; BSR set to: 2
 32486                           ;i2c2.c: 719: ptrb->pbuffer = pdata;
 32487  01B09A  EE20 F003          	lfsr	2,3
 32488  01B09E  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 32489  01B0A0  26D9               	addwf	fsr2l,f,c
 32490  01B0A2  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 32491  01B0A4  22DA               	addwfc	fsr2h,f,c
 32492  01B0A6  C202  FFDE         	movff	I2C2_MasterReadTRBBuild@pdata,postinc2
 32493  01B0AA  C203  FFDD         	movff	I2C2_MasterReadTRBBuild@pdata+1,postdec2
 32494                           
 32495                           ; BSR set to: 2
 32496  01B0AE  0012               	return		;funcret
 32497  01B0B0                     __end_of_I2C2_MasterReadTRBBuild:
 32498                           	opt callstack 0
 32499                           
 32500 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 32501 ;; Defined at:
 32502 ;;		line 138 in file "mcc_generated_files/interrupt_manager.c"
 32503 ;; Parameters:    Size  Location     Type
 32504 ;;		None
 32505 ;; Auto vars:     Size  Location     Type
 32506 ;;		None
 32507 ;; Return value:  Size  Location     Type
 32508 ;;                  1    wreg      void 
 32509 ;; Registers used:
 32510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32511 ;; Tracked objects:
 32512 ;;		On entry : 0/0
 32513 ;;		On exit  : 0/0
 32514 ;;		Unchanged: 0/0
 32515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32518 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32519 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32520 ;;Total ram usage:        9 bytes
 32521 ;; Hardware stack levels used:    1
 32522 ;; Hardware stack levels required when called:   10
 32523 ;; This function calls:
 32524 ;;		Absolute function
 32525 ;;		_CCP2_CaptureISR
 32526 ;;		_EUSART2_Transmit_ISR
 32527 ;;		_I2C2_BusCollisionISR
 32528 ;;		_I2C2_ISR
 32529 ;;		_TMR2_ISR
 32530 ;;		_TMR3_ISR
 32531 ;; This function is called by:
 32532 ;;		Interrupt level 1
 32533 ;; This function uses a non-reentrant model
 32534 ;;
 32535                           
 32536                           	psect	intcodelo
 32537  000018                     __pintcodelo:
 32538                           	opt callstack 0
 32539  000018                     _INTERRUPT_InterruptManagerLow:
 32540                           	opt callstack 12
 32541                           
 32542                           ; BSR set to: 2
 32543                           ;incstack = 0
 32544  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32545  00001A  CFD8 F158          	movff	status,??_INTERRUPT_InterruptManagerLow
 32546  00001E  CFE8 F159          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 32547  000022  CFE0 F15A          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 32548  000026  CFFA F15B          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 32549  00002A  CFFB F15C          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 32550  00002E  CFD9 F15D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 32551  000032  CFDA F15E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 32552  000036  CFF3 F15F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 32553  00003A  CFF4 F160          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 32554                           
 32555                           ;interrupt_manager.c: 141: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 32556  00003E  010E               	movlb	14	; () banked
 32557  000040  B3C6               	btfsc	198,1,b	;volatile
 32558                           
 32559                           ; BSR set to: 14
 32560  000042  A3CE               	btfss	206,1,b	;volatile
 32561  000044  D003               	goto	i1l243
 32562                           
 32563                           ; BSR set to: 14
 32564                           ;interrupt_manager.c: 142: {;interrupt_manager.c: 143: TMR2_ISR();
 32565  000046  ECC9  F0DD         	call	_TMR2_ISR	;wreg free
 32566                           
 32567                           ;interrupt_manager.c: 144: }
 32568  00004A  D027               	goto	i1l250
 32569  00004C                     i1l243:
 32570                           
 32571                           ; BSR set to: 14
 32572                           ;interrupt_manager.c: 145: else if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 32573  00004C  B7C5               	btfsc	197,3,b	;volatile
 32574                           
 32575                           ; BSR set to: 14
 32576  00004E  A7CD               	btfss	205,3,b	;volatile
 32577  000050  D003               	goto	i1l245
 32578                           
 32579                           ; BSR set to: 14
 32580                           ;interrupt_manager.c: 146: {;interrupt_manager.c: 147: I2C2_BusCollisionISR();
 32581  000052  EC89  F0E0         	call	_I2C2_BusCollisionISR	;wreg free
 32582                           
 32583                           ;interrupt_manager.c: 148: }
 32584  000056  D021               	goto	i1l250
 32585  000058                     i1l245:
 32586                           
 32587                           ; BSR set to: 14
 32588                           ;interrupt_manager.c: 149: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
 32589  000058  B5C5               	btfsc	197,2,b	;volatile
 32590                           
 32591                           ; BSR set to: 14
 32592  00005A  A5CD               	btfss	205,2,b	;volatile
 32593  00005C  D003               	goto	i1l247
 32594                           
 32595                           ; BSR set to: 14
 32596                           ;interrupt_manager.c: 150: {;interrupt_manager.c: 151: I2C2_ISR();
 32597  00005E  EC4D  F0C3         	call	_I2C2_ISR	;wreg free
 32598                           
 32599                           ;interrupt_manager.c: 152: }
 32600  000062  D01B               	goto	i1l250
 32601  000064                     i1l247:
 32602                           
 32603                           ; BSR set to: 14
 32604                           ;interrupt_manager.c: 153: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 32605  000064  B5C6               	btfsc	198,2,b	;volatile
 32606                           
 32607                           ; BSR set to: 14
 32608  000066  A5CE               	btfss	206,2,b	;volatile
 32609  000068  D003               	goto	i1l249
 32610                           
 32611                           ; BSR set to: 14
 32612                           ;interrupt_manager.c: 154: {;interrupt_manager.c: 155: TMR3_ISR();
 32613  00006A  EC6E  F0DC         	call	_TMR3_ISR	;wreg free
 32614                           
 32615                           ;interrupt_manager.c: 156: }
 32616  00006E  D015               	goto	i1l250
 32617  000070                     i1l249:
 32618                           
 32619                           ; BSR set to: 14
 32620                           ;interrupt_manager.c: 157: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 32621  000070  BDC5               	btfsc	197,6,b	;volatile
 32622                           
 32623                           ; BSR set to: 14
 32624  000072  ADCD               	btfss	205,6,b	;volatile
 32625  000074  D00D               	goto	i1l251
 32626                           
 32627                           ; BSR set to: 14
 32628                           ;interrupt_manager.c: 158: {;interrupt_manager.c: 159: EUSART2_TxDefaultInterruptHandler
      +                          ();
 32629  000076  D801               	call	i1u2856_28
 32630  000078  D010               	goto	i1l250
 32631  00007A                     i1u2856_28:
 32632  00007A  0005               	push	
 32633  00007C  6EFA               	movwf	pclath,c
 32634  00007E  0101               	movlb	1	; () banked
 32635  000080  5186               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 32636  000082  6EFD               	movwf	tosl,c
 32637  000084  5187               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 32638  000086  6EFE               	movwf	tosh,c
 32639  000088  5188               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 32640  00008A  6EFF               	movwf	tosu,c
 32641  00008C  50FA               	movf	pclath,w,c
 32642  00008E  0012               	return		;indir
 32643  000090                     i1l251:
 32644                           
 32645                           ; BSR set to: 14
 32646                           ;interrupt_manager.c: 161: else if(PIE6bits.CCP2IE == 1 && PIR6bits.CCP2IF == 1)
 32647  000090  B3C8               	btfsc	200,1,b	;volatile
 32648                           
 32649                           ; BSR set to: 14
 32650  000092  A3D0               	btfss	208,1,b	;volatile
 32651  000094  D002               	goto	i1l250
 32652                           
 32653                           ; BSR set to: 14
 32654                           ;interrupt_manager.c: 162: {;interrupt_manager.c: 163: CCP2_CaptureISR();
 32655  000096  EC6F  F0DF         	call	_CCP2_CaptureISR	;wreg free
 32656  00009A                     i1l250:
 32657                           
 32658                           ; BSR set to: 14
 32659  00009A  C160  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 32660  00009E  C15F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 32661  0000A2  C15E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 32662  0000A6  C15D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 32663  0000AA  C15C  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 32664  0000AE  C15B  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 32665  0000B2  C15A  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 32666  0000B6  C159  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 32667  0000BA  C158  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 32668  0000BE  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32669  0000C0  0010               	retfie	
 32670  0000C2                     __end_of_INTERRUPT_InterruptManagerLow:
 32671                           	opt callstack 0
 32672                           
 32673 ;; *************** function _TMR3_ISR *****************
 32674 ;; Defined at:
 32675 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 32676 ;; Parameters:    Size  Location     Type
 32677 ;;		None
 32678 ;; Auto vars:     Size  Location     Type
 32679 ;;		None
 32680 ;; Return value:  Size  Location     Type
 32681 ;;                  1    wreg      void 
 32682 ;; Registers used:
 32683 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32684 ;; Tracked objects:
 32685 ;;		On entry : 0/0
 32686 ;;		On exit  : 0/0
 32687 ;;		Unchanged: 0/0
 32688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32693 ;;Total ram usage:        0 bytes
 32694 ;; Hardware stack levels used:    1
 32695 ;; Hardware stack levels required when called:    9
 32696 ;; This function calls:
 32697 ;;		Absolute function
 32698 ;;		_QIIdleChargedTimerHandler
 32699 ;;		_TMR3_DefaultInterruptHandler
 32700 ;;		i1_TMR3_WriteTimer
 32701 ;; This function is called by:
 32702 ;;		_INTERRUPT_InterruptManagerLow
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text121
 32707  01B8DC                     __ptext121:
 32708                           	opt callstack 0
 32709  01B8DC                     _TMR3_ISR:
 32710                           	opt callstack 12
 32711                           
 32712                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 32713                           
 32714                           ;incstack = 0
 32715  01B8DC  010E               	movlb	14	; () banked
 32716  01B8DE  95CE               	bcf	206,2,b	;volatile
 32717                           
 32718                           ; BSR set to: 14
 32719                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 32720  01B8E0  C193  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 32721  01B8E4  C194  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 32722  01B8E8  ECE3  F0DE         	call	i1_TMR3_WriteTimer	;wreg free
 32723                           
 32724                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 32725  01B8EC  0101               	movlb	1	; () banked
 32726  01B8EE  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32727  01B8F0  1172               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32728  01B8F2  1173               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32729  01B8F4  B4D8               	btfsc	status,2,c
 32730  01B8F6  0012               	return	
 32731                           
 32732                           ; BSR set to: 1
 32733                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 32734  01B8F8  D801               	call	i1u1856_28
 32735  01B8FA  0012               	return	
 32736  01B8FC                     i1u1856_28:
 32737  01B8FC  0005               	push	
 32738  01B8FE  6EFA               	movwf	pclath,c
 32739  01B900  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32740  01B902  6EFD               	movwf	tosl,c
 32741  01B904  5172               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32742  01B906  6EFE               	movwf	tosh,c
 32743  01B908  5173               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32744  01B90A  6EFF               	movwf	tosu,c
 32745  01B90C  50FA               	movf	pclath,w,c
 32746  01B90E  0012               	return		;indir
 32747  01B910                     __end_of_TMR3_ISR:
 32748                           	opt callstack 0
 32749                           
 32750 ;; *************** function _QIIdleChargedTimerHandler *****************
 32751 ;; Defined at:
 32752 ;;		line 98 in file "NXQ_charge_state.c"
 32753 ;; Parameters:    Size  Location     Type
 32754 ;;		None
 32755 ;; Auto vars:     Size  Location     Type
 32756 ;;		None
 32757 ;; Return value:  Size  Location     Type
 32758 ;;                  1    wreg      void 
 32759 ;; Registers used:
 32760 ;;		wreg, status,2, cstack
 32761 ;; Tracked objects:
 32762 ;;		On entry : 0/0
 32763 ;;		On exit  : 0/0
 32764 ;;		Unchanged: 0/0
 32765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32770 ;;Total ram usage:        0 bytes
 32771 ;; Hardware stack levels used:    1
 32772 ;; Hardware stack levels required when called:    8
 32773 ;; This function calls:
 32774 ;;		i1_TMR3_Reload
 32775 ;;		i1_TMR3_StopTimer
 32776 ;; This function is called by:
 32777 ;;		_main
 32778 ;;		_TMR3_ISR
 32779 ;; This function uses a non-reentrant model
 32780 ;;
 32781                           
 32782                           	psect	text122
 32783  01BDA6                     __ptext122:
 32784                           	opt callstack 0
 32785  01BDA6                     _QIIdleChargedTimerHandler:
 32786                           	opt callstack 12
 32787                           
 32788                           ;NXQ_charge_state.c: 100: if (PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0) {
 32789                           
 32790                           ;incstack = 0
 32791  01BDA6  A48E               	btfss	3982,2,c	;volatile
 32792  01BDA8  B68E               	btfsc	3982,3,c	;volatile
 32793  01BDAA  D002               	goto	i1l1444
 32794                           
 32795                           ;NXQ_charge_state.c: 102: nxq_charge_state = QI_Idle;
 32796  01BDAC  0E00               	movlw	0
 32797  01BDAE  D004               	goto	L26
 32798  01BDB0                     i1l1444:
 32799                           
 32800                           ;NXQ_charge_state.c: 106: else if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1) {
 32801  01BDB0  B48E               	btfsc	3982,2,c	;volatile
 32802  01BDB2  A68E               	btfss	3982,3,c	;volatile
 32803  01BDB4  D003               	goto	i1l14940
 32804                           
 32805                           ;NXQ_charge_state.c: 108: nxq_charge_state = QI_Fully_Charged;
 32806  01BDB6  0E02               	movlw	2
 32807  01BDB8                     L26:
 32808  01BDB8  0101               	movlb	1	; () banked
 32809  01BDBA  6F95               	movwf	_nxq_charge_state& (0+255),b
 32810  01BDBC                     i1l14940:
 32811                           
 32812                           ;NXQ_charge_state.c: 110: };NXQ_charge_state.c: 112: TMR3_StopTimer();
 32813  01BDBC  ECC4  F0E0         	call	i1_TMR3_StopTimer	;wreg free
 32814                           
 32815                           ;NXQ_charge_state.c: 113: TMR3_Reload();
 32816  01BDC0  EC61  F0E0         	call	i1_TMR3_Reload	;wreg free
 32817  01BDC4  0012               	return		;funcret
 32818  01BDC6                     __end_of_QIIdleChargedTimerHandler:
 32819                           	opt callstack 0
 32820                           
 32821 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32822 ;; Defined at:
 32823 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 32824 ;; Parameters:    Size  Location     Type
 32825 ;;		None
 32826 ;; Auto vars:     Size  Location     Type
 32827 ;;		None
 32828 ;; Return value:  Size  Location     Type
 32829 ;;                  1    wreg      void 
 32830 ;; Registers used:
 32831 ;;		None
 32832 ;; Tracked objects:
 32833 ;;		On entry : 0/0
 32834 ;;		On exit  : 0/0
 32835 ;;		Unchanged: 0/0
 32836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32841 ;;Total ram usage:        0 bytes
 32842 ;; Hardware stack levels used:    1
 32843 ;; Hardware stack levels required when called:    6
 32844 ;; This function calls:
 32845 ;;		Nothing
 32846 ;; This function is called by:
 32847 ;;		_TMR3_Initialize
 32848 ;;		_TMR3_ISR
 32849 ;; This function uses a non-reentrant model
 32850 ;;
 32851                           
 32852                           	psect	text123
 32853  01C1A8                     __ptext123:
 32854                           	opt callstack 0
 32855  01C1A8                     _TMR3_DefaultInterruptHandler:
 32856                           	opt callstack 14
 32857                           
 32858                           ;incstack = 0
 32859  01C1A8  0012               	return		;funcret
 32860  01C1AA                     __end_of_TMR3_DefaultInterruptHandler:
 32861                           	opt callstack 0
 32862                           
 32863 ;; *************** function i1_TMR3_StopTimer *****************
 32864 ;; Defined at:
 32865 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 32866 ;; Parameters:    Size  Location     Type
 32867 ;;		None
 32868 ;; Auto vars:     Size  Location     Type
 32869 ;;		None
 32870 ;; Return value:  Size  Location     Type
 32871 ;;                  1    wreg      void 
 32872 ;; Registers used:
 32873 ;;		None
 32874 ;; Tracked objects:
 32875 ;;		On entry : 0/0
 32876 ;;		On exit  : 0/0
 32877 ;;		Unchanged: 0/0
 32878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32883 ;;Total ram usage:        0 bytes
 32884 ;; Hardware stack levels used:    1
 32885 ;; Hardware stack levels required when called:    6
 32886 ;; This function calls:
 32887 ;;		Nothing
 32888 ;; This function is called by:
 32889 ;;		_QIIdleChargedTimerHandler
 32890 ;; This function uses a non-reentrant model
 32891 ;;
 32892                           
 32893                           	psect	text124
 32894  01C188                     __ptext124:
 32895                           	opt callstack 0
 32896  01C188                     i1_TMR3_StopTimer:
 32897                           	opt callstack 13
 32898                           
 32899                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 32900                           
 32901                           ;incstack = 0
 32902  01C188  90C9               	bcf	4041,0,c	;volatile
 32903  01C18A  0012               	return		;funcret
 32904  01C18C                     __end_ofi1_TMR3_StopTimer:
 32905                           	opt callstack 0
 32906                           
 32907 ;; *************** function i1_TMR3_Reload *****************
 32908 ;; Defined at:
 32909 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 32910 ;; Parameters:    Size  Location     Type
 32911 ;;		None
 32912 ;; Auto vars:     Size  Location     Type
 32913 ;;		None
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1    wreg      void 
 32916 ;; Registers used:
 32917 ;;		wreg, status,2, cstack
 32918 ;; Tracked objects:
 32919 ;;		On entry : 0/0
 32920 ;;		On exit  : 0/0
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32927 ;;Total ram usage:        0 bytes
 32928 ;; Hardware stack levels used:    1
 32929 ;; Hardware stack levels required when called:    7
 32930 ;; This function calls:
 32931 ;;		i1_TMR3_WriteTimer
 32932 ;; This function is called by:
 32933 ;;		_QIIdleChargedTimerHandler
 32934 ;; This function uses a non-reentrant model
 32935 ;;
 32936                           
 32937                           	psect	text125
 32938  01C0C2                     __ptext125:
 32939                           	opt callstack 0
 32940  01C0C2                     i1_TMR3_Reload:
 32941                           	opt callstack 12
 32942                           
 32943                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 32944                           
 32945                           ;incstack = 0
 32946  01C0C2  C193  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 32947  01C0C6  C194  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 32948  01C0CA  ECE3  F0DE         	call	i1_TMR3_WriteTimer	;wreg free
 32949  01C0CE  0012               	return		;funcret
 32950  01C0D0                     __end_ofi1_TMR3_Reload:
 32951                           	opt callstack 0
 32952                           
 32953 ;; *************** function i1_TMR3_WriteTimer *****************
 32954 ;; Defined at:
 32955 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 32956 ;; Parameters:    Size  Location     Type
 32957 ;;  timerVal        2    0[BANK1 ] unsigned int 
 32958 ;; Auto vars:     Size  Location     Type
 32959 ;;		None
 32960 ;; Return value:  Size  Location     Type
 32961 ;;                  1    wreg      void 
 32962 ;; Registers used:
 32963 ;;		wreg, status,2
 32964 ;; Tracked objects:
 32965 ;;		On entry : 0/0
 32966 ;;		On exit  : 0/0
 32967 ;;		Unchanged: 0/0
 32968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32969 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32972 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32973 ;;Total ram usage:        2 bytes
 32974 ;; Hardware stack levels used:    1
 32975 ;; Hardware stack levels required when called:    6
 32976 ;; This function calls:
 32977 ;;		Nothing
 32978 ;; This function is called by:
 32979 ;;		_TMR3_ISR
 32980 ;;		i1_TMR3_Reload
 32981 ;; This function uses a non-reentrant model
 32982 ;;
 32983                           
 32984                           	psect	text126
 32985  01BDC6                     __ptext126:
 32986                           	opt callstack 0
 32987  01BDC6                     i1_TMR3_WriteTimer:
 32988                           	opt callstack 14
 32989                           
 32990                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 32991                           
 32992                           ;incstack = 0
 32993  01BDC6  A4C9               	btfss	4041,2,c	;volatile
 32994  01BDC8  D008               	goto	i1l12676
 32995                           
 32996                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 32997  01BDCA  90C9               	bcf	4041,0,c	;volatile
 32998                           
 32999                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 33000  01BDCC  0101               	movlb	1	; () banked
 33001  01BDCE  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 33002  01BDD0  6EC8               	movwf	4040,c	;volatile
 33003                           
 33004                           ; BSR set to: 1
 33005                           ;tmr3.c: 136: TMR3L = timerVal;
 33006  01BDD2  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 33007                           
 33008                           ; BSR set to: 1
 33009                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 33010  01BDD6  80C9               	bsf	4041,0,c	;volatile
 33011                           
 33012                           ;tmr3.c: 140: }
 33013  01BDD8  0012               	return	
 33014  01BDDA                     i1l12676:
 33015                           
 33016                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 33017  01BDDA  0101               	movlb	1	; () banked
 33018  01BDDC  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 33019  01BDDE  6EC8               	movwf	4040,c	;volatile
 33020                           
 33021                           ; BSR set to: 1
 33022                           ;tmr3.c: 145: TMR3L = timerVal;
 33023  01BDE0  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 33024                           
 33025                           ; BSR set to: 1
 33026  01BDE4  0012               	return		;funcret
 33027  01BDE6                     __end_ofi1_TMR3_WriteTimer:
 33028                           	opt callstack 0
 33029                           
 33030 ;; *************** function _TMR2_ISR *****************
 33031 ;; Defined at:
 33032 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 33033 ;; Parameters:    Size  Location     Type
 33034 ;;		None
 33035 ;; Auto vars:     Size  Location     Type
 33036 ;;		None
 33037 ;; Return value:  Size  Location     Type
 33038 ;;                  1    wreg      void 
 33039 ;; Registers used:
 33040 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 33041 ;; Tracked objects:
 33042 ;;		On entry : 0/0
 33043 ;;		On exit  : 0/0
 33044 ;;		Unchanged: 0/0
 33045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33050 ;;Total ram usage:        0 bytes
 33051 ;; Hardware stack levels used:    1
 33052 ;; Hardware stack levels required when called:    9
 33053 ;; This function calls:
 33054 ;;		Absolute function
 33055 ;;		_ADC_acquisitionTimerHandler
 33056 ;;		_TMR2_DefaultInterruptHandler
 33057 ;; This function is called by:
 33058 ;;		_INTERRUPT_InterruptManagerLow
 33059 ;; This function uses a non-reentrant model
 33060 ;;
 33061                           
 33062                           	psect	text127
 33063  01BB92                     __ptext127:
 33064                           	opt callstack 0
 33065  01BB92                     _TMR2_ISR:
 33066                           	opt callstack 12
 33067                           
 33068                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 33069                           
 33070                           ; BSR set to: 1
 33071                           ;incstack = 0
 33072  01BB92  010E               	movlb	14	; () banked
 33073  01BB94  93CE               	bcf	206,1,b	;volatile
 33074                           
 33075                           ; BSR set to: 14
 33076                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 33077  01BB96  0101               	movlb	1	; () banked
 33078  01BB98  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33079  01BB9A  1175               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33080  01BB9C  1176               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 33081  01BB9E  B4D8               	btfsc	status,2,c
 33082  01BBA0  0012               	return	
 33083                           
 33084                           ; BSR set to: 1
 33085                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 33086  01BBA2  D801               	call	i1u1841_28
 33087  01BBA4  0012               	return	
 33088  01BBA6                     i1u1841_28:
 33089  01BBA6  0005               	push	
 33090  01BBA8  6EFA               	movwf	pclath,c
 33091  01BBAA  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33092  01BBAC  6EFD               	movwf	tosl,c
 33093  01BBAE  5175               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33094  01BBB0  6EFE               	movwf	tosh,c
 33095  01BBB2  5176               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 33096  01BBB4  6EFF               	movwf	tosu,c
 33097  01BBB6  50FA               	movf	pclath,w,c
 33098  01BBB8  0012               	return		;indir
 33099  01BBBA                     __end_of_TMR2_ISR:
 33100                           	opt callstack 0
 33101                           
 33102 ;; *************** function _ADC_acquisitionTimerHandler *****************
 33103 ;; Defined at:
 33104 ;;		line 135 in file "adc_postprocessing.c"
 33105 ;; Parameters:    Size  Location     Type
 33106 ;;		None
 33107 ;; Auto vars:     Size  Location     Type
 33108 ;;		None
 33109 ;; Return value:  Size  Location     Type
 33110 ;;                  1    wreg      void 
 33111 ;; Registers used:
 33112 ;;		wreg, status,2, cstack
 33113 ;; Tracked objects:
 33114 ;;		On entry : 0/0
 33115 ;;		On exit  : 0/0
 33116 ;;		Unchanged: 0/0
 33117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33122 ;;Total ram usage:        0 bytes
 33123 ;; Hardware stack levels used:    1
 33124 ;; Hardware stack levels required when called:    8
 33125 ;; This function calls:
 33126 ;;		_ADCC_ClearAccumulator
 33127 ;;		_ADCC_DischargeSampleCapacitor
 33128 ;;		_ADCC_StartConversion
 33129 ;;		_TMR2_StopTimer
 33130 ;; This function is called by:
 33131 ;;		_main
 33132 ;;		_TMR2_ISR
 33133 ;; This function uses a non-reentrant model
 33134 ;;
 33135                           
 33136                           	psect	text128
 33137  01BEAA                     __ptext128:
 33138                           	opt callstack 0
 33139  01BEAA                     _ADC_acquisitionTimerHandler:
 33140                           	opt callstack 12
 33141                           
 33142                           ;adc_postprocessing.c: 139: TMR2_StopTimer();
 33143                           
 33144                           ;incstack = 0
 33145  01BEAA  ECB5  F0E0         	call	_TMR2_StopTimer	;wreg free
 33146                           
 33147                           ;adc_postprocessing.c: 140: TMR2 = 0;
 33148  01BEAE  0E00               	movlw	0
 33149  01BEB0  6EBB               	movwf	4027,c	;volatile
 33150                           
 33151                           ;adc_postprocessing.c: 143: ADCC_DischargeSampleCapacitor();
 33152  01BEB2  ECAE  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33153                           
 33154                           ;adc_postprocessing.c: 146: ADCC_ClearAccumulator();
 33155  01BEB6  ECB8  F0E0         	call	_ADCC_ClearAccumulator	;wreg free
 33156                           
 33157                           ;adc_postprocessing.c: 149: ADCC_StartConversion(next_adc_channel);
 33158  01BEBA  0100               	movlb	0	; () banked
 33159  01BEBC  51FD               	movf	_next_adc_channel& (0+255),w,b
 33160  01BEBE  EC68  F0E0         	call	_ADCC_StartConversion
 33161  01BEC2  0012               	return		;funcret
 33162  01BEC4                     __end_of_ADC_acquisitionTimerHandler:
 33163                           	opt callstack 0
 33164                           
 33165 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33166 ;; Defined at:
 33167 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 33168 ;; Parameters:    Size  Location     Type
 33169 ;;		None
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;		None
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  1    wreg      void 
 33174 ;; Registers used:
 33175 ;;		None
 33176 ;; Tracked objects:
 33177 ;;		On entry : 0/0
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33185 ;;Total ram usage:        0 bytes
 33186 ;; Hardware stack levels used:    1
 33187 ;; Hardware stack levels required when called:    6
 33188 ;; This function calls:
 33189 ;;		Nothing
 33190 ;; This function is called by:
 33191 ;;		_TMR2_Initialize
 33192 ;;		_TMR2_ISR
 33193 ;; This function uses a non-reentrant model
 33194 ;;
 33195                           
 33196                           	psect	text129
 33197  01C1AA                     __ptext129:
 33198                           	opt callstack 0
 33199  01C1AA                     _TMR2_DefaultInterruptHandler:
 33200                           	opt callstack 14
 33201                           
 33202                           ;incstack = 0
 33203  01C1AA  0012               	return		;funcret
 33204  01C1AC                     __end_of_TMR2_DefaultInterruptHandler:
 33205                           	opt callstack 0
 33206                           
 33207 ;; *************** function _TMR2_StopTimer *****************
 33208 ;; Defined at:
 33209 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 33210 ;; Parameters:    Size  Location     Type
 33211 ;;		None
 33212 ;; Auto vars:     Size  Location     Type
 33213 ;;		None
 33214 ;; Return value:  Size  Location     Type
 33215 ;;                  1    wreg      void 
 33216 ;; Registers used:
 33217 ;;		cstack
 33218 ;; Tracked objects:
 33219 ;;		On entry : 0/0
 33220 ;;		On exit  : 0/0
 33221 ;;		Unchanged: 0/0
 33222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33227 ;;Total ram usage:        0 bytes
 33228 ;; Hardware stack levels used:    1
 33229 ;; Hardware stack levels required when called:    7
 33230 ;; This function calls:
 33231 ;;		_TMR2_Stop
 33232 ;; This function is called by:
 33233 ;;		_ADC_acquisitionTimerHandler
 33234 ;; This function uses a non-reentrant model
 33235 ;;
 33236                           
 33237                           	psect	text130
 33238  01C16A                     __ptext130:
 33239                           	opt callstack 0
 33240  01C16A                     _TMR2_StopTimer:
 33241                           	opt callstack 12
 33242                           
 33243                           ;tmr2.c: 127: TMR2_Stop();
 33244                           
 33245                           ;incstack = 0
 33246  01C16A  ECC6  F0E0         	call	_TMR2_Stop	;wreg free
 33247  01C16E  0012               	return		;funcret
 33248  01C170                     __end_of_TMR2_StopTimer:
 33249                           	opt callstack 0
 33250                           
 33251 ;; *************** function _TMR2_Stop *****************
 33252 ;; Defined at:
 33253 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 33254 ;; Parameters:    Size  Location     Type
 33255 ;;		None
 33256 ;; Auto vars:     Size  Location     Type
 33257 ;;		None
 33258 ;; Return value:  Size  Location     Type
 33259 ;;                  1    wreg      void 
 33260 ;; Registers used:
 33261 ;;		None
 33262 ;; Tracked objects:
 33263 ;;		On entry : 0/0
 33264 ;;		On exit  : 0/0
 33265 ;;		Unchanged: 0/0
 33266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33271 ;;Total ram usage:        0 bytes
 33272 ;; Hardware stack levels used:    1
 33273 ;; Hardware stack levels required when called:    6
 33274 ;; This function calls:
 33275 ;;		Nothing
 33276 ;; This function is called by:
 33277 ;;		_TMR2_StopTimer
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text131
 33282  01C18C                     __ptext131:
 33283                           	opt callstack 0
 33284  01C18C                     _TMR2_Stop:
 33285                           	opt callstack 12
 33286                           
 33287                           ;tmr2.c: 122: T2CONbits.TMR2ON = 0;
 33288                           
 33289                           ;incstack = 0
 33290  01C18C  9EBD               	bcf	4029,7,c	;volatile
 33291  01C18E  0012               	return		;funcret
 33292  01C190                     __end_of_TMR2_Stop:
 33293                           	opt callstack 0
 33294                           
 33295 ;; *************** function _ADCC_StartConversion *****************
 33296 ;; Defined at:
 33297 ;;		line 112 in file "mcc_generated_files/adcc.c"
 33298 ;; Parameters:    Size  Location     Type
 33299 ;;  channel         1    wreg     enum E9432
 33300 ;; Auto vars:     Size  Location     Type
 33301 ;;  channel         1    0[BANK1 ] enum E9432
 33302 ;; Return value:  Size  Location     Type
 33303 ;;                  1    wreg      void 
 33304 ;; Registers used:
 33305 ;;		wreg
 33306 ;; Tracked objects:
 33307 ;;		On entry : 0/0
 33308 ;;		On exit  : 0/0
 33309 ;;		Unchanged: 0/0
 33310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33312 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;Total ram usage:        1 bytes
 33316 ;; Hardware stack levels used:    1
 33317 ;; Hardware stack levels required when called:    6
 33318 ;; This function calls:
 33319 ;;		Nothing
 33320 ;; This function is called by:
 33321 ;;		_ADC_acquisitionTimerHandler
 33322 ;; This function uses a non-reentrant model
 33323 ;;
 33324                           
 33325                           	psect	text132
 33326  01C0D0                     __ptext132:
 33327                           	opt callstack 0
 33328  01C0D0                     _ADCC_StartConversion:
 33329                           	opt callstack 13
 33330                           
 33331                           ;incstack = 0
 33332                           ;ADCC_StartConversion@channel stored from wreg
 33333  01C0D0  0101               	movlb	1	; () banked
 33334  01C0D2  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 33335                           
 33336                           ;adcc.c: 115: ADPCH = channel;
 33337  01C0D4  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 33338                           
 33339                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 33340  01C0D8  8E60               	bsf	3936,7,c	;volatile
 33341                           
 33342                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 33343  01C0DA  8060               	bsf	3936,0,c	;volatile
 33344  01C0DC  0012               	return		;funcret
 33345  01C0DE                     __end_of_ADCC_StartConversion:
 33346                           	opt callstack 0
 33347                           
 33348 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 33349 ;; Defined at:
 33350 ;;		line 174 in file "mcc_generated_files/adcc.c"
 33351 ;; Parameters:    Size  Location     Type
 33352 ;;		None
 33353 ;; Auto vars:     Size  Location     Type
 33354 ;;		None
 33355 ;; Return value:  Size  Location     Type
 33356 ;;                  1    wreg      void 
 33357 ;; Registers used:
 33358 ;;		wreg, status,2
 33359 ;; Tracked objects:
 33360 ;;		On entry : 0/0
 33361 ;;		On exit  : 0/0
 33362 ;;		Unchanged: 0/0
 33363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33368 ;;Total ram usage:        0 bytes
 33369 ;; Hardware stack levels used:    1
 33370 ;; Hardware stack levels required when called:    6
 33371 ;; This function calls:
 33372 ;;		Nothing
 33373 ;; This function is called by:
 33374 ;;		_ADC_acquisitionTimerHandler
 33375 ;; This function uses a non-reentrant model
 33376 ;;
 33377                           
 33378                           	psect	text133
 33379  01C15C                     __ptext133:
 33380                           	opt callstack 0
 33381  01C15C                     _ADCC_DischargeSampleCapacitor:
 33382                           	opt callstack 13
 33383                           
 33384                           ;adcc.c: 177: ADPCH = 0x3c;
 33385                           
 33386                           ;incstack = 0
 33387  01C15C  0E3C               	movlw	60
 33388  01C15E  010F               	movlb	15	; () banked
 33389  01C160  6F5F               	movwf	95,b	;volatile
 33390                           
 33391                           ; BSR set to: 15
 33392  01C162  0012               	return		;funcret
 33393  01C164                     __end_of_ADCC_DischargeSampleCapacitor:
 33394                           	opt callstack 0
 33395                           
 33396 ;; *************** function _ADCC_ClearAccumulator *****************
 33397 ;; Defined at:
 33398 ;;		line 204 in file "mcc_generated_files/adcc.c"
 33399 ;; Parameters:    Size  Location     Type
 33400 ;;		None
 33401 ;; Auto vars:     Size  Location     Type
 33402 ;;		None
 33403 ;; Return value:  Size  Location     Type
 33404 ;;                  1    wreg      void 
 33405 ;; Registers used:
 33406 ;;		None
 33407 ;; Tracked objects:
 33408 ;;		On entry : 0/0
 33409 ;;		On exit  : 0/0
 33410 ;;		Unchanged: 0/0
 33411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33416 ;;Total ram usage:        0 bytes
 33417 ;; Hardware stack levels used:    1
 33418 ;; Hardware stack levels required when called:    6
 33419 ;; This function calls:
 33420 ;;		Nothing
 33421 ;; This function is called by:
 33422 ;;		_ADC_acquisitionTimerHandler
 33423 ;; This function uses a non-reentrant model
 33424 ;;
 33425                           
 33426                           	psect	text134
 33427  01C170                     __ptext134:
 33428                           	opt callstack 0
 33429  01C170                     _ADCC_ClearAccumulator:
 33430                           	opt callstack 13
 33431                           
 33432                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 33433                           
 33434                           ; BSR set to: 15
 33435                           ;incstack = 0
 33436  01C170  010F               	movlb	15	; () banked
 33437  01C172  875A               	bsf	90,3,b	;volatile
 33438                           
 33439                           ; BSR set to: 15
 33440  01C174  0012               	return		;funcret
 33441  01C176                     __end_of_ADCC_ClearAccumulator:
 33442                           	opt callstack 0
 33443                           
 33444 ;; *************** function _I2C2_ISR *****************
 33445 ;; Defined at:
 33446 ;;		line 236 in file "mcc_generated_files/i2c2.c"
 33447 ;; Parameters:    Size  Location     Type
 33448 ;;		None
 33449 ;; Auto vars:     Size  Location     Type
 33450 ;;		None
 33451 ;; Return value:  Size  Location     Type
 33452 ;;                  1    wreg      void 
 33453 ;; Registers used:
 33454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33455 ;; Tracked objects:
 33456 ;;		On entry : 0/0
 33457 ;;		On exit  : 0/0
 33458 ;;		Unchanged: 0/0
 33459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33462 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33463 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33464 ;;Total ram usage:        2 bytes
 33465 ;; Hardware stack levels used:    1
 33466 ;; Hardware stack levels required when called:    7
 33467 ;; This function calls:
 33468 ;;		_I2C2_FunctionComplete
 33469 ;;		_I2C2_Stop
 33470 ;; This function is called by:
 33471 ;;		_INTERRUPT_InterruptManagerLow
 33472 ;; This function uses a non-reentrant model
 33473 ;;
 33474                           
 33475                           	psect	text135
 33476  01869A                     __ptext135:
 33477                           	opt callstack 0
 33478  01869A                     _I2C2_ISR:
 33479                           	opt callstack 14
 33480                           
 33481                           ;i2c2.c: 239: static uint8_t *pi2c_buf_ptr;;i2c2.c: 240: static uint16_t i2c_address = 0
      +                          ;;i2c2.c: 241: static uint8_t i2c_bytes_left = 0;;i2c2.c: 242: static uint8_t i2c_10bit_
      +                          address_restart = 0;;i2c2.c: 244: PIR3bits.SSP2IF = 0;
 33482                           
 33483                           ; BSR set to: 15
 33484                           ;incstack = 0
 33485  01869A  010E               	movlb	14	; () banked
 33486  01869C  95CD               	bcf	205,2,b	;volatile
 33487                           
 33488                           ;i2c2.c: 248: if(SSP2CON1bits.WCOL)
 33489  01869E  AF96               	btfss	150,7,b	;volatile
 33490  0186A0  D113               	goto	i1l21254
 33491                           
 33492                           ; BSR set to: 14
 33493                           ;i2c2.c: 249: {;i2c2.c: 251: SSP2CON1bits.WCOL = 0;
 33494  0186A2  9F96               	bcf	150,7,b	;volatile
 33495                           
 33496                           ; BSR set to: 14
 33497                           ;i2c2.c: 252: i2c2_state = S_MASTER_IDLE;
 33498  0186A4  0E00               	movlw	0
 33499  0186A6  0100               	movlb	0	; () banked
 33500  0186A8  6FDC               	movwf	_i2c2_state& (0+255),b
 33501                           
 33502                           ; BSR set to: 0
 33503                           ;i2c2.c: 253: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
 33504  0186AA  EE20 F003          	lfsr	2,3
 33505  0186AE  51D3               	movf	_p_i2c2_current& (0+255),w,b
 33506  0186B0  26D9               	addwf	fsr2l,f,c
 33507  0186B2  51D4               	movf	(_p_i2c2_current+1)& (0+255),w,b
 33508  0186B4  22DA               	addwfc	fsr2h,f,c
 33509  0186B6  CFDE F103          	movff	postinc2,??_I2C2_ISR
 33510  0186BA  CFDD F104          	movff	postdec2,??_I2C2_ISR+1
 33511  0186BE  C103  FFD9         	movff	??_I2C2_ISR,fsr2l
 33512  0186C2  C104  FFDA         	movff	??_I2C2_ISR+1,fsr2h
 33513  0186C6  0E01               	movlw	1
 33514  0186C8  6EDF               	movwf	indf2,c
 33515                           
 33516                           ; BSR set to: 0
 33517                           ;i2c2.c: 256: p_i2c2_current = (0);
 33518  0186CA  0E00               	movlw	0
 33519  0186CC  6FD3               	movwf	_p_i2c2_current& (0+255),b
 33520  0186CE  0E00               	movlw	0
 33521  0186D0  6FD4               	movwf	(_p_i2c2_current+1)& (0+255),b
 33522  0186D2  0012               	return	
 33523  0186D4                     i1l937:
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;i2c2.c: 266: if(i2c2_object.trStatus.s.empty != 1)
 33527  0186D4  0101               	movlb	1	; () banked
 33528  0186D6  B365               	btfsc	(_i2c2_object+4)& (0+255),1,b
 33529  0186D8  0012               	return	
 33530                           
 33531                           ; BSR set to: 1
 33532                           ;i2c2.c: 267: {;i2c2.c: 269: p_i2c2_current = i2c2_object.pTrHead;
 33533  0186DA  C163  F0D3         	movff	_i2c2_object+2,_p_i2c2_current
 33534  0186DE  C164  F0D4         	movff	_i2c2_object+3,_p_i2c2_current+1
 33535                           
 33536                           ; BSR set to: 1
 33537                           ;i2c2.c: 270: i2c2_trb_count = i2c2_object.pTrHead->count;
 33538  0186E2  C163  FFD9         	movff	_i2c2_object+2,fsr2l
 33539  0186E6  C164  FFDA         	movff	_i2c2_object+3,fsr2h
 33540  0186EA  50DF               	movf	indf2,w,c
 33541  0186EC  0100               	movlb	0	; () banked
 33542  0186EE  6FDB               	movwf	_i2c2_trb_count& (0+255),b
 33543                           
 33544                           ; BSR set to: 0
 33545                           ;i2c2.c: 271: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
 33546  0186F0  0101               	movlb	1	; () banked
 33547  0186F2  EE20 F001          	lfsr	2,1
 33548  0186F6  5163               	movf	(_i2c2_object+2)& (0+255),w,b
 33549  0186F8  26D9               	addwf	fsr2l,f,c
 33550  0186FA  5164               	movf	(_i2c2_object+3)& (0+255),w,b
 33551  0186FC  22DA               	addwfc	fsr2h,f,c
 33552  0186FE  CFDE F0D5          	movff	postinc2,_p_i2c2_trb_current
 33553  018702  CFDD F0D6          	movff	postdec2,_p_i2c2_trb_current+1
 33554                           
 33555                           ; BSR set to: 1
 33556                           ;i2c2.c: 273: i2c2_object.pTrHead++;
 33557  018706  0E05               	movlw	5
 33558  018708  2763               	addwf	(_i2c2_object+2)& (0+255),f,b
 33559  01870A  0E00               	movlw	0
 33560  01870C  2364               	addwfc	(_i2c2_object+3)& (0+255),f,b
 33561                           
 33562                           ; BSR set to: 1
 33563                           ;i2c2.c: 276: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
 33564  01870E  0EBD               	movlw	low (_i2c2_tr_queue+5)
 33565  018710  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 33566  018712  E108               	bnz	i1l21146
 33567  018714  0E01               	movlw	high (_i2c2_tr_queue+5)
 33568  018716  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 33569  018718  A4D8               	btfss	status,2,c
 33570  01871A  D004               	goto	i1l21146
 33571                           
 33572                           ; BSR set to: 1
 33573                           ;i2c2.c: 277: {;i2c2.c: 279: i2c2_object.pTrHead = i2c2_tr_queue;
 33574  01871C  0EB8               	movlw	low _i2c2_tr_queue
 33575  01871E  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 33576  018720  0E01               	movlw	high _i2c2_tr_queue
 33577  018722  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 33578  018724                     i1l21146:
 33579                           
 33580                           ; BSR set to: 1
 33581                           ;i2c2.c: 280: };i2c2.c: 284: i2c2_object.trStatus.s.full = 0;
 33582  018724  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 33583                           
 33584                           ;i2c2.c: 287: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
 33585  018726  5161               	movf	_i2c2_object& (0+255),w,b
 33586  018728  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 33587  01872A  E104               	bnz	i1l940
 33588  01872C  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33589  01872E  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 33590  018730  B4D8               	btfsc	status,2,c
 33591                           
 33592                           ; BSR set to: 1
 33593                           ;i2c2.c: 288: {;i2c2.c: 290: i2c2_object.trStatus.s.empty = 1;
 33594  018732  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 33595  018734                     i1l940:
 33596                           
 33597                           ; BSR set to: 1
 33598                           ;i2c2.c: 291: };i2c2.c: 294: SSP2CON2bits.SEN = 1;
 33599  018734  010E               	movlb	14	; () banked
 33600  018736  8197               	bsf	151,0,b	;volatile
 33601  018738                     i1l21150:
 33602                           
 33603                           ;i2c2.c: 297: i2c2_state = S_MASTER_SEND_ADDR;
 33604  018738  0E02               	movlw	2
 33605  01873A  0100               	movlb	0	; () banked
 33606  01873C  6FDC               	movwf	_i2c2_state& (0+255),b
 33607  01873E  0012               	return	
 33608  018740                     i1l943:
 33609                           
 33610                           ; BSR set to: 0
 33611                           ;i2c2.c: 316: if(SSP2CON2bits.ACKSTAT)
 33612  018740  010E               	movlb	14	; () banked
 33613  018742  AD97               	btfss	151,6,b	;volatile
 33614  018744  D006               	goto	i1l21158
 33615                           
 33616                           ; BSR set to: 14
 33617                           ;i2c2.c: 317: {;i2c2.c: 318: i2c2_object.i2cErrors++;
 33618  018746  0101               	movlb	1	; () banked
 33619  018748  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 33620                           
 33621                           ; BSR set to: 1
 33622                           ;i2c2.c: 319: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 33623  01874A  0E04               	movlw	4
 33624  01874C  EC85  F0DA         	call	_I2C2_Stop
 33625                           
 33626                           ;i2c2.c: 320: }
 33627  018750  0012               	return	
 33628  018752                     i1l21158:
 33629                           
 33630                           ; BSR set to: 14
 33631                           ;i2c2.c: 321: else;i2c2.c: 322: {;i2c2.c: 324: SSP2BUF = (i2c_address >> 1) & 0x00FF;
 33632  018752  90D8               	bcf	status,0,c
 33633  018754  0100               	movlb	0	; () banked
 33634  018756  31FB               	rrcf	(I2C2_ISR@i2c_address+1)& (0+255),w,b
 33635  018758  0101               	movlb	1	; () banked
 33636  01875A  6F04               	movwf	(??_I2C2_ISR+1)& (0+255),b
 33637  01875C  0100               	movlb	0	; () banked
 33638  01875E  31FA               	rrcf	I2C2_ISR@i2c_address& (0+255),w,b
 33639  018760  0101               	movlb	1	; () banked
 33640  018762  6F03               	movwf	??_I2C2_ISR& (0+255),b
 33641  018764  5103               	movf	??_I2C2_ISR& (0+255),w,b
 33642  018766  010E               	movlb	14	; () banked
 33643  018768  6F92               	movwf	146,b	;volatile
 33644                           
 33645                           ; BSR set to: 14
 33646                           ;i2c2.c: 327: if(i2c_address & 0x01)
 33647  01876A  0100               	movlb	0	; () banked
 33648  01876C  A1FA               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 33649  01876E  D003               	goto	i1l21164
 33650                           
 33651                           ; BSR set to: 0
 33652                           ;i2c2.c: 328: {;i2c2.c: 331: i2c2_state = S_MASTER_10BIT_RESTART;
 33653  018770  0E0B               	movlw	11
 33654  018772  6FDC               	movwf	_i2c2_state& (0+255),b
 33655                           
 33656                           ;i2c2.c: 332: }
 33657  018774  0012               	return	
 33658  018776                     i1l21164:
 33659                           
 33660                           ; BSR set to: 0
 33661                           ;i2c2.c: 333: else;i2c2.c: 334: {;i2c2.c: 336: i2c2_state = S_MASTER_SEND_DATA;
 33662  018776  0E03               	movlw	3
 33663  018778  6FDC               	movwf	_i2c2_state& (0+255),b
 33664  01877A  0012               	return	
 33665  01877C                     i1l948:
 33666                           
 33667                           ; BSR set to: 0
 33668                           ;i2c2.c: 344: if(SSP2CON2bits.ACKSTAT)
 33669  01877C  010E               	movlb	14	; () banked
 33670  01877E  AD97               	btfss	151,6,b	;volatile
 33671  018780  D006               	goto	i1l949
 33672                           
 33673                           ; BSR set to: 14
 33674                           ;i2c2.c: 345: {;i2c2.c: 346: i2c2_object.i2cErrors++;
 33675  018782  0101               	movlb	1	; () banked
 33676  018784  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 33677                           
 33678                           ; BSR set to: 1
 33679                           ;i2c2.c: 347: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 33680  018786  0E04               	movlw	4
 33681  018788  EC85  F0DA         	call	_I2C2_Stop
 33682                           
 33683                           ;i2c2.c: 348: }
 33684  01878C  0012               	return	
 33685  01878E                     i1l949:
 33686                           
 33687                           ; BSR set to: 14
 33688                           ;i2c2.c: 349: else;i2c2.c: 350: {;i2c2.c: 353: SSP2CON2bits.RSEN = 1;
 33689  01878E  8397               	bsf	151,1,b	;volatile
 33690                           
 33691                           ; BSR set to: 14
 33692                           ;i2c2.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 33693  018790  C0FA  F103         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
 33694  018794  C0FB  F104         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
 33695  018798  C104  F103         	movff	??_I2C2_ISR+1,??_I2C2_ISR
 33696  01879C  0101               	movlb	1	; () banked
 33697  01879E  6B04               	clrf	(??_I2C2_ISR+1)& (0+255),b
 33698  0187A0  0E06               	movlw	6
 33699  0187A2  1703               	andwf	??_I2C2_ISR& (0+255),f,b
 33700  0187A4  0E00               	movlw	0
 33701  0187A6  1704               	andwf	(??_I2C2_ISR+1)& (0+255),f,b
 33702  0187A8  0EF0               	movlw	240
 33703  0187AA  1103               	iorwf	??_I2C2_ISR& (0+255),w,b
 33704  0187AC  0100               	movlb	0	; () banked
 33705  0187AE  6FFA               	movwf	I2C2_ISR@i2c_address& (0+255),b
 33706  0187B0  0101               	movlb	1	; () banked
 33707  0187B2  5104               	movf	(??_I2C2_ISR+1)& (0+255),w,b
 33708  0187B4  0100               	movlb	0	; () banked
 33709  0187B6  6FFB               	movwf	(I2C2_ISR@i2c_address+1)& (0+255),b
 33710                           
 33711                           ; BSR set to: 0
 33712                           ;i2c2.c: 360: i2c_address |= 0x0001;
 33713  0187B8  81FA               	bsf	I2C2_ISR@i2c_address& (0+255),0,b
 33714                           
 33715                           ; BSR set to: 0
 33716                           ;i2c2.c: 363: i2c_10bit_address_restart = 1;
 33717  0187BA  0E01               	movlw	1
 33718  0187BC  6FD9               	movwf	I2C2_ISR@i2c_10bit_address_restart& (0+255),b
 33719  0187BE  D7BC               	goto	i1l21150
 33720  0187C0                     i1l21178:
 33721                           
 33722                           ; BSR set to: 0
 33723                           ;i2c2.c: 384: if(i2c_10bit_address_restart != 1)
 33724  0187C0  05D9               	decf	I2C2_ISR@i2c_10bit_address_restart& (0+255),w,b
 33725  0187C2  B4D8               	btfsc	status,2,c
 33726  0187C4  D01A               	goto	i1l953
 33727                           
 33728                           ; BSR set to: 0
 33729                           ;i2c2.c: 385: {;i2c2.c: 387: i2c_address = p_i2c2_trb_current->address;
 33730  0187C6  C0D5  FFD9         	movff	_p_i2c2_trb_current,fsr2l
 33731  0187CA  C0D6  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
 33732  0187CE  CFDE F0FA          	movff	postinc2,I2C2_ISR@i2c_address
 33733  0187D2  CFDD F0FB          	movff	postdec2,I2C2_ISR@i2c_address+1
 33734                           
 33735                           ; BSR set to: 0
 33736                           ;i2c2.c: 388: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
 33737  0187D6  EE20 F003          	lfsr	2,3
 33738  0187DA  51D5               	movf	_p_i2c2_trb_current& (0+255),w,b
 33739  0187DC  26D9               	addwf	fsr2l,f,c
 33740  0187DE  51D6               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 33741  0187E0  22DA               	addwfc	fsr2h,f,c
 33742  0187E2  CFDE F0D1          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
 33743  0187E6  CFDD F0D2          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
 33744                           
 33745                           ; BSR set to: 0
 33746                           ;i2c2.c: 389: i2c_bytes_left = p_i2c2_trb_current->length;
 33747  0187EA  EE20 F002          	lfsr	2,2
 33748  0187EE  51D5               	movf	_p_i2c2_trb_current& (0+255),w,b
 33749  0187F0  26D9               	addwf	fsr2l,f,c
 33750  0187F2  51D6               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 33751  0187F4  22DA               	addwfc	fsr2h,f,c
 33752  0187F6  50DF               	movf	indf2,w,c
 33753  0187F8  6FDA               	movwf	I2C2_ISR@i2c_bytes_left& (0+255),b
 33754  0187FA                     i1l953:
 33755                           
 33756                           ; BSR set to: 0
 33757                           ;i2c2.c: 412: else;i2c2.c: 413: {;i2c2.c: 415: SSP2BUF = i2c_address;
 33758  0187FA  C0FA  FE92         	movff	I2C2_ISR@i2c_address,3730	;volatile
 33759                           
 33760                           ;i2c2.c: 416: if(i2c_address & 0x01)
 33761  0187FE  A1FA               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 33762  018800  D7BA               	goto	i1l21164
 33763                           
 33764                           ; BSR set to: 0
 33765                           ;i2c2.c: 417: {;i2c2.c: 419: i2c2_state = S_MASTER_ACK_ADDR;
 33766  018802  0E05               	movlw	5
 33767  018804  6FDC               	movwf	_i2c2_state& (0+255),b
 33768                           
 33769                           ;i2c2.c: 420: }
 33770  018806  0012               	return	
 33771  018808                     i1l959:
 33772                           
 33773                           ; BSR set to: 0
 33774                           ;i2c2.c: 432: if(SSP2CON2bits.ACKSTAT)
 33775  018808  010E               	movlb	14	; () banked
 33776  01880A  AD97               	btfss	151,6,b	;volatile
 33777  01880C  D008               	goto	i1l21206
 33778                           
 33779                           ; BSR set to: 14
 33780                           ;i2c2.c: 433: {;i2c2.c: 435: i2c2_object.i2cErrors++;
 33781  01880E  0101               	movlb	1	; () banked
 33782  018810  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 33783                           
 33784                           ; BSR set to: 1
 33785                           ;i2c2.c: 438: SSP2CON2bits.ACKSTAT = 0;
 33786  018812  010E               	movlb	14	; () banked
 33787  018814  9D97               	bcf	151,6,b	;volatile
 33788                           
 33789                           ; BSR set to: 14
 33790                           ;i2c2.c: 441: I2C2_Stop(I2C2_DATA_NO_ACK);
 33791  018816  0E05               	movlw	5
 33792  018818  EC85  F0DA         	call	_I2C2_Stop
 33793                           
 33794                           ;i2c2.c: 443: }
 33795  01881C  0012               	return	
 33796  01881E                     i1l21206:
 33797                           
 33798                           ; BSR set to: 14
 33799                           ;i2c2.c: 444: else;i2c2.c: 445: {;i2c2.c: 447: if(i2c_bytes_left-- == 0U)
 33800  01881E  0100               	movlb	0	; () banked
 33801  018820  07DA               	decf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 33802  018822  29DA               	incf	I2C2_ISR@i2c_bytes_left& (0+255),w,b
 33803  018824  A4D8               	btfss	status,2,c
 33804  018826  D00D               	goto	i1l21216
 33805                           
 33806                           ; BSR set to: 0
 33807                           ;i2c2.c: 448: {;i2c2.c: 452: p_i2c2_trb_current++;
 33808  018828  0E05               	movlw	5
 33809  01882A  27D5               	addwf	_p_i2c2_trb_current& (0+255),f,b
 33810  01882C  0E00               	movlw	0
 33811  01882E  23D6               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 33812                           
 33813                           ; BSR set to: 0
 33814                           ;i2c2.c: 455: if(--i2c2_trb_count == 0)
 33815  018830  2FDB               	decfsz	_i2c2_trb_count& (0+255),f,b
 33816  018832  D004               	goto	i1l963
 33817                           
 33818                           ; BSR set to: 0
 33819                           ;i2c2.c: 456: {;i2c2.c: 457: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 33820  018834  0E00               	movlw	0
 33821  018836  EC85  F0DA         	call	_I2C2_Stop
 33822                           
 33823                           ;i2c2.c: 458: }
 33824  01883A  0012               	return	
 33825  01883C                     i1l963:
 33826                           
 33827                           ; BSR set to: 0
 33828                           ;i2c2.c: 459: else;i2c2.c: 460: {;i2c2.c: 467: SSP2CON2bits.RSEN = 1;
 33829  01883C  010E               	movlb	14	; () banked
 33830  01883E  8397               	bsf	151,1,b	;volatile
 33831  018840  D77B               	goto	i1l21150
 33832  018842                     i1l21216:
 33833                           
 33834                           ; BSR set to: 0
 33835                           ;i2c2.c: 474: else;i2c2.c: 475: {;i2c2.c: 477: SSP2BUF = *pi2c_buf_ptr++;
 33836  018842  C0D1  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 33837  018846  C0D2  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 33838  01884A  50DF               	movf	indf2,w,c
 33839  01884C  010E               	movlb	14	; () banked
 33840  01884E  6F92               	movwf	146,b	;volatile
 33841                           
 33842                           ; BSR set to: 14
 33843  018850  0100               	movlb	0	; () banked
 33844  018852  4BD1               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 33845  018854  2BD2               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 33846  018856  0012               	return	
 33847  018858                     i1l966:
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;i2c2.c: 485: if(SSP2CON2bits.ACKSTAT)
 33851  018858  010E               	movlb	14	; () banked
 33852  01885A  AD97               	btfss	151,6,b	;volatile
 33853  01885C  D008               	goto	i1l967
 33854                           
 33855                           ; BSR set to: 14
 33856                           ;i2c2.c: 486: {;i2c2.c: 489: i2c2_object.i2cErrors++;
 33857  01885E  0101               	movlb	1	; () banked
 33858  018860  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 33859                           
 33860                           ; BSR set to: 1
 33861                           ;i2c2.c: 492: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 33862  018862  0E04               	movlw	4
 33863  018864  EC85  F0DA         	call	_I2C2_Stop
 33864                           
 33865                           ;i2c2.c: 495: SSP2CON2bits.ACKSTAT = 0;
 33866  018868  010E               	movlb	14	; () banked
 33867  01886A  9D97               	bcf	151,6,b	;volatile
 33868                           
 33869                           ;i2c2.c: 496: }
 33870  01886C  0012               	return	
 33871  01886E                     i1l967:
 33872                           
 33873                           ; BSR set to: 14
 33874                           ;i2c2.c: 497: else;i2c2.c: 498: {;i2c2.c: 499: SSP2CON2bits.RCEN = 1;
 33875  01886E  8797               	bsf	151,3,b	;volatile
 33876                           
 33877                           ; BSR set to: 14
 33878                           ;i2c2.c: 500: i2c2_state = S_MASTER_ACK_RCV_DATA;
 33879  018870  0E08               	movlw	8
 33880  018872  0100               	movlb	0	; () banked
 33881  018874  6FDC               	movwf	_i2c2_state& (0+255),b
 33882  018876  0012               	return	
 33883  018878                     i1l21228:
 33884                           
 33885                           ; BSR set to: 0
 33886                           ;i2c2.c: 509: i2c2_state = S_MASTER_ACK_RCV_DATA;
 33887  018878  0E08               	movlw	8
 33888  01887A  6FDC               	movwf	_i2c2_state& (0+255),b
 33889                           
 33890                           ; BSR set to: 0
 33891                           ;i2c2.c: 512: SSP2CON2bits.RCEN = 1;
 33892  01887C  010E               	movlb	14	; () banked
 33893  01887E  8797               	bsf	151,3,b	;volatile
 33894                           
 33895                           ;i2c2.c: 514: break;
 33896  018880  0012               	return	
 33897  018882                     i1l21232:
 33898                           
 33899                           ; BSR set to: 0
 33900                           ;i2c2.c: 519: *pi2c_buf_ptr++ = SSP2BUF;
 33901  018882  C0D1  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 33902  018886  C0D2  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 33903  01888A  CE92 FFDF          	movff	3730,indf2	;volatile
 33904                           
 33905                           ; BSR set to: 0
 33906  01888E  4BD1               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 33907  018890  2BD2               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 33908                           
 33909                           ; BSR set to: 0
 33910                           ;i2c2.c: 522: if(--i2c_bytes_left)
 33911  018892  0E01               	movlw	1
 33912  018894  5FDA               	subwf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 33913  018896  B4D8               	btfsc	status,2,c
 33914  018898  D006               	goto	i1l971
 33915                           
 33916                           ; BSR set to: 0
 33917                           ;i2c2.c: 523: {;i2c2.c: 529: SSP2CON2bits.ACKDT = 0;
 33918  01889A  010E               	movlb	14	; () banked
 33919  01889C  9B97               	bcf	151,5,b	;volatile
 33920                           
 33921                           ; BSR set to: 14
 33922                           ;i2c2.c: 532: i2c2_state = S_MASTER_RCV_DATA;
 33923  01889E  0E06               	movlw	6
 33924  0188A0  0100               	movlb	0	; () banked
 33925  0188A2  6FDC               	movwf	_i2c2_state& (0+255),b
 33926                           
 33927                           ;i2c2.c: 533: }
 33928  0188A4  D004               	goto	i1l21244
 33929  0188A6                     i1l971:
 33930                           
 33931                           ; BSR set to: 0
 33932                           ;i2c2.c: 534: else;i2c2.c: 535: {;i2c2.c: 539: SSP2CON2bits.ACKDT = 1;
 33933  0188A6  010E               	movlb	14	; () banked
 33934  0188A8  8B97               	bsf	151,5,b	;volatile
 33935                           
 33936                           ; BSR set to: 14
 33937                           ;i2c2.c: 541: I2C2_FunctionComplete();
 33938  0188AA  EC62  F0DF         	call	_I2C2_FunctionComplete	;wreg free
 33939  0188AE                     i1l21244:
 33940                           
 33941                           ;i2c2.c: 542: };i2c2.c: 545: SSP2CON2bits.ACKEN = 1;
 33942  0188AE  010E               	movlb	14	; () banked
 33943  0188B0  8997               	bsf	151,4,b	;volatile
 33944                           
 33945                           ;i2c2.c: 546: break;
 33946  0188B2  0012               	return	
 33947  0188B4                     i1l21246:
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;i2c2.c: 549: case S_MASTER_SEND_STOP:;i2c2.c: 552: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 33951  0188B4  0E00               	movlw	0
 33952  0188B6  EC85  F0DA         	call	_I2C2_Stop
 33953                           
 33954                           ;i2c2.c: 553: break;
 33955  0188BA  0012               	return	
 33956  0188BC                     i1l21248:
 33957                           
 33958                           ; BSR set to: 0
 33959                           ;i2c2.c: 559: i2c2_object.i2cErrors++;
 33960  0188BC  0101               	movlb	1	; () banked
 33961  0188BE  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 33962                           
 33963                           ; BSR set to: 1
 33964                           ;i2c2.c: 560: I2C2_Stop(I2C2_LOST_STATE);
 33965  0188C0  0E06               	movlw	6
 33966  0188C2  EC85  F0DA         	call	_I2C2_Stop
 33967                           
 33968                           ;i2c2.c: 561: break;
 33969  0188C6  0012               	return	
 33970  0188C8                     i1l21254:
 33971                           
 33972                           ; BSR set to: 14
 33973  0188C8  0100               	movlb	0	; () banked
 33974  0188CA  51DC               	movf	_i2c2_state& (0+255),w,b
 33975                           
 33976                           ; Switch size 1, requested type "simple"
 33977                           ; Number of cases is 11, Range of values is 0 to 11
 33978                           ; switch strategies available:
 33979                           ; Name         Instructions Cycles
 33980                           ; simple_byte           34    18 (average)
 33981                           ;	Chosen strategy is simple_byte
 33982  0188CC  0A00               	xorlw	0	; case 0
 33983  0188CE  B4D8               	btfsc	status,2,c
 33984  0188D0  D701               	goto	i1l937
 33985  0188D2  0A01               	xorlw	1	; case 1
 33986  0188D4  B4D8               	btfsc	status,2,c
 33987  0188D6  D7B2               	goto	i1l963
 33988  0188D8  0A03               	xorlw	3	; case 2
 33989  0188DA  B4D8               	btfsc	status,2,c
 33990  0188DC  D771               	goto	i1l21178
 33991  0188DE  0A01               	xorlw	1	; case 3
 33992  0188E0  B4D8               	btfsc	status,2,c
 33993  0188E2  D792               	goto	i1l959
 33994  0188E4  0A07               	xorlw	7	; case 4
 33995  0188E6  B4D8               	btfsc	status,2,c
 33996  0188E8  D7E5               	goto	i1l21246
 33997  0188EA  0A01               	xorlw	1	; case 5
 33998  0188EC  B4D8               	btfsc	status,2,c
 33999  0188EE  D7B4               	goto	i1l966
 34000  0188F0  0A03               	xorlw	3	; case 6
 34001  0188F2  B4D8               	btfsc	status,2,c
 34002  0188F4  D7C1               	goto	i1l21228
 34003  0188F6  0A01               	xorlw	1	; case 7
 34004  0188F8  B4D8               	btfsc	status,2,c
 34005  0188FA  D7DC               	goto	i1l21246
 34006  0188FC  0A0F               	xorlw	15	; case 8
 34007  0188FE  B4D8               	btfsc	status,2,c
 34008  018900  D7C0               	goto	i1l21232
 34009  018902  0A02               	xorlw	2	; case 10
 34010  018904  B4D8               	btfsc	status,2,c
 34011  018906  D71C               	goto	i1l943
 34012  018908  0A01               	xorlw	1	; case 11
 34013  01890A  B4D8               	btfsc	status,2,c
 34014  01890C  D737               	goto	i1l948
 34015  01890E  D7D6               	goto	i1l21248
 34016  018910                     __end_of_I2C2_ISR:
 34017                           	opt callstack 0
 34018                           
 34019 ;; *************** function _I2C2_Stop *****************
 34020 ;; Defined at:
 34021 ;;		line 584 in file "mcc_generated_files/i2c2.c"
 34022 ;; Parameters:    Size  Location     Type
 34023 ;;  completion_c    1    wreg     enum E9433
 34024 ;; Auto vars:     Size  Location     Type
 34025 ;;  completion_c    1    2[BANK1 ] enum E9433
 34026 ;; Return value:  Size  Location     Type
 34027 ;;                  1    wreg      void 
 34028 ;; Registers used:
 34029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34030 ;; Tracked objects:
 34031 ;;		On entry : 0/0
 34032 ;;		On exit  : 0/0
 34033 ;;		Unchanged: 0/0
 34034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34036 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34037 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34038 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34039 ;;Total ram usage:        3 bytes
 34040 ;; Hardware stack levels used:    1
 34041 ;; Hardware stack levels required when called:    6
 34042 ;; This function calls:
 34043 ;;		Nothing
 34044 ;; This function is called by:
 34045 ;;		_I2C2_ISR
 34046 ;; This function uses a non-reentrant model
 34047 ;;
 34048                           
 34049                           	psect	text136
 34050  01B50A                     __ptext136:
 34051                           	opt callstack 0
 34052  01B50A                     _I2C2_Stop:
 34053                           	opt callstack 14
 34054                           
 34055                           ;incstack = 0
 34056                           ;I2C2_Stop@completion_code stored from wreg
 34057  01B50A  0101               	movlb	1	; () banked
 34058  01B50C  6F02               	movwf	I2C2_Stop@completion_code& (0+255),b
 34059                           
 34060                           ;i2c2.c: 587: SSP2CON2bits.PEN = 1;
 34061  01B50E  010E               	movlb	14	; () banked
 34062  01B510  8597               	bsf	151,2,b	;volatile
 34063                           
 34064                           ; BSR set to: 14
 34065                           ;i2c2.c: 590: if (p_i2c2_current->pTrFlag != (0))
 34066  01B512  0100               	movlb	0	; () banked
 34067  01B514  EE20 F003          	lfsr	2,3
 34068  01B518  51D3               	movf	_p_i2c2_current& (0+255),w,b
 34069  01B51A  26D9               	addwf	fsr2l,f,c
 34070  01B51C  51D4               	movf	(_p_i2c2_current+1)& (0+255),w,b
 34071  01B51E  22DA               	addwfc	fsr2h,f,c
 34072  01B520  50DE               	movf	postinc2,w,c
 34073  01B522  10DE               	iorwf	postinc2,w,c
 34074  01B524  B4D8               	btfsc	status,2,c
 34075  01B526  D010               	goto	i1l20630
 34076                           
 34077                           ; BSR set to: 0
 34078                           ;i2c2.c: 591: {;i2c2.c: 593: *(p_i2c2_current->pTrFlag) = completion_code;
 34079  01B528  EE20 F003          	lfsr	2,3
 34080  01B52C  51D3               	movf	_p_i2c2_current& (0+255),w,b
 34081  01B52E  26D9               	addwf	fsr2l,f,c
 34082  01B530  51D4               	movf	(_p_i2c2_current+1)& (0+255),w,b
 34083  01B532  22DA               	addwfc	fsr2h,f,c
 34084  01B534  CFDE F100          	movff	postinc2,??_I2C2_Stop
 34085  01B538  CFDD F101          	movff	postdec2,??_I2C2_Stop+1
 34086  01B53C  C100  FFD9         	movff	??_I2C2_Stop,fsr2l
 34087  01B540  C101  FFDA         	movff	??_I2C2_Stop+1,fsr2h
 34088  01B544  C102  FFDF         	movff	I2C2_Stop@completion_code,indf2
 34089  01B548                     i1l20630:
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;i2c2.c: 594: };i2c2.c: 597: i2c2_state = S_MASTER_IDLE;
 34093  01B548  0E00               	movlw	0
 34094  01B54A  6FDC               	movwf	_i2c2_state& (0+255),b
 34095                           
 34096                           ; BSR set to: 0
 34097  01B54C  0012               	return		;funcret
 34098  01B54E                     __end_of_I2C2_Stop:
 34099                           	opt callstack 0
 34100                           
 34101 ;; *************** function _I2C2_FunctionComplete *****************
 34102 ;; Defined at:
 34103 ;;		line 566 in file "mcc_generated_files/i2c2.c"
 34104 ;; Parameters:    Size  Location     Type
 34105 ;;		None
 34106 ;; Auto vars:     Size  Location     Type
 34107 ;;		None
 34108 ;; Return value:  Size  Location     Type
 34109 ;;                  1    wreg      void 
 34110 ;; Registers used:
 34111 ;;		wreg, status,2, status,0
 34112 ;; Tracked objects:
 34113 ;;		On entry : 0/0
 34114 ;;		On exit  : 0/0
 34115 ;;		Unchanged: 0/0
 34116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34121 ;;Total ram usage:        0 bytes
 34122 ;; Hardware stack levels used:    1
 34123 ;; Hardware stack levels required when called:    6
 34124 ;; This function calls:
 34125 ;;		Nothing
 34126 ;; This function is called by:
 34127 ;;		_I2C2_ISR
 34128 ;; This function uses a non-reentrant model
 34129 ;;
 34130                           
 34131                           	psect	text137
 34132  01BEC4                     __ptext137:
 34133                           	opt callstack 0
 34134  01BEC4                     _I2C2_FunctionComplete:
 34135                           	opt callstack 14
 34136                           
 34137                           ;i2c2.c: 570: p_i2c2_trb_current++;
 34138                           
 34139                           ; BSR set to: 0
 34140                           ;incstack = 0
 34141  01BEC4  0E05               	movlw	5
 34142  01BEC6  0100               	movlb	0	; () banked
 34143  01BEC8  27D5               	addwf	_p_i2c2_trb_current& (0+255),f,b
 34144  01BECA  0E00               	movlw	0
 34145  01BECC  23D6               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 34146                           
 34147                           ; BSR set to: 0
 34148                           ;i2c2.c: 573: if(--i2c2_trb_count == 0)
 34149  01BECE  2FDB               	decfsz	_i2c2_trb_count& (0+255),f,b
 34150  01BED0  D003               	goto	i1l20638
 34151                           
 34152                           ; BSR set to: 0
 34153                           ;i2c2.c: 574: {;i2c2.c: 575: i2c2_state = S_MASTER_SEND_STOP;
 34154  01BED2  0E04               	movlw	4
 34155  01BED4  6FDC               	movwf	_i2c2_state& (0+255),b
 34156                           
 34157                           ;i2c2.c: 576: }
 34158  01BED6  0012               	return	
 34159  01BED8                     i1l20638:
 34160                           
 34161                           ; BSR set to: 0
 34162                           ;i2c2.c: 577: else;i2c2.c: 578: {;i2c2.c: 579: i2c2_state = S_MASTER_RESTART;
 34163  01BED8  0E01               	movlw	1
 34164  01BEDA  6FDC               	movwf	_i2c2_state& (0+255),b
 34165                           
 34166                           ; BSR set to: 0
 34167  01BEDC  0012               	return		;funcret
 34168  01BEDE                     __end_of_I2C2_FunctionComplete:
 34169                           	opt callstack 0
 34170                           
 34171 ;; *************** function _I2C2_BusCollisionISR *****************
 34172 ;; Defined at:
 34173 ;;		line 743 in file "mcc_generated_files/i2c2.c"
 34174 ;; Parameters:    Size  Location     Type
 34175 ;;		None
 34176 ;; Auto vars:     Size  Location     Type
 34177 ;;		None
 34178 ;; Return value:  Size  Location     Type
 34179 ;;                  1    wreg      void 
 34180 ;; Registers used:
 34181 ;;		wreg, status,2
 34182 ;; Tracked objects:
 34183 ;;		On entry : 0/0
 34184 ;;		On exit  : 0/0
 34185 ;;		Unchanged: 0/0
 34186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34191 ;;Total ram usage:        0 bytes
 34192 ;; Hardware stack levels used:    1
 34193 ;; Hardware stack levels required when called:    6
 34194 ;; This function calls:
 34195 ;;		Nothing
 34196 ;; This function is called by:
 34197 ;;		_INTERRUPT_InterruptManagerLow
 34198 ;; This function uses a non-reentrant model
 34199 ;;
 34200                           
 34201                           	psect	text138
 34202  01C112                     __ptext138:
 34203                           	opt callstack 0
 34204  01C112                     _I2C2_BusCollisionISR:
 34205                           	opt callstack 15
 34206                           
 34207                           ;i2c2.c: 746: PIR3bits.BCL2IF = 0;
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;incstack = 0
 34211  01C112  010E               	movlb	14	; () banked
 34212  01C114  97CD               	bcf	205,3,b	;volatile
 34213                           
 34214                           ; BSR set to: 14
 34215                           ;i2c2.c: 747: error_handler.I2C_General_error_flag = 1;
 34216  01C116  0E01               	movlw	1
 34217  01C118  0100               	movlb	0	; () banked
 34218  01C11A  6FC7               	movwf	(_error_handler+2)& (0+255),b
 34219                           
 34220                           ; BSR set to: 0
 34221  01C11C  0012               	return		;funcret
 34222  01C11E                     __end_of_I2C2_BusCollisionISR:
 34223                           	opt callstack 0
 34224                           
 34225 ;; *************** function _EUSART2_Transmit_ISR *****************
 34226 ;; Defined at:
 34227 ;;		line 187 in file "mcc_generated_files/eusart2.c"
 34228 ;; Parameters:    Size  Location     Type
 34229 ;;		None
 34230 ;; Auto vars:     Size  Location     Type
 34231 ;;		None
 34232 ;; Return value:  Size  Location     Type
 34233 ;;                  1    wreg      void 
 34234 ;; Registers used:
 34235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34236 ;; Tracked objects:
 34237 ;;		On entry : 0/0
 34238 ;;		On exit  : 0/0
 34239 ;;		Unchanged: 0/0
 34240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34245 ;;Total ram usage:        0 bytes
 34246 ;; Hardware stack levels used:    1
 34247 ;; Hardware stack levels required when called:    6
 34248 ;; This function calls:
 34249 ;;		Nothing
 34250 ;; This function is called by:
 34251 ;;		_EUSART2_Initialize
 34252 ;;		_INTERRUPT_InterruptManagerLow
 34253 ;; This function uses a non-reentrant model
 34254 ;;
 34255                           
 34256                           	psect	text139
 34257  01B976                     __ptext139:
 34258                           	opt callstack 0
 34259  01B976                     _EUSART2_Transmit_ISR:
 34260                           	opt callstack 15
 34261                           
 34262                           ;eusart2.c: 191: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 34263                           
 34264                           ; BSR set to: 0
 34265                           ;incstack = 0
 34266  01B976  0E40               	movlw	64
 34267  01B978  0101               	movlb	1	; () banked
 34268  01B97A  6199               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 34269  01B97C  D012               	goto	i1l136
 34270                           
 34271                           ; BSR set to: 1
 34272                           ;eusart2.c: 192: {;eusart2.c: 193: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 34273  01B97E  0E80               	movlw	low _eusart2TxBuffer
 34274  01B980  259A               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 34275  01B982  6ED9               	movwf	fsr2l,c
 34276  01B984  6ADA               	clrf	fsr2h,c
 34277  01B986  0E04               	movlw	high _eusart2TxBuffer
 34278  01B988  22DA               	addwfc	fsr2h,f,c
 34279  01B98A  50DF               	movf	indf2,w,c
 34280  01B98C  010E               	movlb	14	; () banked
 34281  01B98E  6F9A               	movwf	154,b	;volatile
 34282                           
 34283                           ; BSR set to: 14
 34284  01B990  0101               	movlb	1	; () banked
 34285  01B992  2B9A               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 34286                           
 34287                           ; BSR set to: 1
 34288                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 34289  01B994  0E3F               	movlw	63
 34290  01B996  659A               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 34291  01B998  D002               	goto	i1l15322
 34292                           
 34293                           ; BSR set to: 1
 34294                           ;eusart2.c: 195: {;eusart2.c: 196: eusart2TxTail = 0;
 34295  01B99A  0E00               	movlw	0
 34296  01B99C  6F9A               	movwf	_eusart2TxTail& (0+255),b	;volatile
 34297  01B99E                     i1l15322:
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;eusart2.c: 197: };eusart2.c: 198: eusart2TxBufferRemaining++;
 34301  01B99E  2B99               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 34302                           
 34303                           ;eusart2.c: 199: }
 34304  01B9A0  0012               	return	
 34305  01B9A2                     i1l136:
 34306                           
 34307                           ; BSR set to: 1
 34308                           ;eusart2.c: 200: else;eusart2.c: 201: {;eusart2.c: 202: PIE3bits.TX2IE = 0;
 34309  01B9A2  010E               	movlb	14	; () banked
 34310  01B9A4  9DC5               	bcf	197,6,b	;volatile
 34311  01B9A6  0012               	return		;funcret
 34312  01B9A8                     __end_of_EUSART2_Transmit_ISR:
 34313                           	opt callstack 0
 34314                           
 34315 ;; *************** function _CCP2_CaptureISR *****************
 34316 ;; Defined at:
 34317 ;;		line 89 in file "mcc_generated_files/ccp2.c"
 34318 ;; Parameters:    Size  Location     Type
 34319 ;;		None
 34320 ;; Auto vars:     Size  Location     Type
 34321 ;;  module          2   86[BANK1 ] struct CCPR2Reg_tag
 34322 ;; Return value:  Size  Location     Type
 34323 ;;                  1    wreg      void 
 34324 ;; Registers used:
 34325 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 34326 ;; Tracked objects:
 34327 ;;		On entry : 0/0
 34328 ;;		On exit  : 0/0
 34329 ;;		Unchanged: 0/0
 34330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34332 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34334 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34335 ;;Total ram usage:        2 bytes
 34336 ;; Hardware stack levels used:    1
 34337 ;; Hardware stack levels required when called:    9
 34338 ;; This function calls:
 34339 ;;		_CCP2_CallBack
 34340 ;; This function is called by:
 34341 ;;		_INTERRUPT_InterruptManagerLow
 34342 ;; This function uses a non-reentrant model
 34343 ;;
 34344                           
 34345                           	psect	text140
 34346  01BEDE                     __ptext140:
 34347                           	opt callstack 0
 34348  01BEDE                     _CCP2_CaptureISR:
 34349                           	opt callstack 12
 34350                           
 34351                           ;ccp2.c: 92: CCP2_PERIOD_REG_T module;;ccp2.c: 95: PIR6bits.CCP2IF = 0;
 34352                           
 34353                           ;incstack = 0
 34354  01BEDE  010E               	movlb	14	; () banked
 34355  01BEE0  93D0               	bcf	208,1,b	;volatile
 34356                           
 34357                           ;ccp2.c: 98: module.ccpr2l = CCPR2L;
 34358  01BEE2  CFA6 F156          	movff	4006,CCP2_CaptureISR@module	;volatile
 34359                           
 34360                           ;ccp2.c: 99: module.ccpr2h = CCPR2H;
 34361  01BEE6  CFA7 F157          	movff	4007,CCP2_CaptureISR@module+1	;volatile
 34362                           
 34363                           ; BSR set to: 14
 34364                           ;ccp2.c: 102: CCP2_CallBack(module.ccpr2_16Bit);
 34365  01BEEA  C156  F154         	movff	CCP2_CaptureISR@module,CCP2_CallBack@capturedValue
 34366  01BEEE  C157  F155         	movff	CCP2_CaptureISR@module+1,CCP2_CallBack@capturedValue+1
 34367  01BEF2  EC0A  F0DB         	call	_CCP2_CallBack	;wreg free
 34368  01BEF6  0012               	return		;funcret
 34369  01BEF8                     __end_of_CCP2_CaptureISR:
 34370                           	opt callstack 0
 34371                           
 34372 ;; *************** function _CCP2_CallBack *****************
 34373 ;; Defined at:
 34374 ;;		line 105 in file "mcc_generated_files/ccp2.c"
 34375 ;; Parameters:    Size  Location     Type
 34376 ;;  capturedValu    2   84[BANK1 ] unsigned int 
 34377 ;; Auto vars:     Size  Location     Type
 34378 ;;		None
 34379 ;; Return value:  Size  Location     Type
 34380 ;;                  1    wreg      void 
 34381 ;; Registers used:
 34382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 34383 ;; Tracked objects:
 34384 ;;		On entry : 0/0
 34385 ;;		On exit  : 0/0
 34386 ;;		Unchanged: 0/0
 34387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34388 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34391 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34392 ;;Total ram usage:        2 bytes
 34393 ;; Hardware stack levels used:    1
 34394 ;; Hardware stack levels required when called:    8
 34395 ;; This function calls:
 34396 ;;		_freqMeasConvert
 34397 ;; This function is called by:
 34398 ;;		_CCP2_CaptureISR
 34399 ;; This function uses a non-reentrant model
 34400 ;;
 34401                           
 34402                           	psect	text141
 34403  01B614                     __ptext141:
 34404                           	opt callstack 0
 34405  01B614                     _CCP2_CallBack:
 34406                           	opt callstack 12
 34407                           
 34408                           ;ccp2.c: 108: switch (QI_current_edge) {
 34409                           
 34410                           ;incstack = 0
 34411  01B614  D016               	goto	i1l14848
 34412  01B616                     i1l14838:
 34413                           
 34414                           ; BSR set to: 1
 34415                           ;ccp2.c: 113: TMR5H = 0;
 34416  01B616  0E00               	movlw	0
 34417  01B618  6EC2               	movwf	4034,c	;volatile
 34418                           
 34419                           ;ccp2.c: 114: TMR5L = 0;
 34420  01B61A  0E00               	movlw	0
 34421  01B61C  6EC1               	movwf	4033,c	;volatile
 34422                           
 34423                           ; BSR set to: 1
 34424                           ;ccp2.c: 115: T5CONbits.ON = 1;
 34425  01B61E  80C3               	bsf	4035,0,c	;volatile
 34426                           
 34427                           ;ccp2.c: 118: QI_current_edge = qi_period_rising_2;
 34428  01B620  0E01               	movlw	1
 34429  01B622  6F96               	movwf	_QI_current_edge& (0+255),b
 34430                           
 34431                           ;ccp2.c: 120: break;
 34432  01B624  0012               	return	
 34433  01B626                     i1l1069:
 34434                           
 34435                           ; BSR set to: 1
 34436                           ;ccp2.c: 125: T5CONbits.ON = 0;
 34437  01B626  90C3               	bcf	4035,0,c	;volatile
 34438                           
 34439                           ;ccp2.c: 128: freq_meas_results.QI_Freq_Meas_Raw = capturedValue;
 34440  01B628  C154  F16C         	movff	CCP2_CallBack@capturedValue,_freq_meas_results+4
 34441  01B62C  C155  F16D         	movff	CCP2_CallBack@capturedValue+1,_freq_meas_results+5
 34442                           
 34443                           ; BSR set to: 1
 34444                           ;ccp2.c: 131: TMR5H = 0;
 34445  01B630  0E00               	movlw	0
 34446  01B632  6EC2               	movwf	4034,c	;volatile
 34447                           
 34448                           ;ccp2.c: 132: TMR5L = 0;
 34449  01B634  0E00               	movlw	0
 34450  01B636  6EC1               	movwf	4033,c	;volatile
 34451                           
 34452                           ;ccp2.c: 134: QI_current_edge = qi_period_rising_1;
 34453  01B638  0E00               	movlw	0
 34454  01B63A  6F96               	movwf	_QI_current_edge& (0+255),b
 34455                           
 34456                           ; BSR set to: 1
 34457                           ;ccp2.c: 137: freqMeasConvert();
 34458  01B63C  ECAB  F0CF         	call	_freqMeasConvert	;wreg free
 34459                           
 34460                           ;ccp2.c: 139: break;
 34461  01B640  0012               	return	
 34462  01B642                     i1l14848:
 34463  01B642  0101               	movlb	1	; () banked
 34464  01B644  5196               	movf	_QI_current_edge& (0+255),w,b
 34465                           
 34466                           ; Switch size 1, requested type "simple"
 34467                           ; Number of cases is 2, Range of values is 0 to 1
 34468                           ; switch strategies available:
 34469                           ; Name         Instructions Cycles
 34470                           ; simple_byte            7     4 (average)
 34471                           ;	Chosen strategy is simple_byte
 34472  01B646  0A00               	xorlw	0	; case 0
 34473  01B648  B4D8               	btfsc	status,2,c
 34474  01B64A  D7E5               	goto	i1l14838
 34475  01B64C  0A01               	xorlw	1	; case 1
 34476  01B64E  A4D8               	btfss	status,2,c
 34477  01B650  0012               	return	
 34478  01B652  D7E9               	goto	i1l1069
 34479  01B654                     __end_of_CCP2_CallBack:
 34480                           	opt callstack 0
 34481                           
 34482 ;; *************** function _freqMeasConvert *****************
 34483 ;; Defined at:
 34484 ;;		line 16 in file "freq_meas.c"
 34485 ;; Parameters:    Size  Location     Type
 34486 ;;		None
 34487 ;; Auto vars:     Size  Location     Type
 34488 ;;  qi_period       4   80[BANK1 ] void 
 34489 ;; Return value:  Size  Location     Type
 34490 ;;                  1    wreg      void 
 34491 ;; Registers used:
 34492 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 34493 ;; Tracked objects:
 34494 ;;		On entry : 0/0
 34495 ;;		On exit  : 0/0
 34496 ;;		Unchanged: 0/0
 34497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34499 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34501 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34502 ;;Total ram usage:        4 bytes
 34503 ;; Hardware stack levels used:    1
 34504 ;; Hardware stack levels required when called:    7
 34505 ;; This function calls:
 34506 ;;		i1___fladd
 34507 ;;		i1___fldiv
 34508 ;;		i1___flmul
 34509 ;;		i1___xxtofl
 34510 ;; This function is called by:
 34511 ;;		_CCP2_CallBack
 34512 ;; This function uses a non-reentrant model
 34513 ;;
 34514                           
 34515                           	psect	text142
 34516  019F56                     __ptext142:
 34517                           	opt callstack 0
 34518  019F56                     _freqMeasConvert:
 34519                           	opt callstack 12
 34520                           
 34521                           ;freq_meas.c: 19: double qi_period = ((((float) freq_meas_results.QI_Freq_Meas_Raw + 1) 
      +                          / 16.0) * 0.00000063);
 34522                           
 34523                           ;incstack = 0
 34524  019F56  0E00               	movlw	0
 34525  019F58  0101               	movlb	1	; () banked
 34526  019F5A  6F22               	movwf	i1___fldiv@a& (0+255),b
 34527  019F5C  0E00               	movlw	0
 34528  019F5E  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 34529  019F60  0E80               	movlw	128
 34530  019F62  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 34531  019F64  0E41               	movlw	65
 34532  019F66  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 34533  019F68  0E00               	movlw	0
 34534  019F6A  6F12               	movwf	i1___fladd@a& (0+255),b
 34535  019F6C  0E00               	movlw	0
 34536  019F6E  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 34537  019F70  0E80               	movlw	128
 34538  019F72  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 34539  019F74  0E3F               	movlw	63
 34540  019F76  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 34541  019F78  C16C  F100         	movff	_freq_meas_results+4,i1___xxtofl@val
 34542  019F7C  C16D  F101         	movff	_freq_meas_results+5,i1___xxtofl@val+1
 34543  019F80  6B02               	clrf	(i1___xxtofl@val+2)& (0+255),b
 34544  019F82  6B03               	clrf	(i1___xxtofl@val+3)& (0+255),b
 34545  019F84  0E00               	movlw	0
 34546  019F86  ECBB  F0C9         	call	i1___xxtofl
 34547  019F8A  C100  F10E         	movff	?i1___xxtofl,i1___fladd@b
 34548  019F8E  C101  F10F         	movff	?i1___xxtofl+1,i1___fladd@b+1
 34549  019F92  C102  F110         	movff	?i1___xxtofl+2,i1___fladd@b+2
 34550  019F96  C103  F111         	movff	?i1___xxtofl+3,i1___fladd@b+3
 34551  019F9A  EC2C  F0B7         	call	i1___fladd	;wreg free
 34552  019F9E  C10E  F11E         	movff	?i1___fladd,i1___fldiv@b
 34553  019FA2  C10F  F11F         	movff	?i1___fladd+1,i1___fldiv@b+1
 34554  019FA6  C110  F120         	movff	?i1___fladd+2,i1___fldiv@b+2
 34555  019FAA  C111  F121         	movff	?i1___fladd+3,i1___fldiv@b+3
 34556  019FAE  EC85  F0BF         	call	i1___fldiv	;wreg free
 34557  019FB2  C11E  F137         	movff	?i1___fldiv,i1___flmul@b
 34558  019FB6  C11F  F138         	movff	?i1___fldiv+1,i1___flmul@b+1
 34559  019FBA  C120  F139         	movff	?i1___fldiv+2,i1___flmul@b+2
 34560  019FBE  C121  F13A         	movff	?i1___fldiv+3,i1___flmul@b+3
 34561  019FC2  0E45               	movlw	69
 34562  019FC4  0101               	movlb	1	; () banked
 34563  019FC6  6F3B               	movwf	i1___flmul@a& (0+255),b
 34564  019FC8  0E1D               	movlw	29
 34565  019FCA  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 34566  019FCC  0E29               	movlw	41
 34567  019FCE  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 34568  019FD0  0E35               	movlw	53
 34569  019FD2  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 34570  019FD4  EC52  F0B2         	call	i1___flmul	;wreg free
 34571  019FD8  C137  F150         	movff	?i1___flmul,freqMeasConvert@qi_period
 34572  019FDC  C138  F151         	movff	?i1___flmul+1,freqMeasConvert@qi_period+1
 34573  019FE0  C139  F152         	movff	?i1___flmul+2,freqMeasConvert@qi_period+2
 34574  019FE4  C13A  F153         	movff	?i1___flmul+3,freqMeasConvert@qi_period+3
 34575                           
 34576                           ;freq_meas.c: 20: freq_meas_results.QI_Freq_Meas = 1.0 / qi_period;
 34577  019FE8  0E00               	movlw	0
 34578  019FEA  0101               	movlb	1	; () banked
 34579  019FEC  6F1E               	movwf	i1___fldiv@b& (0+255),b
 34580  019FEE  0E00               	movlw	0
 34581  019FF0  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 34582  019FF2  0E80               	movlw	128
 34583  019FF4  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 34584  019FF6  0E3F               	movlw	63
 34585  019FF8  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 34586  019FFA  C150  F122         	movff	freqMeasConvert@qi_period,i1___fldiv@a
 34587  019FFE  C151  F123         	movff	freqMeasConvert@qi_period+1,i1___fldiv@a+1
 34588  01A002  C152  F124         	movff	freqMeasConvert@qi_period+2,i1___fldiv@a+2
 34589  01A006  C153  F125         	movff	freqMeasConvert@qi_period+3,i1___fldiv@a+3
 34590  01A00A  EC85  F0BF         	call	i1___fldiv	;wreg free
 34591  01A00E  C11E  F168         	movff	?i1___fldiv,_freq_meas_results
 34592  01A012  C11F  F169         	movff	?i1___fldiv+1,_freq_meas_results+1
 34593  01A016  C120  F16A         	movff	?i1___fldiv+2,_freq_meas_results+2
 34594  01A01A  C121  F16B         	movff	?i1___fldiv+3,_freq_meas_results+3
 34595  01A01E  0012               	return		;funcret
 34596  01A020                     __end_of_freqMeasConvert:
 34597                           	opt callstack 0
 34598                           
 34599 ;; *************** function i1___xxtofl *****************
 34600 ;; Defined at:
 34601 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 34602 ;; Parameters:    Size  Location     Type
 34603 ;;  sign            1    wreg     unsigned char 
 34604 ;;  val             4    0[BANK1 ] long 
 34605 ;; Auto vars:     Size  Location     Type
 34606 ;;  sign            1    8[BANK1 ] unsigned char 
 34607 ;;  __xxtofl        4   10[BANK1 ] unsigned long 
 34608 ;;  __xxtofl        1    9[BANK1 ] unsigned char 
 34609 ;; Return value:  Size  Location     Type
 34610 ;;                  4    0[BANK1 ] unsigned char 
 34611 ;; Registers used:
 34612 ;;		wreg, status,2, status,0
 34613 ;; Tracked objects:
 34614 ;;		On entry : 0/0
 34615 ;;		On exit  : 0/0
 34616 ;;		Unchanged: 0/0
 34617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34618 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34619 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34620 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34621 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34622 ;;Total ram usage:       14 bytes
 34623 ;; Hardware stack levels used:    1
 34624 ;; Hardware stack levels required when called:    6
 34625 ;; This function calls:
 34626 ;;		Nothing
 34627 ;; This function is called by:
 34628 ;;		_freqMeasConvert
 34629 ;; This function uses a non-reentrant model
 34630 ;;
 34631                           
 34632                           	psect	text143
 34633  019376                     __ptext143:
 34634                           	opt callstack 0
 34635  019376                     i1___xxtofl:
 34636                           	opt callstack 12
 34637                           
 34638                           ;incstack = 0
 34639                           ;i1___xxtofl@sign stored from wreg
 34640  019376  0101               	movlb	1	; () banked
 34641  019378  6F08               	movwf	i1___xxtofl@sign& (0+255),b
 34642  01937A  0101               	movlb	1	; () banked
 34643  01937C  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 34644  01937E  A4D8               	btfss	status,2,c
 34645                           
 34646                           ; BSR set to: 1
 34647  019380  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 34648  019382  D01A               	goto	i1l3256
 34649                           
 34650                           ; BSR set to: 1
 34651  019384  C100  F104         	movff	i1___xxtofl@val,??i1___xxtofl
 34652  019388  C101  F105         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 34653  01938C  C102  F106         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 34654  019390  C103  F107         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 34655  019394  1F04               	comf	??i1___xxtofl& (0+255),f,b
 34656  019396  1F05               	comf	(??i1___xxtofl+1)& (0+255),f,b
 34657  019398  1F06               	comf	(??i1___xxtofl+2)& (0+255),f,b
 34658  01939A  1F07               	comf	(??i1___xxtofl+3)& (0+255),f,b
 34659  01939C  2B04               	incf	??i1___xxtofl& (0+255),f,b
 34660  01939E  0E00               	movlw	0
 34661  0193A0  2305               	addwfc	(??i1___xxtofl+1)& (0+255),f,b
 34662  0193A2  2306               	addwfc	(??i1___xxtofl+2)& (0+255),f,b
 34663  0193A4  2307               	addwfc	(??i1___xxtofl+3)& (0+255),f,b
 34664  0193A6  C104  F10A         	movff	??i1___xxtofl,i1___xxtofl@arg
 34665  0193AA  C105  F10B         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 34666  0193AE  C106  F10C         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 34667  0193B2  C107  F10D         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 34668  0193B6  D008               	goto	i1l13472
 34669  0193B8                     i1l3256:
 34670                           
 34671                           ; BSR set to: 1
 34672  0193B8  C100  F10A         	movff	i1___xxtofl@val,i1___xxtofl@arg
 34673  0193BC  C101  F10B         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 34674  0193C0  C102  F10C         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 34675  0193C4  C103  F10D         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 34676  0193C8                     i1l13472:
 34677                           
 34678                           ; BSR set to: 1
 34679  0193C8  5100               	movf	i1___xxtofl@val& (0+255),w,b
 34680  0193CA  1101               	iorwf	(i1___xxtofl@val+1)& (0+255),w,b
 34681  0193CC  1102               	iorwf	(i1___xxtofl@val+2)& (0+255),w,b
 34682  0193CE  1103               	iorwf	(i1___xxtofl@val+3)& (0+255),w,b
 34683  0193D0  A4D8               	btfss	status,2,c
 34684  0193D2  D009               	goto	i1l13478
 34685                           
 34686                           ; BSR set to: 1
 34687  0193D4  0E00               	movlw	0
 34688  0193D6  6F00               	movwf	?i1___xxtofl& (0+255),b
 34689  0193D8  0E00               	movlw	0
 34690  0193DA  6F01               	movwf	(?i1___xxtofl+1)& (0+255),b
 34691  0193DC  0E00               	movlw	0
 34692  0193DE  6F02               	movwf	(?i1___xxtofl+2)& (0+255),b
 34693  0193E0  0E00               	movlw	0
 34694  0193E2  6F03               	movwf	(?i1___xxtofl+3)& (0+255),b
 34695  0193E4  0012               	return	
 34696  0193E6                     i1l13478:
 34697                           
 34698                           ; BSR set to: 1
 34699  0193E6  0E96               	movlw	150
 34700  0193E8  6F09               	movwf	i1___xxtofl@exp& (0+255),b
 34701  0193EA  D006               	goto	i1l13482
 34702  0193EC                     i1l13480:
 34703                           
 34704                           ; BSR set to: 1
 34705  0193EC  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 34706  0193EE  90D8               	bcf	status,0,c
 34707  0193F0  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 34708  0193F2  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 34709  0193F4  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 34710  0193F6  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 34711  0193F8                     i1l13482:
 34712                           
 34713                           ; BSR set to: 1
 34714  0193F8  0E00               	movlw	0
 34715  0193FA  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 34716  0193FC  6F04               	movwf	??i1___xxtofl& (0+255),b
 34717  0193FE  0E00               	movlw	0
 34718  019400  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 34719  019402  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 34720  019404  0E00               	movlw	0
 34721  019406  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 34722  019408  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 34723  01940A  0EFE               	movlw	254
 34724  01940C  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 34725  01940E  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 34726  019410  5104               	movf	??i1___xxtofl& (0+255),w,b
 34727  019412  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 34728  019414  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 34729  019416  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 34730  019418  B4D8               	btfsc	status,2,c
 34731  01941A  D00D               	goto	i1l3263
 34732  01941C  D7E7               	goto	i1l13480
 34733  01941E                     i1l13484:
 34734                           
 34735                           ; BSR set to: 1
 34736  01941E  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 34737                           
 34738                           ; BSR set to: 1
 34739  019420  0E01               	movlw	1
 34740  019422  270A               	addwf	i1___xxtofl@arg& (0+255),f,b
 34741  019424  0E00               	movlw	0
 34742  019426  230B               	addwfc	(i1___xxtofl@arg+1)& (0+255),f,b
 34743  019428  230C               	addwfc	(i1___xxtofl@arg+2)& (0+255),f,b
 34744  01942A  230D               	addwfc	(i1___xxtofl@arg+3)& (0+255),f,b
 34745                           
 34746                           ; BSR set to: 1
 34747  01942C  90D8               	bcf	status,0,c
 34748  01942E  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 34749  019430  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 34750  019432  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 34751  019434  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 34752  019436                     i1l3263:
 34753                           
 34754                           ; BSR set to: 1
 34755  019436  0E00               	movlw	0
 34756  019438  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 34757  01943A  6F04               	movwf	??i1___xxtofl& (0+255),b
 34758  01943C  0E00               	movlw	0
 34759  01943E  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 34760  019440  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 34761  019442  0E00               	movlw	0
 34762  019444  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 34763  019446  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 34764  019448  0EFF               	movlw	255
 34765  01944A  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 34766  01944C  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 34767  01944E  5104               	movf	??i1___xxtofl& (0+255),w,b
 34768  019450  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 34769  019452  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 34770  019454  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 34771  019456  B4D8               	btfsc	status,2,c
 34772  019458  D007               	goto	i1l13492
 34773  01945A  D7E1               	goto	i1l13484
 34774  01945C                     i1l13490:
 34775                           
 34776                           ; BSR set to: 1
 34777  01945C  0709               	decf	i1___xxtofl@exp& (0+255),f,b
 34778  01945E  90D8               	bcf	status,0,c
 34779  019460  370A               	rlcf	i1___xxtofl@arg& (0+255),f,b
 34780  019462  370B               	rlcf	(i1___xxtofl@arg+1)& (0+255),f,b
 34781  019464  370C               	rlcf	(i1___xxtofl@arg+2)& (0+255),f,b
 34782  019466  370D               	rlcf	(i1___xxtofl@arg+3)& (0+255),f,b
 34783  019468                     i1l13492:
 34784                           
 34785                           ; BSR set to: 1
 34786  019468  BF0C               	btfsc	(i1___xxtofl@arg+2)& (0+255),7,b
 34787  01946A  D003               	goto	i1u1562_20
 34788                           
 34789                           ; BSR set to: 1
 34790  01946C  0E02               	movlw	2
 34791  01946E  6109               	cpfslt	i1___xxtofl@exp& (0+255),b
 34792  019470  D7F5               	goto	i1l13490
 34793  019472                     i1u1562_20:
 34794                           
 34795                           ; BSR set to: 1
 34796  019472  A109               	btfss	i1___xxtofl@exp& (0+255),0,b
 34797                           
 34798                           ; BSR set to: 1
 34799  019474  9F0C               	bcf	(i1___xxtofl@arg+2)& (0+255),7,b
 34800                           
 34801                           ; BSR set to: 1
 34802  019476  90D8               	bcf	status,0,c
 34803  019478  3309               	rrcf	i1___xxtofl@exp& (0+255),f,b
 34804                           
 34805                           ; BSR set to: 1
 34806  01947A  C109  F104         	movff	i1___xxtofl@exp,??i1___xxtofl
 34807  01947E  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 34808  019480  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 34809  019482  6B07               	clrf	(??i1___xxtofl+3)& (0+255),b
 34810  019484  C104  F107         	movff	??i1___xxtofl,??i1___xxtofl+3
 34811  019488  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 34812  01948A  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 34813  01948C  6B04               	clrf	??i1___xxtofl& (0+255),b
 34814  01948E  5104               	movf	??i1___xxtofl& (0+255),w,b
 34815  019490  130A               	iorwf	i1___xxtofl@arg& (0+255),f,b
 34816  019492  5105               	movf	(??i1___xxtofl+1)& (0+255),w,b
 34817  019494  130B               	iorwf	(i1___xxtofl@arg+1)& (0+255),f,b
 34818  019496  5106               	movf	(??i1___xxtofl+2)& (0+255),w,b
 34819  019498  130C               	iorwf	(i1___xxtofl@arg+2)& (0+255),f,b
 34820  01949A  5107               	movf	(??i1___xxtofl+3)& (0+255),w,b
 34821  01949C  130D               	iorwf	(i1___xxtofl@arg+3)& (0+255),f,b
 34822                           
 34823                           ; BSR set to: 1
 34824  01949E  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 34825  0194A0  A4D8               	btfss	status,2,c
 34826                           
 34827                           ; BSR set to: 1
 34828  0194A2  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 34829  0194A4  D001               	goto	i1l13508
 34830                           
 34831                           ; BSR set to: 1
 34832  0194A6  8F0D               	bsf	(i1___xxtofl@arg+3)& (0+255),7,b
 34833  0194A8                     i1l13508:
 34834                           
 34835                           ; BSR set to: 1
 34836  0194A8  C10A  F100         	movff	i1___xxtofl@arg,?i1___xxtofl
 34837  0194AC  C10B  F101         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 34838  0194B0  C10C  F102         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 34839  0194B4  C10D  F103         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 34840                           
 34841                           ; BSR set to: 1
 34842  0194B8  0012               	return		;funcret
 34843  0194BA                     __end_ofi1___xxtofl:
 34844                           	opt callstack 0
 34845                           
 34846 ;; *************** function i1___flmul *****************
 34847 ;; Defined at:
 34848 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 34849 ;; Parameters:    Size  Location     Type
 34850 ;;  b               4   55[BANK1 ] unsigned char 
 34851 ;;  a               4   59[BANK1 ] unsigned char 
 34852 ;; Auto vars:     Size  Location     Type
 34853 ;;  __flmul         4   74[BANK1 ] struct .
 34854 ;;  __flmul         4   68[BANK1 ] unsigned long 
 34855 ;;  __flmul         2   78[BANK1 ] struct .
 34856 ;;  __flmul         1   73[BANK1 ] unsigned char 
 34857 ;;  __flmul         1   72[BANK1 ] unsigned char 
 34858 ;;  __flmul         1   67[BANK1 ] unsigned char 
 34859 ;; Return value:  Size  Location     Type
 34860 ;;                  4   55[BANK1 ] unsigned char 
 34861 ;; Registers used:
 34862 ;;		wreg, status,2, status,0, prodl, prodh
 34863 ;; Tracked objects:
 34864 ;;		On entry : 0/0
 34865 ;;		On exit  : 0/0
 34866 ;;		Unchanged: 0/0
 34867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34868 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34869 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34870 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34871 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34872 ;;Total ram usage:       25 bytes
 34873 ;; Hardware stack levels used:    1
 34874 ;; Hardware stack levels required when called:    6
 34875 ;; This function calls:
 34876 ;;		Nothing
 34877 ;; This function is called by:
 34878 ;;		_freqMeasConvert
 34879 ;; This function uses a non-reentrant model
 34880 ;;
 34881                           
 34882                           	psect	text144
 34883  0164A4                     __ptext144:
 34884                           	opt callstack 0
 34885  0164A4                     i1___flmul:
 34886                           	opt callstack 12
 34887                           
 34888                           ; BSR set to: 1
 34889                           ;incstack = 0
 34890  0164A4  0101               	movlb	1	; () banked
 34891  0164A6  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 34892  0164A8  0B80               	andlw	128
 34893  0164AA  6F43               	movwf	i1___flmul@sign& (0+255),b
 34894  0164AC  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 34895  0164AE  253A               	addwf	(i1___flmul@b+3)& (0+255),w,b
 34896  0164B0  6F49               	movwf	i1___flmul@bexp& (0+255),b
 34897                           
 34898                           ; BSR set to: 1
 34899  0164B2  BF39               	btfsc	(i1___flmul@b+2)& (0+255),7,b
 34900                           
 34901                           ; BSR set to: 1
 34902  0164B4  8149               	bsf	i1___flmul@bexp& (0+255),0,b
 34903                           
 34904                           ; BSR set to: 1
 34905  0164B6  5149               	movf	i1___flmul@bexp& (0+255),w,b
 34906  0164B8  B4D8               	btfsc	status,2,c
 34907  0164BA  D00D               	goto	i1l13350
 34908                           
 34909                           ; BSR set to: 1
 34910  0164BC  2949               	incf	i1___flmul@bexp& (0+255),w,b
 34911  0164BE  A4D8               	btfss	status,2,c
 34912  0164C0  D008               	goto	i1l13348
 34913                           
 34914                           ; BSR set to: 1
 34915  0164C2  0E00               	movlw	0
 34916  0164C4  6F37               	movwf	i1___flmul@b& (0+255),b
 34917  0164C6  0E00               	movlw	0
 34918  0164C8  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 34919  0164CA  0E00               	movlw	0
 34920  0164CC  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 34921  0164CE  0E00               	movlw	0
 34922  0164D0  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 34923  0164D2                     i1l13348:
 34924                           
 34925                           ; BSR set to: 1
 34926  0164D2  8F39               	bsf	(i1___flmul@b+2)& (0+255),7,b
 34927  0164D4  D008               	goto	i1l13352
 34928  0164D6                     i1l13350:
 34929                           
 34930                           ; BSR set to: 1
 34931  0164D6  0E00               	movlw	0
 34932  0164D8  6F37               	movwf	i1___flmul@b& (0+255),b
 34933  0164DA  0E00               	movlw	0
 34934  0164DC  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 34935  0164DE  0E00               	movlw	0
 34936  0164E0  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 34937  0164E2  0E00               	movlw	0
 34938  0164E4  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 34939  0164E6                     i1l13352:
 34940                           
 34941                           ; BSR set to: 1
 34942  0164E6  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 34943  0164E8  0B80               	andlw	128
 34944  0164EA  1B43               	xorwf	i1___flmul@sign& (0+255),f,b
 34945                           
 34946                           ; BSR set to: 1
 34947  0164EC  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 34948  0164EE  253E               	addwf	(i1___flmul@a+3)& (0+255),w,b
 34949  0164F0  6F48               	movwf	i1___flmul@aexp& (0+255),b
 34950                           
 34951                           ; BSR set to: 1
 34952  0164F2  BF3D               	btfsc	(i1___flmul@a+2)& (0+255),7,b
 34953                           
 34954                           ; BSR set to: 1
 34955  0164F4  8148               	bsf	i1___flmul@aexp& (0+255),0,b
 34956                           
 34957                           ; BSR set to: 1
 34958  0164F6  5148               	movf	i1___flmul@aexp& (0+255),w,b
 34959  0164F8  B4D8               	btfsc	status,2,c
 34960  0164FA  D00D               	goto	i1l13368
 34961                           
 34962                           ; BSR set to: 1
 34963  0164FC  2948               	incf	i1___flmul@aexp& (0+255),w,b
 34964  0164FE  A4D8               	btfss	status,2,c
 34965  016500  D008               	goto	i1l13366
 34966                           
 34967                           ; BSR set to: 1
 34968  016502  0E00               	movlw	0
 34969  016504  6F3B               	movwf	i1___flmul@a& (0+255),b
 34970  016506  0E00               	movlw	0
 34971  016508  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 34972  01650A  0E00               	movlw	0
 34973  01650C  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 34974  01650E  0E00               	movlw	0
 34975  016510  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 34976  016512                     i1l13366:
 34977                           
 34978                           ; BSR set to: 1
 34979  016512  8F3D               	bsf	(i1___flmul@a+2)& (0+255),7,b
 34980  016514  D008               	goto	i1l3215
 34981  016516                     i1l13368:
 34982                           
 34983                           ; BSR set to: 1
 34984  016516  0E00               	movlw	0
 34985  016518  6F3B               	movwf	i1___flmul@a& (0+255),b
 34986  01651A  0E00               	movlw	0
 34987  01651C  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 34988  01651E  0E00               	movlw	0
 34989  016520  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 34990  016522  0E00               	movlw	0
 34991  016524  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 34992  016526                     i1l3215:
 34993                           
 34994                           ; BSR set to: 1
 34995  016526  5148               	movf	i1___flmul@aexp& (0+255),w,b
 34996  016528  B4D8               	btfsc	status,2,c
 34997  01652A  D003               	goto	i1u1544_20
 34998                           
 34999                           ; BSR set to: 1
 35000  01652C  5149               	movf	i1___flmul@bexp& (0+255),w,b
 35001  01652E  A4D8               	btfss	status,2,c
 35002  016530  D009               	goto	i1l13376
 35003  016532                     i1u1544_20:
 35004                           
 35005                           ; BSR set to: 1
 35006  016532  0E00               	movlw	0
 35007  016534  6F37               	movwf	?i1___flmul& (0+255),b
 35008  016536  0E00               	movlw	0
 35009  016538  6F38               	movwf	(?i1___flmul+1)& (0+255),b
 35010  01653A  0E00               	movlw	0
 35011  01653C  6F39               	movwf	(?i1___flmul+2)& (0+255),b
 35012  01653E  0E00               	movlw	0
 35013  016540  6F3A               	movwf	(?i1___flmul+3)& (0+255),b
 35014  016542  0012               	return	
 35015  016544                     i1l13376:
 35016                           
 35017                           ; BSR set to: 1
 35018  016544  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 35019  016546  0337               	mulwf	i1___flmul@b& (0+255),b
 35020  016548  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35021  01654C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35022                           
 35023                           ; BSR set to: 1
 35024  016550  514E               	movf	i1___flmul@temp& (0+255),w,b
 35025  016552  6F44               	movwf	i1___flmul@grs& (0+255),b
 35026  016554  6B45               	clrf	(i1___flmul@grs+1)& (0+255),b
 35027  016556  6B46               	clrf	(i1___flmul@grs+2)& (0+255),b
 35028  016558  6B47               	clrf	(i1___flmul@grs+3)& (0+255),b
 35029                           
 35030                           ; BSR set to: 1
 35031  01655A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35032  01655C  6F4A               	movwf	i1___flmul@prod& (0+255),b
 35033  01655E  6B4B               	clrf	(i1___flmul@prod+1)& (0+255),b
 35034  016560  6B4C               	clrf	(i1___flmul@prod+2)& (0+255),b
 35035  016562  6B4D               	clrf	(i1___flmul@prod+3)& (0+255),b
 35036  016564  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 35037  016566  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 35038  016568  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35039  01656C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35040                           
 35041                           ; BSR set to: 1
 35042  016570  514E               	movf	i1___flmul@temp& (0+255),w,b
 35043  016572  2744               	addwf	i1___flmul@grs& (0+255),f,b
 35044  016574  0E00               	movlw	0
 35045  016576  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 35046  016578  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 35047  01657A  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 35048                           
 35049                           ; BSR set to: 1
 35050  01657C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35051  01657E  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35052  016580  0E00               	movlw	0
 35053  016582  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35054  016584  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35055  016586  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35056  016588  513B               	movf	i1___flmul@a& (0+255),w,b
 35057  01658A  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 35058  01658C  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35059  016590  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35060                           
 35061                           ; BSR set to: 1
 35062  016594  514E               	movf	i1___flmul@temp& (0+255),w,b
 35063  016596  2744               	addwf	i1___flmul@grs& (0+255),f,b
 35064  016598  0E00               	movlw	0
 35065  01659A  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 35066  01659C  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 35067  01659E  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 35068                           
 35069                           ; BSR set to: 1
 35070  0165A0  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35071  0165A2  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35072  0165A4  0E00               	movlw	0
 35073  0165A6  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35074  0165A8  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35075  0165AA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35076                           
 35077                           ; BSR set to: 1
 35078  0165AC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 35079  0165B0  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 35080  0165B4  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 35081  0165B8  6B44               	clrf	i1___flmul@grs& (0+255),b
 35082                           
 35083                           ; BSR set to: 1
 35084  0165BA  513B               	movf	i1___flmul@a& (0+255),w,b
 35085  0165BC  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 35086  0165BE  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35087  0165C2  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35088                           
 35089                           ; BSR set to: 1
 35090  0165C6  514E               	movf	i1___flmul@temp& (0+255),w,b
 35091  0165C8  2744               	addwf	i1___flmul@grs& (0+255),f,b
 35092  0165CA  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35093  0165CC  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 35094  0165CE  0E00               	movlw	0
 35095  0165D0  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 35096  0165D2  0E00               	movlw	0
 35097  0165D4  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 35098                           
 35099                           ; BSR set to: 1
 35100  0165D6  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 35101  0165D8  0337               	mulwf	i1___flmul@b& (0+255),b
 35102  0165DA  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35103  0165DE  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35104                           
 35105                           ; BSR set to: 1
 35106  0165E2  514E               	movf	i1___flmul@temp& (0+255),w,b
 35107  0165E4  2744               	addwf	i1___flmul@grs& (0+255),f,b
 35108  0165E6  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35109  0165E8  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 35110  0165EA  0E00               	movlw	0
 35111  0165EC  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 35112  0165EE  0E00               	movlw	0
 35113  0165F0  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 35114                           
 35115                           ; BSR set to: 1
 35116  0165F2  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 35117  0165F6  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 35118  0165FA  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 35119  0165FE  6B44               	clrf	i1___flmul@grs& (0+255),b
 35120  016600  513B               	movf	i1___flmul@a& (0+255),w,b
 35121  016602  0337               	mulwf	i1___flmul@b& (0+255),b
 35122  016604  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35123  016608  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35124                           
 35125                           ; BSR set to: 1
 35126  01660C  514E               	movf	i1___flmul@temp& (0+255),w,b
 35127  01660E  2744               	addwf	i1___flmul@grs& (0+255),f,b
 35128  016610  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35129  016612  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 35130  016614  0E00               	movlw	0
 35131  016616  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 35132  016618  0E00               	movlw	0
 35133  01661A  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 35134                           
 35135                           ; BSR set to: 1
 35136  01661C  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 35137  01661E  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 35138  016620  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35139  016624  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35140  016628  514E               	movf	i1___flmul@temp& (0+255),w,b
 35141  01662A  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35142  01662C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35143  01662E  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35144  016630  0E00               	movlw	0
 35145  016632  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35146  016634  0E00               	movlw	0
 35147  016636  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35148                           
 35149                           ; BSR set to: 1
 35150  016638  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 35151  01663A  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 35152  01663C  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35153  016640  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35154                           
 35155                           ; BSR set to: 1
 35156  016644  514E               	movf	i1___flmul@temp& (0+255),w,b
 35157  016646  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35158  016648  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35159  01664A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35160  01664C  0E00               	movlw	0
 35161  01664E  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35162  016650  0E00               	movlw	0
 35163  016652  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35164  016654  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 35165  016656  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 35166  016658  CFF3 F14E          	movff	prodl,i1___flmul@temp
 35167  01665C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 35168                           
 35169                           ; BSR set to: 1
 35170  016660  514E               	movf	i1___flmul@temp& (0+255),w,b
 35171  016662  6F3F               	movwf	??i1___flmul& (0+255),b
 35172  016664  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35173  016666  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 35174  016668  6B41               	clrf	(??i1___flmul+2)& (0+255),b
 35175  01666A  6B42               	clrf	(??i1___flmul+3)& (0+255),b
 35176  01666C  C141  F142         	movff	??i1___flmul+2,??i1___flmul+3
 35177  016670  C140  F141         	movff	??i1___flmul+1,??i1___flmul+2
 35178  016674  C13F  F140         	movff	??i1___flmul,??i1___flmul+1
 35179  016678  6B3F               	clrf	??i1___flmul& (0+255),b
 35180  01667A  513F               	movf	??i1___flmul& (0+255),w,b
 35181  01667C  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35182  01667E  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 35183  016680  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35184  016682  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 35185  016684  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35186  016686  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 35187  016688  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35188                           
 35189                           ; BSR set to: 1
 35190  01668A  C144  F13F         	movff	i1___flmul@grs,??i1___flmul
 35191  01668E  C145  F140         	movff	i1___flmul@grs+1,??i1___flmul+1
 35192  016692  C146  F141         	movff	i1___flmul@grs+2,??i1___flmul+2
 35193  016696  C147  F142         	movff	i1___flmul@grs+3,??i1___flmul+3
 35194  01669A  0E19               	movlw	25
 35195  01669C  D005               	goto	i1u1545_20
 35196  01669E                     i1u1545_25:
 35197  01669E  90D8               	bcf	status,0,c
 35198  0166A0  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 35199  0166A2  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 35200  0166A4  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 35201  0166A6  333F               	rrcf	??i1___flmul& (0+255),f,b
 35202  0166A8                     i1u1545_20:
 35203  0166A8  2EE8               	decfsz	wreg,f,c
 35204  0166AA  D7F9               	goto	i1u1545_25
 35205  0166AC  513F               	movf	??i1___flmul& (0+255),w,b
 35206  0166AE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35207  0166B0  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 35208  0166B2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35209  0166B4  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 35210  0166B6  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35211  0166B8  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 35212  0166BA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35213                           
 35214                           ; BSR set to: 1
 35215  0166BC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 35216  0166C0  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 35217  0166C4  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 35218  0166C8  6B44               	clrf	i1___flmul@grs& (0+255),b
 35219                           
 35220                           ; BSR set to: 1
 35221  0166CA  5148               	movf	i1___flmul@aexp& (0+255),w,b
 35222  0166CC  C149  F13F         	movff	i1___flmul@bexp,??i1___flmul
 35223  0166D0  6B40               	clrf	(??i1___flmul+1)& (0+255),b
 35224  0166D2  273F               	addwf	??i1___flmul& (0+255),f,b
 35225  0166D4  0E00               	movlw	0
 35226  0166D6  2340               	addwfc	(??i1___flmul+1)& (0+255),f,b
 35227  0166D8  0E82               	movlw	130
 35228  0166DA  253F               	addwf	??i1___flmul& (0+255),w,b
 35229  0166DC  6F4E               	movwf	i1___flmul@temp& (0+255),b
 35230  0166DE  0EFF               	movlw	255
 35231  0166E0  2140               	addwfc	(??i1___flmul+1)& (0+255),w,b
 35232  0166E2  6F4F               	movwf	(i1___flmul@temp+1)& (0+255),b
 35233  0166E4  D00F               	goto	i1l13424
 35234  0166E6                     i1l13418:
 35235                           
 35236                           ; BSR set to: 1
 35237  0166E6  90D8               	bcf	status,0,c
 35238  0166E8  374A               	rlcf	i1___flmul@prod& (0+255),f,b
 35239  0166EA  374B               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 35240  0166EC  374C               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 35241  0166EE  374D               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 35242                           
 35243                           ; BSR set to: 1
 35244  0166F0  BF47               	btfsc	(i1___flmul@grs+3)& (0+255),7,b
 35245                           
 35246                           ; BSR set to: 1
 35247  0166F2  814A               	bsf	i1___flmul@prod& (0+255),0,b
 35248                           
 35249                           ; BSR set to: 1
 35250  0166F4  90D8               	bcf	status,0,c
 35251  0166F6  3744               	rlcf	i1___flmul@grs& (0+255),f,b
 35252  0166F8  3745               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 35253  0166FA  3746               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 35254  0166FC  3747               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 35255  0166FE  074E               	decf	i1___flmul@temp& (0+255),f,b
 35256  016700  A0D8               	btfss	status,0,c
 35257  016702  074F               	decf	(i1___flmul@temp+1)& (0+255),f,b
 35258  016704                     i1l13424:
 35259                           
 35260                           ; BSR set to: 1
 35261  016704  AF4C               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 35262  016706  D7EF               	goto	i1l13418
 35263                           
 35264                           ; BSR set to: 1
 35265  016708  0E00               	movlw	0
 35266  01670A  6F48               	movwf	i1___flmul@aexp& (0+255),b
 35267                           
 35268                           ; BSR set to: 1
 35269  01670C  AF47               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 35270  01670E  D017               	goto	i1l3224
 35271                           
 35272                           ; BSR set to: 1
 35273  016710  0EFF               	movlw	255
 35274  016712  1544               	andwf	i1___flmul@grs& (0+255),w,b
 35275  016714  6F3F               	movwf	??i1___flmul& (0+255),b
 35276  016716  0EFF               	movlw	255
 35277  016718  1545               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 35278  01671A  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 35279  01671C  0EFF               	movlw	255
 35280  01671E  1546               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 35281  016720  6F41               	movwf	(??i1___flmul+2)& (0+255),b
 35282  016722  0E7F               	movlw	127
 35283  016724  1547               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 35284  016726  6F42               	movwf	(??i1___flmul+3)& (0+255),b
 35285  016728  513F               	movf	??i1___flmul& (0+255),w,b
 35286  01672A  1140               	iorwf	(??i1___flmul+1)& (0+255),w,b
 35287  01672C  1141               	iorwf	(??i1___flmul+2)& (0+255),w,b
 35288  01672E  1142               	iorwf	(??i1___flmul+3)& (0+255),w,b
 35289  016730  B4D8               	btfsc	status,2,c
 35290  016732  D003               	goto	i1l3225
 35291  016734                     i1u1549_20:
 35292                           
 35293                           ; BSR set to: 1
 35294  016734  0E01               	movlw	1
 35295  016736  6F48               	movwf	i1___flmul@aexp& (0+255),b
 35296  016738  D002               	goto	i1l3224
 35297  01673A                     i1l3225:
 35298                           
 35299                           ; BSR set to: 1
 35300  01673A  B14A               	btfsc	i1___flmul@prod& (0+255),0,b
 35301  01673C  D7FB               	goto	i1u1549_20
 35302  01673E                     i1l3224:
 35303                           
 35304                           ; BSR set to: 1
 35305  01673E  5148               	movf	i1___flmul@aexp& (0+255),w,b
 35306  016740  B4D8               	btfsc	status,2,c
 35307  016742  D01F               	goto	i1l13444
 35308                           
 35309                           ; BSR set to: 1
 35310  016744  0E01               	movlw	1
 35311  016746  274A               	addwf	i1___flmul@prod& (0+255),f,b
 35312  016748  0E00               	movlw	0
 35313  01674A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 35314  01674C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 35315  01674E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 35316                           
 35317                           ; BSR set to: 1
 35318  016750  A14D               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 35319  016752  D017               	goto	i1l13444
 35320                           
 35321                           ; BSR set to: 1
 35322  016754  C14A  F13F         	movff	i1___flmul@prod,??i1___flmul
 35323  016758  C14B  F140         	movff	i1___flmul@prod+1,??i1___flmul+1
 35324  01675C  C14C  F141         	movff	i1___flmul@prod+2,??i1___flmul+2
 35325  016760  C14D  F142         	movff	i1___flmul@prod+3,??i1___flmul+3
 35326  016764  3542               	rlcf	(??i1___flmul+3)& (0+255),w,b
 35327  016766  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 35328  016768  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 35329  01676A  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 35330  01676C  333F               	rrcf	??i1___flmul& (0+255),f,b
 35331  01676E  C13F  F14A         	movff	??i1___flmul,i1___flmul@prod
 35332  016772  C140  F14B         	movff	??i1___flmul+1,i1___flmul@prod+1
 35333  016776  C141  F14C         	movff	??i1___flmul+2,i1___flmul@prod+2
 35334  01677A  C142  F14D         	movff	??i1___flmul+3,i1___flmul@prod+3
 35335                           
 35336                           ; BSR set to: 1
 35337  01677E  4B4E               	infsnz	i1___flmul@temp& (0+255),f,b
 35338  016780  2B4F               	incf	(i1___flmul@temp+1)& (0+255),f,b
 35339  016782                     i1l13444:
 35340                           
 35341                           ; BSR set to: 1
 35342  016782  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 35343  016784  D00D               	goto	i1l13448
 35344  016786  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35345  016788  E103               	bnz	i1u1553_20
 35346  01678A  294E               	incf	i1___flmul@temp& (0+255),w,b
 35347  01678C  A0D8               	btfss	status,0,c
 35348  01678E  D008               	goto	i1l13448
 35349  016790                     i1u1553_20:
 35350                           
 35351                           ; BSR set to: 1
 35352  016790  0E00               	movlw	0
 35353  016792  6F4A               	movwf	i1___flmul@prod& (0+255),b
 35354  016794  0E00               	movlw	0
 35355  016796  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 35356  016798  0E80               	movlw	128
 35357  01679A  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 35358  01679C  0E7F               	movlw	127
 35359  01679E  D020               	goto	L27
 35360  0167A0                     i1l13448:
 35361                           
 35362                           ; BSR set to: 1
 35363  0167A0  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 35364  0167A2  D005               	goto	i1u1554_20
 35365  0167A4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 35366  0167A6  E10E               	bnz	i1l3232
 35367  0167A8  054E               	decf	i1___flmul@temp& (0+255),w,b
 35368  0167AA  B0D8               	btfsc	status,0,c
 35369  0167AC  D00B               	goto	i1l3232
 35370  0167AE                     i1u1554_20:
 35371                           
 35372                           ; BSR set to: 1
 35373  0167AE  0E00               	movlw	0
 35374  0167B0  6F4A               	movwf	i1___flmul@prod& (0+255),b
 35375  0167B2  0E00               	movlw	0
 35376  0167B4  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 35377  0167B6  0E00               	movlw	0
 35378  0167B8  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 35379  0167BA  0E00               	movlw	0
 35380  0167BC  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 35381  0167BE  0E00               	movlw	0
 35382  0167C0  6F43               	movwf	i1___flmul@sign& (0+255),b
 35383  0167C2  D00F               	goto	i1l13460
 35384  0167C4                     i1l3232:
 35385                           
 35386                           ; BSR set to: 1
 35387  0167C4  C14E  F149         	movff	i1___flmul@temp,i1___flmul@bexp
 35388                           
 35389                           ; BSR set to: 1
 35390  0167C8  0EFF               	movlw	255
 35391  0167CA  174A               	andwf	i1___flmul@prod& (0+255),f,b
 35392  0167CC  0EFF               	movlw	255
 35393  0167CE  174B               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 35394  0167D0  0E7F               	movlw	127
 35395  0167D2  174C               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 35396  0167D4  0E00               	movlw	0
 35397  0167D6  174D               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 35398                           
 35399                           ; BSR set to: 1
 35400  0167D8  B149               	btfsc	i1___flmul@bexp& (0+255),0,b
 35401                           
 35402                           ; BSR set to: 1
 35403  0167DA  8F4C               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 35404                           
 35405                           ; BSR set to: 1
 35406  0167DC  90D8               	bcf	status,0,c
 35407  0167DE  3149               	rrcf	i1___flmul@bexp& (0+255),w,b
 35408  0167E0                     L27:
 35409  0167E0  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 35410  0167E2                     i1l13460:
 35411                           
 35412                           ; BSR set to: 1
 35413  0167E2  5143               	movf	i1___flmul@sign& (0+255),w,b
 35414  0167E4  134D               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 35415                           
 35416                           ; BSR set to: 1
 35417  0167E6  C14A  F137         	movff	i1___flmul@prod,?i1___flmul
 35418  0167EA  C14B  F138         	movff	i1___flmul@prod+1,?i1___flmul+1
 35419  0167EE  C14C  F139         	movff	i1___flmul@prod+2,?i1___flmul+2
 35420  0167F2  C14D  F13A         	movff	i1___flmul@prod+3,?i1___flmul+3
 35421                           
 35422                           ; BSR set to: 1
 35423  0167F6  0012               	return		;funcret
 35424  0167F8                     __end_ofi1___flmul:
 35425                           	opt callstack 0
 35426                           
 35427 ;; *************** function i1___fldiv *****************
 35428 ;; Defined at:
 35429 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 35430 ;; Parameters:    Size  Location     Type
 35431 ;;  b               4   30[BANK1 ] unsigned char 
 35432 ;;  a               4   34[BANK1 ] unsigned char 
 35433 ;; Auto vars:     Size  Location     Type
 35434 ;;  __fldiv         4   49[BANK1 ] unsigned long 
 35435 ;;  __fldiv         4   42[BANK1 ] unsigned long 
 35436 ;;  __fldiv         2   47[BANK1 ] int 
 35437 ;;  __fldiv         1   54[BANK1 ] unsigned char 
 35438 ;;  __fldiv         1   53[BANK1 ] unsigned char 
 35439 ;;  __fldiv         1   46[BANK1 ] unsigned char 
 35440 ;; Return value:  Size  Location     Type
 35441 ;;                  4   30[BANK1 ] unsigned char 
 35442 ;; Registers used:
 35443 ;;		wreg, status,2, status,0
 35444 ;; Tracked objects:
 35445 ;;		On entry : 0/0
 35446 ;;		On exit  : 0/0
 35447 ;;		Unchanged: 0/0
 35448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35449 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35450 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35451 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35452 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35453 ;;Total ram usage:       25 bytes
 35454 ;; Hardware stack levels used:    1
 35455 ;; Hardware stack levels required when called:    6
 35456 ;; This function calls:
 35457 ;;		Nothing
 35458 ;; This function is called by:
 35459 ;;		_freqMeasConvert
 35460 ;; This function uses a non-reentrant model
 35461 ;;
 35462                           
 35463                           	psect	text145
 35464  017F0A                     __ptext145:
 35465                           	opt callstack 0
 35466  017F0A                     i1___fldiv:
 35467                           	opt callstack 12
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;incstack = 0
 35471  017F0A  0101               	movlb	1	; () banked
 35472  017F0C  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 35473  017F0E  0B80               	andlw	128
 35474  017F10  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 35475  017F12  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 35476  017F14  2521               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 35477  017F16  6F35               	movwf	i1___fldiv@bexp& (0+255),b
 35478                           
 35479                           ; BSR set to: 1
 35480  017F18  BF20               	btfsc	(i1___fldiv@b+2)& (0+255),7,b
 35481                           
 35482                           ; BSR set to: 1
 35483  017F1A  8135               	bsf	i1___fldiv@bexp& (0+255),0,b
 35484                           
 35485                           ; BSR set to: 1
 35486  017F1C  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 35487  017F1E  B4D8               	btfsc	status,2,c
 35488  017F20  D00D               	goto	i1l13214
 35489                           
 35490                           ; BSR set to: 1
 35491  017F22  2935               	incf	i1___fldiv@bexp& (0+255),w,b
 35492  017F24  A4D8               	btfss	status,2,c
 35493  017F26  D008               	goto	i1l13210
 35494                           
 35495                           ; BSR set to: 1
 35496  017F28  0E00               	movlw	0
 35497  017F2A  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35498  017F2C  0E00               	movlw	0
 35499  017F2E  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35500  017F30  0E00               	movlw	0
 35501  017F32  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35502  017F34  0E00               	movlw	0
 35503  017F36  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35504  017F38                     i1l13210:
 35505                           
 35506                           ; BSR set to: 1
 35507  017F38  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 35508  017F3A  D006               	goto	L28
 35509  017F3C                     i1l13214:
 35510                           
 35511                           ; BSR set to: 1
 35512  017F3C  0E00               	movlw	0
 35513  017F3E  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35514  017F40  0E00               	movlw	0
 35515  017F42  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35516  017F44  0E00               	movlw	0
 35517  017F46  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35518  017F48                     L28:
 35519  017F48  0E00               	movlw	0
 35520  017F4A  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35521                           
 35522                           ; BSR set to: 1
 35523  017F4C  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 35524  017F4E  0B80               	andlw	128
 35525  017F50  1B2E               	xorwf	i1___fldiv@sign& (0+255),f,b
 35526                           
 35527                           ; BSR set to: 1
 35528  017F52  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 35529  017F54  2525               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 35530  017F56  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 35531                           
 35532                           ; BSR set to: 1
 35533  017F58  BF24               	btfsc	(i1___fldiv@a+2)& (0+255),7,b
 35534                           
 35535                           ; BSR set to: 1
 35536  017F5A  8136               	bsf	i1___fldiv@aexp& (0+255),0,b
 35537                           
 35538                           ; BSR set to: 1
 35539  017F5C  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 35540  017F5E  B4D8               	btfsc	status,2,c
 35541  017F60  D00D               	goto	i1l13234
 35542                           
 35543                           ; BSR set to: 1
 35544  017F62  2936               	incf	i1___fldiv@aexp& (0+255),w,b
 35545  017F64  A4D8               	btfss	status,2,c
 35546  017F66  D008               	goto	i1l13230
 35547                           
 35548                           ; BSR set to: 1
 35549  017F68  0E00               	movlw	0
 35550  017F6A  6F22               	movwf	i1___fldiv@a& (0+255),b
 35551  017F6C  0E00               	movlw	0
 35552  017F6E  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 35553  017F70  0E00               	movlw	0
 35554  017F72  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 35555  017F74  0E00               	movlw	0
 35556  017F76  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 35557  017F78                     i1l13230:
 35558                           
 35559                           ; BSR set to: 1
 35560  017F78  8F24               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 35561  017F7A  D006               	goto	L29
 35562  017F7C                     i1l13234:
 35563                           
 35564                           ; BSR set to: 1
 35565  017F7C  0E00               	movlw	0
 35566  017F7E  6F22               	movwf	i1___fldiv@a& (0+255),b
 35567  017F80  0E00               	movlw	0
 35568  017F82  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 35569  017F84  0E00               	movlw	0
 35570  017F86  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 35571  017F88                     L29:
 35572  017F88  0E00               	movlw	0
 35573  017F8A  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 35574                           
 35575                           ; BSR set to: 1
 35576  017F8C  5122               	movf	i1___fldiv@a& (0+255),w,b
 35577  017F8E  1123               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 35578  017F90  1124               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 35579  017F92  1125               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 35580  017F94  A4D8               	btfss	status,2,c
 35581  017F96  D017               	goto	i1l13248
 35582                           
 35583                           ; BSR set to: 1
 35584  017F98  0E00               	movlw	0
 35585  017F9A  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35586  017F9C  0E00               	movlw	0
 35587  017F9E  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35588  017FA0  0E00               	movlw	0
 35589  017FA2  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35590  017FA4  0E00               	movlw	0
 35591  017FA6  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35592                           
 35593                           ; BSR set to: 1
 35594  017FA8  0E80               	movlw	128
 35595  017FAA  1320               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 35596  017FAC  0E7F               	movlw	127
 35597  017FAE  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 35598  017FB0                     i1l13242:
 35599                           
 35600                           ; BSR set to: 1
 35601  017FB0  512E               	movf	i1___fldiv@sign& (0+255),w,b
 35602  017FB2  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 35603                           
 35604                           ; BSR set to: 1
 35605  017FB4  C11E  F11E         	movff	i1___fldiv@b,?i1___fldiv
 35606  017FB8  C11F  F11F         	movff	i1___fldiv@b+1,?i1___fldiv+1
 35607  017FBC  C120  F120         	movff	i1___fldiv@b+2,?i1___fldiv+2
 35608  017FC0  C121  F121         	movff	i1___fldiv@b+3,?i1___fldiv+3
 35609  017FC4  0012               	return	
 35610  017FC6                     i1l13248:
 35611                           
 35612                           ; BSR set to: 1
 35613  017FC6  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 35614  017FC8  A4D8               	btfss	status,2,c
 35615  017FCA  D009               	goto	i1l13256
 35616                           
 35617                           ; BSR set to: 1
 35618                           
 35619                           ; BSR set to: 1
 35620  017FCC  0E00               	movlw	0
 35621  017FCE  6F1E               	movwf	?i1___fldiv& (0+255),b
 35622  017FD0  0E00               	movlw	0
 35623  017FD2  6F1F               	movwf	(?i1___fldiv+1)& (0+255),b
 35624  017FD4  0E00               	movlw	0
 35625  017FD6  6F20               	movwf	(?i1___fldiv+2)& (0+255),b
 35626  017FD8  0E00               	movlw	0
 35627  017FDA  6F21               	movwf	(?i1___fldiv+3)& (0+255),b
 35628  017FDC  0012               	return	
 35629  017FDE                     i1l13256:
 35630                           
 35631                           ; BSR set to: 1
 35632  017FDE  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 35633  017FE0  C135  F126         	movff	i1___fldiv@bexp,??i1___fldiv
 35634  017FE4  6B27               	clrf	(??i1___fldiv+1)& (0+255),b
 35635  017FE6  5F26               	subwf	??i1___fldiv& (0+255),f,b
 35636  017FE8  0E00               	movlw	0
 35637  017FEA  5B27               	subwfb	(??i1___fldiv+1)& (0+255),f,b
 35638  017FEC  0E7F               	movlw	127
 35639  017FEE  2526               	addwf	??i1___fldiv& (0+255),w,b
 35640  017FF0  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 35641  017FF2  0E00               	movlw	0
 35642  017FF4  2127               	addwfc	(??i1___fldiv+1)& (0+255),w,b
 35643  017FF6  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 35644                           
 35645                           ; BSR set to: 1
 35646  017FF8  C11E  F12A         	movff	i1___fldiv@b,i1___fldiv@rem
 35647  017FFC  C11F  F12B         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 35648  018000  C120  F12C         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 35649  018004  C121  F12D         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 35650                           
 35651                           ; BSR set to: 1
 35652  018008  0E00               	movlw	0
 35653  01800A  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35654  01800C  0E00               	movlw	0
 35655  01800E  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35656  018010  0E00               	movlw	0
 35657  018012  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35658  018014  0E00               	movlw	0
 35659  018016  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35660                           
 35661                           ; BSR set to: 1
 35662  018018  0E00               	movlw	0
 35663  01801A  6F31               	movwf	i1___fldiv@grs& (0+255),b
 35664  01801C  0E00               	movlw	0
 35665  01801E  6F32               	movwf	(i1___fldiv@grs+1)& (0+255),b
 35666  018020  0E00               	movlw	0
 35667  018022  6F33               	movwf	(i1___fldiv@grs+2)& (0+255),b
 35668  018024  0E00               	movlw	0
 35669  018026  6F34               	movwf	(i1___fldiv@grs+3)& (0+255),b
 35670                           
 35671                           ; BSR set to: 1
 35672  018028  0E00               	movlw	0
 35673  01802A  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 35674  01802C  D028               	goto	i1l3185
 35675  01802E                     i1l13266:
 35676                           
 35677                           ; BSR set to: 1
 35678  01802E  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 35679  018030  B4D8               	btfsc	status,2,c
 35680  018032  D011               	goto	i1l13274
 35681                           
 35682                           ; BSR set to: 1
 35683  018034  90D8               	bcf	status,0,c
 35684  018036  372A               	rlcf	i1___fldiv@rem& (0+255),f,b
 35685  018038  372B               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 35686  01803A  372C               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 35687  01803C  372D               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 35688  01803E  90D8               	bcf	status,0,c
 35689  018040  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 35690  018042  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 35691  018044  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 35692  018046  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 35693                           
 35694                           ; BSR set to: 1
 35695  018048  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 35696                           
 35697                           ; BSR set to: 1
 35698  01804A  811E               	bsf	i1___fldiv@b& (0+255),0,b
 35699                           
 35700                           ; BSR set to: 1
 35701  01804C  90D8               	bcf	status,0,c
 35702  01804E  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 35703  018050  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 35704  018052  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 35705  018054  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 35706  018056                     i1l13274:
 35707                           
 35708                           ; BSR set to: 1
 35709  018056  5122               	movf	i1___fldiv@a& (0+255),w,b
 35710  018058  5D2A               	subwf	i1___fldiv@rem& (0+255),w,b
 35711  01805A  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 35712  01805C  592B               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 35713  01805E  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 35714  018060  592C               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 35715  018062  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 35716  018064  592D               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 35717  018066  A0D8               	btfss	status,0,c
 35718  018068  D009               	goto	i1l13280
 35719                           
 35720                           ; BSR set to: 1
 35721  01806A  8D34               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 35722                           
 35723                           ; BSR set to: 1
 35724  01806C  5122               	movf	i1___fldiv@a& (0+255),w,b
 35725  01806E  5F2A               	subwf	i1___fldiv@rem& (0+255),f,b
 35726  018070  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 35727  018072  5B2B               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 35728  018074  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 35729  018076  5B2C               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 35730  018078  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 35731  01807A  5B2D               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 35732  01807C                     i1l13280:
 35733                           
 35734                           ; BSR set to: 1
 35735  01807C  2B36               	incf	i1___fldiv@aexp& (0+255),f,b
 35736  01807E                     i1l3185:
 35737                           
 35738                           ; BSR set to: 1
 35739  01807E  0E19               	movlw	25
 35740  018080  6536               	cpfsgt	i1___fldiv@aexp& (0+255),b
 35741  018082  D7D5               	goto	i1l13266
 35742                           
 35743                           ; BSR set to: 1
 35744  018084  512A               	movf	i1___fldiv@rem& (0+255),w,b
 35745  018086  112B               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 35746  018088  112C               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 35747  01808A  112D               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 35748  01808C  B4D8               	btfsc	status,2,c
 35749  01808E  D011               	goto	i1l13292
 35750                           
 35751                           ; BSR set to: 1
 35752  018090  8131               	bsf	i1___fldiv@grs& (0+255),0,b
 35753  018092  D00F               	goto	i1l13292
 35754  018094                     i1l13286:
 35755                           
 35756                           ; BSR set to: 1
 35757  018094  90D8               	bcf	status,0,c
 35758  018096  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 35759  018098  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 35760  01809A  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 35761  01809C  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 35762                           
 35763                           ; BSR set to: 1
 35764  01809E  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 35765                           
 35766                           ; BSR set to: 1
 35767  0180A0  811E               	bsf	i1___fldiv@b& (0+255),0,b
 35768                           
 35769                           ; BSR set to: 1
 35770  0180A2  90D8               	bcf	status,0,c
 35771  0180A4  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 35772  0180A6  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 35773  0180A8  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 35774  0180AA  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 35775  0180AC  072F               	decf	i1___fldiv@new_exp& (0+255),f,b
 35776  0180AE  A0D8               	btfss	status,0,c
 35777  0180B0  0730               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 35778  0180B2                     i1l13292:
 35779                           
 35780                           ; BSR set to: 1
 35781  0180B2  AF20               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 35782  0180B4  D7EF               	goto	i1l13286
 35783                           
 35784                           ; BSR set to: 1
 35785  0180B6  0E00               	movlw	0
 35786  0180B8  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 35787                           
 35788                           ; BSR set to: 1
 35789  0180BA  AF34               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 35790  0180BC  D017               	goto	i1l3196
 35791                           
 35792                           ; BSR set to: 1
 35793  0180BE  0EFF               	movlw	255
 35794  0180C0  1531               	andwf	i1___fldiv@grs& (0+255),w,b
 35795  0180C2  6F26               	movwf	??i1___fldiv& (0+255),b
 35796  0180C4  0EFF               	movlw	255
 35797  0180C6  1532               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 35798  0180C8  6F27               	movwf	(??i1___fldiv+1)& (0+255),b
 35799  0180CA  0EFF               	movlw	255
 35800  0180CC  1533               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 35801  0180CE  6F28               	movwf	(??i1___fldiv+2)& (0+255),b
 35802  0180D0  0E7F               	movlw	127
 35803  0180D2  1534               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 35804  0180D4  6F29               	movwf	(??i1___fldiv+3)& (0+255),b
 35805  0180D6  5126               	movf	??i1___fldiv& (0+255),w,b
 35806  0180D8  1127               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 35807  0180DA  1128               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 35808  0180DC  1129               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 35809  0180DE  B4D8               	btfsc	status,2,c
 35810  0180E0  D003               	goto	i1l3197
 35811  0180E2                     i1u1530_20:
 35812                           
 35813                           ; BSR set to: 1
 35814  0180E2  0E01               	movlw	1
 35815  0180E4  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 35816  0180E6  D002               	goto	i1l3196
 35817  0180E8                     i1l3197:
 35818                           
 35819                           ; BSR set to: 1
 35820  0180E8  B11E               	btfsc	i1___fldiv@b& (0+255),0,b
 35821  0180EA  D7FB               	goto	i1u1530_20
 35822  0180EC                     i1l3196:
 35823                           
 35824                           ; BSR set to: 1
 35825  0180EC  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 35826  0180EE  B4D8               	btfsc	status,2,c
 35827  0180F0  D01F               	goto	i1l13312
 35828                           
 35829                           ; BSR set to: 1
 35830  0180F2  0E01               	movlw	1
 35831  0180F4  271E               	addwf	i1___fldiv@b& (0+255),f,b
 35832  0180F6  0E00               	movlw	0
 35833  0180F8  231F               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 35834  0180FA  2320               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 35835  0180FC  2321               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 35836                           
 35837                           ; BSR set to: 1
 35838  0180FE  A121               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 35839  018100  D017               	goto	i1l13312
 35840                           
 35841                           ; BSR set to: 1
 35842  018102  C11E  F126         	movff	i1___fldiv@b,??i1___fldiv
 35843  018106  C11F  F127         	movff	i1___fldiv@b+1,??i1___fldiv+1
 35844  01810A  C120  F128         	movff	i1___fldiv@b+2,??i1___fldiv+2
 35845  01810E  C121  F129         	movff	i1___fldiv@b+3,??i1___fldiv+3
 35846  018112  3529               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 35847  018114  3329               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 35848  018116  3328               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 35849  018118  3327               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 35850  01811A  3326               	rrcf	??i1___fldiv& (0+255),f,b
 35851  01811C  C126  F11E         	movff	??i1___fldiv,i1___fldiv@b
 35852  018120  C127  F11F         	movff	??i1___fldiv+1,i1___fldiv@b+1
 35853  018124  C128  F120         	movff	??i1___fldiv+2,i1___fldiv@b+2
 35854  018128  C129  F121         	movff	??i1___fldiv+3,i1___fldiv@b+3
 35855                           
 35856                           ; BSR set to: 1
 35857  01812C  4B2F               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 35858  01812E  2B30               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 35859  018130                     i1l13312:
 35860                           
 35861                           ; BSR set to: 1
 35862  018130  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 35863  018132  D010               	goto	i1l13316
 35864  018134  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 35865  018136  E103               	bnz	i1u1534_20
 35866  018138  292F               	incf	i1___fldiv@new_exp& (0+255),w,b
 35867  01813A  A0D8               	btfss	status,0,c
 35868  01813C  D00B               	goto	i1l13316
 35869  01813E                     i1u1534_20:
 35870                           
 35871                           ; BSR set to: 1
 35872  01813E  0E00               	movlw	0
 35873  018140  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 35874  018142  692F               	setf	i1___fldiv@new_exp& (0+255),b
 35875  018144  0E00               	movlw	0
 35876  018146  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35877  018148  0E00               	movlw	0
 35878  01814A  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35879  01814C  0E00               	movlw	0
 35880  01814E  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35881  018150  0E00               	movlw	0
 35882  018152  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35883  018154                     i1l13316:
 35884                           
 35885                           ; BSR set to: 1
 35886  018154  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 35887  018156  D005               	goto	i1u1535_20
 35888  018158  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 35889  01815A  E111               	bnz	i1l13320
 35890  01815C  052F               	decf	i1___fldiv@new_exp& (0+255),w,b
 35891  01815E  B0D8               	btfsc	status,0,c
 35892  018160  D00E               	goto	i1l13320
 35893  018162                     i1u1535_20:
 35894                           
 35895                           ; BSR set to: 1
 35896  018162  0E00               	movlw	0
 35897  018164  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 35898  018166  0E00               	movlw	0
 35899  018168  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 35900  01816A  0E00               	movlw	0
 35901  01816C  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35902  01816E  0E00               	movlw	0
 35903  018170  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35904  018172  0E00               	movlw	0
 35905  018174  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35906  018176  0E00               	movlw	0
 35907  018178  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35908  01817A  0E00               	movlw	0
 35909  01817C  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 35910  01817E                     i1l13320:
 35911                           
 35912                           ; BSR set to: 1
 35913  01817E  C12F  F135         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 35914                           
 35915                           ; BSR set to: 1
 35916  018182  A135               	btfss	i1___fldiv@bexp& (0+255),0,b
 35917  018184  D002               	goto	i1l13326
 35918                           
 35919                           ; BSR set to: 1
 35920  018186  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 35921  018188  D001               	goto	i1l13328
 35922  01818A                     i1l13326:
 35923                           
 35924                           ; BSR set to: 1
 35925  01818A  9F20               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 35926  01818C                     i1l13328:
 35927                           
 35928                           ; BSR set to: 1
 35929  01818C  90D8               	bcf	status,0,c
 35930  01818E  3135               	rrcf	i1___fldiv@bexp& (0+255),w,b
 35931  018190  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35932  018192  D70E               	goto	i1l13242
 35933  018194                     __end_ofi1___fldiv:
 35934                           	opt callstack 0
 35935                           
 35936 ;; *************** function i1___fladd *****************
 35937 ;; Defined at:
 35938 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 35939 ;; Parameters:    Size  Location     Type
 35940 ;;  b               4   14[BANK1 ] unsigned char 
 35941 ;;  a               4   18[BANK1 ] unsigned char 
 35942 ;; Auto vars:     Size  Location     Type
 35943 ;;  __fladd         1   29[BANK1 ] unsigned char 
 35944 ;;  __fladd         1   28[BANK1 ] unsigned char 
 35945 ;;  __fladd         1   27[BANK1 ] unsigned char 
 35946 ;;  __fladd         1   26[BANK1 ] unsigned char 
 35947 ;; Return value:  Size  Location     Type
 35948 ;;                  4   14[BANK1 ] unsigned char 
 35949 ;; Registers used:
 35950 ;;		wreg, status,2, status,0
 35951 ;; Tracked objects:
 35952 ;;		On entry : 0/0
 35953 ;;		On exit  : 0/0
 35954 ;;		Unchanged: 0/0
 35955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35956 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35957 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35958 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35959 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35960 ;;Total ram usage:       16 bytes
 35961 ;; Hardware stack levels used:    1
 35962 ;; Hardware stack levels required when called:    6
 35963 ;; This function calls:
 35964 ;;		Nothing
 35965 ;; This function is called by:
 35966 ;;		_freqMeasConvert
 35967 ;; This function uses a non-reentrant model
 35968 ;;
 35969                           
 35970                           	psect	text146
 35971  016E58                     __ptext146:
 35972                           	opt callstack 0
 35973  016E58                     i1___fladd:
 35974                           	opt callstack 12
 35975                           
 35976                           ; BSR set to: 1
 35977                           ;incstack = 0
 35978  016E58  0101               	movlb	1	; () banked
 35979  016E5A  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 35980  016E5C  0B80               	andlw	128
 35981  016E5E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 35982  016E60  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 35983  016E62  2511               	addwf	(i1___fladd@b+3)& (0+255),w,b
 35984  016E64  6F1C               	movwf	i1___fladd@bexp& (0+255),b
 35985                           
 35986                           ; BSR set to: 1
 35987  016E66  BF10               	btfsc	(i1___fladd@b+2)& (0+255),7,b
 35988                           
 35989                           ; BSR set to: 1
 35990  016E68  811C               	bsf	i1___fladd@bexp& (0+255),0,b
 35991                           
 35992                           ; BSR set to: 1
 35993  016E6A  511C               	movf	i1___fladd@bexp& (0+255),w,b
 35994  016E6C  B4D8               	btfsc	status,2,c
 35995  016E6E  D00D               	goto	i1l13006
 35996                           
 35997                           ; BSR set to: 1
 35998  016E70  291C               	incf	i1___fladd@bexp& (0+255),w,b
 35999  016E72  A4D8               	btfss	status,2,c
 36000  016E74  D008               	goto	i1l13002
 36001                           
 36002                           ; BSR set to: 1
 36003  016E76  0E00               	movlw	0
 36004  016E78  6F0E               	movwf	i1___fladd@b& (0+255),b
 36005  016E7A  0E00               	movlw	0
 36006  016E7C  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 36007  016E7E  0E00               	movlw	0
 36008  016E80  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 36009  016E82  0E00               	movlw	0
 36010  016E84  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36011  016E86                     i1l13002:
 36012                           
 36013                           ; BSR set to: 1
 36014  016E86  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 36015  016E88  D006               	goto	L30
 36016  016E8A                     i1l13006:
 36017                           
 36018                           ; BSR set to: 1
 36019  016E8A  0E00               	movlw	0
 36020  016E8C  6F0E               	movwf	i1___fladd@b& (0+255),b
 36021  016E8E  0E00               	movlw	0
 36022  016E90  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 36023  016E92  0E00               	movlw	0
 36024  016E94  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 36025  016E96                     L30:
 36026  016E96  0E00               	movlw	0
 36027  016E98  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36028                           
 36029                           ; BSR set to: 1
 36030  016E9A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 36031  016E9C  0B80               	andlw	128
 36032  016E9E  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 36033                           
 36034                           ; BSR set to: 1
 36035  016EA0  511A               	movf	i1___fladd@signs& (0+255),w,b
 36036  016EA2  191B               	xorwf	i1___fladd@aexp& (0+255),w,b
 36037  016EA4  A4D8               	btfss	status,2,c
 36038                           
 36039                           ; BSR set to: 1
 36040  016EA6  8D1A               	bsf	i1___fladd@signs& (0+255),6,b
 36041                           
 36042                           ; BSR set to: 1
 36043  016EA8  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 36044  016EAA  2515               	addwf	(i1___fladd@a+3)& (0+255),w,b
 36045  016EAC  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 36046                           
 36047                           ; BSR set to: 1
 36048  016EAE  BF14               	btfsc	(i1___fladd@a+2)& (0+255),7,b
 36049                           
 36050                           ; BSR set to: 1
 36051  016EB0  811B               	bsf	i1___fladd@aexp& (0+255),0,b
 36052                           
 36053                           ; BSR set to: 1
 36054  016EB2  511B               	movf	i1___fladd@aexp& (0+255),w,b
 36055  016EB4  B4D8               	btfsc	status,2,c
 36056  016EB6  D00D               	goto	i1l13030
 36057                           
 36058                           ; BSR set to: 1
 36059  016EB8  291B               	incf	i1___fladd@aexp& (0+255),w,b
 36060  016EBA  A4D8               	btfss	status,2,c
 36061  016EBC  D008               	goto	i1l13026
 36062                           
 36063                           ; BSR set to: 1
 36064  016EBE  0E00               	movlw	0
 36065  016EC0  6F12               	movwf	i1___fladd@a& (0+255),b
 36066  016EC2  0E00               	movlw	0
 36067  016EC4  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 36068  016EC6  0E00               	movlw	0
 36069  016EC8  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 36070  016ECA  0E00               	movlw	0
 36071  016ECC  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 36072  016ECE                     i1l13026:
 36073                           
 36074                           ; BSR set to: 1
 36075  016ECE  8F14               	bsf	(i1___fladd@a+2)& (0+255),7,b
 36076  016ED0  D006               	goto	L31
 36077  016ED2                     i1l13030:
 36078                           
 36079                           ; BSR set to: 1
 36080  016ED2  0E00               	movlw	0
 36081  016ED4  6F12               	movwf	i1___fladd@a& (0+255),b
 36082  016ED6  0E00               	movlw	0
 36083  016ED8  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 36084  016EDA  0E00               	movlw	0
 36085  016EDC  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 36086  016EDE                     L31:
 36087  016EDE  0E00               	movlw	0
 36088  016EE0  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 36089                           
 36090                           ; BSR set to: 1
 36091  016EE2  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36092  016EE4  5D1B               	subwf	i1___fladd@aexp& (0+255),w,b
 36093  016EE6  B0D8               	btfsc	status,0,c
 36094  016EE8  D022               	goto	i1l13068
 36095                           
 36096                           ; BSR set to: 1
 36097  016EEA  AD1A               	btfss	i1___fladd@signs& (0+255),6,b
 36098  016EEC  D002               	goto	i1l13038
 36099                           
 36100                           ; BSR set to: 1
 36101  016EEE  0E80               	movlw	128
 36102  016EF0  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 36103  016EF2                     i1l13038:
 36104                           
 36105                           ; BSR set to: 1
 36106  016EF2  C11C  F11D         	movff	i1___fladd@bexp,i1___fladd@grs
 36107                           
 36108                           ; BSR set to: 1
 36109  016EF6  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 36110                           
 36111                           ; BSR set to: 1
 36112  016EFA  C11D  F11B         	movff	i1___fladd@grs,i1___fladd@aexp
 36113                           
 36114                           ; BSR set to: 1
 36115  016EFE  C10E  F11D         	movff	i1___fladd@b,i1___fladd@grs
 36116                           
 36117                           ; BSR set to: 1
 36118  016F02  C112  F10E         	movff	i1___fladd@a,i1___fladd@b
 36119                           
 36120                           ; BSR set to: 1
 36121  016F06  C11D  F112         	movff	i1___fladd@grs,i1___fladd@a
 36122                           
 36123                           ; BSR set to: 1
 36124  016F0A  C10F  F11D         	movff	i1___fladd@b+1,i1___fladd@grs
 36125                           
 36126                           ; BSR set to: 1
 36127  016F0E  C113  F10F         	movff	i1___fladd@a+1,i1___fladd@b+1
 36128                           
 36129                           ; BSR set to: 1
 36130  016F12  C11D  F113         	movff	i1___fladd@grs,i1___fladd@a+1
 36131                           
 36132                           ; BSR set to: 1
 36133  016F16  C110  F11D         	movff	i1___fladd@b+2,i1___fladd@grs
 36134                           
 36135                           ; BSR set to: 1
 36136  016F1A  C114  F110         	movff	i1___fladd@a+2,i1___fladd@b+2
 36137                           
 36138                           ; BSR set to: 1
 36139  016F1E  C11D  F114         	movff	i1___fladd@grs,i1___fladd@a+2
 36140                           
 36141                           ; BSR set to: 1
 36142  016F22  C111  F11D         	movff	i1___fladd@b+3,i1___fladd@grs
 36143                           
 36144                           ; BSR set to: 1
 36145  016F26  C115  F111         	movff	i1___fladd@a+3,i1___fladd@b+3
 36146                           
 36147                           ; BSR set to: 1
 36148  016F2A  C11D  F115         	movff	i1___fladd@grs,i1___fladd@a+3
 36149  016F2E                     i1l13068:
 36150                           
 36151                           ; BSR set to: 1
 36152  016F2E  0E00               	movlw	0
 36153  016F30  6F1D               	movwf	i1___fladd@grs& (0+255),b
 36154                           
 36155                           ; BSR set to: 1
 36156  016F32  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36157  016F34  C11B  F116         	movff	i1___fladd@aexp,??i1___fladd
 36158  016F38  6B17               	clrf	(??i1___fladd+1)& (0+255),b
 36159  016F3A  5F16               	subwf	??i1___fladd& (0+255),f,b
 36160  016F3C  0E00               	movlw	0
 36161  016F3E  5B17               	subwfb	(??i1___fladd+1)& (0+255),f,b
 36162  016F40  BF17               	btfsc	(??i1___fladd+1)& (0+255),7,b
 36163  016F42  D02C               	goto	i1l3130
 36164  016F44  5117               	movf	(??i1___fladd+1)& (0+255),w,b
 36165  016F46  E104               	bnz	i1u1484_20
 36166  016F48  0E1A               	movlw	26
 36167  016F4A  5D16               	subwf	??i1___fladd& (0+255),w,b
 36168  016F4C  A0D8               	btfss	status,0,c
 36169  016F4E  D026               	goto	i1l3130
 36170  016F50                     i1u1484_20:
 36171                           
 36172                           ; BSR set to: 1
 36173  016F50  510E               	movf	i1___fladd@b& (0+255),w,b
 36174  016F52  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 36175  016F54  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 36176  016F56  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 36177  016F58  B4D8               	btfsc	status,2,c
 36178  016F5A  D002               	goto	i1u1485_20
 36179  016F5C  0E01               	movlw	1
 36180  016F5E  D001               	goto	i1u1486_20
 36181  016F60                     i1u1485_20:
 36182  016F60  0E00               	movlw	0
 36183  016F62                     i1u1486_20:
 36184  016F62  6F1D               	movwf	i1___fladd@grs& (0+255),b
 36185                           
 36186                           ; BSR set to: 1
 36187  016F64  0E00               	movlw	0
 36188  016F66  6F0E               	movwf	i1___fladd@b& (0+255),b
 36189  016F68  0E00               	movlw	0
 36190  016F6A  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 36191  016F6C  0E00               	movlw	0
 36192  016F6E  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 36193  016F70  0E00               	movlw	0
 36194  016F72  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36195                           
 36196                           ; BSR set to: 1
 36197  016F74  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 36198  016F78  D015               	goto	i1u1489_20
 36199  016F7A                     i1l3131:
 36200                           
 36201                           ; BSR set to: 1
 36202  016F7A  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 36203  016F7C  D005               	goto	i1l13080
 36204                           
 36205                           ; BSR set to: 1
 36206  016F7E  90D8               	bcf	status,0,c
 36207  016F80  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 36208  016F82  0901               	iorlw	1
 36209  016F84  6F1D               	movwf	i1___fladd@grs& (0+255),b
 36210  016F86  D002               	goto	i1l13082
 36211  016F88                     i1l13080:
 36212                           
 36213                           ; BSR set to: 1
 36214  016F88  90D8               	bcf	status,0,c
 36215  016F8A  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 36216  016F8C                     i1l13082:
 36217                           
 36218                           ; BSR set to: 1
 36219  016F8C  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 36220                           
 36221                           ; BSR set to: 1
 36222  016F8E  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 36223                           
 36224                           ; BSR set to: 1
 36225  016F90  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 36226  016F92  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 36227  016F94  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 36228  016F96  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 36229  016F98  330E               	rrcf	i1___fladd@b& (0+255),f,b
 36230                           
 36231                           ; BSR set to: 1
 36232  016F9A  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 36233  016F9C                     i1l3130:
 36234                           
 36235                           ; BSR set to: 1
 36236  016F9C  511B               	movf	i1___fladd@aexp& (0+255),w,b
 36237  016F9E  5D1C               	subwf	i1___fladd@bexp& (0+255),w,b
 36238  016FA0  A0D8               	btfss	status,0,c
 36239  016FA2  D7EB               	goto	i1l3131
 36240  016FA4                     i1u1489_20:
 36241                           
 36242                           ; BSR set to: 1
 36243  016FA4  BD1A               	btfsc	i1___fladd@signs& (0+255),6,b
 36244  016FA6  D028               	goto	i1l13114
 36245                           
 36246                           ; BSR set to: 1
 36247  016FA8  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36248  016FAA  A4D8               	btfss	status,2,c
 36249  016FAC  D009               	goto	i1l13096
 36250                           
 36251                           ; BSR set to: 1
 36252  016FAE  0E00               	movlw	0
 36253  016FB0  6F0E               	movwf	?i1___fladd& (0+255),b
 36254  016FB2  0E00               	movlw	0
 36255  016FB4  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 36256  016FB6  0E00               	movlw	0
 36257  016FB8  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 36258  016FBA  0E00               	movlw	0
 36259  016FBC  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 36260  016FBE  0012               	return	
 36261  016FC0                     i1l13096:
 36262                           
 36263                           ; BSR set to: 1
 36264  016FC0  5112               	movf	i1___fladd@a& (0+255),w,b
 36265  016FC2  270E               	addwf	i1___fladd@b& (0+255),f,b
 36266  016FC4  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 36267  016FC6  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 36268  016FC8  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 36269  016FCA  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 36270  016FCC  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 36271  016FCE  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 36272                           
 36273                           ; BSR set to: 1
 36274  016FD0  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 36275  016FD2  D071               	goto	i1u1502_20
 36276                           
 36277                           ; BSR set to: 1
 36278  016FD4  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 36279  016FD6  D005               	goto	i1l13104
 36280                           
 36281                           ; BSR set to: 1
 36282  016FD8  90D8               	bcf	status,0,c
 36283  016FDA  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 36284  016FDC  0901               	iorlw	1
 36285  016FDE  6F1D               	movwf	i1___fladd@grs& (0+255),b
 36286  016FE0  D002               	goto	i1l13106
 36287  016FE2                     i1l13104:
 36288                           
 36289                           ; BSR set to: 1
 36290  016FE2  90D8               	bcf	status,0,c
 36291  016FE4  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 36292  016FE6                     i1l13106:
 36293                           
 36294                           ; BSR set to: 1
 36295  016FE6  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 36296                           
 36297                           ; BSR set to: 1
 36298  016FE8  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 36299                           
 36300                           ; BSR set to: 1
 36301  016FEA  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 36302  016FEC  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 36303  016FEE  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 36304  016FF0  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 36305  016FF2  330E               	rrcf	i1___fladd@b& (0+255),f,b
 36306                           
 36307                           ; BSR set to: 1
 36308  016FF4  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 36309  016FF6  D05F               	goto	i1u1502_20
 36310  016FF8                     i1l13114:
 36311                           
 36312                           ; BSR set to: 1
 36313  016FF8  5112               	movf	i1___fladd@a& (0+255),w,b
 36314  016FFA  5D0E               	subwf	i1___fladd@b& (0+255),w,b
 36315  016FFC  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 36316  016FFE  590F               	subwfb	(i1___fladd@b+1)& (0+255),w,b
 36317  017000  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 36318  017002  5910               	subwfb	(i1___fladd@b+2)& (0+255),w,b
 36319  017004  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 36320  017006  0A80               	xorlw	128
 36321  017008  6F16               	movwf	??i1___fladd& (0+255),b
 36322  01700A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 36323  01700C  0A80               	xorlw	128
 36324  01700E  5916               	subwfb	??i1___fladd& (0+255),w,b
 36325  017010  B0D8               	btfsc	status,0,c
 36326  017012  D025               	goto	i1l13124
 36327                           
 36328                           ; BSR set to: 1
 36329  017014  510E               	movf	i1___fladd@b& (0+255),w,b
 36330  017016  5D12               	subwf	i1___fladd@a& (0+255),w,b
 36331  017018  6F16               	movwf	??i1___fladd& (0+255),b
 36332  01701A  510F               	movf	(i1___fladd@b+1)& (0+255),w,b
 36333  01701C  5913               	subwfb	(i1___fladd@a+1)& (0+255),w,b
 36334  01701E  6F17               	movwf	(??i1___fladd+1)& (0+255),b
 36335  017020  5110               	movf	(i1___fladd@b+2)& (0+255),w,b
 36336  017022  5914               	subwfb	(i1___fladd@a+2)& (0+255),w,b
 36337  017024  6F18               	movwf	(??i1___fladd+2)& (0+255),b
 36338  017026  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 36339  017028  5915               	subwfb	(i1___fladd@a+3)& (0+255),w,b
 36340  01702A  6F19               	movwf	(??i1___fladd+3)& (0+255),b
 36341  01702C  0EFF               	movlw	255
 36342  01702E  2516               	addwf	??i1___fladd& (0+255),w,b
 36343  017030  6F0E               	movwf	i1___fladd@b& (0+255),b
 36344  017032  0EFF               	movlw	255
 36345  017034  2117               	addwfc	(??i1___fladd+1)& (0+255),w,b
 36346  017036  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 36347  017038  0EFF               	movlw	255
 36348  01703A  2118               	addwfc	(??i1___fladd+2)& (0+255),w,b
 36349  01703C  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 36350  01703E  0EFF               	movlw	255
 36351  017040  2119               	addwfc	(??i1___fladd+3)& (0+255),w,b
 36352  017042  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36353  017044  0E80               	movlw	128
 36354  017046  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 36355                           
 36356                           ; BSR set to: 1
 36357  017048  6D1D               	negf	i1___fladd@grs& (0+255),b
 36358                           
 36359                           ; BSR set to: 1
 36360  01704A  511D               	movf	i1___fladd@grs& (0+255),w,b
 36361  01704C  A4D8               	btfss	status,2,c
 36362  01704E  D00F               	goto	i1l3146
 36363                           
 36364                           ; BSR set to: 1
 36365  017050  0E01               	movlw	1
 36366  017052  270E               	addwf	i1___fladd@b& (0+255),f,b
 36367  017054  0E00               	movlw	0
 36368  017056  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 36369  017058  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 36370  01705A  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 36371  01705C  D008               	goto	i1l3146
 36372  01705E                     i1l13124:
 36373                           
 36374                           ; BSR set to: 1
 36375  01705E  5112               	movf	i1___fladd@a& (0+255),w,b
 36376  017060  5F0E               	subwf	i1___fladd@b& (0+255),f,b
 36377  017062  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 36378  017064  5B0F               	subwfb	(i1___fladd@b+1)& (0+255),f,b
 36379  017066  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 36380  017068  5B10               	subwfb	(i1___fladd@b+2)& (0+255),f,b
 36381  01706A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 36382  01706C  5B11               	subwfb	(i1___fladd@b+3)& (0+255),f,b
 36383  01706E                     i1l3146:
 36384                           
 36385                           ; BSR set to: 1
 36386  01706E  510E               	movf	i1___fladd@b& (0+255),w,b
 36387  017070  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 36388  017072  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 36389  017074  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 36390  017076  A4D8               	btfss	status,2,c
 36391  017078  D01C               	goto	i1l13148
 36392                           
 36393                           ; BSR set to: 1
 36394  01707A  511D               	movf	i1___fladd@grs& (0+255),w,b
 36395  01707C  A4D8               	btfss	status,2,c
 36396  01707E  D019               	goto	i1l13148
 36397                           
 36398                           ; BSR set to: 1
 36399  017080  0E00               	movlw	0
 36400  017082  6F0E               	movwf	?i1___fladd& (0+255),b
 36401  017084  0E00               	movlw	0
 36402  017086  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 36403  017088  0E00               	movlw	0
 36404  01708A  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 36405  01708C  0E00               	movlw	0
 36406  01708E  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 36407  017090  0012               	return	
 36408  017092                     i1l13132:
 36409                           
 36410                           ; BSR set to: 1
 36411  017092  90D8               	bcf	status,0,c
 36412  017094  370E               	rlcf	i1___fladd@b& (0+255),f,b
 36413  017096  370F               	rlcf	(i1___fladd@b+1)& (0+255),f,b
 36414  017098  3710               	rlcf	(i1___fladd@b+2)& (0+255),f,b
 36415  01709A  3711               	rlcf	(i1___fladd@b+3)& (0+255),f,b
 36416                           
 36417                           ; BSR set to: 1
 36418  01709C  BF1D               	btfsc	i1___fladd@grs& (0+255),7,b
 36419                           
 36420                           ; BSR set to: 1
 36421  01709E  810E               	bsf	i1___fladd@b& (0+255),0,b
 36422                           
 36423                           ; BSR set to: 1
 36424  0170A0  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 36425  0170A2  D002               	goto	i1l13142
 36426                           
 36427                           ; BSR set to: 1
 36428  0170A4  80D8               	bsf	status,0,c
 36429  0170A6  D001               	goto	L32
 36430  0170A8                     i1l13142:
 36431                           
 36432                           ; BSR set to: 1
 36433  0170A8  90D8               	bcf	status,0,c
 36434  0170AA                     L32:
 36435  0170AA  371D               	rlcf	i1___fladd@grs& (0+255),f,b
 36436                           
 36437                           ; BSR set to: 1
 36438  0170AC  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36439  0170AE  A4D8               	btfss	status,2,c
 36440                           
 36441                           ; BSR set to: 1
 36442  0170B0  071C               	decf	i1___fladd@bexp& (0+255),f,b
 36443  0170B2                     i1l13148:
 36444                           
 36445                           ; BSR set to: 1
 36446  0170B2  AF10               	btfss	(i1___fladd@b+2)& (0+255),7,b
 36447  0170B4  D7EE               	goto	i1l13132
 36448  0170B6                     i1u1502_20:
 36449                           
 36450                           ; BSR set to: 1
 36451  0170B6  0E00               	movlw	0
 36452  0170B8  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 36453                           
 36454                           ; BSR set to: 1
 36455  0170BA  AF1D               	btfss	i1___fladd@grs& (0+255),7,b
 36456  0170BC  D00B               	goto	i1l3155
 36457                           
 36458                           ; BSR set to: 1
 36459  0170BE  C11D  F116         	movff	i1___fladd@grs,??i1___fladd
 36460  0170C2  0E7F               	movlw	127
 36461  0170C4  1716               	andwf	??i1___fladd& (0+255),f,b
 36462  0170C6  B4D8               	btfsc	status,2,c
 36463  0170C8  D003               	goto	i1l3156
 36464  0170CA                     i1u1504_20:
 36465                           
 36466                           ; BSR set to: 1
 36467  0170CA  0E01               	movlw	1
 36468  0170CC  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 36469  0170CE  D002               	goto	i1l3155
 36470  0170D0                     i1l3156:
 36471                           
 36472                           ; BSR set to: 1
 36473  0170D0  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 36474  0170D2  D7FB               	goto	i1u1504_20
 36475  0170D4                     i1l3155:
 36476                           
 36477                           ; BSR set to: 1
 36478  0170D4  511B               	movf	i1___fladd@aexp& (0+255),w,b
 36479  0170D6  B4D8               	btfsc	status,2,c
 36480  0170D8  D020               	goto	i1l13168
 36481                           
 36482                           ; BSR set to: 1
 36483  0170DA  0E01               	movlw	1
 36484  0170DC  270E               	addwf	i1___fladd@b& (0+255),f,b
 36485  0170DE  0E00               	movlw	0
 36486  0170E0  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 36487  0170E2  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 36488  0170E4  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 36489                           
 36490                           ; BSR set to: 1
 36491  0170E6  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 36492  0170E8  D018               	goto	i1l13168
 36493                           
 36494                           ; BSR set to: 1
 36495  0170EA  C10E  F116         	movff	i1___fladd@b,??i1___fladd
 36496  0170EE  C10F  F117         	movff	i1___fladd@b+1,??i1___fladd+1
 36497  0170F2  C110  F118         	movff	i1___fladd@b+2,??i1___fladd+2
 36498  0170F6  C111  F119         	movff	i1___fladd@b+3,??i1___fladd+3
 36499  0170FA  3519               	rlcf	(??i1___fladd+3)& (0+255),w,b
 36500  0170FC  3319               	rrcf	(??i1___fladd+3)& (0+255),f,b
 36501  0170FE  3318               	rrcf	(??i1___fladd+2)& (0+255),f,b
 36502  017100  3317               	rrcf	(??i1___fladd+1)& (0+255),f,b
 36503  017102  3316               	rrcf	??i1___fladd& (0+255),f,b
 36504  017104  C116  F10E         	movff	??i1___fladd,i1___fladd@b
 36505  017108  C117  F10F         	movff	??i1___fladd+1,i1___fladd@b+1
 36506  01710C  C118  F110         	movff	??i1___fladd+2,i1___fladd@b+2
 36507  017110  C119  F111         	movff	??i1___fladd+3,i1___fladd@b+3
 36508  017114  291C               	incf	i1___fladd@bexp& (0+255),w,b
 36509  017116  A4D8               	btfss	status,2,c
 36510                           
 36511                           ; BSR set to: 1
 36512  017118  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 36513  01711A                     i1l13168:
 36514                           
 36515                           ; BSR set to: 1
 36516  01711A  291C               	incf	i1___fladd@bexp& (0+255),w,b
 36517  01711C  B4D8               	btfsc	status,2,c
 36518  01711E  D003               	goto	i1u1510_20
 36519                           
 36520                           ; BSR set to: 1
 36521  017120  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36522  017122  A4D8               	btfss	status,2,c
 36523  017124  D00D               	goto	i1l13176
 36524  017126                     i1u1510_20:
 36525                           
 36526                           ; BSR set to: 1
 36527  017126  0E00               	movlw	0
 36528  017128  6F0E               	movwf	i1___fladd@b& (0+255),b
 36529  01712A  0E00               	movlw	0
 36530  01712C  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 36531  01712E  0E00               	movlw	0
 36532  017130  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 36533  017132  0E00               	movlw	0
 36534  017134  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36535  017136  511C               	movf	i1___fladd@bexp& (0+255),w,b
 36536  017138  A4D8               	btfss	status,2,c
 36537  01713A  D002               	goto	i1l13176
 36538                           
 36539                           ; BSR set to: 1
 36540  01713C  0E00               	movlw	0
 36541  01713E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 36542  017140                     i1l13176:
 36543                           
 36544                           ; BSR set to: 1
 36545  017140  A11C               	btfss	i1___fladd@bexp& (0+255),0,b
 36546  017142  D002               	goto	i1l13180
 36547                           
 36548                           ; BSR set to: 1
 36549  017144  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 36550  017146  D001               	goto	i1l13182
 36551  017148                     i1l13180:
 36552                           
 36553                           ; BSR set to: 1
 36554  017148  9F10               	bcf	(i1___fladd@b+2)& (0+255),7,b
 36555  01714A                     i1l13182:
 36556                           
 36557                           ; BSR set to: 1
 36558  01714A  90D8               	bcf	status,0,c
 36559  01714C  311C               	rrcf	i1___fladd@bexp& (0+255),w,b
 36560  01714E  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 36561                           
 36562                           ; BSR set to: 1
 36563  017150  BF1A               	btfsc	i1___fladd@signs& (0+255),7,b
 36564                           
 36565                           ; BSR set to: 1
 36566  017152  8F11               	bsf	(i1___fladd@b+3)& (0+255),7,b
 36567                           
 36568                           ; BSR set to: 1
 36569  017154  C10E  F10E         	movff	i1___fladd@b,?i1___fladd
 36570  017158  C10F  F10F         	movff	i1___fladd@b+1,?i1___fladd+1
 36571  01715C  C110  F110         	movff	i1___fladd@b+2,?i1___fladd+2
 36572  017160  C111  F111         	movff	i1___fladd@b+3,?i1___fladd+3
 36573                           
 36574                           ; BSR set to: 1
 36575  017164  0012               	return		;funcret
 36576  017166                     __end_ofi1___fladd:
 36577                           	opt callstack 0
 36578                           
 36579 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 36580 ;; Defined at:
 36581 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 36582 ;; Parameters:    Size  Location     Type
 36583 ;;		None
 36584 ;; Auto vars:     Size  Location     Type
 36585 ;;		None
 36586 ;; Return value:  Size  Location     Type
 36587 ;;                  1    wreg      void 
 36588 ;; Registers used:
 36589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36590 ;; Tracked objects:
 36591 ;;		On entry : 0/0
 36592 ;;		On exit  : 0/0
 36593 ;;		Unchanged: 0/0
 36594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36597 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36598 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36599 ;;Total ram usage:       12 bytes
 36600 ;; Hardware stack levels used:    1
 36601 ;; Hardware stack levels required when called:    5
 36602 ;; This function calls:
 36603 ;;		Absolute function
 36604 ;;		_ADCC_ThresholdISR
 36605 ;;		_EUSART2_Receive_ISR
 36606 ;;		_INT1_ISR
 36607 ;;		_INT2_ISR
 36608 ;;		_PIN_MANAGER_IOC
 36609 ;;		_TMR0_ISR
 36610 ;;		_TMR1_ISR
 36611 ;; This function is called by:
 36612 ;;		Interrupt level 2
 36613 ;; This function uses a non-reentrant model
 36614 ;;
 36615                           
 36616                           	psect	intcode
 36617  000008                     __pintcode:
 36618                           	opt callstack 0
 36619  000008                     _INTERRUPT_InterruptManagerHigh:
 36620                           	opt callstack 12
 36621                           
 36622                           ; BSR set to: 1
 36623                           ;incstack = 0
 36624  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36625  00000A  EF45  F0CF         	goto	int_func
 36626                           
 36627                           	psect	intcode_body
 36628  019E8A                     __pintcode_body:
 36629                           	opt callstack 12
 36630  019E8A                     int_func:
 36631                           	opt callstack 12
 36632  019E8A  CFFA F0AD          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 36633  019E8E  CFFB F0AE          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 36634  019E92  CFE9 F0AF          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 36635  019E96  CFEA F0B0          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 36636  019E9A  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
 36637  019E9E  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
 36638  019EA2  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+6
 36639  019EA6  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+7
 36640  019EAA  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+8
 36641  019EAE  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+9
 36642  019EB2  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+10
 36643  019EB6  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+11
 36644                           
 36645                           ;interrupt_manager.c: 104: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 36646  019EBA  010E               	movlb	14	; () banked
 36647  019EBC  B1C6               	btfsc	198,0,b	;volatile
 36648                           
 36649                           ; BSR set to: 14
 36650  019EBE  A1CE               	btfss	206,0,b	;volatile
 36651  019EC0  D003               	goto	i2l224
 36652                           
 36653                           ; BSR set to: 14
 36654                           ;interrupt_manager.c: 105: {;interrupt_manager.c: 106: TMR1_ISR();
 36655  019EC2  EC88  F0DC         	call	_TMR1_ISR	;wreg free
 36656                           
 36657                           ;interrupt_manager.c: 107: }
 36658  019EC6  D02D               	goto	i2l233
 36659  019EC8                     i2l224:
 36660                           
 36661                           ; BSR set to: 14
 36662                           ;interrupt_manager.c: 108: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 36663  019EC8  BBC2               	btfsc	194,5,b	;volatile
 36664                           
 36665                           ; BSR set to: 14
 36666  019ECA  ABCA               	btfss	202,5,b	;volatile
 36667  019ECC  D003               	goto	i2l226
 36668                           
 36669                           ; BSR set to: 14
 36670                           ;interrupt_manager.c: 109: {;interrupt_manager.c: 110: TMR0_ISR();
 36671  019ECE  ECDD  F0DD         	call	_TMR0_ISR	;wreg free
 36672                           
 36673                           ;interrupt_manager.c: 111: }
 36674  019ED2  D027               	goto	i2l233
 36675  019ED4                     i2l226:
 36676                           
 36677                           ; BSR set to: 14
 36678                           ;interrupt_manager.c: 112: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 36679  019ED4  BFC5               	btfsc	197,7,b	;volatile
 36680                           
 36681                           ; BSR set to: 14
 36682  019ED6  AFCD               	btfss	205,7,b	;volatile
 36683  019ED8  D00D               	goto	i2l228
 36684                           
 36685                           ; BSR set to: 14
 36686                           ;interrupt_manager.c: 113: {;interrupt_manager.c: 114: EUSART2_RxDefaultInterruptHandler
      +                          ();
 36687  019EDA  D801               	call	i2u2837_48
 36688  019EDC  D022               	goto	i2l233
 36689  019EDE                     i2u2837_48:
 36690  019EDE  0005               	push	
 36691  019EE0  6EFA               	movwf	pclath,c
 36692  019EE2  0101               	movlb	1	; () banked
 36693  019EE4  5183               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 36694  019EE6  6EFD               	movwf	tosl,c
 36695  019EE8  5184               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 36696  019EEA  6EFE               	movwf	tosh,c
 36697  019EEC  5185               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 36698  019EEE  6EFF               	movwf	tosu,c
 36699  019EF0  50FA               	movf	pclath,w,c
 36700  019EF2  0012               	return		;indir
 36701  019EF4                     i2l228:
 36702                           
 36703                           ; BSR set to: 14
 36704                           ;interrupt_manager.c: 116: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 36705  019EF4  B3C3               	btfsc	195,1,b	;volatile
 36706                           
 36707                           ; BSR set to: 14
 36708  019EF6  A3CB               	btfss	203,1,b	;volatile
 36709  019EF8  D003               	goto	i2l230
 36710                           
 36711                           ; BSR set to: 14
 36712                           ;interrupt_manager.c: 117: {;interrupt_manager.c: 118: ADCC_ThresholdISR();
 36713  019EFA  ECF1  F0DD         	call	_ADCC_ThresholdISR	;wreg free
 36714                           
 36715                           ;interrupt_manager.c: 119: }
 36716  019EFE  D011               	goto	i2l233
 36717  019F00                     i2l230:
 36718                           
 36719                           ; BSR set to: 14
 36720                           ;interrupt_manager.c: 120: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 36721  019F00  B9C2               	btfsc	194,4,b	;volatile
 36722                           
 36723                           ; BSR set to: 14
 36724  019F02  A9CA               	btfss	202,4,b	;volatile
 36725  019F04  D003               	goto	i2l232
 36726                           
 36727                           ; BSR set to: 14
 36728                           ;interrupt_manager.c: 121: {;interrupt_manager.c: 122: PIN_MANAGER_IOC();
 36729  019F06  ECBE  F0DF         	call	_PIN_MANAGER_IOC	;wreg free
 36730                           
 36731                           ;interrupt_manager.c: 123: }
 36732  019F0A  D00B               	goto	i2l233
 36733  019F0C                     i2l232:
 36734                           
 36735                           ; BSR set to: 14
 36736                           ;interrupt_manager.c: 124: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 36737  019F0C  B3C2               	btfsc	194,1,b	;volatile
 36738                           
 36739                           ; BSR set to: 14
 36740  019F0E  A3CA               	btfss	202,1,b	;volatile
 36741  019F10  D003               	goto	i2l234
 36742                           
 36743                           ; BSR set to: 14
 36744                           ;interrupt_manager.c: 125: {;interrupt_manager.c: 126: INT1_ISR();
 36745  019F12  ECA4  F0E0         	call	_INT1_ISR	;wreg free
 36746                           
 36747                           ;interrupt_manager.c: 127: }
 36748  019F16  D005               	goto	i2l233
 36749  019F18                     i2l234:
 36750                           
 36751                           ; BSR set to: 14
 36752                           ;interrupt_manager.c: 128: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 36753  019F18  B5C2               	btfsc	194,2,b	;volatile
 36754                           
 36755                           ; BSR set to: 14
 36756  019F1A  A5CA               	btfss	202,2,b	;volatile
 36757  019F1C  D002               	goto	i2l233
 36758                           
 36759                           ; BSR set to: 14
 36760                           ;interrupt_manager.c: 129: {;interrupt_manager.c: 130: INT2_ISR();
 36761  019F1E  EC9F  F0E0         	call	_INT2_ISR	;wreg free
 36762  019F22                     i2l233:
 36763                           
 36764                           ; BSR set to: 14
 36765  019F22  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+11,tablat
 36766  019F26  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptru
 36767  019F2A  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+9,tblptrh
 36768  019F2E  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptrl
 36769  019F32  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+7,prodh
 36770  019F36  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+6,prodl
 36771  019F3A  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
 36772  019F3E  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
 36773  019F42  C0B0  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 36774  019F46  C0AF  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 36775  019F4A  C0AE  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 36776  019F4E  C0AD  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 36777  019F52  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 36778  019F54  0011               	retfie		f
 36779  019F56                     __end_of_INTERRUPT_InterruptManagerHigh:
 36780                           	opt callstack 0
 36781                           
 36782 ;; *************** function _TMR1_ISR *****************
 36783 ;; Defined at:
 36784 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 36785 ;; Parameters:    Size  Location     Type
 36786 ;;		None
 36787 ;; Auto vars:     Size  Location     Type
 36788 ;;		None
 36789 ;; Return value:  Size  Location     Type
 36790 ;;                  1    wreg      void 
 36791 ;; Registers used:
 36792 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 36793 ;; Tracked objects:
 36794 ;;		On entry : 0/0
 36795 ;;		On exit  : 0/0
 36796 ;;		Unchanged: 0/0
 36797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36802 ;;Total ram usage:        0 bytes
 36803 ;; Hardware stack levels used:    1
 36804 ;; Hardware stack levels required when called:    3
 36805 ;; This function calls:
 36806 ;;		Absolute function
 36807 ;;		_QIErrorTimerHandler
 36808 ;;		_TMR1_DefaultInterruptHandler
 36809 ;;		i2_TMR1_WriteTimer
 36810 ;; This function is called by:
 36811 ;;		_INTERRUPT_InterruptManagerHigh
 36812 ;; This function uses a non-reentrant model
 36813 ;;
 36814                           
 36815                           	psect	text148
 36816  01B910                     __ptext148:
 36817                           	opt callstack 0
 36818  01B910                     _TMR1_ISR:
 36819                           	opt callstack 13
 36820                           
 36821                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 36822                           
 36823                           ;incstack = 0
 36824  01B910  010E               	movlb	14	; () banked
 36825  01B912  91CE               	bcf	206,0,b	;volatile
 36826                           
 36827                           ; BSR set to: 14
 36828                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 36829  01B914  C18F  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 36830  01B918  C190  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 36831  01B91C  EC2C  F0DF         	call	i2_TMR1_WriteTimer	;wreg free
 36832                           
 36833                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 36834  01B920  0101               	movlb	1	; () banked
 36835  01B922  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36836  01B924  116F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36837  01B926  1170               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 36838  01B928  B4D8               	btfsc	status,2,c
 36839  01B92A  0012               	return	
 36840                           
 36841                           ; BSR set to: 1
 36842                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 36843  01B92C  D801               	call	i2u1833_48
 36844  01B92E  0012               	return	
 36845  01B930                     i2u1833_48:
 36846  01B930  0005               	push	
 36847  01B932  6EFA               	movwf	pclath,c
 36848  01B934  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36849  01B936  6EFD               	movwf	tosl,c
 36850  01B938  516F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36851  01B93A  6EFE               	movwf	tosh,c
 36852  01B93C  5170               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 36853  01B93E  6EFF               	movwf	tosu,c
 36854  01B940  50FA               	movf	pclath,w,c
 36855  01B942  0012               	return		;indir
 36856  01B944                     __end_of_TMR1_ISR:
 36857                           	opt callstack 0
 36858                           
 36859 ;; *************** function _QIErrorTimerHandler *****************
 36860 ;; Defined at:
 36861 ;;		line 118 in file "NXQ_charge_state.c"
 36862 ;; Parameters:    Size  Location     Type
 36863 ;;		None
 36864 ;; Auto vars:     Size  Location     Type
 36865 ;;		None
 36866 ;; Return value:  Size  Location     Type
 36867 ;;                  1    wreg      void 
 36868 ;; Registers used:
 36869 ;;		wreg, status,2, cstack
 36870 ;; Tracked objects:
 36871 ;;		On entry : 0/0
 36872 ;;		On exit  : 0/0
 36873 ;;		Unchanged: 0/0
 36874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36879 ;;Total ram usage:        0 bytes
 36880 ;; Hardware stack levels used:    1
 36881 ;; Hardware stack levels required when called:    2
 36882 ;; This function calls:
 36883 ;;		i2_TMR1_Reload
 36884 ;;		i2_TMR1_StopTimer
 36885 ;; This function is called by:
 36886 ;;		_main
 36887 ;;		_TMR1_ISR
 36888 ;; This function uses a non-reentrant model
 36889 ;;
 36890                           
 36891                           	psect	text149
 36892  01BF26                     __ptext149:
 36893                           	opt callstack 0
 36894  01BF26                     _QIErrorTimerHandler:
 36895                           	opt callstack 13
 36896                           
 36897                           ;NXQ_charge_state.c: 120: if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0) {
 36898                           
 36899                           ;incstack = 0
 36900  01BF26  B48E               	btfsc	3982,2,c	;volatile
 36901  01BF28  B68E               	btfsc	3982,3,c	;volatile
 36902  01BF2A  D003               	goto	i2l14948
 36903                           
 36904                           ;NXQ_charge_state.c: 122: nxq_charge_state = QI_Error;
 36905  01BF2C  0E03               	movlw	3
 36906  01BF2E  0101               	movlb	1	; () banked
 36907  01BF30  6F95               	movwf	_nxq_charge_state& (0+255),b
 36908  01BF32                     i2l14948:
 36909                           
 36910                           ;NXQ_charge_state.c: 124: };NXQ_charge_state.c: 126: TMR1_StopTimer();
 36911  01BF32  ECC8  F0E0         	call	i2_TMR1_StopTimer	;wreg free
 36912                           
 36913                           ;NXQ_charge_state.c: 127: TMR1_Reload();
 36914  01BF36  EC6F  F0E0         	call	i2_TMR1_Reload	;wreg free
 36915  01BF3A  0012               	return		;funcret
 36916  01BF3C                     __end_of_QIErrorTimerHandler:
 36917                           	opt callstack 0
 36918                           
 36919 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 36920 ;; Defined at:
 36921 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 36922 ;; Parameters:    Size  Location     Type
 36923 ;;		None
 36924 ;; Auto vars:     Size  Location     Type
 36925 ;;		None
 36926 ;; Return value:  Size  Location     Type
 36927 ;;                  1    wreg      void 
 36928 ;; Registers used:
 36929 ;;		None
 36930 ;; Tracked objects:
 36931 ;;		On entry : 0/0
 36932 ;;		On exit  : 0/0
 36933 ;;		Unchanged: 0/0
 36934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36939 ;;Total ram usage:        0 bytes
 36940 ;; Hardware stack levels used:    1
 36941 ;; This function calls:
 36942 ;;		Nothing
 36943 ;; This function is called by:
 36944 ;;		_TMR1_Initialize
 36945 ;;		_TMR1_ISR
 36946 ;; This function uses a non-reentrant model
 36947 ;;
 36948                           
 36949                           	psect	text150
 36950  01C1AC                     __ptext150:
 36951                           	opt callstack 0
 36952  01C1AC                     _TMR1_DefaultInterruptHandler:
 36953                           	opt callstack 15
 36954                           
 36955                           ;incstack = 0
 36956  01C1AC  0012               	return		;funcret
 36957  01C1AE                     __end_of_TMR1_DefaultInterruptHandler:
 36958                           	opt callstack 0
 36959                           
 36960 ;; *************** function i2_TMR1_StopTimer *****************
 36961 ;; Defined at:
 36962 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 36963 ;; Parameters:    Size  Location     Type
 36964 ;;		None
 36965 ;; Auto vars:     Size  Location     Type
 36966 ;;		None
 36967 ;; Return value:  Size  Location     Type
 36968 ;;                  1    wreg      void 
 36969 ;; Registers used:
 36970 ;;		None
 36971 ;; Tracked objects:
 36972 ;;		On entry : 0/0
 36973 ;;		On exit  : 0/0
 36974 ;;		Unchanged: 0/0
 36975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36980 ;;Total ram usage:        0 bytes
 36981 ;; Hardware stack levels used:    1
 36982 ;; This function calls:
 36983 ;;		Nothing
 36984 ;; This function is called by:
 36985 ;;		_QIErrorTimerHandler
 36986 ;; This function uses a non-reentrant model
 36987 ;;
 36988                           
 36989                           	psect	text151
 36990  01C190                     __ptext151:
 36991                           	opt callstack 0
 36992  01C190                     i2_TMR1_StopTimer:
 36993                           	opt callstack 14
 36994                           
 36995                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 36996                           
 36997                           ;incstack = 0
 36998  01C190  90CF               	bcf	4047,0,c	;volatile
 36999  01C192  0012               	return		;funcret
 37000  01C194                     __end_ofi2_TMR1_StopTimer:
 37001                           	opt callstack 0
 37002                           
 37003 ;; *************** function _TMR0_ISR *****************
 37004 ;; Defined at:
 37005 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 37006 ;; Parameters:    Size  Location     Type
 37007 ;;		None
 37008 ;; Auto vars:     Size  Location     Type
 37009 ;;		None
 37010 ;; Return value:  Size  Location     Type
 37011 ;;                  1    wreg      void 
 37012 ;; Registers used:
 37013 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37014 ;; Tracked objects:
 37015 ;;		On entry : 0/0
 37016 ;;		On exit  : 0/0
 37017 ;;		Unchanged: 0/0
 37018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37023 ;;Total ram usage:        0 bytes
 37024 ;; Hardware stack levels used:    1
 37025 ;; Hardware stack levels required when called:    2
 37026 ;; This function calls:
 37027 ;;		Absolute function
 37028 ;;		_TMR0_DefaultInterruptHandler
 37029 ;;		_heartbeatTimerHandler
 37030 ;; This function is called by:
 37031 ;;		_INTERRUPT_InterruptManagerHigh
 37032 ;; This function uses a non-reentrant model
 37033 ;;
 37034                           
 37035                           	psect	text152
 37036  01BBBA                     __ptext152:
 37037                           	opt callstack 0
 37038  01BBBA                     _TMR0_ISR:
 37039                           	opt callstack 14
 37040                           
 37041                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 37042                           
 37043                           ;incstack = 0
 37044  01BBBA  010E               	movlb	14	; () banked
 37045  01BBBC  9BCA               	bcf	202,5,b	;volatile
 37046                           
 37047                           ; BSR set to: 14
 37048                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
 37049  01BBBE  0101               	movlb	1	; () banked
 37050  01BBC0  5177               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37051  01BBC2  1178               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37052  01BBC4  1179               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 37053  01BBC6  B4D8               	btfsc	status,2,c
 37054  01BBC8  0012               	return	
 37055                           
 37056                           ; BSR set to: 1
 37057                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
 37058  01BBCA  D801               	call	i2u2715_48
 37059  01BBCC  0012               	return	
 37060  01BBCE                     i2u2715_48:
 37061  01BBCE  0005               	push	
 37062  01BBD0  6EFA               	movwf	pclath,c
 37063  01BBD2  5177               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37064  01BBD4  6EFD               	movwf	tosl,c
 37065  01BBD6  5178               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37066  01BBD8  6EFE               	movwf	tosh,c
 37067  01BBDA  5179               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 37068  01BBDC  6EFF               	movwf	tosu,c
 37069  01BBDE  50FA               	movf	pclath,w,c
 37070  01BBE0  0012               	return		;indir
 37071  01BBE2                     __end_of_TMR0_ISR:
 37072                           	opt callstack 0
 37073                           
 37074 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37075 ;; Defined at:
 37076 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 37077 ;; Parameters:    Size  Location     Type
 37078 ;;		None
 37079 ;; Auto vars:     Size  Location     Type
 37080 ;;		None
 37081 ;; Return value:  Size  Location     Type
 37082 ;;                  1    wreg      void 
 37083 ;; Registers used:
 37084 ;;		None
 37085 ;; Tracked objects:
 37086 ;;		On entry : 0/0
 37087 ;;		On exit  : 0/0
 37088 ;;		Unchanged: 0/0
 37089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37094 ;;Total ram usage:        0 bytes
 37095 ;; Hardware stack levels used:    1
 37096 ;; This function calls:
 37097 ;;		Nothing
 37098 ;; This function is called by:
 37099 ;;		_TMR0_Initialize
 37100 ;;		_TMR0_ISR
 37101 ;; This function uses a non-reentrant model
 37102 ;;
 37103                           
 37104                           	psect	text153
 37105  01C1AE                     __ptext153:
 37106                           	opt callstack 0
 37107  01C1AE                     _TMR0_DefaultInterruptHandler:
 37108                           	opt callstack 15
 37109                           
 37110                           ;incstack = 0
 37111  01C1AE  0012               	return		;funcret
 37112  01C1B0                     __end_of_TMR0_DefaultInterruptHandler:
 37113                           	opt callstack 0
 37114                           
 37115 ;; *************** function _heartbeatTimerHandler *****************
 37116 ;; Defined at:
 37117 ;;		line 20 in file "heartbeat_timer.c"
 37118 ;; Parameters:    Size  Location     Type
 37119 ;;		None
 37120 ;; Auto vars:     Size  Location     Type
 37121 ;;		None
 37122 ;; Return value:  Size  Location     Type
 37123 ;;                  1    wreg      void 
 37124 ;; Registers used:
 37125 ;;		wreg, status,2, status,0, cstack
 37126 ;; Tracked objects:
 37127 ;;		On entry : 0/0
 37128 ;;		On exit  : 0/0
 37129 ;;		Unchanged: 0/0
 37130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37135 ;;Total ram usage:        1 bytes
 37136 ;; Hardware stack levels used:    1
 37137 ;; Hardware stack levels required when called:    1
 37138 ;; This function calls:
 37139 ;;		i2___llmod
 37140 ;; This function is called by:
 37141 ;;		_main
 37142 ;;		_TMR0_ISR
 37143 ;; This function uses a non-reentrant model
 37144 ;;
 37145                           
 37146                           	psect	text154
 37147  01A4EE                     __ptext154:
 37148                           	opt callstack 0
 37149  01A4EE                     _heartbeatTimerHandler:
 37150                           	opt callstack 14
 37151                           
 37152                           ;heartbeat_timer.c: 23: LATBbits.LATB6 = ~(LATBbits.LATB6);
 37153                           
 37154                           ;incstack = 0
 37155  01A4EE  AC84               	btfss	3972,6,c	;volatile
 37156  01A4F0  D002               	goto	i2u2685_40
 37157  01A4F2  0E01               	movlw	1
 37158  01A4F4  D001               	goto	i2u2685_46
 37159  01A4F6                     i2u2685_40:
 37160  01A4F6  0E00               	movlw	0
 37161  01A4F8                     i2u2685_46:
 37162  01A4F8  0AFF               	xorlw	255
 37163  01A4FA  6E17               	movwf	??_heartbeatTimerHandler& (0+255),c
 37164  01A4FC  3A17               	swapf	??_heartbeatTimerHandler,f,c
 37165  01A4FE  4617               	rlncf	??_heartbeatTimerHandler,f,c
 37166  01A500  4617               	rlncf	??_heartbeatTimerHandler,f,c
 37167  01A502  5084               	movf	3972,w,c	;volatile
 37168  01A504  1817               	xorwf	??_heartbeatTimerHandler,w,c
 37169  01A506  0BBF               	andlw	-65
 37170  01A508  1817               	xorwf	??_heartbeatTimerHandler,w,c
 37171  01A50A  6E84               	movwf	3972,c	;volatile
 37172                           
 37173                           ;heartbeat_timer.c: 26: device_on_time++;
 37174  01A50C  0E01               	movlw	1
 37175  01A50E  0102               	movlb	2	; () banked
 37176  01A510  27AE               	addwf	_device_on_time& (0+255),f,b
 37177  01A512  0E00               	movlw	0
 37178  01A514  23AF               	addwfc	(_device_on_time+1)& (0+255),f,b
 37179  01A516  23B0               	addwfc	(_device_on_time+2)& (0+255),f,b
 37180  01A518  23B1               	addwfc	(_device_on_time+3)& (0+255),f,b
 37181                           
 37182                           ;heartbeat_timer.c: 29: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) QI_charge_time++;
 37183  01A51A  0101               	movlb	1	; () banked
 37184  01A51C  0595               	decf	_nxq_charge_state& (0+255),w,b
 37185  01A51E  B4D8               	btfsc	status,2,c
 37186  01A520  D004               	goto	i2u2687_40
 37187                           
 37188                           ; BSR set to: 1
 37189  01A522  0E02               	movlw	2
 37190  01A524  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 37191  01A526  A4D8               	btfss	status,2,c
 37192  01A528  D008               	goto	i2l20854
 37193  01A52A                     i2u2687_40:
 37194                           
 37195                           ; BSR set to: 1
 37196  01A52A  0E01               	movlw	1
 37197  01A52C  0102               	movlb	2	; () banked
 37198  01A52E  27B2               	addwf	_QI_charge_time& (0+255),f,b
 37199  01A530  0E00               	movlw	0
 37200  01A532  23B3               	addwfc	(_QI_charge_time+1)& (0+255),f,b
 37201  01A534  23B4               	addwfc	(_QI_charge_time+2)& (0+255),f,b
 37202  01A536  23B5               	addwfc	(_QI_charge_time+3)& (0+255),f,b
 37203  01A538  D009               	goto	i2l1705
 37204  01A53A                     i2l20854:
 37205                           
 37206                           ; BSR set to: 1
 37207                           ;heartbeat_timer.c: 30: else QI_charge_time = 0;
 37208  01A53A  0E00               	movlw	0
 37209  01A53C  0102               	movlb	2	; () banked
 37210  01A53E  6FB2               	movwf	_QI_charge_time& (0+255),b
 37211  01A540  0E00               	movlw	0
 37212  01A542  6FB3               	movwf	(_QI_charge_time+1)& (0+255),b
 37213  01A544  0E00               	movlw	0
 37214  01A546  6FB4               	movwf	(_QI_charge_time+2)& (0+255),b
 37215  01A548  0E00               	movlw	0
 37216  01A54A  6FB5               	movwf	(_QI_charge_time+3)& (0+255),b
 37217  01A54C                     i2l1705:
 37218                           
 37219                           ; BSR set to: 2
 37220  01A54C  0004               	clrwdt		;# 
 37221                           
 37222                           ;heartbeat_timer.c: 36: LM73_start_flag = 1;
 37223  01A54E  0E01               	movlw	1
 37224  01A550  0102               	movlb	2	; () banked
 37225  01A552  6FB8               	movwf	_LM73_start_flag& (0+255),b
 37226                           
 37227                           ; BSR set to: 2
 37228                           ;heartbeat_timer.c: 39: if (device_on_time % OLED_update_time == 0) OLED_update_flag = 1
      +                          ;
 37229  01A554  C2AE  F00E         	movff	_device_on_time,i2___llmod@dividend
 37230  01A558  C2AF  F00F         	movff	_device_on_time+1,i2___llmod@dividend+1
 37231  01A55C  C2B0  F010         	movff	_device_on_time+2,i2___llmod@dividend+2
 37232  01A560  C2B1  F011         	movff	_device_on_time+3,i2___llmod@dividend+3
 37233  01A564  51FF               	movf	_OLED_update_time& (0+255),w,b
 37234  01A566  6E12               	movwf	i2___llmod@divisor,c
 37235  01A568  6A13               	clrf	i2___llmod@divisor+1,c
 37236  01A56A  6A14               	clrf	i2___llmod@divisor+2,c
 37237  01A56C  6A15               	clrf	i2___llmod@divisor+3,c
 37238  01A56E  ECBE  F0D6         	call	i2___llmod	;wreg free
 37239  01A572  500E               	movf	?i2___llmod,w,c
 37240  01A574  100F               	iorwf	?i2___llmod+1,w,c
 37241  01A576  1010               	iorwf	?i2___llmod+2,w,c
 37242  01A578  1011               	iorwf	?i2___llmod+3,w,c
 37243  01A57A  A4D8               	btfss	status,2,c
 37244  01A57C  D003               	goto	i2l1706
 37245  01A57E  0E01               	movlw	1
 37246  01A580  0102               	movlb	2	; () banked
 37247  01A582  6FB6               	movwf	_OLED_update_flag& (0+255),b
 37248  01A584                     i2l1706:
 37249                           
 37250                           ;heartbeat_timer.c: 42: freq_meas_start_flag = 1;
 37251  01A584  0E01               	movlw	1
 37252  01A586  0102               	movlb	2	; () banked
 37253  01A588  6FB9               	movwf	_freq_meas_start_flag& (0+255),b
 37254                           
 37255                           ; BSR set to: 2
 37256  01A58A  0012               	return		;funcret
 37257  01A58C                     __end_of_heartbeatTimerHandler:
 37258                           	opt callstack 0
 37259                           
 37260 ;; *************** function _PIN_MANAGER_IOC *****************
 37261 ;; Defined at:
 37262 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 37263 ;; Parameters:    Size  Location     Type
 37264 ;;		None
 37265 ;; Auto vars:     Size  Location     Type
 37266 ;;		None
 37267 ;; Return value:  Size  Location     Type
 37268 ;;                  1    wreg      void 
 37269 ;; Registers used:
 37270 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37271 ;; Tracked objects:
 37272 ;;		On entry : 0/0
 37273 ;;		On exit  : 0/0
 37274 ;;		Unchanged: 0/0
 37275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37280 ;;Total ram usage:        0 bytes
 37281 ;; Hardware stack levels used:    1
 37282 ;; Hardware stack levels required when called:    4
 37283 ;; This function calls:
 37284 ;;		_IOCBF2_ISR
 37285 ;;		_IOCBF3_ISR
 37286 ;; This function is called by:
 37287 ;;		_INTERRUPT_InterruptManagerHigh
 37288 ;; This function uses a non-reentrant model
 37289 ;;
 37290                           
 37291                           	psect	text155
 37292  01BF7C                     __ptext155:
 37293                           	opt callstack 0
 37294  01BF7C                     _PIN_MANAGER_IOC:
 37295                           	opt callstack 12
 37296                           
 37297                           ;pin_manager.c: 146: if(IOCBFbits.IOCBF2 == 1)
 37298                           
 37299                           ; BSR set to: 2
 37300                           ;incstack = 0
 37301  01BF7C  010F               	movlb	15	; () banked
 37302  01BF7E  B512               	btfsc	18,2,b	;volatile
 37303                           
 37304                           ; BSR set to: 15
 37305                           ;pin_manager.c: 147: {;pin_manager.c: 148: IOCBF2_ISR();
 37306  01BF80  EC8C  F0DD         	call	_IOCBF2_ISR	;wreg free
 37307                           
 37308                           ;pin_manager.c: 149: };pin_manager.c: 151: if(IOCBFbits.IOCBF3 == 1)
 37309  01BF84  010F               	movlb	15	; () banked
 37310  01BF86  A712               	btfss	18,3,b	;volatile
 37311  01BF88  0012               	return	
 37312                           
 37313                           ; BSR set to: 15
 37314                           ;pin_manager.c: 152: {;pin_manager.c: 153: IOCBF3_ISR();
 37315  01BF8A  EC77  F0DD         	call	_IOCBF3_ISR	;wreg free
 37316  01BF8E  0012               	return		;funcret
 37317  01BF90                     __end_of_PIN_MANAGER_IOC:
 37318                           	opt callstack 0
 37319                           
 37320 ;; *************** function _IOCBF3_ISR *****************
 37321 ;; Defined at:
 37322 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;		None
 37325 ;; Auto vars:     Size  Location     Type
 37326 ;;		None
 37327 ;; Return value:  Size  Location     Type
 37328 ;;                  1    wreg      void 
 37329 ;; Registers used:
 37330 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37331 ;; Tracked objects:
 37332 ;;		On entry : 0/0
 37333 ;;		On exit  : 0/0
 37334 ;;		Unchanged: 0/0
 37335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37340 ;;Total ram usage:        0 bytes
 37341 ;; Hardware stack levels used:    1
 37342 ;; Hardware stack levels required when called:    3
 37343 ;; This function calls:
 37344 ;;		Absolute function
 37345 ;;		_IOCBF3_DefaultInterruptHandler
 37346 ;;		_QIChargeIOCHandler
 37347 ;; This function is called by:
 37348 ;;		_PIN_MANAGER_IOC
 37349 ;; This function uses a non-reentrant model
 37350 ;;
 37351                           
 37352                           	psect	text156
 37353  01BAEE                     __ptext156:
 37354                           	opt callstack 0
 37355  01BAEE                     _IOCBF3_ISR:
 37356                           	opt callstack 12
 37357                           
 37358                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 37359                           
 37360                           ;incstack = 0
 37361  01BAEE  0101               	movlb	1	; () banked
 37362  01BAF0  517D               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 37363  01BAF2  117E               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 37364  01BAF4  117F               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 37365  01BAF6  B4D8               	btfsc	status,2,c
 37366  01BAF8  D00C               	goto	i2u1775_49
 37367                           
 37368                           ; BSR set to: 1
 37369                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 37370  01BAFA  D801               	call	i2u1775_48
 37371  01BAFC  D00A               	goto	i2u1775_49
 37372  01BAFE                     i2u1775_48:
 37373  01BAFE  0005               	push	
 37374  01BB00  6EFA               	movwf	pclath,c
 37375  01BB02  517D               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 37376  01BB04  6EFD               	movwf	tosl,c
 37377  01BB06  517E               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 37378  01BB08  6EFE               	movwf	tosh,c
 37379  01BB0A  517F               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 37380  01BB0C  6EFF               	movwf	tosu,c
 37381  01BB0E  50FA               	movf	pclath,w,c
 37382  01BB10  0012               	return		;indir
 37383  01BB12                     i2u1775_49:
 37384                           
 37385                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 37386  01BB12  010F               	movlb	15	; () banked
 37387  01BB14  9712               	bcf	18,3,b	;volatile
 37388                           
 37389                           ; BSR set to: 15
 37390  01BB16  0012               	return		;funcret
 37391  01BB18                     __end_of_IOCBF3_ISR:
 37392                           	opt callstack 0
 37393                           
 37394 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 37395 ;; Defined at:
 37396 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 37397 ;; Parameters:    Size  Location     Type
 37398 ;;		None
 37399 ;; Auto vars:     Size  Location     Type
 37400 ;;		None
 37401 ;; Return value:  Size  Location     Type
 37402 ;;                  1    wreg      void 
 37403 ;; Registers used:
 37404 ;;		None
 37405 ;; Tracked objects:
 37406 ;;		On entry : 0/0
 37407 ;;		On exit  : 0/0
 37408 ;;		Unchanged: 0/0
 37409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37414 ;;Total ram usage:        0 bytes
 37415 ;; Hardware stack levels used:    1
 37416 ;; This function calls:
 37417 ;;		Nothing
 37418 ;; This function is called by:
 37419 ;;		_PIN_MANAGER_Initialize
 37420 ;;		_IOCBF3_ISR
 37421 ;; This function uses a non-reentrant model
 37422 ;;
 37423                           
 37424                           	psect	text157
 37425  01C1B0                     __ptext157:
 37426                           	opt callstack 0
 37427  01C1B0                     _IOCBF3_DefaultInterruptHandler:
 37428                           	opt callstack 14
 37429                           
 37430                           ; BSR set to: 15
 37431                           ;incstack = 0
 37432  01C1B0  0012               	return		;funcret
 37433  01C1B2                     __end_of_IOCBF3_DefaultInterruptHandler:
 37434                           	opt callstack 0
 37435                           
 37436 ;; *************** function _QIChargeIOCHandler *****************
 37437 ;; Defined at:
 37438 ;;		line 82 in file "NXQ_charge_state.c"
 37439 ;; Parameters:    Size  Location     Type
 37440 ;;		None
 37441 ;; Auto vars:     Size  Location     Type
 37442 ;;		None
 37443 ;; Return value:  Size  Location     Type
 37444 ;;                  1    wreg      void 
 37445 ;; Registers used:
 37446 ;;		wreg, status,2, cstack
 37447 ;; Tracked objects:
 37448 ;;		On entry : 0/0
 37449 ;;		On exit  : 0/0
 37450 ;;		Unchanged: 0/0
 37451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37456 ;;Total ram usage:        0 bytes
 37457 ;; Hardware stack levels used:    1
 37458 ;; Hardware stack levels required when called:    2
 37459 ;; This function calls:
 37460 ;;		_TMR3_StartTimer
 37461 ;;		i2_TMR1_Reload
 37462 ;;		i2_TMR3_Reload
 37463 ;; This function is called by:
 37464 ;;		_main
 37465 ;;		_IOCBF3_ISR
 37466 ;; This function uses a non-reentrant model
 37467 ;;
 37468                           
 37469                           	psect	text158
 37470  01BE3C                     __ptext158:
 37471                           	opt callstack 0
 37472  01BE3C                     _QIChargeIOCHandler:
 37473                           	opt callstack 12
 37474                           
 37475                           ;NXQ_charge_state.c: 84: if (IOCBNbits.IOCBN3 && PORTBbits.RB2 == 1) {
 37476                           
 37477                           ;incstack = 0
 37478  01BE3C  010F               	movlb	15	; () banked
 37479  01BE3E  B713               	btfsc	19,3,b	;volatile
 37480                           
 37481                           ; BSR set to: 15
 37482  01BE40  A48E               	btfss	3982,2,c	;volatile
 37483  01BE42  D003               	goto	i2l13662
 37484                           
 37485                           ; BSR set to: 15
 37486                           ;NXQ_charge_state.c: 86: nxq_charge_state = QI_Charging;
 37487  01BE44  0E01               	movlw	1
 37488  01BE46  0101               	movlb	1	; () banked
 37489  01BE48  6F95               	movwf	_nxq_charge_state& (0+255),b
 37490  01BE4A                     i2l13662:
 37491                           
 37492                           ;NXQ_charge_state.c: 88: };NXQ_charge_state.c: 90: TMR3_Reload();
 37493  01BE4A  EC76  F0E0         	call	i2_TMR3_Reload	;wreg free
 37494                           
 37495                           ;NXQ_charge_state.c: 91: TMR3_StartTimer();
 37496  01BE4E  ECCA  F0E0         	call	_TMR3_StartTimer	;wreg free
 37497                           
 37498                           ;NXQ_charge_state.c: 93: TMR1_Reload();
 37499  01BE52  EC6F  F0E0         	call	i2_TMR1_Reload	;wreg free
 37500  01BE56  0012               	return		;funcret
 37501  01BE58                     __end_of_QIChargeIOCHandler:
 37502                           	opt callstack 0
 37503                           
 37504 ;; *************** function i2_TMR1_Reload *****************
 37505 ;; Defined at:
 37506 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 37507 ;; Parameters:    Size  Location     Type
 37508 ;;		None
 37509 ;; Auto vars:     Size  Location     Type
 37510 ;;		None
 37511 ;; Return value:  Size  Location     Type
 37512 ;;                  1    wreg      void 
 37513 ;; Registers used:
 37514 ;;		wreg, status,2, cstack
 37515 ;; Tracked objects:
 37516 ;;		On entry : 0/0
 37517 ;;		On exit  : 0/0
 37518 ;;		Unchanged: 0/0
 37519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37524 ;;Total ram usage:        0 bytes
 37525 ;; Hardware stack levels used:    1
 37526 ;; Hardware stack levels required when called:    1
 37527 ;; This function calls:
 37528 ;;		i2_TMR1_WriteTimer
 37529 ;; This function is called by:
 37530 ;;		_QIChargeIOCHandler
 37531 ;;		_QIErrorTimerHandler
 37532 ;; This function uses a non-reentrant model
 37533 ;;
 37534                           
 37535                           	psect	text159
 37536  01C0DE                     __ptext159:
 37537                           	opt callstack 0
 37538  01C0DE                     i2_TMR1_Reload:
 37539                           	opt callstack 13
 37540                           
 37541                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 37542                           
 37543                           ;incstack = 0
 37544  01C0DE  C18F  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 37545  01C0E2  C190  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 37546  01C0E6  EC2C  F0DF         	call	i2_TMR1_WriteTimer	;wreg free
 37547  01C0EA  0012               	return		;funcret
 37548  01C0EC                     __end_ofi2_TMR1_Reload:
 37549                           	opt callstack 0
 37550                           
 37551 ;; *************** function i2_TMR1_WriteTimer *****************
 37552 ;; Defined at:
 37553 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 37554 ;; Parameters:    Size  Location     Type
 37555 ;;  timerVal        2    0[COMRAM] unsigned int 
 37556 ;; Auto vars:     Size  Location     Type
 37557 ;;		None
 37558 ;; Return value:  Size  Location     Type
 37559 ;;                  1    wreg      void 
 37560 ;; Registers used:
 37561 ;;		wreg, status,2
 37562 ;; Tracked objects:
 37563 ;;		On entry : 0/0
 37564 ;;		On exit  : 0/0
 37565 ;;		Unchanged: 0/0
 37566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37571 ;;Total ram usage:        2 bytes
 37572 ;; Hardware stack levels used:    1
 37573 ;; This function calls:
 37574 ;;		Nothing
 37575 ;; This function is called by:
 37576 ;;		_TMR1_ISR
 37577 ;;		i2_TMR1_Reload
 37578 ;; This function uses a non-reentrant model
 37579 ;;
 37580                           
 37581                           	psect	text160
 37582  01BE58                     __ptext160:
 37583                           	opt callstack 0
 37584  01BE58                     i2_TMR1_WriteTimer:
 37585                           	opt callstack 15
 37586                           
 37587                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 37588                           
 37589                           ;incstack = 0
 37590  01BE58  A4CF               	btfss	4047,2,c	;volatile
 37591  01BE5A  D007               	goto	i2l11810
 37592                           
 37593                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 37594  01BE5C  90CF               	bcf	4047,0,c	;volatile
 37595                           
 37596                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 37597  01BE5E  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 37598  01BE60  6ECE               	movwf	4046,c	;volatile
 37599                           
 37600                           ;tmr1.c: 136: TMR1L = timerVal;
 37601  01BE62  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 37602                           
 37603                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 37604  01BE66  80CF               	bsf	4047,0,c	;volatile
 37605                           
 37606                           ;tmr1.c: 140: }
 37607  01BE68  0012               	return	
 37608  01BE6A                     i2l11810:
 37609                           
 37610                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 37611  01BE6A  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 37612  01BE6C  6ECE               	movwf	4046,c	;volatile
 37613                           
 37614                           ;tmr1.c: 145: TMR1L = timerVal;
 37615  01BE6E  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 37616  01BE72  0012               	return		;funcret
 37617  01BE74                     __end_ofi2_TMR1_WriteTimer:
 37618                           	opt callstack 0
 37619                           
 37620 ;; *************** function _IOCBF2_ISR *****************
 37621 ;; Defined at:
 37622 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 37623 ;; Parameters:    Size  Location     Type
 37624 ;;		None
 37625 ;; Auto vars:     Size  Location     Type
 37626 ;;		None
 37627 ;; Return value:  Size  Location     Type
 37628 ;;                  1    wreg      void 
 37629 ;; Registers used:
 37630 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37631 ;; Tracked objects:
 37632 ;;		On entry : 0/0
 37633 ;;		On exit  : 0/0
 37634 ;;		Unchanged: 0/0
 37635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37640 ;;Total ram usage:        0 bytes
 37641 ;; Hardware stack levels used:    1
 37642 ;; Hardware stack levels required when called:    3
 37643 ;; This function calls:
 37644 ;;		Absolute function
 37645 ;;		_IOCBF2_DefaultInterruptHandler
 37646 ;;		_QIIdleIOCHandler
 37647 ;; This function is called by:
 37648 ;;		_PIN_MANAGER_IOC
 37649 ;; This function uses a non-reentrant model
 37650 ;;
 37651                           
 37652                           	psect	text161
 37653  01BB18                     __ptext161:
 37654                           	opt callstack 0
 37655  01BB18                     _IOCBF2_ISR:
 37656                           	opt callstack 12
 37657                           
 37658                           ;pin_manager.c: 165: if(IOCBF2_InterruptHandler)
 37659                           
 37660                           ;incstack = 0
 37661  01BB18  0101               	movlb	1	; () banked
 37662  01BB1A  5180               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 37663  01BB1C  1181               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 37664  01BB1E  1182               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 37665  01BB20  B4D8               	btfsc	status,2,c
 37666  01BB22  D00C               	goto	i2u1773_49
 37667                           
 37668                           ; BSR set to: 1
 37669                           ;pin_manager.c: 166: {;pin_manager.c: 167: IOCBF2_InterruptHandler();
 37670  01BB24  D801               	call	i2u1773_48
 37671  01BB26  D00A               	goto	i2u1773_49
 37672  01BB28                     i2u1773_48:
 37673  01BB28  0005               	push	
 37674  01BB2A  6EFA               	movwf	pclath,c
 37675  01BB2C  5180               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 37676  01BB2E  6EFD               	movwf	tosl,c
 37677  01BB30  5181               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 37678  01BB32  6EFE               	movwf	tosh,c
 37679  01BB34  5182               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 37680  01BB36  6EFF               	movwf	tosu,c
 37681  01BB38  50FA               	movf	pclath,w,c
 37682  01BB3A  0012               	return		;indir
 37683  01BB3C                     i2u1773_49:
 37684                           
 37685                           ;pin_manager.c: 168: };pin_manager.c: 169: IOCBFbits.IOCBF2 = 0;
 37686  01BB3C  010F               	movlb	15	; () banked
 37687  01BB3E  9512               	bcf	18,2,b	;volatile
 37688                           
 37689                           ; BSR set to: 15
 37690  01BB40  0012               	return		;funcret
 37691  01BB42                     __end_of_IOCBF2_ISR:
 37692                           	opt callstack 0
 37693                           
 37694 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 37695 ;; Defined at:
 37696 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 37697 ;; Parameters:    Size  Location     Type
 37698 ;;		None
 37699 ;; Auto vars:     Size  Location     Type
 37700 ;;		None
 37701 ;; Return value:  Size  Location     Type
 37702 ;;                  1    wreg      void 
 37703 ;; Registers used:
 37704 ;;		None
 37705 ;; Tracked objects:
 37706 ;;		On entry : 0/0
 37707 ;;		On exit  : 0/0
 37708 ;;		Unchanged: 0/0
 37709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37714 ;;Total ram usage:        0 bytes
 37715 ;; Hardware stack levels used:    1
 37716 ;; This function calls:
 37717 ;;		Nothing
 37718 ;; This function is called by:
 37719 ;;		_PIN_MANAGER_Initialize
 37720 ;;		_IOCBF2_ISR
 37721 ;; This function uses a non-reentrant model
 37722 ;;
 37723                           
 37724                           	psect	text162
 37725  01C1B2                     __ptext162:
 37726                           	opt callstack 0
 37727  01C1B2                     _IOCBF2_DefaultInterruptHandler:
 37728                           	opt callstack 14
 37729                           
 37730                           ; BSR set to: 15
 37731                           ;incstack = 0
 37732  01C1B2  0012               	return		;funcret
 37733  01C1B4                     __end_of_IOCBF2_DefaultInterruptHandler:
 37734                           	opt callstack 0
 37735                           
 37736 ;; *************** function _QIIdleIOCHandler *****************
 37737 ;; Defined at:
 37738 ;;		line 67 in file "NXQ_charge_state.c"
 37739 ;; Parameters:    Size  Location     Type
 37740 ;;		None
 37741 ;; Auto vars:     Size  Location     Type
 37742 ;;		None
 37743 ;; Return value:  Size  Location     Type
 37744 ;;                  1    wreg      void 
 37745 ;; Registers used:
 37746 ;;		wreg, status,2, cstack
 37747 ;; Tracked objects:
 37748 ;;		On entry : 0/0
 37749 ;;		On exit  : 0/0
 37750 ;;		Unchanged: 0/0
 37751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37756 ;;Total ram usage:        0 bytes
 37757 ;; Hardware stack levels used:    1
 37758 ;; Hardware stack levels required when called:    2
 37759 ;; This function calls:
 37760 ;;		_TMR1_StartTimer
 37761 ;;		_TMR3_StartTimer
 37762 ;;		i2_TMR3_Reload
 37763 ;; This function is called by:
 37764 ;;		_main
 37765 ;;		_IOCBF2_ISR
 37766 ;; This function uses a non-reentrant model
 37767 ;;
 37768                           
 37769                           	psect	text163
 37770  01BF90                     __ptext163:
 37771                           	opt callstack 0
 37772  01BF90                     _QIIdleIOCHandler:
 37773                           	opt callstack 12
 37774                           
 37775                           ;NXQ_charge_state.c: 69: if (IOCBNbits.IOCBN2 == 1) {
 37776                           
 37777                           ;incstack = 0
 37778  01BF90  010F               	movlb	15	; () banked
 37779  01BF92  A513               	btfss	19,2,b	;volatile
 37780  01BF94  0012               	return	
 37781                           
 37782                           ; BSR set to: 15
 37783                           ;NXQ_charge_state.c: 71: TMR3_Reload();
 37784  01BF96  EC76  F0E0         	call	i2_TMR3_Reload	;wreg free
 37785                           
 37786                           ;NXQ_charge_state.c: 72: TMR3_StartTimer();
 37787  01BF9A  ECCA  F0E0         	call	_TMR3_StartTimer	;wreg free
 37788                           
 37789                           ;NXQ_charge_state.c: 75: TMR1_StartTimer();
 37790  01BF9E  ECCC  F0E0         	call	_TMR1_StartTimer	;wreg free
 37791  01BFA2  0012               	return		;funcret
 37792  01BFA4                     __end_of_QIIdleIOCHandler:
 37793                           	opt callstack 0
 37794                           
 37795 ;; *************** function i2_TMR3_Reload *****************
 37796 ;; Defined at:
 37797 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 37798 ;; Parameters:    Size  Location     Type
 37799 ;;		None
 37800 ;; Auto vars:     Size  Location     Type
 37801 ;;		None
 37802 ;; Return value:  Size  Location     Type
 37803 ;;                  1    wreg      void 
 37804 ;; Registers used:
 37805 ;;		wreg, status,2, cstack
 37806 ;; Tracked objects:
 37807 ;;		On entry : 0/0
 37808 ;;		On exit  : 0/0
 37809 ;;		Unchanged: 0/0
 37810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37815 ;;Total ram usage:        0 bytes
 37816 ;; Hardware stack levels used:    1
 37817 ;; Hardware stack levels required when called:    1
 37818 ;; This function calls:
 37819 ;;		i2_TMR3_WriteTimer
 37820 ;; This function is called by:
 37821 ;;		_QIIdleIOCHandler
 37822 ;;		_QIChargeIOCHandler
 37823 ;; This function uses a non-reentrant model
 37824 ;;
 37825                           
 37826                           	psect	text164
 37827  01C0EC                     __ptext164:
 37828                           	opt callstack 0
 37829  01C0EC                     i2_TMR3_Reload:
 37830                           	opt callstack 12
 37831                           
 37832                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 37833                           
 37834                           ;incstack = 0
 37835  01C0EC  C193  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 37836  01C0F0  C194  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 37837  01C0F4  EC3A  F0DF         	call	i2_TMR3_WriteTimer	;wreg free
 37838  01C0F8  0012               	return		;funcret
 37839  01C0FA                     __end_ofi2_TMR3_Reload:
 37840                           	opt callstack 0
 37841                           
 37842 ;; *************** function i2_TMR3_WriteTimer *****************
 37843 ;; Defined at:
 37844 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 37845 ;; Parameters:    Size  Location     Type
 37846 ;;  timerVal        2    0[COMRAM] unsigned int 
 37847 ;; Auto vars:     Size  Location     Type
 37848 ;;		None
 37849 ;; Return value:  Size  Location     Type
 37850 ;;                  1    wreg      void 
 37851 ;; Registers used:
 37852 ;;		wreg, status,2
 37853 ;; Tracked objects:
 37854 ;;		On entry : 0/0
 37855 ;;		On exit  : 0/0
 37856 ;;		Unchanged: 0/0
 37857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37862 ;;Total ram usage:        2 bytes
 37863 ;; Hardware stack levels used:    1
 37864 ;; This function calls:
 37865 ;;		Nothing
 37866 ;; This function is called by:
 37867 ;;		i2_TMR3_Reload
 37868 ;; This function uses a non-reentrant model
 37869 ;;
 37870                           
 37871                           	psect	text165
 37872  01BE74                     __ptext165:
 37873                           	opt callstack 0
 37874  01BE74                     i2_TMR3_WriteTimer:
 37875                           	opt callstack 12
 37876                           
 37877                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 37878                           
 37879                           ;incstack = 0
 37880  01BE74  A4C9               	btfss	4041,2,c	;volatile
 37881  01BE76  D007               	goto	i2l11796
 37882                           
 37883                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 37884  01BE78  90C9               	bcf	4041,0,c	;volatile
 37885                           
 37886                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 37887  01BE7A  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 37888  01BE7C  6EC8               	movwf	4040,c	;volatile
 37889                           
 37890                           ;tmr3.c: 136: TMR3L = timerVal;
 37891  01BE7E  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 37892                           
 37893                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 37894  01BE82  80C9               	bsf	4041,0,c	;volatile
 37895                           
 37896                           ;tmr3.c: 140: }
 37897  01BE84  0012               	return	
 37898  01BE86                     i2l11796:
 37899                           
 37900                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 37901  01BE86  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 37902  01BE88  6EC8               	movwf	4040,c	;volatile
 37903                           
 37904                           ;tmr3.c: 145: TMR3L = timerVal;
 37905  01BE8A  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 37906  01BE8E  0012               	return		;funcret
 37907  01BE90                     __end_ofi2_TMR3_WriteTimer:
 37908                           	opt callstack 0
 37909                           
 37910 ;; *************** function _TMR3_StartTimer *****************
 37911 ;; Defined at:
 37912 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 37913 ;; Parameters:    Size  Location     Type
 37914 ;;		None
 37915 ;; Auto vars:     Size  Location     Type
 37916 ;;		None
 37917 ;; Return value:  Size  Location     Type
 37918 ;;                  1    wreg      void 
 37919 ;; Registers used:
 37920 ;;		None
 37921 ;; Tracked objects:
 37922 ;;		On entry : 0/0
 37923 ;;		On exit  : 0/0
 37924 ;;		Unchanged: 0/0
 37925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37930 ;;Total ram usage:        0 bytes
 37931 ;; Hardware stack levels used:    1
 37932 ;; This function calls:
 37933 ;;		Nothing
 37934 ;; This function is called by:
 37935 ;;		_QIIdleIOCHandler
 37936 ;;		_QIChargeIOCHandler
 37937 ;; This function uses a non-reentrant model
 37938 ;;
 37939                           
 37940                           	psect	text166
 37941  01C194                     __ptext166:
 37942                           	opt callstack 0
 37943  01C194                     _TMR3_StartTimer:
 37944                           	opt callstack 13
 37945                           
 37946                           ;tmr3.c: 102: T3CONbits.TMR3ON = 1;
 37947                           
 37948                           ;incstack = 0
 37949  01C194  80C9               	bsf	4041,0,c	;volatile
 37950  01C196  0012               	return		;funcret
 37951  01C198                     __end_of_TMR3_StartTimer:
 37952                           	opt callstack 0
 37953                           
 37954 ;; *************** function _TMR1_StartTimer *****************
 37955 ;; Defined at:
 37956 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 37957 ;; Parameters:    Size  Location     Type
 37958 ;;		None
 37959 ;; Auto vars:     Size  Location     Type
 37960 ;;		None
 37961 ;; Return value:  Size  Location     Type
 37962 ;;                  1    wreg      void 
 37963 ;; Registers used:
 37964 ;;		None
 37965 ;; Tracked objects:
 37966 ;;		On entry : 0/0
 37967 ;;		On exit  : 0/0
 37968 ;;		Unchanged: 0/0
 37969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37974 ;;Total ram usage:        0 bytes
 37975 ;; Hardware stack levels used:    1
 37976 ;; This function calls:
 37977 ;;		Nothing
 37978 ;; This function is called by:
 37979 ;;		_QIIdleIOCHandler
 37980 ;; This function uses a non-reentrant model
 37981 ;;
 37982                           
 37983                           	psect	text167
 37984  01C198                     __ptext167:
 37985                           	opt callstack 0
 37986  01C198                     _TMR1_StartTimer:
 37987                           	opt callstack 13
 37988                           
 37989                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 37990                           
 37991                           ;incstack = 0
 37992  01C198  80CF               	bsf	4047,0,c	;volatile
 37993  01C19A  0012               	return		;funcret
 37994  01C19C                     __end_of_TMR1_StartTimer:
 37995                           	opt callstack 0
 37996                           
 37997 ;; *************** function _INT2_ISR *****************
 37998 ;; Defined at:
 37999 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 38000 ;; Parameters:    Size  Location     Type
 38001 ;;		None
 38002 ;; Auto vars:     Size  Location     Type
 38003 ;;		None
 38004 ;; Return value:  Size  Location     Type
 38005 ;;                  1    wreg      void 
 38006 ;; Registers used:
 38007 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38008 ;; Tracked objects:
 38009 ;;		On entry : 0/0
 38010 ;;		On exit  : 0/0
 38011 ;;		Unchanged: 0/0
 38012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38017 ;;Total ram usage:        0 bytes
 38018 ;; Hardware stack levels used:    1
 38019 ;; Hardware stack levels required when called:    2
 38020 ;; This function calls:
 38021 ;;		_INT2_CallBack
 38022 ;; This function is called by:
 38023 ;;		_INTERRUPT_InterruptManagerHigh
 38024 ;; This function uses a non-reentrant model
 38025 ;;
 38026                           
 38027                           	psect	text168
 38028  01C13E                     __ptext168:
 38029                           	opt callstack 0
 38030  01C13E                     _INT2_ISR:
 38031                           	opt callstack 14
 38032                           
 38033                           ;ext_int.c: 61: (PIR0bits.INT2IF = 0);
 38034                           
 38035                           ;incstack = 0
 38036  01C13E  010E               	movlb	14	; () banked
 38037  01C140  95CA               	bcf	202,2,b	;volatile
 38038                           
 38039                           ; BSR set to: 14
 38040                           ;ext_int.c: 64: INT2_CallBack();
 38041  01C142  EC3D  F0DE         	call	_INT2_CallBack	;wreg free
 38042  01C146  0012               	return		;funcret
 38043  01C148                     __end_of_INT2_ISR:
 38044                           	opt callstack 0
 38045                           
 38046 ;; *************** function _INT2_CallBack *****************
 38047 ;; Defined at:
 38048 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 38049 ;; Parameters:    Size  Location     Type
 38050 ;;		None
 38051 ;; Auto vars:     Size  Location     Type
 38052 ;;		None
 38053 ;; Return value:  Size  Location     Type
 38054 ;;                  1    wreg      void 
 38055 ;; Registers used:
 38056 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38057 ;; Tracked objects:
 38058 ;;		On entry : 0/0
 38059 ;;		On exit  : 0/0
 38060 ;;		Unchanged: 0/0
 38061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38066 ;;Total ram usage:        0 bytes
 38067 ;; Hardware stack levels used:    1
 38068 ;; Hardware stack levels required when called:    1
 38069 ;; This function calls:
 38070 ;;		Absolute function
 38071 ;;		_INT2_DefaultInterruptHandler
 38072 ;;		_rightCapTouchHandler
 38073 ;; This function is called by:
 38074 ;;		_INT2_ISR
 38075 ;; This function uses a non-reentrant model
 38076 ;;
 38077                           
 38078                           	psect	text169
 38079  01BC7A                     __ptext169:
 38080                           	opt callstack 0
 38081  01BC7A                     _INT2_CallBack:
 38082                           	opt callstack 14
 38083                           
 38084                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 38085                           
 38086                           ;incstack = 0
 38087  01BC7A  0101               	movlb	1	; () banked
 38088  01BC7C  5189               	movf	_INT2_InterruptHandler& (0+255),w,b
 38089  01BC7E  118A               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 38090  01BC80  118B               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 38091  01BC82  B4D8               	btfsc	status,2,c
 38092  01BC84  0012               	return	
 38093                           
 38094                           ; BSR set to: 1
 38095                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 38096  01BC86  D801               	call	i2u1769_48
 38097  01BC88  0012               	return	
 38098  01BC8A                     i2u1769_48:
 38099  01BC8A  0005               	push	
 38100  01BC8C  6EFA               	movwf	pclath,c
 38101  01BC8E  5189               	movf	_INT2_InterruptHandler& (0+255),w,b
 38102  01BC90  6EFD               	movwf	tosl,c
 38103  01BC92  518A               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 38104  01BC94  6EFE               	movwf	tosh,c
 38105  01BC96  518B               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 38106  01BC98  6EFF               	movwf	tosu,c
 38107  01BC9A  50FA               	movf	pclath,w,c
 38108  01BC9C  0012               	return		;indir
 38109  01BC9E                     __end_of_INT2_CallBack:
 38110                           	opt callstack 0
 38111                           
 38112 ;; *************** function _INT2_DefaultInterruptHandler *****************
 38113 ;; Defined at:
 38114 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 38115 ;; Parameters:    Size  Location     Type
 38116 ;;		None
 38117 ;; Auto vars:     Size  Location     Type
 38118 ;;		None
 38119 ;; Return value:  Size  Location     Type
 38120 ;;                  1    wreg      void 
 38121 ;; Registers used:
 38122 ;;		None
 38123 ;; Tracked objects:
 38124 ;;		On entry : 0/0
 38125 ;;		On exit  : 0/0
 38126 ;;		Unchanged: 0/0
 38127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38132 ;;Total ram usage:        0 bytes
 38133 ;; Hardware stack levels used:    1
 38134 ;; This function calls:
 38135 ;;		Nothing
 38136 ;; This function is called by:
 38137 ;;		_EXT_INT_Initialize
 38138 ;;		_INT2_CallBack
 38139 ;; This function uses a non-reentrant model
 38140 ;;
 38141                           
 38142                           	psect	text170
 38143  01C1B4                     __ptext170:
 38144                           	opt callstack 0
 38145  01C1B4                     _INT2_DefaultInterruptHandler:
 38146                           	opt callstack 14
 38147                           
 38148                           ;incstack = 0
 38149  01C1B4  0012               	return		;funcret
 38150  01C1B6                     __end_of_INT2_DefaultInterruptHandler:
 38151                           	opt callstack 0
 38152                           
 38153 ;; *************** function _rightCapTouchHandler *****************
 38154 ;; Defined at:
 38155 ;;		line 20 in file "cap_touch_int.c"
 38156 ;; Parameters:    Size  Location     Type
 38157 ;;		None
 38158 ;; Auto vars:     Size  Location     Type
 38159 ;;		None
 38160 ;; Return value:  Size  Location     Type
 38161 ;;                  1    wreg      void 
 38162 ;; Registers used:
 38163 ;;		wreg, status,2, status,0
 38164 ;; Tracked objects:
 38165 ;;		On entry : 0/0
 38166 ;;		On exit  : 0/0
 38167 ;;		Unchanged: 0/0
 38168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38173 ;;Total ram usage:        0 bytes
 38174 ;; Hardware stack levels used:    1
 38175 ;; This function calls:
 38176 ;;		Nothing
 38177 ;; This function is called by:
 38178 ;;		_main
 38179 ;;		_INT2_CallBack
 38180 ;; This function uses a non-reentrant model
 38181 ;;
 38182                           
 38183                           	psect	text171
 38184  01BF3C                     __ptext171:
 38185                           	opt callstack 0
 38186  01BF3C                     _rightCapTouchHandler:
 38187                           	opt callstack 14
 38188                           
 38189                           ;cap_touch_int.c: 22: OLED_Frame++;
 38190                           
 38191                           ;incstack = 0
 38192  01BF3C  0102               	movlb	2	; () banked
 38193  01BF3E  2BB7               	incf	_OLED_Frame& (0+255),f,b
 38194                           
 38195                           ; BSR set to: 2
 38196                           ;cap_touch_int.c: 23: if (OLED_Frame == 23 + 1) OLED_Frame = 4;
 38197  01BF40  0E18               	movlw	24
 38198  01BF42  19B7               	xorwf	_OLED_Frame& (0+255),w,b
 38199  01BF44  A4D8               	btfss	status,2,c
 38200  01BF46  D002               	goto	i2l1554
 38201                           
 38202                           ; BSR set to: 2
 38203  01BF48  0E04               	movlw	4
 38204  01BF4A  6FB7               	movwf	_OLED_Frame& (0+255),b
 38205  01BF4C                     i2l1554:
 38206                           
 38207                           ; BSR set to: 2
 38208                           ;cap_touch_int.c: 24: OLED_update_flag = 1;
 38209  01BF4C  0E01               	movlw	1
 38210  01BF4E  6FB6               	movwf	_OLED_update_flag& (0+255),b
 38211                           
 38212                           ; BSR set to: 2
 38213  01BF50  0012               	return		;funcret
 38214  01BF52                     __end_of_rightCapTouchHandler:
 38215                           	opt callstack 0
 38216                           
 38217 ;; *************** function _INT1_ISR *****************
 38218 ;; Defined at:
 38219 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 38220 ;; Parameters:    Size  Location     Type
 38221 ;;		None
 38222 ;; Auto vars:     Size  Location     Type
 38223 ;;		None
 38224 ;; Return value:  Size  Location     Type
 38225 ;;                  1    wreg      void 
 38226 ;; Registers used:
 38227 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38228 ;; Tracked objects:
 38229 ;;		On entry : 0/0
 38230 ;;		On exit  : 0/0
 38231 ;;		Unchanged: 0/0
 38232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38237 ;;Total ram usage:        0 bytes
 38238 ;; Hardware stack levels used:    1
 38239 ;; Hardware stack levels required when called:    2
 38240 ;; This function calls:
 38241 ;;		_INT1_CallBack
 38242 ;; This function is called by:
 38243 ;;		_INTERRUPT_InterruptManagerHigh
 38244 ;; This function uses a non-reentrant model
 38245 ;;
 38246                           
 38247                           	psect	text172
 38248  01C148                     __ptext172:
 38249                           	opt callstack 0
 38250  01C148                     _INT1_ISR:
 38251                           	opt callstack 14
 38252                           
 38253                           ;ext_int.c: 35: (PIR0bits.INT1IF = 0);
 38254                           
 38255                           ; BSR set to: 2
 38256                           ;incstack = 0
 38257  01C148  010E               	movlb	14	; () banked
 38258  01C14A  93CA               	bcf	202,1,b	;volatile
 38259                           
 38260                           ; BSR set to: 14
 38261                           ;ext_int.c: 38: INT1_CallBack();
 38262  01C14C  EC4F  F0DE         	call	_INT1_CallBack	;wreg free
 38263  01C150  0012               	return		;funcret
 38264  01C152                     __end_of_INT1_ISR:
 38265                           	opt callstack 0
 38266                           
 38267 ;; *************** function _INT1_CallBack *****************
 38268 ;; Defined at:
 38269 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 38270 ;; Parameters:    Size  Location     Type
 38271 ;;		None
 38272 ;; Auto vars:     Size  Location     Type
 38273 ;;		None
 38274 ;; Return value:  Size  Location     Type
 38275 ;;                  1    wreg      void 
 38276 ;; Registers used:
 38277 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38278 ;; Tracked objects:
 38279 ;;		On entry : 0/0
 38280 ;;		On exit  : 0/0
 38281 ;;		Unchanged: 0/0
 38282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38287 ;;Total ram usage:        0 bytes
 38288 ;; Hardware stack levels used:    1
 38289 ;; Hardware stack levels required when called:    1
 38290 ;; This function calls:
 38291 ;;		Absolute function
 38292 ;;		_INT1_DefaultInterruptHandler
 38293 ;;		_leftCapTouchHandler
 38294 ;; This function is called by:
 38295 ;;		_INT1_ISR
 38296 ;; This function uses a non-reentrant model
 38297 ;;
 38298                           
 38299                           	psect	text173
 38300  01BC9E                     __ptext173:
 38301                           	opt callstack 0
 38302  01BC9E                     _INT1_CallBack:
 38303                           	opt callstack 14
 38304                           
 38305                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 38306                           
 38307                           ;incstack = 0
 38308  01BC9E  0101               	movlb	1	; () banked
 38309  01BCA0  518C               	movf	_INT1_InterruptHandler& (0+255),w,b
 38310  01BCA2  118D               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 38311  01BCA4  118E               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 38312  01BCA6  B4D8               	btfsc	status,2,c
 38313  01BCA8  0012               	return	
 38314                           
 38315                           ; BSR set to: 1
 38316                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 38317  01BCAA  D801               	call	i2u1767_48
 38318  01BCAC  0012               	return	
 38319  01BCAE                     i2u1767_48:
 38320  01BCAE  0005               	push	
 38321  01BCB0  6EFA               	movwf	pclath,c
 38322  01BCB2  518C               	movf	_INT1_InterruptHandler& (0+255),w,b
 38323  01BCB4  6EFD               	movwf	tosl,c
 38324  01BCB6  518D               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 38325  01BCB8  6EFE               	movwf	tosh,c
 38326  01BCBA  518E               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 38327  01BCBC  6EFF               	movwf	tosu,c
 38328  01BCBE  50FA               	movf	pclath,w,c
 38329  01BCC0  0012               	return		;indir
 38330  01BCC2                     __end_of_INT1_CallBack:
 38331                           	opt callstack 0
 38332                           
 38333 ;; *************** function _INT1_DefaultInterruptHandler *****************
 38334 ;; Defined at:
 38335 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 38336 ;; Parameters:    Size  Location     Type
 38337 ;;		None
 38338 ;; Auto vars:     Size  Location     Type
 38339 ;;		None
 38340 ;; Return value:  Size  Location     Type
 38341 ;;                  1    wreg      void 
 38342 ;; Registers used:
 38343 ;;		None
 38344 ;; Tracked objects:
 38345 ;;		On entry : 0/0
 38346 ;;		On exit  : 0/0
 38347 ;;		Unchanged: 0/0
 38348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38353 ;;Total ram usage:        0 bytes
 38354 ;; Hardware stack levels used:    1
 38355 ;; This function calls:
 38356 ;;		Nothing
 38357 ;; This function is called by:
 38358 ;;		_EXT_INT_Initialize
 38359 ;;		_INT1_CallBack
 38360 ;; This function uses a non-reentrant model
 38361 ;;
 38362                           
 38363                           	psect	text174
 38364  01C1B6                     __ptext174:
 38365                           	opt callstack 0
 38366  01C1B6                     _INT1_DefaultInterruptHandler:
 38367                           	opt callstack 14
 38368                           
 38369                           ;incstack = 0
 38370  01C1B6  0012               	return		;funcret
 38371  01C1B8                     __end_of_INT1_DefaultInterruptHandler:
 38372                           	opt callstack 0
 38373                           
 38374 ;; *************** function _leftCapTouchHandler *****************
 38375 ;; Defined at:
 38376 ;;		line 11 in file "cap_touch_int.c"
 38377 ;; Parameters:    Size  Location     Type
 38378 ;;		None
 38379 ;; Auto vars:     Size  Location     Type
 38380 ;;		None
 38381 ;; Return value:  Size  Location     Type
 38382 ;;                  1    wreg      void 
 38383 ;; Registers used:
 38384 ;;		wreg, status,2, status,0
 38385 ;; Tracked objects:
 38386 ;;		On entry : 0/0
 38387 ;;		On exit  : 0/0
 38388 ;;		Unchanged: 0/0
 38389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38394 ;;Total ram usage:        0 bytes
 38395 ;; Hardware stack levels used:    1
 38396 ;; This function calls:
 38397 ;;		Nothing
 38398 ;; This function is called by:
 38399 ;;		_main
 38400 ;;		_INT1_CallBack
 38401 ;; This function uses a non-reentrant model
 38402 ;;
 38403                           
 38404                           	psect	text175
 38405  01BF52                     __ptext175:
 38406                           	opt callstack 0
 38407  01BF52                     _leftCapTouchHandler:
 38408                           	opt callstack 14
 38409                           
 38410                           ;cap_touch_int.c: 13: OLED_Frame--;
 38411                           
 38412                           ;incstack = 0
 38413  01BF52  0102               	movlb	2	; () banked
 38414  01BF54  07B7               	decf	_OLED_Frame& (0+255),f,b
 38415                           
 38416                           ; BSR set to: 2
 38417                           ;cap_touch_int.c: 14: if (OLED_Frame == 4 - 1) OLED_Frame = 23;
 38418  01BF56  0E03               	movlw	3
 38419  01BF58  19B7               	xorwf	_OLED_Frame& (0+255),w,b
 38420  01BF5A  A4D8               	btfss	status,2,c
 38421  01BF5C  D002               	goto	i2l1550
 38422                           
 38423                           ; BSR set to: 2
 38424  01BF5E  0E17               	movlw	23
 38425  01BF60  6FB7               	movwf	_OLED_Frame& (0+255),b
 38426  01BF62                     i2l1550:
 38427                           
 38428                           ; BSR set to: 2
 38429                           ;cap_touch_int.c: 15: OLED_update_flag = 1;
 38430  01BF62  0E01               	movlw	1
 38431  01BF64  6FB6               	movwf	_OLED_update_flag& (0+255),b
 38432                           
 38433                           ; BSR set to: 2
 38434  01BF66  0012               	return		;funcret
 38435  01BF68                     __end_of_leftCapTouchHandler:
 38436                           	opt callstack 0
 38437                           
 38438 ;; *************** function _EUSART2_Receive_ISR *****************
 38439 ;; Defined at:
 38440 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 38441 ;; Parameters:    Size  Location     Type
 38442 ;;		None
 38443 ;; Auto vars:     Size  Location     Type
 38444 ;;		None
 38445 ;; Return value:  Size  Location     Type
 38446 ;;                  1    wreg      void 
 38447 ;; Registers used:
 38448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38449 ;; Tracked objects:
 38450 ;;		On entry : 0/0
 38451 ;;		On exit  : 0/0
 38452 ;;		Unchanged: 0/0
 38453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38458 ;;Total ram usage:        0 bytes
 38459 ;; Hardware stack levels used:    1
 38460 ;; Hardware stack levels required when called:    4
 38461 ;; This function calls:
 38462 ;;		i2_printf
 38463 ;; This function is called by:
 38464 ;;		_EUSART2_Initialize
 38465 ;;		_INTERRUPT_InterruptManagerHigh
 38466 ;; This function uses a non-reentrant model
 38467 ;;
 38468                           
 38469                           	psect	text176
 38470  01A308                     __ptext176:
 38471                           	opt callstack 0
 38472  01A308                     _EUSART2_Receive_ISR:
 38473                           	opt callstack 12
 38474                           
 38475                           ;eusart2.c: 209: if(1 == RC2STAbits.OERR)
 38476                           
 38477                           ; BSR set to: 2
 38478                           ;incstack = 0
 38479  01A308  010E               	movlb	14	; () banked
 38480  01A30A  A39D               	btfss	157,1,b	;volatile
 38481  01A30C  D005               	goto	i2l21078
 38482                           
 38483                           ; BSR set to: 14
 38484                           ;eusart2.c: 210: {;eusart2.c: 213: RC2STAbits.CREN = 0;
 38485  01A30E  999D               	bcf	157,4,b	;volatile
 38486                           
 38487                           ;eusart2.c: 214: RC2STAbits.CREN = 1;
 38488  01A310  899D               	bsf	157,4,b	;volatile
 38489                           
 38490                           ; BSR set to: 14
 38491                           ;eusart2.c: 215: error_handler.USB_UART_COMM_error_flag = 1;
 38492  01A312  0E01               	movlw	1
 38493  01A314  0100               	movlb	0	; () banked
 38494  01A316  6FCC               	movwf	(_error_handler+7)& (0+255),b
 38495  01A318                     i2l21078:
 38496                           
 38497                           ;eusart2.c: 216: };eusart2.c: 219: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 38498  01A318  0E00               	movlw	low _eusart2RxBuffer
 38499  01A31A  0100               	movlb	0	; () banked
 38500  01A31C  25DD               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 38501  01A31E  6ED9               	movwf	fsr2l,c
 38502  01A320  6ADA               	clrf	fsr2h,c
 38503  01A322  0E03               	movlw	high _eusart2RxBuffer
 38504  01A324  22DA               	addwfc	fsr2h,f,c
 38505  01A326  CE99 FFDF          	movff	3737,indf2	;volatile
 38506                           
 38507                           ; BSR set to: 0
 38508  01A32A  2BDD               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 38509                           
 38510                           ; BSR set to: 0
 38511                           ;eusart2.c: 220: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 38512  01A32C  0E3F               	movlw	63
 38513  01A32E  65DD               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 38514  01A330  D002               	goto	i2l21086
 38515                           
 38516                           ; BSR set to: 0
 38517                           ;eusart2.c: 221: {;eusart2.c: 222: eusart2RxHead = 0;
 38518  01A332  0E00               	movlw	0
 38519  01A334  6FDD               	movwf	_eusart2RxHead& (0+255),b	;volatile
 38520  01A336                     i2l21086:
 38521                           
 38522                           ; BSR set to: 0
 38523                           ;eusart2.c: 223: };eusart2.c: 224: eusart2RxCount++;
 38524  01A336  0101               	movlb	1	; () banked
 38525  01A338  2B97               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 38526                           
 38527                           ; BSR set to: 1
 38528                           ;eusart2.c: 226: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 38529  01A33A  0E0A               	movlw	10
 38530  01A33C  010E               	movlb	14	; () banked
 38531  01A33E  1999               	xorwf	153,w,b	;volatile
 38532  01A340  B4D8               	btfsc	status,2,c
 38533  01A342  D004               	goto	i2u2711_40
 38534                           
 38535                           ; BSR set to: 14
 38536  01A344  0E0D               	movlw	13
 38537  01A346  1999               	xorwf	153,w,b	;volatile
 38538  01A348  A4D8               	btfss	status,2,c
 38539  01A34A  D006               	goto	i2l144
 38540  01A34C                     i2u2711_40:
 38541                           
 38542                           ; BSR set to: 14
 38543                           ;eusart2.c: 228: eusart2RxStringReady = 1;
 38544  01A34C  0100               	movlb	0	; () banked
 38545  01A34E  81FC               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 38546                           
 38547                           ; BSR set to: 0
 38548                           ;eusart2.c: 231: RC2REG = 0;
 38549  01A350  0E00               	movlw	0
 38550  01A352  010E               	movlb	14	; () banked
 38551  01A354  6F99               	movwf	153,b	;volatile
 38552                           
 38553                           ;eusart2.c: 233: }
 38554  01A356  D002               	goto	i2l21094
 38555  01A358                     i2l144:
 38556                           
 38557                           ; BSR set to: 14
 38558                           ;eusart2.c: 235: else {;eusart2.c: 237: eusart2RxStringReady = 0;
 38559  01A358  0100               	movlb	0	; () banked
 38560  01A35A  91FC               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 38561  01A35C                     i2l21094:
 38562                           
 38563                           ;eusart2.c: 239: };eusart2.c: 242: if((RC2REG == (int) '\b')) {
 38564  01A35C  0E08               	movlw	8
 38565  01A35E  010E               	movlb	14	; () banked
 38566  01A360  1999               	xorwf	153,w,b	;volatile
 38567  01A362  A4D8               	btfss	status,2,c
 38568  01A364  0012               	return	
 38569                           
 38570                           ; BSR set to: 14
 38571                           ;eusart2.c: 244: eusart2RxBuffer[eusart2RxHead] = '\0';
 38572  01A366  0E00               	movlw	low _eusart2RxBuffer
 38573  01A368  0100               	movlb	0	; () banked
 38574  01A36A  25DD               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 38575  01A36C  6ED9               	movwf	fsr2l,c
 38576  01A36E  6ADA               	clrf	fsr2h,c
 38577  01A370  0E03               	movlw	high _eusart2RxBuffer
 38578  01A372  22DA               	addwfc	fsr2h,f,c
 38579  01A374  0E00               	movlw	0
 38580  01A376  6EDF               	movwf	indf2,c
 38581                           
 38582                           ; BSR set to: 0
 38583                           ;eusart2.c: 245: eusart2RxHead--;
 38584  01A378  07DD               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 38585                           
 38586                           ; BSR set to: 0
 38587                           ;eusart2.c: 248: printf("\033[K");
 38588  01A37A  0EC6               	movlw	low STR_1
 38589  01A37C  6FA4               	movwf	i2printf@f& (0+255),b
 38590  01A37E  0EFF               	movlw	high STR_1
 38591  01A380  6FA5               	movwf	(i2printf@f+1)& (0+255),b
 38592  01A382  ECE1  F0DB         	call	i2_printf	;wreg free
 38593                           
 38594                           ;eusart2.c: 250: if(eusart2RxHead != eusart2RxTail) {
 38595  01A386  0101               	movlb	1	; () banked
 38596  01A388  5198               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 38597  01A38A  0100               	movlb	0	; () banked
 38598  01A38C  19DD               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 38599  01A38E  B4D8               	btfsc	status,2,c
 38600  01A390  D009               	goto	i2l21108
 38601                           
 38602                           ; BSR set to: 0
 38603                           ;eusart2.c: 252: eusart2RxBuffer[eusart2RxHead] = '\0';
 38604  01A392  0E00               	movlw	low _eusart2RxBuffer
 38605  01A394  25DD               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 38606  01A396  6ED9               	movwf	fsr2l,c
 38607  01A398  6ADA               	clrf	fsr2h,c
 38608  01A39A  0E03               	movlw	high _eusart2RxBuffer
 38609  01A39C  22DA               	addwfc	fsr2h,f,c
 38610  01A39E  0E00               	movlw	0
 38611  01A3A0  6EDF               	movwf	indf2,c
 38612                           
 38613                           ; BSR set to: 0
 38614                           ;eusart2.c: 253: eusart2RxHead--;
 38615  01A3A2  07DD               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 38616  01A3A4                     i2l21108:
 38617                           
 38618                           ; BSR set to: 0
 38619                           ;eusart2.c: 255: };eusart2.c: 257: RC2REG = 0;
 38620  01A3A4  0E00               	movlw	0
 38621  01A3A6  010E               	movlb	14	; () banked
 38622  01A3A8  6F99               	movwf	153,b	;volatile
 38623                           
 38624                           ; BSR set to: 14
 38625  01A3AA  0012               	return		;funcret
 38626  01A3AC                     __end_of_EUSART2_Receive_ISR:
 38627                           	opt callstack 0
 38628                           
 38629 ;; *************** function i2_printf *****************
 38630 ;; Defined at:
 38631 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 38632 ;; Parameters:    Size  Location     Type
 38633 ;;  f               2   68[BANK0 ] PTR const unsigned char 
 38634 ;;		 -> STR_334(60), STR_333(24), STR_332(24), STR_331(24), 
 38635 ;;		 -> STR_330(27), STR_329(20), STR_328(35), STR_327(34), 
 38636 ;;		 -> STR_326(37), STR_325(34), STR_324(36), STR_323(35), 
 38637 ;;		 -> STR_322(33), STR_321(35), STR_320(20), STR_319(23), 
 38638 ;;		 -> STR_318(20), STR_317(22), STR_316(21), STR_315(19), 
 38639 ;;		 -> STR_314(21), STR_313(27), STR_312(18), STR_311(11), 
 38640 ;;		 -> terminalTextAttributes@print_string(16), STR_281(4), STR_280(4), STR_279(4), 
 38641 ;;		 -> STR_278(4), STR_277(5), STR_276(3), STR_275(39), 
 38642 ;;		 -> STR_274(96), STR_273(62), STR_272(34), STR_271(3), 
 38643 ;;		 -> STR_270(50), STR_269(56), STR_268(55), STR_267(27), 
 38644 ;;		 -> STR_266(3), STR_265(63), STR_264(40), STR_263(64), 
 38645 ;;		 -> STR_262(42), STR_261(36), STR_260(3), STR_259(45), 
 38646 ;;		 -> STR_258(3), STR_257(58), STR_256(59), STR_255(20), 
 38647 ;;		 -> STR_254(3), STR_253(54), STR_252(52), STR_251(23), 
 38648 ;;		 -> STR_250(3), STR_249(43), STR_248(44), STR_247(23), 
 38649 ;;		 -> STR_246(3), STR_245(46), STR_244(3), STR_243(50), 
 38650 ;;		 -> STR_242(58), STR_241(35), STR_240(3), STR_239(47), 
 38651 ;;		 -> STR_238(3), STR_237(32), STR_236(64), STR_235(30), 
 38652 ;;		 -> STR_234(31), STR_233(63), STR_232(33), STR_231(35), 
 38653 ;;		 -> STR_230(37), STR_229(40), STR_228(28), STR_227(46), 
 38654 ;;		 -> STR_226(31), STR_225(52), STR_224(14), STR_223(28), 
 38655 ;;		 -> STR_222(50), STR_221(29), STR_220(45), STR_219(88), 
 38656 ;;		 -> STR_218(37), STR_217(3), STR_216(30), STR_215(46), 
 38657 ;;		 -> STR_214(39), STR_213(62), STR_212(57), STR_211(559), 
 38658 ;;		 -> STR_210(22), STR_209(3), STR_205(24), STR_203(23), 
 38659 ;;		 -> STR_201(23), STR_199(3), STR_198(3), STR_197(54), 
 38660 ;;		 -> STR_196(3), STR_195(56), STR_194(3), STR_193(60), 
 38661 ;;		 -> STR_192(61), STR_191(3), STR_190(62), STR_189(3), 
 38662 ;;		 -> STR_188(50), STR_187(3), STR_186(45), STR_185(3), 
 38663 ;;		 -> STR_183(54), STR_181(4), STR_180(5), STR_178(4), 
 38664 ;;		 -> STR_177(5), STR_10(47), STR_9(30), STR_8(46), 
 38665 ;;		 -> STR_7(39), STR_6(62), STR_5(57), STR_4(39), 
 38666 ;;		 -> STR_3(44), STR_2(52), STR_1(4), 
 38667 ;; Auto vars:     Size  Location     Type
 38668 ;;  printf          5   72[BANK0 ] struct __prbuf
 38669 ;;  printf          2   70[BANK0 ] PTR void [1]
 38670 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 38671 ;; Return value:  Size  Location     Type
 38672 ;;                  2   68[BANK0 ] int 
 38673 ;; Registers used:
 38674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38675 ;; Tracked objects:
 38676 ;;		On entry : 0/0
 38677 ;;		On exit  : 0/0
 38678 ;;		Unchanged: 0/0
 38679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38681 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38683 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38684 ;;Total ram usage:        9 bytes
 38685 ;; Hardware stack levels used:    1
 38686 ;; Hardware stack levels required when called:    3
 38687 ;; This function calls:
 38688 ;;		i2__doprnt
 38689 ;; This function is called by:
 38690 ;;		_EUSART2_Receive_ISR
 38691 ;; This function uses a non-reentrant model
 38692 ;;
 38693                           
 38694                           	psect	text177
 38695  01B7C2                     __ptext177:
 38696                           	opt callstack 0
 38697  01B7C2                     i2_printf:
 38698                           	opt callstack 12
 38699                           
 38700                           ; BSR set to: 14
 38701                           ;incstack = 0
 38702  01B7C2  0E00               	movlw	0
 38703  01B7C4  0100               	movlb	0	; () banked
 38704  01B7C6  6FA8               	movwf	i2printf@pb& (0+255),b
 38705  01B7C8  0E00               	movlw	0
 38706  01B7CA  6FA9               	movwf	(i2printf@pb+1)& (0+255),b
 38707  01B7CC  0E52               	movlw	low i2_putch
 38708  01B7CE  6FAA               	movwf	(i2printf@pb+2)& (0+255),b
 38709  01B7D0  0EC1               	movlw	high i2_putch
 38710  01B7D2  6FAB               	movwf	(i2printf@pb+3)& (0+255),b
 38711  01B7D4  0E01               	movlw	low (i2_putch shr (0+16))
 38712  01B7D6  6FAC               	movwf	(i2printf@pb+4)& (0+255),b
 38713  01B7D8  0EA6               	movlw	low (?i2_printf+2)
 38714  01B7DA  6FA6               	movwf	i2printf@ap& (0+255),b
 38715  01B7DC  0E00               	movlw	high (?i2_printf+2)
 38716  01B7DE  6FA7               	movwf	(i2printf@ap+1)& (0+255),b
 38717                           
 38718                           ; BSR set to: 0
 38719                           ;	Return value of i2_printf is never used
 38720  01B7E0  0EA8               	movlw	low i2printf@pb
 38721  01B7E2  6F6C               	movwf	i2__doprnt@pb& (0+255),b
 38722  01B7E4  0E00               	movlw	high i2printf@pb
 38723  01B7E6  6F6D               	movwf	(i2__doprnt@pb+1)& (0+255),b
 38724  01B7E8  C0A4  F06E         	movff	i2printf@f,i2__doprnt@f
 38725  01B7EC  C0A5  F06F         	movff	i2printf@f+1,i2__doprnt@f+1
 38726  01B7F0  0EA6               	movlw	low i2printf@ap
 38727  01B7F2  6F70               	movwf	i2__doprnt@ap& (0+255),b
 38728  01B7F4  0E00               	movlw	high i2printf@ap
 38729  01B7F6  6F71               	movwf	(i2__doprnt@ap+1)& (0+255),b
 38730  01B7F8  EC92  F08B         	call	i2__doprnt	;wreg free
 38731  01B7FC  0012               	return		;funcret
 38732  01B7FE                     __end_ofi2_printf:
 38733                           	opt callstack 0
 38734                           
 38735 ;; *************** function i2__doprnt *****************
 38736 ;; Defined at:
 38737 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 38738 ;; Parameters:    Size  Location     Type
 38739 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 38740 ;;		 -> i2printf@pb(5), sprintf@pb(5), printf@pb(5), 
 38741 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 38742 ;;		 -> STR_337(11), STR_334(60), STR_333(24), STR_332(24), 
 38743 ;;		 -> STR_331(24), STR_330(27), STR_329(20), STR_328(35), 
 38744 ;;		 -> STR_327(34), STR_326(37), STR_325(34), STR_324(36), 
 38745 ;;		 -> STR_323(35), STR_322(33), STR_321(35), STR_320(20), 
 38746 ;;		 -> STR_319(23), STR_318(20), STR_317(22), STR_316(21), 
 38747 ;;		 -> STR_315(19), STR_314(21), STR_313(27), STR_312(18), 
 38748 ;;		 -> STR_311(11), terminalTextAttributes@print_string(16), STR_281(4), STR_280(4), 
 38749 ;;		 -> STR_279(4), STR_278(4), STR_277(5), STR_276(3), 
 38750 ;;		 -> STR_275(39), STR_274(96), STR_273(62), STR_272(34), 
 38751 ;;		 -> STR_271(3), STR_270(50), STR_269(56), STR_268(55), 
 38752 ;;		 -> STR_267(27), STR_266(3), STR_265(63), STR_264(40), 
 38753 ;;		 -> STR_263(64), STR_262(42), STR_261(36), STR_260(3), 
 38754 ;;		 -> STR_259(45), STR_258(3), STR_257(58), STR_256(59), 
 38755 ;;		 -> STR_255(20), STR_254(3), STR_253(54), STR_252(52), 
 38756 ;;		 -> STR_251(23), STR_250(3), STR_249(43), STR_248(44), 
 38757 ;;		 -> STR_247(23), STR_246(3), STR_245(46), STR_244(3), 
 38758 ;;		 -> STR_243(50), STR_242(58), STR_241(35), STR_240(3), 
 38759 ;;		 -> STR_239(47), STR_238(3), STR_237(32), STR_236(64), 
 38760 ;;		 -> STR_235(30), STR_234(31), STR_233(63), STR_232(33), 
 38761 ;;		 -> STR_231(35), STR_230(37), STR_229(40), STR_228(28), 
 38762 ;;		 -> STR_227(46), STR_226(31), STR_225(52), STR_224(14), 
 38763 ;;		 -> STR_223(28), STR_222(50), STR_221(29), STR_220(45), 
 38764 ;;		 -> STR_219(88), STR_218(37), STR_217(3), STR_216(30), 
 38765 ;;		 -> STR_215(46), STR_214(39), STR_213(62), STR_212(57), 
 38766 ;;		 -> STR_211(559), STR_210(22), STR_209(3), STR_205(24), 
 38767 ;;		 -> STR_203(23), STR_201(23), STR_199(3), STR_198(3), 
 38768 ;;		 -> STR_197(54), STR_196(3), STR_195(56), STR_194(3), 
 38769 ;;		 -> STR_193(60), STR_192(61), STR_191(3), STR_190(62), 
 38770 ;;		 -> STR_189(3), STR_188(50), STR_187(3), STR_186(45), 
 38771 ;;		 -> STR_185(3), STR_183(54), STR_181(4), STR_180(5), 
 38772 ;;		 -> STR_178(4), STR_177(5), STR_167(7), STR_165(5), 
 38773 ;;		 -> STR_158(11), STR_153(11), STR_152(11), STR_151(11), 
 38774 ;;		 -> STR_150(11), STR_149(9), STR_145(11), STR_143(11), 
 38775 ;;		 -> STR_142(11), STR_141(11), STR_140(11), STR_139(9), 
 38776 ;;		 -> STR_138(11), STR_137(9), STR_136(8), STR_135(9), 
 38777 ;;		 -> STR_134(8), STR_133(9), STR_129(9), STR_119(7), 
 38778 ;;		 -> STR_115(7), STR_111(7), STR_107(7), STR_103(8), 
 38779 ;;		 -> STR_99(7), STR_95(7), STR_91(7), STR_87(7), 
 38780 ;;		 -> STR_83(7), STR_79(7), STR_66(7), STR_64(5), 
 38781 ;;		 -> STR_57(11), STR_56(10), STR_55(13), STR_54(12), 
 38782 ;;		 -> STR_53(11), STR_52(10), STR_51(10), STR_50(9), 
 38783 ;;		 -> STR_49(11), STR_48(10), STR_10(47), STR_9(30), 
 38784 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 38785 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 38786 ;;  ap              2   16[BANK0 ] PTR PTR void 
 38787 ;;		 -> i2printf@ap(2), sprintf@ap(2), printf@ap(2), 
 38788 ;; Auto vars:     Size  Location     Type
 38789 ;;  _doprnt         4   57[BANK0 ] unsigned long 
 38790 ;;  _doprnt         4   53[BANK0 ] unsigned long 
 38791 ;;  _doprnt         4   49[BANK0 ] struct .
 38792 ;;  _doprnt         2   65[BANK0 ] unsigned short 
 38793 ;;  _doprnt         2   63[BANK0 ] int 
 38794 ;;  _doprnt         2   61[BANK0 ] int 
 38795 ;;  _doprnt         2   47[BANK0 ] int 
 38796 ;;  _doprnt         2   45[BANK0 ] unsigned int 
 38797 ;;  _doprnt         2   43[BANK0 ] PTR const unsigned char 
 38798 ;;		 -> i2__doprnt@c(1), ?_sprintf(2), ?_printf(2), ftoa@buf(17), 
 38799 ;;		 -> STR_335(7), _doprnt@c(1), freqMeasConvert@qi_period(4), OLED_updateHandler@rev_id_str(17), 
 38800 ;;		 -> OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@
      +return_string(40), 
 38801 ;;		 -> STR_47(10), STR_46(13), STR_45(13), STR_44(12), 
 38802 ;;		 -> STR_43(12), STR_42(13), STR_41(12), STR_30(16), 
 38803 ;;		 -> STR_29(22), STR_28(21), STR_27(27), STR_26(41), 
 38804 ;;		 -> STR_25(32), STR_24(19), STR_23(16), STR_22(15), 
 38805 ;;		 -> STR_21(16), STR_15(10), STR_14(6), STR_13(14), 
 38806 ;;		 -> STR_12(9), STR_11(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), 
 38807 ;;		 -> LM73Convert@QI_Conv(2), NULL(0), 
 38808 ;;  _doprnt         1   67[BANK0 ] unsigned char 
 38809 ;;  _doprnt         1   26[BANK0 ] unsigned char 
 38810 ;;  _doprnt         1    0        unsigned char 
 38811 ;; Return value:  Size  Location     Type
 38812 ;;                  2   12[BANK0 ] int 
 38813 ;; Registers used:
 38814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38815 ;; Tracked objects:
 38816 ;;		On entry : 0/0
 38817 ;;		On exit  : 0/0
 38818 ;;		Unchanged: 0/0
 38819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38820 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38821 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38823 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38824 ;;Total ram usage:       56 bytes
 38825 ;; Hardware stack levels used:    1
 38826 ;; Hardware stack levels required when called:    2
 38827 ;; This function calls:
 38828 ;;		Absolute function
 38829 ;;		i2___awdiv
 38830 ;;		i2___fladd
 38831 ;;		i2___fleq
 38832 ;;		i2___flge
 38833 ;;		i2___flmul
 38834 ;;		i2___flneg
 38835 ;;		i2___flsub
 38836 ;;		i2___fltol
 38837 ;;		i2___lldiv
 38838 ;;		i2___llmod
 38839 ;;		i2___wmul
 38840 ;;		i2___xxtofl
 38841 ;;		i2__div_to_l_
 38842 ;;		i2__tdiv_to_l_
 38843 ;;		i2_fround
 38844 ;;		i2_isdigit
 38845 ;;		i2_putch
 38846 ;;		i2_scale
 38847 ;; This function is called by:
 38848 ;;		i2_printf
 38849 ;; This function uses a non-reentrant model
 38850 ;;
 38851                           
 38852                           	psect	text178
 38853  011724                     __ptext178:
 38854                           	opt callstack 0
 38855  011724                     i2__doprnt:
 38856                           	opt callstack 12
 38857                           
 38858                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 38859                           
 38860                           ;incstack = 0
 38861  011724  EFFB  F096         	goto	i2u2638_40
 38862  011728                     i2l19722:
 38863                           
 38864                           ; BSR set to: 0
 38865                           ;doprnt.c: 550: if(c != '%')
 38866  011728  0E25               	movlw	37
 38867  01172A  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 38868  01172C  B4D8               	btfsc	status,2,c
 38869  01172E  D036               	goto	i2l19732
 38870                           
 38871                           ; BSR set to: 0
 38872  011730  EE20 F002          	lfsr	2,2
 38873  011734  516C               	movf	i2__doprnt@pb& (0+255),w,b
 38874  011736  26D9               	addwf	fsr2l,f,c
 38875  011738  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 38876  01173A  22DA               	addwfc	fsr2h,f,c
 38877  01173C  50DE               	movf	postinc2,w,c
 38878  01173E  10DE               	iorwf	postinc2,w,c
 38879  011740  10DE               	iorwf	postinc2,w,c
 38880  011742  B4D8               	btfsc	status,2,c
 38881  011744  D014               	goto	i2l19728
 38882                           
 38883                           ; BSR set to: 0
 38884  011746  EE20 F002          	lfsr	2,2
 38885  01174A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 38886  01174C  26D9               	addwf	fsr2l,f,c
 38887  01174E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 38888  011750  22DA               	addwfc	fsr2h,f,c
 38889  011752  D802               	call	i2u2510_48
 38890  011754  EFFB  F096         	goto	i2u2638_40
 38891  011758                     i2u2510_48:
 38892  011758  0005               	push	
 38893  01175A  6EFA               	movwf	pclath,c
 38894  01175C  50DE               	movf	postinc2,w,c
 38895  01175E  6EFD               	movwf	tosl,c
 38896  011760  50DE               	movf	postinc2,w,c
 38897  011762  6EFE               	movwf	tosh,c
 38898  011764  50DE               	movf	postinc2,w,c
 38899  011766  6EFF               	movwf	tosu,c
 38900  011768  50FA               	movf	pclath,w,c
 38901  01176A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 38902  01176C  0012               	return		;indir
 38903  01176E                     i2l19728:
 38904                           
 38905                           ; BSR set to: 0
 38906  01176E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 38907  011772  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 38908  011776  CFDE F072          	movff	postinc2,??i2__doprnt
 38909  01177A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 38910  01177E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 38911  011782  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 38912  011786  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 38913                           
 38914                           ; BSR set to: 0
 38915  01178A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 38916  01178E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 38917  011792  2ADE               	incf	postinc2,f,c
 38918  011794  0E00               	movlw	0
 38919  011796  22DD               	addwfc	postdec2,f,c
 38920  011798  EFFB  F096         	goto	i2u2638_40
 38921  01179C                     i2l19732:
 38922                           
 38923                           ; BSR set to: 0
 38924                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 38925  01179C  0E00               	movlw	0
 38926  01179E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 38927  0117A0  0E00               	movlw	0
 38928  0117A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 38929                           
 38930                           ;doprnt.c: 560: flag = 0;
 38931  0117A4  0E00               	movlw	0
 38932  0117A6  6FA2               	movwf	(i2__doprnt@flag+1)& (0+255),b
 38933  0117A8  0E00               	movlw	0
 38934  0117AA  6FA1               	movwf	i2__doprnt@flag& (0+255),b
 38935  0117AC  D00A               	goto	i2l19742
 38936  0117AE                     i2l19734:
 38937                           
 38938                           ;doprnt.c: 573: flag |= 0x01;
 38939  0117AE  0100               	movlb	0	; () banked
 38940  0117B0  81A1               	bsf	i2__doprnt@flag& (0+255),0,b
 38941  0117B2  D005               	goto	L33
 38942  0117B4                     i2l19736:
 38943                           
 38944                           ;doprnt.c: 580: flag |= 0x02;
 38945  0117B4  0100               	movlb	0	; () banked
 38946  0117B6  83A1               	bsf	i2__doprnt@flag& (0+255),1,b
 38947  0117B8  D002               	goto	L33
 38948  0117BA                     i2l19738:
 38949                           
 38950                           ;doprnt.c: 592: flag |= 0x04;
 38951  0117BA  0100               	movlb	0	; () banked
 38952  0117BC  85A1               	bsf	i2__doprnt@flag& (0+255),2,b
 38953  0117BE                     L33:
 38954                           
 38955                           ;doprnt.c: 593: f++;
 38956  0117BE  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 38957  0117C0  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 38958  0117C2                     i2l19742:
 38959                           
 38960                           ; BSR set to: 0
 38961  0117C2  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 38962  0117C6  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 38963  0117CA  0E00               	movlw	low (__mediumconst shr (0+16))
 38964  0117CC  6EF8               	movwf	tblptru,c
 38965  0117CE  0E0E               	movlw	(high __ramtop+-1)
 38966  0117D0  64F7               	cpfsgt	tblptrh,c
 38967  0117D2  D003               	bra	i2u2511_47
 38968  0117D4  0008               	tblrd		*
 38969  0117D6  50F5               	movf	tablat,w,c
 38970  0117D8  D005               	bra	i2u2511_40
 38971  0117DA                     i2u2511_47:
 38972  0117DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 38973  0117DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 38974  0117E2  50EF               	movf	indf0,w,c
 38975  0117E4                     i2u2511_40:
 38976                           
 38977                           ; Switch size 1, requested type "simple"
 38978                           ; Number of cases is 3, Range of values is 32 to 48
 38979                           ; switch strategies available:
 38980                           ; Name         Instructions Cycles
 38981                           ; simple_byte           10     6 (average)
 38982                           ;	Chosen strategy is simple_byte
 38983  0117E4  0A20               	xorlw	32	; case 32
 38984  0117E6  B4D8               	btfsc	status,2,c
 38985  0117E8  D7E2               	goto	i2l19734
 38986  0117EA  0A0B               	xorlw	11	; case 43
 38987  0117EC  B4D8               	btfsc	status,2,c
 38988  0117EE  D7E2               	goto	i2l19736
 38989  0117F0  0A1B               	xorlw	27	; case 48
 38990  0117F2  B4D8               	btfsc	status,2,c
 38991  0117F4  D7E2               	goto	i2l19738
 38992                           
 38993                           ;doprnt.c: 601: if(flag & 0x02)
 38994  0117F6  0100               	movlb	0	; () banked
 38995  0117F8  B3A1               	btfsc	i2__doprnt@flag& (0+255),1,b
 38996                           
 38997                           ; BSR set to: 0
 38998                           ;doprnt.c: 602: flag &= ~0x01;
 38999  0117FA  91A1               	bcf	i2__doprnt@flag& (0+255),0,b
 39000                           
 39001                           ; BSR set to: 0
 39002                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 39003  0117FC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39004  011800  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39005  011804  0E00               	movlw	low (__mediumconst shr (0+16))
 39006  011806  6EF8               	movwf	tblptru,c
 39007  011808  0E0E               	movlw	(high __ramtop+-1)
 39008  01180A  64F7               	cpfsgt	tblptrh,c
 39009  01180C  D003               	bra	i2u2513_47
 39010  01180E  0008               	tblrd		*
 39011  011810  50F5               	movf	tablat,w,c
 39012  011812  D005               	bra	i2u2513_40
 39013  011814                     i2u2513_47:
 39014  011814  CFF6 FFE9          	movff	tblptrl,fsr0l
 39015  011818  CFF7 FFEA          	movff	tblptrh,fsr0h
 39016  01181C  50EF               	movf	indf0,w,c
 39017  01181E                     i2u2513_40:
 39018  01181E  ECF3  F0DE         	call	i2_isdigit
 39019  011822  A0D8               	btfss	status,0,c
 39020  011824  D04B               	goto	i2u2517_40
 39021                           
 39022                           ;doprnt.c: 610: width = 0;
 39023  011826  0E00               	movlw	0
 39024  011828  0100               	movlb	0	; () banked
 39025  01182A  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 39026  01182C  0E00               	movlw	0
 39027  01182E  6F9D               	movwf	i2__doprnt@width& (0+255),b
 39028  011830                     i2l19750:
 39029                           
 39030                           ;doprnt.c: 612: width *= 10;
 39031  011830  C09D  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 39032  011834  C09E  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 39033  011838  0E00               	movlw	0
 39034  01183A  6E04               	movwf	i2___wmul@multiplicand+1,c
 39035  01183C  0E0A               	movlw	10
 39036  01183E  6E03               	movwf	i2___wmul@multiplicand,c
 39037  011840  EC18  F0DE         	call	i2___wmul	;wreg free
 39038  011844  C001  F09D         	movff	?i2___wmul,i2__doprnt@width
 39039  011848  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@width+1
 39040                           
 39041                           ;doprnt.c: 613: width += *f++ - '0';
 39042  01184C  0ED0               	movlw	208
 39043  01184E  0100               	movlb	0	; () banked
 39044  011850  6F72               	movwf	??i2__doprnt& (0+255),b
 39045  011852  0EFF               	movlw	255
 39046  011854  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 39047  011856  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39048  01185A  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39049  01185E  0E00               	movlw	low (__mediumconst shr (0+16))
 39050  011860  6EF8               	movwf	tblptru,c
 39051  011862  0E0E               	movlw	(high __ramtop+-1)
 39052  011864  64F7               	cpfsgt	tblptrh,c
 39053  011866  D003               	bra	i2u2515_47
 39054  011868  0008               	tblrd		*
 39055  01186A  50F5               	movf	tablat,w,c
 39056  01186C  D005               	bra	i2u2515_40
 39057  01186E                     i2u2515_47:
 39058  01186E  CFF6 FFE9          	movff	tblptrl,fsr0l
 39059  011872  CFF7 FFEA          	movff	tblptrh,fsr0h
 39060  011876  50EF               	movf	indf0,w,c
 39061  011878                     i2u2515_40:
 39062  011878  0100               	movlb	0	; () banked
 39063  01187A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 39064  01187C  6B75               	clrf	(??i2__doprnt+3)& (0+255),b
 39065  01187E  5172               	movf	??i2__doprnt& (0+255),w,b
 39066  011880  2774               	addwf	(??i2__doprnt+2)& (0+255),f,b
 39067  011882  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 39068  011884  2375               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 39069  011886  5174               	movf	(??i2__doprnt+2)& (0+255),w,b
 39070  011888  279D               	addwf	i2__doprnt@width& (0+255),f,b
 39071  01188A  5175               	movf	(??i2__doprnt+3)& (0+255),w,b
 39072  01188C  239E               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 39073                           
 39074                           ; BSR set to: 0
 39075  01188E  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 39076  011890  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 39077                           
 39078                           ; BSR set to: 0
 39079                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 39080  011892  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39081  011896  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39082  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 39083  01189C  6EF8               	movwf	tblptru,c
 39084  01189E  0E0E               	movlw	(high __ramtop+-1)
 39085  0118A0  64F7               	cpfsgt	tblptrh,c
 39086  0118A2  D003               	bra	i2u2516_47
 39087  0118A4  0008               	tblrd		*
 39088  0118A6  50F5               	movf	tablat,w,c
 39089  0118A8  D005               	bra	i2u2516_40
 39090  0118AA                     i2u2516_47:
 39091  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 39092  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 39093  0118B2  50EF               	movf	indf0,w,c
 39094  0118B4                     i2u2516_40:
 39095  0118B4  ECF3  F0DE         	call	i2_isdigit
 39096  0118B8  B0D8               	btfsc	status,0,c
 39097  0118BA  D7BA               	goto	i2l19750
 39098  0118BC                     i2u2517_40:
 39099                           
 39100                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 39101  0118BC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39102  0118C0  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39103  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
 39104  0118C6  6EF8               	movwf	tblptru,c
 39105  0118C8  0E0E               	movlw	(high __ramtop+-1)
 39106  0118CA  64F7               	cpfsgt	tblptrh,c
 39107  0118CC  D003               	bra	i2u2518_47
 39108  0118CE  0008               	tblrd		*
 39109  0118D0  50F5               	movf	tablat,w,c
 39110  0118D2  D005               	bra	i2u2518_40
 39111  0118D4                     i2u2518_47:
 39112  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 39113  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 39114  0118DC  50EF               	movf	indf0,w,c
 39115  0118DE                     i2u2518_40:
 39116  0118DE  0A2E               	xorlw	46
 39117  0118E0  A4D8               	btfss	status,2,c
 39118  0118E2  D048               	goto	i2l19770
 39119                           
 39120                           ;doprnt.c: 624: flag |= 0x4000;
 39121  0118E4  0100               	movlb	0	; () banked
 39122  0118E6  8DA2               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 39123                           
 39124                           ;doprnt.c: 625: f++;
 39125  0118E8  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 39126  0118EA  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 39127                           
 39128                           ; BSR set to: 0
 39129                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 39130  0118EC  0E00               	movlw	0
 39131  0118EE  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 39132  0118F0  0E00               	movlw	0
 39133  0118F2  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 39134                           
 39135                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 39136  0118F4  D029               	goto	i2l19768
 39137  0118F6                     i2l19764:
 39138                           
 39139                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 39140  0118F6  C09F  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 39141  0118FA  C0A0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 39142  0118FE  0E00               	movlw	0
 39143  011900  6E04               	movwf	i2___wmul@multiplicand+1,c
 39144  011902  0E0A               	movlw	10
 39145  011904  6E03               	movwf	i2___wmul@multiplicand,c
 39146  011906  EC18  F0DE         	call	i2___wmul	;wreg free
 39147  01190A  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39148  01190E  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39149  011912  0E00               	movlw	low (__mediumconst shr (0+16))
 39150  011914  6EF8               	movwf	tblptru,c
 39151  011916  0E0E               	movlw	(high __ramtop+-1)
 39152  011918  64F7               	cpfsgt	tblptrh,c
 39153  01191A  D003               	bra	i2u2520_47
 39154  01191C  0008               	tblrd		*
 39155  01191E  50F5               	movf	tablat,w,c
 39156  011920  D005               	bra	i2u2520_40
 39157  011922                     i2u2520_47:
 39158  011922  CFF6 FFE9          	movff	tblptrl,fsr0l
 39159  011926  CFF7 FFEA          	movff	tblptrh,fsr0h
 39160  01192A  50EF               	movf	indf0,w,c
 39161  01192C                     i2u2520_40:
 39162  01192C  0100               	movlb	0	; () banked
 39163  01192E  6F72               	movwf	??i2__doprnt& (0+255),b
 39164  011930  5172               	movf	??i2__doprnt& (0+255),w,b
 39165  011932  2601               	addwf	?i2___wmul,f,c
 39166  011934  0E00               	movlw	0
 39167  011936  2202               	addwfc	?i2___wmul+1,f,c
 39168  011938  0ED0               	movlw	208
 39169  01193A  2401               	addwf	?i2___wmul,w,c
 39170  01193C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 39171  01193E  0EFF               	movlw	255
 39172  011940  2002               	addwfc	?i2___wmul+1,w,c
 39173  011942  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 39174                           
 39175                           ; BSR set to: 0
 39176  011944  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 39177  011946  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 39178  011948                     i2l19768:
 39179                           
 39180                           ; BSR set to: 0
 39181  011948  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 39182  01194C  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 39183  011950  0E00               	movlw	low (__mediumconst shr (0+16))
 39184  011952  6EF8               	movwf	tblptru,c
 39185  011954  0E0E               	movlw	(high __ramtop+-1)
 39186  011956  64F7               	cpfsgt	tblptrh,c
 39187  011958  D003               	bra	i2u2521_47
 39188  01195A  0008               	tblrd		*
 39189  01195C  50F5               	movf	tablat,w,c
 39190  01195E  D005               	bra	i2u2521_40
 39191  011960                     i2u2521_47:
 39192  011960  CFF6 FFE9          	movff	tblptrl,fsr0l
 39193  011964  CFF7 FFEA          	movff	tblptrh,fsr0h
 39194  011968  50EF               	movf	indf0,w,c
 39195  01196A                     i2u2521_40:
 39196  01196A  ECF3  F0DE         	call	i2_isdigit
 39197  01196E  A0D8               	btfss	status,0,c
 39198  011970  D12A               	goto	i2l19838
 39199  011972  D7C1               	goto	i2l19764
 39200  011974                     i2l19770:
 39201                           
 39202                           ;doprnt.c: 645: prec = 0;
 39203  011974  0E00               	movlw	0
 39204  011976  0100               	movlb	0	; () banked
 39205  011978  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 39206  01197A  0E00               	movlw	0
 39207  01197C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 39208                           
 39209                           ; BSR set to: 0
 39210                           ;doprnt.c: 647: flag |= 0x1000;
 39211  01197E  89A2               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 39212  011980  D122               	goto	i2l19838
 39213  011982                     i2l19774:
 39214                           
 39215                           ; BSR set to: 0
 39216                           ;doprnt.c: 662: flag |= 0x10;
 39217  011982  89A1               	bsf	i2__doprnt@flag& (0+255),4,b
 39218                           
 39219                           ;doprnt.c: 663: goto loop;
 39220  011984  D120               	goto	i2l19838
 39221  011986                     i2l19776:
 39222                           
 39223                           ; BSR set to: 0
 39224                           ;doprnt.c: 682: flag |= 0x400;
 39225  011986  85A2               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 39226                           
 39227                           ;doprnt.c: 683: break;
 39228  011988  D159               	goto	i2l19840
 39229  01198A                     i2l19778:
 39230                           
 39231                           ; BSR set to: 0
 39232                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 39233  01198A  8FA1               	bsf	i2__doprnt@flag& (0+255),7,b
 39234                           
 39235                           ;doprnt.c: 742: break;
 39236  01198C  D157               	goto	i2l19840
 39237  01198E                     i2l19780:
 39238                           
 39239                           ; BSR set to: 0
 39240                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 39241  01198E  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 39242  011992  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 39243  011996  CFDF F072          	movff	indf2,??i2__doprnt
 39244  01199A  0E02               	movlw	2
 39245  01199C  26DE               	addwf	postinc2,f,c
 39246  01199E  CFDF F073          	movff	indf2,??i2__doprnt+1
 39247  0119A2  0E00               	movlw	0
 39248  0119A4  22DD               	addwfc	postdec2,f,c
 39249  0119A6  C072  FFD9         	movff	??i2__doprnt,fsr2l
 39250  0119AA  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 39251  0119AE  CFDE F08B          	movff	postinc2,i2__doprnt@cp
 39252  0119B2  CFDD F08C          	movff	postdec2,i2__doprnt@cp+1
 39253                           
 39254                           ; BSR set to: 0
 39255                           ;doprnt.c: 759: if(!cp)
 39256  0119B6  518B               	movf	i2__doprnt@cp& (0+255),w,b
 39257  0119B8  118C               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 39258  0119BA  A4D8               	btfss	status,2,c
 39259  0119BC  D004               	goto	i2l19786
 39260                           
 39261                           ; BSR set to: 0
 39262                           ;doprnt.c: 760: cp = "(null)";
 39263  0119BE  0E58               	movlw	low STR_335
 39264  0119C0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 39265  0119C2  0EFF               	movlw	high STR_335
 39266  0119C4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 39267  0119C6                     i2l19786:
 39268                           
 39269                           ; BSR set to: 0
 39270                           ;doprnt.c: 764: len = 0;
 39271  0119C6  0E00               	movlw	0
 39272  0119C8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 39273  0119CA  0E00               	movlw	0
 39274  0119CC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 39275                           
 39276                           ;doprnt.c: 765: while(cp[len])
 39277  0119CE  D003               	goto	i2l19790
 39278  0119D0                     i2l19788:
 39279                           
 39280                           ;doprnt.c: 766: len++;
 39281  0119D0  0100               	movlb	0	; () banked
 39282  0119D2  4B8D               	infsnz	i2__doprnt@len& (0+255),f,b
 39283  0119D4  2B8E               	incf	(i2__doprnt@len+1)& (0+255),f,b
 39284  0119D6                     i2l19790:
 39285                           
 39286                           ; BSR set to: 0
 39287  0119D6  518D               	movf	i2__doprnt@len& (0+255),w,b
 39288  0119D8  258B               	addwf	i2__doprnt@cp& (0+255),w,b
 39289  0119DA  6F72               	movwf	??i2__doprnt& (0+255),b
 39290  0119DC  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 39291  0119DE  218C               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 39292  0119E0  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 39293  0119E2  C072  FFF6         	movff	??i2__doprnt,tblptrl
 39294  0119E6  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 39295  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
 39296  0119EC  6EF8               	movwf	tblptru,c
 39297  0119EE  0E0E               	movlw	(high __ramtop+-1)
 39298  0119F0  64F7               	cpfsgt	tblptrh,c
 39299  0119F2  D003               	bra	i2u2524_47
 39300  0119F4  0008               	tblrd		*
 39301  0119F6  50F5               	movf	tablat,w,c
 39302  0119F8  D005               	bra	i2u2524_40
 39303  0119FA                     i2u2524_47:
 39304  0119FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 39305  0119FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 39306  011A02  50EF               	movf	indf0,w,c
 39307  011A04                     i2u2524_40:
 39308  011A04  0900               	iorlw	0
 39309  011A06  A4D8               	btfss	status,2,c
 39310  011A08  D7E3               	goto	i2l19788
 39311  011A0A                     i2u2525_40:
 39312                           
 39313                           ;doprnt.c: 772: if(prec && prec < len)
 39314  011A0A  0100               	movlb	0	; () banked
 39315  011A0C  519F               	movf	i2__doprnt@prec& (0+255),w,b
 39316  011A0E  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 39317  011A10  B4D8               	btfsc	status,2,c
 39318  011A12  D00A               	goto	i2l19798
 39319                           
 39320                           ; BSR set to: 0
 39321  011A14  518D               	movf	i2__doprnt@len& (0+255),w,b
 39322  011A16  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 39323  011A18  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 39324  011A1A  59A0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 39325  011A1C  B0D8               	btfsc	status,0,c
 39326  011A1E  D004               	goto	i2l19798
 39327                           
 39328                           ; BSR set to: 0
 39329                           ;doprnt.c: 773: len = prec;
 39330  011A20  C09F  F08D         	movff	i2__doprnt@prec,i2__doprnt@len
 39331  011A24  C0A0  F08E         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 39332  011A28                     i2l19798:
 39333                           
 39334                           ; BSR set to: 0
 39335                           ;doprnt.c: 776: if(width > len)
 39336  011A28  519D               	movf	i2__doprnt@width& (0+255),w,b
 39337  011A2A  5D8D               	subwf	i2__doprnt@len& (0+255),w,b
 39338  011A2C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 39339  011A2E  598E               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 39340  011A30  B0D8               	btfsc	status,0,c
 39341  011A32  D005               	goto	i2l19802
 39342                           
 39343                           ; BSR set to: 0
 39344                           ;doprnt.c: 777: width -= len;
 39345  011A34  518D               	movf	i2__doprnt@len& (0+255),w,b
 39346  011A36  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 39347  011A38  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 39348  011A3A  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 39349  011A3C  D038               	goto	i2l19812
 39350  011A3E                     i2l19802:
 39351                           
 39352                           ; BSR set to: 0
 39353                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 39354  011A3E  0E00               	movlw	0
 39355  011A40  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 39356  011A42  0E00               	movlw	0
 39357  011A44  6F9D               	movwf	i2__doprnt@width& (0+255),b
 39358  011A46  D033               	goto	i2l19812
 39359  011A48                     i2l19804:
 39360                           
 39361                           ; BSR set to: 0
 39362  011A48  EE20 F002          	lfsr	2,2
 39363  011A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 39364  011A4E  26D9               	addwf	fsr2l,f,c
 39365  011A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 39366  011A52  22DA               	addwfc	fsr2h,f,c
 39367  011A54  50DE               	movf	postinc2,w,c
 39368  011A56  10DE               	iorwf	postinc2,w,c
 39369  011A58  10DE               	iorwf	postinc2,w,c
 39370  011A5A  B4D8               	btfsc	status,2,c
 39371  011A5C  D013               	goto	i2l19808
 39372                           
 39373                           ; BSR set to: 0
 39374  011A5E  EE20 F002          	lfsr	2,2
 39375  011A62  516C               	movf	i2__doprnt@pb& (0+255),w,b
 39376  011A64  26D9               	addwf	fsr2l,f,c
 39377  011A66  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 39378  011A68  22DA               	addwfc	fsr2h,f,c
 39379  011A6A  D801               	call	i2u2530_48
 39380  011A6C  D020               	goto	i2l19812
 39381  011A6E                     i2u2530_48:
 39382  011A6E  0005               	push	
 39383  011A70  6EFA               	movwf	pclath,c
 39384  011A72  50DE               	movf	postinc2,w,c
 39385  011A74  6EFD               	movwf	tosl,c
 39386  011A76  50DE               	movf	postinc2,w,c
 39387  011A78  6EFE               	movwf	tosh,c
 39388  011A7A  50DE               	movf	postinc2,w,c
 39389  011A7C  6EFF               	movwf	tosu,c
 39390  011A7E  50FA               	movf	pclath,w,c
 39391  011A80  0E20               	movlw	32
 39392  011A82  0012               	return		;indir
 39393  011A84                     i2l19808:
 39394                           
 39395                           ; BSR set to: 0
 39396  011A84  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 39397  011A88  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 39398  011A8C  CFDE F072          	movff	postinc2,??i2__doprnt
 39399  011A90  CFDD F073          	movff	postdec2,??i2__doprnt+1
 39400  011A94  C072  FFD9         	movff	??i2__doprnt,fsr2l
 39401  011A98  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 39402  011A9C  0E20               	movlw	32
 39403  011A9E  6EDF               	movwf	indf2,c
 39404                           
 39405                           ; BSR set to: 0
 39406  011AA0  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 39407  011AA4  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 39408  011AA8  2ADE               	incf	postinc2,f,c
 39409  011AAA  0E00               	movlw	0
 39410  011AAC  22DD               	addwfc	postdec2,f,c
 39411  011AAE                     i2l19812:
 39412  011AAE  0100               	movlb	0	; () banked
 39413  011AB0  079D               	decf	i2__doprnt@width& (0+255),f,b
 39414  011AB2  A0D8               	btfss	status,0,c
 39415  011AB4  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 39416  011AB6  299D               	incf	i2__doprnt@width& (0+255),w,b
 39417  011AB8  E1C7               	bnz	i2l19804
 39418  011ABA  299E               	incf	(i2__doprnt@width+1)& (0+255),w,b
 39419  011ABC  B4D8               	btfsc	status,2,c
 39420  011ABE  D05B               	goto	i2l19826
 39421  011AC0  D7C3               	goto	i2l19804
 39422  011AC2                     i2l19814:
 39423                           
 39424                           ; BSR set to: 0
 39425  011AC2  EE20 F002          	lfsr	2,2
 39426  011AC6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 39427  011AC8  26D9               	addwf	fsr2l,f,c
 39428  011ACA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 39429  011ACC  22DA               	addwfc	fsr2h,f,c
 39430  011ACE  50DE               	movf	postinc2,w,c
 39431  011AD0  10DE               	iorwf	postinc2,w,c
 39432  011AD2  10DE               	iorwf	postinc2,w,c
 39433  011AD4  B4D8               	btfsc	status,2,c
 39434  011AD6  D027               	goto	i2l19820
 39435                           
 39436                           ; BSR set to: 0
 39437  011AD8  EE20 F002          	lfsr	2,2
 39438  011ADC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 39439  011ADE  26D9               	addwf	fsr2l,f,c
 39440  011AE0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 39441  011AE2  22DA               	addwfc	fsr2h,f,c
 39442  011AE4  D801               	call	i2u2533_48
 39443  011AE6  D01B               	goto	i2u2533_49
 39444  011AE8                     i2u2533_48:
 39445  011AE8  0005               	push	
 39446  011AEA  6EFA               	movwf	pclath,c
 39447  011AEC  50DE               	movf	postinc2,w,c
 39448  011AEE  6EFD               	movwf	tosl,c
 39449  011AF0  50DE               	movf	postinc2,w,c
 39450  011AF2  6EFE               	movwf	tosh,c
 39451  011AF4  50DE               	movf	postinc2,w,c
 39452  011AF6  6EFF               	movwf	tosu,c
 39453  011AF8  50FA               	movf	pclath,w,c
 39454  011AFA  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 39455  011AFE  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 39456  011B02  0E00               	movlw	low (__mediumconst shr (0+16))
 39457  011B04  6EF8               	movwf	tblptru,c
 39458  011B06  0E0E               	movlw	(high __ramtop+-1)
 39459  011B08  64F7               	cpfsgt	tblptrh,c
 39460  011B0A  D003               	bra	i2u2534_47
 39461  011B0C  0008               	tblrd		*
 39462  011B0E  50F5               	movf	tablat,w,c
 39463  011B10  D005               	bra	i2u2534_40
 39464  011B12                     i2u2534_47:
 39465  011B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 39466  011B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 39467  011B1A  50EF               	movf	indf0,w,c
 39468  011B1C                     i2u2534_40:
 39469  011B1C  0012               	return		;indir
 39470  011B1E                     i2u2533_49:
 39471  011B1E  0100               	movlb	0	; () banked
 39472  011B20  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 39473  011B22  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 39474  011B24  D028               	goto	i2l19826
 39475  011B26                     i2l19820:
 39476                           
 39477                           ; BSR set to: 0
 39478  011B26  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 39479  011B2A  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 39480  011B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 39481  011B30  6EF8               	movwf	tblptru,c
 39482  011B32  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 39483  011B36  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 39484  011B3A  CFDE F072          	movff	postinc2,??i2__doprnt
 39485  011B3E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 39486  011B42  C072  FFD9         	movff	??i2__doprnt,fsr2l
 39487  011B46  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 39488  011B4A  0E0E               	movlw	(high __ramtop+-1)
 39489  011B4C  64F7               	cpfsgt	tblptrh,c
 39490  011B4E  D003               	bra	i2u2535_47
 39491  011B50  0008               	tblrd		*
 39492  011B52  50F5               	movf	tablat,w,c
 39493  011B54  D005               	bra	i2u2535_40
 39494  011B56                     i2u2535_47:
 39495  011B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 39496  011B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 39497  011B5E  50EF               	movf	indf0,w,c
 39498  011B60                     i2u2535_40:
 39499  011B60  6EDF               	movwf	indf2,c
 39500  011B62  0100               	movlb	0	; () banked
 39501  011B64  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 39502  011B66  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 39503                           
 39504                           ; BSR set to: 0
 39505  011B68  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 39506  011B6C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 39507  011B70  2ADE               	incf	postinc2,f,c
 39508  011B72  0E00               	movlw	0
 39509  011B74  22DD               	addwfc	postdec2,f,c
 39510  011B76                     i2l19826:
 39511                           
 39512                           ; BSR set to: 0
 39513  011B76  078D               	decf	i2__doprnt@len& (0+255),f,b
 39514  011B78  A0D8               	btfss	status,0,c
 39515  011B7A  078E               	decf	(i2__doprnt@len+1)& (0+255),f,b
 39516  011B7C  298D               	incf	i2__doprnt@len& (0+255),w,b
 39517  011B7E  E1A1               	bnz	i2l19814
 39518  011B80  298E               	incf	(i2__doprnt@len+1)& (0+255),w,b
 39519  011B82  B4D8               	btfsc	status,2,c
 39520  011B84  EFFB  F096         	goto	i2u2638_40
 39521  011B88  D79C               	goto	i2l19814
 39522  011B8A                     i2l19828:
 39523                           
 39524                           ; BSR set to: 0
 39525                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 39526  011B8A  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 39527  011B8E  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 39528  011B92  CFDF F072          	movff	indf2,??i2__doprnt
 39529  011B96  0E02               	movlw	2
 39530  011B98  26DE               	addwf	postinc2,f,c
 39531  011B9A  CFDF F073          	movff	indf2,??i2__doprnt+1
 39532  011B9E  0E00               	movlw	0
 39533  011BA0  22DD               	addwfc	postdec2,f,c
 39534  011BA2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 39535  011BA6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 39536  011BAA  50DF               	movf	indf2,w,c
 39537  011BAC  6FA3               	movwf	i2__doprnt@c& (0+255),b
 39538  011BAE                     i2l19830:
 39539                           
 39540                           ; BSR set to: 0
 39541                           ;doprnt.c: 824: cp = (char *)&c;
 39542  011BAE  0EA3               	movlw	low i2__doprnt@c
 39543  011BB0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 39544  011BB2  0E00               	movlw	high i2__doprnt@c
 39545  011BB4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 39546                           
 39547                           ; BSR set to: 0
 39548                           ;doprnt.c: 825: len = 1;
 39549  011BB6  0E00               	movlw	0
 39550  011BB8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 39551  011BBA  0E01               	movlw	1
 39552  011BBC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 39553                           
 39554                           ;doprnt.c: 826: goto dostring;
 39555  011BBE  D725               	goto	i2u2525_40
 39556  011BC0                     i2l19834:
 39557                           
 39558                           ; BSR set to: 0
 39559                           ;doprnt.c: 837: flag |= 0xC0;
 39560  011BC0  0EC0               	movlw	192
 39561  011BC2  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 39562                           
 39563                           ;doprnt.c: 838: break;
 39564  011BC4  D03B               	goto	i2l19840
 39565  011BC6                     i2l19838:
 39566  011BC6  0100               	movlb	0	; () banked
 39567  011BC8  516E               	movf	i2__doprnt@f& (0+255),w,b
 39568  011BCA  6F72               	movwf	??i2__doprnt& (0+255),b
 39569  011BCC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 39570  011BCE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 39571  011BD0  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 39572  011BD2  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 39573  011BD4  C072  FFF6         	movff	??i2__doprnt,tblptrl
 39574  011BD8  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 39575  011BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 39576  011BDE  6EF8               	movwf	tblptru,c
 39577  011BE0  0E0E               	movlw	(high __ramtop+-1)
 39578  011BE2  64F7               	cpfsgt	tblptrh,c
 39579  011BE4  D003               	bra	i2u2537_47
 39580  011BE6  0008               	tblrd		*
 39581  011BE8  50F5               	movf	tablat,w,c
 39582  011BEA  D005               	bra	i2u2537_40
 39583  011BEC                     i2u2537_47:
 39584  011BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 39585  011BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 39586  011BF4  50EF               	movf	indf0,w,c
 39587  011BF6                     i2u2537_40:
 39588  011BF6  0100               	movlb	0	; () banked
 39589  011BF8  6FA3               	movwf	i2__doprnt@c& (0+255),b
 39590  011BFA  51A3               	movf	i2__doprnt@c& (0+255),w,b
 39591                           
 39592                           ; Switch size 1, requested type "simple"
 39593                           ; Number of cases is 10, Range of values is 0 to 120
 39594                           ; switch strategies available:
 39595                           ; Name         Instructions Cycles
 39596                           ; simple_byte           31    16 (average)
 39597                           ;	Chosen strategy is simple_byte
 39598  011BFC  0A00               	xorlw	0	; case 0
 39599  011BFE  B4D8               	btfsc	status,2,c
 39600  011C00  EF19  F097         	goto	i2u2640_40
 39601  011C04  0A58               	xorlw	88	; case 88
 39602  011C06  B4D8               	btfsc	status,2,c
 39603  011C08  D6C0               	goto	i2l19778
 39604  011C0A  0A3B               	xorlw	59	; case 99
 39605  011C0C  B4D8               	btfsc	status,2,c
 39606  011C0E  D7BD               	goto	i2l19828
 39607  011C10  0A07               	xorlw	7	; case 100
 39608  011C12  B4D8               	btfsc	status,2,c
 39609  011C14  D013               	goto	i2l19840
 39610  011C16  0A02               	xorlw	2	; case 102
 39611  011C18  B4D8               	btfsc	status,2,c
 39612  011C1A  D6B5               	goto	i2l19776
 39613  011C1C  0A0F               	xorlw	15	; case 105
 39614  011C1E  B4D8               	btfsc	status,2,c
 39615  011C20  D00D               	goto	i2l19840
 39616  011C22  0A05               	xorlw	5	; case 108
 39617  011C24  B4D8               	btfsc	status,2,c
 39618  011C26  D6AD               	goto	i2l19774
 39619  011C28  0A1F               	xorlw	31	; case 115
 39620  011C2A  B4D8               	btfsc	status,2,c
 39621  011C2C  D6B0               	goto	i2l19780
 39622  011C2E  0A06               	xorlw	6	; case 117
 39623  011C30  B4D8               	btfsc	status,2,c
 39624  011C32  D7C6               	goto	i2l19834
 39625  011C34  0A0D               	xorlw	13	; case 120
 39626  011C36  B4D8               	btfsc	status,2,c
 39627  011C38  D6A8               	goto	i2l19778
 39628  011C3A  D7B9               	goto	i2l19830
 39629  011C3C                     i2l19840:
 39630                           
 39631                           ; BSR set to: 0
 39632                           ;doprnt.c: 844: if(flag & (0x700)) {
 39633  011C3C  0E07               	movlw	7
 39634  011C3E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 39635  011C40  B4D8               	btfsc	status,2,c
 39636  011C42  EF9C  F093         	goto	i2l20084
 39637                           
 39638                           ; BSR set to: 0
 39639                           ;doprnt.c: 846: if(flag & 0x1000)
 39640  011C46  A9A2               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 39641  011C48  D004               	goto	i2l19846
 39642                           
 39643                           ; BSR set to: 0
 39644                           ;doprnt.c: 848: prec = 6;
 39645  011C4A  0E00               	movlw	0
 39646  011C4C  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 39647  011C4E  0E06               	movlw	6
 39648  011C50  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 39649  011C52                     i2l19846:
 39650                           
 39651                           ; BSR set to: 0
 39652                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 39653  011C52  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 39654  011C56  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 39655  011C5A  CFDF F072          	movff	indf2,??i2__doprnt
 39656  011C5E  0E04               	movlw	4
 39657  011C60  26DE               	addwf	postinc2,f,c
 39658  011C62  CFDF F073          	movff	indf2,??i2__doprnt+1
 39659  011C66  0E00               	movlw	0
 39660  011C68  22DD               	addwfc	postdec2,f,c
 39661  011C6A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 39662  011C6E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 39663  011C72  CFDE F095          	movff	postinc2,i2__doprnt@fval
 39664  011C76  CFDE F096          	movff	postinc2,i2__doprnt@fval+1
 39665  011C7A  CFDE F097          	movff	postinc2,i2__doprnt@fval+2
 39666  011C7E  CFDE F098          	movff	postinc2,i2__doprnt@fval+3
 39667                           
 39668                           ; BSR set to: 0
 39669                           ;doprnt.c: 850: if(fval < 0.0) {
 39670  011C82  AF98               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 39671  011C84  D015               	goto	i2l19854
 39672                           
 39673                           ; BSR set to: 0
 39674                           ;doprnt.c: 851: fval = -fval;
 39675  011C86  C095  F001         	movff	i2__doprnt@fval,i2___flneg@f1
 39676  011C8A  C096  F002         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 39677  011C8E  C097  F003         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 39678  011C92  C098  F004         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 39679  011C96  EC4B  F0DD         	call	i2___flneg
 39680  011C9A  C001  F095         	movff	?i2___flneg,i2__doprnt@fval
 39681  011C9E  C002  F096         	movff	?i2___flneg+1,i2__doprnt@fval+1
 39682  011CA2  C003  F097         	movff	?i2___flneg+2,i2__doprnt@fval+2
 39683  011CA6  C004  F098         	movff	?i2___flneg+3,i2__doprnt@fval+3
 39684                           
 39685                           ;doprnt.c: 852: flag |= 0x03;
 39686  011CAA  0E03               	movlw	3
 39687  011CAC  0100               	movlb	0	; () banked
 39688  011CAE  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 39689  011CB0                     i2l19854:
 39690                           
 39691                           ; BSR set to: 0
 39692                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 39693  011CB0  0E00               	movlw	0
 39694  011CB2  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 39695  011CB4  0E00               	movlw	0
 39696  011CB6  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;doprnt.c: 855: if( fval!=0) {
 39700  011CB8  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 39701  011CBC  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 39702  011CC0  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 39703  011CC4  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 39704  011CC8  0E00               	movlw	0
 39705  011CCA  6E05               	movwf	i2___fleq@ff2,c
 39706  011CCC  0E00               	movlw	0
 39707  011CCE  6E06               	movwf	i2___fleq@ff2+1,c
 39708  011CD0  0E00               	movlw	0
 39709  011CD2  6E07               	movwf	i2___fleq@ff2+2,c
 39710  011CD4  0E00               	movlw	0
 39711  011CD6  6E08               	movwf	i2___fleq@ff2+3,c
 39712  011CD8  EC33  F0D4         	call	i2___fleq	;wreg free
 39713  011CDC  B0D8               	btfsc	status,0,c
 39714  011CDE  D083               	goto	i2l19882
 39715                           
 39716                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 39717  011CE0  0100               	movlb	0	; () banked
 39718  011CE2  3597               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 39719  011CE4  3598               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 39720  011CE6  0F82               	addlw	130
 39721  011CE8  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 39722  011CEA  6B90               	clrf	(i2__doprnt@eexp+1)& (0+255),b
 39723  011CEC  0EFF               	movlw	255
 39724  011CEE  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 39725                           
 39726                           ; BSR set to: 0
 39727                           ;doprnt.c: 857: eexp--;
 39728  011CF0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 39729  011CF2  A0D8               	btfss	status,0,c
 39730  011CF4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 39731                           
 39732                           ; BSR set to: 0
 39733                           ;doprnt.c: 858: eexp *= 3;
 39734  011CF6  C08F  F001         	movff	i2__doprnt@eexp,i2___wmul@multiplier
 39735  011CFA  C090  F002         	movff	i2__doprnt@eexp+1,i2___wmul@multiplier+1
 39736  011CFE  0E00               	movlw	0
 39737  011D00  6E04               	movwf	i2___wmul@multiplicand+1,c
 39738  011D02  0E03               	movlw	3
 39739  011D04  6E03               	movwf	i2___wmul@multiplicand,c
 39740  011D06  EC18  F0DE         	call	i2___wmul	;wreg free
 39741  011D0A  C001  F08F         	movff	?i2___wmul,i2__doprnt@eexp
 39742  011D0E  C002  F090         	movff	?i2___wmul+1,i2__doprnt@eexp+1
 39743                           
 39744                           ;doprnt.c: 859: eexp /= 10;
 39745  011D12  C08F  F007         	movff	i2__doprnt@eexp,i2___awdiv@dividend
 39746  011D16  C090  F008         	movff	i2__doprnt@eexp+1,i2___awdiv@dividend+1
 39747  011D1A  0E00               	movlw	0
 39748  011D1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 39749  011D1E  0E0A               	movlw	10
 39750  011D20  6E09               	movwf	i2___awdiv@divisor,c
 39751  011D22  ECFD  F0D4         	call	i2___awdiv	;wreg free
 39752  011D26  C007  F08F         	movff	?i2___awdiv,i2__doprnt@eexp
 39753  011D2A  C008  F090         	movff	?i2___awdiv+1,i2__doprnt@eexp+1
 39754                           
 39755                           ;doprnt.c: 860: if(eexp < 0)
 39756  011D2E  0100               	movlb	0	; () banked
 39757  011D30  AF90               	btfss	(i2__doprnt@eexp+1)& (0+255),7,b
 39758  011D32  D003               	goto	i2l19870
 39759                           
 39760                           ; BSR set to: 0
 39761                           ;doprnt.c: 861: eexp--;
 39762  011D34  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 39763  011D36  A0D8               	btfss	status,0,c
 39764  011D38  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 39765  011D3A                     i2l19870:
 39766                           
 39767                           ; BSR set to: 0
 39768                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 39769  011D3A  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 39770  011D3C  0800               	sublw	0
 39771  011D3E  EC06  F0AB         	call	i2_scale
 39772  011D42  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 39773  011D46  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 39774  011D4A  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 39775  011D4E  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 39776                           
 39777                           ;doprnt.c: 866: tmpval.integ *= fval;
 39778  011D52  C091  F02C         	movff	i2__doprnt@tmpval,i2___flmul@b
 39779  011D56  C092  F02D         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 39780  011D5A  C093  F02E         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 39781  011D5E  C094  F02F         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 39782  011D62  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 39783  011D66  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 39784  011D6A  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 39785  011D6E  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 39786  011D72  ECFC  F0B3         	call	i2___flmul	;wreg free
 39787  011D76  C02C  F091         	movff	?i2___flmul,i2__doprnt@tmpval
 39788  011D7A  C02D  F092         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 39789  011D7E  C02E  F093         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 39790  011D82  C02F  F094         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 39791                           
 39792                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 39793  011D86  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 39794  011D8A  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 39795  011D8E  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 39796  011D92  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 39797  011D96  0E00               	movlw	0
 39798  011D98  6E05               	movwf	i2___flge@ff2,c
 39799  011D9A  0E00               	movlw	0
 39800  011D9C  6E06               	movwf	i2___flge@ff2+1,c
 39801  011D9E  0E80               	movlw	128
 39802  011DA0  6E07               	movwf	i2___flge@ff2+2,c
 39803  011DA2  0E3F               	movlw	63
 39804  011DA4  6E08               	movwf	i2___flge@ff2+3,c
 39805  011DA6  ECDD  F0CE         	call	i2___flge	;wreg free
 39806  011DAA  B0D8               	btfsc	status,0,c
 39807  011DAC  D005               	goto	i2l19878
 39808                           
 39809                           ;doprnt.c: 868: eexp--;
 39810  011DAE  0100               	movlb	0	; () banked
 39811  011DB0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 39812  011DB2  A0D8               	btfss	status,0,c
 39813  011DB4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 39814  011DB6  D017               	goto	i2l19882
 39815  011DB8                     i2l19878:
 39816                           
 39817                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 39818  011DB8  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 39819  011DBC  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 39820  011DC0  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 39821  011DC4  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 39822  011DC8  0E00               	movlw	0
 39823  011DCA  6E05               	movwf	i2___flge@ff2,c
 39824  011DCC  0E00               	movlw	0
 39825  011DCE  6E06               	movwf	i2___flge@ff2+1,c
 39826  011DD0  0E20               	movlw	32
 39827  011DD2  6E07               	movwf	i2___flge@ff2+2,c
 39828  011DD4  0E41               	movlw	65
 39829  011DD6  6E08               	movwf	i2___flge@ff2+3,c
 39830  011DD8  ECDD  F0CE         	call	i2___flge	;wreg free
 39831  011DDC  A0D8               	btfss	status,0,c
 39832  011DDE  D003               	goto	i2l19882
 39833                           
 39834                           ;doprnt.c: 870: eexp++;
 39835  011DE0  0100               	movlb	0	; () banked
 39836  011DE2  4B8F               	infsnz	i2__doprnt@eexp& (0+255),f,b
 39837  011DE4  2B90               	incf	(i2__doprnt@eexp+1)& (0+255),f,b
 39838  011DE6                     i2l19882:
 39839                           
 39840                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 39841  011DE6  0100               	movlb	0	; () banked
 39842  011DE8  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 39843  011DEA  D006               	goto	i2u2545_40
 39844  011DEC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 39845  011DEE  E121               	bnz	i2l19886
 39846  011DF0  0E0D               	movlw	13
 39847  011DF2  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 39848  011DF4  B0D8               	btfsc	status,0,c
 39849  011DF6  D01D               	goto	i2l19886
 39850  011DF8                     i2u2545_40:
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 39854  011DF8  C095  F052         	movff	i2__doprnt@fval,i2___fladd@b
 39855  011DFC  C096  F053         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 39856  011E00  C097  F054         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 39857  011E04  C098  F055         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 39858  011E08  519F               	movf	i2__doprnt@prec& (0+255),w,b
 39859  011E0A  EC9B  F0BB         	call	i2_fround
 39860  011E0E  C045  F056         	movff	?i2_fround,i2___fladd@a
 39861  011E12  C046  F057         	movff	?i2_fround+1,i2___fladd@a+1
 39862  011E16  C047  F058         	movff	?i2_fround+2,i2___fladd@a+2
 39863  011E1A  C048  F059         	movff	?i2_fround+3,i2___fladd@a+3
 39864  011E1E  ECB3  F0B8         	call	i2___fladd	;wreg free
 39865  011E22  C052  F095         	movff	?i2___fladd,i2__doprnt@fval
 39866  011E26  C053  F096         	movff	?i2___fladd+1,i2__doprnt@fval+1
 39867  011E2A  C054  F097         	movff	?i2___fladd+2,i2__doprnt@fval+2
 39868  011E2E  C055  F098         	movff	?i2___fladd+3,i2__doprnt@fval+3
 39869  011E32                     i2l19886:
 39870                           
 39871                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 39872  011E32  0100               	movlb	0	; () banked
 39873  011E34  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 39874  011E36  D006               	goto	i2u2546_40
 39875  011E38  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 39876  011E3A  E131               	bnz	i2l19894
 39877  011E3C  0E0A               	movlw	10
 39878  011E3E  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 39879  011E40  B0D8               	btfsc	status,0,c
 39880  011E42  D02D               	goto	i2u2549_40
 39881  011E44                     i2u2546_40:
 39882                           
 39883                           ; BSR set to: 0
 39884  011E44  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 39885  011E48  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 39886  011E4C  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 39887  011E50  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 39888  011E54  0E00               	movlw	0
 39889  011E56  6E05               	movwf	i2___fleq@ff2,c
 39890  011E58  0E00               	movlw	0
 39891  011E5A  6E06               	movwf	i2___fleq@ff2+1,c
 39892  011E5C  0E00               	movlw	0
 39893  011E5E  6E07               	movwf	i2___fleq@ff2+2,c
 39894  011E60  0E00               	movlw	0
 39895  011E62  6E08               	movwf	i2___fleq@ff2+3,c
 39896  011E64  EC33  F0D4         	call	i2___fleq	;wreg free
 39897  011E68  B0D8               	btfsc	status,0,c
 39898  011E6A  D064               	goto	i2l19908
 39899  011E6C  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 39900  011E70  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 39901  011E74  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 39902  011E78  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 39903  011E7C  ECD0  F0D0         	call	i2___fltol	;wreg free
 39904  011E80  504E               	movf	?i2___fltol,w,c
 39905  011E82  104F               	iorwf	?i2___fltol+1,w,c
 39906  011E84  1050               	iorwf	?i2___fltol+2,w,c
 39907  011E86  1051               	iorwf	?i2___fltol+3,w,c
 39908  011E88  A4D8               	btfss	status,2,c
 39909  011E8A  D054               	goto	i2l19908
 39910  011E8C  0100               	movlb	0	; () banked
 39911  011E8E  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 39912  011E90  D051               	goto	i2l19908
 39913  011E92  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 39914  011E94  E104               	bnz	i2u2549_40
 39915  011E96  0E02               	movlw	2
 39916  011E98  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 39917  011E9A  A0D8               	btfss	status,0,c
 39918  011E9C  D04B               	goto	i2l19908
 39919  011E9E                     i2u2549_40:
 39920  011E9E                     i2l19894:
 39921                           
 39922                           ; BSR set to: 0
 39923                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 39924  011E9E  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 39925  011EA2  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 39926  011EA6  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 39927  011EAA  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 39928  011EAE  0E5F               	movlw	95
 39929  011EB0  6E05               	movwf	i2___flge@ff2,c
 39930  011EB2  0E70               	movlw	112
 39931  011EB4  6E06               	movwf	i2___flge@ff2+1,c
 39932  011EB6  0E89               	movlw	137
 39933  011EB8  6E07               	movwf	i2___flge@ff2+2,c
 39934  011EBA  0E40               	movlw	64
 39935  011EBC  6E08               	movwf	i2___flge@ff2+3,c
 39936  011EBE  ECDD  F0CE         	call	i2___flge	;wreg free
 39937  011EC2  B0D8               	btfsc	status,0,c
 39938  011EC4  D003               	goto	i2l19898
 39939                           
 39940                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 39941  011EC6  0100               	movlb	0	; () banked
 39942  011EC8  0EF7               	movlw	247
 39943  011ECA  D002               	goto	L34
 39944  011ECC                     i2l19898:
 39945                           
 39946                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 39947  011ECC  0100               	movlb	0	; () banked
 39948  011ECE  0EF8               	movlw	248
 39949  011ED0                     L34:
 39950  011ED0  278F               	addwf	i2__doprnt@eexp& (0+255),f,b
 39951  011ED2  0EFF               	movlw	255
 39952  011ED4  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 39953                           
 39954                           ; BSR set to: 0
 39955                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 39956  011ED6  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 39957  011ED8  EC06  F0AB         	call	i2_scale
 39958  011EDC  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 39959  011EE0  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 39960  011EE4  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 39961  011EE8  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 39962  011EEC  C095  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 39963  011EF0  C096  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 39964  011EF4  C097  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 39965  011EF8  C098  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 39966  011EFC  C091  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 39967  011F00  C092  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 39968  011F04  C093  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 39969  011F08  C094  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 39970  011F0C  EC82  F0CD         	call	i2__div_to_l_	;wreg free
 39971  011F10  C001  F099         	movff	?i2__div_to_l_,i2__doprnt@val
 39972  011F14  C002  F09A         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 39973  011F18  C003  F09B         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 39974  011F1C  C004  F09C         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 39975                           
 39976                           ;doprnt.c: 1148: fval = 0.0;
 39977  011F20  0E00               	movlw	0
 39978  011F22  0100               	movlb	0	; () banked
 39979  011F24  6F95               	movwf	i2__doprnt@fval& (0+255),b
 39980  011F26  0E00               	movlw	0
 39981  011F28  6F96               	movwf	(i2__doprnt@fval+1)& (0+255),b
 39982  011F2A  0E00               	movlw	0
 39983  011F2C  6F97               	movwf	(i2__doprnt@fval+2)& (0+255),b
 39984  011F2E  0E00               	movlw	0
 39985  011F30  6F98               	movwf	(i2__doprnt@fval+3)& (0+255),b
 39986                           
 39987                           ;doprnt.c: 1149: } else {
 39988  011F32  D03C               	goto	i2l19912
 39989  011F34                     i2l19908:
 39990                           
 39991                           ;doprnt.c: 1150: val = (unsigned long)fval;
 39992  011F34  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 39993  011F38  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 39994  011F3C  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 39995  011F40  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 39996  011F44  ECD0  F0D0         	call	i2___fltol	;wreg free
 39997  011F48  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 39998  011F4C  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 39999  011F50  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 40000  011F54  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 40001                           
 40002                           ;doprnt.c: 1151: fval -= (double)val;
 40003  011F58  C095  F064         	movff	i2__doprnt@fval,i2___flsub@b
 40004  011F5C  C096  F065         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 40005  011F60  C097  F066         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 40006  011F64  C098  F067         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 40007  011F68  C099  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 40008  011F6C  C09A  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 40009  011F70  C09B  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 40010  011F74  C09C  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 40011  011F78  0E00               	movlw	0
 40012  011F7A  EC5D  F0CA         	call	i2___xxtofl
 40013  011F7E  C005  F068         	movff	?i2___xxtofl,i2___flsub@a
 40014  011F82  C006  F069         	movff	?i2___xxtofl+1,i2___flsub@a+1
 40015  011F86  C007  F06A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 40016  011F8A  C008  F06B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 40017  011F8E  ECB5  F0D9         	call	i2___flsub	;wreg free
 40018  011F92  C064  F095         	movff	?i2___flsub,i2__doprnt@fval
 40019  011F96  C065  F096         	movff	?i2___flsub+1,i2__doprnt@fval+1
 40020  011F9A  C066  F097         	movff	?i2___flsub+2,i2__doprnt@fval+2
 40021  011F9E  C067  F098         	movff	?i2___flsub+3,i2__doprnt@fval+3
 40022                           
 40023                           ;doprnt.c: 1152: eexp = 0;
 40024  011FA2  0E00               	movlw	0
 40025  011FA4  0100               	movlb	0	; () banked
 40026  011FA6  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 40027  011FA8  0E00               	movlw	0
 40028  011FAA  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 40029  011FAC                     i2l19912:
 40030                           
 40031                           ; BSR set to: 0
 40032                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 40033  011FAC  0E01               	movlw	1
 40034  011FAE  6FA3               	movwf	i2__doprnt@c& (0+255),b
 40035  011FB0                     i2l19918:
 40036                           
 40037                           ; BSR set to: 0
 40038                           ;doprnt.c: 1156: if(val < dpowers[c])
 40039  011FB0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40040  011FB2  0D04               	mullw	4
 40041  011FB4  0E1F               	movlw	low _dpowers
 40042  011FB6  24F3               	addwf	prodl,w,c
 40043  011FB8  6EF6               	movwf	tblptrl,c
 40044  011FBA  0EEA               	movlw	high _dpowers
 40045  011FBC  20F4               	addwfc	prodh,w,c
 40046  011FBE  6EF7               	movwf	tblptrh,c
 40047  011FC0                     	if	1	;There are 3 active tblptr bytes
 40048  011FC0  6AF8               	clrf	tblptru,c
 40049  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 40050  011FC4  22F8               	addwfc	tblptru,f,c
 40051  011FC6                     	endif
 40052  011FC6  0009               	tblrd		*+
 40053  011FC8  50F5               	movf	tablat,w,c
 40054  011FCA  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 40055  011FCC  0009               	tblrd		*+
 40056  011FCE  50F5               	movf	tablat,w,c
 40057  011FD0  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 40058  011FD2  0009               	tblrd		*+
 40059  011FD4  50F5               	movf	tablat,w,c
 40060  011FD6  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 40061  011FD8  0009               	tblrd		*+
 40062  011FDA  50F5               	movf	tablat,w,c
 40063  011FDC  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 40064  011FDE  A0D8               	btfss	status,0,c
 40065  011FE0  D005               	goto	i2u2552_40
 40066                           
 40067                           ; BSR set to: 0
 40068  011FE2  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 40069                           
 40070                           ; BSR set to: 0
 40071  011FE4  0E0A               	movlw	10
 40072  011FE6  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 40073  011FE8  A4D8               	btfss	status,2,c
 40074  011FEA  D7E2               	goto	i2l19918
 40075  011FEC                     i2u2552_40:
 40076                           
 40077                           ; BSR set to: 0
 40078                           ;doprnt.c: 1161: width -= prec + c + eexp;
 40079  011FEC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40080  011FEE  259F               	addwf	i2__doprnt@prec& (0+255),w,b
 40081  011FF0  6F72               	movwf	??i2__doprnt& (0+255),b
 40082  011FF2  0E00               	movlw	0
 40083  011FF4  21A0               	addwfc	(i2__doprnt@prec+1)& (0+255),w,b
 40084  011FF6  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40085  011FF8  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 40086  011FFA  2772               	addwf	??i2__doprnt& (0+255),f,b
 40087  011FFC  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 40088  011FFE  2373               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 40089  012000  5172               	movf	??i2__doprnt& (0+255),w,b
 40090  012002  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 40091  012004  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 40092  012006  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 40093                           
 40094                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 40095  012008  519F               	movf	i2__doprnt@prec& (0+255),w,b
 40096  01200A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 40097  01200C  B4D8               	btfsc	status,2,c
 40098  01200E  D003               	goto	i2l19930
 40099                           
 40100                           ; BSR set to: 0
 40101                           ;doprnt.c: 1167: width--;
 40102  012010  079D               	decf	i2__doprnt@width& (0+255),f,b
 40103  012012  A0D8               	btfss	status,0,c
 40104  012014  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40105  012016                     i2l19930:
 40106                           
 40107                           ; BSR set to: 0
 40108                           ;doprnt.c: 1168: if(flag & 0x03)
 40109  012016  0E03               	movlw	3
 40110  012018  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 40111  01201A  6F72               	movwf	??i2__doprnt& (0+255),b
 40112  01201C  0E00               	movlw	0
 40113  01201E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 40114  012020  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40115  012022  5172               	movf	??i2__doprnt& (0+255),w,b
 40116  012024  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 40117  012026  B4D8               	btfsc	status,2,c
 40118  012028  D003               	goto	i2l19934
 40119                           
 40120                           ; BSR set to: 0
 40121                           ;doprnt.c: 1169: width--;
 40122  01202A  079D               	decf	i2__doprnt@width& (0+255),f,b
 40123  01202C  A0D8               	btfss	status,0,c
 40124  01202E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40125  012030                     i2l19934:
 40126                           
 40127                           ; BSR set to: 0
 40128                           ;doprnt.c: 1172: if(flag & 0x04) {
 40129  012030  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 40130  012032  D0F0               	goto	i2l19986
 40131                           
 40132                           ; BSR set to: 0
 40133                           ;doprnt.c: 1174: if(flag & 0x02)
 40134  012034  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 40135  012036  D041               	goto	i2l2393
 40136                           
 40137                           ; BSR set to: 0
 40138  012038  EE20 F002          	lfsr	2,2
 40139  01203C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40140  01203E  26D9               	addwf	fsr2l,f,c
 40141  012040  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40142  012042  22DA               	addwfc	fsr2h,f,c
 40143  012044  50DE               	movf	postinc2,w,c
 40144  012046  10DE               	iorwf	postinc2,w,c
 40145  012048  10DE               	iorwf	postinc2,w,c
 40146  01204A  B4D8               	btfsc	status,2,c
 40147  01204C  D01D               	goto	i2l2395
 40148                           
 40149                           ; BSR set to: 0
 40150  01204E  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 40151  012050  D004               	goto	i2l19944
 40152                           
 40153                           ; BSR set to: 0
 40154  012052  0E00               	movlw	0
 40155  012054  6F7C               	movwf	(i2__doprnt$4883+1)& (0+255),b
 40156  012056  0E2B               	movlw	43
 40157  012058  D003               	goto	L35
 40158  01205A                     i2l19944:
 40159                           
 40160                           ; BSR set to: 0
 40161  01205A  0E00               	movlw	0
 40162  01205C  6F7C               	movwf	(i2__doprnt$4883+1)& (0+255),b
 40163  01205E  0E2D               	movlw	45
 40164  012060                     L35:
 40165  012060  6F7B               	movwf	i2__doprnt$4883& (0+255),b
 40166                           
 40167                           ; BSR set to: 0
 40168  012062  EE20 F002          	lfsr	2,2
 40169  012066  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40170  012068  26D9               	addwf	fsr2l,f,c
 40171  01206A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40172  01206C  22DA               	addwfc	fsr2h,f,c
 40173  01206E  D801               	call	i2u2559_48
 40174  012070  D091               	goto	i2l19974
 40175  012072                     i2u2559_48:
 40176  012072  0005               	push	
 40177  012074  6EFA               	movwf	pclath,c
 40178  012076  50DE               	movf	postinc2,w,c
 40179  012078  6EFD               	movwf	tosl,c
 40180  01207A  50DE               	movf	postinc2,w,c
 40181  01207C  6EFE               	movwf	tosh,c
 40182  01207E  50DE               	movf	postinc2,w,c
 40183  012080  6EFF               	movwf	tosu,c
 40184  012082  50FA               	movf	pclath,w,c
 40185  012084  517B               	movf	i2__doprnt$4883& (0+255),w,b
 40186  012086  0012               	return		;indir
 40187  012088                     i2l2395:
 40188                           
 40189                           ; BSR set to: 0
 40190  012088  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 40191  01208A  D004               	goto	i2l19950
 40192                           
 40193                           ; BSR set to: 0
 40194  01208C  0E00               	movlw	0
 40195  01208E  6F7E               	movwf	(i2__doprnt$4884+1)& (0+255),b
 40196  012090  0E2B               	movlw	43
 40197  012092  D003               	goto	L36
 40198  012094                     i2l19950:
 40199                           
 40200                           ; BSR set to: 0
 40201  012094  0E00               	movlw	0
 40202  012096  6F7E               	movwf	(i2__doprnt$4884+1)& (0+255),b
 40203  012098  0E2D               	movlw	45
 40204  01209A                     L36:
 40205  01209A  6F7D               	movwf	i2__doprnt$4884& (0+255),b
 40206                           
 40207                           ; BSR set to: 0
 40208  01209C  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40209  0120A0  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40210  0120A4  CFDE F072          	movff	postinc2,??i2__doprnt
 40211  0120A8  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40212  0120AC  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40213  0120B0  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40214  0120B4  C07D  FFDF         	movff	i2__doprnt$4884,indf2
 40215  0120B8  D02E               	goto	i2l19962
 40216  0120BA                     i2l2393:
 40217                           
 40218                           ; BSR set to: 0
 40219                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 40220  0120BA  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 40221  0120BC  D06B               	goto	i2l19974
 40222                           
 40223                           ; BSR set to: 0
 40224  0120BE  EE20 F002          	lfsr	2,2
 40225  0120C2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40226  0120C4  26D9               	addwf	fsr2l,f,c
 40227  0120C6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40228  0120C8  22DA               	addwfc	fsr2h,f,c
 40229  0120CA  50DE               	movf	postinc2,w,c
 40230  0120CC  10DE               	iorwf	postinc2,w,c
 40231  0120CE  10DE               	iorwf	postinc2,w,c
 40232  0120D0  B4D8               	btfsc	status,2,c
 40233  0120D2  D013               	goto	i2l19960
 40234                           
 40235                           ; BSR set to: 0
 40236  0120D4  EE20 F002          	lfsr	2,2
 40237  0120D8  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40238  0120DA  26D9               	addwf	fsr2l,f,c
 40239  0120DC  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40240  0120DE  22DA               	addwfc	fsr2h,f,c
 40241  0120E0  D801               	call	i2u2563_48
 40242  0120E2  D058               	goto	i2l19974
 40243  0120E4                     i2u2563_48:
 40244  0120E4  0005               	push	
 40245  0120E6  6EFA               	movwf	pclath,c
 40246  0120E8  50DE               	movf	postinc2,w,c
 40247  0120EA  6EFD               	movwf	tosl,c
 40248  0120EC  50DE               	movf	postinc2,w,c
 40249  0120EE  6EFE               	movwf	tosh,c
 40250  0120F0  50DE               	movf	postinc2,w,c
 40251  0120F2  6EFF               	movwf	tosu,c
 40252  0120F4  50FA               	movf	pclath,w,c
 40253  0120F6  0E20               	movlw	32
 40254  0120F8  0012               	return		;indir
 40255  0120FA                     i2l19960:
 40256                           
 40257                           ; BSR set to: 0
 40258  0120FA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40259  0120FE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40260  012102  CFDE F072          	movff	postinc2,??i2__doprnt
 40261  012106  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40262  01210A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40263  01210E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40264  012112  0E20               	movlw	32
 40265  012114  6EDF               	movwf	indf2,c
 40266  012116                     i2l19962:
 40267                           
 40268                           ; BSR set to: 0
 40269  012116  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40270  01211A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40271  01211E  2ADE               	incf	postinc2,f,c
 40272  012120  0E00               	movlw	0
 40273  012122  22DD               	addwfc	postdec2,f,c
 40274  012124  D037               	goto	i2l19974
 40275  012126                     i2l19964:
 40276                           
 40277                           ; BSR set to: 0
 40278  012126  EE20 F002          	lfsr	2,2
 40279  01212A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40280  01212C  26D9               	addwf	fsr2l,f,c
 40281  01212E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40282  012130  22DA               	addwfc	fsr2h,f,c
 40283  012132  50DE               	movf	postinc2,w,c
 40284  012134  10DE               	iorwf	postinc2,w,c
 40285  012136  10DE               	iorwf	postinc2,w,c
 40286  012138  B4D8               	btfsc	status,2,c
 40287  01213A  D013               	goto	i2l19968
 40288                           
 40289                           ; BSR set to: 0
 40290  01213C  EE20 F002          	lfsr	2,2
 40291  012140  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40292  012142  26D9               	addwf	fsr2l,f,c
 40293  012144  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40294  012146  22DA               	addwfc	fsr2h,f,c
 40295  012148  D801               	call	i2u2565_48
 40296  01214A  D020               	goto	i2l19972
 40297  01214C                     i2u2565_48:
 40298  01214C  0005               	push	
 40299  01214E  6EFA               	movwf	pclath,c
 40300  012150  50DE               	movf	postinc2,w,c
 40301  012152  6EFD               	movwf	tosl,c
 40302  012154  50DE               	movf	postinc2,w,c
 40303  012156  6EFE               	movwf	tosh,c
 40304  012158  50DE               	movf	postinc2,w,c
 40305  01215A  6EFF               	movwf	tosu,c
 40306  01215C  50FA               	movf	pclath,w,c
 40307  01215E  0E30               	movlw	48
 40308  012160  0012               	return		;indir
 40309  012162                     i2l19968:
 40310                           
 40311                           ; BSR set to: 0
 40312  012162  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40313  012166  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40314  01216A  CFDE F072          	movff	postinc2,??i2__doprnt
 40315  01216E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40316  012172  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40317  012176  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40318  01217A  0E30               	movlw	48
 40319  01217C  6EDF               	movwf	indf2,c
 40320                           
 40321                           ; BSR set to: 0
 40322  01217E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40323  012182  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40324  012186  2ADE               	incf	postinc2,f,c
 40325  012188  0E00               	movlw	0
 40326  01218A  22DD               	addwfc	postdec2,f,c
 40327  01218C                     i2l19972:
 40328                           
 40329                           ;doprnt.c: 1189: width--;
 40330  01218C  0100               	movlb	0	; () banked
 40331  01218E  079D               	decf	i2__doprnt@width& (0+255),f,b
 40332  012190  A0D8               	btfss	status,0,c
 40333  012192  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40334  012194                     i2l19974:
 40335  012194  0100               	movlb	0	; () banked
 40336  012196  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 40337  012198  D12E               	goto	i2l20024
 40338  01219A  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 40339  01219C  E1C4               	bnz	i2l19964
 40340  01219E  059D               	decf	i2__doprnt@width& (0+255),w,b
 40341  0121A0  A0D8               	btfss	status,0,c
 40342  0121A2  D129               	goto	i2l20024
 40343  0121A4  D7C0               	goto	i2l19964
 40344  0121A6                     i2l19976:
 40345                           
 40346                           ; BSR set to: 0
 40347  0121A6  EE20 F002          	lfsr	2,2
 40348  0121AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40349  0121AC  26D9               	addwf	fsr2l,f,c
 40350  0121AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40351  0121B0  22DA               	addwfc	fsr2h,f,c
 40352  0121B2  50DE               	movf	postinc2,w,c
 40353  0121B4  10DE               	iorwf	postinc2,w,c
 40354  0121B6  10DE               	iorwf	postinc2,w,c
 40355  0121B8  B4D8               	btfsc	status,2,c
 40356  0121BA  D013               	goto	i2l19980
 40357                           
 40358                           ; BSR set to: 0
 40359  0121BC  EE20 F002          	lfsr	2,2
 40360  0121C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40361  0121C2  26D9               	addwf	fsr2l,f,c
 40362  0121C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40363  0121C6  22DA               	addwfc	fsr2h,f,c
 40364  0121C8  D801               	call	i2u2568_48
 40365  0121CA  D020               	goto	i2l19984
 40366  0121CC                     i2u2568_48:
 40367  0121CC  0005               	push	
 40368  0121CE  6EFA               	movwf	pclath,c
 40369  0121D0  50DE               	movf	postinc2,w,c
 40370  0121D2  6EFD               	movwf	tosl,c
 40371  0121D4  50DE               	movf	postinc2,w,c
 40372  0121D6  6EFE               	movwf	tosh,c
 40373  0121D8  50DE               	movf	postinc2,w,c
 40374  0121DA  6EFF               	movwf	tosu,c
 40375  0121DC  50FA               	movf	pclath,w,c
 40376  0121DE  0E20               	movlw	32
 40377  0121E0  0012               	return		;indir
 40378  0121E2                     i2l19980:
 40379                           
 40380                           ; BSR set to: 0
 40381  0121E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40382  0121E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40383  0121EA  CFDE F072          	movff	postinc2,??i2__doprnt
 40384  0121EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40385  0121F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40386  0121F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40387  0121FA  0E20               	movlw	32
 40388  0121FC  6EDF               	movwf	indf2,c
 40389                           
 40390                           ; BSR set to: 0
 40391  0121FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40392  012202  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40393  012206  2ADE               	incf	postinc2,f,c
 40394  012208  0E00               	movlw	0
 40395  01220A  22DD               	addwfc	postdec2,f,c
 40396  01220C                     i2l19984:
 40397                           
 40398                           ;doprnt.c: 1201: width--;
 40399  01220C  0100               	movlb	0	; () banked
 40400  01220E  079D               	decf	i2__doprnt@width& (0+255),f,b
 40401  012210  A0D8               	btfss	status,0,c
 40402  012212  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40403  012214                     i2l19986:
 40404                           
 40405                           ; BSR set to: 0
 40406  012214  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 40407  012216  D005               	goto	i2u2569_40
 40408  012218  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 40409  01221A  E1C5               	bnz	i2l19976
 40410  01221C  059D               	decf	i2__doprnt@width& (0+255),w,b
 40411  01221E  B0D8               	btfsc	status,0,c
 40412  012220  D7C2               	goto	i2l19976
 40413  012222                     i2u2569_40:
 40414                           
 40415                           ; BSR set to: 0
 40416                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 40417  012222  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 40418  012224  D041               	goto	i2l2427
 40419                           
 40420                           ; BSR set to: 0
 40421  012226  EE20 F002          	lfsr	2,2
 40422  01222A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40423  01222C  26D9               	addwf	fsr2l,f,c
 40424  01222E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40425  012230  22DA               	addwfc	fsr2h,f,c
 40426  012232  50DE               	movf	postinc2,w,c
 40427  012234  10DE               	iorwf	postinc2,w,c
 40428  012236  10DE               	iorwf	postinc2,w,c
 40429  012238  B4D8               	btfsc	status,2,c
 40430  01223A  D01D               	goto	i2l2429
 40431                           
 40432                           ; BSR set to: 0
 40433  01223C  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 40434  01223E  D004               	goto	i2l19994
 40435                           
 40436                           ; BSR set to: 0
 40437  012240  0E00               	movlw	0
 40438  012242  6F80               	movwf	(i2__doprnt$4885+1)& (0+255),b
 40439  012244  0E2B               	movlw	43
 40440  012246  D003               	goto	L37
 40441  012248                     i2l19994:
 40442                           
 40443                           ; BSR set to: 0
 40444  012248  0E00               	movlw	0
 40445  01224A  6F80               	movwf	(i2__doprnt$4885+1)& (0+255),b
 40446  01224C  0E2D               	movlw	45
 40447  01224E                     L37:
 40448  01224E  6F7F               	movwf	i2__doprnt$4885& (0+255),b
 40449                           
 40450                           ; BSR set to: 0
 40451  012250  EE20 F002          	lfsr	2,2
 40452  012254  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40453  012256  26D9               	addwf	fsr2l,f,c
 40454  012258  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40455  01225A  22DA               	addwfc	fsr2h,f,c
 40456  01225C  D801               	call	i2u2573_48
 40457  01225E  D0CB               	goto	i2l20024
 40458  012260                     i2u2573_48:
 40459  012260  0005               	push	
 40460  012262  6EFA               	movwf	pclath,c
 40461  012264  50DE               	movf	postinc2,w,c
 40462  012266  6EFD               	movwf	tosl,c
 40463  012268  50DE               	movf	postinc2,w,c
 40464  01226A  6EFE               	movwf	tosh,c
 40465  01226C  50DE               	movf	postinc2,w,c
 40466  01226E  6EFF               	movwf	tosu,c
 40467  012270  50FA               	movf	pclath,w,c
 40468  012272  517F               	movf	i2__doprnt$4885& (0+255),w,b
 40469  012274  0012               	return		;indir
 40470  012276                     i2l2429:
 40471                           
 40472                           ; BSR set to: 0
 40473  012276  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 40474  012278  D004               	goto	i2l20000
 40475                           
 40476                           ; BSR set to: 0
 40477  01227A  0E00               	movlw	0
 40478  01227C  6F82               	movwf	(i2__doprnt$4886+1)& (0+255),b
 40479  01227E  0E2B               	movlw	43
 40480  012280  D003               	goto	L38
 40481  012282                     i2l20000:
 40482                           
 40483                           ; BSR set to: 0
 40484  012282  0E00               	movlw	0
 40485  012284  6F82               	movwf	(i2__doprnt$4886+1)& (0+255),b
 40486  012286  0E2D               	movlw	45
 40487  012288                     L38:
 40488  012288  6F81               	movwf	i2__doprnt$4886& (0+255),b
 40489                           
 40490                           ; BSR set to: 0
 40491  01228A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40492  01228E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40493  012292  CFDE F072          	movff	postinc2,??i2__doprnt
 40494  012296  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40495  01229A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40496  01229E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40497  0122A2  C081  FFDF         	movff	i2__doprnt$4886,indf2
 40498  0122A6  D0A0               	goto	L39
 40499  0122A8                     i2l2427:
 40500                           
 40501                           ; BSR set to: 0
 40502                           ;doprnt.c: 1211: else if(flag & 0x01)
 40503  0122A8  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 40504  0122AA  D0A5               	goto	i2l20024
 40505                           
 40506                           ; BSR set to: 0
 40507  0122AC  EE20 F002          	lfsr	2,2
 40508  0122B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40509  0122B2  26D9               	addwf	fsr2l,f,c
 40510  0122B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40511  0122B6  22DA               	addwfc	fsr2h,f,c
 40512  0122B8  50DE               	movf	postinc2,w,c
 40513  0122BA  10DE               	iorwf	postinc2,w,c
 40514  0122BC  10DE               	iorwf	postinc2,w,c
 40515  0122BE  B4D8               	btfsc	status,2,c
 40516  0122C0  D013               	goto	i2l20010
 40517                           
 40518                           ; BSR set to: 0
 40519  0122C2  EE20 F002          	lfsr	2,2
 40520  0122C6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40521  0122C8  26D9               	addwf	fsr2l,f,c
 40522  0122CA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40523  0122CC  22DA               	addwfc	fsr2h,f,c
 40524  0122CE  D801               	call	i2u2577_48
 40525  0122D0  D092               	goto	i2l20024
 40526  0122D2                     i2u2577_48:
 40527  0122D2  0005               	push	
 40528  0122D4  6EFA               	movwf	pclath,c
 40529  0122D6  50DE               	movf	postinc2,w,c
 40530  0122D8  6EFD               	movwf	tosl,c
 40531  0122DA  50DE               	movf	postinc2,w,c
 40532  0122DC  6EFE               	movwf	tosh,c
 40533  0122DE  50DE               	movf	postinc2,w,c
 40534  0122E0  6EFF               	movwf	tosu,c
 40535  0122E2  50FA               	movf	pclath,w,c
 40536  0122E4  0E20               	movlw	32
 40537  0122E6  0012               	return		;indir
 40538  0122E8                     i2l20010:
 40539                           
 40540                           ; BSR set to: 0
 40541  0122E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40542  0122EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40543  0122F0  CFDE F072          	movff	postinc2,??i2__doprnt
 40544  0122F4  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40545  0122F8  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40546  0122FC  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40547  012300  0E20               	movlw	32
 40548  012302  D071               	goto	L59
 40549  012304                     i2l20014:
 40550                           
 40551                           ; BSR set to: 0
 40552                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 40553  012304  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 40554  012308  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 40555  01230C  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 40556  012310  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 40557  012314  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40558  012316  0D04               	mullw	4
 40559  012318  0E1F               	movlw	low _dpowers
 40560  01231A  24F3               	addwf	prodl,w,c
 40561  01231C  6EF6               	movwf	tblptrl,c
 40562  01231E  0EEA               	movlw	high _dpowers
 40563  012320  20F4               	addwfc	prodh,w,c
 40564  012322  6EF7               	movwf	tblptrh,c
 40565  012324                     	if	1	;There are 3 active tblptr bytes
 40566  012324  6AF8               	clrf	tblptru,c
 40567  012326  0E00               	movlw	low (__mediumconst shr (0+16))
 40568  012328  22F8               	addwfc	tblptru,f,c
 40569  01232A                     	endif
 40570  01232A  0009               	tblrd		*+
 40571  01232C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 40572  012330  0009               	tblrd		*+
 40573  012332  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 40574  012336  0009               	tblrd		*+
 40575  012338  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 40576  01233C  000A               	tblrd		*-
 40577  01233E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 40578  012342  EC3F  F0D5         	call	i2___lldiv
 40579  012346  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 40580  01234A  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 40581  01234E  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 40582  012352  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 40583                           
 40584                           ;doprnt.c: 1221: tmpval.vd %= 10;
 40585  012356  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 40586  01235A  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 40587  01235E  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 40588  012362  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 40589  012366  0E0A               	movlw	10
 40590  012368  6E12               	movwf	i2___llmod@divisor,c
 40591  01236A  0E00               	movlw	0
 40592  01236C  6E13               	movwf	i2___llmod@divisor+1,c
 40593  01236E  0E00               	movlw	0
 40594  012370  6E14               	movwf	i2___llmod@divisor+2,c
 40595  012372  0E00               	movlw	0
 40596  012374  6E15               	movwf	i2___llmod@divisor+3,c
 40597  012376  ECBE  F0D6         	call	i2___llmod	;wreg free
 40598  01237A  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 40599  01237E  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 40600  012382  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 40601  012386  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 40602  01238A  0100               	movlb	0	; () banked
 40603  01238C  EE20 F002          	lfsr	2,2
 40604  012390  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40605  012392  26D9               	addwf	fsr2l,f,c
 40606  012394  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40607  012396  22DA               	addwfc	fsr2h,f,c
 40608  012398  50DE               	movf	postinc2,w,c
 40609  01239A  10DE               	iorwf	postinc2,w,c
 40610  01239C  10DE               	iorwf	postinc2,w,c
 40611  01239E  B4D8               	btfsc	status,2,c
 40612  0123A0  D014               	goto	i2l20022
 40613                           
 40614                           ; BSR set to: 0
 40615  0123A2  EE20 F002          	lfsr	2,2
 40616  0123A6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40617  0123A8  26D9               	addwf	fsr2l,f,c
 40618  0123AA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40619  0123AC  22DA               	addwfc	fsr2h,f,c
 40620  0123AE  D801               	call	i2u2579_48
 40621  0123B0  D022               	goto	i2l20024
 40622  0123B2                     i2u2579_48:
 40623  0123B2  0005               	push	
 40624  0123B4  6EFA               	movwf	pclath,c
 40625  0123B6  50DE               	movf	postinc2,w,c
 40626  0123B8  6EFD               	movwf	tosl,c
 40627  0123BA  50DE               	movf	postinc2,w,c
 40628  0123BC  6EFE               	movwf	tosh,c
 40629  0123BE  50DE               	movf	postinc2,w,c
 40630  0123C0  6EFF               	movwf	tosu,c
 40631  0123C2  50FA               	movf	pclath,w,c
 40632  0123C4  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 40633  0123C6  0F30               	addlw	48
 40634  0123C8  0012               	return		;indir
 40635  0123CA                     i2l20022:
 40636                           
 40637                           ; BSR set to: 0
 40638  0123CA  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 40639  0123CC  0F30               	addlw	48
 40640  0123CE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40641  0123D2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40642  0123D6  CFDE F072          	movff	postinc2,??i2__doprnt
 40643  0123DA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40644  0123DE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40645  0123E2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40646  0123E6                     L59:
 40647  0123E6  6EDF               	movwf	indf2,c
 40648  0123E8                     L39:
 40649  0123E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40650  0123EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40651  0123F0  2ADE               	incf	postinc2,f,c
 40652  0123F2  0E00               	movlw	0
 40653  0123F4  22DD               	addwfc	postdec2,f,c
 40654  0123F6                     i2l20024:
 40655  0123F6  0100               	movlb	0	; () banked
 40656  0123F8  07A3               	decf	i2__doprnt@c& (0+255),f,b
 40657  0123FA  29A3               	incf	i2__doprnt@c& (0+255),w,b
 40658  0123FC  B4D8               	btfsc	status,2,c
 40659  0123FE  D038               	goto	i2l20036
 40660  012400  D781               	goto	i2l20014
 40661  012402                     i2l20026:
 40662                           
 40663                           ; BSR set to: 0
 40664  012402  EE20 F002          	lfsr	2,2
 40665  012406  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40666  012408  26D9               	addwf	fsr2l,f,c
 40667  01240A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40668  01240C  22DA               	addwfc	fsr2h,f,c
 40669  01240E  50DE               	movf	postinc2,w,c
 40670  012410  10DE               	iorwf	postinc2,w,c
 40671  012412  10DE               	iorwf	postinc2,w,c
 40672  012414  B4D8               	btfsc	status,2,c
 40673  012416  D013               	goto	i2l20030
 40674                           
 40675                           ; BSR set to: 0
 40676  012418  EE20 F002          	lfsr	2,2
 40677  01241C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40678  01241E  26D9               	addwf	fsr2l,f,c
 40679  012420  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40680  012422  22DA               	addwfc	fsr2h,f,c
 40681  012424  D801               	call	i2u2582_48
 40682  012426  D020               	goto	i2l20034
 40683  012428                     i2u2582_48:
 40684  012428  0005               	push	
 40685  01242A  6EFA               	movwf	pclath,c
 40686  01242C  50DE               	movf	postinc2,w,c
 40687  01242E  6EFD               	movwf	tosl,c
 40688  012430  50DE               	movf	postinc2,w,c
 40689  012432  6EFE               	movwf	tosh,c
 40690  012434  50DE               	movf	postinc2,w,c
 40691  012436  6EFF               	movwf	tosu,c
 40692  012438  50FA               	movf	pclath,w,c
 40693  01243A  0E30               	movlw	48
 40694  01243C  0012               	return		;indir
 40695  01243E                     i2l20030:
 40696                           
 40697                           ; BSR set to: 0
 40698  01243E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40699  012442  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40700  012446  CFDE F072          	movff	postinc2,??i2__doprnt
 40701  01244A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40702  01244E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40703  012452  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40704  012456  0E30               	movlw	48
 40705  012458  6EDF               	movwf	indf2,c
 40706                           
 40707                           ; BSR set to: 0
 40708  01245A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40709  01245E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40710  012462  2ADE               	incf	postinc2,f,c
 40711  012464  0E00               	movlw	0
 40712  012466  22DD               	addwfc	postdec2,f,c
 40713  012468                     i2l20034:
 40714                           
 40715                           ;doprnt.c: 1228: eexp--;
 40716  012468  0100               	movlb	0	; () banked
 40717  01246A  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 40718  01246C  A0D8               	btfss	status,0,c
 40719  01246E  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 40720  012470                     i2l20036:
 40721                           
 40722                           ; BSR set to: 0
 40723  012470  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 40724  012472  D005               	goto	i2u2583_40
 40725  012474  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 40726  012476  E1C5               	bnz	i2l20026
 40727  012478  058F               	decf	i2__doprnt@eexp& (0+255),w,b
 40728  01247A  B0D8               	btfsc	status,0,c
 40729  01247C  D7C2               	goto	i2l20026
 40730  01247E                     i2u2583_40:
 40731                           
 40732                           ; BSR set to: 0
 40733                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 40734  01247E  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 40735  012480  D009               	goto	i2l2460
 40736  012482  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 40737  012484  E104               	bnz	i2u2584_40
 40738  012486  0E09               	movlw	9
 40739  012488  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 40740  01248A  A0D8               	btfss	status,0,c
 40741  01248C  D003               	goto	i2l2460
 40742  01248E                     i2u2584_40:
 40743                           
 40744                           ; BSR set to: 0
 40745                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 40746  01248E  0E08               	movlw	8
 40747  012490  6FA3               	movwf	i2__doprnt@c& (0+255),b
 40748  012492  D002               	goto	i2l20042
 40749  012494                     i2l2460:
 40750                           
 40751                           ; BSR set to: 0
 40752                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 40753  012494  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 40754  012498                     i2l20042:
 40755                           
 40756                           ; BSR set to: 0
 40757                           ;doprnt.c: 1234: prec -= (int)c;
 40758  012498  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40759  01249A  5F9F               	subwf	i2__doprnt@prec& (0+255),f,b
 40760  01249C  0E00               	movlw	0
 40761  01249E  5BA0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 40762                           
 40763                           ; BSR set to: 0
 40764                           ;doprnt.c: 1238: if(c)
 40765  0124A0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40766  0124A2  B4D8               	btfsc	status,2,c
 40767  0124A4  D033               	goto	i2l20054
 40768                           
 40769                           ; BSR set to: 0
 40770  0124A6  EE20 F002          	lfsr	2,2
 40771  0124AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40772  0124AC  26D9               	addwf	fsr2l,f,c
 40773  0124AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40774  0124B0  22DA               	addwfc	fsr2h,f,c
 40775  0124B2  50DE               	movf	postinc2,w,c
 40776  0124B4  10DE               	iorwf	postinc2,w,c
 40777  0124B6  10DE               	iorwf	postinc2,w,c
 40778  0124B8  B4D8               	btfsc	status,2,c
 40779  0124BA  D013               	goto	i2l20050
 40780                           
 40781                           ; BSR set to: 0
 40782  0124BC  EE20 F002          	lfsr	2,2
 40783  0124C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40784  0124C2  26D9               	addwf	fsr2l,f,c
 40785  0124C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40786  0124C6  22DA               	addwfc	fsr2h,f,c
 40787  0124C8  D801               	call	i2u2587_48
 40788  0124CA  D020               	goto	i2l20054
 40789  0124CC                     i2u2587_48:
 40790  0124CC  0005               	push	
 40791  0124CE  6EFA               	movwf	pclath,c
 40792  0124D0  50DE               	movf	postinc2,w,c
 40793  0124D2  6EFD               	movwf	tosl,c
 40794  0124D4  50DE               	movf	postinc2,w,c
 40795  0124D6  6EFE               	movwf	tosh,c
 40796  0124D8  50DE               	movf	postinc2,w,c
 40797  0124DA  6EFF               	movwf	tosu,c
 40798  0124DC  50FA               	movf	pclath,w,c
 40799  0124DE  0E2E               	movlw	46
 40800  0124E0  0012               	return		;indir
 40801  0124E2                     i2l20050:
 40802                           
 40803                           ; BSR set to: 0
 40804  0124E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40805  0124E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40806  0124EA  CFDE F072          	movff	postinc2,??i2__doprnt
 40807  0124EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40808  0124F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40809  0124F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40810  0124FA  0E2E               	movlw	46
 40811  0124FC  6EDF               	movwf	indf2,c
 40812                           
 40813                           ; BSR set to: 0
 40814  0124FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40815  012502  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40816  012506  2ADE               	incf	postinc2,f,c
 40817  012508  0E00               	movlw	0
 40818  01250A  22DD               	addwfc	postdec2,f,c
 40819  01250C                     i2l20054:
 40820                           
 40821                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 40822  01250C  0100               	movlb	0	; () banked
 40823  01250E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40824  012510  EC06  F0AB         	call	i2_scale
 40825  012514  C045  F076         	movff	?i2_scale,i2__doprnt$6318
 40826  012518  C046  F077         	movff	?i2_scale+1,i2__doprnt$6318+1
 40827  01251C  C047  F078         	movff	?i2_scale+2,i2__doprnt$6318+2
 40828  012520  C048  F079         	movff	?i2_scale+3,i2__doprnt$6318+3
 40829                           
 40830                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 40831  012524  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 40832  012528  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 40833  01252C  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 40834  012530  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 40835  012534  C076  F02C         	movff	i2__doprnt$6318,i2___flmul@b
 40836  012538  C077  F02D         	movff	i2__doprnt$6318+1,i2___flmul@b+1
 40837  01253C  C078  F02E         	movff	i2__doprnt$6318+2,i2___flmul@b+2
 40838  012540  C079  F02F         	movff	i2__doprnt$6318+3,i2___flmul@b+3
 40839  012544  ECFC  F0B3         	call	i2___flmul	;wreg free
 40840  012548  C02C  F04E         	movff	?i2___flmul,i2___fltol@f1
 40841  01254C  C02D  F04F         	movff	?i2___flmul+1,i2___fltol@f1+1
 40842  012550  C02E  F050         	movff	?i2___flmul+2,i2___fltol@f1+2
 40843  012554  C02F  F051         	movff	?i2___flmul+3,i2___fltol@f1+3
 40844  012558  ECD0  F0D0         	call	i2___fltol	;wreg free
 40845  01255C  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 40846  012560  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 40847  012564  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 40848  012568  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 40849                           
 40850                           ;doprnt.c: 1247: while(c--) {
 40851  01256C  D0A3               	goto	i2l20070
 40852  01256E                     i2l20058:
 40853                           
 40854                           ; BSR set to: 0
 40855                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 40856  01256E  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 40857  012572  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 40858  012576  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 40859  01257A  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 40860  01257E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40861  012580  0D04               	mullw	4
 40862  012582  0E1F               	movlw	low _dpowers
 40863  012584  24F3               	addwf	prodl,w,c
 40864  012586  6EF6               	movwf	tblptrl,c
 40865  012588  0EEA               	movlw	high _dpowers
 40866  01258A  20F4               	addwfc	prodh,w,c
 40867  01258C  6EF7               	movwf	tblptrh,c
 40868  01258E                     	if	1	;There are 3 active tblptr bytes
 40869  01258E  6AF8               	clrf	tblptru,c
 40870  012590  0E00               	movlw	low (__mediumconst shr (0+16))
 40871  012592  22F8               	addwfc	tblptru,f,c
 40872  012594                     	endif
 40873  012594  0009               	tblrd		*+
 40874  012596  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 40875  01259A  0009               	tblrd		*+
 40876  01259C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 40877  0125A0  0009               	tblrd		*+
 40878  0125A2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 40879  0125A6  000A               	tblrd		*-
 40880  0125A8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 40881  0125AC  EC3F  F0D5         	call	i2___lldiv	;wreg free
 40882  0125B0  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 40883  0125B4  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 40884  0125B8  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 40885  0125BC  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 40886                           
 40887                           ;doprnt.c: 1249: tmpval.vd %= 10;
 40888  0125C0  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 40889  0125C4  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 40890  0125C8  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 40891  0125CC  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 40892  0125D0  0E0A               	movlw	10
 40893  0125D2  6E12               	movwf	i2___llmod@divisor,c
 40894  0125D4  0E00               	movlw	0
 40895  0125D6  6E13               	movwf	i2___llmod@divisor+1,c
 40896  0125D8  0E00               	movlw	0
 40897  0125DA  6E14               	movwf	i2___llmod@divisor+2,c
 40898  0125DC  0E00               	movlw	0
 40899  0125DE  6E15               	movwf	i2___llmod@divisor+3,c
 40900  0125E0  ECBE  F0D6         	call	i2___llmod	;wreg free
 40901  0125E4  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 40902  0125E8  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 40903  0125EC  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 40904  0125F0  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 40905  0125F4  0100               	movlb	0	; () banked
 40906  0125F6  EE20 F002          	lfsr	2,2
 40907  0125FA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40908  0125FC  26D9               	addwf	fsr2l,f,c
 40909  0125FE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40910  012600  22DA               	addwfc	fsr2h,f,c
 40911  012602  50DE               	movf	postinc2,w,c
 40912  012604  10DE               	iorwf	postinc2,w,c
 40913  012606  10DE               	iorwf	postinc2,w,c
 40914  012608  B4D8               	btfsc	status,2,c
 40915  01260A  D014               	goto	i2l20066
 40916                           
 40917                           ; BSR set to: 0
 40918  01260C  EE20 F002          	lfsr	2,2
 40919  012610  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40920  012612  26D9               	addwf	fsr2l,f,c
 40921  012614  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40922  012616  22DA               	addwfc	fsr2h,f,c
 40923  012618  D801               	call	i2u2589_48
 40924  01261A  D022               	goto	i2l20068
 40925  01261C                     i2u2589_48:
 40926  01261C  0005               	push	
 40927  01261E  6EFA               	movwf	pclath,c
 40928  012620  50DE               	movf	postinc2,w,c
 40929  012622  6EFD               	movwf	tosl,c
 40930  012624  50DE               	movf	postinc2,w,c
 40931  012626  6EFE               	movwf	tosh,c
 40932  012628  50DE               	movf	postinc2,w,c
 40933  01262A  6EFF               	movwf	tosu,c
 40934  01262C  50FA               	movf	pclath,w,c
 40935  01262E  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 40936  012630  0F30               	addlw	48
 40937  012632  0012               	return		;indir
 40938  012634                     i2l20066:
 40939                           
 40940                           ; BSR set to: 0
 40941  012634  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 40942  012636  0F30               	addlw	48
 40943  012638  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40944  01263C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40945  012640  CFDE F072          	movff	postinc2,??i2__doprnt
 40946  012644  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40947  012648  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40948  01264C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40949  012650  6EDF               	movwf	indf2,c
 40950  012652  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40951  012656  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40952  01265A  2ADE               	incf	postinc2,f,c
 40953  01265C  0E00               	movlw	0
 40954  01265E  22DD               	addwfc	postdec2,f,c
 40955  012660                     i2l20068:
 40956                           
 40957                           ;doprnt.c: 1251: val %= dpowers[c];
 40958  012660  C099  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 40959  012664  C09A  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 40960  012668  C09B  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 40961  01266C  C09C  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 40962  012670  0100               	movlb	0	; () banked
 40963  012672  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40964  012674  0D04               	mullw	4
 40965  012676  0E1F               	movlw	low _dpowers
 40966  012678  24F3               	addwf	prodl,w,c
 40967  01267A  6EF6               	movwf	tblptrl,c
 40968  01267C  0EEA               	movlw	high _dpowers
 40969  01267E  20F4               	addwfc	prodh,w,c
 40970  012680  6EF7               	movwf	tblptrh,c
 40971  012682                     	if	1	;There are 3 active tblptr bytes
 40972  012682  6AF8               	clrf	tblptru,c
 40973  012684  0E00               	movlw	low (__mediumconst shr (0+16))
 40974  012686  22F8               	addwfc	tblptru,f,c
 40975  012688                     	endif
 40976  012688  0009               	tblrd		*+
 40977  01268A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 40978  01268E  0009               	tblrd		*+
 40979  012690  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 40980  012694  0009               	tblrd		*+
 40981  012696  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 40982  01269A  000A               	tblrd		*-
 40983  01269C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 40984  0126A0  ECBE  F0D6         	call	i2___llmod
 40985  0126A4  C00E  F099         	movff	?i2___llmod,i2__doprnt@val
 40986  0126A8  C00F  F09A         	movff	?i2___llmod+1,i2__doprnt@val+1
 40987  0126AC  C010  F09B         	movff	?i2___llmod+2,i2__doprnt@val+2
 40988  0126B0  C011  F09C         	movff	?i2___llmod+3,i2__doprnt@val+3
 40989  0126B4                     i2l20070:
 40990  0126B4  0100               	movlb	0	; () banked
 40991  0126B6  07A3               	decf	i2__doprnt@c& (0+255),f,b
 40992  0126B8  29A3               	incf	i2__doprnt@c& (0+255),w,b
 40993  0126BA  B4D8               	btfsc	status,2,c
 40994  0126BC  D038               	goto	i2l20082
 40995  0126BE  D757               	goto	i2l20058
 40996  0126C0                     i2l20072:
 40997                           
 40998                           ; BSR set to: 0
 40999  0126C0  EE20 F002          	lfsr	2,2
 41000  0126C4  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41001  0126C6  26D9               	addwf	fsr2l,f,c
 41002  0126C8  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41003  0126CA  22DA               	addwfc	fsr2h,f,c
 41004  0126CC  50DE               	movf	postinc2,w,c
 41005  0126CE  10DE               	iorwf	postinc2,w,c
 41006  0126D0  10DE               	iorwf	postinc2,w,c
 41007  0126D2  B4D8               	btfsc	status,2,c
 41008  0126D4  D013               	goto	i2l20076
 41009                           
 41010                           ; BSR set to: 0
 41011  0126D6  EE20 F002          	lfsr	2,2
 41012  0126DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41013  0126DC  26D9               	addwf	fsr2l,f,c
 41014  0126DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41015  0126E0  22DA               	addwfc	fsr2h,f,c
 41016  0126E2  D801               	call	i2u2592_48
 41017  0126E4  D020               	goto	i2l20080
 41018  0126E6                     i2u2592_48:
 41019  0126E6  0005               	push	
 41020  0126E8  6EFA               	movwf	pclath,c
 41021  0126EA  50DE               	movf	postinc2,w,c
 41022  0126EC  6EFD               	movwf	tosl,c
 41023  0126EE  50DE               	movf	postinc2,w,c
 41024  0126F0  6EFE               	movwf	tosh,c
 41025  0126F2  50DE               	movf	postinc2,w,c
 41026  0126F4  6EFF               	movwf	tosu,c
 41027  0126F6  50FA               	movf	pclath,w,c
 41028  0126F8  0E30               	movlw	48
 41029  0126FA  0012               	return		;indir
 41030  0126FC                     i2l20076:
 41031                           
 41032                           ; BSR set to: 0
 41033  0126FC  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41034  012700  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41035  012704  CFDE F072          	movff	postinc2,??i2__doprnt
 41036  012708  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41037  01270C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41038  012710  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41039  012714  0E30               	movlw	48
 41040  012716  6EDF               	movwf	indf2,c
 41041                           
 41042                           ; BSR set to: 0
 41043  012718  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41044  01271C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41045  012720  2ADE               	incf	postinc2,f,c
 41046  012722  0E00               	movlw	0
 41047  012724  22DD               	addwfc	postdec2,f,c
 41048  012726                     i2l20080:
 41049                           
 41050                           ;doprnt.c: 1256: prec--;
 41051  012726  0100               	movlb	0	; () banked
 41052  012728  079F               	decf	i2__doprnt@prec& (0+255),f,b
 41053  01272A  A0D8               	btfss	status,0,c
 41054  01272C  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 41055  01272E                     i2l20082:
 41056                           
 41057                           ; BSR set to: 0
 41058  01272E  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41059  012730  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41060  012732  B4D8               	btfsc	status,2,c
 41061  012734  D360               	goto	i2u2638_40
 41062  012736  D7C4               	goto	i2l20072
 41063  012738                     i2l20084:
 41064                           
 41065                           ; BSR set to: 0
 41066                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 41067  012738  0EC0               	movlw	192
 41068  01273A  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41069  01273C  6F72               	movwf	??i2__doprnt& (0+255),b
 41070  01273E  0E00               	movlw	0
 41071  012740  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41072  012742  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41073  012744  5172               	movf	??i2__doprnt& (0+255),w,b
 41074  012746  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41075  012748  A4D8               	btfss	status,2,c
 41076  01274A  D041               	goto	i2l2481
 41077                           
 41078                           ; BSR set to: 0
 41079                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 41080  01274C  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 41081  01274E  D019               	goto	i2l20090
 41082                           
 41083                           ; BSR set to: 0
 41084                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 41085  012750  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41086  012754  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41087  012758  CFDF F072          	movff	indf2,??i2__doprnt
 41088  01275C  0E04               	movlw	4
 41089  01275E  26DE               	addwf	postinc2,f,c
 41090  012760  CFDF F073          	movff	indf2,??i2__doprnt+1
 41091  012764  0E00               	movlw	0
 41092  012766  22DD               	addwfc	postdec2,f,c
 41093  012768  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41094  01276C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41095  012770  CFDE F099          	movff	postinc2,i2__doprnt@val
 41096  012774  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 41097  012778  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 41098  01277C  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 41099  012780  D019               	goto	i2l20092
 41100  012782                     i2l20090:
 41101                           
 41102                           ; BSR set to: 0
 41103                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 41104  012782  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41105  012786  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41106  01278A  CFDF F072          	movff	indf2,??i2__doprnt
 41107  01278E  0E02               	movlw	2
 41108  012790  26DE               	addwf	postinc2,f,c
 41109  012792  CFDF F073          	movff	indf2,??i2__doprnt+1
 41110  012796  0E00               	movlw	0
 41111  012798  22DD               	addwfc	postdec2,f,c
 41112  01279A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41113  01279E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41114  0127A2  CFDE F099          	movff	postinc2,i2__doprnt@val
 41115  0127A6  CFDD F09A          	movff	postdec2,i2__doprnt@val+1
 41116  0127AA  0E00               	movlw	0
 41117  0127AC  BF9A               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 41118  0127AE  0EFF               	movlw	-1
 41119  0127B0  6F9B               	movwf	(i2__doprnt@val+2)& (0+255),b
 41120  0127B2  6F9C               	movwf	(i2__doprnt@val+3)& (0+255),b
 41121  0127B4                     i2l20092:
 41122                           
 41123                           ; BSR set to: 0
 41124                           ;doprnt.c: 1280: if((long)val < 0) {
 41125  0127B4  AF9C               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 41126  0127B6  D040               	goto	i2l20102
 41127                           
 41128                           ; BSR set to: 0
 41129                           ;doprnt.c: 1281: flag |= 0x03;
 41130  0127B8  0E03               	movlw	3
 41131  0127BA  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41132                           
 41133                           ; BSR set to: 0
 41134                           ;doprnt.c: 1282: val = -val;
 41135  0127BC  1F9C               	comf	(i2__doprnt@val+3)& (0+255),f,b
 41136  0127BE  1F9B               	comf	(i2__doprnt@val+2)& (0+255),f,b
 41137  0127C0  1F9A               	comf	(i2__doprnt@val+1)& (0+255),f,b
 41138  0127C2  6D99               	negf	i2__doprnt@val& (0+255),b
 41139  0127C4  0E00               	movlw	0
 41140  0127C6  239A               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 41141  0127C8  239B               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 41142  0127CA  239C               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 41143  0127CC  D035               	goto	i2l20102
 41144  0127CE                     i2l2481:
 41145                           
 41146                           ; BSR set to: 0
 41147                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 41148  0127CE  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 41149  0127D0  D019               	goto	i2l20100
 41150                           
 41151                           ; BSR set to: 0
 41152                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 41153  0127D2  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41154  0127D6  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41155  0127DA  CFDF F072          	movff	indf2,??i2__doprnt
 41156  0127DE  0E04               	movlw	4
 41157  0127E0  26DE               	addwf	postinc2,f,c
 41158  0127E2  CFDF F073          	movff	indf2,??i2__doprnt+1
 41159  0127E6  0E00               	movlw	0
 41160  0127E8  22DD               	addwfc	postdec2,f,c
 41161  0127EA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41162  0127EE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41163  0127F2  CFDE F099          	movff	postinc2,i2__doprnt@val
 41164  0127F6  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 41165  0127FA  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 41166  0127FE  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 41167  012802  D01A               	goto	i2l20102
 41168  012804                     i2l20100:
 41169                           
 41170                           ; BSR set to: 0
 41171                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 41172  012804  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41173  012808  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41174  01280C  CFDF F072          	movff	indf2,??i2__doprnt
 41175  012810  0E02               	movlw	2
 41176  012812  26DE               	addwf	postinc2,f,c
 41177  012814  CFDF F073          	movff	indf2,??i2__doprnt+1
 41178  012818  0E00               	movlw	0
 41179  01281A  22DD               	addwfc	postdec2,f,c
 41180  01281C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41181  012820  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41182  012824  CFDE F074          	movff	postinc2,??i2__doprnt+2
 41183  012828  CFDD F075          	movff	postdec2,??i2__doprnt+3
 41184  01282C  C074  F099         	movff	??i2__doprnt+2,i2__doprnt@val
 41185  012830  C075  F09A         	movff	??i2__doprnt+3,i2__doprnt@val+1
 41186  012834  6B9B               	clrf	(i2__doprnt@val+2)& (0+255),b
 41187  012836  6B9C               	clrf	(i2__doprnt@val+3)& (0+255),b
 41188  012838                     i2l20102:
 41189                           
 41190                           ; BSR set to: 0
 41191                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 41192  012838  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41193  01283A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41194  01283C  A4D8               	btfss	status,2,c
 41195  01283E  D04B               	goto	i2l20138
 41196                           
 41197                           ; BSR set to: 0
 41198  012840  5199               	movf	i2__doprnt@val& (0+255),w,b
 41199  012842  119A               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 41200  012844  119B               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 41201  012846  119C               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 41202  012848  A4D8               	btfss	status,2,c
 41203  01284A  D045               	goto	i2l20138
 41204                           
 41205                           ; BSR set to: 0
 41206                           ;doprnt.c: 1310: prec++;
 41207  01284C  4B9F               	infsnz	i2__doprnt@prec& (0+255),f,b
 41208  01284E  2BA0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 41209  012850  D042               	goto	i2l20138
 41210  012852                     i2l20108:
 41211                           
 41212                           ; BSR set to: 0
 41213                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 41214  012852  0E01               	movlw	1
 41215  012854  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41216  012856                     i2l20114:
 41217                           
 41218                           ; BSR set to: 0
 41219                           ;doprnt.c: 1325: if(val < dpowers[c])
 41220  012856  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41221  012858  0D04               	mullw	4
 41222  01285A  0E1F               	movlw	low _dpowers
 41223  01285C  24F3               	addwf	prodl,w,c
 41224  01285E  6EF6               	movwf	tblptrl,c
 41225  012860  0EEA               	movlw	high _dpowers
 41226  012862  20F4               	addwfc	prodh,w,c
 41227  012864  6EF7               	movwf	tblptrh,c
 41228  012866                     	if	1	;There are 3 active tblptr bytes
 41229  012866  6AF8               	clrf	tblptru,c
 41230  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 41231  01286A  22F8               	addwfc	tblptru,f,c
 41232  01286C                     	endif
 41233  01286C  0009               	tblrd		*+
 41234  01286E  50F5               	movf	tablat,w,c
 41235  012870  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41236  012872  0009               	tblrd		*+
 41237  012874  50F5               	movf	tablat,w,c
 41238  012876  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41239  012878  0009               	tblrd		*+
 41240  01287A  50F5               	movf	tablat,w,c
 41241  01287C  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41242  01287E  0009               	tblrd		*+
 41243  012880  50F5               	movf	tablat,w,c
 41244  012882  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41245  012884  A0D8               	btfss	status,0,c
 41246  012886  D032               	goto	i2l20140
 41247                           
 41248                           ; BSR set to: 0
 41249  012888  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41250                           
 41251                           ; BSR set to: 0
 41252  01288A  0E0A               	movlw	10
 41253  01288C  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41254  01288E  B4D8               	btfsc	status,2,c
 41255  012890  D02D               	goto	i2l20140
 41256  012892  D7E1               	goto	i2l20114
 41257  012894                     i2l20122:
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 41261  012894  0E01               	movlw	1
 41262  012896  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41263  012898                     i2l20128:
 41264                           
 41265                           ; BSR set to: 0
 41266                           ;doprnt.c: 1336: if(val < hexpowers[c])
 41267  012898  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41268  01289A  0D04               	mullw	4
 41269  01289C  0EFF               	movlw	low _hexpowers
 41270  01289E  24F3               	addwf	prodl,w,c
 41271  0128A0  6EF6               	movwf	tblptrl,c
 41272  0128A2  0EE6               	movlw	high _hexpowers
 41273  0128A4  20F4               	addwfc	prodh,w,c
 41274  0128A6  6EF7               	movwf	tblptrh,c
 41275  0128A8                     	if	1	;There are 3 active tblptr bytes
 41276  0128A8  6AF8               	clrf	tblptru,c
 41277  0128AA  0E00               	movlw	low (__mediumconst shr (0+16))
 41278  0128AC  22F8               	addwfc	tblptru,f,c
 41279  0128AE                     	endif
 41280  0128AE  0009               	tblrd		*+
 41281  0128B0  50F5               	movf	tablat,w,c
 41282  0128B2  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41283  0128B4  0009               	tblrd		*+
 41284  0128B6  50F5               	movf	tablat,w,c
 41285  0128B8  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41286  0128BA  0009               	tblrd		*+
 41287  0128BC  50F5               	movf	tablat,w,c
 41288  0128BE  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41289  0128C0  0009               	tblrd		*+
 41290  0128C2  50F5               	movf	tablat,w,c
 41291  0128C4  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41292  0128C6  A0D8               	btfss	status,0,c
 41293  0128C8  D011               	goto	i2l20140
 41294                           
 41295                           ; BSR set to: 0
 41296  0128CA  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41297                           
 41298                           ; BSR set to: 0
 41299  0128CC  0E08               	movlw	8
 41300  0128CE  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41301  0128D0  B4D8               	btfsc	status,2,c
 41302  0128D2  D00C               	goto	i2l20140
 41303  0128D4  D7E1               	goto	i2l20128
 41304  0128D6                     i2l20138:
 41305                           
 41306                           ; BSR set to: 0
 41307  0128D6  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 41308  0128D8  0BC0               	andlw	192
 41309                           
 41310                           ; Switch size 1, requested type "simple"
 41311                           ; Number of cases is 3, Range of values is 0 to 192
 41312                           ; switch strategies available:
 41313                           ; Name         Instructions Cycles
 41314                           ; simple_byte           10     6 (average)
 41315                           ;	Chosen strategy is simple_byte
 41316  0128DA  0A00               	xorlw	0	; case 0
 41317  0128DC  B4D8               	btfsc	status,2,c
 41318  0128DE  D7B9               	goto	i2l20108
 41319  0128E0  0A80               	xorlw	128	; case 128
 41320  0128E2  B4D8               	btfsc	status,2,c
 41321  0128E4  D7D7               	goto	i2l20122
 41322  0128E6  0A40               	xorlw	64	; case 192
 41323  0128E8  B4D8               	btfsc	status,2,c
 41324  0128EA  D7B3               	goto	i2l20108
 41325  0128EC                     i2l20140:
 41326                           
 41327                           ; BSR set to: 0
 41328                           ;doprnt.c: 1358: if(c < prec)
 41329  0128EC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41330  0128EE  6F72               	movwf	??i2__doprnt& (0+255),b
 41331  0128F0  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 41332  0128F2  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41333  0128F4  5D72               	subwf	??i2__doprnt& (0+255),w,b
 41334  0128F6  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41335  0128F8  0A80               	xorlw	128
 41336  0128FA  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 41337  0128FC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41338  0128FE  0A80               	xorlw	128
 41339  012900  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 41340  012902  B0D8               	btfsc	status,0,c
 41341  012904  D003               	goto	i2l20144
 41342                           
 41343                           ; BSR set to: 0
 41344                           ;doprnt.c: 1359: c = prec;
 41345  012906  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 41346  01290A  D010               	goto	i2l20148
 41347  01290C                     i2l20144:
 41348                           
 41349                           ; BSR set to: 0
 41350                           ;doprnt.c: 1360: else if(prec < c)
 41351  01290C  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41352  01290E  6F72               	movwf	??i2__doprnt& (0+255),b
 41353  012910  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 41354  012912  5172               	movf	??i2__doprnt& (0+255),w,b
 41355  012914  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41356  012916  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41357  012918  0A80               	xorlw	128
 41358  01291A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 41359  01291C  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41360  01291E  0A80               	xorlw	128
 41361  012920  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 41362  012922  B0D8               	btfsc	status,0,c
 41363  012924  D003               	goto	i2l20148
 41364                           
 41365                           ; BSR set to: 0
 41366                           ;doprnt.c: 1361: prec = c;
 41367  012926  C0A3  F09F         	movff	i2__doprnt@c,i2__doprnt@prec
 41368  01292A  6BA0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 41369  01292C                     i2l20148:
 41370                           
 41371                           ; BSR set to: 0
 41372                           ;doprnt.c: 1364: if(width && flag & 0x03)
 41373  01292C  519D               	movf	i2__doprnt@width& (0+255),w,b
 41374  01292E  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 41375  012930  B4D8               	btfsc	status,2,c
 41376  012932  D00D               	goto	i2l20154
 41377                           
 41378                           ; BSR set to: 0
 41379  012934  0E03               	movlw	3
 41380  012936  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41381  012938  6F72               	movwf	??i2__doprnt& (0+255),b
 41382  01293A  0E00               	movlw	0
 41383  01293C  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41384  01293E  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41385  012940  5172               	movf	??i2__doprnt& (0+255),w,b
 41386  012942  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41387  012944  B4D8               	btfsc	status,2,c
 41388  012946  D003               	goto	i2l20154
 41389                           
 41390                           ; BSR set to: 0
 41391                           ;doprnt.c: 1365: width--;
 41392  012948  079D               	decf	i2__doprnt@width& (0+255),f,b
 41393  01294A  A0D8               	btfss	status,0,c
 41394  01294C  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41395  01294E                     i2l20154:
 41396                           
 41397                           ; BSR set to: 0
 41398                           ;doprnt.c: 1367: if(flag & 0x4000) {
 41399  01294E  ADA2               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 41400  012950  D013               	goto	i2l20162
 41401                           
 41402                           ; BSR set to: 0
 41403                           ;doprnt.c: 1368: if(width > prec)
 41404  012952  519D               	movf	i2__doprnt@width& (0+255),w,b
 41405  012954  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41406  012956  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41407  012958  0A80               	xorlw	128
 41408  01295A  6F72               	movwf	??i2__doprnt& (0+255),b
 41409  01295C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41410  01295E  0A80               	xorlw	128
 41411  012960  5972               	subwfb	??i2__doprnt& (0+255),w,b
 41412  012962  B0D8               	btfsc	status,0,c
 41413  012964  D005               	goto	i2l20160
 41414                           
 41415                           ; BSR set to: 0
 41416                           ;doprnt.c: 1369: width -= prec;
 41417  012966  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41418  012968  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41419  01296A  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41420  01296C  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41421  01296E  D004               	goto	i2l20162
 41422  012970                     i2l20160:
 41423                           
 41424                           ; BSR set to: 0
 41425                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 41426  012970  0E00               	movlw	0
 41427  012972  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 41428  012974  0E00               	movlw	0
 41429  012976  6F9D               	movwf	i2__doprnt@width& (0+255),b
 41430  012978                     i2l20162:
 41431                           
 41432                           ; BSR set to: 0
 41433                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 41434  012978  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41435  01297A  6F72               	movwf	??i2__doprnt& (0+255),b
 41436  01297C  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 41437  01297E  519D               	movf	i2__doprnt@width& (0+255),w,b
 41438  012980  5D72               	subwf	??i2__doprnt& (0+255),w,b
 41439  012982  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41440  012984  0A80               	xorlw	128
 41441  012986  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 41442  012988  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41443  01298A  0A80               	xorlw	128
 41444  01298C  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 41445  01298E  B0D8               	btfsc	status,0,c
 41446  012990  D005               	goto	i2l20166
 41447                           
 41448                           ; BSR set to: 0
 41449                           ;doprnt.c: 1401: width -= c;
 41450  012992  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41451  012994  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41452  012996  0E00               	movlw	0
 41453  012998  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41454  01299A  D004               	goto	i2l20168
 41455  01299C                     i2l20166:
 41456                           
 41457                           ; BSR set to: 0
 41458                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 41459  01299C  0E00               	movlw	0
 41460  01299E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 41461  0129A0  0E00               	movlw	0
 41462  0129A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 41463  0129A4                     i2l20168:
 41464                           
 41465                           ; BSR set to: 0
 41466                           ;doprnt.c: 1406: if(flag & 0x04) {
 41467  0129A4  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 41468  0129A6  D0B5               	goto	i2l20210
 41469                           
 41470                           ; BSR set to: 0
 41471                           ;doprnt.c: 1408: if(flag & 0x02)
 41472  0129A8  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41473  0129AA  D041               	goto	i2l2510
 41474                           
 41475                           ; BSR set to: 0
 41476  0129AC  EE20 F002          	lfsr	2,2
 41477  0129B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41478  0129B2  26D9               	addwf	fsr2l,f,c
 41479  0129B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41480  0129B6  22DA               	addwfc	fsr2h,f,c
 41481  0129B8  50DE               	movf	postinc2,w,c
 41482  0129BA  10DE               	iorwf	postinc2,w,c
 41483  0129BC  10DE               	iorwf	postinc2,w,c
 41484  0129BE  B4D8               	btfsc	status,2,c
 41485  0129C0  D01D               	goto	i2l2512
 41486                           
 41487                           ; BSR set to: 0
 41488  0129C2  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41489  0129C4  D004               	goto	i2l20178
 41490                           
 41491                           ; BSR set to: 0
 41492  0129C6  0E00               	movlw	0
 41493  0129C8  6F84               	movwf	(i2__doprnt$4887+1)& (0+255),b
 41494  0129CA  0E2B               	movlw	43
 41495  0129CC  D003               	goto	L40
 41496  0129CE                     i2l20178:
 41497                           
 41498                           ; BSR set to: 0
 41499  0129CE  0E00               	movlw	0
 41500  0129D0  6F84               	movwf	(i2__doprnt$4887+1)& (0+255),b
 41501  0129D2  0E2D               	movlw	45
 41502  0129D4                     L40:
 41503  0129D4  6F83               	movwf	i2__doprnt$4887& (0+255),b
 41504                           
 41505                           ; BSR set to: 0
 41506  0129D6  EE20 F002          	lfsr	2,2
 41507  0129DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41508  0129DC  26D9               	addwf	fsr2l,f,c
 41509  0129DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41510  0129E0  22DA               	addwfc	fsr2h,f,c
 41511  0129E2  D801               	call	i2u2615_48
 41512  0129E4  D059               	goto	i2l20198
 41513  0129E6                     i2u2615_48:
 41514  0129E6  0005               	push	
 41515  0129E8  6EFA               	movwf	pclath,c
 41516  0129EA  50DE               	movf	postinc2,w,c
 41517  0129EC  6EFD               	movwf	tosl,c
 41518  0129EE  50DE               	movf	postinc2,w,c
 41519  0129F0  6EFE               	movwf	tosh,c
 41520  0129F2  50DE               	movf	postinc2,w,c
 41521  0129F4  6EFF               	movwf	tosu,c
 41522  0129F6  50FA               	movf	pclath,w,c
 41523  0129F8  5183               	movf	i2__doprnt$4887& (0+255),w,b
 41524  0129FA  0012               	return		;indir
 41525  0129FC                     i2l2512:
 41526                           
 41527                           ; BSR set to: 0
 41528  0129FC  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41529  0129FE  D004               	goto	i2l20184
 41530                           
 41531                           ; BSR set to: 0
 41532  012A00  0E00               	movlw	0
 41533  012A02  6F86               	movwf	(i2__doprnt$4888+1)& (0+255),b
 41534  012A04  0E2B               	movlw	43
 41535  012A06  D003               	goto	L41
 41536  012A08                     i2l20184:
 41537                           
 41538                           ; BSR set to: 0
 41539  012A08  0E00               	movlw	0
 41540  012A0A  6F86               	movwf	(i2__doprnt$4888+1)& (0+255),b
 41541  012A0C  0E2D               	movlw	45
 41542  012A0E                     L41:
 41543  012A0E  6F85               	movwf	i2__doprnt$4888& (0+255),b
 41544                           
 41545                           ; BSR set to: 0
 41546  012A10  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41547  012A14  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41548  012A18  CFDE F072          	movff	postinc2,??i2__doprnt
 41549  012A1C  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41550  012A20  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41551  012A24  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41552  012A28  C085  FFDF         	movff	i2__doprnt$4888,indf2
 41553  012A2C  D02E               	goto	i2l20196
 41554  012A2E                     i2l2510:
 41555                           
 41556                           ; BSR set to: 0
 41557                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 41558  012A2E  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41559  012A30  D033               	goto	i2l20198
 41560                           
 41561                           ; BSR set to: 0
 41562  012A32  EE20 F002          	lfsr	2,2
 41563  012A36  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41564  012A38  26D9               	addwf	fsr2l,f,c
 41565  012A3A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41566  012A3C  22DA               	addwfc	fsr2h,f,c
 41567  012A3E  50DE               	movf	postinc2,w,c
 41568  012A40  10DE               	iorwf	postinc2,w,c
 41569  012A42  10DE               	iorwf	postinc2,w,c
 41570  012A44  B4D8               	btfsc	status,2,c
 41571  012A46  D013               	goto	i2l20194
 41572                           
 41573                           ; BSR set to: 0
 41574  012A48  EE20 F002          	lfsr	2,2
 41575  012A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41576  012A4E  26D9               	addwf	fsr2l,f,c
 41577  012A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41578  012A52  22DA               	addwfc	fsr2h,f,c
 41579  012A54  D801               	call	i2u2619_48
 41580  012A56  D020               	goto	i2l20198
 41581  012A58                     i2u2619_48:
 41582  012A58  0005               	push	
 41583  012A5A  6EFA               	movwf	pclath,c
 41584  012A5C  50DE               	movf	postinc2,w,c
 41585  012A5E  6EFD               	movwf	tosl,c
 41586  012A60  50DE               	movf	postinc2,w,c
 41587  012A62  6EFE               	movwf	tosh,c
 41588  012A64  50DE               	movf	postinc2,w,c
 41589  012A66  6EFF               	movwf	tosu,c
 41590  012A68  50FA               	movf	pclath,w,c
 41591  012A6A  0E20               	movlw	32
 41592  012A6C  0012               	return		;indir
 41593  012A6E                     i2l20194:
 41594                           
 41595                           ; BSR set to: 0
 41596  012A6E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41597  012A72  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41598  012A76  CFDE F072          	movff	postinc2,??i2__doprnt
 41599  012A7A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41600  012A7E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41601  012A82  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41602  012A86  0E20               	movlw	32
 41603  012A88  6EDF               	movwf	indf2,c
 41604  012A8A                     i2l20196:
 41605                           
 41606                           ; BSR set to: 0
 41607  012A8A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41608  012A8E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41609  012A92  2ADE               	incf	postinc2,f,c
 41610  012A94  0E00               	movlw	0
 41611  012A96  22DD               	addwfc	postdec2,f,c
 41612  012A98                     i2l20198:
 41613                           
 41614                           ;doprnt.c: 1434: if(width)
 41615  012A98  0100               	movlb	0	; () banked
 41616  012A9A  519D               	movf	i2__doprnt@width& (0+255),w,b
 41617  012A9C  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 41618  012A9E  B4D8               	btfsc	status,2,c
 41619  012AA0  D1A1               	goto	i2l20266
 41620                           
 41621                           ; BSR set to: 0
 41622  012AA2  EE20 F002          	lfsr	2,2
 41623  012AA6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41624  012AA8  26D9               	addwf	fsr2l,f,c
 41625  012AAA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41626  012AAC  22DA               	addwfc	fsr2h,f,c
 41627  012AAE  50DE               	movf	postinc2,w,c
 41628  012AB0  10DE               	iorwf	postinc2,w,c
 41629  012AB2  10DE               	iorwf	postinc2,w,c
 41630  012AB4  B4D8               	btfsc	status,2,c
 41631  012AB6  D013               	goto	i2l20204
 41632                           
 41633                           ; BSR set to: 0
 41634  012AB8  EE20 F002          	lfsr	2,2
 41635  012ABC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41636  012ABE  26D9               	addwf	fsr2l,f,c
 41637  012AC0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41638  012AC2  22DA               	addwfc	fsr2h,f,c
 41639  012AC4  D801               	call	i2u2622_48
 41640  012AC6  D020               	goto	i2l20208
 41641  012AC8                     i2u2622_48:
 41642  012AC8  0005               	push	
 41643  012ACA  6EFA               	movwf	pclath,c
 41644  012ACC  50DE               	movf	postinc2,w,c
 41645  012ACE  6EFD               	movwf	tosl,c
 41646  012AD0  50DE               	movf	postinc2,w,c
 41647  012AD2  6EFE               	movwf	tosh,c
 41648  012AD4  50DE               	movf	postinc2,w,c
 41649  012AD6  6EFF               	movwf	tosu,c
 41650  012AD8  50FA               	movf	pclath,w,c
 41651  012ADA  0E30               	movlw	48
 41652  012ADC  0012               	return		;indir
 41653  012ADE                     i2l20204:
 41654                           
 41655                           ; BSR set to: 0
 41656  012ADE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41657  012AE2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41658  012AE6  CFDE F072          	movff	postinc2,??i2__doprnt
 41659  012AEA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41660  012AEE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41661  012AF2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41662  012AF6  0E30               	movlw	48
 41663  012AF8  6EDF               	movwf	indf2,c
 41664                           
 41665                           ; BSR set to: 0
 41666  012AFA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41667  012AFE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41668  012B02  2ADE               	incf	postinc2,f,c
 41669  012B04  0E00               	movlw	0
 41670  012B06  22DD               	addwfc	postdec2,f,c
 41671  012B08                     i2l20208:
 41672                           
 41673                           ;doprnt.c: 1437: while(--width);
 41674  012B08  0100               	movlb	0	; () banked
 41675  012B0A  079D               	decf	i2__doprnt@width& (0+255),f,b
 41676  012B0C  A0D8               	btfss	status,0,c
 41677  012B0E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41678  012B10  D7C4               	goto	L58
 41679  012B12                     i2l20210:
 41680                           
 41681                           ; BSR set to: 0
 41682                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 41683  012B12  519D               	movf	i2__doprnt@width& (0+255),w,b
 41684  012B14  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 41685  012B16  B4D8               	btfsc	status,2,c
 41686  012B18  D03B               	goto	i2u2627_40
 41687  012B1A                     i2u2624_40:
 41688                           
 41689                           ; BSR set to: 0
 41690  012B1A  EE20 F002          	lfsr	2,2
 41691  012B1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41692  012B20  26D9               	addwf	fsr2l,f,c
 41693  012B22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41694  012B24  22DA               	addwfc	fsr2h,f,c
 41695  012B26  50DE               	movf	postinc2,w,c
 41696  012B28  10DE               	iorwf	postinc2,w,c
 41697  012B2A  10DE               	iorwf	postinc2,w,c
 41698  012B2C  B4D8               	btfsc	status,2,c
 41699  012B2E  D013               	goto	i2l20216
 41700                           
 41701                           ; BSR set to: 0
 41702  012B30  EE20 F002          	lfsr	2,2
 41703  012B34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41704  012B36  26D9               	addwf	fsr2l,f,c
 41705  012B38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41706  012B3A  22DA               	addwfc	fsr2h,f,c
 41707  012B3C  D801               	call	i2u2626_48
 41708  012B3E  D020               	goto	i2l20220
 41709  012B40                     i2u2626_48:
 41710  012B40  0005               	push	
 41711  012B42  6EFA               	movwf	pclath,c
 41712  012B44  50DE               	movf	postinc2,w,c
 41713  012B46  6EFD               	movwf	tosl,c
 41714  012B48  50DE               	movf	postinc2,w,c
 41715  012B4A  6EFE               	movwf	tosh,c
 41716  012B4C  50DE               	movf	postinc2,w,c
 41717  012B4E  6EFF               	movwf	tosu,c
 41718  012B50  50FA               	movf	pclath,w,c
 41719  012B52  0E20               	movlw	32
 41720  012B54  0012               	return		;indir
 41721  012B56                     i2l20216:
 41722                           
 41723                           ; BSR set to: 0
 41724  012B56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41725  012B5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41726  012B5E  CFDE F072          	movff	postinc2,??i2__doprnt
 41727  012B62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41728  012B66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41729  012B6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41730  012B6E  0E20               	movlw	32
 41731  012B70  6EDF               	movwf	indf2,c
 41732                           
 41733                           ; BSR set to: 0
 41734  012B72  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41735  012B76  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41736  012B7A  2ADE               	incf	postinc2,f,c
 41737  012B7C  0E00               	movlw	0
 41738  012B7E  22DD               	addwfc	postdec2,f,c
 41739  012B80                     i2l20220:
 41740                           
 41741                           ;doprnt.c: 1450: while(--width);
 41742  012B80  0100               	movlb	0	; () banked
 41743  012B82  079D               	decf	i2__doprnt@width& (0+255),f,b
 41744  012B84  A0D8               	btfss	status,0,c
 41745  012B86  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41746  012B88  519D               	movf	i2__doprnt@width& (0+255),w,b
 41747  012B8A  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 41748  012B8C  A4D8               	btfss	status,2,c
 41749  012B8E  D7C5               	goto	i2u2624_40
 41750  012B90                     i2u2627_40:
 41751                           
 41752                           ; BSR set to: 0
 41753                           ;doprnt.c: 1453: if(flag & 0x02)
 41754  012B90  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41755  012B92  D041               	goto	i2l2544
 41756                           
 41757                           ; BSR set to: 0
 41758  012B94  EE20 F002          	lfsr	2,2
 41759  012B98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41760  012B9A  26D9               	addwf	fsr2l,f,c
 41761  012B9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41762  012B9E  22DA               	addwfc	fsr2h,f,c
 41763  012BA0  50DE               	movf	postinc2,w,c
 41764  012BA2  10DE               	iorwf	postinc2,w,c
 41765  012BA4  10DE               	iorwf	postinc2,w,c
 41766  012BA6  B4D8               	btfsc	status,2,c
 41767  012BA8  D01D               	goto	i2l2546
 41768                           
 41769                           ; BSR set to: 0
 41770  012BAA  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41771  012BAC  D004               	goto	i2l20228
 41772                           
 41773                           ; BSR set to: 0
 41774  012BAE  0E00               	movlw	0
 41775  012BB0  6F88               	movwf	(i2__doprnt$4889+1)& (0+255),b
 41776  012BB2  0E2B               	movlw	43
 41777  012BB4  D003               	goto	L42
 41778  012BB6                     i2l20228:
 41779                           
 41780                           ; BSR set to: 0
 41781  012BB6  0E00               	movlw	0
 41782  012BB8  6F88               	movwf	(i2__doprnt$4889+1)& (0+255),b
 41783  012BBA  0E2D               	movlw	45
 41784  012BBC                     L42:
 41785  012BBC  6F87               	movwf	i2__doprnt$4889& (0+255),b
 41786                           
 41787                           ; BSR set to: 0
 41788  012BBE  EE20 F002          	lfsr	2,2
 41789  012BC2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41790  012BC4  26D9               	addwf	fsr2l,f,c
 41791  012BC6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41792  012BC8  22DA               	addwfc	fsr2h,f,c
 41793  012BCA  D801               	call	i2u2631_48
 41794  012BCC  D10B               	goto	i2l20266
 41795  012BCE                     i2u2631_48:
 41796  012BCE  0005               	push	
 41797  012BD0  6EFA               	movwf	pclath,c
 41798  012BD2  50DE               	movf	postinc2,w,c
 41799  012BD4  6EFD               	movwf	tosl,c
 41800  012BD6  50DE               	movf	postinc2,w,c
 41801  012BD8  6EFE               	movwf	tosh,c
 41802  012BDA  50DE               	movf	postinc2,w,c
 41803  012BDC  6EFF               	movwf	tosu,c
 41804  012BDE  50FA               	movf	pclath,w,c
 41805  012BE0  5187               	movf	i2__doprnt$4889& (0+255),w,b
 41806  012BE2  0012               	return		;indir
 41807  012BE4                     i2l2546:
 41808                           
 41809                           ; BSR set to: 0
 41810  012BE4  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41811  012BE6  D004               	goto	i2l20234
 41812                           
 41813                           ; BSR set to: 0
 41814  012BE8  0E00               	movlw	0
 41815  012BEA  6F8A               	movwf	(i2__doprnt$4890+1)& (0+255),b
 41816  012BEC  0E2B               	movlw	43
 41817  012BEE  D003               	goto	L43
 41818  012BF0                     i2l20234:
 41819                           
 41820                           ; BSR set to: 0
 41821  012BF0  0E00               	movlw	0
 41822  012BF2  6F8A               	movwf	(i2__doprnt$4890+1)& (0+255),b
 41823  012BF4  0E2D               	movlw	45
 41824  012BF6                     L43:
 41825  012BF6  6F89               	movwf	i2__doprnt$4890& (0+255),b
 41826                           
 41827                           ; BSR set to: 0
 41828  012BF8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41829  012BFC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41830  012C00  CFDE F072          	movff	postinc2,??i2__doprnt
 41831  012C04  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41832  012C08  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41833  012C0C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41834  012C10  C089  FFDF         	movff	i2__doprnt$4890,indf2
 41835  012C14  D0E0               	goto	i2l20264
 41836  012C16                     i2l2544:
 41837                           
 41838                           ; BSR set to: 0
 41839                           ;doprnt.c: 1462: else if(flag & 0x01)
 41840  012C16  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41841  012C18  D0E5               	goto	i2l20266
 41842                           
 41843                           ; BSR set to: 0
 41844  012C1A  EE20 F002          	lfsr	2,2
 41845  012C1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41846  012C20  26D9               	addwf	fsr2l,f,c
 41847  012C22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41848  012C24  22DA               	addwfc	fsr2h,f,c
 41849  012C26  50DE               	movf	postinc2,w,c
 41850  012C28  10DE               	iorwf	postinc2,w,c
 41851  012C2A  10DE               	iorwf	postinc2,w,c
 41852  012C2C  B4D8               	btfsc	status,2,c
 41853  012C2E  D013               	goto	i2l20244
 41854                           
 41855                           ; BSR set to: 0
 41856  012C30  EE20 F002          	lfsr	2,2
 41857  012C34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41858  012C36  26D9               	addwf	fsr2l,f,c
 41859  012C38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41860  012C3A  22DA               	addwfc	fsr2h,f,c
 41861  012C3C  D801               	call	i2u2635_48
 41862  012C3E  D0D2               	goto	i2l20266
 41863  012C40                     i2u2635_48:
 41864  012C40  0005               	push	
 41865  012C42  6EFA               	movwf	pclath,c
 41866  012C44  50DE               	movf	postinc2,w,c
 41867  012C46  6EFD               	movwf	tosl,c
 41868  012C48  50DE               	movf	postinc2,w,c
 41869  012C4A  6EFE               	movwf	tosh,c
 41870  012C4C  50DE               	movf	postinc2,w,c
 41871  012C4E  6EFF               	movwf	tosu,c
 41872  012C50  50FA               	movf	pclath,w,c
 41873  012C52  0E20               	movlw	32
 41874  012C54  0012               	return		;indir
 41875  012C56                     i2l20244:
 41876                           
 41877                           ; BSR set to: 0
 41878  012C56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41879  012C5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41880  012C5E  CFDE F072          	movff	postinc2,??i2__doprnt
 41881  012C62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41882  012C66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41883  012C6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41884  012C6E  0E20               	movlw	32
 41885  012C70  6EDF               	movwf	indf2,c
 41886  012C72  D0B1               	goto	i2l20264
 41887  012C74                     i2l20248:
 41888                           
 41889                           ; BSR set to: 0
 41890                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 41891  012C74  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 41892  012C78  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 41893  012C7C  90D8               	bcf	status,0,c
 41894  012C7E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 41895  012C80  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 41896  012C82  90D8               	bcf	status,0,c
 41897  012C84  3772               	rlcf	??i2__doprnt& (0+255),f,b
 41898  012C86  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 41899  012C88  0E1F               	movlw	low _dpowers
 41900  012C8A  2572               	addwf	??i2__doprnt& (0+255),w,b
 41901  012C8C  6EF6               	movwf	tblptrl,c
 41902  012C8E  0EEA               	movlw	high _dpowers
 41903  012C90  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 41904  012C92  6EF7               	movwf	tblptrh,c
 41905  012C94                     	if	1	;There are 3 active tblptr bytes
 41906  012C94  6AF8               	clrf	tblptru,c
 41907  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 41908  012C98  22F8               	addwfc	tblptru,f,c
 41909  012C9A                     	endif
 41910  012C9A  0009               	tblrd		*+
 41911  012C9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 41912  012CA0  0009               	tblrd		*+
 41913  012CA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 41914  012CA6  0009               	tblrd		*+
 41915  012CA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 41916  012CAC  000A               	tblrd		*-
 41917  012CAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 41918  012CB2  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 41919  012CB6  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 41920  012CBA  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 41921  012CBE  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 41922  012CC2  EC3F  F0D5         	call	i2___lldiv
 41923  012CC6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 41924  012CCA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 41925  012CCE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 41926  012CD2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 41927  012CD6  0E0A               	movlw	10
 41928  012CD8  6E12               	movwf	i2___llmod@divisor,c
 41929  012CDA  0E00               	movlw	0
 41930  012CDC  6E13               	movwf	i2___llmod@divisor+1,c
 41931  012CDE  0E00               	movlw	0
 41932  012CE0  6E14               	movwf	i2___llmod@divisor+2,c
 41933  012CE2  0E00               	movlw	0
 41934  012CE4  6E15               	movwf	i2___llmod@divisor+3,c
 41935  012CE6  ECBE  F0D6         	call	i2___llmod	;wreg free
 41936  012CEA  500E               	movf	?i2___llmod,w,c
 41937  012CEC  0F30               	addlw	48
 41938  012CEE  0100               	movlb	0	; () banked
 41939  012CF0  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41940                           
 41941                           ;doprnt.c: 1510: break;
 41942  012CF2  D045               	goto	i2l20258
 41943  012CF4                     i2l20250:
 41944                           
 41945                           ; BSR set to: 0
 41946                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 41947  012CF4  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 41948  012CF8  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 41949  012CFC  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 41950  012D00  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 41951  012D04  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 41952  012D08  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 41953  012D0C  90D8               	bcf	status,0,c
 41954  012D0E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 41955  012D10  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 41956  012D12  90D8               	bcf	status,0,c
 41957  012D14  3772               	rlcf	??i2__doprnt& (0+255),f,b
 41958  012D16  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 41959  012D18  0EFF               	movlw	low _hexpowers
 41960  012D1A  2572               	addwf	??i2__doprnt& (0+255),w,b
 41961  012D1C  6EF6               	movwf	tblptrl,c
 41962  012D1E  0EE6               	movlw	high _hexpowers
 41963  012D20  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 41964  012D22  6EF7               	movwf	tblptrh,c
 41965  012D24                     	if	1	;There are 3 active tblptr bytes
 41966  012D24  6AF8               	clrf	tblptru,c
 41967  012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 41968  012D28  22F8               	addwfc	tblptru,f,c
 41969  012D2A                     	endif
 41970  012D2A  0009               	tblrd		*+
 41971  012D2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 41972  012D30  0009               	tblrd		*+
 41973  012D32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 41974  012D36  0009               	tblrd		*+
 41975  012D38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 41976  012D3C  000A               	tblrd		*-
 41977  012D3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 41978  012D42  EC3F  F0D5         	call	i2___lldiv	;wreg free
 41979  012D46  5001               	movf	?i2___lldiv,w,c
 41980  012D48  0B0F               	andlw	15
 41981  012D4A  0100               	movlb	0	; () banked
 41982  012D4C  6F7A               	movwf	i2__doprnt@idx& (0+255),b
 41983                           
 41984                           ; BSR set to: 0
 41985                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 41986  012D4E  0E7E               	movlw	low STR_336
 41987  012D50  257A               	addwf	i2__doprnt@idx& (0+255),w,b
 41988  012D52  6EF6               	movwf	tblptrl,c
 41989  012D54  6AF7               	clrf	tblptrh,c
 41990  012D56  0EFB               	movlw	high STR_336
 41991  012D58  22F7               	addwfc	tblptrh,f,c
 41992  012D5A                     	if	1	;There are 3 active tblptr bytes
 41993  012D5A  6AF8               	clrf	tblptru,c
 41994  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 41995  012D5E  22F8               	addwfc	tblptru,f,c
 41996  012D60                     	endif
 41997  012D60  0008               	tblrd		*
 41998  012D62  CFF5 F0A3          	movff	tablat,i2__doprnt@c
 41999                           
 42000                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 42001  012D66  D00B               	goto	i2l20258
 42002  012D68                     i2l20256:
 42003                           
 42004                           ; BSR set to: 0
 42005  012D68  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 42006  012D6A  0BC0               	andlw	192
 42007                           
 42008                           ; Switch size 1, requested type "simple"
 42009                           ; Number of cases is 3, Range of values is 0 to 192
 42010                           ; switch strategies available:
 42011                           ; Name         Instructions Cycles
 42012                           ; simple_byte           10     6 (average)
 42013                           ;	Chosen strategy is simple_byte
 42014  012D6C  0A00               	xorlw	0	; case 0
 42015  012D6E  B4D8               	btfsc	status,2,c
 42016  012D70  D781               	goto	i2l20248
 42017  012D72  0A80               	xorlw	128	; case 128
 42018  012D74  B4D8               	btfsc	status,2,c
 42019  012D76  D7BE               	goto	i2l20250
 42020  012D78  0A40               	xorlw	64	; case 192
 42021  012D7A  B4D8               	btfsc	status,2,c
 42022  012D7C  D77B               	goto	i2l20248
 42023  012D7E                     i2l20258:
 42024                           
 42025                           ; BSR set to: 0
 42026  012D7E  EE20 F002          	lfsr	2,2
 42027  012D82  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42028  012D84  26D9               	addwf	fsr2l,f,c
 42029  012D86  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42030  012D88  22DA               	addwfc	fsr2h,f,c
 42031  012D8A  50DE               	movf	postinc2,w,c
 42032  012D8C  10DE               	iorwf	postinc2,w,c
 42033  012D8E  10DE               	iorwf	postinc2,w,c
 42034  012D90  B4D8               	btfsc	status,2,c
 42035  012D92  D013               	goto	i2l20262
 42036                           
 42037                           ; BSR set to: 0
 42038  012D94  EE20 F002          	lfsr	2,2
 42039  012D98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42040  012D9A  26D9               	addwf	fsr2l,f,c
 42041  012D9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42042  012D9E  22DA               	addwfc	fsr2h,f,c
 42043  012DA0  D801               	call	i2u2637_48
 42044  012DA2  D020               	goto	i2l20266
 42045  012DA4                     i2u2637_48:
 42046  012DA4  0005               	push	
 42047  012DA6  6EFA               	movwf	pclath,c
 42048  012DA8  50DE               	movf	postinc2,w,c
 42049  012DAA  6EFD               	movwf	tosl,c
 42050  012DAC  50DE               	movf	postinc2,w,c
 42051  012DAE  6EFE               	movwf	tosh,c
 42052  012DB0  50DE               	movf	postinc2,w,c
 42053  012DB2  6EFF               	movwf	tosu,c
 42054  012DB4  50FA               	movf	pclath,w,c
 42055  012DB6  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42056  012DB8  0012               	return		;indir
 42057  012DBA                     i2l20262:
 42058                           
 42059                           ; BSR set to: 0
 42060  012DBA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42061  012DBE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42062  012DC2  CFDE F072          	movff	postinc2,??i2__doprnt
 42063  012DC6  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42064  012DCA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42065  012DCE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42066  012DD2  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 42067  012DD6                     i2l20264:
 42068                           
 42069                           ; BSR set to: 0
 42070  012DD6  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42071  012DDA  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42072  012DDE  2ADE               	incf	postinc2,f,c
 42073  012DE0  0E00               	movlw	0
 42074  012DE2  22DD               	addwfc	postdec2,f,c
 42075  012DE4                     i2l20266:
 42076  012DE4  0100               	movlb	0	; () banked
 42077  012DE6  079F               	decf	i2__doprnt@prec& (0+255),f,b
 42078  012DE8  A0D8               	btfss	status,0,c
 42079  012DEA  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 42080  012DEC  299F               	incf	i2__doprnt@prec& (0+255),w,b
 42081  012DEE  E1BC               	bnz	i2l20256
 42082  012DF0  29A0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 42083  012DF2  A4D8               	btfss	status,2,c
 42084  012DF4  D7B9               	goto	i2l20256
 42085  012DF6                     i2u2638_40:
 42086  012DF6  0100               	movlb	0	; () banked
 42087  012DF8  516E               	movf	i2__doprnt@f& (0+255),w,b
 42088  012DFA  6F72               	movwf	??i2__doprnt& (0+255),b
 42089  012DFC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 42090  012DFE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42091  012E00  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 42092  012E02  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42093  012E04  C072  FFF6         	movff	??i2__doprnt,tblptrl
 42094  012E08  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 42095  012E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 42096  012E0E  6EF8               	movwf	tblptru,c
 42097  012E10  0E0E               	movlw	(high __ramtop+-1)
 42098  012E12  64F7               	cpfsgt	tblptrh,c
 42099  012E14  D003               	bra	i2u2639_47
 42100  012E16  0008               	tblrd		*
 42101  012E18  50F5               	movf	tablat,w,c
 42102  012E1A  D005               	bra	i2u2639_40
 42103  012E1C                     i2u2639_47:
 42104  012E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 42105  012E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 42106  012E24  50EF               	movf	indf0,w,c
 42107  012E26                     i2u2639_40:
 42108  012E26  0100               	movlb	0	; () banked
 42109  012E28  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42110  012E2A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42111  012E2C  A4D8               	btfss	status,2,c
 42112  012E2E  EF94  F08B         	goto	i2l19722
 42113  012E32                     i2u2640_40:
 42114                           
 42115                           ; BSR set to: 0
 42116                           ;doprnt.c: 1559: return 0;
 42117  012E32  0E00               	movlw	0
 42118  012E34  6F6D               	movwf	(?i2__doprnt+1)& (0+255),b
 42119  012E36  0E00               	movlw	0
 42120  012E38  6F6C               	movwf	?i2__doprnt& (0+255),b
 42121                           
 42122                           ; BSR set to: 0
 42123  012E3A  0012               	return		;funcret
 42124  012E3C                     __end_ofi2__doprnt:
 42125                           	opt callstack 0
 42126                           
 42127 ;; *************** function i2_scale *****************
 42128 ;; Defined at:
 42129 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 42130 ;; Parameters:    Size  Location     Type
 42131 ;;  scl             1    wreg     char 
 42132 ;; Auto vars:     Size  Location     Type
 42133 ;;  scl             1   76[COMRAM] char 
 42134 ;; Return value:  Size  Location     Type
 42135 ;;                  4   68[COMRAM] char 
 42136 ;; Registers used:
 42137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42138 ;; Tracked objects:
 42139 ;;		On entry : 0/0
 42140 ;;		On exit  : 0/0
 42141 ;;		Unchanged: 0/0
 42142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42144 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42146 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42147 ;;Total ram usage:        9 bytes
 42148 ;; Hardware stack levels used:    1
 42149 ;; Hardware stack levels required when called:    1
 42150 ;; This function calls:
 42151 ;;		i2___awdiv
 42152 ;;		i2___awmod
 42153 ;;		i2___flmul
 42154 ;; This function is called by:
 42155 ;;		i2__doprnt
 42156 ;; This function uses a non-reentrant model
 42157 ;;
 42158                           
 42159                           	psect	text179
 42160  01560C                     __ptext179:
 42161                           	opt callstack 0
 42162  01560C                     i2_scale:
 42163                           	opt callstack 12
 42164                           
 42165                           ; BSR set to: 0
 42166                           ;incstack = 0
 42167                           ;i2scale@scl stored from wreg
 42168  01560C  6E4D               	movwf	i2scale@scl,c
 42169                           
 42170                           ;doprnt.c: 436: if(scl < 0) {
 42171  01560E  AE4D               	btfss	i2scale@scl,7,c
 42172  015610  D105               	goto	i2l19120
 42173                           
 42174                           ;doprnt.c: 437: scl = -scl;
 42175  015612  6C4D               	negf	i2scale@scl,c
 42176                           
 42177                           ;doprnt.c: 438: if(scl>=110)
 42178  015614  504D               	movf	i2scale@scl,w,c
 42179  015616  0A80               	xorlw	128
 42180  015618  0F12               	addlw	-238
 42181  01561A  A0D8               	btfss	status,0,c
 42182  01561C  D091               	goto	i2l19110
 42183                           
 42184                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 42185  01561E  0E00               	movlw	0
 42186  015620  6E0A               	movwf	i2___awdiv@divisor+1,c
 42187  015622  0E0A               	movlw	10
 42188  015624  6E09               	movwf	i2___awdiv@divisor,c
 42189  015626  0E00               	movlw	0
 42190  015628  6E04               	movwf	i2___awmod@divisor+1,c
 42191  01562A  0E64               	movlw	100
 42192  01562C  6E03               	movwf	i2___awmod@divisor,c
 42193  01562E  504D               	movf	i2scale@scl,w,c
 42194  015630  6E01               	movwf	i2___awmod@dividend,c
 42195  015632  6A02               	clrf	i2___awmod@dividend+1,c
 42196  015634  BE01               	btfsc	i2___awmod@dividend,7,c
 42197  015636  0602               	decf	i2___awmod@dividend+1,f,c
 42198  015638  ECB9  F0D5         	call	i2___awmod
 42199  01563C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 42200  015640  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 42201  015644  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42202  015648  0E09               	movlw	9
 42203  01564A  2607               	addwf	?i2___awdiv,f,c
 42204  01564C  5007               	movf	?i2___awdiv,w,c
 42205  01564E  0D04               	mullw	4
 42206  015650  0ECB               	movlw	low __npowers_
 42207  015652  24F3               	addwf	prodl,w,c
 42208  015654  6EF6               	movwf	tblptrl,c
 42209  015656  0EE6               	movlw	high __npowers_
 42210  015658  20F4               	addwfc	prodh,w,c
 42211  01565A  6EF7               	movwf	tblptrh,c
 42212  01565C                     	if	1	;There are 3 active tblptr bytes
 42213  01565C  6AF8               	clrf	tblptru,c
 42214  01565E  0E00               	movlw	low (__mediumconst shr (0+16))
 42215  015660  22F8               	addwfc	tblptru,f,c
 42216  015662                     	endif
 42217  015662  0009               	tblrd		*+
 42218  015664  CFF5 F030          	movff	tablat,i2___flmul@a
 42219  015668  0009               	tblrd		*+
 42220  01566A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42221  01566E  0009               	tblrd		*+
 42222  015670  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42223  015674  000A               	tblrd		*-
 42224  015676  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42225  01567A  0E00               	movlw	0
 42226  01567C  6E0A               	movwf	i2___awdiv@divisor+1,c
 42227  01567E  0E64               	movlw	100
 42228  015680  6E09               	movwf	i2___awdiv@divisor,c
 42229  015682  504D               	movf	i2scale@scl,w,c
 42230  015684  6E07               	movwf	i2___awdiv@dividend,c
 42231  015686  6A08               	clrf	i2___awdiv@dividend+1,c
 42232  015688  BE07               	btfsc	i2___awdiv@dividend,7,c
 42233  01568A  0608               	decf	i2___awdiv@dividend+1,f,c
 42234  01568C  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42235  015690  0E12               	movlw	18
 42236  015692  2607               	addwf	?i2___awdiv,f,c
 42237  015694  5007               	movf	?i2___awdiv,w,c
 42238  015696  0D04               	mullw	4
 42239  015698  0ECB               	movlw	low __npowers_
 42240  01569A  24F3               	addwf	prodl,w,c
 42241  01569C  6EF6               	movwf	tblptrl,c
 42242  01569E  0EE6               	movlw	high __npowers_
 42243  0156A0  20F4               	addwfc	prodh,w,c
 42244  0156A2  6EF7               	movwf	tblptrh,c
 42245  0156A4                     	if	1	;There are 3 active tblptr bytes
 42246  0156A4  6AF8               	clrf	tblptru,c
 42247  0156A6  0E00               	movlw	low (__mediumconst shr (0+16))
 42248  0156A8  22F8               	addwfc	tblptru,f,c
 42249  0156AA                     	endif
 42250  0156AA  0009               	tblrd		*+
 42251  0156AC  CFF5 F02C          	movff	tablat,i2___flmul@b
 42252  0156B0  0009               	tblrd		*+
 42253  0156B2  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 42254  0156B6  0009               	tblrd		*+
 42255  0156B8  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 42256  0156BC  000A               	tblrd		*-
 42257  0156BE  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 42258  0156C2  ECFC  F0B3         	call	i2___flmul	;wreg free
 42259  0156C6  C02C  F049         	movff	?i2___flmul,i2_scale$6317
 42260  0156CA  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6317+1
 42261  0156CE  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6317+2
 42262  0156D2  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6317+3
 42263                           
 42264                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 42265  0156D6  C049  F02C         	movff	i2_scale$6317,i2___flmul@b
 42266  0156DA  C04A  F02D         	movff	i2_scale$6317+1,i2___flmul@b+1
 42267  0156DE  C04B  F02E         	movff	i2_scale$6317+2,i2___flmul@b+2
 42268  0156E2  C04C  F02F         	movff	i2_scale$6317+3,i2___flmul@b+3
 42269  0156E6  0E00               	movlw	0
 42270  0156E8  6E04               	movwf	i2___awmod@divisor+1,c
 42271  0156EA  0E0A               	movlw	10
 42272  0156EC  6E03               	movwf	i2___awmod@divisor,c
 42273  0156EE  504D               	movf	i2scale@scl,w,c
 42274  0156F0  6E01               	movwf	i2___awmod@dividend,c
 42275  0156F2  6A02               	clrf	i2___awmod@dividend+1,c
 42276  0156F4  BE01               	btfsc	i2___awmod@dividend,7,c
 42277  0156F6  0602               	decf	i2___awmod@dividend+1,f,c
 42278  0156F8  ECB9  F0D5         	call	i2___awmod	;wreg free
 42279  0156FC  5001               	movf	?i2___awmod,w,c
 42280  0156FE  0D04               	mullw	4
 42281  015700  0ECB               	movlw	low __npowers_
 42282  015702  24F3               	addwf	prodl,w,c
 42283  015704  6EF6               	movwf	tblptrl,c
 42284  015706  0EE6               	movlw	high __npowers_
 42285  015708  20F4               	addwfc	prodh,w,c
 42286  01570A  6EF7               	movwf	tblptrh,c
 42287  01570C                     	if	1	;There are 3 active tblptr bytes
 42288  01570C  6AF8               	clrf	tblptru,c
 42289  01570E  0E00               	movlw	low (__mediumconst shr (0+16))
 42290  015710  22F8               	addwfc	tblptru,f,c
 42291  015712                     	endif
 42292  015712  0009               	tblrd		*+
 42293  015714  CFF5 F030          	movff	tablat,i2___flmul@a
 42294  015718  0009               	tblrd		*+
 42295  01571A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42296  01571E  0009               	tblrd		*+
 42297  015720  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42298  015724  000A               	tblrd		*-
 42299  015726  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42300  01572A  ECFC  F0B3         	call	i2___flmul	;wreg free
 42301  01572E  C02C  F045         	movff	?i2___flmul,?i2_scale
 42302  015732  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 42303  015736  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 42304  01573A  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 42305  01573E  0012               	return	
 42306  015740                     i2l19110:
 42307                           
 42308                           ;doprnt.c: 440: else if(scl > 10)
 42309  015740  504D               	movf	i2scale@scl,w,c
 42310  015742  0A80               	xorlw	128
 42311  015744  0F75               	addlw	-139
 42312  015746  A0D8               	btfss	status,0,c
 42313  015748  D051               	goto	i2l19116
 42314                           
 42315                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 42316  01574A  0E00               	movlw	0
 42317  01574C  6E0A               	movwf	i2___awdiv@divisor+1,c
 42318  01574E  0E0A               	movlw	10
 42319  015750  6E09               	movwf	i2___awdiv@divisor,c
 42320  015752  504D               	movf	i2scale@scl,w,c
 42321  015754  6E07               	movwf	i2___awdiv@dividend,c
 42322  015756  6A08               	clrf	i2___awdiv@dividend+1,c
 42323  015758  BE07               	btfsc	i2___awdiv@dividend,7,c
 42324  01575A  0608               	decf	i2___awdiv@dividend+1,f,c
 42325  01575C  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42326  015760  0E09               	movlw	9
 42327  015762  2607               	addwf	?i2___awdiv,f,c
 42328  015764  5007               	movf	?i2___awdiv,w,c
 42329  015766  0D04               	mullw	4
 42330  015768  0ECB               	movlw	low __npowers_
 42331  01576A  24F3               	addwf	prodl,w,c
 42332  01576C  6EF6               	movwf	tblptrl,c
 42333  01576E  0EE6               	movlw	high __npowers_
 42334  015770  20F4               	addwfc	prodh,w,c
 42335  015772  6EF7               	movwf	tblptrh,c
 42336  015774                     	if	1	;There are 3 active tblptr bytes
 42337  015774  6AF8               	clrf	tblptru,c
 42338  015776  0E00               	movlw	low (__mediumconst shr (0+16))
 42339  015778  22F8               	addwfc	tblptru,f,c
 42340  01577A                     	endif
 42341  01577A  0009               	tblrd		*+
 42342  01577C  CFF5 F02C          	movff	tablat,i2___flmul@b
 42343  015780  0009               	tblrd		*+
 42344  015782  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 42345  015786  0009               	tblrd		*+
 42346  015788  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 42347  01578C  000A               	tblrd		*-
 42348  01578E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 42349  015792  0E00               	movlw	0
 42350  015794  6E04               	movwf	i2___awmod@divisor+1,c
 42351  015796  0E0A               	movlw	10
 42352  015798  6E03               	movwf	i2___awmod@divisor,c
 42353  01579A  504D               	movf	i2scale@scl,w,c
 42354  01579C  6E01               	movwf	i2___awmod@dividend,c
 42355  01579E  6A02               	clrf	i2___awmod@dividend+1,c
 42356  0157A0  BE01               	btfsc	i2___awmod@dividend,7,c
 42357  0157A2  0602               	decf	i2___awmod@dividend+1,f,c
 42358  0157A4  ECB9  F0D5         	call	i2___awmod	;wreg free
 42359  0157A8  5001               	movf	?i2___awmod,w,c
 42360  0157AA  0D04               	mullw	4
 42361  0157AC  0ECB               	movlw	low __npowers_
 42362  0157AE  24F3               	addwf	prodl,w,c
 42363  0157B0  6EF6               	movwf	tblptrl,c
 42364  0157B2  0EE6               	movlw	high __npowers_
 42365  0157B4  20F4               	addwfc	prodh,w,c
 42366  0157B6  6EF7               	movwf	tblptrh,c
 42367  0157B8                     	if	1	;There are 3 active tblptr bytes
 42368  0157B8  6AF8               	clrf	tblptru,c
 42369  0157BA  0E00               	movlw	low (__mediumconst shr (0+16))
 42370  0157BC  22F8               	addwfc	tblptru,f,c
 42371  0157BE                     	endif
 42372  0157BE  0009               	tblrd		*+
 42373  0157C0  CFF5 F030          	movff	tablat,i2___flmul@a
 42374  0157C4  0009               	tblrd		*+
 42375  0157C6  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42376  0157CA  0009               	tblrd		*+
 42377  0157CC  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42378  0157D0  000A               	tblrd		*-
 42379  0157D2  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42380  0157D6  ECFC  F0B3         	call	i2___flmul	;wreg free
 42381  0157DA  C02C  F045         	movff	?i2___flmul,?i2_scale
 42382  0157DE  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 42383  0157E2  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 42384  0157E6  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 42385  0157EA  0012               	return	
 42386  0157EC                     i2l19116:
 42387                           
 42388                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 42389  0157EC  504D               	movf	i2scale@scl,w,c
 42390  0157EE  0D04               	mullw	4
 42391  0157F0  0ECB               	movlw	low __npowers_
 42392  0157F2  24F3               	addwf	prodl,w,c
 42393  0157F4  6EF6               	movwf	tblptrl,c
 42394  0157F6  0EE6               	movlw	high __npowers_
 42395  0157F8  20F4               	addwfc	prodh,w,c
 42396  0157FA  6EF7               	movwf	tblptrh,c
 42397  0157FC                     	if	1	;There are 3 active tblptr bytes
 42398  0157FC  6AF8               	clrf	tblptru,c
 42399  0157FE  0E00               	movlw	low (__mediumconst shr (0+16))
 42400  015800  22F8               	addwfc	tblptru,f,c
 42401  015802                     	endif
 42402  015802  0009               	tblrd		*+
 42403  015804  CFF5 F045          	movff	tablat,?i2_scale
 42404  015808  0009               	tblrd		*+
 42405  01580A  CFF5 F046          	movff	tablat,?i2_scale+1
 42406  01580E  0009               	tblrd		*+
 42407  015810  CFF5 F047          	movff	tablat,?i2_scale+2
 42408  015814  000A               	tblrd		*-
 42409  015816  CFF5 F048          	movff	tablat,?i2_scale+3
 42410  01581A  0012               	return	
 42411  01581C                     i2l19120:
 42412                           
 42413                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 42414  01581C  504D               	movf	i2scale@scl,w,c
 42415  01581E  0A80               	xorlw	128
 42416  015820  0F12               	addlw	-238
 42417  015822  A0D8               	btfss	status,0,c
 42418  015824  D091               	goto	i2l19128
 42419                           
 42420                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 42421  015826  0E00               	movlw	0
 42422  015828  6E0A               	movwf	i2___awdiv@divisor+1,c
 42423  01582A  0E0A               	movlw	10
 42424  01582C  6E09               	movwf	i2___awdiv@divisor,c
 42425  01582E  0E00               	movlw	0
 42426  015830  6E04               	movwf	i2___awmod@divisor+1,c
 42427  015832  0E64               	movlw	100
 42428  015834  6E03               	movwf	i2___awmod@divisor,c
 42429  015836  504D               	movf	i2scale@scl,w,c
 42430  015838  6E01               	movwf	i2___awmod@dividend,c
 42431  01583A  6A02               	clrf	i2___awmod@dividend+1,c
 42432  01583C  BE01               	btfsc	i2___awmod@dividend,7,c
 42433  01583E  0602               	decf	i2___awmod@dividend+1,f,c
 42434  015840  ECB9  F0D5         	call	i2___awmod	;wreg free
 42435  015844  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 42436  015848  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 42437  01584C  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42438  015850  0E09               	movlw	9
 42439  015852  2607               	addwf	?i2___awdiv,f,c
 42440  015854  5007               	movf	?i2___awdiv,w,c
 42441  015856  0D04               	mullw	4
 42442  015858  0E97               	movlw	low __powers_
 42443  01585A  24F3               	addwf	prodl,w,c
 42444  01585C  6EF6               	movwf	tblptrl,c
 42445  01585E  0EE6               	movlw	high __powers_
 42446  015860  20F4               	addwfc	prodh,w,c
 42447  015862  6EF7               	movwf	tblptrh,c
 42448  015864                     	if	1	;There are 3 active tblptr bytes
 42449  015864  6AF8               	clrf	tblptru,c
 42450  015866  0E00               	movlw	low (__mediumconst shr (0+16))
 42451  015868  22F8               	addwfc	tblptru,f,c
 42452  01586A                     	endif
 42453  01586A  0009               	tblrd		*+
 42454  01586C  CFF5 F030          	movff	tablat,i2___flmul@a
 42455  015870  0009               	tblrd		*+
 42456  015872  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42457  015876  0009               	tblrd		*+
 42458  015878  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42459  01587C  000A               	tblrd		*-
 42460  01587E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42461  015882  0E00               	movlw	0
 42462  015884  6E0A               	movwf	i2___awdiv@divisor+1,c
 42463  015886  0E64               	movlw	100
 42464  015888  6E09               	movwf	i2___awdiv@divisor,c
 42465  01588A  504D               	movf	i2scale@scl,w,c
 42466  01588C  6E07               	movwf	i2___awdiv@dividend,c
 42467  01588E  6A08               	clrf	i2___awdiv@dividend+1,c
 42468  015890  BE07               	btfsc	i2___awdiv@dividend,7,c
 42469  015892  0608               	decf	i2___awdiv@dividend+1,f,c
 42470  015894  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42471  015898  0E12               	movlw	18
 42472  01589A  2607               	addwf	?i2___awdiv,f,c
 42473  01589C  5007               	movf	?i2___awdiv,w,c
 42474  01589E  0D04               	mullw	4
 42475  0158A0  0E97               	movlw	low __powers_
 42476  0158A2  24F3               	addwf	prodl,w,c
 42477  0158A4  6EF6               	movwf	tblptrl,c
 42478  0158A6  0EE6               	movlw	high __powers_
 42479  0158A8  20F4               	addwfc	prodh,w,c
 42480  0158AA  6EF7               	movwf	tblptrh,c
 42481  0158AC                     	if	1	;There are 3 active tblptr bytes
 42482  0158AC  6AF8               	clrf	tblptru,c
 42483  0158AE  0E00               	movlw	low (__mediumconst shr (0+16))
 42484  0158B0  22F8               	addwfc	tblptru,f,c
 42485  0158B2                     	endif
 42486  0158B2  0009               	tblrd		*+
 42487  0158B4  CFF5 F02C          	movff	tablat,i2___flmul@b
 42488  0158B8  0009               	tblrd		*+
 42489  0158BA  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 42490  0158BE  0009               	tblrd		*+
 42491  0158C0  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 42492  0158C4  000A               	tblrd		*-
 42493  0158C6  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 42494  0158CA  ECFC  F0B3         	call	i2___flmul	;wreg free
 42495  0158CE  C02C  F049         	movff	?i2___flmul,i2_scale$6317
 42496  0158D2  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6317+1
 42497  0158D6  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6317+2
 42498  0158DA  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6317+3
 42499                           
 42500                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 42501  0158DE  C049  F02C         	movff	i2_scale$6317,i2___flmul@b
 42502  0158E2  C04A  F02D         	movff	i2_scale$6317+1,i2___flmul@b+1
 42503  0158E6  C04B  F02E         	movff	i2_scale$6317+2,i2___flmul@b+2
 42504  0158EA  C04C  F02F         	movff	i2_scale$6317+3,i2___flmul@b+3
 42505  0158EE  0E00               	movlw	0
 42506  0158F0  6E04               	movwf	i2___awmod@divisor+1,c
 42507  0158F2  0E0A               	movlw	10
 42508  0158F4  6E03               	movwf	i2___awmod@divisor,c
 42509  0158F6  504D               	movf	i2scale@scl,w,c
 42510  0158F8  6E01               	movwf	i2___awmod@dividend,c
 42511  0158FA  6A02               	clrf	i2___awmod@dividend+1,c
 42512  0158FC  BE01               	btfsc	i2___awmod@dividend,7,c
 42513  0158FE  0602               	decf	i2___awmod@dividend+1,f,c
 42514  015900  ECB9  F0D5         	call	i2___awmod	;wreg free
 42515  015904  5001               	movf	?i2___awmod,w,c
 42516  015906  0D04               	mullw	4
 42517  015908  0E97               	movlw	low __powers_
 42518  01590A  24F3               	addwf	prodl,w,c
 42519  01590C  6EF6               	movwf	tblptrl,c
 42520  01590E  0EE6               	movlw	high __powers_
 42521  015910  20F4               	addwfc	prodh,w,c
 42522  015912  6EF7               	movwf	tblptrh,c
 42523  015914                     	if	1	;There are 3 active tblptr bytes
 42524  015914  6AF8               	clrf	tblptru,c
 42525  015916  0E00               	movlw	low (__mediumconst shr (0+16))
 42526  015918  22F8               	addwfc	tblptru,f,c
 42527  01591A                     	endif
 42528  01591A  0009               	tblrd		*+
 42529  01591C  CFF5 F030          	movff	tablat,i2___flmul@a
 42530  015920  0009               	tblrd		*+
 42531  015922  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42532  015926  0009               	tblrd		*+
 42533  015928  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42534  01592C  000A               	tblrd		*-
 42535  01592E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42536  015932  ECFC  F0B3         	call	i2___flmul	;wreg free
 42537  015936  C02C  F045         	movff	?i2___flmul,?i2_scale
 42538  01593A  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 42539  01593E  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 42540  015942  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 42541  015946  0012               	return	
 42542  015948                     i2l19128:
 42543                           
 42544                           ;doprnt.c: 446: else if(scl > 10)
 42545  015948  504D               	movf	i2scale@scl,w,c
 42546  01594A  0A80               	xorlw	128
 42547  01594C  0F75               	addlw	-139
 42548  01594E  A0D8               	btfss	status,0,c
 42549  015950  D051               	goto	i2l19134
 42550                           
 42551                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 42552  015952  0E00               	movlw	0
 42553  015954  6E0A               	movwf	i2___awdiv@divisor+1,c
 42554  015956  0E0A               	movlw	10
 42555  015958  6E09               	movwf	i2___awdiv@divisor,c
 42556  01595A  504D               	movf	i2scale@scl,w,c
 42557  01595C  6E07               	movwf	i2___awdiv@dividend,c
 42558  01595E  6A08               	clrf	i2___awdiv@dividend+1,c
 42559  015960  BE07               	btfsc	i2___awdiv@dividend,7,c
 42560  015962  0608               	decf	i2___awdiv@dividend+1,f,c
 42561  015964  ECFD  F0D4         	call	i2___awdiv	;wreg free
 42562  015968  0E09               	movlw	9
 42563  01596A  2607               	addwf	?i2___awdiv,f,c
 42564  01596C  5007               	movf	?i2___awdiv,w,c
 42565  01596E  0D04               	mullw	4
 42566  015970  0E97               	movlw	low __powers_
 42567  015972  24F3               	addwf	prodl,w,c
 42568  015974  6EF6               	movwf	tblptrl,c
 42569  015976  0EE6               	movlw	high __powers_
 42570  015978  20F4               	addwfc	prodh,w,c
 42571  01597A  6EF7               	movwf	tblptrh,c
 42572  01597C                     	if	1	;There are 3 active tblptr bytes
 42573  01597C  6AF8               	clrf	tblptru,c
 42574  01597E  0E00               	movlw	low (__mediumconst shr (0+16))
 42575  015980  22F8               	addwfc	tblptru,f,c
 42576  015982                     	endif
 42577  015982  0009               	tblrd		*+
 42578  015984  CFF5 F02C          	movff	tablat,i2___flmul@b
 42579  015988  0009               	tblrd		*+
 42580  01598A  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 42581  01598E  0009               	tblrd		*+
 42582  015990  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 42583  015994  000A               	tblrd		*-
 42584  015996  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 42585  01599A  0E00               	movlw	0
 42586  01599C  6E04               	movwf	i2___awmod@divisor+1,c
 42587  01599E  0E0A               	movlw	10
 42588  0159A0  6E03               	movwf	i2___awmod@divisor,c
 42589  0159A2  504D               	movf	i2scale@scl,w,c
 42590  0159A4  6E01               	movwf	i2___awmod@dividend,c
 42591  0159A6  6A02               	clrf	i2___awmod@dividend+1,c
 42592  0159A8  BE01               	btfsc	i2___awmod@dividend,7,c
 42593  0159AA  0602               	decf	i2___awmod@dividend+1,f,c
 42594  0159AC  ECB9  F0D5         	call	i2___awmod	;wreg free
 42595  0159B0  5001               	movf	?i2___awmod,w,c
 42596  0159B2  0D04               	mullw	4
 42597  0159B4  0E97               	movlw	low __powers_
 42598  0159B6  24F3               	addwf	prodl,w,c
 42599  0159B8  6EF6               	movwf	tblptrl,c
 42600  0159BA  0EE6               	movlw	high __powers_
 42601  0159BC  20F4               	addwfc	prodh,w,c
 42602  0159BE  6EF7               	movwf	tblptrh,c
 42603  0159C0                     	if	1	;There are 3 active tblptr bytes
 42604  0159C0  6AF8               	clrf	tblptru,c
 42605  0159C2  0E00               	movlw	low (__mediumconst shr (0+16))
 42606  0159C4  22F8               	addwfc	tblptru,f,c
 42607  0159C6                     	endif
 42608  0159C6  0009               	tblrd		*+
 42609  0159C8  CFF5 F030          	movff	tablat,i2___flmul@a
 42610  0159CC  0009               	tblrd		*+
 42611  0159CE  CFF5 F031          	movff	tablat,i2___flmul@a+1
 42612  0159D2  0009               	tblrd		*+
 42613  0159D4  CFF5 F032          	movff	tablat,i2___flmul@a+2
 42614  0159D8  000A               	tblrd		*-
 42615  0159DA  CFF5 F033          	movff	tablat,i2___flmul@a+3
 42616  0159DE  ECFC  F0B3         	call	i2___flmul	;wreg free
 42617  0159E2  C02C  F045         	movff	?i2___flmul,?i2_scale
 42618  0159E6  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 42619  0159EA  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 42620  0159EE  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 42621  0159F2  0012               	return	
 42622  0159F4                     i2l19134:
 42623                           
 42624                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 42625  0159F4  504D               	movf	i2scale@scl,w,c
 42626  0159F6  0D04               	mullw	4
 42627  0159F8  0E97               	movlw	low __powers_
 42628  0159FA  24F3               	addwf	prodl,w,c
 42629  0159FC  6EF6               	movwf	tblptrl,c
 42630  0159FE  0EE6               	movlw	high __powers_
 42631  015A00  20F4               	addwfc	prodh,w,c
 42632  015A02  6EF7               	movwf	tblptrh,c
 42633  015A04                     	if	1	;There are 3 active tblptr bytes
 42634  015A04  6AF8               	clrf	tblptru,c
 42635  015A06  0E00               	movlw	low (__mediumconst shr (0+16))
 42636  015A08  22F8               	addwfc	tblptru,f,c
 42637  015A0A                     	endif
 42638  015A0A  0009               	tblrd		*+
 42639  015A0C  CFF5 F045          	movff	tablat,?i2_scale
 42640  015A10  0009               	tblrd		*+
 42641  015A12  CFF5 F046          	movff	tablat,?i2_scale+1
 42642  015A16  0009               	tblrd		*+
 42643  015A18  CFF5 F047          	movff	tablat,?i2_scale+2
 42644  015A1C  000A               	tblrd		*-
 42645  015A1E  CFF5 F048          	movff	tablat,?i2_scale+3
 42646  015A22  0012               	return		;funcret
 42647  015A24                     __end_ofi2_scale:
 42648                           	opt callstack 0
 42649                           
 42650 ;; *************** function i2___awmod *****************
 42651 ;; Defined at:
 42652 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 42653 ;; Parameters:    Size  Location     Type
 42654 ;;  dividend        2    0[COMRAM] int 
 42655 ;;  divisor         2    2[COMRAM] int 
 42656 ;; Auto vars:     Size  Location     Type
 42657 ;;  __awmod         1    5[COMRAM] unsigned char 
 42658 ;;  __awmod         1    4[COMRAM] unsigned char 
 42659 ;; Return value:  Size  Location     Type
 42660 ;;                  2    0[COMRAM] int 
 42661 ;; Registers used:
 42662 ;;		wreg, status,2, status,0
 42663 ;; Tracked objects:
 42664 ;;		On entry : 0/0
 42665 ;;		On exit  : 0/0
 42666 ;;		Unchanged: 0/0
 42667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42672 ;;Total ram usage:        6 bytes
 42673 ;; Hardware stack levels used:    1
 42674 ;; This function calls:
 42675 ;;		Nothing
 42676 ;; This function is called by:
 42677 ;;		i2_scale
 42678 ;; This function uses a non-reentrant model
 42679 ;;
 42680                           
 42681                           	psect	text180
 42682  01AB72                     __ptext180:
 42683                           	opt callstack 0
 42684  01AB72                     i2___awmod:
 42685                           	opt callstack 12
 42686                           
 42687                           ;incstack = 0
 42688  01AB72  0E00               	movlw	0
 42689  01AB74  6E06               	movwf	i2___awmod@sign,c
 42690  01AB76  AE02               	btfss	i2___awmod@dividend+1,7,c
 42691  01AB78  D006               	goto	i2l18288
 42692  01AB7A  6C01               	negf	i2___awmod@dividend,c
 42693  01AB7C  1E02               	comf	i2___awmod@dividend+1,f,c
 42694  01AB7E  B0D8               	btfsc	status,0,c
 42695  01AB80  2A02               	incf	i2___awmod@dividend+1,f,c
 42696  01AB82  0E01               	movlw	1
 42697  01AB84  6E06               	movwf	i2___awmod@sign,c
 42698  01AB86                     i2l18288:
 42699  01AB86  AE04               	btfss	i2___awmod@divisor+1,7,c
 42700  01AB88  D004               	goto	i2l18292
 42701  01AB8A  6C03               	negf	i2___awmod@divisor,c
 42702  01AB8C  1E04               	comf	i2___awmod@divisor+1,f,c
 42703  01AB8E  B0D8               	btfsc	status,0,c
 42704  01AB90  2A04               	incf	i2___awmod@divisor+1,f,c
 42705  01AB92                     i2l18292:
 42706  01AB92  5003               	movf	i2___awmod@divisor,w,c
 42707  01AB94  1004               	iorwf	i2___awmod@divisor+1,w,c
 42708  01AB96  B4D8               	btfsc	status,2,c
 42709  01AB98  D018               	goto	i2l18308
 42710  01AB9A  0E01               	movlw	1
 42711  01AB9C  6E05               	movwf	i2___awmod@counter,c
 42712  01AB9E  D004               	goto	i2l18298
 42713  01ABA0                     i2l18296:
 42714  01ABA0  90D8               	bcf	status,0,c
 42715  01ABA2  3603               	rlcf	i2___awmod@divisor,f,c
 42716  01ABA4  3604               	rlcf	i2___awmod@divisor+1,f,c
 42717  01ABA6  2A05               	incf	i2___awmod@counter,f,c
 42718  01ABA8                     i2l18298:
 42719  01ABA8  AE04               	btfss	i2___awmod@divisor+1,7,c
 42720  01ABAA  D7FA               	goto	i2l18296
 42721  01ABAC                     i2u2308_40:
 42722  01ABAC  5003               	movf	i2___awmod@divisor,w,c
 42723  01ABAE  5C01               	subwf	i2___awmod@dividend,w,c
 42724  01ABB0  5004               	movf	i2___awmod@divisor+1,w,c
 42725  01ABB2  5802               	subwfb	i2___awmod@dividend+1,w,c
 42726  01ABB4  A0D8               	btfss	status,0,c
 42727  01ABB6  D004               	goto	i2l18304
 42728  01ABB8  5003               	movf	i2___awmod@divisor,w,c
 42729  01ABBA  5E01               	subwf	i2___awmod@dividend,f,c
 42730  01ABBC  5004               	movf	i2___awmod@divisor+1,w,c
 42731  01ABBE  5A02               	subwfb	i2___awmod@dividend+1,f,c
 42732  01ABC0                     i2l18304:
 42733  01ABC0  90D8               	bcf	status,0,c
 42734  01ABC2  3204               	rrcf	i2___awmod@divisor+1,f,c
 42735  01ABC4  3203               	rrcf	i2___awmod@divisor,f,c
 42736  01ABC6  2E05               	decfsz	i2___awmod@counter,f,c
 42737  01ABC8  D7F1               	goto	i2u2308_40
 42738  01ABCA                     i2l18308:
 42739  01ABCA  5006               	movf	i2___awmod@sign,w,c
 42740  01ABCC  B4D8               	btfsc	status,2,c
 42741  01ABCE  D004               	goto	i2l18312
 42742  01ABD0  6C01               	negf	i2___awmod@dividend,c
 42743  01ABD2  1E02               	comf	i2___awmod@dividend+1,f,c
 42744  01ABD4  B0D8               	btfsc	status,0,c
 42745  01ABD6  2A02               	incf	i2___awmod@dividend+1,f,c
 42746  01ABD8                     i2l18312:
 42747  01ABD8  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 42748  01ABDC  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 42749  01ABE0  0012               	return		;funcret
 42750  01ABE2                     __end_ofi2___awmod:
 42751                           	opt callstack 0
 42752                           
 42753 ;; *************** function i2___awdiv *****************
 42754 ;; Defined at:
 42755 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 42756 ;; Parameters:    Size  Location     Type
 42757 ;;  dividend        2    6[COMRAM] int 
 42758 ;;  divisor         2    8[COMRAM] int 
 42759 ;; Auto vars:     Size  Location     Type
 42760 ;;  __awdiv         2   12[COMRAM] int 
 42761 ;;  __awdiv         1   11[COMRAM] unsigned char 
 42762 ;;  __awdiv         1   10[COMRAM] unsigned char 
 42763 ;; Return value:  Size  Location     Type
 42764 ;;                  2    6[COMRAM] int 
 42765 ;; Registers used:
 42766 ;;		wreg, status,2, status,0
 42767 ;; Tracked objects:
 42768 ;;		On entry : 0/0
 42769 ;;		On exit  : 0/0
 42770 ;;		Unchanged: 0/0
 42771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42776 ;;Total ram usage:        8 bytes
 42777 ;; Hardware stack levels used:    1
 42778 ;; This function calls:
 42779 ;;		Nothing
 42780 ;; This function is called by:
 42781 ;;		i2_scale
 42782 ;;		i2__doprnt
 42783 ;; This function uses a non-reentrant model
 42784 ;;
 42785                           
 42786                           	psect	text181
 42787  01A9FA                     __ptext181:
 42788                           	opt callstack 0
 42789  01A9FA                     i2___awdiv:
 42790                           	opt callstack 12
 42791                           
 42792                           ;incstack = 0
 42793  01A9FA  0E00               	movlw	0
 42794  01A9FC  6E0C               	movwf	i2___awdiv@sign,c
 42795  01A9FE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 42796  01AA00  D006               	goto	i2l18244
 42797  01AA02  6C09               	negf	i2___awdiv@divisor,c
 42798  01AA04  1E0A               	comf	i2___awdiv@divisor+1,f,c
 42799  01AA06  B0D8               	btfsc	status,0,c
 42800  01AA08  2A0A               	incf	i2___awdiv@divisor+1,f,c
 42801  01AA0A  0E01               	movlw	1
 42802  01AA0C  6E0C               	movwf	i2___awdiv@sign,c
 42803  01AA0E                     i2l18244:
 42804  01AA0E  AE08               	btfss	i2___awdiv@dividend+1,7,c
 42805  01AA10  D006               	goto	i2l18250
 42806  01AA12  6C07               	negf	i2___awdiv@dividend,c
 42807  01AA14  1E08               	comf	i2___awdiv@dividend+1,f,c
 42808  01AA16  B0D8               	btfsc	status,0,c
 42809  01AA18  2A08               	incf	i2___awdiv@dividend+1,f,c
 42810  01AA1A  0E01               	movlw	1
 42811  01AA1C  1A0C               	xorwf	i2___awdiv@sign,f,c
 42812  01AA1E                     i2l18250:
 42813  01AA1E  0E00               	movlw	0
 42814  01AA20  6E0E               	movwf	i2___awdiv@quotient+1,c
 42815  01AA22  0E00               	movlw	0
 42816  01AA24  6E0D               	movwf	i2___awdiv@quotient,c
 42817  01AA26  5009               	movf	i2___awdiv@divisor,w,c
 42818  01AA28  100A               	iorwf	i2___awdiv@divisor+1,w,c
 42819  01AA2A  B4D8               	btfsc	status,2,c
 42820  01AA2C  D01C               	goto	i2l18272
 42821  01AA2E  0E01               	movlw	1
 42822  01AA30  6E0B               	movwf	i2___awdiv@counter,c
 42823  01AA32  D004               	goto	i2l18258
 42824  01AA34                     i2l18256:
 42825  01AA34  90D8               	bcf	status,0,c
 42826  01AA36  3609               	rlcf	i2___awdiv@divisor,f,c
 42827  01AA38  360A               	rlcf	i2___awdiv@divisor+1,f,c
 42828  01AA3A  2A0B               	incf	i2___awdiv@counter,f,c
 42829  01AA3C                     i2l18258:
 42830  01AA3C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 42831  01AA3E  D7FA               	goto	i2l18256
 42832  01AA40                     i2u2302_40:
 42833  01AA40  90D8               	bcf	status,0,c
 42834  01AA42  360D               	rlcf	i2___awdiv@quotient,f,c
 42835  01AA44  360E               	rlcf	i2___awdiv@quotient+1,f,c
 42836  01AA46  5009               	movf	i2___awdiv@divisor,w,c
 42837  01AA48  5C07               	subwf	i2___awdiv@dividend,w,c
 42838  01AA4A  500A               	movf	i2___awdiv@divisor+1,w,c
 42839  01AA4C  5808               	subwfb	i2___awdiv@dividend+1,w,c
 42840  01AA4E  A0D8               	btfss	status,0,c
 42841  01AA50  D005               	goto	i2l18268
 42842  01AA52  5009               	movf	i2___awdiv@divisor,w,c
 42843  01AA54  5E07               	subwf	i2___awdiv@dividend,f,c
 42844  01AA56  500A               	movf	i2___awdiv@divisor+1,w,c
 42845  01AA58  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 42846  01AA5A  800D               	bsf	i2___awdiv@quotient,0,c
 42847  01AA5C                     i2l18268:
 42848  01AA5C  90D8               	bcf	status,0,c
 42849  01AA5E  320A               	rrcf	i2___awdiv@divisor+1,f,c
 42850  01AA60  3209               	rrcf	i2___awdiv@divisor,f,c
 42851  01AA62  2E0B               	decfsz	i2___awdiv@counter,f,c
 42852  01AA64  D7ED               	goto	i2u2302_40
 42853  01AA66                     i2l18272:
 42854  01AA66  500C               	movf	i2___awdiv@sign,w,c
 42855  01AA68  B4D8               	btfsc	status,2,c
 42856  01AA6A  D004               	goto	i2l18276
 42857  01AA6C  6C0D               	negf	i2___awdiv@quotient,c
 42858  01AA6E  1E0E               	comf	i2___awdiv@quotient+1,f,c
 42859  01AA70  B0D8               	btfsc	status,0,c
 42860  01AA72  2A0E               	incf	i2___awdiv@quotient+1,f,c
 42861  01AA74                     i2l18276:
 42862  01AA74  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 42863  01AA78  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 42864  01AA7C  0012               	return		;funcret
 42865  01AA7E                     __end_ofi2___awdiv:
 42866                           	opt callstack 0
 42867                           
 42868 ;; *************** function i2_putch *****************
 42869 ;; Defined at:
 42870 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 42871 ;; Parameters:    Size  Location     Type
 42872 ;;  txData          1    wreg     unsigned char 
 42873 ;; Auto vars:     Size  Location     Type
 42874 ;;  txData          1    1[COMRAM] unsigned char 
 42875 ;; Return value:  Size  Location     Type
 42876 ;;                  1    wreg      void 
 42877 ;; Registers used:
 42878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42879 ;; Tracked objects:
 42880 ;;		On entry : 0/0
 42881 ;;		On exit  : 0/0
 42882 ;;		Unchanged: 0/0
 42883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42888 ;;Total ram usage:        1 bytes
 42889 ;; Hardware stack levels used:    1
 42890 ;; Hardware stack levels required when called:    1
 42891 ;; This function calls:
 42892 ;;		i2_EUSART2_Write
 42893 ;; This function is called by:
 42894 ;;		i2_printf
 42895 ;;		i2__doprnt
 42896 ;; This function uses a non-reentrant model
 42897 ;;
 42898                           
 42899                           	psect	text182
 42900  01C152                     __ptext182:
 42901                           	opt callstack 0
 42902  01C152                     i2_putch:
 42903                           	opt callstack 12
 42904                           
 42905                           ;incstack = 0
 42906                           ;i2putch@txData stored from wreg
 42907  01C152  6E02               	movwf	i2putch@txData,c
 42908                           
 42909                           ;eusart2.c: 184: EUSART2_Write(txData);
 42910  01C154  5002               	movf	i2putch@txData,w,c
 42911  01C156  ECC8  F0DA         	call	i2_EUSART2_Write
 42912  01C15A  0012               	return		;funcret
 42913  01C15C                     __end_ofi2_putch:
 42914                           	opt callstack 0
 42915                           
 42916 ;; *************** function i2_EUSART2_Write *****************
 42917 ;; Defined at:
 42918 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 42919 ;; Parameters:    Size  Location     Type
 42920 ;;  txData          1    wreg     unsigned char 
 42921 ;; Auto vars:     Size  Location     Type
 42922 ;;  txData          1    0[COMRAM] unsigned char 
 42923 ;; Return value:  Size  Location     Type
 42924 ;;                  1    wreg      void 
 42925 ;; Registers used:
 42926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42927 ;; Tracked objects:
 42928 ;;		On entry : 0/0
 42929 ;;		On exit  : 0/0
 42930 ;;		Unchanged: 0/0
 42931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42936 ;;Total ram usage:        1 bytes
 42937 ;; Hardware stack levels used:    1
 42938 ;; This function calls:
 42939 ;;		Nothing
 42940 ;; This function is called by:
 42941 ;;		i2_putch
 42942 ;; This function uses a non-reentrant model
 42943 ;;
 42944                           
 42945                           	psect	text183
 42946  01B590                     __ptext183:
 42947                           	opt callstack 0
 42948  01B590                     i2_EUSART2_Write:
 42949                           	opt callstack 12
 42950                           
 42951                           ;incstack = 0
 42952                           ;i2EUSART2_Write@txData stored from wreg
 42953  01B590  6E01               	movwf	i2EUSART2_Write@txData,c
 42954                           
 42955                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 42956  01B592  D001               	goto	i2l18220
 42957  01B594                     i2l122:
 42958                           
 42959                           ; BSR set to: 1
 42960  01B594  0004               	clrwdt		;# 
 42961  01B596                     i2l18220:
 42962  01B596  0101               	movlb	1	; () banked
 42963  01B598  5199               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 42964  01B59A  B4D8               	btfsc	status,2,c
 42965  01B59C  D7FB               	goto	i2l122
 42966                           
 42967                           ; BSR set to: 1
 42968                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 42969  01B59E  010E               	movlb	14	; () banked
 42970  01B5A0  BDC5               	btfsc	197,6,b	;volatile
 42971  01B5A2  D003               	goto	i2l124
 42972                           
 42973                           ; BSR set to: 14
 42974                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 42975  01B5A4  C001  FE9A         	movff	i2EUSART2_Write@txData,3738	;volatile
 42976                           
 42977                           ;eusart2.c: 163: }
 42978  01B5A8  D011               	goto	i2l18234
 42979  01B5AA                     i2l124:
 42980                           
 42981                           ; BSR set to: 14
 42982                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 42983  01B5AA  9DC5               	bcf	197,6,b	;volatile
 42984                           
 42985                           ; BSR set to: 14
 42986                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 42987  01B5AC  0E80               	movlw	low _eusart2TxBuffer
 42988  01B5AE  0101               	movlb	1	; () banked
 42989  01B5B0  259B               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 42990  01B5B2  6ED9               	movwf	fsr2l,c
 42991  01B5B4  6ADA               	clrf	fsr2h,c
 42992  01B5B6  0E04               	movlw	high _eusart2TxBuffer
 42993  01B5B8  22DA               	addwfc	fsr2h,f,c
 42994  01B5BA  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 42995                           
 42996                           ; BSR set to: 1
 42997  01B5BE  2B9B               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 42998                           
 42999                           ; BSR set to: 1
 43000                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 43001  01B5C0  0E3F               	movlw	63
 43002  01B5C2  659B               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 43003  01B5C4  D002               	goto	i2l18232
 43004                           
 43005                           ; BSR set to: 1
 43006                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 43007  01B5C6  0E00               	movlw	0
 43008  01B5C8  6F9B               	movwf	_eusart2TxHead& (0+255),b	;volatile
 43009  01B5CA                     i2l18232:
 43010                           
 43011                           ; BSR set to: 1
 43012                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 43013  01B5CA  0799               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 43014  01B5CC                     i2l18234:
 43015                           
 43016                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 43017  01B5CC  010E               	movlb	14	; () banked
 43018  01B5CE  8DC5               	bsf	197,6,b	;volatile
 43019                           
 43020                           ; BSR set to: 14
 43021  01B5D0  0012               	return		;funcret
 43022  01B5D2                     __end_ofi2_EUSART2_Write:
 43023                           	opt callstack 0
 43024                           
 43025 ;; *************** function i2_isdigit *****************
 43026 ;; Defined at:
 43027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 43028 ;; Parameters:    Size  Location     Type
 43029 ;;  c               1    wreg     unsigned char 
 43030 ;; Auto vars:     Size  Location     Type
 43031 ;;  c               1    2[COMRAM] unsigned char 
 43032 ;; Return value:  Size  Location     Type
 43033 ;;		None               void
 43034 ;; Registers used:
 43035 ;;		wreg, status,2, status,0
 43036 ;; Tracked objects:
 43037 ;;		On entry : 0/0
 43038 ;;		On exit  : 0/0
 43039 ;;		Unchanged: 0/0
 43040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43045 ;;Total ram usage:        3 bytes
 43046 ;; Hardware stack levels used:    1
 43047 ;; This function calls:
 43048 ;;		Nothing
 43049 ;; This function is called by:
 43050 ;;		i2__doprnt
 43051 ;; This function uses a non-reentrant model
 43052 ;;
 43053                           
 43054                           	psect	text184
 43055  01BDE6                     __ptext184:
 43056                           	opt callstack 0
 43057  01BDE6                     i2_isdigit:
 43058                           	opt callstack 13
 43059                           
 43060                           ; BSR set to: 14
 43061                           ;incstack = 0
 43062                           ;i2isdigit@c stored from wreg
 43063  01BDE6  6E03               	movwf	i2isdigit@c,c
 43064  01BDE8  0E00               	movlw	0
 43065  01BDEA  6E02               	movwf	i2_isdigit$5355,c
 43066  01BDEC  0E3A               	movlw	58
 43067  01BDEE  6003               	cpfslt	i2isdigit@c,c
 43068  01BDF0  D005               	goto	i2l19448
 43069  01BDF2  0E2F               	movlw	47
 43070  01BDF4  6403               	cpfsgt	i2isdigit@c,c
 43071  01BDF6  D002               	goto	i2l19448
 43072  01BDF8  0E01               	movlw	1
 43073  01BDFA  6E02               	movwf	i2_isdigit$5355,c
 43074  01BDFC                     i2l19448:
 43075  01BDFC  C002  F001         	movff	i2_isdigit$5355,??i2_isdigit
 43076  01BE00  3001               	rrcf	??i2_isdigit,w,c
 43077  01BE02  0012               	return		;funcret
 43078  01BE04                     __end_ofi2_isdigit:
 43079                           	opt callstack 0
 43080                           
 43081 ;; *************** function i2_fround *****************
 43082 ;; Defined at:
 43083 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 43084 ;; Parameters:    Size  Location     Type
 43085 ;;  prec            1    wreg     unsigned char 
 43086 ;; Auto vars:     Size  Location     Type
 43087 ;;  prec            1   80[COMRAM] unsigned char 
 43088 ;; Return value:  Size  Location     Type
 43089 ;;                  4   68[COMRAM] unsigned char 
 43090 ;; Registers used:
 43091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43092 ;; Tracked objects:
 43093 ;;		On entry : 0/0
 43094 ;;		On exit  : 0/0
 43095 ;;		Unchanged: 0/0
 43096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43098 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43100 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43101 ;;Total ram usage:       13 bytes
 43102 ;; Hardware stack levels used:    1
 43103 ;; Hardware stack levels required when called:    1
 43104 ;; This function calls:
 43105 ;;		i2___flmul
 43106 ;;		i2___lwdiv
 43107 ;;		i2___lwmod
 43108 ;; This function is called by:
 43109 ;;		i2__doprnt
 43110 ;; This function uses a non-reentrant model
 43111 ;;
 43112                           
 43113                           	psect	text185
 43114  017736                     __ptext185:
 43115                           	opt callstack 0
 43116  017736                     i2_fround:
 43117                           	opt callstack 12
 43118                           
 43119                           ;incstack = 0
 43120                           ;i2fround@prec stored from wreg
 43121  017736  6E51               	movwf	i2fround@prec,c
 43122                           
 43123                           ;doprnt.c: 421: if(prec>=110)
 43124  017738  0E6D               	movlw	109
 43125  01773A  6451               	cpfsgt	i2fround@prec,c
 43126  01773C  D0B5               	goto	i2l19090
 43127                           
 43128                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 43129  01773E  0E00               	movlw	0
 43130  017740  6E30               	movwf	i2___flmul@a,c
 43131  017742  0E00               	movlw	0
 43132  017744  6E31               	movwf	i2___flmul@a+1,c
 43133  017746  0E00               	movlw	0
 43134  017748  6E32               	movwf	i2___flmul@a+2,c
 43135  01774A  0E3F               	movlw	63
 43136  01774C  6E33               	movwf	i2___flmul@a+3,c
 43137  01774E  0E00               	movlw	0
 43138  017750  6E09               	movwf	i2___lwdiv@divisor+1,c
 43139  017752  0E64               	movlw	100
 43140  017754  6E08               	movwf	i2___lwdiv@divisor,c
 43141  017756  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 43142  01775A  6A07               	clrf	i2___lwdiv@dividend+1,c
 43143  01775C  EC58  F0D8         	call	i2___lwdiv	;wreg free
 43144  017760  90D8               	bcf	status,0,c
 43145  017762  3606               	rlcf	?i2___lwdiv,f,c
 43146  017764  3607               	rlcf	?i2___lwdiv+1,f,c
 43147  017766  90D8               	bcf	status,0,c
 43148  017768  3606               	rlcf	?i2___lwdiv,f,c
 43149  01776A  3607               	rlcf	?i2___lwdiv+1,f,c
 43150  01776C  0E48               	movlw	72
 43151  01776E  2606               	addwf	?i2___lwdiv,f,c
 43152  017770  0E00               	movlw	0
 43153  017772  2207               	addwfc	?i2___lwdiv+1,f,c
 43154  017774  0ECB               	movlw	low __npowers_
 43155  017776  2406               	addwf	?i2___lwdiv,w,c
 43156  017778  6EF6               	movwf	tblptrl,c
 43157  01777A  0EE6               	movlw	high __npowers_
 43158  01777C  2007               	addwfc	?i2___lwdiv+1,w,c
 43159  01777E  6EF7               	movwf	tblptrh,c
 43160  017780                     	if	1	;There are 3 active tblptr bytes
 43161  017780  6AF8               	clrf	tblptru,c
 43162  017782  0E00               	movlw	low (__mediumconst shr (0+16))
 43163  017784  22F8               	addwfc	tblptru,f,c
 43164  017786                     	endif
 43165  017786  0009               	tblrd		*+
 43166  017788  CFF5 F02C          	movff	tablat,i2___flmul@b
 43167  01778C  0009               	tblrd		*+
 43168  01778E  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43169  017792  0009               	tblrd		*+
 43170  017794  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43171  017798  000A               	tblrd		*-
 43172  01779A  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43173  01779E  ECFC  F0B3         	call	i2___flmul	;wreg free
 43174  0177A2  C02C  F04D         	movff	?i2___flmul,i2_fround$6315
 43175  0177A6  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6315+1
 43176  0177AA  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6315+2
 43177  0177AE  C02F  F050         	movff	?i2___flmul+3,i2_fround$6315+3
 43178                           
 43179                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 43180  0177B2  0E00               	movlw	0
 43181  0177B4  6E09               	movwf	i2___lwdiv@divisor+1,c
 43182  0177B6  0E0A               	movlw	10
 43183  0177B8  6E08               	movwf	i2___lwdiv@divisor,c
 43184  0177BA  0E00               	movlw	0
 43185  0177BC  6E04               	movwf	i2___lwmod@divisor+1,c
 43186  0177BE  0E64               	movlw	100
 43187  0177C0  6E03               	movwf	i2___lwmod@divisor,c
 43188  0177C2  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 43189  0177C6  6A02               	clrf	i2___lwmod@dividend+1,c
 43190  0177C8  ECE9  F0DA         	call	i2___lwmod	;wreg free
 43191  0177CC  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 43192  0177D0  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 43193  0177D4  EC58  F0D8         	call	i2___lwdiv	;wreg free
 43194  0177D8  90D8               	bcf	status,0,c
 43195  0177DA  3606               	rlcf	?i2___lwdiv,f,c
 43196  0177DC  3607               	rlcf	?i2___lwdiv+1,f,c
 43197  0177DE  90D8               	bcf	status,0,c
 43198  0177E0  3606               	rlcf	?i2___lwdiv,f,c
 43199  0177E2  3607               	rlcf	?i2___lwdiv+1,f,c
 43200  0177E4  0E24               	movlw	36
 43201  0177E6  2606               	addwf	?i2___lwdiv,f,c
 43202  0177E8  0E00               	movlw	0
 43203  0177EA  2207               	addwfc	?i2___lwdiv+1,f,c
 43204  0177EC  0ECB               	movlw	low __npowers_
 43205  0177EE  2406               	addwf	?i2___lwdiv,w,c
 43206  0177F0  6EF6               	movwf	tblptrl,c
 43207  0177F2  0EE6               	movlw	high __npowers_
 43208  0177F4  2007               	addwfc	?i2___lwdiv+1,w,c
 43209  0177F6  6EF7               	movwf	tblptrh,c
 43210  0177F8                     	if	1	;There are 3 active tblptr bytes
 43211  0177F8  6AF8               	clrf	tblptru,c
 43212  0177FA  0E00               	movlw	low (__mediumconst shr (0+16))
 43213  0177FC  22F8               	addwfc	tblptru,f,c
 43214  0177FE                     	endif
 43215  0177FE  0009               	tblrd		*+
 43216  017800  CFF5 F030          	movff	tablat,i2___flmul@a
 43217  017804  0009               	tblrd		*+
 43218  017806  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43219  01780A  0009               	tblrd		*+
 43220  01780C  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43221  017810  000A               	tblrd		*-
 43222  017812  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43223  017816  C04D  F02C         	movff	i2_fround$6315,i2___flmul@b
 43224  01781A  C04E  F02D         	movff	i2_fround$6315+1,i2___flmul@b+1
 43225  01781E  C04F  F02E         	movff	i2_fround$6315+2,i2___flmul@b+2
 43226  017822  C050  F02F         	movff	i2_fround$6315+3,i2___flmul@b+3
 43227  017826  ECFC  F0B3         	call	i2___flmul	;wreg free
 43228  01782A  C02C  F049         	movff	?i2___flmul,i2_fround$6316
 43229  01782E  C02D  F04A         	movff	?i2___flmul+1,i2_fround$6316+1
 43230  017832  C02E  F04B         	movff	?i2___flmul+2,i2_fround$6316+2
 43231  017836  C02F  F04C         	movff	?i2___flmul+3,i2_fround$6316+3
 43232                           
 43233                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 43234  01783A  C049  F02C         	movff	i2_fround$6316,i2___flmul@b
 43235  01783E  C04A  F02D         	movff	i2_fround$6316+1,i2___flmul@b+1
 43236  017842  C04B  F02E         	movff	i2_fround$6316+2,i2___flmul@b+2
 43237  017846  C04C  F02F         	movff	i2_fround$6316+3,i2___flmul@b+3
 43238  01784A  0E00               	movlw	0
 43239  01784C  6E04               	movwf	i2___lwmod@divisor+1,c
 43240  01784E  0E0A               	movlw	10
 43241  017850  6E03               	movwf	i2___lwmod@divisor,c
 43242  017852  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 43243  017856  6A02               	clrf	i2___lwmod@dividend+1,c
 43244  017858  ECE9  F0DA         	call	i2___lwmod	;wreg free
 43245  01785C  90D8               	bcf	status,0,c
 43246  01785E  3601               	rlcf	?i2___lwmod,f,c
 43247  017860  3602               	rlcf	?i2___lwmod+1,f,c
 43248  017862  90D8               	bcf	status,0,c
 43249  017864  3601               	rlcf	?i2___lwmod,f,c
 43250  017866  3602               	rlcf	?i2___lwmod+1,f,c
 43251  017868  0ECB               	movlw	low __npowers_
 43252  01786A  2401               	addwf	?i2___lwmod,w,c
 43253  01786C  6EF6               	movwf	tblptrl,c
 43254  01786E  0EE6               	movlw	high __npowers_
 43255  017870  2002               	addwfc	?i2___lwmod+1,w,c
 43256  017872  6EF7               	movwf	tblptrh,c
 43257  017874                     	if	1	;There are 3 active tblptr bytes
 43258  017874  6AF8               	clrf	tblptru,c
 43259  017876  0E00               	movlw	low (__mediumconst shr (0+16))
 43260  017878  22F8               	addwfc	tblptru,f,c
 43261  01787A                     	endif
 43262  01787A  0009               	tblrd		*+
 43263  01787C  CFF5 F030          	movff	tablat,i2___flmul@a
 43264  017880  0009               	tblrd		*+
 43265  017882  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43266  017886  0009               	tblrd		*+
 43267  017888  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43268  01788C  000A               	tblrd		*-
 43269  01788E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43270  017892  ECFC  F0B3         	call	i2___flmul	;wreg free
 43271  017896  C02C  F045         	movff	?i2___flmul,?i2_fround
 43272  01789A  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 43273  01789E  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 43274  0178A2  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 43275  0178A6  0012               	return	
 43276  0178A8                     i2l19090:
 43277                           
 43278                           ;doprnt.c: 423: else if(prec > 10)
 43279  0178A8  0E0A               	movlw	10
 43280  0178AA  6451               	cpfsgt	i2fround@prec,c
 43281  0178AC  D071               	goto	i2l19096
 43282                           
 43283                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 43284  0178AE  0E00               	movlw	0
 43285  0178B0  6E30               	movwf	i2___flmul@a,c
 43286  0178B2  0E00               	movlw	0
 43287  0178B4  6E31               	movwf	i2___flmul@a+1,c
 43288  0178B6  0E00               	movlw	0
 43289  0178B8  6E32               	movwf	i2___flmul@a+2,c
 43290  0178BA  0E3F               	movlw	63
 43291  0178BC  6E33               	movwf	i2___flmul@a+3,c
 43292  0178BE  0E00               	movlw	0
 43293  0178C0  6E09               	movwf	i2___lwdiv@divisor+1,c
 43294  0178C2  0E0A               	movlw	10
 43295  0178C4  6E08               	movwf	i2___lwdiv@divisor,c
 43296  0178C6  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 43297  0178CA  6A07               	clrf	i2___lwdiv@dividend+1,c
 43298  0178CC  EC58  F0D8         	call	i2___lwdiv	;wreg free
 43299  0178D0  90D8               	bcf	status,0,c
 43300  0178D2  3606               	rlcf	?i2___lwdiv,f,c
 43301  0178D4  3607               	rlcf	?i2___lwdiv+1,f,c
 43302  0178D6  90D8               	bcf	status,0,c
 43303  0178D8  3606               	rlcf	?i2___lwdiv,f,c
 43304  0178DA  3607               	rlcf	?i2___lwdiv+1,f,c
 43305  0178DC  0E24               	movlw	36
 43306  0178DE  2606               	addwf	?i2___lwdiv,f,c
 43307  0178E0  0E00               	movlw	0
 43308  0178E2  2207               	addwfc	?i2___lwdiv+1,f,c
 43309  0178E4  0ECB               	movlw	low __npowers_
 43310  0178E6  2406               	addwf	?i2___lwdiv,w,c
 43311  0178E8  6EF6               	movwf	tblptrl,c
 43312  0178EA  0EE6               	movlw	high __npowers_
 43313  0178EC  2007               	addwfc	?i2___lwdiv+1,w,c
 43314  0178EE  6EF7               	movwf	tblptrh,c
 43315  0178F0                     	if	1	;There are 3 active tblptr bytes
 43316  0178F0  6AF8               	clrf	tblptru,c
 43317  0178F2  0E00               	movlw	low (__mediumconst shr (0+16))
 43318  0178F4  22F8               	addwfc	tblptru,f,c
 43319  0178F6                     	endif
 43320  0178F6  0009               	tblrd		*+
 43321  0178F8  CFF5 F02C          	movff	tablat,i2___flmul@b
 43322  0178FC  0009               	tblrd		*+
 43323  0178FE  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43324  017902  0009               	tblrd		*+
 43325  017904  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43326  017908  000A               	tblrd		*-
 43327  01790A  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43328  01790E  ECFC  F0B3         	call	i2___flmul	;wreg free
 43329  017912  C02C  F04D         	movff	?i2___flmul,i2_fround$6315
 43330  017916  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6315+1
 43331  01791A  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6315+2
 43332  01791E  C02F  F050         	movff	?i2___flmul+3,i2_fround$6315+3
 43333                           
 43334                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 43335  017922  C04D  F02C         	movff	i2_fround$6315,i2___flmul@b
 43336  017926  C04E  F02D         	movff	i2_fround$6315+1,i2___flmul@b+1
 43337  01792A  C04F  F02E         	movff	i2_fround$6315+2,i2___flmul@b+2
 43338  01792E  C050  F02F         	movff	i2_fround$6315+3,i2___flmul@b+3
 43339  017932  0E00               	movlw	0
 43340  017934  6E04               	movwf	i2___lwmod@divisor+1,c
 43341  017936  0E0A               	movlw	10
 43342  017938  6E03               	movwf	i2___lwmod@divisor,c
 43343  01793A  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 43344  01793E  6A02               	clrf	i2___lwmod@dividend+1,c
 43345  017940  ECE9  F0DA         	call	i2___lwmod	;wreg free
 43346  017944  90D8               	bcf	status,0,c
 43347  017946  3601               	rlcf	?i2___lwmod,f,c
 43348  017948  3602               	rlcf	?i2___lwmod+1,f,c
 43349  01794A  90D8               	bcf	status,0,c
 43350  01794C  3601               	rlcf	?i2___lwmod,f,c
 43351  01794E  3602               	rlcf	?i2___lwmod+1,f,c
 43352  017950  0ECB               	movlw	low __npowers_
 43353  017952  2401               	addwf	?i2___lwmod,w,c
 43354  017954  6EF6               	movwf	tblptrl,c
 43355  017956  0EE6               	movlw	high __npowers_
 43356  017958  2002               	addwfc	?i2___lwmod+1,w,c
 43357  01795A  6EF7               	movwf	tblptrh,c
 43358  01795C                     	if	1	;There are 3 active tblptr bytes
 43359  01795C  6AF8               	clrf	tblptru,c
 43360  01795E  0E00               	movlw	low (__mediumconst shr (0+16))
 43361  017960  22F8               	addwfc	tblptru,f,c
 43362  017962                     	endif
 43363  017962  0009               	tblrd		*+
 43364  017964  CFF5 F030          	movff	tablat,i2___flmul@a
 43365  017968  0009               	tblrd		*+
 43366  01796A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43367  01796E  0009               	tblrd		*+
 43368  017970  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43369  017974  000A               	tblrd		*-
 43370  017976  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43371  01797A  ECFC  F0B3         	call	i2___flmul	;wreg free
 43372  01797E  C02C  F045         	movff	?i2___flmul,?i2_fround
 43373  017982  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 43374  017986  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 43375  01798A  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 43376  01798E  0012               	return	
 43377  017990                     i2l19096:
 43378                           
 43379                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 43380  017990  5051               	movf	i2fround@prec,w,c
 43381  017992  0D04               	mullw	4
 43382  017994  0ECB               	movlw	low __npowers_
 43383  017996  24F3               	addwf	prodl,w,c
 43384  017998  6EF6               	movwf	tblptrl,c
 43385  01799A  0EE6               	movlw	high __npowers_
 43386  01799C  20F4               	addwfc	prodh,w,c
 43387  01799E  6EF7               	movwf	tblptrh,c
 43388  0179A0                     	if	1	;There are 3 active tblptr bytes
 43389  0179A0  6AF8               	clrf	tblptru,c
 43390  0179A2  0E00               	movlw	low (__mediumconst shr (0+16))
 43391  0179A4  22F8               	addwfc	tblptru,f,c
 43392  0179A6                     	endif
 43393  0179A6  0009               	tblrd		*+
 43394  0179A8  CFF5 F02C          	movff	tablat,i2___flmul@b
 43395  0179AC  0009               	tblrd		*+
 43396  0179AE  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43397  0179B2  0009               	tblrd		*+
 43398  0179B4  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43399  0179B8  000A               	tblrd		*-
 43400  0179BA  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43401  0179BE  0E00               	movlw	0
 43402  0179C0  6E30               	movwf	i2___flmul@a,c
 43403  0179C2  0E00               	movlw	0
 43404  0179C4  6E31               	movwf	i2___flmul@a+1,c
 43405  0179C6  0E00               	movlw	0
 43406  0179C8  6E32               	movwf	i2___flmul@a+2,c
 43407  0179CA  0E3F               	movlw	63
 43408  0179CC  6E33               	movwf	i2___flmul@a+3,c
 43409  0179CE  ECFC  F0B3         	call	i2___flmul	;wreg free
 43410  0179D2  C02C  F045         	movff	?i2___flmul,?i2_fround
 43411  0179D6  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 43412  0179DA  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 43413  0179DE  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 43414  0179E2  0012               	return		;funcret
 43415  0179E4                     __end_ofi2_fround:
 43416                           	opt callstack 0
 43417                           
 43418 ;; *************** function i2___lwmod *****************
 43419 ;; Defined at:
 43420 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 43421 ;; Parameters:    Size  Location     Type
 43422 ;;  dividend        2    0[COMRAM] unsigned int 
 43423 ;;  divisor         2    2[COMRAM] unsigned int 
 43424 ;; Auto vars:     Size  Location     Type
 43425 ;;  __lwmod         1    4[COMRAM] unsigned char 
 43426 ;; Return value:  Size  Location     Type
 43427 ;;                  2    0[COMRAM] unsigned int 
 43428 ;; Registers used:
 43429 ;;		wreg, status,2, status,0
 43430 ;; Tracked objects:
 43431 ;;		On entry : 0/0
 43432 ;;		On exit  : 0/0
 43433 ;;		Unchanged: 0/0
 43434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43439 ;;Total ram usage:        5 bytes
 43440 ;; Hardware stack levels used:    1
 43441 ;; This function calls:
 43442 ;;		Nothing
 43443 ;; This function is called by:
 43444 ;;		i2_fround
 43445 ;; This function uses a non-reentrant model
 43446 ;;
 43447                           
 43448                           	psect	text186
 43449  01B5D2                     __ptext186:
 43450                           	opt callstack 0
 43451  01B5D2                     i2___lwmod:
 43452                           	opt callstack 12
 43453                           
 43454                           ;incstack = 0
 43455  01B5D2  5003               	movf	i2___lwmod@divisor,w,c
 43456  01B5D4  1004               	iorwf	i2___lwmod@divisor+1,w,c
 43457  01B5D6  B4D8               	btfsc	status,2,c
 43458  01B5D8  D018               	goto	i2l3102
 43459  01B5DA  0E01               	movlw	1
 43460  01B5DC  6E05               	movwf	i2___lwmod@counter,c
 43461  01B5DE  D004               	goto	i2l18344
 43462  01B5E0                     i2l18342:
 43463  01B5E0  90D8               	bcf	status,0,c
 43464  01B5E2  3603               	rlcf	i2___lwmod@divisor,f,c
 43465  01B5E4  3604               	rlcf	i2___lwmod@divisor+1,f,c
 43466  01B5E6  2A05               	incf	i2___lwmod@counter,f,c
 43467  01B5E8                     i2l18344:
 43468  01B5E8  AE04               	btfss	i2___lwmod@divisor+1,7,c
 43469  01B5EA  D7FA               	goto	i2l18342
 43470  01B5EC                     i2u2315_40:
 43471  01B5EC  5003               	movf	i2___lwmod@divisor,w,c
 43472  01B5EE  5C01               	subwf	i2___lwmod@dividend,w,c
 43473  01B5F0  5004               	movf	i2___lwmod@divisor+1,w,c
 43474  01B5F2  5802               	subwfb	i2___lwmod@dividend+1,w,c
 43475  01B5F4  A0D8               	btfss	status,0,c
 43476  01B5F6  D004               	goto	i2l18350
 43477  01B5F8  5003               	movf	i2___lwmod@divisor,w,c
 43478  01B5FA  5E01               	subwf	i2___lwmod@dividend,f,c
 43479  01B5FC  5004               	movf	i2___lwmod@divisor+1,w,c
 43480  01B5FE  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 43481  01B600                     i2l18350:
 43482  01B600  90D8               	bcf	status,0,c
 43483  01B602  3204               	rrcf	i2___lwmod@divisor+1,f,c
 43484  01B604  3203               	rrcf	i2___lwmod@divisor,f,c
 43485  01B606  2E05               	decfsz	i2___lwmod@counter,f,c
 43486  01B608  D7F1               	goto	i2u2315_40
 43487  01B60A                     i2l3102:
 43488  01B60A  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 43489  01B60E  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 43490  01B612  0012               	return		;funcret
 43491  01B614                     __end_ofi2___lwmod:
 43492                           	opt callstack 0
 43493                           
 43494 ;; *************** function i2___lwdiv *****************
 43495 ;; Defined at:
 43496 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 43497 ;; Parameters:    Size  Location     Type
 43498 ;;  dividend        2    5[COMRAM] unsigned int 
 43499 ;;  divisor         2    7[COMRAM] unsigned int 
 43500 ;; Auto vars:     Size  Location     Type
 43501 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 43502 ;;  __lwdiv         1    9[COMRAM] unsigned char 
 43503 ;; Return value:  Size  Location     Type
 43504 ;;                  2    5[COMRAM] unsigned int 
 43505 ;; Registers used:
 43506 ;;		wreg, status,2, status,0
 43507 ;; Tracked objects:
 43508 ;;		On entry : 0/0
 43509 ;;		On exit  : 0/0
 43510 ;;		Unchanged: 0/0
 43511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43515 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43516 ;;Total ram usage:        7 bytes
 43517 ;; Hardware stack levels used:    1
 43518 ;; This function calls:
 43519 ;;		Nothing
 43520 ;; This function is called by:
 43521 ;;		i2_fround
 43522 ;; This function uses a non-reentrant model
 43523 ;;
 43524                           
 43525                           	psect	text187
 43526  01B0B0                     __ptext187:
 43527                           	opt callstack 0
 43528  01B0B0                     i2___lwdiv:
 43529                           	opt callstack 12
 43530                           
 43531                           ;incstack = 0
 43532  01B0B0  0E00               	movlw	0
 43533  01B0B2  6E0C               	movwf	i2___lwdiv@quotient+1,c
 43534  01B0B4  0E00               	movlw	0
 43535  01B0B6  6E0B               	movwf	i2___lwdiv@quotient,c
 43536  01B0B8  5008               	movf	i2___lwdiv@divisor,w,c
 43537  01B0BA  1009               	iorwf	i2___lwdiv@divisor+1,w,c
 43538  01B0BC  B4D8               	btfsc	status,2,c
 43539  01B0BE  D01C               	goto	i2l3092
 43540  01B0C0  0E01               	movlw	1
 43541  01B0C2  6E0A               	movwf	i2___lwdiv@counter,c
 43542  01B0C4  D004               	goto	i2l18324
 43543  01B0C6                     i2l18322:
 43544  01B0C6  90D8               	bcf	status,0,c
 43545  01B0C8  3608               	rlcf	i2___lwdiv@divisor,f,c
 43546  01B0CA  3609               	rlcf	i2___lwdiv@divisor+1,f,c
 43547  01B0CC  2A0A               	incf	i2___lwdiv@counter,f,c
 43548  01B0CE                     i2l18324:
 43549  01B0CE  AE09               	btfss	i2___lwdiv@divisor+1,7,c
 43550  01B0D0  D7FA               	goto	i2l18322
 43551  01B0D2                     i2u2312_40:
 43552  01B0D2  90D8               	bcf	status,0,c
 43553  01B0D4  360B               	rlcf	i2___lwdiv@quotient,f,c
 43554  01B0D6  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 43555  01B0D8  5008               	movf	i2___lwdiv@divisor,w,c
 43556  01B0DA  5C06               	subwf	i2___lwdiv@dividend,w,c
 43557  01B0DC  5009               	movf	i2___lwdiv@divisor+1,w,c
 43558  01B0DE  5807               	subwfb	i2___lwdiv@dividend+1,w,c
 43559  01B0E0  A0D8               	btfss	status,0,c
 43560  01B0E2  D005               	goto	i2l18334
 43561  01B0E4  5008               	movf	i2___lwdiv@divisor,w,c
 43562  01B0E6  5E06               	subwf	i2___lwdiv@dividend,f,c
 43563  01B0E8  5009               	movf	i2___lwdiv@divisor+1,w,c
 43564  01B0EA  5A07               	subwfb	i2___lwdiv@dividend+1,f,c
 43565  01B0EC  800B               	bsf	i2___lwdiv@quotient,0,c
 43566  01B0EE                     i2l18334:
 43567  01B0EE  90D8               	bcf	status,0,c
 43568  01B0F0  3209               	rrcf	i2___lwdiv@divisor+1,f,c
 43569  01B0F2  3208               	rrcf	i2___lwdiv@divisor,f,c
 43570  01B0F4  2E0A               	decfsz	i2___lwdiv@counter,f,c
 43571  01B0F6  D7ED               	goto	i2u2312_40
 43572  01B0F8                     i2l3092:
 43573  01B0F8  C00B  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 43574  01B0FC  C00C  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 43575  01B100  0012               	return		;funcret
 43576  01B102                     __end_ofi2___lwdiv:
 43577                           	opt callstack 0
 43578                           
 43579 ;; *************** function i2__tdiv_to_l_ *****************
 43580 ;; Defined at:
 43581 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 43582 ;; Parameters:    Size  Location     Type
 43583 ;;  f1              4    0[COMRAM] float 
 43584 ;;  f2              4    4[COMRAM] float 
 43585 ;; Auto vars:     Size  Location     Type
 43586 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 43587 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 43588 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 43589 ;; Return value:  Size  Location     Type
 43590 ;;                  4    0[COMRAM] unsigned long 
 43591 ;; Registers used:
 43592 ;;		wreg, status,2, status,0
 43593 ;; Tracked objects:
 43594 ;;		On entry : 0/0
 43595 ;;		On exit  : 0/0
 43596 ;;		Unchanged: 0/0
 43597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43598 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43599 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43600 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43601 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43602 ;;Total ram usage:       17 bytes
 43603 ;; Hardware stack levels used:    1
 43604 ;; This function calls:
 43605 ;;		Nothing
 43606 ;; This function is called by:
 43607 ;;		i2__doprnt
 43608 ;; This function uses a non-reentrant model
 43609 ;;
 43610                           
 43611                           	psect	text188
 43612  01981C                     __ptext188:
 43613                           	opt callstack 0
 43614  01981C                     i2__tdiv_to_l_:
 43615                           	opt callstack 13
 43616                           
 43617                           ;incstack = 0
 43618  01981C  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 43619  019820  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 43620  019822  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 43621  019824  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 43622  019826  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 43623  019828  E301               	bnc	u2457_41
 43624  01982A  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 43625  01982C                     u2457_41:
 43626  01982C  5009               	movf	??i2__tdiv_to_l_,w,c
 43627  01982E  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 43628  019830  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 43629  019832  A4D8               	btfss	status,2,c
 43630  019834  D009               	goto	i2l19322
 43631  019836                     i2u2458_40:
 43632  019836  0E00               	movlw	0
 43633  019838  6E01               	movwf	?i2__tdiv_to_l_,c
 43634  01983A  0E00               	movlw	0
 43635  01983C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 43636  01983E  0E00               	movlw	0
 43637  019840  6E03               	movwf	?i2__tdiv_to_l_+2,c
 43638  019842  0E00               	movlw	0
 43639  019844  6E04               	movwf	?i2__tdiv_to_l_+3,c
 43640  019846  0012               	return	
 43641  019848                     i2l19322:
 43642  019848  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 43643  01984C  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 43644  01984E  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 43645  019850  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 43646  019852  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 43647  019854  E301               	bnc	u2459_41
 43648  019856  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 43649  019858                     u2459_41:
 43650  019858  5009               	movf	??i2__tdiv_to_l_,w,c
 43651  01985A  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 43652  01985C  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 43653  01985E  B4D8               	btfsc	status,2,c
 43654  019860  D7EA               	goto	i2u2458_40
 43655  019862  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 43656  019864  0EFF               	movlw	255
 43657  019866  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 43658  019868  0EFF               	movlw	255
 43659  01986A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 43660  01986C  0E00               	movlw	0
 43661  01986E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 43662  019870  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 43663  019872  0EFF               	movlw	255
 43664  019874  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 43665  019876  0EFF               	movlw	255
 43666  019878  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 43667  01987A  0E00               	movlw	0
 43668  01987C  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 43669  01987E  0E00               	movlw	0
 43670  019880  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 43671  019882  0E00               	movlw	0
 43672  019884  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 43673  019886  0E00               	movlw	0
 43674  019888  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 43675  01988A  0E00               	movlw	0
 43676  01988C  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 43677  01988E  0E7F               	movlw	127
 43678  019890  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 43679  019892  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 43680  019894  0F98               	addlw	152
 43681  019896  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 43682  019898  0E18               	movlw	24
 43683  01989A  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 43684  01989C                     i2l2944:
 43685  01989C  90D8               	bcf	status,0,c
 43686  01989E  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 43687  0198A0  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 43688  0198A2  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 43689  0198A4  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 43690  0198A6  5005               	movf	i2__tdiv_to_l_@f2,w,c
 43691  0198A8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 43692  0198AA  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 43693  0198AC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 43694  0198AE  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 43695  0198B0  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 43696  0198B2  A0D8               	btfss	status,0,c
 43697  0198B4  D007               	goto	i2l2945
 43698  0198B6  5005               	movf	i2__tdiv_to_l_@f2,w,c
 43699  0198B8  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 43700  0198BA  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 43701  0198BC  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 43702  0198BE  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 43703  0198C0  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 43704  0198C2  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 43705  0198C4                     i2l2945:
 43706  0198C4  90D8               	bcf	status,0,c
 43707  0198C6  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 43708  0198C8  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 43709  0198CA  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 43710  0198CC  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 43711  0198CE  D7E6               	goto	i2l2944
 43712  0198D0  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 43713  0198D2  D00D               	goto	i2l19362
 43714  0198D4  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 43715  0198D6  0A80               	xorlw	128
 43716  0198D8  0F97               	addlw	151
 43717  0198DA  A0D8               	btfss	status,0,c
 43718  0198DC  D7AC               	goto	i2u2458_40
 43719  0198DE                     i2l19358:
 43720  0198DE  90D8               	bcf	status,0,c
 43721  0198E0  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 43722  0198E2  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 43723  0198E4  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 43724  0198E6  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 43725  0198E8  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 43726  0198EA  D7F9               	goto	i2l19358
 43727  0198EC  D00D               	goto	i2u2465_40
 43728  0198EE                     i2l19362:
 43729  0198EE  0E17               	movlw	23
 43730  0198F0  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 43731  0198F2  D007               	goto	i2l19370
 43732  0198F4  D7A0               	goto	i2u2458_40
 43733  0198F6                     i2l19368:
 43734  0198F6  90D8               	bcf	status,0,c
 43735  0198F8  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 43736  0198FA  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 43737  0198FC  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 43738  0198FE  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 43739  019900  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 43740  019902                     i2l19370:
 43741  019902  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 43742  019904  A4D8               	btfss	status,2,c
 43743  019906  D7F7               	goto	i2l19368
 43744  019908                     i2u2465_40:
 43745  019908  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 43746  01990C  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 43747  019910  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 43748  019914  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 43749  019918  0012               	return		;funcret
 43750  01991A                     __end_ofi2__tdiv_to_l_:
 43751                           	opt callstack 0
 43752                           
 43753 ;; *************** function i2__div_to_l_ *****************
 43754 ;; Defined at:
 43755 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 43756 ;; Parameters:    Size  Location     Type
 43757 ;;  f1              4    0[COMRAM] unsigned long 
 43758 ;;  f2              4    4[COMRAM] unsigned long 
 43759 ;; Auto vars:     Size  Location     Type
 43760 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 43761 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 43762 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 43763 ;; Return value:  Size  Location     Type
 43764 ;;                  4    0[COMRAM] unsigned long 
 43765 ;; Registers used:
 43766 ;;		wreg, status,2, status,0
 43767 ;; Tracked objects:
 43768 ;;		On entry : 0/0
 43769 ;;		On exit  : 0/0
 43770 ;;		Unchanged: 0/0
 43771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43772 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43773 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43775 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43776 ;;Total ram usage:       14 bytes
 43777 ;; Hardware stack levels used:    1
 43778 ;; This function calls:
 43779 ;;		Nothing
 43780 ;; This function is called by:
 43781 ;;		i2__doprnt
 43782 ;; This function uses a non-reentrant model
 43783 ;;
 43784                           
 43785                           	psect	text189
 43786  019B04                     __ptext189:
 43787                           	opt callstack 0
 43788  019B04                     i2__div_to_l_:
 43789                           	opt callstack 13
 43790                           
 43791                           ;incstack = 0
 43792  019B04  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 43793  019B06  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 43794  019B08  6E0E               	movwf	i2__div_to_l_@exp1,c
 43795  019B0A  500E               	movf	i2__div_to_l_@exp1,w,c
 43796  019B0C  A4D8               	btfss	status,2,c
 43797  019B0E  D009               	goto	i2l19172
 43798  019B10                     i2u2434_40:
 43799  019B10  0E00               	movlw	0
 43800  019B12  6E01               	movwf	?i2__div_to_l_,c
 43801  019B14  0E00               	movlw	0
 43802  019B16  6E02               	movwf	?i2__div_to_l_+1,c
 43803  019B18  0E00               	movlw	0
 43804  019B1A  6E03               	movwf	?i2__div_to_l_+2,c
 43805  019B1C  0E00               	movlw	0
 43806  019B1E  6E04               	movwf	?i2__div_to_l_+3,c
 43807  019B20  0012               	return	
 43808  019B22                     i2l19172:
 43809  019B22  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 43810  019B24  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 43811  019B26  6E0D               	movwf	i2__div_to_l_@cntr,c
 43812  019B28  500D               	movf	i2__div_to_l_@cntr,w,c
 43813  019B2A  B4D8               	btfsc	status,2,c
 43814  019B2C  D7F1               	goto	i2u2434_40
 43815  019B2E  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 43816  019B30  0EFF               	movlw	255
 43817  019B32  1601               	andwf	i2__div_to_l_@f1,f,c
 43818  019B34  0EFF               	movlw	255
 43819  019B36  1602               	andwf	i2__div_to_l_@f1+1,f,c
 43820  019B38  0EFF               	movlw	255
 43821  019B3A  1603               	andwf	i2__div_to_l_@f1+2,f,c
 43822  019B3C  0E00               	movlw	0
 43823  019B3E  1604               	andwf	i2__div_to_l_@f1+3,f,c
 43824  019B40  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 43825  019B42  0EFF               	movlw	255
 43826  019B44  1605               	andwf	i2__div_to_l_@f2,f,c
 43827  019B46  0EFF               	movlw	255
 43828  019B48  1606               	andwf	i2__div_to_l_@f2+1,f,c
 43829  019B4A  0EFF               	movlw	255
 43830  019B4C  1607               	andwf	i2__div_to_l_@f2+2,f,c
 43831  019B4E  0E00               	movlw	0
 43832  019B50  1608               	andwf	i2__div_to_l_@f2+3,f,c
 43833  019B52  0E00               	movlw	0
 43834  019B54  6E09               	movwf	i2__div_to_l_@quot,c
 43835  019B56  0E00               	movlw	0
 43836  019B58  6E0A               	movwf	i2__div_to_l_@quot+1,c
 43837  019B5A  0E00               	movlw	0
 43838  019B5C  6E0B               	movwf	i2__div_to_l_@quot+2,c
 43839  019B5E  0E00               	movlw	0
 43840  019B60  6E0C               	movwf	i2__div_to_l_@quot+3,c
 43841  019B62  0E7F               	movlw	127
 43842  019B64  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 43843  019B66  500D               	movf	i2__div_to_l_@cntr,w,c
 43844  019B68  0FA0               	addlw	160
 43845  019B6A  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 43846  019B6C  0E20               	movlw	32
 43847  019B6E  6E0D               	movwf	i2__div_to_l_@cntr,c
 43848  019B70                     i2l19192:
 43849  019B70  90D8               	bcf	status,0,c
 43850  019B72  3609               	rlcf	i2__div_to_l_@quot,f,c
 43851  019B74  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 43852  019B76  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 43853  019B78  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 43854  019B7A  5005               	movf	i2__div_to_l_@f2,w,c
 43855  019B7C  5C01               	subwf	i2__div_to_l_@f1,w,c
 43856  019B7E  5006               	movf	i2__div_to_l_@f2+1,w,c
 43857  019B80  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 43858  019B82  5007               	movf	i2__div_to_l_@f2+2,w,c
 43859  019B84  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 43860  019B86  5008               	movf	i2__div_to_l_@f2+3,w,c
 43861  019B88  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 43862  019B8A  A0D8               	btfss	status,0,c
 43863  019B8C  D009               	goto	i2l19200
 43864  019B8E  5005               	movf	i2__div_to_l_@f2,w,c
 43865  019B90  5E01               	subwf	i2__div_to_l_@f1,f,c
 43866  019B92  5006               	movf	i2__div_to_l_@f2+1,w,c
 43867  019B94  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 43868  019B96  5007               	movf	i2__div_to_l_@f2+2,w,c
 43869  019B98  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 43870  019B9A  5008               	movf	i2__div_to_l_@f2+3,w,c
 43871  019B9C  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 43872  019B9E  8009               	bsf	i2__div_to_l_@quot,0,c
 43873  019BA0                     i2l19200:
 43874  019BA0  90D8               	bcf	status,0,c
 43875  019BA2  3601               	rlcf	i2__div_to_l_@f1,f,c
 43876  019BA4  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 43877  019BA6  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 43878  019BA8  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 43879  019BAA  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 43880  019BAC  D7E1               	goto	i2l19192
 43881  019BAE  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 43882  019BB0  D00D               	goto	i2l19216
 43883  019BB2  500E               	movf	i2__div_to_l_@exp1,w,c
 43884  019BB4  0A80               	xorlw	128
 43885  019BB6  0F9F               	addlw	159
 43886  019BB8  A0D8               	btfss	status,0,c
 43887  019BBA  D7AA               	goto	i2u2434_40
 43888  019BBC                     i2l19212:
 43889  019BBC  90D8               	bcf	status,0,c
 43890  019BBE  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 43891  019BC0  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 43892  019BC2  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 43893  019BC4  3209               	rrcf	i2__div_to_l_@quot,f,c
 43894  019BC6  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 43895  019BC8  D7F9               	goto	i2l19212
 43896  019BCA  D00D               	goto	i2u2440_40
 43897  019BCC                     i2l19216:
 43898  019BCC  0E1F               	movlw	31
 43899  019BCE  640E               	cpfsgt	i2__div_to_l_@exp1,c
 43900  019BD0  D007               	goto	i2l19224
 43901  019BD2  D79E               	goto	i2u2434_40
 43902  019BD4                     i2l19222:
 43903  019BD4  90D8               	bcf	status,0,c
 43904  019BD6  3609               	rlcf	i2__div_to_l_@quot,f,c
 43905  019BD8  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 43906  019BDA  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 43907  019BDC  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 43908  019BDE  060E               	decf	i2__div_to_l_@exp1,f,c
 43909  019BE0                     i2l19224:
 43910  019BE0  500E               	movf	i2__div_to_l_@exp1,w,c
 43911  019BE2  A4D8               	btfss	status,2,c
 43912  019BE4  D7F7               	goto	i2l19222
 43913  019BE6                     i2u2440_40:
 43914  019BE6  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 43915  019BEA  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 43916  019BEE  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 43917  019BF2  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 43918  019BF6  0012               	return		;funcret
 43919  019BF8                     __end_ofi2__div_to_l_:
 43920                           	opt callstack 0
 43921                           
 43922 ;; *************** function i2___wmul *****************
 43923 ;; Defined at:
 43924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 43925 ;; Parameters:    Size  Location     Type
 43926 ;;  multiplier      2    0[COMRAM] unsigned int 
 43927 ;;  multiplicand    2    2[COMRAM] unsigned int 
 43928 ;; Auto vars:     Size  Location     Type
 43929 ;;  __wmul          2    4[COMRAM] unsigned int 
 43930 ;; Return value:  Size  Location     Type
 43931 ;;                  2    0[COMRAM] unsigned int 
 43932 ;; Registers used:
 43933 ;;		wreg, status,2, status,0, prodl, prodh
 43934 ;; Tracked objects:
 43935 ;;		On entry : 0/0
 43936 ;;		On exit  : 0/0
 43937 ;;		Unchanged: 0/0
 43938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43942 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43943 ;;Total ram usage:        6 bytes
 43944 ;; Hardware stack levels used:    1
 43945 ;; This function calls:
 43946 ;;		Nothing
 43947 ;; This function is called by:
 43948 ;;		i2__doprnt
 43949 ;; This function uses a non-reentrant model
 43950 ;;
 43951                           
 43952                           	psect	text190
 43953  01BC30                     __ptext190:
 43954                           	opt callstack 0
 43955  01BC30                     i2___wmul:
 43956                           	opt callstack 13
 43957                           
 43958                           ;incstack = 0
 43959  01BC30  5001               	movf	i2___wmul@multiplier,w,c
 43960  01BC32  0203               	mulwf	i2___wmul@multiplicand,c
 43961  01BC34  CFF3 F005          	movff	prodl,i2___wmul@product
 43962  01BC38  CFF4 F006          	movff	prodh,i2___wmul@product+1
 43963  01BC3C  5001               	movf	i2___wmul@multiplier,w,c
 43964  01BC3E  0204               	mulwf	i2___wmul@multiplicand+1,c
 43965  01BC40  50F3               	movf	prodl,w,c
 43966  01BC42  2606               	addwf	i2___wmul@product+1,f,c
 43967  01BC44  5002               	movf	i2___wmul@multiplier+1,w,c
 43968  01BC46  0203               	mulwf	i2___wmul@multiplicand,c
 43969  01BC48  50F3               	movf	prodl,w,c
 43970  01BC4A  2606               	addwf	i2___wmul@product+1,f,c
 43971  01BC4C  C005  F001         	movff	i2___wmul@product,?i2___wmul
 43972  01BC50  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 43973  01BC54  0012               	return		;funcret
 43974  01BC56                     __end_ofi2___wmul:
 43975                           	opt callstack 0
 43976                           
 43977 ;; *************** function i2___llmod *****************
 43978 ;; Defined at:
 43979 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 43980 ;; Parameters:    Size  Location     Type
 43981 ;;  dividend        4   13[COMRAM] unsigned long 
 43982 ;;  divisor         4   17[COMRAM] unsigned long 
 43983 ;; Auto vars:     Size  Location     Type
 43984 ;;  __llmod         1   21[COMRAM] unsigned char 
 43985 ;; Return value:  Size  Location     Type
 43986 ;;                  4   13[COMRAM] unsigned long 
 43987 ;; Registers used:
 43988 ;;		wreg, status,2, status,0
 43989 ;; Tracked objects:
 43990 ;;		On entry : 0/0
 43991 ;;		On exit  : 0/0
 43992 ;;		Unchanged: 0/0
 43993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43997 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43998 ;;Total ram usage:        9 bytes
 43999 ;; Hardware stack levels used:    1
 44000 ;; This function calls:
 44001 ;;		Nothing
 44002 ;; This function is called by:
 44003 ;;		_heartbeatTimerHandler
 44004 ;;		i2__doprnt
 44005 ;; This function uses a non-reentrant model
 44006 ;;
 44007                           
 44008                           	psect	text191
 44009  01AD7C                     __ptext191:
 44010                           	opt callstack 0
 44011  01AD7C                     i2___llmod:
 44012                           	opt callstack 14
 44013                           
 44014                           ;incstack = 0
 44015  01AD7C  5012               	movf	i2___llmod@divisor,w,c
 44016  01AD7E  1013               	iorwf	i2___llmod@divisor+1,w,c
 44017  01AD80  1014               	iorwf	i2___llmod@divisor+2,w,c
 44018  01AD82  1015               	iorwf	i2___llmod@divisor+3,w,c
 44019  01AD84  B4D8               	btfsc	status,2,c
 44020  01AD86  D024               	goto	i2l3021
 44021  01AD88  0E01               	movlw	1
 44022  01AD8A  6E16               	movwf	i2___llmod@counter,c
 44023  01AD8C  D006               	goto	i2l19378
 44024  01AD8E                     i2l19376:
 44025  01AD8E  90D8               	bcf	status,0,c
 44026  01AD90  3612               	rlcf	i2___llmod@divisor,f,c
 44027  01AD92  3613               	rlcf	i2___llmod@divisor+1,f,c
 44028  01AD94  3614               	rlcf	i2___llmod@divisor+2,f,c
 44029  01AD96  3615               	rlcf	i2___llmod@divisor+3,f,c
 44030  01AD98  2A16               	incf	i2___llmod@counter,f,c
 44031  01AD9A                     i2l19378:
 44032  01AD9A  AE15               	btfss	i2___llmod@divisor+3,7,c
 44033  01AD9C  D7F8               	goto	i2l19376
 44034  01AD9E                     i2u2467_40:
 44035  01AD9E  5012               	movf	i2___llmod@divisor,w,c
 44036  01ADA0  5C0E               	subwf	i2___llmod@dividend,w,c
 44037  01ADA2  5013               	movf	i2___llmod@divisor+1,w,c
 44038  01ADA4  580F               	subwfb	i2___llmod@dividend+1,w,c
 44039  01ADA6  5014               	movf	i2___llmod@divisor+2,w,c
 44040  01ADA8  5810               	subwfb	i2___llmod@dividend+2,w,c
 44041  01ADAA  5015               	movf	i2___llmod@divisor+3,w,c
 44042  01ADAC  5811               	subwfb	i2___llmod@dividend+3,w,c
 44043  01ADAE  A0D8               	btfss	status,0,c
 44044  01ADB0  D008               	goto	i2l19384
 44045  01ADB2  5012               	movf	i2___llmod@divisor,w,c
 44046  01ADB4  5E0E               	subwf	i2___llmod@dividend,f,c
 44047  01ADB6  5013               	movf	i2___llmod@divisor+1,w,c
 44048  01ADB8  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 44049  01ADBA  5014               	movf	i2___llmod@divisor+2,w,c
 44050  01ADBC  5A10               	subwfb	i2___llmod@dividend+2,f,c
 44051  01ADBE  5015               	movf	i2___llmod@divisor+3,w,c
 44052  01ADC0  5A11               	subwfb	i2___llmod@dividend+3,f,c
 44053  01ADC2                     i2l19384:
 44054  01ADC2  90D8               	bcf	status,0,c
 44055  01ADC4  3215               	rrcf	i2___llmod@divisor+3,f,c
 44056  01ADC6  3214               	rrcf	i2___llmod@divisor+2,f,c
 44057  01ADC8  3213               	rrcf	i2___llmod@divisor+1,f,c
 44058  01ADCA  3212               	rrcf	i2___llmod@divisor,f,c
 44059  01ADCC  2E16               	decfsz	i2___llmod@counter,f,c
 44060  01ADCE  D7E7               	goto	i2u2467_40
 44061  01ADD0                     i2l3021:
 44062  01ADD0  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 44063  01ADD4  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 44064  01ADD8  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 44065  01ADDC  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 44066  01ADE0  0012               	return		;funcret
 44067  01ADE2                     __end_ofi2___llmod:
 44068                           	opt callstack 0
 44069                           
 44070 ;; *************** function i2___lldiv *****************
 44071 ;; Defined at:
 44072 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 44073 ;; Parameters:    Size  Location     Type
 44074 ;;  dividend        4    0[COMRAM] unsigned long 
 44075 ;;  divisor         4    4[COMRAM] unsigned long 
 44076 ;; Auto vars:     Size  Location     Type
 44077 ;;  __lldiv         4    8[COMRAM] unsigned long 
 44078 ;;  __lldiv         1   12[COMRAM] unsigned char 
 44079 ;; Return value:  Size  Location     Type
 44080 ;;                  4    0[COMRAM] unsigned long 
 44081 ;; Registers used:
 44082 ;;		wreg, status,2, status,0
 44083 ;; Tracked objects:
 44084 ;;		On entry : 0/0
 44085 ;;		On exit  : 0/0
 44086 ;;		Unchanged: 0/0
 44087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44088 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44089 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44091 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44092 ;;Total ram usage:       13 bytes
 44093 ;; Hardware stack levels used:    1
 44094 ;; This function calls:
 44095 ;;		Nothing
 44096 ;; This function is called by:
 44097 ;;		i2__doprnt
 44098 ;; This function uses a non-reentrant model
 44099 ;;
 44100                           
 44101                           	psect	text192
 44102  01AA7E                     __ptext192:
 44103                           	opt callstack 0
 44104  01AA7E                     i2___lldiv:
 44105                           	opt callstack 13
 44106                           
 44107                           ;incstack = 0
 44108  01AA7E  0E00               	movlw	0
 44109  01AA80  6E09               	movwf	i2___lldiv@quotient,c
 44110  01AA82  0E00               	movlw	0
 44111  01AA84  6E0A               	movwf	i2___lldiv@quotient+1,c
 44112  01AA86  0E00               	movlw	0
 44113  01AA88  6E0B               	movwf	i2___lldiv@quotient+2,c
 44114  01AA8A  0E00               	movlw	0
 44115  01AA8C  6E0C               	movwf	i2___lldiv@quotient+3,c
 44116  01AA8E  5005               	movf	i2___lldiv@divisor,w,c
 44117  01AA90  1006               	iorwf	i2___lldiv@divisor+1,w,c
 44118  01AA92  1007               	iorwf	i2___lldiv@divisor+2,w,c
 44119  01AA94  1008               	iorwf	i2___lldiv@divisor+3,w,c
 44120  01AA96  B4D8               	btfsc	status,2,c
 44121  01AA98  D02A               	goto	i2l2606
 44122  01AA9A  0E01               	movlw	1
 44123  01AA9C  6E0D               	movwf	i2___lldiv@counter,c
 44124  01AA9E  D006               	goto	i2l19152
 44125  01AAA0                     i2l19150:
 44126  01AAA0  90D8               	bcf	status,0,c
 44127  01AAA2  3605               	rlcf	i2___lldiv@divisor,f,c
 44128  01AAA4  3606               	rlcf	i2___lldiv@divisor+1,f,c
 44129  01AAA6  3607               	rlcf	i2___lldiv@divisor+2,f,c
 44130  01AAA8  3608               	rlcf	i2___lldiv@divisor+3,f,c
 44131  01AAAA  2A0D               	incf	i2___lldiv@counter,f,c
 44132  01AAAC                     i2l19152:
 44133  01AAAC  AE08               	btfss	i2___lldiv@divisor+3,7,c
 44134  01AAAE  D7F8               	goto	i2l19150
 44135  01AAB0                     i2u2432_40:
 44136  01AAB0  90D8               	bcf	status,0,c
 44137  01AAB2  3609               	rlcf	i2___lldiv@quotient,f,c
 44138  01AAB4  360A               	rlcf	i2___lldiv@quotient+1,f,c
 44139  01AAB6  360B               	rlcf	i2___lldiv@quotient+2,f,c
 44140  01AAB8  360C               	rlcf	i2___lldiv@quotient+3,f,c
 44141  01AABA  5005               	movf	i2___lldiv@divisor,w,c
 44142  01AABC  5C01               	subwf	i2___lldiv@dividend,w,c
 44143  01AABE  5006               	movf	i2___lldiv@divisor+1,w,c
 44144  01AAC0  5802               	subwfb	i2___lldiv@dividend+1,w,c
 44145  01AAC2  5007               	movf	i2___lldiv@divisor+2,w,c
 44146  01AAC4  5803               	subwfb	i2___lldiv@dividend+2,w,c
 44147  01AAC6  5008               	movf	i2___lldiv@divisor+3,w,c
 44148  01AAC8  5804               	subwfb	i2___lldiv@dividend+3,w,c
 44149  01AACA  A0D8               	btfss	status,0,c
 44150  01AACC  D009               	goto	i2l19162
 44151  01AACE  5005               	movf	i2___lldiv@divisor,w,c
 44152  01AAD0  5E01               	subwf	i2___lldiv@dividend,f,c
 44153  01AAD2  5006               	movf	i2___lldiv@divisor+1,w,c
 44154  01AAD4  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 44155  01AAD6  5007               	movf	i2___lldiv@divisor+2,w,c
 44156  01AAD8  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 44157  01AADA  5008               	movf	i2___lldiv@divisor+3,w,c
 44158  01AADC  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 44159  01AADE  8009               	bsf	i2___lldiv@quotient,0,c
 44160  01AAE0                     i2l19162:
 44161  01AAE0  90D8               	bcf	status,0,c
 44162  01AAE2  3208               	rrcf	i2___lldiv@divisor+3,f,c
 44163  01AAE4  3207               	rrcf	i2___lldiv@divisor+2,f,c
 44164  01AAE6  3206               	rrcf	i2___lldiv@divisor+1,f,c
 44165  01AAE8  3205               	rrcf	i2___lldiv@divisor,f,c
 44166  01AAEA  2E0D               	decfsz	i2___lldiv@counter,f,c
 44167  01AAEC  D7E1               	goto	i2u2432_40
 44168  01AAEE                     i2l2606:
 44169  01AAEE  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 44170  01AAF2  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 44171  01AAF6  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 44172  01AAFA  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 44173  01AAFE  0012               	return		;funcret
 44174  01AB00                     __end_ofi2___lldiv:
 44175                           	opt callstack 0
 44176                           
 44177 ;; *************** function i2___fltol *****************
 44178 ;; Defined at:
 44179 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 44180 ;; Parameters:    Size  Location     Type
 44181 ;;  f1              4   77[COMRAM] unsigned long 
 44182 ;; Auto vars:     Size  Location     Type
 44183 ;;  __fltol         1   86[COMRAM] unsigned char 
 44184 ;;  __fltol         1   85[COMRAM] unsigned char 
 44185 ;; Return value:  Size  Location     Type
 44186 ;;                  4   77[COMRAM] long 
 44187 ;; Registers used:
 44188 ;;		wreg, status,2, status,0
 44189 ;; Tracked objects:
 44190 ;;		On entry : 0/0
 44191 ;;		On exit  : 0/0
 44192 ;;		Unchanged: 0/0
 44193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44196 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44197 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44198 ;;Total ram usage:       10 bytes
 44199 ;; Hardware stack levels used:    1
 44200 ;; This function calls:
 44201 ;;		Nothing
 44202 ;; This function is called by:
 44203 ;;		i2__doprnt
 44204 ;; This function uses a non-reentrant model
 44205 ;;
 44206                           
 44207                           	psect	text193
 44208  01A1A0                     __ptext193:
 44209                           	opt callstack 0
 44210  01A1A0                     i2___fltol:
 44211                           	opt callstack 13
 44212                           
 44213                           ;incstack = 0
 44214  01A1A0  3450               	rlcf	i2___fltol@f1+2,w,c
 44215  01A1A2  3451               	rlcf	i2___fltol@f1+3,w,c
 44216  01A1A4  6E57               	movwf	i2___fltol@exp1,c
 44217  01A1A6  5057               	movf	i2___fltol@exp1,w,c
 44218  01A1A8  A4D8               	btfss	status,2,c
 44219  01A1AA  D009               	goto	i2l19278
 44220  01A1AC                     i2u2450_40:
 44221  01A1AC  0E00               	movlw	0
 44222  01A1AE  6E4E               	movwf	?i2___fltol,c
 44223  01A1B0  0E00               	movlw	0
 44224  01A1B2  6E4F               	movwf	?i2___fltol+1,c
 44225  01A1B4  0E00               	movlw	0
 44226  01A1B6  6E50               	movwf	?i2___fltol+2,c
 44227  01A1B8  0E00               	movlw	0
 44228  01A1BA  6E51               	movwf	?i2___fltol+3,c
 44229  01A1BC  0012               	return	
 44230  01A1BE                     i2l19278:
 44231  01A1BE  C04E  F052         	movff	i2___fltol@f1,??i2___fltol
 44232  01A1C2  C04F  F053         	movff	i2___fltol@f1+1,??i2___fltol+1
 44233  01A1C6  C050  F054         	movff	i2___fltol@f1+2,??i2___fltol+2
 44234  01A1CA  C051  F055         	movff	i2___fltol@f1+3,??i2___fltol+3
 44235  01A1CE  0E20               	movlw	32
 44236  01A1D0  D005               	goto	i2u2451_40
 44237  01A1D2                     i2u2451_45:
 44238  01A1D2  90D8               	bcf	status,0,c
 44239  01A1D4  3255               	rrcf	??i2___fltol+3,f,c
 44240  01A1D6  3254               	rrcf	??i2___fltol+2,f,c
 44241  01A1D8  3253               	rrcf	??i2___fltol+1,f,c
 44242  01A1DA  3252               	rrcf	??i2___fltol,f,c
 44243  01A1DC                     i2u2451_40:
 44244  01A1DC  2EE8               	decfsz	wreg,f,c
 44245  01A1DE  D7F9               	goto	i2u2451_45
 44246  01A1E0  5052               	movf	??i2___fltol,w,c
 44247  01A1E2  6E56               	movwf	i2___fltol@sign1,c
 44248  01A1E4  8E50               	bsf	i2___fltol@f1+2,7,c
 44249  01A1E6  0EFF               	movlw	255
 44250  01A1E8  164E               	andwf	i2___fltol@f1,f,c
 44251  01A1EA  0EFF               	movlw	255
 44252  01A1EC  164F               	andwf	i2___fltol@f1+1,f,c
 44253  01A1EE  0EFF               	movlw	255
 44254  01A1F0  1650               	andwf	i2___fltol@f1+2,f,c
 44255  01A1F2  0E00               	movlw	0
 44256  01A1F4  1651               	andwf	i2___fltol@f1+3,f,c
 44257  01A1F6  0E96               	movlw	150
 44258  01A1F8  5E57               	subwf	i2___fltol@exp1,f,c
 44259  01A1FA  AE57               	btfss	i2___fltol@exp1,7,c
 44260  01A1FC  D00D               	goto	i2l19298
 44261  01A1FE  5057               	movf	i2___fltol@exp1,w,c
 44262  01A200  0A80               	xorlw	128
 44263  01A202  0F97               	addlw	151
 44264  01A204  A0D8               	btfss	status,0,c
 44265  01A206  D7D2               	goto	i2u2450_40
 44266  01A208                     i2l19294:
 44267  01A208  90D8               	bcf	status,0,c
 44268  01A20A  3251               	rrcf	i2___fltol@f1+3,f,c
 44269  01A20C  3250               	rrcf	i2___fltol@f1+2,f,c
 44270  01A20E  324F               	rrcf	i2___fltol@f1+1,f,c
 44271  01A210  324E               	rrcf	i2___fltol@f1,f,c
 44272  01A212  3E57               	incfsz	i2___fltol@exp1,f,c
 44273  01A214  D7F9               	goto	i2l19294
 44274  01A216  D00D               	goto	i2u2455_40
 44275  01A218                     i2l19298:
 44276  01A218  0E1F               	movlw	31
 44277  01A21A  6457               	cpfsgt	i2___fltol@exp1,c
 44278  01A21C  D007               	goto	i2l19306
 44279  01A21E  D7C6               	goto	i2u2450_40
 44280  01A220                     i2l19304:
 44281  01A220  90D8               	bcf	status,0,c
 44282  01A222  364E               	rlcf	i2___fltol@f1,f,c
 44283  01A224  364F               	rlcf	i2___fltol@f1+1,f,c
 44284  01A226  3650               	rlcf	i2___fltol@f1+2,f,c
 44285  01A228  3651               	rlcf	i2___fltol@f1+3,f,c
 44286  01A22A  0657               	decf	i2___fltol@exp1,f,c
 44287  01A22C                     i2l19306:
 44288  01A22C  5057               	movf	i2___fltol@exp1,w,c
 44289  01A22E  A4D8               	btfss	status,2,c
 44290  01A230  D7F7               	goto	i2l19304
 44291  01A232                     i2u2455_40:
 44292  01A232  5056               	movf	i2___fltol@sign1,w,c
 44293  01A234  B4D8               	btfsc	status,2,c
 44294  01A236  D008               	goto	i2l19312
 44295  01A238  1E51               	comf	i2___fltol@f1+3,f,c
 44296  01A23A  1E50               	comf	i2___fltol@f1+2,f,c
 44297  01A23C  1E4F               	comf	i2___fltol@f1+1,f,c
 44298  01A23E  6C4E               	negf	i2___fltol@f1,c
 44299  01A240  0E00               	movlw	0
 44300  01A242  224F               	addwfc	i2___fltol@f1+1,f,c
 44301  01A244  2250               	addwfc	i2___fltol@f1+2,f,c
 44302  01A246  2251               	addwfc	i2___fltol@f1+3,f,c
 44303  01A248                     i2l19312:
 44304  01A248  C04E  F04E         	movff	i2___fltol@f1,?i2___fltol
 44305  01A24C  C04F  F04F         	movff	i2___fltol@f1+1,?i2___fltol+1
 44306  01A250  C050  F050         	movff	i2___fltol@f1+2,?i2___fltol+2
 44307  01A254  C051  F051         	movff	i2___fltol@f1+3,?i2___fltol+3
 44308  01A258  0012               	return		;funcret
 44309  01A25A                     __end_ofi2___fltol:
 44310                           	opt callstack 0
 44311                           
 44312 ;; *************** function i2___fleq *****************
 44313 ;; Defined at:
 44314 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 44315 ;; Parameters:    Size  Location     Type
 44316 ;;  ff1             4    0[COMRAM] long 
 44317 ;;  ff2             4    4[COMRAM] long 
 44318 ;; Auto vars:     Size  Location     Type
 44319 ;;		None
 44320 ;; Return value:  Size  Location     Type
 44321 ;;		None               void
 44322 ;; Registers used:
 44323 ;;		wreg, status,2, status,0
 44324 ;; Tracked objects:
 44325 ;;		On entry : 0/0
 44326 ;;		On exit  : 0/0
 44327 ;;		Unchanged: 0/0
 44328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44332 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44333 ;;Total ram usage:       12 bytes
 44334 ;; Hardware stack levels used:    1
 44335 ;; This function calls:
 44336 ;;		Nothing
 44337 ;; This function is called by:
 44338 ;;		i2__doprnt
 44339 ;; This function uses a non-reentrant model
 44340 ;;
 44341                           
 44342                           	psect	text194
 44343  01A866                     __ptext194:
 44344                           	opt callstack 0
 44345  01A866                     i2___fleq:
 44346                           	opt callstack 13
 44347                           
 44348                           ;incstack = 0
 44349  01A866  0E00               	movlw	0
 44350  01A868  1401               	andwf	i2___fleq@ff1,w,c
 44351  01A86A  6E09               	movwf	??i2___fleq& (0+255),c
 44352  01A86C  0E00               	movlw	0
 44353  01A86E  1402               	andwf	i2___fleq@ff1+1,w,c
 44354  01A870  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 44355  01A872  0E80               	movlw	128
 44356  01A874  1403               	andwf	i2___fleq@ff1+2,w,c
 44357  01A876  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 44358  01A878  0E7F               	movlw	127
 44359  01A87A  1404               	andwf	i2___fleq@ff1+3,w,c
 44360  01A87C  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 44361  01A87E  5009               	movf	??i2___fleq,w,c
 44362  01A880  100A               	iorwf	??i2___fleq+1,w,c
 44363  01A882  100B               	iorwf	??i2___fleq+2,w,c
 44364  01A884  100C               	iorwf	??i2___fleq+3,w,c
 44365  01A886  A4D8               	btfss	status,2,c
 44366  01A888  D008               	goto	i2l19230
 44367  01A88A  0E00               	movlw	0
 44368  01A88C  6E01               	movwf	i2___fleq@ff1,c
 44369  01A88E  0E00               	movlw	0
 44370  01A890  6E02               	movwf	i2___fleq@ff1+1,c
 44371  01A892  0E00               	movlw	0
 44372  01A894  6E03               	movwf	i2___fleq@ff1+2,c
 44373  01A896  0E00               	movlw	0
 44374  01A898  6E04               	movwf	i2___fleq@ff1+3,c
 44375  01A89A                     i2l19230:
 44376  01A89A  0E00               	movlw	0
 44377  01A89C  1405               	andwf	i2___fleq@ff2,w,c
 44378  01A89E  6E09               	movwf	??i2___fleq& (0+255),c
 44379  01A8A0  0E00               	movlw	0
 44380  01A8A2  1406               	andwf	i2___fleq@ff2+1,w,c
 44381  01A8A4  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 44382  01A8A6  0E80               	movlw	128
 44383  01A8A8  1407               	andwf	i2___fleq@ff2+2,w,c
 44384  01A8AA  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 44385  01A8AC  0E7F               	movlw	127
 44386  01A8AE  1408               	andwf	i2___fleq@ff2+3,w,c
 44387  01A8B0  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 44388  01A8B2  5009               	movf	??i2___fleq,w,c
 44389  01A8B4  100A               	iorwf	??i2___fleq+1,w,c
 44390  01A8B6  100B               	iorwf	??i2___fleq+2,w,c
 44391  01A8B8  100C               	iorwf	??i2___fleq+3,w,c
 44392  01A8BA  A4D8               	btfss	status,2,c
 44393  01A8BC  D008               	goto	i2l19234
 44394  01A8BE  0E00               	movlw	0
 44395  01A8C0  6E05               	movwf	i2___fleq@ff2,c
 44396  01A8C2  0E00               	movlw	0
 44397  01A8C4  6E06               	movwf	i2___fleq@ff2+1,c
 44398  01A8C6  0E00               	movlw	0
 44399  01A8C8  6E07               	movwf	i2___fleq@ff2+2,c
 44400  01A8CA  0E00               	movlw	0
 44401  01A8CC  6E08               	movwf	i2___fleq@ff2+3,c
 44402  01A8CE                     i2l19234:
 44403  01A8CE  5005               	movf	i2___fleq@ff2,w,c
 44404  01A8D0  1801               	xorwf	i2___fleq@ff1,w,c
 44405  01A8D2  E10A               	bnz	i2u2443_40
 44406  01A8D4  5006               	movf	i2___fleq@ff2+1,w,c
 44407  01A8D6  1802               	xorwf	i2___fleq@ff1+1,w,c
 44408  01A8D8  E107               	bnz	i2u2443_40
 44409  01A8DA  5007               	movf	i2___fleq@ff2+2,w,c
 44410  01A8DC  1803               	xorwf	i2___fleq@ff1+2,w,c
 44411  01A8DE  E104               	bnz	i2u2443_40
 44412  01A8E0  5008               	movf	i2___fleq@ff2+3,w,c
 44413  01A8E2  1804               	xorwf	i2___fleq@ff1+3,w,c
 44414  01A8E4  B4D8               	btfsc	status,2,c
 44415  01A8E6  D002               	goto	i2l19238
 44416  01A8E8                     i2u2443_40:
 44417  01A8E8  90D8               	bcf	status,0,c
 44418  01A8EA  0012               	return	
 44419  01A8EC                     i2l19238:
 44420  01A8EC  80D8               	bsf	status,0,c
 44421  01A8EE  0012               	return		;funcret
 44422  01A8F0                     __end_ofi2___fleq:
 44423                           	opt callstack 0
 44424                           
 44425 ;; *************** function _ADCC_ThresholdISR *****************
 44426 ;; Defined at:
 44427 ;;		line 298 in file "mcc_generated_files/adcc.c"
 44428 ;; Parameters:    Size  Location     Type
 44429 ;;		None
 44430 ;; Auto vars:     Size  Location     Type
 44431 ;;		None
 44432 ;; Return value:  Size  Location     Type
 44433 ;;                  1    wreg      void 
 44434 ;; Registers used:
 44435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 44436 ;; Tracked objects:
 44437 ;;		On entry : 0/0
 44438 ;;		On exit  : 0/0
 44439 ;;		Unchanged: 0/0
 44440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44445 ;;Total ram usage:        0 bytes
 44446 ;; Hardware stack levels used:    1
 44447 ;; Hardware stack levels required when called:    3
 44448 ;; This function calls:
 44449 ;;		Absolute function
 44450 ;;		_ADCC_DefaultInterruptHandler
 44451 ;;		_ADC_PostProcessingHandler
 44452 ;; This function is called by:
 44453 ;;		_INTERRUPT_InterruptManagerHigh
 44454 ;; This function uses a non-reentrant model
 44455 ;;
 44456                           
 44457                           	psect	text195
 44458  01BBE2                     __ptext195:
 44459                           	opt callstack 0
 44460  01BBE2                     _ADCC_ThresholdISR:
 44461                           	opt callstack 13
 44462                           
 44463                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 44464                           
 44465                           ;incstack = 0
 44466  01BBE2  010E               	movlb	14	; () banked
 44467  01BBE4  93CB               	bcf	203,1,b	;volatile
 44468                           
 44469                           ; BSR set to: 14
 44470                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 44471  01BBE6  0101               	movlb	1	; () banked
 44472  01BBE8  517A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 44473  01BBEA  117B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 44474  01BBEC  117C               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 44475  01BBEE  B4D8               	btfsc	status,2,c
 44476  01BBF0  0012               	return	
 44477                           
 44478                           ; BSR set to: 1
 44479                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 44480  01BBF2  D801               	call	i2u2717_48
 44481  01BBF4  0012               	return	
 44482  01BBF6                     i2u2717_48:
 44483  01BBF6  0005               	push	
 44484  01BBF8  6EFA               	movwf	pclath,c
 44485  01BBFA  517A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 44486  01BBFC  6EFD               	movwf	tosl,c
 44487  01BBFE  517B               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 44488  01BC00  6EFE               	movwf	tosh,c
 44489  01BC02  517C               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 44490  01BC04  6EFF               	movwf	tosu,c
 44491  01BC06  50FA               	movf	pclath,w,c
 44492  01BC08  0012               	return		;indir
 44493  01BC0A                     __end_of_ADCC_ThresholdISR:
 44494                           	opt callstack 0
 44495                           
 44496 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 44497 ;; Defined at:
 44498 ;;		line 310 in file "mcc_generated_files/adcc.c"
 44499 ;; Parameters:    Size  Location     Type
 44500 ;;		None
 44501 ;; Auto vars:     Size  Location     Type
 44502 ;;		None
 44503 ;; Return value:  Size  Location     Type
 44504 ;;                  1    wreg      void 
 44505 ;; Registers used:
 44506 ;;		None
 44507 ;; Tracked objects:
 44508 ;;		On entry : 0/0
 44509 ;;		On exit  : 0/0
 44510 ;;		Unchanged: 0/0
 44511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44516 ;;Total ram usage:        0 bytes
 44517 ;; Hardware stack levels used:    1
 44518 ;; This function calls:
 44519 ;;		Nothing
 44520 ;; This function is called by:
 44521 ;;		_ADCC_Initialize
 44522 ;;		_ADCC_ThresholdISR
 44523 ;; This function uses a non-reentrant model
 44524 ;;
 44525                           
 44526                           	psect	text196
 44527  01C1B8                     __ptext196:
 44528                           	opt callstack 0
 44529  01C1B8                     _ADCC_DefaultInterruptHandler:
 44530                           	opt callstack 15
 44531                           
 44532                           ;incstack = 0
 44533  01C1B8  0012               	return		;funcret
 44534  01C1BA                     __end_of_ADCC_DefaultInterruptHandler:
 44535                           	opt callstack 0
 44536                           
 44537 ;; *************** function _ADC_PostProcessingHandler *****************
 44538 ;; Defined at:
 44539 ;;		line 13 in file "adc_postprocessing.c"
 44540 ;; Parameters:    Size  Location     Type
 44541 ;;		None
 44542 ;; Auto vars:     Size  Location     Type
 44543 ;;  i               1   26[BANK0 ] unsigned char 
 44544 ;;  i               1   25[BANK0 ] unsigned char 
 44545 ;;  current_adc_    1   24[BANK0 ] enum E9492
 44546 ;; Return value:  Size  Location     Type
 44547 ;;                  1    wreg      void 
 44548 ;; Registers used:
 44549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44550 ;; Tracked objects:
 44551 ;;		On entry : 0/0
 44552 ;;		On exit  : 0/0
 44553 ;;		Unchanged: 0/0
 44554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44556 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44558 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44559 ;;Total ram usage:       23 bytes
 44560 ;; Hardware stack levels used:    1
 44561 ;; Hardware stack levels required when called:    2
 44562 ;; This function calls:
 44563 ;;		_ADCC_GetConversionResult
 44564 ;;		_ADCC_GetCurrentCountofConversions
 44565 ;;		_ADCC_GetFilterValue
 44566 ;;		_ADCC_HasAccumulatorOverflowed
 44567 ;;		_ADCC_StopConversion
 44568 ;;		_TMR2_StartTimer
 44569 ;;		_fabs
 44570 ;;		i2___fladd
 44571 ;;		i2___fldiv
 44572 ;;		i2___flge
 44573 ;;		i2___flmul
 44574 ;;		i2___flsub
 44575 ;;		i2___xxtofl
 44576 ;; This function is called by:
 44577 ;;		_main
 44578 ;;		_ADCC_ThresholdISR
 44579 ;; This function uses a non-reentrant model
 44580 ;;
 44581                           
 44582                           	psect	text197
 44583  013EB6                     __ptext197:
 44584                           	opt callstack 0
 44585  013EB6                     _ADC_PostProcessingHandler:
 44586                           	opt callstack 13
 44587                           
 44588                           ;adc_postprocessing.c: 16: ADCC_StopConversion();
 44589                           
 44590                           ;incstack = 0
 44591  013EB6  ECD0  F0E0         	call	_ADCC_StopConversion	;wreg free
 44592                           
 44593                           ;adc_postprocessing.c: 19: adcc_channel_t current_adc_channel = ADPCH;
 44594  013EBA  CF5F F078          	movff	3935,ADC_PostProcessingHandler@current_adc_channel	;volatile
 44595                           
 44596                           ;adc_postprocessing.c: 22: switch (current_adc_channel) {
 44597  013EBE  EF6C  F0A3         	goto	i2l20814
 44598  013EC2                     i2l20730:
 44599                           
 44600                           ; BSR set to: 0
 44601                           ;adc_postprocessing.c: 26: adc_results.avss_adc_result = (ADCC_GetConversionResult()) * 
      +                          (5.0/1023.0);
 44602  013EC2  ECDC  F0DF         	call	_ADCC_GetConversionResult	;wreg free
 44603  013EC6  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 44604  013ECA  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 44605  013ECE  6A07               	clrf	i2___xxtofl@val+2,c
 44606  013ED0  6A08               	clrf	i2___xxtofl@val+3,c
 44607  013ED2  0E00               	movlw	0
 44608  013ED4  EC5D  F0CA         	call	i2___xxtofl
 44609  013ED8  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 44610  013EDC  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 44611  013EE0  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 44612  013EE4  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 44613  013EE8  0E0A               	movlw	10
 44614  013EEA  6E30               	movwf	i2___flmul@a,c
 44615  013EEC  0E28               	movlw	40
 44616  013EEE  6E31               	movwf	i2___flmul@a+1,c
 44617  013EF0  0EA0               	movlw	160
 44618  013EF2  6E32               	movwf	i2___flmul@a+2,c
 44619  013EF4  0E3B               	movlw	59
 44620  013EF6  6E33               	movwf	i2___flmul@a+3,c
 44621  013EF8  ECFC  F0B3         	call	i2___flmul	;wreg free
 44622  013EFC  C02C  F0DE         	movff	?i2___flmul,_adc_results
 44623  013F00  C02D  F0DF         	movff	?i2___flmul+1,_adc_results+1
 44624  013F04  C02E  F0E0         	movff	?i2___flmul+2,_adc_results+2
 44625  013F08  C02F  F0E1         	movff	?i2___flmul+3,_adc_results+3
 44626                           
 44627                           ;adc_postprocessing.c: 28: next_adc_channel = channel_FVR_buf1;
 44628  013F0C  0E3F               	movlw	63
 44629  013F0E  D3DE               	goto	L49
 44630  013F10                     i2l20734:
 44631                           
 44632                           ; BSR set to: 0
 44633                           ;adc_postprocessing.c: 35: adc_results.fvr_adc_result = (ADCC_GetConversionResult()) * (
      +                          5.0/1023.0) + adc_results.avss_adc_result;
 44634  013F10  0E0A               	movlw	10
 44635  013F12  6E30               	movwf	i2___flmul@a,c
 44636  013F14  0E28               	movlw	40
 44637  013F16  6E31               	movwf	i2___flmul@a+1,c
 44638  013F18  0EA0               	movlw	160
 44639  013F1A  6E32               	movwf	i2___flmul@a+2,c
 44640  013F1C  0E3B               	movlw	59
 44641  013F1E  6E33               	movwf	i2___flmul@a+3,c
 44642  013F20  ECDC  F0DF         	call	_ADCC_GetConversionResult	;wreg free
 44643  013F24  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 44644  013F28  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 44645  013F2C  6A07               	clrf	i2___xxtofl@val+2,c
 44646  013F2E  6A08               	clrf	i2___xxtofl@val+3,c
 44647  013F30  0E00               	movlw	0
 44648  013F32  EC5D  F0CA         	call	i2___xxtofl
 44649  013F36  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 44650  013F3A  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 44651  013F3E  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 44652  013F42  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 44653  013F46  ECFC  F0B3         	call	i2___flmul	;wreg free
 44654  013F4A  C02C  F052         	movff	?i2___flmul,i2___fladd@b
 44655  013F4E  C02D  F053         	movff	?i2___flmul+1,i2___fladd@b+1
 44656  013F52  C02E  F054         	movff	?i2___flmul+2,i2___fladd@b+2
 44657  013F56  C02F  F055         	movff	?i2___flmul+3,i2___fladd@b+3
 44658  013F5A  C0DE  F056         	movff	_adc_results,i2___fladd@a
 44659  013F5E  C0DF  F057         	movff	_adc_results+1,i2___fladd@a+1
 44660  013F62  C0E0  F058         	movff	_adc_results+2,i2___fladd@a+2
 44661  013F66  C0E1  F059         	movff	_adc_results+3,i2___fladd@a+3
 44662  013F6A  ECB3  F0B8         	call	i2___fladd	;wreg free
 44663  013F6E  C052  F0E2         	movff	?i2___fladd,_adc_results+4
 44664  013F72  C053  F0E3         	movff	?i2___fladd+1,_adc_results+5
 44665  013F76  C054  F0E4         	movff	?i2___fladd+2,_adc_results+6
 44666  013F7A  C055  F0E5         	movff	?i2___fladd+3,_adc_results+7
 44667                           
 44668                           ;adc_postprocessing.c: 36: adc_result_scaling = 4.096/adc_results.fvr_adc_result;
 44669  013F7E  0E6F               	movlw	111
 44670  013F80  6E13               	movwf	i2___fldiv@b,c
 44671  013F82  0E12               	movlw	18
 44672  013F84  6E14               	movwf	i2___fldiv@b+1,c
 44673  013F86  0E83               	movlw	131
 44674  013F88  6E15               	movwf	i2___fldiv@b+2,c
 44675  013F8A  0E40               	movlw	64
 44676  013F8C  6E16               	movwf	i2___fldiv@b+3,c
 44677  013F8E  C0E2  F017         	movff	_adc_results+4,i2___fldiv@a
 44678  013F92  C0E3  F018         	movff	_adc_results+5,i2___fldiv@a+1
 44679  013F96  C0E4  F019         	movff	_adc_results+6,i2___fldiv@a+2
 44680  013F9A  C0E5  F01A         	movff	_adc_results+7,i2___fldiv@a+3
 44681  013F9E  ECCA  F0C0         	call	i2___fldiv	;wreg free
 44682  013FA2  C013  F0CD         	movff	?i2___fldiv,_adc_result_scaling
 44683  013FA6  C014  F0CE         	movff	?i2___fldiv+1,_adc_result_scaling+1
 44684  013FAA  C015  F0CF         	movff	?i2___fldiv+2,_adc_result_scaling+2
 44685  013FAE  C016  F0D0         	movff	?i2___fldiv+3,_adc_result_scaling+3
 44686                           
 44687                           ;adc_postprocessing.c: 38: if (adc_results.fvr_adc_result > 5.0 || adc_results.fvr_adc_r
      +                          esult < 3.9) {
 44688  013FB2  0E00               	movlw	0
 44689  013FB4  6E01               	movwf	i2___flge@ff1,c
 44690  013FB6  0E00               	movlw	0
 44691  013FB8  6E02               	movwf	i2___flge@ff1+1,c
 44692  013FBA  0EA0               	movlw	160
 44693  013FBC  6E03               	movwf	i2___flge@ff1+2,c
 44694  013FBE  0E40               	movlw	64
 44695  013FC0  6E04               	movwf	i2___flge@ff1+3,c
 44696  013FC2  C0E2  F005         	movff	_adc_results+4,i2___flge@ff2
 44697  013FC6  C0E3  F006         	movff	_adc_results+5,i2___flge@ff2+1
 44698  013FCA  C0E4  F007         	movff	_adc_results+6,i2___flge@ff2+2
 44699  013FCE  C0E5  F008         	movff	_adc_results+7,i2___flge@ff2+3
 44700  013FD2  ECDD  F0CE         	call	i2___flge	;wreg free
 44701  013FD6  A0D8               	btfss	status,0,c
 44702  013FD8  D014               	goto	i2u2676_40
 44703  013FDA  C0E2  F001         	movff	_adc_results+4,i2___flge@ff1
 44704  013FDE  C0E3  F002         	movff	_adc_results+5,i2___flge@ff1+1
 44705  013FE2  C0E4  F003         	movff	_adc_results+6,i2___flge@ff1+2
 44706  013FE6  C0E5  F004         	movff	_adc_results+7,i2___flge@ff1+3
 44707  013FEA  0E9A               	movlw	154
 44708  013FEC  6E05               	movwf	i2___flge@ff2,c
 44709  013FEE  0E99               	movlw	153
 44710  013FF0  6E06               	movwf	i2___flge@ff2+1,c
 44711  013FF2  0E79               	movlw	121
 44712  013FF4  6E07               	movwf	i2___flge@ff2+2,c
 44713  013FF6  0E40               	movlw	64
 44714  013FF8  6E08               	movwf	i2___flge@ff2+3,c
 44715  013FFA  ECDD  F0CE         	call	i2___flge	;wreg free
 44716  013FFE  B0D8               	btfsc	status,0,c
 44717  014000  D003               	goto	i2l1510
 44718  014002                     i2u2676_40:
 44719                           
 44720                           ;adc_postprocessing.c: 40: error_handler.FVR_ADC_error_flag = 1;
 44721  014002  0E01               	movlw	1
 44722  014004  0100               	movlb	0	; () banked
 44723  014006  6FC5               	movwf	_error_handler& (0+255),b
 44724  014008                     i2l1510:
 44725                           
 44726                           ;adc_postprocessing.c: 42: };adc_postprocessing.c: 44: next_adc_channel = POS5_ADC;
 44727  014008  0E04               	movlw	4
 44728  01400A  D360               	goto	L49
 44729  01400C                     i2l20744:
 44730                           
 44731                           ; BSR set to: 0
 44732                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 44733  01400C  0E0A               	movlw	10
 44734  01400E  6E30               	movwf	i2___flmul@a,c
 44735  014010  0E28               	movlw	40
 44736  014012  6E31               	movwf	i2___flmul@a+1,c
 44737  014014  0EA0               	movlw	160
 44738  014016  6E32               	movwf	i2___flmul@a+2,c
 44739  014018  0E3B               	movlw	59
 44740  01401A  6E33               	movwf	i2___flmul@a+3,c
 44741  01401C  ECD2  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 44742  014020  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 44743  014024  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 44744  014028  6A07               	clrf	i2___xxtofl@val+2,c
 44745  01402A  6A08               	clrf	i2___xxtofl@val+3,c
 44746  01402C  0E00               	movlw	0
 44747  01402E  EC5D  F0CA         	call	i2___xxtofl
 44748  014032  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 44749  014036  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 44750  01403A  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 44751  01403E  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 44752  014042  ECFC  F0B3         	call	i2___flmul	;wreg free
 44753  014046  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6310
 44754  01404A  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6310+1
 44755  01404E  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6310+2
 44756  014052  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6310+3
 44757                           
 44758                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 44759  014056  C0DE  F068         	movff	_adc_results,i2___flsub@a
 44760  01405A  C0DF  F069         	movff	_adc_results+1,i2___flsub@a+1
 44761  01405E  C0E0  F06A         	movff	_adc_results+2,i2___flsub@a+2
 44762  014062  C0E1  F06B         	movff	_adc_results+3,i2___flsub@a+3
 44763  014066  0E00               	movlw	0
 44764  014068  6E30               	movwf	i2___flmul@a,c
 44765  01406A  0E00               	movlw	0
 44766  01406C  6E31               	movwf	i2___flmul@a+1,c
 44767  01406E  0E00               	movlw	0
 44768  014070  6E32               	movwf	i2___flmul@a+2,c
 44769  014072  0E40               	movlw	64
 44770  014074  6E33               	movwf	i2___flmul@a+3,c
 44771  014076  C07B  F02C         	movff	_ADC_PostProcessingHandler$6310,i2___flmul@b
 44772  01407A  C07C  F02D         	movff	_ADC_PostProcessingHandler$6310+1,i2___flmul@b+1
 44773  01407E  C07D  F02E         	movff	_ADC_PostProcessingHandler$6310+2,i2___flmul@b+2
 44774  014082  C07E  F02F         	movff	_ADC_PostProcessingHandler$6310+3,i2___flmul@b+3
 44775  014086  ECFC  F0B3         	call	i2___flmul	;wreg free
 44776  01408A  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 44777  01408E  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 44778  014092  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 44779  014096  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 44780  01409A  ECB5  F0D9         	call	i2___flsub	;wreg free
 44781  01409E  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6311
 44782  0140A2  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6311+1
 44783  0140A6  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6311+2
 44784  0140AA  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6311+3
 44785                           
 44786                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 44787  0140AE  C07F  F02C         	movff	_ADC_PostProcessingHandler$6311,i2___flmul@b
 44788  0140B2  C080  F02D         	movff	_ADC_PostProcessingHandler$6311+1,i2___flmul@b+1
 44789  0140B6  C081  F02E         	movff	_ADC_PostProcessingHandler$6311+2,i2___flmul@b+2
 44790  0140BA  C082  F02F         	movff	_ADC_PostProcessingHandler$6311+3,i2___flmul@b+3
 44791  0140BE  C0CD  F030         	movff	_adc_result_scaling,i2___flmul@a
 44792  0140C2  C0CE  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 44793  0140C6  C0CF  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 44794  0140CA  C0D0  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 44795  0140CE  ECFC  F0B3         	call	i2___flmul	;wreg free
 44796  0140D2  C02C  F0E6         	movff	?i2___flmul,_adc_results+8
 44797  0140D6  C02D  F0E7         	movff	?i2___flmul+1,_adc_results+9
 44798  0140DA  C02E  F0E8         	movff	?i2___flmul+2,_adc_results+10
 44799  0140DE  C02F  F0E9         	movff	?i2___flmul+3,_adc_results+11
 44800                           
 44801                           ;adc_postprocessing.c: 51: next_adc_channel = POS12_ADC;
 44802  0140E2  0E00               	movlw	0
 44803  0140E4  D2F3               	goto	L49
 44804  0140E6                     i2l20748:
 44805                           
 44806                           ; BSR set to: 0
 44807                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 44808  0140E6  0E00               	movlw	0
 44809  0140E8  6E17               	movwf	i2___fldiv@a,c
 44810  0140EA  0EC0               	movlw	192
 44811  0140EC  6E18               	movwf	i2___fldiv@a+1,c
 44812  0140EE  0E7F               	movlw	127
 44813  0140F0  6E19               	movwf	i2___fldiv@a+2,c
 44814  0140F2  0E44               	movlw	68
 44815  0140F4  6E1A               	movwf	i2___fldiv@a+3,c
 44816  0140F6  C0E6  F013         	movff	_adc_results+8,i2___fldiv@b
 44817  0140FA  C0E7  F014         	movff	_adc_results+9,i2___fldiv@b+1
 44818  0140FE  C0E8  F015         	movff	_adc_results+10,i2___fldiv@b+2
 44819  014102  C0E9  F016         	movff	_adc_results+11,i2___fldiv@b+3
 44820  014106  ECCA  F0C0         	call	i2___fldiv	;wreg free
 44821  01410A  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 44822  01410E  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 44823  014112  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 44824  014116  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 44825  01411A  ECD2  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 44826  01411E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 44827  014122  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 44828  014126  6A07               	clrf	i2___xxtofl@val+2,c
 44829  014128  6A08               	clrf	i2___xxtofl@val+3,c
 44830  01412A  0E00               	movlw	0
 44831  01412C  EC5D  F0CA         	call	i2___xxtofl
 44832  014130  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 44833  014134  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 44834  014138  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 44835  01413C  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 44836  014140  ECFC  F0B3         	call	i2___flmul	;wreg free
 44837  014144  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6310
 44838  014148  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6310+1
 44839  01414C  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6310+2
 44840  014150  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6310+3
 44841                           
 44842                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 44843  014154  C0DE  F068         	movff	_adc_results,i2___flsub@a
 44844  014158  C0DF  F069         	movff	_adc_results+1,i2___flsub@a+1
 44845  01415C  C0E0  F06A         	movff	_adc_results+2,i2___flsub@a+2
 44846  014160  C0E1  F06B         	movff	_adc_results+3,i2___flsub@a+3
 44847  014164  0E6B               	movlw	107
 44848  014166  6E30               	movwf	i2___flmul@a,c
 44849  014168  0E7D               	movlw	125
 44850  01416A  6E31               	movwf	i2___flmul@a+1,c
 44851  01416C  0E3D               	movlw	61
 44852  01416E  6E32               	movwf	i2___flmul@a+2,c
 44853  014170  0E40               	movlw	64
 44854  014172  6E33               	movwf	i2___flmul@a+3,c
 44855  014174  C07B  F02C         	movff	_ADC_PostProcessingHandler$6310,i2___flmul@b
 44856  014178  C07C  F02D         	movff	_ADC_PostProcessingHandler$6310+1,i2___flmul@b+1
 44857  01417C  C07D  F02E         	movff	_ADC_PostProcessingHandler$6310+2,i2___flmul@b+2
 44858  014180  C07E  F02F         	movff	_ADC_PostProcessingHandler$6310+3,i2___flmul@b+3
 44859  014184  ECFC  F0B3         	call	i2___flmul	;wreg free
 44860  014188  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 44861  01418C  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 44862  014190  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 44863  014194  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 44864  014198  ECB5  F0D9         	call	i2___flsub	;wreg free
 44865  01419C  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6311
 44866  0141A0  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6311+1
 44867  0141A4  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6311+2
 44868  0141A8  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6311+3
 44869                           
 44870                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 44871  0141AC  C07F  F02C         	movff	_ADC_PostProcessingHandler$6311,i2___flmul@b
 44872  0141B0  C080  F02D         	movff	_ADC_PostProcessingHandler$6311+1,i2___flmul@b+1
 44873  0141B4  C081  F02E         	movff	_ADC_PostProcessingHandler$6311+2,i2___flmul@b+2
 44874  0141B8  C082  F02F         	movff	_ADC_PostProcessingHandler$6311+3,i2___flmul@b+3
 44875  0141BC  C0CD  F030         	movff	_adc_result_scaling,i2___flmul@a
 44876  0141C0  C0CE  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 44877  0141C4  C0CF  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 44878  0141C8  C0D0  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 44879  0141CC  ECFC  F0B3         	call	i2___flmul	;wreg free
 44880  0141D0  C02C  F0EA         	movff	?i2___flmul,_adc_results+12
 44881  0141D4  C02D  F0EB         	movff	?i2___flmul+1,_adc_results+13
 44882  0141D8  C02E  F0EC         	movff	?i2___flmul+2,_adc_results+14
 44883  0141DC  C02F  F0ED         	movff	?i2___flmul+3,_adc_results+15
 44884                           
 44885                           ;adc_postprocessing.c: 57: next_adc_channel = POS12_ISNS_ADC;
 44886  0141E0  0E01               	movlw	1
 44887  0141E2  D274               	goto	L49
 44888  0141E4                     i2l20752:
 44889                           
 44890                           ; BSR set to: 0
 44891                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 44892  0141E4  0E00               	movlw	0
 44893  0141E6  6E17               	movwf	i2___fldiv@a,c
 44894  0141E8  0EC0               	movlw	192
 44895  0141EA  6E18               	movwf	i2___fldiv@a+1,c
 44896  0141EC  0E7F               	movlw	127
 44897  0141EE  6E19               	movwf	i2___fldiv@a+2,c
 44898  0141F0  0E44               	movlw	68
 44899  0141F2  6E1A               	movwf	i2___fldiv@a+3,c
 44900  0141F4  C0E6  F013         	movff	_adc_results+8,i2___fldiv@b
 44901  0141F8  C0E7  F014         	movff	_adc_results+9,i2___fldiv@b+1
 44902  0141FC  C0E8  F015         	movff	_adc_results+10,i2___fldiv@b+2
 44903  014200  C0E9  F016         	movff	_adc_results+11,i2___fldiv@b+3
 44904  014204  ECCA  F0C0         	call	i2___fldiv	;wreg free
 44905  014208  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 44906  01420C  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 44907  014210  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 44908  014214  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 44909  014218  ECD2  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 44910  01421C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 44911  014220  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 44912  014224  6A07               	clrf	i2___xxtofl@val+2,c
 44913  014226  6A08               	clrf	i2___xxtofl@val+3,c
 44914  014228  0E00               	movlw	0
 44915  01422A  EC5D  F0CA         	call	i2___xxtofl
 44916  01422E  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 44917  014232  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 44918  014236  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 44919  01423A  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 44920  01423E  ECFC  F0B3         	call	i2___flmul	;wreg free
 44921  014242  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6310
 44922  014246  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6310+1
 44923  01424A  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6310+2
 44924  01424E  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6310+3
 44925                           
 44926                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 44927  014252  C0DE  F068         	movff	_adc_results,i2___flsub@a
 44928  014256  C0DF  F069         	movff	_adc_results+1,i2___flsub@a+1
 44929  01425A  C0E0  F06A         	movff	_adc_results+2,i2___flsub@a+2
 44930  01425E  C0E1  F06B         	movff	_adc_results+3,i2___flsub@a+3
 44931  014262  0EAB               	movlw	171
 44932  014264  6E30               	movwf	i2___flmul@a,c
 44933  014266  0E41               	movlw	65
 44934  014268  6E31               	movwf	i2___flmul@a+1,c
 44935  01426A  0E00               	movlw	0
 44936  01426C  6E32               	movwf	i2___flmul@a+2,c
 44937  01426E  0E3F               	movlw	63
 44938  014270  6E33               	movwf	i2___flmul@a+3,c
 44939  014272  C07B  F02C         	movff	_ADC_PostProcessingHandler$6310,i2___flmul@b
 44940  014276  C07C  F02D         	movff	_ADC_PostProcessingHandler$6310+1,i2___flmul@b+1
 44941  01427A  C07D  F02E         	movff	_ADC_PostProcessingHandler$6310+2,i2___flmul@b+2
 44942  01427E  C07E  F02F         	movff	_ADC_PostProcessingHandler$6310+3,i2___flmul@b+3
 44943  014282  ECFC  F0B3         	call	i2___flmul	;wreg free
 44944  014286  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 44945  01428A  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 44946  01428E  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 44947  014292  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 44948  014296  ECB5  F0D9         	call	i2___flsub	;wreg free
 44949  01429A  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6311
 44950  01429E  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6311+1
 44951  0142A2  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6311+2
 44952  0142A6  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6311+3
 44953                           
 44954                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 44955  0142AA  C07F  F02C         	movff	_ADC_PostProcessingHandler$6311,i2___flmul@b
 44956  0142AE  C080  F02D         	movff	_ADC_PostProcessingHandler$6311+1,i2___flmul@b+1
 44957  0142B2  C081  F02E         	movff	_ADC_PostProcessingHandler$6311+2,i2___flmul@b+2
 44958  0142B6  C082  F02F         	movff	_ADC_PostProcessingHandler$6311+3,i2___flmul@b+3
 44959  0142BA  C0CD  F030         	movff	_adc_result_scaling,i2___flmul@a
 44960  0142BE  C0CE  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 44961  0142C2  C0CF  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 44962  0142C6  C0D0  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 44963  0142CA  ECFC  F0B3         	call	i2___flmul	;wreg free
 44964  0142CE  0100               	movlb	0	; () banked
 44965  0142D0  51D8               	movf	_pos12_isns_average_index& (0+255),w,b
 44966  0142D2  0D04               	mullw	4
 44967  0142D4  0E40               	movlw	low _pos12_isns_average_buffer
 44968  0142D6  24F3               	addwf	prodl,w,c
 44969  0142D8  6ED9               	movwf	fsr2l,c
 44970  0142DA  0E04               	movlw	high _pos12_isns_average_buffer
 44971  0142DC  20F4               	addwfc	prodh,w,c
 44972  0142DE  6EDA               	movwf	fsr2h,c
 44973  0142E0  C02C  FFDE         	movff	?i2___flmul,postinc2
 44974  0142E4  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 44975  0142E8  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 44976  0142EC  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 44977                           
 44978                           ; BSR set to: 0
 44979                           ;adc_postprocessing.c: 63: pos12_isns_average_index++;
 44980  0142F0  2BD8               	incf	_pos12_isns_average_index& (0+255),f,b
 44981                           
 44982                           ; BSR set to: 0
 44983                           ;adc_postprocessing.c: 66: if (pos12_isns_average_index == 16) {
 44984  0142F2  0E10               	movlw	16
 44985  0142F4  19D8               	xorwf	_pos12_isns_average_index& (0+255),w,b
 44986  0142F6  A4D8               	btfss	status,2,c
 44987  0142F8  D057               	goto	i2l20774
 44988                           
 44989                           ; BSR set to: 0
 44990                           ;adc_postprocessing.c: 67: pos12_isns_average_index = 0;
 44991  0142FA  0E00               	movlw	0
 44992  0142FC  6FD8               	movwf	_pos12_isns_average_index& (0+255),b
 44993                           
 44994                           ;adc_postprocessing.c: 69: adc_results.pos12_isns_adc_result = 0.0;
 44995  0142FE  0E00               	movlw	0
 44996  014300  6FEE               	movwf	(_adc_results+16)& (0+255),b
 44997  014302  0E00               	movlw	0
 44998  014304  6FEF               	movwf	(_adc_results+17)& (0+255),b
 44999  014306  0E00               	movlw	0
 45000  014308  6FF0               	movwf	(_adc_results+18)& (0+255),b
 45001  01430A  0E00               	movlw	0
 45002  01430C  6FF1               	movwf	(_adc_results+19)& (0+255),b
 45003                           
 45004                           ;adc_postprocessing.c: 70: for (uint8_t i = 0; i < 16; i++) {
 45005  01430E  0E00               	movlw	0
 45006  014310  6F79               	movwf	ADC_PostProcessingHandler@i& (0+255),b
 45007  014312                     i2l20766:
 45008                           
 45009                           ; BSR set to: 0
 45010                           ;adc_postprocessing.c: 71: adc_results.pos12_isns_adc_result += fabs(pos12_isns_average_
      +                          buffer[i]);
 45011  014312  C0EE  F052         	movff	_adc_results+16,i2___fladd@b
 45012  014316  C0EF  F053         	movff	_adc_results+17,i2___fladd@b+1
 45013  01431A  C0F0  F054         	movff	_adc_results+18,i2___fladd@b+2
 45014  01431E  C0F1  F055         	movff	_adc_results+19,i2___fladd@b+3
 45015  014322  5179               	movf	ADC_PostProcessingHandler@i& (0+255),w,b
 45016  014324  0D04               	mullw	4
 45017  014326  0E40               	movlw	low _pos12_isns_average_buffer
 45018  014328  24F3               	addwf	prodl,w,c
 45019  01432A  6ED9               	movwf	fsr2l,c
 45020  01432C  0E04               	movlw	high _pos12_isns_average_buffer
 45021  01432E  20F4               	addwfc	prodh,w,c
 45022  014330  6EDA               	movwf	fsr2h,c
 45023  014332  CFDE F005          	movff	postinc2,fabs@d
 45024  014336  CFDE F006          	movff	postinc2,fabs@d+1
 45025  01433A  CFDE F007          	movff	postinc2,fabs@d+2
 45026  01433E  CFDE F008          	movff	postinc2,fabs@d+3
 45027  014342  ECFF  F0DB         	call	_fabs	;wreg free
 45028  014346  C005  F056         	movff	?_fabs,i2___fladd@a
 45029  01434A  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 45030  01434E  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 45031  014352  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 45032  014356  ECB3  F0B8         	call	i2___fladd	;wreg free
 45033  01435A  C052  F0EE         	movff	?i2___fladd,_adc_results+16
 45034  01435E  C053  F0EF         	movff	?i2___fladd+1,_adc_results+17
 45035  014362  C054  F0F0         	movff	?i2___fladd+2,_adc_results+18
 45036  014366  C055  F0F1         	movff	?i2___fladd+3,_adc_results+19
 45037  01436A  0100               	movlb	0	; () banked
 45038  01436C  2B79               	incf	ADC_PostProcessingHandler@i& (0+255),f,b
 45039                           
 45040                           ; BSR set to: 0
 45041  01436E  0E0F               	movlw	15
 45042  014370  6579               	cpfsgt	ADC_PostProcessingHandler@i& (0+255),b
 45043  014372  D7CF               	goto	i2l20766
 45044                           
 45045                           ; BSR set to: 0
 45046                           ;adc_postprocessing.c: 72: };adc_postprocessing.c: 73: adc_results.pos12_isns_adc_result
      +                           /= (float) 16;
 45047  014374  C0EE  F013         	movff	_adc_results+16,i2___fldiv@b
 45048  014378  C0EF  F014         	movff	_adc_results+17,i2___fldiv@b+1
 45049  01437C  C0F0  F015         	movff	_adc_results+18,i2___fldiv@b+2
 45050  014380  C0F1  F016         	movff	_adc_results+19,i2___fldiv@b+3
 45051  014384  0E00               	movlw	0
 45052  014386  6E17               	movwf	i2___fldiv@a,c
 45053  014388  0E00               	movlw	0
 45054  01438A  6E18               	movwf	i2___fldiv@a+1,c
 45055  01438C  0E80               	movlw	128
 45056  01438E  6E19               	movwf	i2___fldiv@a+2,c
 45057  014390  0E41               	movlw	65
 45058  014392  6E1A               	movwf	i2___fldiv@a+3,c
 45059  014394  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45060  014398  C013  F0EE         	movff	?i2___fldiv,_adc_results+16
 45061  01439C  C014  F0EF         	movff	?i2___fldiv+1,_adc_results+17
 45062  0143A0  C015  F0F0         	movff	?i2___fldiv+2,_adc_results+18
 45063  0143A4  C016  F0F1         	movff	?i2___fldiv+3,_adc_results+19
 45064  0143A8                     i2l20774:
 45065                           
 45066                           ;adc_postprocessing.c: 74: };adc_postprocessing.c: 76: next_adc_channel = QI_ISNS_ADC;
 45067  0143A8  0E05               	movlw	5
 45068  0143AA  D190               	goto	L49
 45069  0143AC                     i2l20776:
 45070                           
 45071                           ; BSR set to: 0
 45072                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 45073  0143AC  0E00               	movlw	0
 45074  0143AE  6E17               	movwf	i2___fldiv@a,c
 45075  0143B0  0EC0               	movlw	192
 45076  0143B2  6E18               	movwf	i2___fldiv@a+1,c
 45077  0143B4  0E7F               	movlw	127
 45078  0143B6  6E19               	movwf	i2___fldiv@a+2,c
 45079  0143B8  0E44               	movlw	68
 45080  0143BA  6E1A               	movwf	i2___fldiv@a+3,c
 45081  0143BC  C0E6  F013         	movff	_adc_results+8,i2___fldiv@b
 45082  0143C0  C0E7  F014         	movff	_adc_results+9,i2___fldiv@b+1
 45083  0143C4  C0E8  F015         	movff	_adc_results+10,i2___fldiv@b+2
 45084  0143C8  C0E9  F016         	movff	_adc_results+11,i2___fldiv@b+3
 45085  0143CC  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45086  0143D0  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 45087  0143D4  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 45088  0143D8  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 45089  0143DC  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 45090  0143E0  ECD2  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 45091  0143E4  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 45092  0143E8  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 45093  0143EC  6A07               	clrf	i2___xxtofl@val+2,c
 45094  0143EE  6A08               	clrf	i2___xxtofl@val+3,c
 45095  0143F0  0E00               	movlw	0
 45096  0143F2  EC5D  F0CA         	call	i2___xxtofl
 45097  0143F6  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 45098  0143FA  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 45099  0143FE  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 45100  014402  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 45101  014406  ECFC  F0B3         	call	i2___flmul	;wreg free
 45102  01440A  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6310
 45103  01440E  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6310+1
 45104  014412  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6310+2
 45105  014416  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6310+3
 45106                           
 45107                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 45108  01441A  C0DE  F068         	movff	_adc_results,i2___flsub@a
 45109  01441E  C0DF  F069         	movff	_adc_results+1,i2___flsub@a+1
 45110  014422  C0E0  F06A         	movff	_adc_results+2,i2___flsub@a+2
 45111  014426  C0E1  F06B         	movff	_adc_results+3,i2___flsub@a+3
 45112  01442A  0E99               	movlw	153
 45113  01442C  6E30               	movwf	i2___flmul@a,c
 45114  01442E  0E83               	movlw	131
 45115  014430  6E31               	movwf	i2___flmul@a+1,c
 45116  014432  0E80               	movlw	128
 45117  014434  6E32               	movwf	i2___flmul@a+2,c
 45118  014436  0E3F               	movlw	63
 45119  014438  6E33               	movwf	i2___flmul@a+3,c
 45120  01443A  C07B  F02C         	movff	_ADC_PostProcessingHandler$6310,i2___flmul@b
 45121  01443E  C07C  F02D         	movff	_ADC_PostProcessingHandler$6310+1,i2___flmul@b+1
 45122  014442  C07D  F02E         	movff	_ADC_PostProcessingHandler$6310+2,i2___flmul@b+2
 45123  014446  C07E  F02F         	movff	_ADC_PostProcessingHandler$6310+3,i2___flmul@b+3
 45124  01444A  ECFC  F0B3         	call	i2___flmul	;wreg free
 45125  01444E  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 45126  014452  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 45127  014456  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 45128  01445A  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 45129  01445E  ECB5  F0D9         	call	i2___flsub	;wreg free
 45130  014462  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6311
 45131  014466  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6311+1
 45132  01446A  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6311+2
 45133  01446E  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6311+3
 45134                           
 45135                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 45136  014472  C07F  F02C         	movff	_ADC_PostProcessingHandler$6311,i2___flmul@b
 45137  014476  C080  F02D         	movff	_ADC_PostProcessingHandler$6311+1,i2___flmul@b+1
 45138  01447A  C081  F02E         	movff	_ADC_PostProcessingHandler$6311+2,i2___flmul@b+2
 45139  01447E  C082  F02F         	movff	_ADC_PostProcessingHandler$6311+3,i2___flmul@b+3
 45140  014482  C0CD  F030         	movff	_adc_result_scaling,i2___flmul@a
 45141  014486  C0CE  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 45142  01448A  C0CF  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 45143  01448E  C0D0  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 45144  014492  ECFC  F0B3         	call	i2___flmul	;wreg free
 45145  014496  0100               	movlb	0	; () banked
 45146  014498  51D7               	movf	_qi_isns_average_index& (0+255),w,b
 45147  01449A  0D04               	mullw	4
 45148  01449C  0E00               	movlw	low _qi_isns_average_buffer
 45149  01449E  24F3               	addwf	prodl,w,c
 45150  0144A0  6ED9               	movwf	fsr2l,c
 45151  0144A2  0E04               	movlw	high _qi_isns_average_buffer
 45152  0144A4  20F4               	addwfc	prodh,w,c
 45153  0144A6  6EDA               	movwf	fsr2h,c
 45154  0144A8  C02C  FFDE         	movff	?i2___flmul,postinc2
 45155  0144AC  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 45156  0144B0  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 45157  0144B4  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 45158                           
 45159                           ; BSR set to: 0
 45160                           ;adc_postprocessing.c: 82: qi_isns_average_index++;
 45161  0144B8  2BD7               	incf	_qi_isns_average_index& (0+255),f,b
 45162                           
 45163                           ; BSR set to: 0
 45164                           ;adc_postprocessing.c: 85: if (qi_isns_average_index == 16) {
 45165  0144BA  0E10               	movlw	16
 45166  0144BC  19D7               	xorwf	_qi_isns_average_index& (0+255),w,b
 45167  0144BE  A4D8               	btfss	status,2,c
 45168  0144C0  D057               	goto	i2l20798
 45169                           
 45170                           ; BSR set to: 0
 45171                           ;adc_postprocessing.c: 86: qi_isns_average_index = 0;
 45172  0144C2  0E00               	movlw	0
 45173  0144C4  6FD7               	movwf	_qi_isns_average_index& (0+255),b
 45174                           
 45175                           ;adc_postprocessing.c: 88: adc_results.qi_isns_adc_result = 0.0;
 45176  0144C6  0E00               	movlw	0
 45177  0144C8  6FF2               	movwf	(_adc_results+20)& (0+255),b
 45178  0144CA  0E00               	movlw	0
 45179  0144CC  6FF3               	movwf	(_adc_results+21)& (0+255),b
 45180  0144CE  0E00               	movlw	0
 45181  0144D0  6FF4               	movwf	(_adc_results+22)& (0+255),b
 45182  0144D2  0E00               	movlw	0
 45183  0144D4  6FF5               	movwf	(_adc_results+23)& (0+255),b
 45184                           
 45185                           ;adc_postprocessing.c: 89: for (uint8_t i = 0; i < 16; i++) {
 45186  0144D6  0E00               	movlw	0
 45187  0144D8  6F7A               	movwf	ADC_PostProcessingHandler@i_3361& (0+255),b
 45188  0144DA                     i2l20790:
 45189                           
 45190                           ; BSR set to: 0
 45191                           ;adc_postprocessing.c: 90: adc_results.qi_isns_adc_result += fabs(qi_isns_average_buffer
      +                          [i]);
 45192  0144DA  C0F2  F052         	movff	_adc_results+20,i2___fladd@b
 45193  0144DE  C0F3  F053         	movff	_adc_results+21,i2___fladd@b+1
 45194  0144E2  C0F4  F054         	movff	_adc_results+22,i2___fladd@b+2
 45195  0144E6  C0F5  F055         	movff	_adc_results+23,i2___fladd@b+3
 45196  0144EA  517A               	movf	ADC_PostProcessingHandler@i_3361& (0+255),w,b
 45197  0144EC  0D04               	mullw	4
 45198  0144EE  0E00               	movlw	low _qi_isns_average_buffer
 45199  0144F0  24F3               	addwf	prodl,w,c
 45200  0144F2  6ED9               	movwf	fsr2l,c
 45201  0144F4  0E04               	movlw	high _qi_isns_average_buffer
 45202  0144F6  20F4               	addwfc	prodh,w,c
 45203  0144F8  6EDA               	movwf	fsr2h,c
 45204  0144FA  CFDE F005          	movff	postinc2,fabs@d
 45205  0144FE  CFDE F006          	movff	postinc2,fabs@d+1
 45206  014502  CFDE F007          	movff	postinc2,fabs@d+2
 45207  014506  CFDE F008          	movff	postinc2,fabs@d+3
 45208  01450A  ECFF  F0DB         	call	_fabs	;wreg free
 45209  01450E  C005  F056         	movff	?_fabs,i2___fladd@a
 45210  014512  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 45211  014516  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 45212  01451A  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 45213  01451E  ECB3  F0B8         	call	i2___fladd	;wreg free
 45214  014522  C052  F0F2         	movff	?i2___fladd,_adc_results+20
 45215  014526  C053  F0F3         	movff	?i2___fladd+1,_adc_results+21
 45216  01452A  C054  F0F4         	movff	?i2___fladd+2,_adc_results+22
 45217  01452E  C055  F0F5         	movff	?i2___fladd+3,_adc_results+23
 45218  014532  0100               	movlb	0	; () banked
 45219  014534  2B7A               	incf	ADC_PostProcessingHandler@i_3361& (0+255),f,b
 45220                           
 45221                           ; BSR set to: 0
 45222  014536  0E0F               	movlw	15
 45223  014538  657A               	cpfsgt	ADC_PostProcessingHandler@i_3361& (0+255),b
 45224  01453A  D7CF               	goto	i2l20790
 45225                           
 45226                           ; BSR set to: 0
 45227                           ;adc_postprocessing.c: 91: };adc_postprocessing.c: 92: adc_results.qi_isns_adc_result /=
      +                           (float) 16;
 45228  01453C  C0F2  F013         	movff	_adc_results+20,i2___fldiv@b
 45229  014540  C0F3  F014         	movff	_adc_results+21,i2___fldiv@b+1
 45230  014544  C0F4  F015         	movff	_adc_results+22,i2___fldiv@b+2
 45231  014548  C0F5  F016         	movff	_adc_results+23,i2___fldiv@b+3
 45232  01454C  0E00               	movlw	0
 45233  01454E  6E17               	movwf	i2___fldiv@a,c
 45234  014550  0E00               	movlw	0
 45235  014552  6E18               	movwf	i2___fldiv@a+1,c
 45236  014554  0E80               	movlw	128
 45237  014556  6E19               	movwf	i2___fldiv@a+2,c
 45238  014558  0E41               	movlw	65
 45239  01455A  6E1A               	movwf	i2___fldiv@a+3,c
 45240  01455C  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45241  014560  C013  F0F2         	movff	?i2___fldiv,_adc_results+20
 45242  014564  C014  F0F3         	movff	?i2___fldiv+1,_adc_results+21
 45243  014568  C015  F0F4         	movff	?i2___fldiv+2,_adc_results+22
 45244  01456C  C016  F0F5         	movff	?i2___fldiv+3,_adc_results+23
 45245  014570                     i2l20798:
 45246                           
 45247                           ;adc_postprocessing.c: 93: };adc_postprocessing.c: 95: next_adc_channel = channel_Temp;
 45248  014570  0E3D               	movlw	61
 45249  014572  D0AC               	goto	L49
 45250  014574                     i2l20800:
 45251                           
 45252                           ; BSR set to: 0
 45253                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 45254  014574  0E00               	movlw	0
 45255  014576  6E30               	movwf	i2___flmul@a,c
 45256  014578  0E00               	movlw	0
 45257  01457A  6E31               	movwf	i2___flmul@a+1,c
 45258  01457C  0EA0               	movlw	160
 45259  01457E  6E32               	movwf	i2___flmul@a+2,c
 45260  014580  0E3F               	movlw	63
 45261  014582  6E33               	movwf	i2___flmul@a+3,c
 45262  014584  0E00               	movlw	0
 45263  014586  6E17               	movwf	i2___fldiv@a,c
 45264  014588  0EC0               	movlw	192
 45265  01458A  6E18               	movwf	i2___fldiv@a+1,c
 45266  01458C  0E7F               	movlw	127
 45267  01458E  6E19               	movwf	i2___fldiv@a+2,c
 45268  014590  0E44               	movlw	68
 45269  014592  6E1A               	movwf	i2___fldiv@a+3,c
 45270  014594  ECD2  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 45271  014598  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 45272  01459C  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 45273  0145A0  6A07               	clrf	i2___xxtofl@val+2,c
 45274  0145A2  6A08               	clrf	i2___xxtofl@val+3,c
 45275  0145A4  0E00               	movlw	0
 45276  0145A6  EC5D  F0CA         	call	i2___xxtofl
 45277  0145AA  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 45278  0145AE  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 45279  0145B2  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 45280  0145B6  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 45281  0145BA  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45282  0145BE  C013  F068         	movff	?i2___fldiv,i2___flsub@a
 45283  0145C2  C014  F069         	movff	?i2___fldiv+1,i2___flsub@a+1
 45284  0145C6  C015  F06A         	movff	?i2___fldiv+2,i2___flsub@a+2
 45285  0145CA  C016  F06B         	movff	?i2___fldiv+3,i2___flsub@a+3
 45286  0145CE  0E00               	movlw	0
 45287  0145D0  0100               	movlb	0	; () banked
 45288  0145D2  6F64               	movwf	i2___flsub@b& (0+255),b
 45289  0145D4  0E00               	movlw	0
 45290  0145D6  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 45291  0145D8  0E80               	movlw	128
 45292  0145DA  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 45293  0145DC  0E3F               	movlw	63
 45294  0145DE  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 45295  0145E0  ECB5  F0D9         	call	i2___flsub	;wreg free
 45296  0145E4  C064  F02C         	movff	?i2___flsub,i2___flmul@b
 45297  0145E8  C065  F02D         	movff	?i2___flsub+1,i2___flmul@b+1
 45298  0145EC  C066  F02E         	movff	?i2___flsub+2,i2___flmul@b+2
 45299  0145F0  C067  F02F         	movff	?i2___flsub+3,i2___flmul@b+3
 45300  0145F4  ECFC  F0B3         	call	i2___flmul	;wreg free
 45301  0145F8  C02C  F06C         	movff	?i2___flmul,_ADC_PostProcessingHandler$6312
 45302  0145FC  C02D  F06D         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6312+1
 45303  014600  C02E  F06E         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6312+2
 45304  014604  C02F  F06F         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6312+3
 45305                           
 45306                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 45307  014608  0EDA               	movlw	218
 45308  01460A  6E17               	movwf	i2___fldiv@a,c
 45309  01460C  0E03               	movlw	3
 45310  01460E  6E18               	movwf	i2___fldiv@a+1,c
 45311  014610  0EAD               	movlw	173
 45312  014612  6E19               	movwf	i2___fldiv@a+2,c
 45313  014614  0E3A               	movlw	58
 45314  014616  6E1A               	movwf	i2___fldiv@a+3,c
 45315  014618  C06C  F068         	movff	_ADC_PostProcessingHandler$6312,i2___flsub@a
 45316  01461C  C06D  F069         	movff	_ADC_PostProcessingHandler$6312+1,i2___flsub@a+1
 45317  014620  C06E  F06A         	movff	_ADC_PostProcessingHandler$6312+2,i2___flsub@a+2
 45318  014624  C06F  F06B         	movff	_ADC_PostProcessingHandler$6312+3,i2___flsub@a+3
 45319  014628  0E39               	movlw	57
 45320  01462A  0100               	movlb	0	; () banked
 45321  01462C  6F64               	movwf	i2___flsub@b& (0+255),b
 45322  01462E  0EB4               	movlw	180
 45323  014630  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 45324  014632  0E28               	movlw	40
 45325  014634  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 45326  014636  0E3F               	movlw	63
 45327  014638  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 45328  01463A  ECB5  F0D9         	call	i2___flsub	;wreg free
 45329  01463E  C064  F013         	movff	?i2___flsub,i2___fldiv@b
 45330  014642  C065  F014         	movff	?i2___flsub+1,i2___fldiv@b+1
 45331  014646  C066  F015         	movff	?i2___flsub+2,i2___fldiv@b+2
 45332  01464A  C067  F016         	movff	?i2___flsub+3,i2___fldiv@b+3
 45333  01464E  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45334  014652  C013  F070         	movff	?i2___fldiv,_ADC_PostProcessingHandler$6313
 45335  014656  C014  F071         	movff	?i2___fldiv+1,_ADC_PostProcessingHandler$6313+1
 45336  01465A  C015  F072         	movff	?i2___fldiv+2,_ADC_PostProcessingHandler$6313+2
 45337  01465E  C016  F073         	movff	?i2___fldiv+3,_ADC_PostProcessingHandler$6313+3
 45338                           
 45339                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 45340  014662  0E00               	movlw	0
 45341  014664  6E56               	movwf	i2___fladd@a,c
 45342  014666  0E00               	movlw	0
 45343  014668  6E57               	movwf	i2___fladd@a+1,c
 45344  01466A  0E20               	movlw	32
 45345  01466C  6E58               	movwf	i2___fladd@a+2,c
 45346  01466E  0EC2               	movlw	194
 45347  014670  6E59               	movwf	i2___fladd@a+3,c
 45348  014672  C070  F052         	movff	_ADC_PostProcessingHandler$6313,i2___fladd@b
 45349  014676  C071  F053         	movff	_ADC_PostProcessingHandler$6313+1,i2___fladd@b+1
 45350  01467A  C072  F054         	movff	_ADC_PostProcessingHandler$6313+2,i2___fladd@b+2
 45351  01467E  C073  F055         	movff	_ADC_PostProcessingHandler$6313+3,i2___fladd@b+3
 45352  014682  ECB3  F0B8         	call	i2___fladd	;wreg free
 45353  014686  C052  F074         	movff	?i2___fladd,_ADC_PostProcessingHandler$6314
 45354  01468A  C053  F075         	movff	?i2___fladd+1,_ADC_PostProcessingHandler$6314+1
 45355  01468E  C054  F076         	movff	?i2___fladd+2,_ADC_PostProcessingHandler$6314+2
 45356  014692  C055  F077         	movff	?i2___fladd+3,_ADC_PostProcessingHandler$6314+3
 45357                           
 45358                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 45359  014696  C074  F052         	movff	_ADC_PostProcessingHandler$6314,i2___fladd@b
 45360  01469A  C075  F053         	movff	_ADC_PostProcessingHandler$6314+1,i2___fladd@b+1
 45361  01469E  C076  F054         	movff	_ADC_PostProcessingHandler$6314+2,i2___fladd@b+2
 45362  0146A2  C077  F055         	movff	_ADC_PostProcessingHandler$6314+3,i2___fladd@b+3
 45363  0146A6  0EB8               	movlw	184
 45364  0146A8  6E56               	movwf	i2___fladd@a,c
 45365  0146AA  0E0E               	movlw	14
 45366  0146AC  6E57               	movwf	i2___fladd@a+1,c
 45367  0146AE  0EBC               	movlw	188
 45368  0146B0  6E58               	movwf	i2___fladd@a+2,c
 45369  0146B2  0E43               	movlw	67
 45370  0146B4  6E59               	movwf	i2___fladd@a+3,c
 45371  0146B6  ECB3  F0B8         	call	i2___fladd	;wreg free
 45372  0146BA  C052  F0F6         	movff	?i2___fladd,_adc_results+24
 45373  0146BE  C053  F0F7         	movff	?i2___fladd+1,_adc_results+25
 45374  0146C2  C054  F0F8         	movff	?i2___fladd+2,_adc_results+26
 45375  0146C6  C055  F0F9         	movff	?i2___fladd+3,_adc_results+27
 45376                           
 45377                           ;adc_postprocessing.c: 101: next_adc_channel = channel_VSS;
 45378  0146CA  0E3C               	movlw	60
 45379  0146CC                     L49:
 45380  0146CC  0100               	movlb	0	; () banked
 45381  0146CE  6FFD               	movwf	_next_adc_channel& (0+255),b
 45382                           
 45383                           ;adc_postprocessing.c: 102: break;
 45384  0146D0  D01C               	goto	i2l20816
 45385  0146D2                     i2l20810:
 45386                           
 45387                           ; BSR set to: 0
 45388                           ;adc_postprocessing.c: 107: error_handler.ADC_general_error_flag = 1;
 45389  0146D2  0E01               	movlw	1
 45390  0146D4  6FC6               	movwf	(_error_handler+1)& (0+255),b
 45391                           
 45392                           ;adc_postprocessing.c: 108: break;
 45393  0146D6  D019               	goto	i2l20816
 45394  0146D8                     i2l20814:
 45395  0146D8  0100               	movlb	0	; () banked
 45396  0146DA  5178               	movf	ADC_PostProcessingHandler@current_adc_channel& (0+255),w,b
 45397                           
 45398                           ; Switch size 1, requested type "simple"
 45399                           ; Number of cases is 7, Range of values is 0 to 63
 45400                           ; switch strategies available:
 45401                           ; Name         Instructions Cycles
 45402                           ; simple_byte           22    12 (average)
 45403                           ;	Chosen strategy is simple_byte
 45404  0146DC  0A00               	xorlw	0	; case 0
 45405  0146DE  B4D8               	btfsc	status,2,c
 45406  0146E0  D502               	goto	i2l20748
 45407  0146E2  0A01               	xorlw	1	; case 1
 45408  0146E4  B4D8               	btfsc	status,2,c
 45409  0146E6  D57E               	goto	i2l20752
 45410  0146E8  0A05               	xorlw	5	; case 4
 45411  0146EA  B4D8               	btfsc	status,2,c
 45412  0146EC  D48F               	goto	i2l20744
 45413  0146EE  0A01               	xorlw	1	; case 5
 45414  0146F0  B4D8               	btfsc	status,2,c
 45415  0146F2  D65C               	goto	i2l20776
 45416  0146F4  0A39               	xorlw	57	; case 60
 45417  0146F6  B4D8               	btfsc	status,2,c
 45418  0146F8  EF61  F09F         	goto	i2l20730
 45419  0146FC  0A01               	xorlw	1	; case 61
 45420  0146FE  B4D8               	btfsc	status,2,c
 45421  014700  D739               	goto	i2l20800
 45422  014702  0A02               	xorlw	2	; case 63
 45423  014704  B4D8               	btfsc	status,2,c
 45424  014706  D404               	goto	i2l20734
 45425  014708  D7E4               	goto	i2l20810
 45426  01470A                     i2l20816:
 45427                           
 45428                           ; BSR set to: 0
 45429                           ;adc_postprocessing.c: 112: if (ADCC_GetCurrentCountofConversions() != 255) {
 45430  01470A  ECD2  F0E0         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 45431  01470E  0AFF               	xorlw	255
 45432  014710  B4D8               	btfsc	status,2,c
 45433  014712  D003               	goto	i2l20820
 45434                           
 45435                           ;adc_postprocessing.c: 113: error_handler.ADC_general_error_flag = 1;
 45436  014714  0E01               	movlw	1
 45437  014716  0100               	movlb	0	; () banked
 45438  014718  6FC6               	movwf	(_error_handler+1)& (0+255),b
 45439  01471A                     i2l20820:
 45440                           
 45441                           ;adc_postprocessing.c: 114: };adc_postprocessing.c: 116: if (ADCC_HasAccumulatorOverflow
      +                          ed()) {
 45442  01471A  EC8F  F0E0         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 45443  01471E  0900               	iorlw	0
 45444  014720  B4D8               	btfsc	status,2,c
 45445  014722  D003               	goto	i2l20824
 45446                           
 45447                           ;adc_postprocessing.c: 117: error_handler.ADC_general_error_flag = 1;
 45448  014724  0E01               	movlw	1
 45449  014726  0100               	movlb	0	; () banked
 45450  014728  6FC6               	movwf	(_error_handler+1)& (0+255),b
 45451  01472A                     i2l20824:
 45452                           
 45453                           ;adc_postprocessing.c: 118: };adc_postprocessing.c: 121: adc_calculations.input_power = 
      +                          adc_results.pos12_adc_result * adc_results.pos12_isns_adc_result;
 45454  01472A  C0EA  F02C         	movff	_adc_results+12,i2___flmul@b
 45455  01472E  C0EB  F02D         	movff	_adc_results+13,i2___flmul@b+1
 45456  014732  C0EC  F02E         	movff	_adc_results+14,i2___flmul@b+2
 45457  014736  C0ED  F02F         	movff	_adc_results+15,i2___flmul@b+3
 45458  01473A  C0EE  F030         	movff	_adc_results+16,i2___flmul@a
 45459  01473E  C0EF  F031         	movff	_adc_results+17,i2___flmul@a+1
 45460  014742  C0F0  F032         	movff	_adc_results+18,i2___flmul@a+2
 45461  014746  C0F1  F033         	movff	_adc_results+19,i2___flmul@a+3
 45462  01474A  ECFC  F0B3         	call	i2___flmul	;wreg free
 45463  01474E  C02C  F0B9         	movff	?i2___flmul,_adc_calculations
 45464  014752  C02D  F0BA         	movff	?i2___flmul+1,_adc_calculations+1
 45465  014756  C02E  F0BB         	movff	?i2___flmul+2,_adc_calculations+2
 45466  01475A  C02F  F0BC         	movff	?i2___flmul+3,_adc_calculations+3
 45467                           
 45468                           ;adc_postprocessing.c: 122: adc_calculations.output_power = adc_results.pos5_adc_result 
      +                          * adc_results.qi_isns_adc_result;
 45469  01475E  C0E6  F02C         	movff	_adc_results+8,i2___flmul@b
 45470  014762  C0E7  F02D         	movff	_adc_results+9,i2___flmul@b+1
 45471  014766  C0E8  F02E         	movff	_adc_results+10,i2___flmul@b+2
 45472  01476A  C0E9  F02F         	movff	_adc_results+11,i2___flmul@b+3
 45473  01476E  C0F2  F030         	movff	_adc_results+20,i2___flmul@a
 45474  014772  C0F3  F031         	movff	_adc_results+21,i2___flmul@a+1
 45475  014776  C0F4  F032         	movff	_adc_results+22,i2___flmul@a+2
 45476  01477A  C0F5  F033         	movff	_adc_results+23,i2___flmul@a+3
 45477  01477E  ECFC  F0B3         	call	i2___flmul	;wreg free
 45478  014782  C02C  F0BD         	movff	?i2___flmul,_adc_calculations+4
 45479  014786  C02D  F0BE         	movff	?i2___flmul+1,_adc_calculations+5
 45480  01478A  C02E  F0BF         	movff	?i2___flmul+2,_adc_calculations+6
 45481  01478E  C02F  F0C0         	movff	?i2___flmul+3,_adc_calculations+7
 45482                           
 45483                           ;adc_postprocessing.c: 123: adc_calculations.efficiency = (adc_calculations.output_power
      +                           / adc_calculations.input_power) * 100.0;
 45484  014792  C0B9  F017         	movff	_adc_calculations,i2___fldiv@a
 45485  014796  C0BA  F018         	movff	_adc_calculations+1,i2___fldiv@a+1
 45486  01479A  C0BB  F019         	movff	_adc_calculations+2,i2___fldiv@a+2
 45487  01479E  C0BC  F01A         	movff	_adc_calculations+3,i2___fldiv@a+3
 45488  0147A2  C0BD  F013         	movff	_adc_calculations+4,i2___fldiv@b
 45489  0147A6  C0BE  F014         	movff	_adc_calculations+5,i2___fldiv@b+1
 45490  0147AA  C0BF  F015         	movff	_adc_calculations+6,i2___fldiv@b+2
 45491  0147AE  C0C0  F016         	movff	_adc_calculations+7,i2___fldiv@b+3
 45492  0147B2  ECCA  F0C0         	call	i2___fldiv	;wreg free
 45493  0147B6  C013  F02C         	movff	?i2___fldiv,i2___flmul@b
 45494  0147BA  C014  F02D         	movff	?i2___fldiv+1,i2___flmul@b+1
 45495  0147BE  C015  F02E         	movff	?i2___fldiv+2,i2___flmul@b+2
 45496  0147C2  C016  F02F         	movff	?i2___fldiv+3,i2___flmul@b+3
 45497  0147C6  0E00               	movlw	0
 45498  0147C8  6E30               	movwf	i2___flmul@a,c
 45499  0147CA  0E00               	movlw	0
 45500  0147CC  6E31               	movwf	i2___flmul@a+1,c
 45501  0147CE  0EC8               	movlw	200
 45502  0147D0  6E32               	movwf	i2___flmul@a+2,c
 45503  0147D2  0E42               	movlw	66
 45504  0147D4  6E33               	movwf	i2___flmul@a+3,c
 45505  0147D6  ECFC  F0B3         	call	i2___flmul	;wreg free
 45506  0147DA  C02C  F0C1         	movff	?i2___flmul,_adc_calculations+8
 45507  0147DE  C02D  F0C2         	movff	?i2___flmul+1,_adc_calculations+9
 45508  0147E2  C02E  F0C3         	movff	?i2___flmul+2,_adc_calculations+10
 45509  0147E6  C02F  F0C4         	movff	?i2___flmul+3,_adc_calculations+11
 45510                           
 45511                           ;adc_postprocessing.c: 126: if (adc_calculations.efficiency > 99.0) adc_calculations.eff
      +                          iciency = 99.0;
 45512  0147EA  0E00               	movlw	0
 45513  0147EC  6E01               	movwf	i2___flge@ff1,c
 45514  0147EE  0E00               	movlw	0
 45515  0147F0  6E02               	movwf	i2___flge@ff1+1,c
 45516  0147F2  0EC6               	movlw	198
 45517  0147F4  6E03               	movwf	i2___flge@ff1+2,c
 45518  0147F6  0E42               	movlw	66
 45519  0147F8  6E04               	movwf	i2___flge@ff1+3,c
 45520  0147FA  C0C1  F005         	movff	_adc_calculations+8,i2___flge@ff2
 45521  0147FE  C0C2  F006         	movff	_adc_calculations+9,i2___flge@ff2+1
 45522  014802  C0C3  F007         	movff	_adc_calculations+10,i2___flge@ff2+2
 45523  014806  C0C4  F008         	movff	_adc_calculations+11,i2___flge@ff2+3
 45524  01480A  ECDD  F0CE         	call	i2___flge	;wreg free
 45525  01480E  B0D8               	btfsc	status,0,c
 45526  014810  D009               	goto	i2l20834
 45527  014812  0E00               	movlw	0
 45528  014814  0100               	movlb	0	; () banked
 45529  014816  6FC1               	movwf	(_adc_calculations+8)& (0+255),b
 45530  014818  0E00               	movlw	0
 45531  01481A  6FC2               	movwf	(_adc_calculations+9)& (0+255),b
 45532  01481C  0EC6               	movlw	198
 45533  01481E  6FC3               	movwf	(_adc_calculations+10)& (0+255),b
 45534  014820  0E42               	movlw	66
 45535  014822  6FC4               	movwf	(_adc_calculations+11)& (0+255),b
 45536  014824                     i2l20834:
 45537                           
 45538                           ;adc_postprocessing.c: 129: TMR2_StartTimer();
 45539  014824  ECBB  F0E0         	call	_TMR2_StartTimer	;wreg free
 45540  014828  0012               	return		;funcret
 45541  01482A                     __end_of_ADC_PostProcessingHandler:
 45542                           	opt callstack 0
 45543                           
 45544 ;; *************** function i2___xxtofl *****************
 45545 ;; Defined at:
 45546 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 45547 ;; Parameters:    Size  Location     Type
 45548 ;;  sign            1    wreg     unsigned char 
 45549 ;;  val             4    4[COMRAM] long 
 45550 ;; Auto vars:     Size  Location     Type
 45551 ;;  sign            1   12[COMRAM] unsigned char 
 45552 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 45553 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 45554 ;; Return value:  Size  Location     Type
 45555 ;;                  4    4[COMRAM] unsigned char 
 45556 ;; Registers used:
 45557 ;;		wreg, status,2, status,0
 45558 ;; Tracked objects:
 45559 ;;		On entry : 0/0
 45560 ;;		On exit  : 0/0
 45561 ;;		Unchanged: 0/0
 45562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45564 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45566 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45567 ;;Total ram usage:       14 bytes
 45568 ;; Hardware stack levels used:    1
 45569 ;; This function calls:
 45570 ;;		Nothing
 45571 ;; This function is called by:
 45572 ;;		_ADC_PostProcessingHandler
 45573 ;;		i2__doprnt
 45574 ;; This function uses a non-reentrant model
 45575 ;;
 45576                           
 45577                           	psect	text198
 45578  0194BA                     __ptext198:
 45579                           	opt callstack 0
 45580  0194BA                     i2___xxtofl:
 45581                           	opt callstack 13
 45582                           
 45583                           ;incstack = 0
 45584                           ;i2___xxtofl@sign stored from wreg
 45585  0194BA  6E0D               	movwf	i2___xxtofl@sign,c
 45586  0194BC  500D               	movf	i2___xxtofl@sign,w,c
 45587  0194BE  A4D8               	btfss	status,2,c
 45588  0194C0  AE08               	btfss	i2___xxtofl@val+3,7,c
 45589  0194C2  D01A               	goto	i2l3256
 45590  0194C4  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 45591  0194C8  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 45592  0194CC  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 45593  0194D0  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 45594  0194D4  1E09               	comf	??i2___xxtofl,f,c
 45595  0194D6  1E0A               	comf	??i2___xxtofl+1,f,c
 45596  0194D8  1E0B               	comf	??i2___xxtofl+2,f,c
 45597  0194DA  1E0C               	comf	??i2___xxtofl+3,f,c
 45598  0194DC  2A09               	incf	??i2___xxtofl,f,c
 45599  0194DE  0E00               	movlw	0
 45600  0194E0  220A               	addwfc	??i2___xxtofl+1,f,c
 45601  0194E2  220B               	addwfc	??i2___xxtofl+2,f,c
 45602  0194E4  220C               	addwfc	??i2___xxtofl+3,f,c
 45603  0194E6  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 45604  0194EA  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 45605  0194EE  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 45606  0194F2  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 45607  0194F6  D008               	goto	i2l19400
 45608  0194F8                     i2l3256:
 45609  0194F8  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 45610  0194FC  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 45611  019500  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 45612  019504  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 45613  019508                     i2l19400:
 45614  019508  5005               	movf	i2___xxtofl@val,w,c
 45615  01950A  1006               	iorwf	i2___xxtofl@val+1,w,c
 45616  01950C  1007               	iorwf	i2___xxtofl@val+2,w,c
 45617  01950E  1008               	iorwf	i2___xxtofl@val+3,w,c
 45618  019510  A4D8               	btfss	status,2,c
 45619  019512  D009               	goto	i2l19406
 45620  019514  0E00               	movlw	0
 45621  019516  6E05               	movwf	?i2___xxtofl,c
 45622  019518  0E00               	movlw	0
 45623  01951A  6E06               	movwf	?i2___xxtofl+1,c
 45624  01951C  0E00               	movlw	0
 45625  01951E  6E07               	movwf	?i2___xxtofl+2,c
 45626  019520  0E00               	movlw	0
 45627  019522  6E08               	movwf	?i2___xxtofl+3,c
 45628  019524  0012               	return	
 45629  019526                     i2l19406:
 45630  019526  0E96               	movlw	150
 45631  019528  6E0E               	movwf	i2___xxtofl@exp,c
 45632  01952A  D006               	goto	i2l19410
 45633  01952C                     i2l19408:
 45634  01952C  2A0E               	incf	i2___xxtofl@exp,f,c
 45635  01952E  90D8               	bcf	status,0,c
 45636  019530  3212               	rrcf	i2___xxtofl@arg+3,f,c
 45637  019532  3211               	rrcf	i2___xxtofl@arg+2,f,c
 45638  019534  3210               	rrcf	i2___xxtofl@arg+1,f,c
 45639  019536  320F               	rrcf	i2___xxtofl@arg,f,c
 45640  019538                     i2l19410:
 45641  019538  0E00               	movlw	0
 45642  01953A  140F               	andwf	i2___xxtofl@arg,w,c
 45643  01953C  6E09               	movwf	??i2___xxtofl& (0+255),c
 45644  01953E  0E00               	movlw	0
 45645  019540  1410               	andwf	i2___xxtofl@arg+1,w,c
 45646  019542  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 45647  019544  0E00               	movlw	0
 45648  019546  1411               	andwf	i2___xxtofl@arg+2,w,c
 45649  019548  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 45650  01954A  0EFE               	movlw	254
 45651  01954C  1412               	andwf	i2___xxtofl@arg+3,w,c
 45652  01954E  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 45653  019550  5009               	movf	??i2___xxtofl,w,c
 45654  019552  100A               	iorwf	??i2___xxtofl+1,w,c
 45655  019554  100B               	iorwf	??i2___xxtofl+2,w,c
 45656  019556  100C               	iorwf	??i2___xxtofl+3,w,c
 45657  019558  B4D8               	btfsc	status,2,c
 45658  01955A  D00D               	goto	i2l3263
 45659  01955C  D7E7               	goto	i2l19408
 45660  01955E                     i2l19412:
 45661  01955E  2A0E               	incf	i2___xxtofl@exp,f,c
 45662  019560  0E01               	movlw	1
 45663  019562  260F               	addwf	i2___xxtofl@arg,f,c
 45664  019564  0E00               	movlw	0
 45665  019566  2210               	addwfc	i2___xxtofl@arg+1,f,c
 45666  019568  2211               	addwfc	i2___xxtofl@arg+2,f,c
 45667  01956A  2212               	addwfc	i2___xxtofl@arg+3,f,c
 45668  01956C  90D8               	bcf	status,0,c
 45669  01956E  3212               	rrcf	i2___xxtofl@arg+3,f,c
 45670  019570  3211               	rrcf	i2___xxtofl@arg+2,f,c
 45671  019572  3210               	rrcf	i2___xxtofl@arg+1,f,c
 45672  019574  320F               	rrcf	i2___xxtofl@arg,f,c
 45673  019576                     i2l3263:
 45674  019576  0E00               	movlw	0
 45675  019578  140F               	andwf	i2___xxtofl@arg,w,c
 45676  01957A  6E09               	movwf	??i2___xxtofl& (0+255),c
 45677  01957C  0E00               	movlw	0
 45678  01957E  1410               	andwf	i2___xxtofl@arg+1,w,c
 45679  019580  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 45680  019582  0E00               	movlw	0
 45681  019584  1411               	andwf	i2___xxtofl@arg+2,w,c
 45682  019586  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 45683  019588  0EFF               	movlw	255
 45684  01958A  1412               	andwf	i2___xxtofl@arg+3,w,c
 45685  01958C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 45686  01958E  5009               	movf	??i2___xxtofl,w,c
 45687  019590  100A               	iorwf	??i2___xxtofl+1,w,c
 45688  019592  100B               	iorwf	??i2___xxtofl+2,w,c
 45689  019594  100C               	iorwf	??i2___xxtofl+3,w,c
 45690  019596  B4D8               	btfsc	status,2,c
 45691  019598  D007               	goto	i2l19420
 45692  01959A  D7E1               	goto	i2l19412
 45693  01959C                     i2l19418:
 45694  01959C  060E               	decf	i2___xxtofl@exp,f,c
 45695  01959E  90D8               	bcf	status,0,c
 45696  0195A0  360F               	rlcf	i2___xxtofl@arg,f,c
 45697  0195A2  3610               	rlcf	i2___xxtofl@arg+1,f,c
 45698  0195A4  3611               	rlcf	i2___xxtofl@arg+2,f,c
 45699  0195A6  3612               	rlcf	i2___xxtofl@arg+3,f,c
 45700  0195A8                     i2l19420:
 45701  0195A8  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 45702  0195AA  D003               	goto	i2u2475_40
 45703  0195AC  0E02               	movlw	2
 45704  0195AE  600E               	cpfslt	i2___xxtofl@exp,c
 45705  0195B0  D7F5               	goto	i2l19418
 45706  0195B2                     i2u2475_40:
 45707  0195B2  A00E               	btfss	i2___xxtofl@exp,0,c
 45708  0195B4  9E11               	bcf	i2___xxtofl@arg+2,7,c
 45709  0195B6  90D8               	bcf	status,0,c
 45710  0195B8  320E               	rrcf	i2___xxtofl@exp,f,c
 45711  0195BA  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 45712  0195BE  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 45713  0195C0  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 45714  0195C2  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 45715  0195C4  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 45716  0195C8  6A0B               	clrf	??i2___xxtofl+2,c
 45717  0195CA  6A0A               	clrf	??i2___xxtofl+1,c
 45718  0195CC  6A09               	clrf	??i2___xxtofl,c
 45719  0195CE  5009               	movf	??i2___xxtofl,w,c
 45720  0195D0  120F               	iorwf	i2___xxtofl@arg,f,c
 45721  0195D2  500A               	movf	??i2___xxtofl+1,w,c
 45722  0195D4  1210               	iorwf	i2___xxtofl@arg+1,f,c
 45723  0195D6  500B               	movf	??i2___xxtofl+2,w,c
 45724  0195D8  1211               	iorwf	i2___xxtofl@arg+2,f,c
 45725  0195DA  500C               	movf	??i2___xxtofl+3,w,c
 45726  0195DC  1212               	iorwf	i2___xxtofl@arg+3,f,c
 45727  0195DE  500D               	movf	i2___xxtofl@sign,w,c
 45728  0195E0  A4D8               	btfss	status,2,c
 45729  0195E2  AE08               	btfss	i2___xxtofl@val+3,7,c
 45730  0195E4  D001               	goto	i2l19436
 45731  0195E6  8E12               	bsf	i2___xxtofl@arg+3,7,c
 45732  0195E8                     i2l19436:
 45733  0195E8  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 45734  0195EC  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 45735  0195F0  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 45736  0195F4  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 45737  0195F8  0012               	return		;funcret
 45738  0195FA                     __end_ofi2___xxtofl:
 45739                           	opt callstack 0
 45740                           
 45741 ;; *************** function i2___flsub *****************
 45742 ;; Defined at:
 45743 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 45744 ;; Parameters:    Size  Location     Type
 45745 ;;  b               4    4[BANK0 ] unsigned char 
 45746 ;;  a               4    8[BANK0 ] unsigned char 
 45747 ;; Auto vars:     Size  Location     Type
 45748 ;;		None
 45749 ;; Return value:  Size  Location     Type
 45750 ;;                  4    4[BANK0 ] unsigned char 
 45751 ;; Registers used:
 45752 ;;		wreg, status,2, status,0, cstack
 45753 ;; Tracked objects:
 45754 ;;		On entry : 0/0
 45755 ;;		On exit  : 0/0
 45756 ;;		Unchanged: 0/0
 45757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45761 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45762 ;;Total ram usage:        8 bytes
 45763 ;; Hardware stack levels used:    1
 45764 ;; Hardware stack levels required when called:    1
 45765 ;; This function calls:
 45766 ;;		i2___fladd
 45767 ;; This function is called by:
 45768 ;;		_ADC_PostProcessingHandler
 45769 ;;		i2__doprnt
 45770 ;; This function uses a non-reentrant model
 45771 ;;
 45772                           
 45773                           	psect	text199
 45774  01B36A                     __ptext199:
 45775                           	opt callstack 0
 45776  01B36A                     i2___flsub:
 45777                           	opt callstack 12
 45778                           
 45779                           ;incstack = 0
 45780  01B36A  0E00               	movlw	0
 45781  01B36C  0100               	movlb	0	; () banked
 45782  01B36E  1B68               	xorwf	i2___flsub@a& (0+255),f,b
 45783  01B370  0E00               	movlw	0
 45784  01B372  1B69               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 45785  01B374  0E00               	movlw	0
 45786  01B376  1B6A               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 45787  01B378  0E80               	movlw	128
 45788  01B37A  1B6B               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 45789                           
 45790                           ; BSR set to: 0
 45791  01B37C  C064  F052         	movff	i2___flsub@b,i2___fladd@b
 45792  01B380  C065  F053         	movff	i2___flsub@b+1,i2___fladd@b+1
 45793  01B384  C066  F054         	movff	i2___flsub@b+2,i2___fladd@b+2
 45794  01B388  C067  F055         	movff	i2___flsub@b+3,i2___fladd@b+3
 45795  01B38C  C068  F056         	movff	i2___flsub@a,i2___fladd@a
 45796  01B390  C069  F057         	movff	i2___flsub@a+1,i2___fladd@a+1
 45797  01B394  C06A  F058         	movff	i2___flsub@a+2,i2___fladd@a+2
 45798  01B398  C06B  F059         	movff	i2___flsub@a+3,i2___fladd@a+3
 45799  01B39C  ECB3  F0B8         	call	i2___fladd	;wreg free
 45800  01B3A0  C052  F064         	movff	?i2___fladd,?i2___flsub
 45801  01B3A4  C053  F065         	movff	?i2___fladd+1,?i2___flsub+1
 45802  01B3A8  C054  F066         	movff	?i2___fladd+2,?i2___flsub+2
 45803  01B3AC  C055  F067         	movff	?i2___fladd+3,?i2___flsub+3
 45804  01B3B0  0012               	return		;funcret
 45805  01B3B2                     __end_ofi2___flsub:
 45806                           	opt callstack 0
 45807                           
 45808 ;; *************** function i2___fladd *****************
 45809 ;; Defined at:
 45810 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 45811 ;; Parameters:    Size  Location     Type
 45812 ;;  b               4   81[COMRAM] unsigned char 
 45813 ;;  a               4   85[COMRAM] unsigned char 
 45814 ;; Auto vars:     Size  Location     Type
 45815 ;;  __fladd         1    3[BANK0 ] unsigned char 
 45816 ;;  __fladd         1    2[BANK0 ] unsigned char 
 45817 ;;  __fladd         1    1[BANK0 ] unsigned char 
 45818 ;;  __fladd         1    0[BANK0 ] unsigned char 
 45819 ;; Return value:  Size  Location     Type
 45820 ;;                  4   81[COMRAM] unsigned char 
 45821 ;; Registers used:
 45822 ;;		wreg, status,2, status,0
 45823 ;; Tracked objects:
 45824 ;;		On entry : 0/0
 45825 ;;		On exit  : 0/0
 45826 ;;		Unchanged: 0/0
 45827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45828 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45829 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45831 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45832 ;;Total ram usage:       16 bytes
 45833 ;; Hardware stack levels used:    1
 45834 ;; This function calls:
 45835 ;;		Nothing
 45836 ;; This function is called by:
 45837 ;;		_ADC_PostProcessingHandler
 45838 ;;		i2__doprnt
 45839 ;;		i2___flsub
 45840 ;; This function uses a non-reentrant model
 45841 ;;
 45842                           
 45843                           	psect	text200
 45844  017166                     __ptext200:
 45845                           	opt callstack 0
 45846  017166                     i2___fladd:
 45847                           	opt callstack 12
 45848                           
 45849                           ;incstack = 0
 45850  017166  5055               	movf	i2___fladd@b+3,w,c
 45851  017168  0B80               	andlw	128
 45852  01716A  0100               	movlb	0	; () banked
 45853  01716C  6F60               	movwf	i2___fladd@signs& (0+255),b
 45854  01716E  5055               	movf	i2___fladd@b+3,w,c
 45855  017170  2455               	addwf	i2___fladd@b+3,w,c
 45856  017172  6F62               	movwf	i2___fladd@bexp& (0+255),b
 45857                           
 45858                           ; BSR set to: 0
 45859  017174  BE54               	btfsc	i2___fladd@b+2,7,c
 45860                           
 45861                           ; BSR set to: 0
 45862  017176  8162               	bsf	i2___fladd@bexp& (0+255),0,b
 45863                           
 45864                           ; BSR set to: 0
 45865  017178  5162               	movf	i2___fladd@bexp& (0+255),w,b
 45866  01717A  B4D8               	btfsc	status,2,c
 45867  01717C  D00D               	goto	i2l18370
 45868                           
 45869                           ; BSR set to: 0
 45870  01717E  2962               	incf	i2___fladd@bexp& (0+255),w,b
 45871  017180  A4D8               	btfss	status,2,c
 45872  017182  D008               	goto	i2l18366
 45873                           
 45874                           ; BSR set to: 0
 45875  017184  0E00               	movlw	0
 45876  017186  6E52               	movwf	i2___fladd@b,c
 45877  017188  0E00               	movlw	0
 45878  01718A  6E53               	movwf	i2___fladd@b+1,c
 45879  01718C  0E00               	movlw	0
 45880  01718E  6E54               	movwf	i2___fladd@b+2,c
 45881  017190  0E00               	movlw	0
 45882  017192  6E55               	movwf	i2___fladd@b+3,c
 45883  017194                     i2l18366:
 45884                           
 45885                           ; BSR set to: 0
 45886  017194  8E54               	bsf	i2___fladd@b+2,7,c
 45887  017196  D006               	goto	L50
 45888  017198                     i2l18370:
 45889                           
 45890                           ; BSR set to: 0
 45891  017198  0E00               	movlw	0
 45892  01719A  6E52               	movwf	i2___fladd@b,c
 45893  01719C  0E00               	movlw	0
 45894  01719E  6E53               	movwf	i2___fladd@b+1,c
 45895  0171A0  0E00               	movlw	0
 45896  0171A2  6E54               	movwf	i2___fladd@b+2,c
 45897  0171A4                     L50:
 45898  0171A4  0E00               	movlw	0
 45899  0171A6  6E55               	movwf	i2___fladd@b+3,c
 45900                           
 45901                           ; BSR set to: 0
 45902  0171A8  5059               	movf	i2___fladd@a+3,w,c
 45903  0171AA  0B80               	andlw	128
 45904  0171AC  6F61               	movwf	i2___fladd@aexp& (0+255),b
 45905                           
 45906                           ; BSR set to: 0
 45907  0171AE  5160               	movf	i2___fladd@signs& (0+255),w,b
 45908  0171B0  1961               	xorwf	i2___fladd@aexp& (0+255),w,b
 45909  0171B2  A4D8               	btfss	status,2,c
 45910                           
 45911                           ; BSR set to: 0
 45912  0171B4  8D60               	bsf	i2___fladd@signs& (0+255),6,b
 45913                           
 45914                           ; BSR set to: 0
 45915  0171B6  5059               	movf	i2___fladd@a+3,w,c
 45916  0171B8  2459               	addwf	i2___fladd@a+3,w,c
 45917  0171BA  6F61               	movwf	i2___fladd@aexp& (0+255),b
 45918                           
 45919                           ; BSR set to: 0
 45920  0171BC  BE58               	btfsc	i2___fladd@a+2,7,c
 45921                           
 45922                           ; BSR set to: 0
 45923  0171BE  8161               	bsf	i2___fladd@aexp& (0+255),0,b
 45924                           
 45925                           ; BSR set to: 0
 45926  0171C0  5161               	movf	i2___fladd@aexp& (0+255),w,b
 45927  0171C2  B4D8               	btfsc	status,2,c
 45928  0171C4  D00D               	goto	i2l18394
 45929                           
 45930                           ; BSR set to: 0
 45931  0171C6  2961               	incf	i2___fladd@aexp& (0+255),w,b
 45932  0171C8  A4D8               	btfss	status,2,c
 45933  0171CA  D008               	goto	i2l18390
 45934                           
 45935                           ; BSR set to: 0
 45936  0171CC  0E00               	movlw	0
 45937  0171CE  6E56               	movwf	i2___fladd@a,c
 45938  0171D0  0E00               	movlw	0
 45939  0171D2  6E57               	movwf	i2___fladd@a+1,c
 45940  0171D4  0E00               	movlw	0
 45941  0171D6  6E58               	movwf	i2___fladd@a+2,c
 45942  0171D8  0E00               	movlw	0
 45943  0171DA  6E59               	movwf	i2___fladd@a+3,c
 45944  0171DC                     i2l18390:
 45945                           
 45946                           ; BSR set to: 0
 45947  0171DC  8E58               	bsf	i2___fladd@a+2,7,c
 45948  0171DE  D006               	goto	L51
 45949  0171E0                     i2l18394:
 45950                           
 45951                           ; BSR set to: 0
 45952  0171E0  0E00               	movlw	0
 45953  0171E2  6E56               	movwf	i2___fladd@a,c
 45954  0171E4  0E00               	movlw	0
 45955  0171E6  6E57               	movwf	i2___fladd@a+1,c
 45956  0171E8  0E00               	movlw	0
 45957  0171EA  6E58               	movwf	i2___fladd@a+2,c
 45958  0171EC                     L51:
 45959  0171EC  0E00               	movlw	0
 45960  0171EE  6E59               	movwf	i2___fladd@a+3,c
 45961                           
 45962                           ; BSR set to: 0
 45963  0171F0  5162               	movf	i2___fladd@bexp& (0+255),w,b
 45964  0171F2  5D61               	subwf	i2___fladd@aexp& (0+255),w,b
 45965  0171F4  B0D8               	btfsc	status,0,c
 45966  0171F6  D022               	goto	i2l18432
 45967                           
 45968                           ; BSR set to: 0
 45969  0171F8  AD60               	btfss	i2___fladd@signs& (0+255),6,b
 45970  0171FA  D002               	goto	i2l18402
 45971                           
 45972                           ; BSR set to: 0
 45973  0171FC  0E80               	movlw	128
 45974  0171FE  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 45975  017200                     i2l18402:
 45976                           
 45977                           ; BSR set to: 0
 45978  017200  C062  F063         	movff	i2___fladd@bexp,i2___fladd@grs
 45979                           
 45980                           ; BSR set to: 0
 45981  017204  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 45982                           
 45983                           ; BSR set to: 0
 45984  017208  C063  F061         	movff	i2___fladd@grs,i2___fladd@aexp
 45985                           
 45986                           ; BSR set to: 0
 45987  01720C  C052  F063         	movff	i2___fladd@b,i2___fladd@grs
 45988                           
 45989                           ; BSR set to: 0
 45990  017210  C056  F052         	movff	i2___fladd@a,i2___fladd@b
 45991                           
 45992                           ; BSR set to: 0
 45993  017214  C063  F056         	movff	i2___fladd@grs,i2___fladd@a
 45994                           
 45995                           ; BSR set to: 0
 45996  017218  C053  F063         	movff	i2___fladd@b+1,i2___fladd@grs
 45997                           
 45998                           ; BSR set to: 0
 45999  01721C  C057  F053         	movff	i2___fladd@a+1,i2___fladd@b+1
 46000                           
 46001                           ; BSR set to: 0
 46002  017220  C063  F057         	movff	i2___fladd@grs,i2___fladd@a+1
 46003                           
 46004                           ; BSR set to: 0
 46005  017224  C054  F063         	movff	i2___fladd@b+2,i2___fladd@grs
 46006                           
 46007                           ; BSR set to: 0
 46008  017228  C058  F054         	movff	i2___fladd@a+2,i2___fladd@b+2
 46009                           
 46010                           ; BSR set to: 0
 46011  01722C  C063  F058         	movff	i2___fladd@grs,i2___fladd@a+2
 46012                           
 46013                           ; BSR set to: 0
 46014  017230  C055  F063         	movff	i2___fladd@b+3,i2___fladd@grs
 46015                           
 46016                           ; BSR set to: 0
 46017  017234  C059  F055         	movff	i2___fladd@a+3,i2___fladd@b+3
 46018                           
 46019                           ; BSR set to: 0
 46020  017238  C063  F059         	movff	i2___fladd@grs,i2___fladd@a+3
 46021  01723C                     i2l18432:
 46022                           
 46023                           ; BSR set to: 0
 46024  01723C  0E00               	movlw	0
 46025  01723E  6F63               	movwf	i2___fladd@grs& (0+255),b
 46026                           
 46027                           ; BSR set to: 0
 46028  017240  5162               	movf	i2___fladd@bexp& (0+255),w,b
 46029  017242  C061  F05A         	movff	i2___fladd@aexp,??i2___fladd
 46030  017246  6A5B               	clrf	(??i2___fladd+1)& (0+255),c
 46031  017248  5E5A               	subwf	??i2___fladd,f,c
 46032  01724A  0E00               	movlw	0
 46033  01724C  5A5B               	subwfb	??i2___fladd+1,f,c
 46034  01724E  BE5B               	btfsc	??i2___fladd+1,7,c
 46035  017250  D02C               	goto	i2l3130
 46036  017252  505B               	movf	??i2___fladd+1,w,c
 46037  017254  E104               	bnz	i2u2326_40
 46038  017256  0E1A               	movlw	26
 46039  017258  5C5A               	subwf	??i2___fladd,w,c
 46040  01725A  A0D8               	btfss	status,0,c
 46041  01725C  D026               	goto	i2l3130
 46042  01725E                     i2u2326_40:
 46043                           
 46044                           ; BSR set to: 0
 46045  01725E  5052               	movf	i2___fladd@b,w,c
 46046  017260  1053               	iorwf	i2___fladd@b+1,w,c
 46047  017262  1054               	iorwf	i2___fladd@b+2,w,c
 46048  017264  1055               	iorwf	i2___fladd@b+3,w,c
 46049  017266  B4D8               	btfsc	status,2,c
 46050  017268  D002               	goto	i2u2327_40
 46051  01726A  0E01               	movlw	1
 46052  01726C  D001               	goto	i2u2328_40
 46053  01726E                     i2u2327_40:
 46054  01726E  0E00               	movlw	0
 46055  017270                     i2u2328_40:
 46056  017270  6F63               	movwf	i2___fladd@grs& (0+255),b
 46057                           
 46058                           ; BSR set to: 0
 46059  017272  0E00               	movlw	0
 46060  017274  6E52               	movwf	i2___fladd@b,c
 46061  017276  0E00               	movlw	0
 46062  017278  6E53               	movwf	i2___fladd@b+1,c
 46063  01727A  0E00               	movlw	0
 46064  01727C  6E54               	movwf	i2___fladd@b+2,c
 46065  01727E  0E00               	movlw	0
 46066  017280  6E55               	movwf	i2___fladd@b+3,c
 46067                           
 46068                           ; BSR set to: 0
 46069  017282  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 46070  017286  D015               	goto	i2u2331_40
 46071  017288                     i2l3131:
 46072                           
 46073                           ; BSR set to: 0
 46074  017288  A163               	btfss	i2___fladd@grs& (0+255),0,b
 46075  01728A  D005               	goto	i2l18444
 46076                           
 46077                           ; BSR set to: 0
 46078  01728C  90D8               	bcf	status,0,c
 46079  01728E  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 46080  017290  0901               	iorlw	1
 46081  017292  6F63               	movwf	i2___fladd@grs& (0+255),b
 46082  017294  D002               	goto	i2l18446
 46083  017296                     i2l18444:
 46084                           
 46085                           ; BSR set to: 0
 46086  017296  90D8               	bcf	status,0,c
 46087  017298  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 46088  01729A                     i2l18446:
 46089                           
 46090                           ; BSR set to: 0
 46091  01729A  B052               	btfsc	i2___fladd@b,0,c
 46092                           
 46093                           ; BSR set to: 0
 46094  01729C  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 46095                           
 46096                           ; BSR set to: 0
 46097  01729E  3455               	rlcf	i2___fladd@b+3,w,c
 46098  0172A0  3255               	rrcf	i2___fladd@b+3,f,c
 46099  0172A2  3254               	rrcf	i2___fladd@b+2,f,c
 46100  0172A4  3253               	rrcf	i2___fladd@b+1,f,c
 46101  0172A6  3252               	rrcf	i2___fladd@b,f,c
 46102                           
 46103                           ; BSR set to: 0
 46104  0172A8  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 46105  0172AA                     i2l3130:
 46106                           
 46107                           ; BSR set to: 0
 46108  0172AA  5161               	movf	i2___fladd@aexp& (0+255),w,b
 46109  0172AC  5D62               	subwf	i2___fladd@bexp& (0+255),w,b
 46110  0172AE  A0D8               	btfss	status,0,c
 46111  0172B0  D7EB               	goto	i2l3131
 46112  0172B2                     i2u2331_40:
 46113                           
 46114                           ; BSR set to: 0
 46115  0172B2  BD60               	btfsc	i2___fladd@signs& (0+255),6,b
 46116  0172B4  D028               	goto	i2l18478
 46117                           
 46118                           ; BSR set to: 0
 46119  0172B6  5162               	movf	i2___fladd@bexp& (0+255),w,b
 46120  0172B8  A4D8               	btfss	status,2,c
 46121  0172BA  D009               	goto	i2l18460
 46122                           
 46123                           ; BSR set to: 0
 46124  0172BC  0E00               	movlw	0
 46125  0172BE  6E52               	movwf	?i2___fladd,c
 46126  0172C0  0E00               	movlw	0
 46127  0172C2  6E53               	movwf	?i2___fladd+1,c
 46128  0172C4  0E00               	movlw	0
 46129  0172C6  6E54               	movwf	?i2___fladd+2,c
 46130  0172C8  0E00               	movlw	0
 46131  0172CA  6E55               	movwf	?i2___fladd+3,c
 46132  0172CC  0012               	return	
 46133  0172CE                     i2l18460:
 46134                           
 46135                           ; BSR set to: 0
 46136  0172CE  5056               	movf	i2___fladd@a,w,c
 46137  0172D0  2652               	addwf	i2___fladd@b,f,c
 46138  0172D2  5057               	movf	i2___fladd@a+1,w,c
 46139  0172D4  2253               	addwfc	i2___fladd@b+1,f,c
 46140  0172D6  5058               	movf	i2___fladd@a+2,w,c
 46141  0172D8  2254               	addwfc	i2___fladd@b+2,f,c
 46142  0172DA  5059               	movf	i2___fladd@a+3,w,c
 46143  0172DC  2255               	addwfc	i2___fladd@b+3,f,c
 46144                           
 46145                           ; BSR set to: 0
 46146  0172DE  A055               	btfss	i2___fladd@b+3,0,c
 46147  0172E0  D071               	goto	i2u2344_40
 46148                           
 46149                           ; BSR set to: 0
 46150  0172E2  A163               	btfss	i2___fladd@grs& (0+255),0,b
 46151  0172E4  D005               	goto	i2l18468
 46152                           
 46153                           ; BSR set to: 0
 46154  0172E6  90D8               	bcf	status,0,c
 46155  0172E8  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 46156  0172EA  0901               	iorlw	1
 46157  0172EC  6F63               	movwf	i2___fladd@grs& (0+255),b
 46158  0172EE  D002               	goto	i2l18470
 46159  0172F0                     i2l18468:
 46160                           
 46161                           ; BSR set to: 0
 46162  0172F0  90D8               	bcf	status,0,c
 46163  0172F2  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 46164  0172F4                     i2l18470:
 46165                           
 46166                           ; BSR set to: 0
 46167  0172F4  B052               	btfsc	i2___fladd@b,0,c
 46168                           
 46169                           ; BSR set to: 0
 46170  0172F6  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 46171                           
 46172                           ; BSR set to: 0
 46173  0172F8  3455               	rlcf	i2___fladd@b+3,w,c
 46174  0172FA  3255               	rrcf	i2___fladd@b+3,f,c
 46175  0172FC  3254               	rrcf	i2___fladd@b+2,f,c
 46176  0172FE  3253               	rrcf	i2___fladd@b+1,f,c
 46177  017300  3252               	rrcf	i2___fladd@b,f,c
 46178                           
 46179                           ; BSR set to: 0
 46180  017302  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 46181  017304  D05F               	goto	i2u2344_40
 46182  017306                     i2l18478:
 46183                           
 46184                           ; BSR set to: 0
 46185  017306  5056               	movf	i2___fladd@a,w,c
 46186  017308  5C52               	subwf	i2___fladd@b,w,c
 46187  01730A  5057               	movf	i2___fladd@a+1,w,c
 46188  01730C  5853               	subwfb	i2___fladd@b+1,w,c
 46189  01730E  5058               	movf	i2___fladd@a+2,w,c
 46190  017310  5854               	subwfb	i2___fladd@b+2,w,c
 46191  017312  5055               	movf	i2___fladd@b+3,w,c
 46192  017314  0A80               	xorlw	128
 46193  017316  6E5A               	movwf	??i2___fladd& (0+255),c
 46194  017318  5059               	movf	i2___fladd@a+3,w,c
 46195  01731A  0A80               	xorlw	128
 46196  01731C  585A               	subwfb	??i2___fladd& (0+255),w,c
 46197  01731E  B0D8               	btfsc	status,0,c
 46198  017320  D025               	goto	i2l18488
 46199                           
 46200                           ; BSR set to: 0
 46201  017322  5052               	movf	i2___fladd@b,w,c
 46202  017324  5C56               	subwf	i2___fladd@a,w,c
 46203  017326  6E5A               	movwf	??i2___fladd& (0+255),c
 46204  017328  5053               	movf	i2___fladd@b+1,w,c
 46205  01732A  5857               	subwfb	i2___fladd@a+1,w,c
 46206  01732C  6E5B               	movwf	(??i2___fladd+1)& (0+255),c
 46207  01732E  5054               	movf	i2___fladd@b+2,w,c
 46208  017330  5858               	subwfb	i2___fladd@a+2,w,c
 46209  017332  6E5C               	movwf	(??i2___fladd+2)& (0+255),c
 46210  017334  5055               	movf	i2___fladd@b+3,w,c
 46211  017336  5859               	subwfb	i2___fladd@a+3,w,c
 46212  017338  6E5D               	movwf	(??i2___fladd+3)& (0+255),c
 46213  01733A  0EFF               	movlw	255
 46214  01733C  245A               	addwf	??i2___fladd,w,c
 46215  01733E  6E52               	movwf	i2___fladd@b,c
 46216  017340  0EFF               	movlw	255
 46217  017342  205B               	addwfc	??i2___fladd+1,w,c
 46218  017344  6E53               	movwf	i2___fladd@b+1,c
 46219  017346  0EFF               	movlw	255
 46220  017348  205C               	addwfc	??i2___fladd+2,w,c
 46221  01734A  6E54               	movwf	i2___fladd@b+2,c
 46222  01734C  0EFF               	movlw	255
 46223  01734E  205D               	addwfc	??i2___fladd+3,w,c
 46224  017350  6E55               	movwf	i2___fladd@b+3,c
 46225  017352  0E80               	movlw	128
 46226  017354  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 46227                           
 46228                           ; BSR set to: 0
 46229  017356  6D63               	negf	i2___fladd@grs& (0+255),b
 46230                           
 46231                           ; BSR set to: 0
 46232  017358  5163               	movf	i2___fladd@grs& (0+255),w,b
 46233  01735A  A4D8               	btfss	status,2,c
 46234  01735C  D00F               	goto	i2l3146
 46235                           
 46236                           ; BSR set to: 0
 46237  01735E  0E01               	movlw	1
 46238  017360  2652               	addwf	i2___fladd@b,f,c
 46239  017362  0E00               	movlw	0
 46240  017364  2253               	addwfc	i2___fladd@b+1,f,c
 46241  017366  2254               	addwfc	i2___fladd@b+2,f,c
 46242  017368  2255               	addwfc	i2___fladd@b+3,f,c
 46243  01736A  D008               	goto	i2l3146
 46244  01736C                     i2l18488:
 46245                           
 46246                           ; BSR set to: 0
 46247  01736C  5056               	movf	i2___fladd@a,w,c
 46248  01736E  5E52               	subwf	i2___fladd@b,f,c
 46249  017370  5057               	movf	i2___fladd@a+1,w,c
 46250  017372  5A53               	subwfb	i2___fladd@b+1,f,c
 46251  017374  5058               	movf	i2___fladd@a+2,w,c
 46252  017376  5A54               	subwfb	i2___fladd@b+2,f,c
 46253  017378  5059               	movf	i2___fladd@a+3,w,c
 46254  01737A  5A55               	subwfb	i2___fladd@b+3,f,c
 46255  01737C                     i2l3146:
 46256                           
 46257                           ; BSR set to: 0
 46258  01737C  5052               	movf	i2___fladd@b,w,c
 46259  01737E  1053               	iorwf	i2___fladd@b+1,w,c
 46260  017380  1054               	iorwf	i2___fladd@b+2,w,c
 46261  017382  1055               	iorwf	i2___fladd@b+3,w,c
 46262  017384  A4D8               	btfss	status,2,c
 46263  017386  D01C               	goto	i2l18512
 46264                           
 46265                           ; BSR set to: 0
 46266  017388  5163               	movf	i2___fladd@grs& (0+255),w,b
 46267  01738A  A4D8               	btfss	status,2,c
 46268  01738C  D019               	goto	i2l18512
 46269                           
 46270                           ; BSR set to: 0
 46271  01738E  0E00               	movlw	0
 46272  017390  6E52               	movwf	?i2___fladd,c
 46273  017392  0E00               	movlw	0
 46274  017394  6E53               	movwf	?i2___fladd+1,c
 46275  017396  0E00               	movlw	0
 46276  017398  6E54               	movwf	?i2___fladd+2,c
 46277  01739A  0E00               	movlw	0
 46278  01739C  6E55               	movwf	?i2___fladd+3,c
 46279  01739E  0012               	return	
 46280  0173A0                     i2l18496:
 46281                           
 46282                           ; BSR set to: 0
 46283  0173A0  90D8               	bcf	status,0,c
 46284  0173A2  3652               	rlcf	i2___fladd@b,f,c
 46285  0173A4  3653               	rlcf	i2___fladd@b+1,f,c
 46286  0173A6  3654               	rlcf	i2___fladd@b+2,f,c
 46287  0173A8  3655               	rlcf	i2___fladd@b+3,f,c
 46288                           
 46289                           ; BSR set to: 0
 46290  0173AA  BF63               	btfsc	i2___fladd@grs& (0+255),7,b
 46291                           
 46292                           ; BSR set to: 0
 46293  0173AC  8052               	bsf	i2___fladd@b,0,c
 46294                           
 46295                           ; BSR set to: 0
 46296  0173AE  A163               	btfss	i2___fladd@grs& (0+255),0,b
 46297  0173B0  D002               	goto	i2l18506
 46298                           
 46299                           ; BSR set to: 0
 46300  0173B2  80D8               	bsf	status,0,c
 46301  0173B4  D001               	goto	L52
 46302  0173B6                     i2l18506:
 46303                           
 46304                           ; BSR set to: 0
 46305  0173B6  90D8               	bcf	status,0,c
 46306  0173B8                     L52:
 46307  0173B8  3763               	rlcf	i2___fladd@grs& (0+255),f,b
 46308                           
 46309                           ; BSR set to: 0
 46310  0173BA  5162               	movf	i2___fladd@bexp& (0+255),w,b
 46311  0173BC  A4D8               	btfss	status,2,c
 46312                           
 46313                           ; BSR set to: 0
 46314  0173BE  0762               	decf	i2___fladd@bexp& (0+255),f,b
 46315  0173C0                     i2l18512:
 46316                           
 46317                           ; BSR set to: 0
 46318  0173C0  AE54               	btfss	i2___fladd@b+2,7,c
 46319  0173C2  D7EE               	goto	i2l18496
 46320  0173C4                     i2u2344_40:
 46321                           
 46322                           ; BSR set to: 0
 46323  0173C4  0E00               	movlw	0
 46324  0173C6  6F61               	movwf	i2___fladd@aexp& (0+255),b
 46325                           
 46326                           ; BSR set to: 0
 46327  0173C8  AF63               	btfss	i2___fladd@grs& (0+255),7,b
 46328  0173CA  D00B               	goto	i2l3155
 46329                           
 46330                           ; BSR set to: 0
 46331  0173CC  C063  F05A         	movff	i2___fladd@grs,??i2___fladd
 46332  0173D0  0E7F               	movlw	127
 46333  0173D2  165A               	andwf	??i2___fladd,f,c
 46334  0173D4  B4D8               	btfsc	status,2,c
 46335  0173D6  D003               	goto	i2l3156
 46336  0173D8                     i2u2346_40:
 46337                           
 46338                           ; BSR set to: 0
 46339  0173D8  0E01               	movlw	1
 46340  0173DA  6F61               	movwf	i2___fladd@aexp& (0+255),b
 46341  0173DC  D002               	goto	i2l3155
 46342  0173DE                     i2l3156:
 46343                           
 46344                           ; BSR set to: 0
 46345  0173DE  B052               	btfsc	i2___fladd@b,0,c
 46346  0173E0  D7FB               	goto	i2u2346_40
 46347  0173E2                     i2l3155:
 46348                           
 46349                           ; BSR set to: 0
 46350  0173E2  5161               	movf	i2___fladd@aexp& (0+255),w,b
 46351  0173E4  B4D8               	btfsc	status,2,c
 46352  0173E6  D020               	goto	i2l18532
 46353                           
 46354                           ; BSR set to: 0
 46355  0173E8  0E01               	movlw	1
 46356  0173EA  2652               	addwf	i2___fladd@b,f,c
 46357  0173EC  0E00               	movlw	0
 46358  0173EE  2253               	addwfc	i2___fladd@b+1,f,c
 46359  0173F0  2254               	addwfc	i2___fladd@b+2,f,c
 46360  0173F2  2255               	addwfc	i2___fladd@b+3,f,c
 46361                           
 46362                           ; BSR set to: 0
 46363  0173F4  A055               	btfss	i2___fladd@b+3,0,c
 46364  0173F6  D018               	goto	i2l18532
 46365                           
 46366                           ; BSR set to: 0
 46367  0173F8  C052  F05A         	movff	i2___fladd@b,??i2___fladd
 46368  0173FC  C053  F05B         	movff	i2___fladd@b+1,??i2___fladd+1
 46369  017400  C054  F05C         	movff	i2___fladd@b+2,??i2___fladd+2
 46370  017404  C055  F05D         	movff	i2___fladd@b+3,??i2___fladd+3
 46371  017408  345D               	rlcf	??i2___fladd+3,w,c
 46372  01740A  325D               	rrcf	??i2___fladd+3,f,c
 46373  01740C  325C               	rrcf	??i2___fladd+2,f,c
 46374  01740E  325B               	rrcf	??i2___fladd+1,f,c
 46375  017410  325A               	rrcf	??i2___fladd,f,c
 46376  017412  C05A  F052         	movff	??i2___fladd,i2___fladd@b
 46377  017416  C05B  F053         	movff	??i2___fladd+1,i2___fladd@b+1
 46378  01741A  C05C  F054         	movff	??i2___fladd+2,i2___fladd@b+2
 46379  01741E  C05D  F055         	movff	??i2___fladd+3,i2___fladd@b+3
 46380  017422  2962               	incf	i2___fladd@bexp& (0+255),w,b
 46381  017424  A4D8               	btfss	status,2,c
 46382                           
 46383                           ; BSR set to: 0
 46384  017426  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 46385  017428                     i2l18532:
 46386                           
 46387                           ; BSR set to: 0
 46388  017428  2962               	incf	i2___fladd@bexp& (0+255),w,b
 46389  01742A  B4D8               	btfsc	status,2,c
 46390  01742C  D003               	goto	i2u2352_40
 46391                           
 46392                           ; BSR set to: 0
 46393  01742E  5162               	movf	i2___fladd@bexp& (0+255),w,b
 46394  017430  A4D8               	btfss	status,2,c
 46395  017432  D00D               	goto	i2l18540
 46396  017434                     i2u2352_40:
 46397                           
 46398                           ; BSR set to: 0
 46399  017434  0E00               	movlw	0
 46400  017436  6E52               	movwf	i2___fladd@b,c
 46401  017438  0E00               	movlw	0
 46402  01743A  6E53               	movwf	i2___fladd@b+1,c
 46403  01743C  0E00               	movlw	0
 46404  01743E  6E54               	movwf	i2___fladd@b+2,c
 46405  017440  0E00               	movlw	0
 46406  017442  6E55               	movwf	i2___fladd@b+3,c
 46407  017444  5162               	movf	i2___fladd@bexp& (0+255),w,b
 46408  017446  A4D8               	btfss	status,2,c
 46409  017448  D002               	goto	i2l18540
 46410                           
 46411                           ; BSR set to: 0
 46412  01744A  0E00               	movlw	0
 46413  01744C  6F60               	movwf	i2___fladd@signs& (0+255),b
 46414  01744E                     i2l18540:
 46415                           
 46416                           ; BSR set to: 0
 46417  01744E  A162               	btfss	i2___fladd@bexp& (0+255),0,b
 46418  017450  D002               	goto	i2l18544
 46419                           
 46420                           ; BSR set to: 0
 46421  017452  8E54               	bsf	i2___fladd@b+2,7,c
 46422  017454  D001               	goto	i2l18546
 46423  017456                     i2l18544:
 46424                           
 46425                           ; BSR set to: 0
 46426  017456  9E54               	bcf	i2___fladd@b+2,7,c
 46427  017458                     i2l18546:
 46428                           
 46429                           ; BSR set to: 0
 46430  017458  90D8               	bcf	status,0,c
 46431  01745A  3162               	rrcf	i2___fladd@bexp& (0+255),w,b
 46432  01745C  6E55               	movwf	i2___fladd@b+3,c
 46433                           
 46434                           ; BSR set to: 0
 46435  01745E  BF60               	btfsc	i2___fladd@signs& (0+255),7,b
 46436                           
 46437                           ; BSR set to: 0
 46438  017460  8E55               	bsf	i2___fladd@b+3,7,c
 46439                           
 46440                           ; BSR set to: 0
 46441  017462  C052  F052         	movff	i2___fladd@b,?i2___fladd
 46442  017466  C053  F053         	movff	i2___fladd@b+1,?i2___fladd+1
 46443  01746A  C054  F054         	movff	i2___fladd@b+2,?i2___fladd+2
 46444  01746E  C055  F055         	movff	i2___fladd@b+3,?i2___fladd+3
 46445                           
 46446                           ; BSR set to: 0
 46447  017472  0012               	return		;funcret
 46448  017474                     __end_ofi2___fladd:
 46449                           	opt callstack 0
 46450                           
 46451 ;; *************** function i2___flmul *****************
 46452 ;; Defined at:
 46453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 46454 ;; Parameters:    Size  Location     Type
 46455 ;;  b               4   43[COMRAM] unsigned char 
 46456 ;;  a               4   47[COMRAM] unsigned char 
 46457 ;; Auto vars:     Size  Location     Type
 46458 ;;  __flmul         4   62[COMRAM] struct .
 46459 ;;  __flmul         4   57[COMRAM] unsigned long 
 46460 ;;  __flmul         2   66[COMRAM] struct .
 46461 ;;  __flmul         1   61[COMRAM] unsigned char 
 46462 ;;  __flmul         1   56[COMRAM] unsigned char 
 46463 ;;  __flmul         1   55[COMRAM] unsigned char 
 46464 ;; Return value:  Size  Location     Type
 46465 ;;                  4   43[COMRAM] unsigned char 
 46466 ;; Registers used:
 46467 ;;		wreg, status,2, status,0, prodl, prodh
 46468 ;; Tracked objects:
 46469 ;;		On entry : 0/0
 46470 ;;		On exit  : 0/0
 46471 ;;		Unchanged: 0/0
 46472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46474 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46476 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46477 ;;Total ram usage:       25 bytes
 46478 ;; Hardware stack levels used:    1
 46479 ;; This function calls:
 46480 ;;		Nothing
 46481 ;; This function is called by:
 46482 ;;		_ADC_PostProcessingHandler
 46483 ;;		i2_fround
 46484 ;;		i2_scale
 46485 ;;		i2__doprnt
 46486 ;; This function uses a non-reentrant model
 46487 ;;
 46488                           
 46489                           	psect	text201
 46490  0167F8                     __ptext201:
 46491                           	opt callstack 0
 46492  0167F8                     i2___flmul:
 46493                           	opt callstack 12
 46494                           
 46495                           ; BSR set to: 0
 46496                           ;incstack = 0
 46497  0167F8  502F               	movf	i2___flmul@b+3,w,c
 46498  0167FA  0B80               	andlw	128
 46499  0167FC  6E38               	movwf	i2___flmul@sign,c
 46500  0167FE  502F               	movf	i2___flmul@b+3,w,c
 46501  016800  242F               	addwf	i2___flmul@b+3,w,c
 46502  016802  6E3E               	movwf	i2___flmul@bexp,c
 46503  016804  BE2E               	btfsc	i2___flmul@b+2,7,c
 46504  016806  803E               	bsf	i2___flmul@bexp,0,c
 46505  016808  503E               	movf	i2___flmul@bexp,w,c
 46506  01680A  B4D8               	btfsc	status,2,c
 46507  01680C  D00D               	goto	i2l18570
 46508  01680E  283E               	incf	i2___flmul@bexp,w,c
 46509  016810  A4D8               	btfss	status,2,c
 46510  016812  D008               	goto	i2l18568
 46511  016814  0E00               	movlw	0
 46512  016816  6E2C               	movwf	i2___flmul@b,c
 46513  016818  0E00               	movlw	0
 46514  01681A  6E2D               	movwf	i2___flmul@b+1,c
 46515  01681C  0E00               	movlw	0
 46516  01681E  6E2E               	movwf	i2___flmul@b+2,c
 46517  016820  0E00               	movlw	0
 46518  016822  6E2F               	movwf	i2___flmul@b+3,c
 46519  016824                     i2l18568:
 46520  016824  8E2E               	bsf	i2___flmul@b+2,7,c
 46521  016826  D008               	goto	i2l18572
 46522  016828                     i2l18570:
 46523  016828  0E00               	movlw	0
 46524  01682A  6E2C               	movwf	i2___flmul@b,c
 46525  01682C  0E00               	movlw	0
 46526  01682E  6E2D               	movwf	i2___flmul@b+1,c
 46527  016830  0E00               	movlw	0
 46528  016832  6E2E               	movwf	i2___flmul@b+2,c
 46529  016834  0E00               	movlw	0
 46530  016836  6E2F               	movwf	i2___flmul@b+3,c
 46531  016838                     i2l18572:
 46532  016838  5033               	movf	i2___flmul@a+3,w,c
 46533  01683A  0B80               	andlw	128
 46534  01683C  1A38               	xorwf	i2___flmul@sign,f,c
 46535  01683E  5033               	movf	i2___flmul@a+3,w,c
 46536  016840  2433               	addwf	i2___flmul@a+3,w,c
 46537  016842  6E39               	movwf	i2___flmul@aexp,c
 46538  016844  BE32               	btfsc	i2___flmul@a+2,7,c
 46539  016846  8039               	bsf	i2___flmul@aexp,0,c
 46540  016848  5039               	movf	i2___flmul@aexp,w,c
 46541  01684A  B4D8               	btfsc	status,2,c
 46542  01684C  D00D               	goto	i2l18588
 46543  01684E  2839               	incf	i2___flmul@aexp,w,c
 46544  016850  A4D8               	btfss	status,2,c
 46545  016852  D008               	goto	i2l18586
 46546  016854  0E00               	movlw	0
 46547  016856  6E30               	movwf	i2___flmul@a,c
 46548  016858  0E00               	movlw	0
 46549  01685A  6E31               	movwf	i2___flmul@a+1,c
 46550  01685C  0E00               	movlw	0
 46551  01685E  6E32               	movwf	i2___flmul@a+2,c
 46552  016860  0E00               	movlw	0
 46553  016862  6E33               	movwf	i2___flmul@a+3,c
 46554  016864                     i2l18586:
 46555  016864  8E32               	bsf	i2___flmul@a+2,7,c
 46556  016866  D008               	goto	i2l3215
 46557  016868                     i2l18588:
 46558  016868  0E00               	movlw	0
 46559  01686A  6E30               	movwf	i2___flmul@a,c
 46560  01686C  0E00               	movlw	0
 46561  01686E  6E31               	movwf	i2___flmul@a+1,c
 46562  016870  0E00               	movlw	0
 46563  016872  6E32               	movwf	i2___flmul@a+2,c
 46564  016874  0E00               	movlw	0
 46565  016876  6E33               	movwf	i2___flmul@a+3,c
 46566  016878                     i2l3215:
 46567  016878  5039               	movf	i2___flmul@aexp,w,c
 46568  01687A  B4D8               	btfsc	status,2,c
 46569  01687C  D003               	goto	i2u2363_40
 46570  01687E  503E               	movf	i2___flmul@bexp,w,c
 46571  016880  A4D8               	btfss	status,2,c
 46572  016882  D009               	goto	i2l18596
 46573  016884                     i2u2363_40:
 46574  016884  0E00               	movlw	0
 46575  016886  6E2C               	movwf	?i2___flmul,c
 46576  016888  0E00               	movlw	0
 46577  01688A  6E2D               	movwf	?i2___flmul+1,c
 46578  01688C  0E00               	movlw	0
 46579  01688E  6E2E               	movwf	?i2___flmul+2,c
 46580  016890  0E00               	movlw	0
 46581  016892  6E2F               	movwf	?i2___flmul+3,c
 46582  016894  0012               	return	
 46583  016896                     i2l18596:
 46584  016896  5032               	movf	i2___flmul@a+2,w,c
 46585  016898  022C               	mulwf	i2___flmul@b,c
 46586  01689A  CFF3 F043          	movff	prodl,i2___flmul@temp
 46587  01689E  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46588  0168A2  5043               	movf	i2___flmul@temp,w,c
 46589  0168A4  6E3A               	movwf	i2___flmul@grs,c
 46590  0168A6  6A3B               	clrf	i2___flmul@grs+1,c
 46591  0168A8  6A3C               	clrf	i2___flmul@grs+2,c
 46592  0168AA  6A3D               	clrf	i2___flmul@grs+3,c
 46593  0168AC  5044               	movf	i2___flmul@temp+1,w,c
 46594  0168AE  6E3F               	movwf	i2___flmul@prod,c
 46595  0168B0  6A40               	clrf	i2___flmul@prod+1,c
 46596  0168B2  6A41               	clrf	i2___flmul@prod+2,c
 46597  0168B4  6A42               	clrf	i2___flmul@prod+3,c
 46598  0168B6  5031               	movf	i2___flmul@a+1,w,c
 46599  0168B8  022D               	mulwf	i2___flmul@b+1,c
 46600  0168BA  CFF3 F043          	movff	prodl,i2___flmul@temp
 46601  0168BE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46602  0168C2  5043               	movf	i2___flmul@temp,w,c
 46603  0168C4  263A               	addwf	i2___flmul@grs,f,c
 46604  0168C6  0E00               	movlw	0
 46605  0168C8  223B               	addwfc	i2___flmul@grs+1,f,c
 46606  0168CA  223C               	addwfc	i2___flmul@grs+2,f,c
 46607  0168CC  223D               	addwfc	i2___flmul@grs+3,f,c
 46608  0168CE  5044               	movf	i2___flmul@temp+1,w,c
 46609  0168D0  263F               	addwf	i2___flmul@prod,f,c
 46610  0168D2  0E00               	movlw	0
 46611  0168D4  2240               	addwfc	i2___flmul@prod+1,f,c
 46612  0168D6  2241               	addwfc	i2___flmul@prod+2,f,c
 46613  0168D8  2242               	addwfc	i2___flmul@prod+3,f,c
 46614  0168DA  5030               	movf	i2___flmul@a,w,c
 46615  0168DC  022E               	mulwf	i2___flmul@b+2,c
 46616  0168DE  CFF3 F043          	movff	prodl,i2___flmul@temp
 46617  0168E2  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46618  0168E6  5043               	movf	i2___flmul@temp,w,c
 46619  0168E8  263A               	addwf	i2___flmul@grs,f,c
 46620  0168EA  0E00               	movlw	0
 46621  0168EC  223B               	addwfc	i2___flmul@grs+1,f,c
 46622  0168EE  223C               	addwfc	i2___flmul@grs+2,f,c
 46623  0168F0  223D               	addwfc	i2___flmul@grs+3,f,c
 46624  0168F2  5044               	movf	i2___flmul@temp+1,w,c
 46625  0168F4  263F               	addwf	i2___flmul@prod,f,c
 46626  0168F6  0E00               	movlw	0
 46627  0168F8  2240               	addwfc	i2___flmul@prod+1,f,c
 46628  0168FA  2241               	addwfc	i2___flmul@prod+2,f,c
 46629  0168FC  2242               	addwfc	i2___flmul@prod+3,f,c
 46630  0168FE  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 46631  016902  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 46632  016906  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 46633  01690A  6A3A               	clrf	i2___flmul@grs,c
 46634  01690C  5030               	movf	i2___flmul@a,w,c
 46635  01690E  022D               	mulwf	i2___flmul@b+1,c
 46636  016910  CFF3 F043          	movff	prodl,i2___flmul@temp
 46637  016914  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46638  016918  5043               	movf	i2___flmul@temp,w,c
 46639  01691A  263A               	addwf	i2___flmul@grs,f,c
 46640  01691C  5044               	movf	i2___flmul@temp+1,w,c
 46641  01691E  223B               	addwfc	i2___flmul@grs+1,f,c
 46642  016920  0E00               	movlw	0
 46643  016922  223C               	addwfc	i2___flmul@grs+2,f,c
 46644  016924  0E00               	movlw	0
 46645  016926  223D               	addwfc	i2___flmul@grs+3,f,c
 46646  016928  5031               	movf	i2___flmul@a+1,w,c
 46647  01692A  022C               	mulwf	i2___flmul@b,c
 46648  01692C  CFF3 F043          	movff	prodl,i2___flmul@temp
 46649  016930  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46650  016934  5043               	movf	i2___flmul@temp,w,c
 46651  016936  263A               	addwf	i2___flmul@grs,f,c
 46652  016938  5044               	movf	i2___flmul@temp+1,w,c
 46653  01693A  223B               	addwfc	i2___flmul@grs+1,f,c
 46654  01693C  0E00               	movlw	0
 46655  01693E  223C               	addwfc	i2___flmul@grs+2,f,c
 46656  016940  0E00               	movlw	0
 46657  016942  223D               	addwfc	i2___flmul@grs+3,f,c
 46658  016944  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 46659  016948  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 46660  01694C  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 46661  016950  6A3A               	clrf	i2___flmul@grs,c
 46662  016952  5030               	movf	i2___flmul@a,w,c
 46663  016954  022C               	mulwf	i2___flmul@b,c
 46664  016956  CFF3 F043          	movff	prodl,i2___flmul@temp
 46665  01695A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46666  01695E  5043               	movf	i2___flmul@temp,w,c
 46667  016960  263A               	addwf	i2___flmul@grs,f,c
 46668  016962  5044               	movf	i2___flmul@temp+1,w,c
 46669  016964  223B               	addwfc	i2___flmul@grs+1,f,c
 46670  016966  0E00               	movlw	0
 46671  016968  223C               	addwfc	i2___flmul@grs+2,f,c
 46672  01696A  0E00               	movlw	0
 46673  01696C  223D               	addwfc	i2___flmul@grs+3,f,c
 46674  01696E  5032               	movf	i2___flmul@a+2,w,c
 46675  016970  022D               	mulwf	i2___flmul@b+1,c
 46676  016972  CFF3 F043          	movff	prodl,i2___flmul@temp
 46677  016976  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46678  01697A  5043               	movf	i2___flmul@temp,w,c
 46679  01697C  263F               	addwf	i2___flmul@prod,f,c
 46680  01697E  5044               	movf	i2___flmul@temp+1,w,c
 46681  016980  2240               	addwfc	i2___flmul@prod+1,f,c
 46682  016982  0E00               	movlw	0
 46683  016984  2241               	addwfc	i2___flmul@prod+2,f,c
 46684  016986  0E00               	movlw	0
 46685  016988  2242               	addwfc	i2___flmul@prod+3,f,c
 46686  01698A  5031               	movf	i2___flmul@a+1,w,c
 46687  01698C  022E               	mulwf	i2___flmul@b+2,c
 46688  01698E  CFF3 F043          	movff	prodl,i2___flmul@temp
 46689  016992  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46690  016996  5043               	movf	i2___flmul@temp,w,c
 46691  016998  263F               	addwf	i2___flmul@prod,f,c
 46692  01699A  5044               	movf	i2___flmul@temp+1,w,c
 46693  01699C  2240               	addwfc	i2___flmul@prod+1,f,c
 46694  01699E  0E00               	movlw	0
 46695  0169A0  2241               	addwfc	i2___flmul@prod+2,f,c
 46696  0169A2  0E00               	movlw	0
 46697  0169A4  2242               	addwfc	i2___flmul@prod+3,f,c
 46698  0169A6  5032               	movf	i2___flmul@a+2,w,c
 46699  0169A8  022E               	mulwf	i2___flmul@b+2,c
 46700  0169AA  CFF3 F043          	movff	prodl,i2___flmul@temp
 46701  0169AE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 46702  0169B2  5043               	movf	i2___flmul@temp,w,c
 46703  0169B4  6E34               	movwf	??i2___flmul& (0+255),c
 46704  0169B6  5044               	movf	i2___flmul@temp+1,w,c
 46705  0169B8  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 46706  0169BA  6A36               	clrf	(??i2___flmul+2)& (0+255),c
 46707  0169BC  6A37               	clrf	(??i2___flmul+3)& (0+255),c
 46708  0169BE  C036  F037         	movff	??i2___flmul+2,??i2___flmul+3
 46709  0169C2  C035  F036         	movff	??i2___flmul+1,??i2___flmul+2
 46710  0169C6  C034  F035         	movff	??i2___flmul,??i2___flmul+1
 46711  0169CA  6A34               	clrf	??i2___flmul,c
 46712  0169CC  5034               	movf	??i2___flmul,w,c
 46713  0169CE  263F               	addwf	i2___flmul@prod,f,c
 46714  0169D0  5035               	movf	??i2___flmul+1,w,c
 46715  0169D2  2240               	addwfc	i2___flmul@prod+1,f,c
 46716  0169D4  5036               	movf	??i2___flmul+2,w,c
 46717  0169D6  2241               	addwfc	i2___flmul@prod+2,f,c
 46718  0169D8  5037               	movf	??i2___flmul+3,w,c
 46719  0169DA  2242               	addwfc	i2___flmul@prod+3,f,c
 46720  0169DC  C03A  F034         	movff	i2___flmul@grs,??i2___flmul
 46721  0169E0  C03B  F035         	movff	i2___flmul@grs+1,??i2___flmul+1
 46722  0169E4  C03C  F036         	movff	i2___flmul@grs+2,??i2___flmul+2
 46723  0169E8  C03D  F037         	movff	i2___flmul@grs+3,??i2___flmul+3
 46724  0169EC  0E19               	movlw	25
 46725  0169EE  D005               	goto	i2u2364_40
 46726  0169F0                     i2u2364_45:
 46727  0169F0  90D8               	bcf	status,0,c
 46728  0169F2  3237               	rrcf	??i2___flmul+3,f,c
 46729  0169F4  3236               	rrcf	??i2___flmul+2,f,c
 46730  0169F6  3235               	rrcf	??i2___flmul+1,f,c
 46731  0169F8  3234               	rrcf	??i2___flmul,f,c
 46732  0169FA                     i2u2364_40:
 46733  0169FA  2EE8               	decfsz	wreg,f,c
 46734  0169FC  D7F9               	goto	i2u2364_45
 46735  0169FE  5034               	movf	??i2___flmul,w,c
 46736  016A00  263F               	addwf	i2___flmul@prod,f,c
 46737  016A02  5035               	movf	??i2___flmul+1,w,c
 46738  016A04  2240               	addwfc	i2___flmul@prod+1,f,c
 46739  016A06  5036               	movf	??i2___flmul+2,w,c
 46740  016A08  2241               	addwfc	i2___flmul@prod+2,f,c
 46741  016A0A  5037               	movf	??i2___flmul+3,w,c
 46742  016A0C  2242               	addwfc	i2___flmul@prod+3,f,c
 46743  016A0E  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 46744  016A12  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 46745  016A16  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 46746  016A1A  6A3A               	clrf	i2___flmul@grs,c
 46747  016A1C  5039               	movf	i2___flmul@aexp,w,c
 46748  016A1E  C03E  F034         	movff	i2___flmul@bexp,??i2___flmul
 46749  016A22  6A35               	clrf	(??i2___flmul+1)& (0+255),c
 46750  016A24  2634               	addwf	??i2___flmul,f,c
 46751  016A26  0E00               	movlw	0
 46752  016A28  2235               	addwfc	??i2___flmul+1,f,c
 46753  016A2A  0E82               	movlw	130
 46754  016A2C  2434               	addwf	??i2___flmul,w,c
 46755  016A2E  6E43               	movwf	i2___flmul@temp,c
 46756  016A30  0EFF               	movlw	255
 46757  016A32  2035               	addwfc	??i2___flmul+1,w,c
 46758  016A34  6E44               	movwf	i2___flmul@temp+1,c
 46759  016A36  D00F               	goto	i2l18644
 46760  016A38                     i2l18638:
 46761  016A38  90D8               	bcf	status,0,c
 46762  016A3A  363F               	rlcf	i2___flmul@prod,f,c
 46763  016A3C  3640               	rlcf	i2___flmul@prod+1,f,c
 46764  016A3E  3641               	rlcf	i2___flmul@prod+2,f,c
 46765  016A40  3642               	rlcf	i2___flmul@prod+3,f,c
 46766  016A42  BE3D               	btfsc	i2___flmul@grs+3,7,c
 46767  016A44  803F               	bsf	i2___flmul@prod,0,c
 46768  016A46  90D8               	bcf	status,0,c
 46769  016A48  363A               	rlcf	i2___flmul@grs,f,c
 46770  016A4A  363B               	rlcf	i2___flmul@grs+1,f,c
 46771  016A4C  363C               	rlcf	i2___flmul@grs+2,f,c
 46772  016A4E  363D               	rlcf	i2___flmul@grs+3,f,c
 46773  016A50  0643               	decf	i2___flmul@temp,f,c
 46774  016A52  A0D8               	btfss	status,0,c
 46775  016A54  0644               	decf	i2___flmul@temp+1,f,c
 46776  016A56                     i2l18644:
 46777  016A56  AE41               	btfss	i2___flmul@prod+2,7,c
 46778  016A58  D7EF               	goto	i2l18638
 46779  016A5A  0E00               	movlw	0
 46780  016A5C  6E39               	movwf	i2___flmul@aexp,c
 46781  016A5E  AE3D               	btfss	i2___flmul@grs+3,7,c
 46782  016A60  D017               	goto	i2l3224
 46783  016A62  0EFF               	movlw	255
 46784  016A64  143A               	andwf	i2___flmul@grs,w,c
 46785  016A66  6E34               	movwf	??i2___flmul& (0+255),c
 46786  016A68  0EFF               	movlw	255
 46787  016A6A  143B               	andwf	i2___flmul@grs+1,w,c
 46788  016A6C  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 46789  016A6E  0EFF               	movlw	255
 46790  016A70  143C               	andwf	i2___flmul@grs+2,w,c
 46791  016A72  6E36               	movwf	(??i2___flmul+2)& (0+255),c
 46792  016A74  0E7F               	movlw	127
 46793  016A76  143D               	andwf	i2___flmul@grs+3,w,c
 46794  016A78  6E37               	movwf	(??i2___flmul+3)& (0+255),c
 46795  016A7A  5034               	movf	??i2___flmul,w,c
 46796  016A7C  1035               	iorwf	??i2___flmul+1,w,c
 46797  016A7E  1036               	iorwf	??i2___flmul+2,w,c
 46798  016A80  1037               	iorwf	??i2___flmul+3,w,c
 46799  016A82  B4D8               	btfsc	status,2,c
 46800  016A84  D003               	goto	i2l3225
 46801  016A86                     i2u2368_40:
 46802  016A86  0E01               	movlw	1
 46803  016A88  6E39               	movwf	i2___flmul@aexp,c
 46804  016A8A  D002               	goto	i2l3224
 46805  016A8C                     i2l3225:
 46806  016A8C  B03F               	btfsc	i2___flmul@prod,0,c
 46807  016A8E  D7FB               	goto	i2u2368_40
 46808  016A90                     i2l3224:
 46809  016A90  5039               	movf	i2___flmul@aexp,w,c
 46810  016A92  B4D8               	btfsc	status,2,c
 46811  016A94  D01F               	goto	i2l18664
 46812  016A96  0E01               	movlw	1
 46813  016A98  263F               	addwf	i2___flmul@prod,f,c
 46814  016A9A  0E00               	movlw	0
 46815  016A9C  2240               	addwfc	i2___flmul@prod+1,f,c
 46816  016A9E  2241               	addwfc	i2___flmul@prod+2,f,c
 46817  016AA0  2242               	addwfc	i2___flmul@prod+3,f,c
 46818  016AA2  A042               	btfss	i2___flmul@prod+3,0,c
 46819  016AA4  D017               	goto	i2l18664
 46820  016AA6  C03F  F034         	movff	i2___flmul@prod,??i2___flmul
 46821  016AAA  C040  F035         	movff	i2___flmul@prod+1,??i2___flmul+1
 46822  016AAE  C041  F036         	movff	i2___flmul@prod+2,??i2___flmul+2
 46823  016AB2  C042  F037         	movff	i2___flmul@prod+3,??i2___flmul+3
 46824  016AB6  3437               	rlcf	??i2___flmul+3,w,c
 46825  016AB8  3237               	rrcf	??i2___flmul+3,f,c
 46826  016ABA  3236               	rrcf	??i2___flmul+2,f,c
 46827  016ABC  3235               	rrcf	??i2___flmul+1,f,c
 46828  016ABE  3234               	rrcf	??i2___flmul,f,c
 46829  016AC0  C034  F03F         	movff	??i2___flmul,i2___flmul@prod
 46830  016AC4  C035  F040         	movff	??i2___flmul+1,i2___flmul@prod+1
 46831  016AC8  C036  F041         	movff	??i2___flmul+2,i2___flmul@prod+2
 46832  016ACC  C037  F042         	movff	??i2___flmul+3,i2___flmul@prod+3
 46833  016AD0  4A43               	infsnz	i2___flmul@temp,f,c
 46834  016AD2  2A44               	incf	i2___flmul@temp+1,f,c
 46835  016AD4                     i2l18664:
 46836  016AD4  BE44               	btfsc	i2___flmul@temp+1,7,c
 46837  016AD6  D00D               	goto	i2l18668
 46838  016AD8  5044               	movf	i2___flmul@temp+1,w,c
 46839  016ADA  E103               	bnz	i2u2372_40
 46840  016ADC  2843               	incf	i2___flmul@temp,w,c
 46841  016ADE  A0D8               	btfss	status,0,c
 46842  016AE0  D008               	goto	i2l18668
 46843  016AE2                     i2u2372_40:
 46844  016AE2  0E00               	movlw	0
 46845  016AE4  6E3F               	movwf	i2___flmul@prod,c
 46846  016AE6  0E00               	movlw	0
 46847  016AE8  6E40               	movwf	i2___flmul@prod+1,c
 46848  016AEA  0E80               	movlw	128
 46849  016AEC  6E41               	movwf	i2___flmul@prod+2,c
 46850  016AEE  0E7F               	movlw	127
 46851  016AF0  D020               	goto	L53
 46852  016AF2                     i2l18668:
 46853  016AF2  BE44               	btfsc	i2___flmul@temp+1,7,c
 46854  016AF4  D005               	goto	i2u2373_40
 46855  016AF6  5044               	movf	i2___flmul@temp+1,w,c
 46856  016AF8  E10E               	bnz	i2l3232
 46857  016AFA  0443               	decf	i2___flmul@temp,w,c
 46858  016AFC  B0D8               	btfsc	status,0,c
 46859  016AFE  D00B               	goto	i2l3232
 46860  016B00                     i2u2373_40:
 46861  016B00  0E00               	movlw	0
 46862  016B02  6E3F               	movwf	i2___flmul@prod,c
 46863  016B04  0E00               	movlw	0
 46864  016B06  6E40               	movwf	i2___flmul@prod+1,c
 46865  016B08  0E00               	movlw	0
 46866  016B0A  6E41               	movwf	i2___flmul@prod+2,c
 46867  016B0C  0E00               	movlw	0
 46868  016B0E  6E42               	movwf	i2___flmul@prod+3,c
 46869  016B10  0E00               	movlw	0
 46870  016B12  6E38               	movwf	i2___flmul@sign,c
 46871  016B14  D00F               	goto	i2l18680
 46872  016B16                     i2l3232:
 46873  016B16  C043  F03E         	movff	i2___flmul@temp,i2___flmul@bexp
 46874  016B1A  0EFF               	movlw	255
 46875  016B1C  163F               	andwf	i2___flmul@prod,f,c
 46876  016B1E  0EFF               	movlw	255
 46877  016B20  1640               	andwf	i2___flmul@prod+1,f,c
 46878  016B22  0E7F               	movlw	127
 46879  016B24  1641               	andwf	i2___flmul@prod+2,f,c
 46880  016B26  0E00               	movlw	0
 46881  016B28  1642               	andwf	i2___flmul@prod+3,f,c
 46882  016B2A  B03E               	btfsc	i2___flmul@bexp,0,c
 46883  016B2C  8E41               	bsf	i2___flmul@prod+2,7,c
 46884  016B2E  90D8               	bcf	status,0,c
 46885  016B30  303E               	rrcf	i2___flmul@bexp,w,c
 46886  016B32                     L53:
 46887  016B32  6E42               	movwf	i2___flmul@prod+3,c
 46888  016B34                     i2l18680:
 46889  016B34  5038               	movf	i2___flmul@sign,w,c
 46890  016B36  1242               	iorwf	i2___flmul@prod+3,f,c
 46891  016B38  C03F  F02C         	movff	i2___flmul@prod,?i2___flmul
 46892  016B3C  C040  F02D         	movff	i2___flmul@prod+1,?i2___flmul+1
 46893  016B40  C041  F02E         	movff	i2___flmul@prod+2,?i2___flmul+2
 46894  016B44  C042  F02F         	movff	i2___flmul@prod+3,?i2___flmul+3
 46895  016B48  0012               	return		;funcret
 46896  016B4A                     __end_ofi2___flmul:
 46897                           	opt callstack 0
 46898                           
 46899 ;; *************** function i2___flge *****************
 46900 ;; Defined at:
 46901 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 46902 ;; Parameters:    Size  Location     Type
 46903 ;;  ff1             4    0[COMRAM] unsigned char 
 46904 ;;  ff2             4    4[COMRAM] unsigned char 
 46905 ;; Auto vars:     Size  Location     Type
 46906 ;;		None
 46907 ;; Return value:  Size  Location     Type
 46908 ;;		None               void
 46909 ;; Registers used:
 46910 ;;		wreg, status,2, status,0
 46911 ;; Tracked objects:
 46912 ;;		On entry : 0/0
 46913 ;;		On exit  : 0/0
 46914 ;;		Unchanged: 0/0
 46915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46916 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46919 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46920 ;;Total ram usage:       12 bytes
 46921 ;; Hardware stack levels used:    1
 46922 ;; This function calls:
 46923 ;;		Nothing
 46924 ;; This function is called by:
 46925 ;;		_ADC_PostProcessingHandler
 46926 ;;		i2__doprnt
 46927 ;; This function uses a non-reentrant model
 46928 ;;
 46929                           
 46930                           	psect	text202
 46931  019DBA                     __ptext202:
 46932                           	opt callstack 0
 46933  019DBA                     i2___flge:
 46934                           	opt callstack 13
 46935                           
 46936                           ;incstack = 0
 46937  019DBA  0E00               	movlw	0
 46938  019DBC  1401               	andwf	i2___flge@ff1,w,c
 46939  019DBE  6E09               	movwf	??i2___flge& (0+255),c
 46940  019DC0  0E00               	movlw	0
 46941  019DC2  1402               	andwf	i2___flge@ff1+1,w,c
 46942  019DC4  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 46943  019DC6  0E80               	movlw	128
 46944  019DC8  1403               	andwf	i2___flge@ff1+2,w,c
 46945  019DCA  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 46946  019DCC  0E7F               	movlw	127
 46947  019DCE  1404               	andwf	i2___flge@ff1+3,w,c
 46948  019DD0  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 46949  019DD2  5009               	movf	??i2___flge,w,c
 46950  019DD4  100A               	iorwf	??i2___flge+1,w,c
 46951  019DD6  100B               	iorwf	??i2___flge+2,w,c
 46952  019DD8  100C               	iorwf	??i2___flge+3,w,c
 46953  019DDA  A4D8               	btfss	status,2,c
 46954  019DDC  D008               	goto	i2l19246
 46955  019DDE  0E00               	movlw	0
 46956  019DE0  6E01               	movwf	i2___flge@ff1,c
 46957  019DE2  0E00               	movlw	0
 46958  019DE4  6E02               	movwf	i2___flge@ff1+1,c
 46959  019DE6  0E00               	movlw	0
 46960  019DE8  6E03               	movwf	i2___flge@ff1+2,c
 46961  019DEA  0E00               	movlw	0
 46962  019DEC  6E04               	movwf	i2___flge@ff1+3,c
 46963  019DEE                     i2l19246:
 46964  019DEE  0E00               	movlw	0
 46965  019DF0  1405               	andwf	i2___flge@ff2,w,c
 46966  019DF2  6E09               	movwf	??i2___flge& (0+255),c
 46967  019DF4  0E00               	movlw	0
 46968  019DF6  1406               	andwf	i2___flge@ff2+1,w,c
 46969  019DF8  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 46970  019DFA  0E80               	movlw	128
 46971  019DFC  1407               	andwf	i2___flge@ff2+2,w,c
 46972  019DFE  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 46973  019E00  0E7F               	movlw	127
 46974  019E02  1408               	andwf	i2___flge@ff2+3,w,c
 46975  019E04  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 46976  019E06  5009               	movf	??i2___flge,w,c
 46977  019E08  100A               	iorwf	??i2___flge+1,w,c
 46978  019E0A  100B               	iorwf	??i2___flge+2,w,c
 46979  019E0C  100C               	iorwf	??i2___flge+3,w,c
 46980  019E0E  A4D8               	btfss	status,2,c
 46981  019E10  D008               	goto	i2l19250
 46982  019E12  0E00               	movlw	0
 46983  019E14  6E05               	movwf	i2___flge@ff2,c
 46984  019E16  0E00               	movlw	0
 46985  019E18  6E06               	movwf	i2___flge@ff2+1,c
 46986  019E1A  0E00               	movlw	0
 46987  019E1C  6E07               	movwf	i2___flge@ff2+2,c
 46988  019E1E  0E00               	movlw	0
 46989  019E20  6E08               	movwf	i2___flge@ff2+3,c
 46990  019E22                     i2l19250:
 46991  019E22  AE04               	btfss	i2___flge@ff1+3,7,c
 46992  019E24  D009               	goto	i2l19254
 46993  019E26  6C01               	negf	i2___flge@ff1,c
 46994  019E28  1E02               	comf	i2___flge@ff1+1,f,c
 46995  019E2A  B0D8               	btfsc	status,0,c
 46996  019E2C  2A02               	incf	i2___flge@ff1+1,f,c
 46997  019E2E  1E03               	comf	i2___flge@ff1+2,f,c
 46998  019E30  B0D8               	btfsc	status,0,c
 46999  019E32  2A03               	incf	i2___flge@ff1+2,f,c
 47000  019E34  0E80               	movlw	128
 47001  019E36  5604               	subfwb	i2___flge@ff1+3,f,c
 47002  019E38                     i2l19254:
 47003  019E38  AE08               	btfss	i2___flge@ff2+3,7,c
 47004  019E3A  D009               	goto	i2l2857
 47005  019E3C  6C05               	negf	i2___flge@ff2,c
 47006  019E3E  1E06               	comf	i2___flge@ff2+1,f,c
 47007  019E40  B0D8               	btfsc	status,0,c
 47008  019E42  2A06               	incf	i2___flge@ff2+1,f,c
 47009  019E44  1E07               	comf	i2___flge@ff2+2,f,c
 47010  019E46  B0D8               	btfsc	status,0,c
 47011  019E48  2A07               	incf	i2___flge@ff2+2,f,c
 47012  019E4A  0E80               	movlw	128
 47013  019E4C  5608               	subfwb	i2___flge@ff2+3,f,c
 47014  019E4E                     i2l2857:
 47015  019E4E  0E00               	movlw	0
 47016  019E50  1A01               	xorwf	i2___flge@ff1,f,c
 47017  019E52  0E00               	movlw	0
 47018  019E54  1A02               	xorwf	i2___flge@ff1+1,f,c
 47019  019E56  0E00               	movlw	0
 47020  019E58  1A03               	xorwf	i2___flge@ff1+2,f,c
 47021  019E5A  0E80               	movlw	128
 47022  019E5C  1A04               	xorwf	i2___flge@ff1+3,f,c
 47023  019E5E  0E00               	movlw	0
 47024  019E60  1A05               	xorwf	i2___flge@ff2,f,c
 47025  019E62  0E00               	movlw	0
 47026  019E64  1A06               	xorwf	i2___flge@ff2+1,f,c
 47027  019E66  0E00               	movlw	0
 47028  019E68  1A07               	xorwf	i2___flge@ff2+2,f,c
 47029  019E6A  0E80               	movlw	128
 47030  019E6C  1A08               	xorwf	i2___flge@ff2+3,f,c
 47031  019E6E  5005               	movf	i2___flge@ff2,w,c
 47032  019E70  5C01               	subwf	i2___flge@ff1,w,c
 47033  019E72  5006               	movf	i2___flge@ff2+1,w,c
 47034  019E74  5802               	subwfb	i2___flge@ff1+1,w,c
 47035  019E76  5007               	movf	i2___flge@ff2+2,w,c
 47036  019E78  5803               	subwfb	i2___flge@ff1+2,w,c
 47037  019E7A  5008               	movf	i2___flge@ff2+3,w,c
 47038  019E7C  5804               	subwfb	i2___flge@ff1+3,w,c
 47039  019E7E  B0D8               	btfsc	status,0,c
 47040  019E80  D002               	goto	i2l19260
 47041  019E82  90D8               	bcf	status,0,c
 47042  019E84  0012               	return	
 47043  019E86                     i2l19260:
 47044  019E86  80D8               	bsf	status,0,c
 47045  019E88  0012               	return		;funcret
 47046  019E8A                     __end_ofi2___flge:
 47047                           	opt callstack 0
 47048                           
 47049 ;; *************** function i2___fldiv *****************
 47050 ;; Defined at:
 47051 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 47052 ;; Parameters:    Size  Location     Type
 47053 ;;  b               4   18[COMRAM] unsigned char 
 47054 ;;  a               4   22[COMRAM] unsigned char 
 47055 ;; Auto vars:     Size  Location     Type
 47056 ;;  __fldiv         4   37[COMRAM] unsigned long 
 47057 ;;  __fldiv         4   30[COMRAM] unsigned long 
 47058 ;;  __fldiv         2   35[COMRAM] int 
 47059 ;;  __fldiv         1   42[COMRAM] unsigned char 
 47060 ;;  __fldiv         1   41[COMRAM] unsigned char 
 47061 ;;  __fldiv         1   34[COMRAM] unsigned char 
 47062 ;; Return value:  Size  Location     Type
 47063 ;;                  4   18[COMRAM] unsigned char 
 47064 ;; Registers used:
 47065 ;;		wreg, status,2, status,0
 47066 ;; Tracked objects:
 47067 ;;		On entry : 0/0
 47068 ;;		On exit  : 0/0
 47069 ;;		Unchanged: 0/0
 47070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47072 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47074 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47075 ;;Total ram usage:       25 bytes
 47076 ;; Hardware stack levels used:    1
 47077 ;; This function calls:
 47078 ;;		Nothing
 47079 ;; This function is called by:
 47080 ;;		_ADC_PostProcessingHandler
 47081 ;; This function uses a non-reentrant model
 47082 ;;
 47083                           
 47084                           	psect	text203
 47085  018194                     __ptext203:
 47086                           	opt callstack 0
 47087  018194                     i2___fldiv:
 47088                           	opt callstack 14
 47089                           
 47090                           ;incstack = 0
 47091  018194  5016               	movf	i2___fldiv@b+3,w,c
 47092  018196  0B80               	andlw	128
 47093  018198  6E23               	movwf	i2___fldiv@sign,c
 47094  01819A  5016               	movf	i2___fldiv@b+3,w,c
 47095  01819C  2416               	addwf	i2___fldiv@b+3,w,c
 47096  01819E  6E2A               	movwf	i2___fldiv@bexp,c
 47097  0181A0  BE15               	btfsc	i2___fldiv@b+2,7,c
 47098  0181A2  802A               	bsf	i2___fldiv@bexp,0,c
 47099  0181A4  502A               	movf	i2___fldiv@bexp,w,c
 47100  0181A6  B4D8               	btfsc	status,2,c
 47101  0181A8  D00D               	goto	i2l20290
 47102  0181AA  282A               	incf	i2___fldiv@bexp,w,c
 47103  0181AC  A4D8               	btfss	status,2,c
 47104  0181AE  D008               	goto	i2l20286
 47105  0181B0  0E00               	movlw	0
 47106  0181B2  6E13               	movwf	i2___fldiv@b,c
 47107  0181B4  0E00               	movlw	0
 47108  0181B6  6E14               	movwf	i2___fldiv@b+1,c
 47109  0181B8  0E00               	movlw	0
 47110  0181BA  6E15               	movwf	i2___fldiv@b+2,c
 47111  0181BC  0E00               	movlw	0
 47112  0181BE  6E16               	movwf	i2___fldiv@b+3,c
 47113  0181C0                     i2l20286:
 47114  0181C0  8E15               	bsf	i2___fldiv@b+2,7,c
 47115  0181C2  D006               	goto	L54
 47116  0181C4                     i2l20290:
 47117  0181C4  0E00               	movlw	0
 47118  0181C6  6E13               	movwf	i2___fldiv@b,c
 47119  0181C8  0E00               	movlw	0
 47120  0181CA  6E14               	movwf	i2___fldiv@b+1,c
 47121  0181CC  0E00               	movlw	0
 47122  0181CE  6E15               	movwf	i2___fldiv@b+2,c
 47123  0181D0                     L54:
 47124  0181D0  0E00               	movlw	0
 47125  0181D2  6E16               	movwf	i2___fldiv@b+3,c
 47126  0181D4  501A               	movf	i2___fldiv@a+3,w,c
 47127  0181D6  0B80               	andlw	128
 47128  0181D8  1A23               	xorwf	i2___fldiv@sign,f,c
 47129  0181DA  501A               	movf	i2___fldiv@a+3,w,c
 47130  0181DC  241A               	addwf	i2___fldiv@a+3,w,c
 47131  0181DE  6E2B               	movwf	i2___fldiv@aexp,c
 47132  0181E0  BE19               	btfsc	i2___fldiv@a+2,7,c
 47133  0181E2  802B               	bsf	i2___fldiv@aexp,0,c
 47134  0181E4  502B               	movf	i2___fldiv@aexp,w,c
 47135  0181E6  B4D8               	btfsc	status,2,c
 47136  0181E8  D00D               	goto	i2l20310
 47137  0181EA  282B               	incf	i2___fldiv@aexp,w,c
 47138  0181EC  A4D8               	btfss	status,2,c
 47139  0181EE  D008               	goto	i2l20306
 47140  0181F0  0E00               	movlw	0
 47141  0181F2  6E17               	movwf	i2___fldiv@a,c
 47142  0181F4  0E00               	movlw	0
 47143  0181F6  6E18               	movwf	i2___fldiv@a+1,c
 47144  0181F8  0E00               	movlw	0
 47145  0181FA  6E19               	movwf	i2___fldiv@a+2,c
 47146  0181FC  0E00               	movlw	0
 47147  0181FE  6E1A               	movwf	i2___fldiv@a+3,c
 47148  018200                     i2l20306:
 47149  018200  8E19               	bsf	i2___fldiv@a+2,7,c
 47150  018202  D006               	goto	L55
 47151  018204                     i2l20310:
 47152  018204  0E00               	movlw	0
 47153  018206  6E17               	movwf	i2___fldiv@a,c
 47154  018208  0E00               	movlw	0
 47155  01820A  6E18               	movwf	i2___fldiv@a+1,c
 47156  01820C  0E00               	movlw	0
 47157  01820E  6E19               	movwf	i2___fldiv@a+2,c
 47158  018210                     L55:
 47159  018210  0E00               	movlw	0
 47160  018212  6E1A               	movwf	i2___fldiv@a+3,c
 47161  018214  5017               	movf	i2___fldiv@a,w,c
 47162  018216  1018               	iorwf	i2___fldiv@a+1,w,c
 47163  018218  1019               	iorwf	i2___fldiv@a+2,w,c
 47164  01821A  101A               	iorwf	i2___fldiv@a+3,w,c
 47165  01821C  A4D8               	btfss	status,2,c
 47166  01821E  D017               	goto	i2l20324
 47167  018220  0E00               	movlw	0
 47168  018222  6E13               	movwf	i2___fldiv@b,c
 47169  018224  0E00               	movlw	0
 47170  018226  6E14               	movwf	i2___fldiv@b+1,c
 47171  018228  0E00               	movlw	0
 47172  01822A  6E15               	movwf	i2___fldiv@b+2,c
 47173  01822C  0E00               	movlw	0
 47174  01822E  6E16               	movwf	i2___fldiv@b+3,c
 47175  018230  0E80               	movlw	128
 47176  018232  1215               	iorwf	i2___fldiv@b+2,f,c
 47177  018234  0E7F               	movlw	127
 47178  018236  1216               	iorwf	i2___fldiv@b+3,f,c
 47179  018238                     i2l20318:
 47180  018238  5023               	movf	i2___fldiv@sign,w,c
 47181  01823A  1216               	iorwf	i2___fldiv@b+3,f,c
 47182  01823C  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 47183  018240  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 47184  018244  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 47185  018248  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 47186  01824C  0012               	return	
 47187  01824E                     i2l20324:
 47188  01824E  502A               	movf	i2___fldiv@bexp,w,c
 47189  018250  A4D8               	btfss	status,2,c
 47190  018252  D009               	goto	i2l20332
 47191  018254  0E00               	movlw	0
 47192  018256  6E13               	movwf	?i2___fldiv,c
 47193  018258  0E00               	movlw	0
 47194  01825A  6E14               	movwf	?i2___fldiv+1,c
 47195  01825C  0E00               	movlw	0
 47196  01825E  6E15               	movwf	?i2___fldiv+2,c
 47197  018260  0E00               	movlw	0
 47198  018262  6E16               	movwf	?i2___fldiv+3,c
 47199  018264  0012               	return	
 47200  018266                     i2l20332:
 47201  018266  502B               	movf	i2___fldiv@aexp,w,c
 47202  018268  C02A  F01B         	movff	i2___fldiv@bexp,??i2___fldiv
 47203  01826C  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 47204  01826E  5E1B               	subwf	??i2___fldiv,f,c
 47205  018270  0E00               	movlw	0
 47206  018272  5A1C               	subwfb	??i2___fldiv+1,f,c
 47207  018274  0E7F               	movlw	127
 47208  018276  241B               	addwf	??i2___fldiv,w,c
 47209  018278  6E24               	movwf	i2___fldiv@new_exp,c
 47210  01827A  0E00               	movlw	0
 47211  01827C  201C               	addwfc	??i2___fldiv+1,w,c
 47212  01827E  6E25               	movwf	i2___fldiv@new_exp+1,c
 47213  018280  C013  F01F         	movff	i2___fldiv@b,i2___fldiv@rem
 47214  018284  C014  F020         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 47215  018288  C015  F021         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 47216  01828C  C016  F022         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 47217  018290  0E00               	movlw	0
 47218  018292  6E13               	movwf	i2___fldiv@b,c
 47219  018294  0E00               	movlw	0
 47220  018296  6E14               	movwf	i2___fldiv@b+1,c
 47221  018298  0E00               	movlw	0
 47222  01829A  6E15               	movwf	i2___fldiv@b+2,c
 47223  01829C  0E00               	movlw	0
 47224  01829E  6E16               	movwf	i2___fldiv@b+3,c
 47225  0182A0  0E00               	movlw	0
 47226  0182A2  6E26               	movwf	i2___fldiv@grs,c
 47227  0182A4  0E00               	movlw	0
 47228  0182A6  6E27               	movwf	i2___fldiv@grs+1,c
 47229  0182A8  0E00               	movlw	0
 47230  0182AA  6E28               	movwf	i2___fldiv@grs+2,c
 47231  0182AC  0E00               	movlw	0
 47232  0182AE  6E29               	movwf	i2___fldiv@grs+3,c
 47233  0182B0  0E00               	movlw	0
 47234  0182B2  6E2B               	movwf	i2___fldiv@aexp,c
 47235  0182B4  D028               	goto	i2l3185
 47236  0182B6                     i2l20342:
 47237  0182B6  502B               	movf	i2___fldiv@aexp,w,c
 47238  0182B8  B4D8               	btfsc	status,2,c
 47239  0182BA  D011               	goto	i2l20350
 47240  0182BC  90D8               	bcf	status,0,c
 47241  0182BE  361F               	rlcf	i2___fldiv@rem,f,c
 47242  0182C0  3620               	rlcf	i2___fldiv@rem+1,f,c
 47243  0182C2  3621               	rlcf	i2___fldiv@rem+2,f,c
 47244  0182C4  3622               	rlcf	i2___fldiv@rem+3,f,c
 47245  0182C6  90D8               	bcf	status,0,c
 47246  0182C8  3613               	rlcf	i2___fldiv@b,f,c
 47247  0182CA  3614               	rlcf	i2___fldiv@b+1,f,c
 47248  0182CC  3615               	rlcf	i2___fldiv@b+2,f,c
 47249  0182CE  3616               	rlcf	i2___fldiv@b+3,f,c
 47250  0182D0  BE29               	btfsc	i2___fldiv@grs+3,7,c
 47251  0182D2  8013               	bsf	i2___fldiv@b,0,c
 47252  0182D4  90D8               	bcf	status,0,c
 47253  0182D6  3626               	rlcf	i2___fldiv@grs,f,c
 47254  0182D8  3627               	rlcf	i2___fldiv@grs+1,f,c
 47255  0182DA  3628               	rlcf	i2___fldiv@grs+2,f,c
 47256  0182DC  3629               	rlcf	i2___fldiv@grs+3,f,c
 47257  0182DE                     i2l20350:
 47258  0182DE  5017               	movf	i2___fldiv@a,w,c
 47259  0182E0  5C1F               	subwf	i2___fldiv@rem,w,c
 47260  0182E2  5018               	movf	i2___fldiv@a+1,w,c
 47261  0182E4  5820               	subwfb	i2___fldiv@rem+1,w,c
 47262  0182E6  5019               	movf	i2___fldiv@a+2,w,c
 47263  0182E8  5821               	subwfb	i2___fldiv@rem+2,w,c
 47264  0182EA  501A               	movf	i2___fldiv@a+3,w,c
 47265  0182EC  5822               	subwfb	i2___fldiv@rem+3,w,c
 47266  0182EE  A0D8               	btfss	status,0,c
 47267  0182F0  D009               	goto	i2l20356
 47268  0182F2  8C29               	bsf	i2___fldiv@grs+3,6,c
 47269  0182F4  5017               	movf	i2___fldiv@a,w,c
 47270  0182F6  5E1F               	subwf	i2___fldiv@rem,f,c
 47271  0182F8  5018               	movf	i2___fldiv@a+1,w,c
 47272  0182FA  5A20               	subwfb	i2___fldiv@rem+1,f,c
 47273  0182FC  5019               	movf	i2___fldiv@a+2,w,c
 47274  0182FE  5A21               	subwfb	i2___fldiv@rem+2,f,c
 47275  018300  501A               	movf	i2___fldiv@a+3,w,c
 47276  018302  5A22               	subwfb	i2___fldiv@rem+3,f,c
 47277  018304                     i2l20356:
 47278  018304  2A2B               	incf	i2___fldiv@aexp,f,c
 47279  018306                     i2l3185:
 47280  018306  0E19               	movlw	25
 47281  018308  642B               	cpfsgt	i2___fldiv@aexp,c
 47282  01830A  D7D5               	goto	i2l20342
 47283  01830C  501F               	movf	i2___fldiv@rem,w,c
 47284  01830E  1020               	iorwf	i2___fldiv@rem+1,w,c
 47285  018310  1021               	iorwf	i2___fldiv@rem+2,w,c
 47286  018312  1022               	iorwf	i2___fldiv@rem+3,w,c
 47287  018314  B4D8               	btfsc	status,2,c
 47288  018316  D011               	goto	i2l20368
 47289  018318  8026               	bsf	i2___fldiv@grs,0,c
 47290  01831A  D00F               	goto	i2l20368
 47291  01831C                     i2l20362:
 47292  01831C  90D8               	bcf	status,0,c
 47293  01831E  3613               	rlcf	i2___fldiv@b,f,c
 47294  018320  3614               	rlcf	i2___fldiv@b+1,f,c
 47295  018322  3615               	rlcf	i2___fldiv@b+2,f,c
 47296  018324  3616               	rlcf	i2___fldiv@b+3,f,c
 47297  018326  BE29               	btfsc	i2___fldiv@grs+3,7,c
 47298  018328  8013               	bsf	i2___fldiv@b,0,c
 47299  01832A  90D8               	bcf	status,0,c
 47300  01832C  3626               	rlcf	i2___fldiv@grs,f,c
 47301  01832E  3627               	rlcf	i2___fldiv@grs+1,f,c
 47302  018330  3628               	rlcf	i2___fldiv@grs+2,f,c
 47303  018332  3629               	rlcf	i2___fldiv@grs+3,f,c
 47304  018334  0624               	decf	i2___fldiv@new_exp,f,c
 47305  018336  A0D8               	btfss	status,0,c
 47306  018338  0625               	decf	i2___fldiv@new_exp+1,f,c
 47307  01833A                     i2l20368:
 47308  01833A  AE15               	btfss	i2___fldiv@b+2,7,c
 47309  01833C  D7EF               	goto	i2l20362
 47310  01833E  0E00               	movlw	0
 47311  018340  6E2B               	movwf	i2___fldiv@aexp,c
 47312  018342  AE29               	btfss	i2___fldiv@grs+3,7,c
 47313  018344  D017               	goto	i2l3196
 47314  018346  0EFF               	movlw	255
 47315  018348  1426               	andwf	i2___fldiv@grs,w,c
 47316  01834A  6E1B               	movwf	??i2___fldiv& (0+255),c
 47317  01834C  0EFF               	movlw	255
 47318  01834E  1427               	andwf	i2___fldiv@grs+1,w,c
 47319  018350  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 47320  018352  0EFF               	movlw	255
 47321  018354  1428               	andwf	i2___fldiv@grs+2,w,c
 47322  018356  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 47323  018358  0E7F               	movlw	127
 47324  01835A  1429               	andwf	i2___fldiv@grs+3,w,c
 47325  01835C  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 47326  01835E  501B               	movf	??i2___fldiv,w,c
 47327  018360  101C               	iorwf	??i2___fldiv+1,w,c
 47328  018362  101D               	iorwf	??i2___fldiv+2,w,c
 47329  018364  101E               	iorwf	??i2___fldiv+3,w,c
 47330  018366  B4D8               	btfsc	status,2,c
 47331  018368  D003               	goto	i2l3197
 47332  01836A                     i2u2657_40:
 47333  01836A  0E01               	movlw	1
 47334  01836C  6E2B               	movwf	i2___fldiv@aexp,c
 47335  01836E  D002               	goto	i2l3196
 47336  018370                     i2l3197:
 47337  018370  B013               	btfsc	i2___fldiv@b,0,c
 47338  018372  D7FB               	goto	i2u2657_40
 47339  018374                     i2l3196:
 47340  018374  502B               	movf	i2___fldiv@aexp,w,c
 47341  018376  B4D8               	btfsc	status,2,c
 47342  018378  D01F               	goto	i2l20388
 47343  01837A  0E01               	movlw	1
 47344  01837C  2613               	addwf	i2___fldiv@b,f,c
 47345  01837E  0E00               	movlw	0
 47346  018380  2214               	addwfc	i2___fldiv@b+1,f,c
 47347  018382  2215               	addwfc	i2___fldiv@b+2,f,c
 47348  018384  2216               	addwfc	i2___fldiv@b+3,f,c
 47349  018386  A016               	btfss	i2___fldiv@b+3,0,c
 47350  018388  D017               	goto	i2l20388
 47351  01838A  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 47352  01838E  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 47353  018392  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 47354  018396  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 47355  01839A  341E               	rlcf	??i2___fldiv+3,w,c
 47356  01839C  321E               	rrcf	??i2___fldiv+3,f,c
 47357  01839E  321D               	rrcf	??i2___fldiv+2,f,c
 47358  0183A0  321C               	rrcf	??i2___fldiv+1,f,c
 47359  0183A2  321B               	rrcf	??i2___fldiv,f,c
 47360  0183A4  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 47361  0183A8  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 47362  0183AC  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 47363  0183B0  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 47364  0183B4  4A24               	infsnz	i2___fldiv@new_exp,f,c
 47365  0183B6  2A25               	incf	i2___fldiv@new_exp+1,f,c
 47366  0183B8                     i2l20388:
 47367  0183B8  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 47368  0183BA  D010               	goto	i2l20392
 47369  0183BC  5025               	movf	i2___fldiv@new_exp+1,w,c
 47370  0183BE  E103               	bnz	i2u2661_40
 47371  0183C0  2824               	incf	i2___fldiv@new_exp,w,c
 47372  0183C2  A0D8               	btfss	status,0,c
 47373  0183C4  D00B               	goto	i2l20392
 47374  0183C6                     i2u2661_40:
 47375  0183C6  0E00               	movlw	0
 47376  0183C8  6E25               	movwf	i2___fldiv@new_exp+1,c
 47377  0183CA  6824               	setf	i2___fldiv@new_exp,c
 47378  0183CC  0E00               	movlw	0
 47379  0183CE  6E13               	movwf	i2___fldiv@b,c
 47380  0183D0  0E00               	movlw	0
 47381  0183D2  6E14               	movwf	i2___fldiv@b+1,c
 47382  0183D4  0E00               	movlw	0
 47383  0183D6  6E15               	movwf	i2___fldiv@b+2,c
 47384  0183D8  0E00               	movlw	0
 47385  0183DA  6E16               	movwf	i2___fldiv@b+3,c
 47386  0183DC                     i2l20392:
 47387  0183DC  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 47388  0183DE  D005               	goto	i2u2662_40
 47389  0183E0  5025               	movf	i2___fldiv@new_exp+1,w,c
 47390  0183E2  E111               	bnz	i2l20396
 47391  0183E4  0424               	decf	i2___fldiv@new_exp,w,c
 47392  0183E6  B0D8               	btfsc	status,0,c
 47393  0183E8  D00E               	goto	i2l20396
 47394  0183EA                     i2u2662_40:
 47395  0183EA  0E00               	movlw	0
 47396  0183EC  6E25               	movwf	i2___fldiv@new_exp+1,c
 47397  0183EE  0E00               	movlw	0
 47398  0183F0  6E24               	movwf	i2___fldiv@new_exp,c
 47399  0183F2  0E00               	movlw	0
 47400  0183F4  6E13               	movwf	i2___fldiv@b,c
 47401  0183F6  0E00               	movlw	0
 47402  0183F8  6E14               	movwf	i2___fldiv@b+1,c
 47403  0183FA  0E00               	movlw	0
 47404  0183FC  6E15               	movwf	i2___fldiv@b+2,c
 47405  0183FE  0E00               	movlw	0
 47406  018400  6E16               	movwf	i2___fldiv@b+3,c
 47407  018402  0E00               	movlw	0
 47408  018404  6E23               	movwf	i2___fldiv@sign,c
 47409  018406                     i2l20396:
 47410  018406  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 47411  01840A  A02A               	btfss	i2___fldiv@bexp,0,c
 47412  01840C  D002               	goto	i2l20402
 47413  01840E  8E15               	bsf	i2___fldiv@b+2,7,c
 47414  018410  D001               	goto	i2l20404
 47415  018412                     i2l20402:
 47416  018412  9E15               	bcf	i2___fldiv@b+2,7,c
 47417  018414                     i2l20404:
 47418  018414  90D8               	bcf	status,0,c
 47419  018416  302A               	rrcf	i2___fldiv@bexp,w,c
 47420  018418  6E16               	movwf	i2___fldiv@b+3,c
 47421  01841A  D70E               	goto	i2l20318
 47422  01841C                     __end_ofi2___fldiv:
 47423                           	opt callstack 0
 47424                           
 47425 ;; *************** function _fabs *****************
 47426 ;; Defined at:
 47427 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fabs.c"
 47428 ;; Parameters:    Size  Location     Type
 47429 ;;  d               4    4[COMRAM] unsigned char 
 47430 ;; Auto vars:     Size  Location     Type
 47431 ;;		None
 47432 ;; Return value:  Size  Location     Type
 47433 ;;                  4    4[COMRAM] unsigned char 
 47434 ;; Registers used:
 47435 ;;		wreg, status,2, status,0, cstack
 47436 ;; Tracked objects:
 47437 ;;		On entry : 0/0
 47438 ;;		On exit  : 0/0
 47439 ;;		Unchanged: 0/0
 47440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47445 ;;Total ram usage:        4 bytes
 47446 ;; Hardware stack levels used:    1
 47447 ;; Hardware stack levels required when called:    1
 47448 ;; This function calls:
 47449 ;;		i2___flneg
 47450 ;; This function is called by:
 47451 ;;		_ADC_PostProcessingHandler
 47452 ;; This function uses a non-reentrant model
 47453 ;;
 47454                           
 47455                           	psect	text204
 47456  01B7FE                     __ptext204:
 47457                           	opt callstack 0
 47458  01B7FE                     _fabs:
 47459                           	opt callstack 13
 47460                           
 47461                           ;incstack = 0
 47462  01B7FE  AE08               	btfss	fabs@d+3,7,c
 47463  01B800  D013               	goto	i2l3275
 47464  01B802  C005  F001         	movff	fabs@d,i2___flneg@f1
 47465  01B806  C006  F002         	movff	fabs@d+1,i2___flneg@f1+1
 47466  01B80A  C007  F003         	movff	fabs@d+2,i2___flneg@f1+2
 47467  01B80E  C008  F004         	movff	fabs@d+3,i2___flneg@f1+3
 47468  01B812  EC4B  F0DD         	call	i2___flneg	;wreg free
 47469  01B816  C001  F005         	movff	?i2___flneg,?_fabs
 47470  01B81A  C002  F006         	movff	?i2___flneg+1,?_fabs+1
 47471  01B81E  C003  F007         	movff	?i2___flneg+2,?_fabs+2
 47472  01B822  C004  F008         	movff	?i2___flneg+3,?_fabs+3
 47473  01B826  0012               	return	
 47474  01B828                     i2l3275:
 47475  01B828  C005  F005         	movff	fabs@d,?_fabs
 47476  01B82C  C006  F006         	movff	fabs@d+1,?_fabs+1
 47477  01B830  C007  F007         	movff	fabs@d+2,?_fabs+2
 47478  01B834  C008  F008         	movff	fabs@d+3,?_fabs+3
 47479  01B838  0012               	return		;funcret
 47480  01B83A                     __end_of_fabs:
 47481                           	opt callstack 0
 47482                           
 47483 ;; *************** function i2___flneg *****************
 47484 ;; Defined at:
 47485 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 47486 ;; Parameters:    Size  Location     Type
 47487 ;;  f1              4    0[COMRAM] unsigned char 
 47488 ;; Auto vars:     Size  Location     Type
 47489 ;;		None
 47490 ;; Return value:  Size  Location     Type
 47491 ;;                  4    0[COMRAM] unsigned char 
 47492 ;; Registers used:
 47493 ;;		wreg, status,2, status,0
 47494 ;; Tracked objects:
 47495 ;;		On entry : 0/0
 47496 ;;		On exit  : 0/0
 47497 ;;		Unchanged: 0/0
 47498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47503 ;;Total ram usage:        4 bytes
 47504 ;; Hardware stack levels used:    1
 47505 ;; This function calls:
 47506 ;;		Nothing
 47507 ;; This function is called by:
 47508 ;;		_fabs
 47509 ;;		i2__doprnt
 47510 ;; This function uses a non-reentrant model
 47511 ;;
 47512                           
 47513                           	psect	text205
 47514  01BA96                     __ptext205:
 47515                           	opt callstack 0
 47516  01BA96                     i2___flneg:
 47517                           	opt callstack 13
 47518                           
 47519                           ;incstack = 0
 47520  01BA96  5001               	movf	i2___flneg@f1,w,c
 47521  01BA98  1002               	iorwf	i2___flneg@f1+1,w,c
 47522  01BA9A  1003               	iorwf	i2___flneg@f1+2,w,c
 47523  01BA9C  1004               	iorwf	i2___flneg@f1+3,w,c
 47524  01BA9E  B4D8               	btfsc	status,2,c
 47525  01BAA0  D008               	goto	i2l19268
 47526  01BAA2  0E00               	movlw	0
 47527  01BAA4  1A01               	xorwf	i2___flneg@f1,f,c
 47528  01BAA6  0E00               	movlw	0
 47529  01BAA8  1A02               	xorwf	i2___flneg@f1+1,f,c
 47530  01BAAA  0E00               	movlw	0
 47531  01BAAC  1A03               	xorwf	i2___flneg@f1+2,f,c
 47532  01BAAE  0E80               	movlw	128
 47533  01BAB0  1A04               	xorwf	i2___flneg@f1+3,f,c
 47534  01BAB2                     i2l19268:
 47535  01BAB2  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 47536  01BAB6  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 47537  01BABA  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 47538  01BABE  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 47539  01BAC2  0012               	return		;funcret
 47540  01BAC4                     __end_ofi2___flneg:
 47541                           	opt callstack 0
 47542                           
 47543 ;; *************** function _TMR2_StartTimer *****************
 47544 ;; Defined at:
 47545 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 47546 ;; Parameters:    Size  Location     Type
 47547 ;;		None
 47548 ;; Auto vars:     Size  Location     Type
 47549 ;;		None
 47550 ;; Return value:  Size  Location     Type
 47551 ;;                  1    wreg      void 
 47552 ;; Registers used:
 47553 ;;		cstack
 47554 ;; Tracked objects:
 47555 ;;		On entry : 0/0
 47556 ;;		On exit  : 0/0
 47557 ;;		Unchanged: 0/0
 47558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47563 ;;Total ram usage:        0 bytes
 47564 ;; Hardware stack levels used:    1
 47565 ;; Hardware stack levels required when called:    1
 47566 ;; This function calls:
 47567 ;;		_TMR2_Start
 47568 ;; This function is called by:
 47569 ;;		_ADC_PostProcessingHandler
 47570 ;; This function uses a non-reentrant model
 47571 ;;
 47572                           
 47573                           	psect	text206
 47574  01C176                     __ptext206:
 47575                           	opt callstack 0
 47576  01C176                     _TMR2_StartTimer:
 47577                           	opt callstack 13
 47578                           
 47579                           ;tmr2.c: 116: TMR2_Start();
 47580                           
 47581                           ;incstack = 0
 47582  01C176  ECCE  F0E0         	call	_TMR2_Start	;wreg free
 47583  01C17A  0012               	return		;funcret
 47584  01C17C                     __end_of_TMR2_StartTimer:
 47585                           	opt callstack 0
 47586                           
 47587 ;; *************** function _TMR2_Start *****************
 47588 ;; Defined at:
 47589 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 47590 ;; Parameters:    Size  Location     Type
 47591 ;;		None
 47592 ;; Auto vars:     Size  Location     Type
 47593 ;;		None
 47594 ;; Return value:  Size  Location     Type
 47595 ;;                  1    wreg      void 
 47596 ;; Registers used:
 47597 ;;		None
 47598 ;; Tracked objects:
 47599 ;;		On entry : 0/0
 47600 ;;		On exit  : 0/0
 47601 ;;		Unchanged: 0/0
 47602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47607 ;;Total ram usage:        0 bytes
 47608 ;; Hardware stack levels used:    1
 47609 ;; This function calls:
 47610 ;;		Nothing
 47611 ;; This function is called by:
 47612 ;;		_TMR2_StartTimer
 47613 ;; This function uses a non-reentrant model
 47614 ;;
 47615                           
 47616                           	psect	text207
 47617  01C19C                     __ptext207:
 47618                           	opt callstack 0
 47619  01C19C                     _TMR2_Start:
 47620                           	opt callstack 13
 47621                           
 47622                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
 47623                           
 47624                           ;incstack = 0
 47625  01C19C  8EBD               	bsf	4029,7,c	;volatile
 47626  01C19E  0012               	return		;funcret
 47627  01C1A0                     __end_of_TMR2_Start:
 47628                           	opt callstack 0
 47629                           
 47630 ;; *************** function _ADCC_StopConversion *****************
 47631 ;; Defined at:
 47632 ;;		line 162 in file "mcc_generated_files/adcc.c"
 47633 ;; Parameters:    Size  Location     Type
 47634 ;;		None
 47635 ;; Auto vars:     Size  Location     Type
 47636 ;;		None
 47637 ;; Return value:  Size  Location     Type
 47638 ;;                  1    wreg      void 
 47639 ;; Registers used:
 47640 ;;		None
 47641 ;; Tracked objects:
 47642 ;;		On entry : 0/0
 47643 ;;		On exit  : 0/0
 47644 ;;		Unchanged: 0/0
 47645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47650 ;;Total ram usage:        0 bytes
 47651 ;; Hardware stack levels used:    1
 47652 ;; This function calls:
 47653 ;;		Nothing
 47654 ;; This function is called by:
 47655 ;;		_ADC_PostProcessingHandler
 47656 ;; This function uses a non-reentrant model
 47657 ;;
 47658                           
 47659                           	psect	text208
 47660  01C1A0                     __ptext208:
 47661                           	opt callstack 0
 47662  01C1A0                     _ADCC_StopConversion:
 47663                           	opt callstack 14
 47664                           
 47665                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 47666                           
 47667                           ;incstack = 0
 47668  01C1A0  9060               	bcf	3936,0,c	;volatile
 47669  01C1A2  0012               	return		;funcret
 47670  01C1A4                     __end_of_ADCC_StopConversion:
 47671                           	opt callstack 0
 47672                           
 47673 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 47674 ;; Defined at:
 47675 ;;		line 216 in file "mcc_generated_files/adcc.c"
 47676 ;; Parameters:    Size  Location     Type
 47677 ;;		None
 47678 ;; Auto vars:     Size  Location     Type
 47679 ;;		None
 47680 ;; Return value:  Size  Location     Type
 47681 ;;                  1    wreg      unsigned char 
 47682 ;; Registers used:
 47683 ;;		wreg
 47684 ;; Tracked objects:
 47685 ;;		On entry : 0/0
 47686 ;;		On exit  : 0/0
 47687 ;;		Unchanged: 0/0
 47688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47693 ;;Total ram usage:        0 bytes
 47694 ;; Hardware stack levels used:    1
 47695 ;; This function calls:
 47696 ;;		Nothing
 47697 ;; This function is called by:
 47698 ;;		_ADC_PostProcessingHandler
 47699 ;; This function uses a non-reentrant model
 47700 ;;
 47701                           
 47702                           	psect	text209
 47703  01C11E                     __ptext209:
 47704                           	opt callstack 0
 47705  01C11E                     _ADCC_HasAccumulatorOverflowed:
 47706                           	opt callstack 14
 47707                           
 47708                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 47709                           
 47710                           ;incstack = 0
 47711  01C11E  AE65               	btfss	3941,7,c	;volatile
 47712  01C120  D002               	goto	i2u2481_40
 47713  01C122  0E01               	movlw	1
 47714  01C124  0012               	return	
 47715  01C126                     i2u2481_40:
 47716  01C126  0E00               	movlw	0
 47717  01C128  0012               	return		;funcret
 47718  01C12A                     __end_of_ADCC_HasAccumulatorOverflowed:
 47719                           	opt callstack 0
 47720                           
 47721 ;; *************** function _ADCC_GetFilterValue *****************
 47722 ;; Defined at:
 47723 ;;		line 222 in file "mcc_generated_files/adcc.c"
 47724 ;; Parameters:    Size  Location     Type
 47725 ;;		None
 47726 ;; Auto vars:     Size  Location     Type
 47727 ;;		None
 47728 ;; Return value:  Size  Location     Type
 47729 ;;                  2    0[COMRAM] unsigned int 
 47730 ;; Registers used:
 47731 ;;		wreg, status,2, status,0
 47732 ;; Tracked objects:
 47733 ;;		On entry : 0/0
 47734 ;;		On exit  : 0/0
 47735 ;;		Unchanged: 0/0
 47736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47741 ;;Total ram usage:        4 bytes
 47742 ;; Hardware stack levels used:    1
 47743 ;; This function calls:
 47744 ;;		Nothing
 47745 ;; This function is called by:
 47746 ;;		_ADC_PostProcessingHandler
 47747 ;; This function uses a non-reentrant model
 47748 ;;
 47749                           
 47750                           	psect	text210
 47751  01BFA4                     __ptext210:
 47752                           	opt callstack 0
 47753  01BFA4                     _ADCC_GetFilterValue:
 47754                           	opt callstack 14
 47755                           
 47756                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 47757                           
 47758                           ;incstack = 0
 47759  01BFA4  5073               	movf	3955,w,c	;volatile
 47760  01BFA6  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 47761  01BFA8  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 47762  01BFAA  5072               	movf	3954,w,c	;volatile
 47763  01BFAC  2403               	addwf	??_ADCC_GetFilterValue,w,c
 47764  01BFAE  6E01               	movwf	?_ADCC_GetFilterValue,c
 47765  01BFB0  0E00               	movlw	0
 47766  01BFB2  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 47767  01BFB4  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 47768  01BFB6  0012               	return		;funcret
 47769  01BFB8                     __end_of_ADCC_GetFilterValue:
 47770                           	opt callstack 0
 47771                           
 47772 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 47773 ;; Defined at:
 47774 ;;		line 198 in file "mcc_generated_files/adcc.c"
 47775 ;; Parameters:    Size  Location     Type
 47776 ;;		None
 47777 ;; Auto vars:     Size  Location     Type
 47778 ;;		None
 47779 ;; Return value:  Size  Location     Type
 47780 ;;                  1    wreg      unsigned char 
 47781 ;; Registers used:
 47782 ;;		wreg, status,2
 47783 ;; Tracked objects:
 47784 ;;		On entry : 0/0
 47785 ;;		On exit  : 0/0
 47786 ;;		Unchanged: 0/0
 47787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47792 ;;Total ram usage:        0 bytes
 47793 ;; Hardware stack levels used:    1
 47794 ;; This function calls:
 47795 ;;		Nothing
 47796 ;; This function is called by:
 47797 ;;		_ADC_PostProcessingHandler
 47798 ;; This function uses a non-reentrant model
 47799 ;;
 47800                           
 47801                           	psect	text211
 47802  01C1A4                     __ptext211:
 47803                           	opt callstack 0
 47804  01C1A4                     _ADCC_GetCurrentCountofConversions:
 47805                           	opt callstack 14
 47806                           
 47807                           ;adcc.c: 201: return ADCNT;
 47808                           
 47809                           ;incstack = 0
 47810  01C1A4  5067               	movf	3943,w,c	;volatile
 47811  01C1A6  0012               	return		;funcret
 47812  01C1A8                     __end_of_ADCC_GetCurrentCountofConversions:
 47813                           	opt callstack 0
 47814                           
 47815 ;; *************** function _ADCC_GetConversionResult *****************
 47816 ;; Defined at:
 47817 ;;		line 130 in file "mcc_generated_files/adcc.c"
 47818 ;; Parameters:    Size  Location     Type
 47819 ;;		None
 47820 ;; Auto vars:     Size  Location     Type
 47821 ;;		None
 47822 ;; Return value:  Size  Location     Type
 47823 ;;                  2    0[COMRAM] unsigned int 
 47824 ;; Registers used:
 47825 ;;		wreg, status,2, status,0
 47826 ;; Tracked objects:
 47827 ;;		On entry : 0/0
 47828 ;;		On exit  : 0/0
 47829 ;;		Unchanged: 0/0
 47830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47835 ;;Total ram usage:        4 bytes
 47836 ;; Hardware stack levels used:    1
 47837 ;; This function calls:
 47838 ;;		Nothing
 47839 ;; This function is called by:
 47840 ;;		_ADC_PostProcessingHandler
 47841 ;; This function uses a non-reentrant model
 47842 ;;
 47843                           
 47844                           	psect	text212
 47845  01BFB8                     __ptext212:
 47846                           	opt callstack 0
 47847  01BFB8                     _ADCC_GetConversionResult:
 47848                           	opt callstack 14
 47849                           
 47850                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 47851                           
 47852                           ;incstack = 0
 47853  01BFB8  5064               	movf	3940,w,c	;volatile
 47854  01BFBA  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 47855  01BFBC  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 47856  01BFBE  5063               	movf	3939,w,c	;volatile
 47857  01BFC0  2403               	addwf	??_ADCC_GetConversionResult,w,c
 47858  01BFC2  6E01               	movwf	?_ADCC_GetConversionResult,c
 47859  01BFC4  0E00               	movlw	0
 47860  01BFC6  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 47861  01BFC8  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 47862  01BFCA  0012               	return		;funcret
 47863  01BFCC                     __end_of_ADCC_GetConversionResult:
 47864                           	opt callstack 0
 47865                           
 47866                           	psect	text213
 47867  000000                     __ptext213:
 47868                           	opt callstack 0
 47869                           
 47870                           	psect	rparam
 47871  0000                     
 47872                           	psect	temp
 47873  00005E                     btemp:
 47874                           	opt callstack 0
 47875  00005E                     	ds	1
 47876  0000                     int$flags	set	btemp
 47877  0000                     wtemp8	set	btemp+1
 47878  0000                     ttemp5	set	btemp+1
 47879  0000                     ttemp6	set	btemp+4
 47880  0000                     ttemp7	set	btemp+8
 47881                           tosu	equ	0xFFF
 47882                           tosh	equ	0xFFE
 47883                           tosl	equ	0xFFD
 47884                           stkptr	equ	0xFFC
 47885                           pclatu	equ	0xFFB
 47886                           pclath	equ	0xFFA
 47887                           pcl	equ	0xFF9
 47888                           tblptru	equ	0xFF8
 47889                           tblptrh	equ	0xFF7
 47890                           tblptrl	equ	0xFF6
 47891                           tablat	equ	0xFF5
 47892                           prodh	equ	0xFF4
 47893                           prodl	equ	0xFF3
 47894                           indf0	equ	0xFEF
 47895                           postinc0	equ	0xFEE
 47896                           postdec0	equ	0xFED
 47897                           preinc0	equ	0xFEC
 47898                           plusw0	equ	0xFEB
 47899                           fsr0h	equ	0xFEA
 47900                           fsr0l	equ	0xFE9
 47901                           wreg	equ	0xFE8
 47902                           indf1	equ	0xFE7
 47903                           postinc1	equ	0xFE6
 47904                           postdec1	equ	0xFE5
 47905                           preinc1	equ	0xFE4
 47906                           plusw1	equ	0xFE3
 47907                           fsr1h	equ	0xFE2
 47908                           fsr1l	equ	0xFE1
 47909                           bsr	equ	0xFE0
 47910                           indf2	equ	0xFDF
 47911                           postinc2	equ	0xFDE
 47912                           postdec2	equ	0xFDD
 47913                           preinc2	equ	0xFDC
 47914                           plusw2	equ	0xFDB
 47915                           fsr2h	equ	0xFDA
 47916                           fsr2l	equ	0xFD9
 47917                           status	equ	0xFD8


Data Sizes:
    Strings     5555
    Constant    948
    Data        38
    BSS         617
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     89     158
    BANK1           256     97     190
    BANK2           256    174     256
    BANK3           256     35     256
    BANK4           256     26     218
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2printf@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> i2_putch(), putch(), Absolute function(), 

    i2printf@pb.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.pTrFlag	PTR enum E9433 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_282(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK4[16]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK4[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK2[17]), OLED_RAM_Buffer.line2(BANK2[17]), OLED_RAM_Buffer.line1(BANK2[17]), 
		 -> OLED_RAM_Buffer.line0(BANK2[17]), OLED_RAM_Buffer(BANK2[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK2[17]), OLED_RAM_Buffer.line2(BANK2[17]), OLED_RAM_Buffer.line1(BANK2[17]), 
		 -> OLED_RAM_Buffer.line0(BANK2[17]), OLED_RAM_Buffer(BANK2[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_175(CODE[12]), STR_174(CODE[13]), STR_173(CODE[16]), STR_172(CODE[14]), 
		 -> STR_171(CODE[15]), STR_170(CODE[16]), STR_169(CODE[10]), STR_168(CODE[16]), 
		 -> STR_166(CODE[13]), STR_164(CODE[11]), STR_163(CODE[2]), STR_162(CODE[2]), 
		 -> STR_161(CODE[16]), STR_160(CODE[2]), STR_159(CODE[2]), STR_157(CODE[2]), 
		 -> STR_156(CODE[2]), STR_155(CODE[13]), STR_154(CODE[2]), STR_148(CODE[16]), 
		 -> STR_147(CODE[2]), STR_146(CODE[2]), STR_144(CODE[2]), STR_132(CODE[14]), 
		 -> STR_131(CODE[2]), STR_130(CODE[2]), STR_128(CODE[11]), STR_127(CODE[13]), 
		 -> STR_126(CODE[2]), STR_125(CODE[2]), STR_124(CODE[7]), STR_123(CODE[11]), 
		 -> STR_122(CODE[14]), STR_121(CODE[2]), STR_120(CODE[2]), STR_118(CODE[12]), 
		 -> STR_117(CODE[2]), STR_116(CODE[2]), STR_114(CODE[14]), STR_113(CODE[2]), 
		 -> STR_112(CODE[2]), STR_110(CODE[10]), STR_109(CODE[2]), STR_108(CODE[2]), 
		 -> STR_106(CODE[9]), STR_105(CODE[2]), STR_104(CODE[2]), STR_102(CODE[12]), 
		 -> STR_101(CODE[2]), STR_100(CODE[2]), STR_98(CODE[14]), STR_97(CODE[2]), 
		 -> STR_96(CODE[2]), STR_94(CODE[13]), STR_93(CODE[2]), STR_92(CODE[2]), 
		 -> STR_90(CODE[12]), STR_89(CODE[2]), STR_88(CODE[2]), STR_86(CODE[14]), 
		 -> STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[13]), STR_81(CODE[2]), 
		 -> STR_80(CODE[2]), STR_78(CODE[14]), STR_77(CODE[2]), STR_76(CODE[2]), 
		 -> STR_75(CODE[15]), STR_74(CODE[16]), STR_73(CODE[14]), STR_72(CODE[11]), 
		 -> STR_71(CODE[14]), STR_70(CODE[15]), STR_69(CODE[16]), STR_68(CODE[10]), 
		 -> STR_67(CODE[16]), OLED_updateHandler@rev_id_str(BANK3[17]), STR_65(CODE[13]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> STR_63(CODE[11]), STR_62(CODE[16]), STR_61(CODE[16]), STR_60(CODE[14]), 
		 -> STR_40(CODE[10]), STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), 
		 -> STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_20(CODE[10]), STR_19(CODE[6]), 
		 -> STR_18(CODE[14]), STR_17(CODE[9]), STR_16(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK2[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK2[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_208(CODE[5]), STR_207(CODE[22]), STR_206(CODE[14]), STR_204(CODE[18]), 
		 -> STR_202(CODE[17]), STR_200(CODE[17]), STR_184(CODE[15]), STR_182(CODE[6]), 
		 -> STR_179(CODE[6]), STR_176(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_310(CODE[2]), STR_309(CODE[3]), STR_308(CODE[3]), STR_307(CODE[3]), 
		 -> STR_306(CODE[3]), STR_305(CODE[3]), STR_304(CODE[3]), STR_303(CODE[3]), 
		 -> STR_302(CODE[3]), STR_301(CODE[3]), STR_300(CODE[2]), STR_299(CODE[3]), 
		 -> STR_298(CODE[3]), STR_297(CODE[3]), STR_296(CODE[3]), STR_295(CODE[3]), 
		 -> STR_294(CODE[3]), STR_293(CODE[3]), STR_292(CODE[3]), STR_291(CODE[3]), 
		 -> STR_290(CODE[2]), STR_289(CODE[2]), STR_288(CODE[2]), STR_287(CODE[2]), 
		 -> STR_286(CODE[2]), STR_285(CODE[2]), STR_284(CODE[2]), STR_283(CODE[2]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK4[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK4[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_337(CODE[11]), STR_167(CODE[7]), STR_165(CODE[5]), STR_158(CODE[11]), 
		 -> STR_153(CODE[11]), STR_152(CODE[11]), STR_151(CODE[11]), STR_150(CODE[11]), 
		 -> STR_149(CODE[9]), STR_145(CODE[11]), STR_143(CODE[11]), STR_142(CODE[11]), 
		 -> STR_141(CODE[11]), STR_140(CODE[11]), STR_139(CODE[9]), STR_138(CODE[11]), 
		 -> STR_137(CODE[9]), STR_136(CODE[8]), STR_135(CODE[9]), STR_134(CODE[8]), 
		 -> STR_133(CODE[9]), STR_129(CODE[9]), STR_119(CODE[7]), STR_115(CODE[7]), 
		 -> STR_111(CODE[7]), STR_107(CODE[7]), STR_103(CODE[8]), STR_99(CODE[7]), 
		 -> STR_95(CODE[7]), STR_91(CODE[7]), STR_87(CODE[7]), STR_83(CODE[7]), 
		 -> STR_79(CODE[7]), STR_66(CODE[7]), STR_64(CODE[5]), STR_57(CODE[11]), 
		 -> STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[12]), STR_53(CODE[11]), 
		 -> STR_52(CODE[10]), STR_51(CODE[10]), STR_50(CODE[9]), STR_49(CODE[11]), 
		 -> STR_48(CODE[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 559
		 -> STR_334(CODE[60]), STR_333(CODE[24]), STR_332(CODE[24]), STR_331(CODE[24]), 
		 -> STR_330(CODE[27]), STR_329(CODE[20]), STR_328(CODE[35]), STR_327(CODE[34]), 
		 -> STR_326(CODE[37]), STR_325(CODE[34]), STR_324(CODE[36]), STR_323(CODE[35]), 
		 -> STR_322(CODE[33]), STR_321(CODE[35]), STR_320(CODE[20]), STR_319(CODE[23]), 
		 -> STR_318(CODE[20]), STR_317(CODE[22]), STR_316(CODE[21]), STR_315(CODE[19]), 
		 -> STR_314(CODE[21]), STR_313(CODE[27]), STR_312(CODE[18]), STR_311(CODE[11]), 
		 -> terminalTextAttributes@print_string(BANK4[16]), STR_281(CODE[4]), STR_280(CODE[4]), STR_279(CODE[4]), 
		 -> STR_278(CODE[4]), STR_277(CODE[5]), STR_276(CODE[3]), STR_275(CODE[39]), 
		 -> STR_274(CODE[96]), STR_273(CODE[62]), STR_272(CODE[34]), STR_271(CODE[3]), 
		 -> STR_270(CODE[50]), STR_269(CODE[56]), STR_268(CODE[55]), STR_267(CODE[27]), 
		 -> STR_266(CODE[3]), STR_265(CODE[63]), STR_264(CODE[40]), STR_263(CODE[64]), 
		 -> STR_262(CODE[42]), STR_261(CODE[36]), STR_260(CODE[3]), STR_259(CODE[45]), 
		 -> STR_258(CODE[3]), STR_257(CODE[58]), STR_256(CODE[59]), STR_255(CODE[20]), 
		 -> STR_254(CODE[3]), STR_253(CODE[54]), STR_252(CODE[52]), STR_251(CODE[23]), 
		 -> STR_250(CODE[3]), STR_249(CODE[43]), STR_248(CODE[44]), STR_247(CODE[23]), 
		 -> STR_246(CODE[3]), STR_245(CODE[46]), STR_244(CODE[3]), STR_243(CODE[50]), 
		 -> STR_242(CODE[58]), STR_241(CODE[35]), STR_240(CODE[3]), STR_239(CODE[47]), 
		 -> STR_238(CODE[3]), STR_237(CODE[32]), STR_236(CODE[64]), STR_235(CODE[30]), 
		 -> STR_234(CODE[31]), STR_233(CODE[63]), STR_232(CODE[33]), STR_231(CODE[35]), 
		 -> STR_230(CODE[37]), STR_229(CODE[40]), STR_228(CODE[28]), STR_227(CODE[46]), 
		 -> STR_226(CODE[31]), STR_225(CODE[52]), STR_224(CODE[14]), STR_223(CODE[28]), 
		 -> STR_222(CODE[50]), STR_221(CODE[29]), STR_220(CODE[45]), STR_219(CODE[88]), 
		 -> STR_218(CODE[37]), STR_217(CODE[3]), STR_216(CODE[30]), STR_215(CODE[46]), 
		 -> STR_214(CODE[39]), STR_213(CODE[62]), STR_212(CODE[57]), STR_211(CODE[559]), 
		 -> STR_210(CODE[22]), STR_209(CODE[3]), STR_205(CODE[24]), STR_203(CODE[23]), 
		 -> STR_201(CODE[23]), STR_199(CODE[3]), STR_198(CODE[3]), STR_197(CODE[54]), 
		 -> STR_196(CODE[3]), STR_195(CODE[56]), STR_194(CODE[3]), STR_193(CODE[60]), 
		 -> STR_192(CODE[61]), STR_191(CODE[3]), STR_190(CODE[62]), STR_189(CODE[3]), 
		 -> STR_188(CODE[50]), STR_187(CODE[3]), STR_186(CODE[45]), STR_185(CODE[3]), 
		 -> STR_183(CODE[54]), STR_181(CODE[4]), STR_180(CODE[5]), STR_178(CODE[4]), 
		 -> STR_177(CODE[5]), STR_10(CODE[47]), STR_9(CODE[30]), STR_8(CODE[46]), 
		 -> STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), STR_4(CODE[39]), 
		 -> STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(BANK2[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), ftoa@buf(BANK3[17]), STR_335(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), freqMeasConvert@qi_period(BANK1[4]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK2[68]), getStringSecondsAsTime@buff(BANK3[20]), getStringSecondsAsTime@return_string(BANK3[40]), STR_47(CODE[10]), 
		 -> STR_46(CODE[13]), STR_45(CODE[13]), STR_44(CODE[12]), STR_43(CODE[12]), 
		 -> STR_42(CODE[13]), STR_41(CODE[12]), STR_30(CODE[16]), STR_29(CODE[22]), 
		 -> STR_28(CODE[21]), STR_27(CODE[27]), STR_26(CODE[41]), STR_25(CODE[32]), 
		 -> STR_24(CODE[19]), STR_23(CODE[16]), STR_22(CODE[15]), STR_21(CODE[16]), 
		 -> STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[14]), STR_12(CODE[9]), 
		 -> STR_11(CODE[5]), LM73Convert@Ambient_Conv(BANK2[2]), LM73Convert@POS5_Conv(BANK2[2]), LM73Convert@QI_Conv(BANK2[2]), 
		 -> NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 559
		 -> STR_337(CODE[11]), STR_334(CODE[60]), STR_333(CODE[24]), STR_332(CODE[24]), 
		 -> STR_331(CODE[24]), STR_330(CODE[27]), STR_329(CODE[20]), STR_328(CODE[35]), 
		 -> STR_327(CODE[34]), STR_326(CODE[37]), STR_325(CODE[34]), STR_324(CODE[36]), 
		 -> STR_323(CODE[35]), STR_322(CODE[33]), STR_321(CODE[35]), STR_320(CODE[20]), 
		 -> STR_319(CODE[23]), STR_318(CODE[20]), STR_317(CODE[22]), STR_316(CODE[21]), 
		 -> STR_315(CODE[19]), STR_314(CODE[21]), STR_313(CODE[27]), STR_312(CODE[18]), 
		 -> STR_311(CODE[11]), terminalTextAttributes@print_string(BANK4[16]), STR_281(CODE[4]), STR_280(CODE[4]), 
		 -> STR_279(CODE[4]), STR_278(CODE[4]), STR_277(CODE[5]), STR_276(CODE[3]), 
		 -> STR_275(CODE[39]), STR_274(CODE[96]), STR_273(CODE[62]), STR_272(CODE[34]), 
		 -> STR_271(CODE[3]), STR_270(CODE[50]), STR_269(CODE[56]), STR_268(CODE[55]), 
		 -> STR_267(CODE[27]), STR_266(CODE[3]), STR_265(CODE[63]), STR_264(CODE[40]), 
		 -> STR_263(CODE[64]), STR_262(CODE[42]), STR_261(CODE[36]), STR_260(CODE[3]), 
		 -> STR_259(CODE[45]), STR_258(CODE[3]), STR_257(CODE[58]), STR_256(CODE[59]), 
		 -> STR_255(CODE[20]), STR_254(CODE[3]), STR_253(CODE[54]), STR_252(CODE[52]), 
		 -> STR_251(CODE[23]), STR_250(CODE[3]), STR_249(CODE[43]), STR_248(CODE[44]), 
		 -> STR_247(CODE[23]), STR_246(CODE[3]), STR_245(CODE[46]), STR_244(CODE[3]), 
		 -> STR_243(CODE[50]), STR_242(CODE[58]), STR_241(CODE[35]), STR_240(CODE[3]), 
		 -> STR_239(CODE[47]), STR_238(CODE[3]), STR_237(CODE[32]), STR_236(CODE[64]), 
		 -> STR_235(CODE[30]), STR_234(CODE[31]), STR_233(CODE[63]), STR_232(CODE[33]), 
		 -> STR_231(CODE[35]), STR_230(CODE[37]), STR_229(CODE[40]), STR_228(CODE[28]), 
		 -> STR_227(CODE[46]), STR_226(CODE[31]), STR_225(CODE[52]), STR_224(CODE[14]), 
		 -> STR_223(CODE[28]), STR_222(CODE[50]), STR_221(CODE[29]), STR_220(CODE[45]), 
		 -> STR_219(CODE[88]), STR_218(CODE[37]), STR_217(CODE[3]), STR_216(CODE[30]), 
		 -> STR_215(CODE[46]), STR_214(CODE[39]), STR_213(CODE[62]), STR_212(CODE[57]), 
		 -> STR_211(CODE[559]), STR_210(CODE[22]), STR_209(CODE[3]), STR_205(CODE[24]), 
		 -> STR_203(CODE[23]), STR_201(CODE[23]), STR_199(CODE[3]), STR_198(CODE[3]), 
		 -> STR_197(CODE[54]), STR_196(CODE[3]), STR_195(CODE[56]), STR_194(CODE[3]), 
		 -> STR_193(CODE[60]), STR_192(CODE[61]), STR_191(CODE[3]), STR_190(CODE[62]), 
		 -> STR_189(CODE[3]), STR_188(CODE[50]), STR_187(CODE[3]), STR_186(CODE[45]), 
		 -> STR_185(CODE[3]), STR_183(CODE[54]), STR_181(CODE[4]), STR_180(CODE[5]), 
		 -> STR_178(CODE[4]), STR_177(CODE[5]), STR_167(CODE[7]), STR_165(CODE[5]), 
		 -> STR_158(CODE[11]), STR_153(CODE[11]), STR_152(CODE[11]), STR_151(CODE[11]), 
		 -> STR_150(CODE[11]), STR_149(CODE[9]), STR_145(CODE[11]), STR_143(CODE[11]), 
		 -> STR_142(CODE[11]), STR_141(CODE[11]), STR_140(CODE[11]), STR_139(CODE[9]), 
		 -> STR_138(CODE[11]), STR_137(CODE[9]), STR_136(CODE[8]), STR_135(CODE[9]), 
		 -> STR_134(CODE[8]), STR_133(CODE[9]), STR_129(CODE[9]), STR_119(CODE[7]), 
		 -> STR_115(CODE[7]), STR_111(CODE[7]), STR_107(CODE[7]), STR_103(CODE[8]), 
		 -> STR_99(CODE[7]), STR_95(CODE[7]), STR_91(CODE[7]), STR_87(CODE[7]), 
		 -> STR_83(CODE[7]), STR_79(CODE[7]), STR_66(CODE[7]), STR_64(CODE[5]), 
		 -> STR_57(CODE[11]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[12]), 
		 -> STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[10]), STR_50(CODE[9]), 
		 -> STR_49(CODE[11]), STR_48(CODE[10]), STR_10(CODE[47]), STR_9(CODE[30]), 
		 -> STR_8(CODE[46]), STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), 
		 -> STR_4(CODE[39]), STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    S4823__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4823__prbuf$ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(BANK2[5]), printf@pb(BANK2[5]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), QIErrorTimerHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), QIErrorTimerHandler(), Absolute function(), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK4[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK2[68]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_RAM_Buffer(BANK2[68]), STR_59(CODE[1]), STR_58(CODE[1]), 
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__getStringSecondsAsTime	PTR unsigned char  size(2) Largest target is 40
		 -> getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK4[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_47(CODE[10]), STR_46(CODE[13]), STR_45(CODE[13]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[13]), STR_41(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_40(CODE[10]), STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), 
		 -> STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), STR_36(CODE[11]), 
		 -> STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_29(CODE[22]), STR_28(CODE[21]), STR_27(CODE[27]), STR_26(CODE[41]), 
		 -> STR_25(CODE[32]), STR_24(CODE[19]), STR_23(CODE[16]), STR_22(CODE[15]), 
		 -> STR_21(CODE[16]), 

    sp__getNXQChargeStateStringCaps	PTR unsigned char  size(2) Largest target is 14
		 -> STR_20(CODE[10]), STR_19(CODE[6]), STR_18(CODE[14]), STR_17(CODE[9]), 
		 -> STR_16(CODE[5]), 

    sp__getNXQChargeStateString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[14]), STR_12(CODE[9]), 
		 -> STR_11(CODE[5]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_30(CODE[16]), STR_29(CODE[22]), STR_28(CODE[21]), STR_27(CODE[27]), 
		 -> STR_26(CODE[41]), STR_25(CODE[32]), STR_24(CODE[19]), STR_23(CODE[16]), 
		 -> STR_22(CODE[15]), STR_21(CODE[16]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK1[18]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK1[18]), 

    F10007.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWrite@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    F10002.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S2089$pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK1[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), NULL(NULL[0]), 

    S2104$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    S2104$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_heartbeatTimerHandler
    _heartbeatTimerHandler->i2___llmod
    i2_TMR1_Reload->i2_TMR1_WriteTimer
    i2_TMR3_Reload->i2_TMR3_WriteTimer
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___llmod->i2___lldiv
    i2___fltol->i2_scale
    _ADC_PostProcessingHandler->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _fabs->i2___flneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingHandler
    _ADC_PostProcessingHandler->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _INTERRUPT_InterruptManagerLow->_CCP2_CaptureISR
    _TMR3_ISR->i1_TMR3_WriteTimer
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _ADC_acquisitionTimerHandler->_ADCC_StartConversion
    _I2C2_ISR->_I2C2_Stop
    _CCP2_CaptureISR->_CCP2_CallBack
    _CCP2_CallBack->_freqMeasConvert
    _freqMeasConvert->i1___flmul
    i1___flmul->i1___fldiv
    i1___fldiv->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _ringBufferLUT->_printf
    _printErrorHandlerStatus->_printf
    _printCurrentMeasurements->_printf
    _terminalTextAttributesReset->_printf
    _terminalTextAttributes->_printf
    _getStringSecondsAsTime->_sprintf
    _getUserID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _clearUARTErrors->_updateErrorLEDs
    _clearI2CErrors->_updateErrorLEDs
    _clearADCErrors->_updateErrorLEDs
    _terminalSetCursorHome->_printf
    _terminalClearScreen->_printf
    _printf->_getStringSecondsAsTime
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_updateHandler->_sprintf
    _strcpy->_getCauseOfResetStringSmall
    _sprintf->__doprnt
    __doprnt->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_EUSART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _getYearsFromOnTime->___lldiv
    _getSecondsFromOnTime->___lldiv
    _getMinutesFromOnTime->___lldiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getHoursFromOnTime->___lldiv
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _getDaysFromOnTime->___lldiv
    _OLED_UpdateFromRAMBuffer->_OLED_WriteString
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C2_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C2_MasterWrite
    _LM73TempSensorInitialize->_I2C2_MasterWrite
    _LM73AcquisitionHandler->_LM73Convert
    _LM73Convert->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    _I2C2_MasterWrite->_I2C2_MasterWriteTRBBuild
    _I2C2_MasterRead->_I2C2_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _printf->_getStringSecondsAsTime

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1549033
                                             24 BANK4      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
             _LM73AcquisitionHandler
           _LM73TempSensorInitialize
                         _OLED_Clear
                          _OLED_Init
                 _OLED_updateHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
           _TMR2_SetInterruptHandler
                        _TMR3_Reload
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
              _freqMeasStartCaptures
                    _getCauseOfReset
              _getCauseOfResetString
                             _printf
                _terminalClearScreen
              _terminalSetCursorHome
             _terminalTextAttributes
        _terminalTextAttributesReset
            _terminal_ringBufferPull
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              7     7      0  951114
                                             34 BANK3      1     1      0
                                             18 BANK4      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        6     4      2  949936
                                             28 BANK3      6     4      2
                     _clearADCErrors
                     _clearI2CErrors
                    _clearUARTErrors
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
             _getStringSecondsAsTime
                          _getUserID
           _printCurrentMeasurements
            _printErrorHandlerStatus
                             _printf
                             _strcmp
                             _strlen
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4    1933
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) _printErrorHandlerStatus                              0     0      0  252976
                        _getADCError
                        _getI2CError
                       _getUARTError
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _printCurrentMeasurements                             0     0      0  346699
                            ___fldiv
            _getNXQChargeStateString
             _getStringSecondsAsTime
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributesReset                          0     0      0   77647
                             _printf
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributes                              20    18      2   97682
                                             26 BANK3      2     0      2
                                              0 BANK4     18    18      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     472
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (4) _getStringSecondsAsTime                              35    31      4   90330
                                            151 BANK2      8     4      4
                                              0 BANK3     26    26      0
                            ___lldiv
                             ___wmul
                            _sprintf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    6083
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (4) _getNXQChargeStateString                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             11 BANK2      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                    4     2      2     121
                                             13 BANK2      4     2      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (3) _clearUARTErrors                                      0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearI2CErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      1     1      0       0
                                              0 BANK2      1     1      0
                        _getADCError
                        _getI2CError
                       _getUARTError
 ---------------------------------------------------------------------------------
 (2) _getUARTError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getI2CError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminalSetCursorHome                                0     0      0   77647
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminalClearScreen                                  0     0      0   77647
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              15     7      8   77647
                                            159 BANK2     15     7      8
                            ___fldiv (ARG)
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
            _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      58
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _freqMeasStartCaptures                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     304
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_Reload                                          0     0      0     269
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2141
                    _ADCC_Initialize
                    _CCP2_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_updateHandler                                  36    36      0  147850
                                            151 BANK2      2     2      0
                                              0 BANK3     34    34      0
           _OLED_UpdateFromRAMBuffer
                            ___fldiv
         _getCauseOfResetStringSmall
                  _getDaysFromOnTime
                        _getDeviceID
                 _getHoursFromOnTime
                 _getMajorRevisionID
                 _getMinorRevisionID
               _getMinutesFromOnTime
        _getNXQChargeStateStringCaps
               _getSecondsFromOnTime
                 _getYearsFromOnTime
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4   16129
                                              3 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
        _getNXQChargeStateStringCaps (ARG)
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             19     7     12   74036
                                            132 BANK2     19     7     12
                            ___fldiv (ARG)
                            __doprnt
                  _getDaysFromOnTime (ARG)
                        _getDeviceID (ARG)
                 _getHoursFromOnTime (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
               _getMinutesFromOnTime (ARG)
               _getSecondsFromOnTime (ARG)
                 _getYearsFromOnTime (ARG)
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             57    51      6   65042
                                             76 BANK2     56    50      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4   12018
                                             39 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1513
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              6 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              1 BANK2      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Write                                        1     1      0      62
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4   10494
                                             39 BANK2     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     912
                                              0 BANK2      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1061
                                              5 BANK2      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     634
                                              0 BANK2     17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     634
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8    1062
                                             13 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     755
                                             48 BANK2     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5295
                                             68 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4102
                                             52 BANK2     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     284
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1136
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getYearsFromOnTime                                   5     1      4    4325
                                             13 BANK2      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _getSecondsFromOnTime                                13     9      4    8199
                                             13 BANK2     13     9      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getNXQChargeStateStringCaps                          2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getMinutesFromOnTime                                12     8      4    8041
                                             13 BANK2     12     8      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             11 BANK2      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             11 BANK2      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _getHoursFromOnTime                                  11     7      4    7883
                                             13 BANK2     11     7      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             11 BANK2      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                              4 BANK2      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDaysFromOnTime                                   10     6      4    7635
                                             13 BANK2     10     6      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3152
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    4201
                                              0 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (2) _getCauseOfResetStringSmall                           3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3393
                                              0 BANK2     25    17      8
 ---------------------------------------------------------------------------------
 (2) _OLED_UpdateFromRAMBuffer                             4     4      0   14918
                                             35 BANK2      4     4      0
                   _OLED_WriteString
                            _OLED_YX
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     940
                                              0 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (3) _OLED_YX                                              5     4      1    6177
                                             20 BANK2      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_WriteString                                     2     0      2    7405
                                             33 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    5724
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         4     4      0    5724
                                             16 BANK2      4     4      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    6756
                                             33 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (4) _OLED_PutChar                                        17    17      0    6620
                                             16 BANK2     17    17      0
                   _I2C2_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (5) _memmove                                             12     6      6     791
                                              0 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LM73TempSensorInitialize                             3     3      0    6046
                                             16 BANK2      3     3      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LM73AcquisitionHandler                               0     0      0   18271
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
                        _LM73Convert
 ---------------------------------------------------------------------------------
 (2) _LM73Convert                                          9     9      0   10346
                                             39 BANK2      9     9      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1620
                                              0 BANK2     14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    8171
                                             14 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     7     0      7    5567
                                              9 BANK2      7     0      7
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterWriteTRBBuild                             9     2      7     546
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7    2358
                                              9 BANK2      7     0      7
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterTRBInsert                                 6     2      4     546
                                              0 BANK2      6     2      4
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (7) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              9     2      7     577
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        9     9      0    5634
                                             88 BANK1      9     9      0
                   Absolute function *
                    _CCP2_CaptureISR
               _EUSART2_Transmit_ISR *
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR3_ISR                                            0     0      0     280
                   Absolute function *
          _QIIdleChargedTimerHandler *
       _TMR3_DefaultInterruptHandler *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIIdleChargedTimerHandler                           0     0      0     140
                      i1_TMR3_Reload
                   i1_TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_Reload                                       0     0      0     140
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR3_WriteTimer                                   2     0      2     140
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
        _ADC_acquisitionTimerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_acquisitionTimerHandler                         0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (13) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_ISR                                            2     2      0      31
                                              3 BANK1      2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C2_Stop                                           3     3      0      31
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2_CaptureISR                                     2     2      0    5301
                                             86 BANK1      2     2      0
                      _CCP2_CallBack
 ---------------------------------------------------------------------------------
 (11) _CCP2_CallBack                                       2     0      2    5254
                                             84 BANK1      2     0      2
                    _freqMeasConvert
 ---------------------------------------------------------------------------------
 (12) _freqMeasConvert                                     4     4      0    5156
                                             80 BANK1      4     4      0
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___flmul                                          25    17      8    1518
                                             55 BANK1     25    17      8
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1225
                                             30 BANK1     25    17      8
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fladd                                          16     8      8    2036
                                             14 BANK1     16     8      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     12    12      0   57139
                                             77 BANK0     12    12      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
                _QIErrorTimerHandler *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _QIErrorTimerHandler                                 0     0      0     140
                      i2_TMR1_Reload
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0     582
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _heartbeatTimerHandler *
 ---------------------------------------------------------------------------------
 (16) _heartbeatTimerHandler                               1     1      0     582
                                             22 COMRAM     1     1      0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0     368
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCBF3_ISR                                          0     0      0     254
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                 _QIChargeIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIChargeIOCHandler                                  0     0      0     254
                    _TMR3_StartTimer
                      i2_TMR1_Reload
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Reload                                       0     0      0     140
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCBF2_ISR                                          0     0      0     114
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                   _QIIdleIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIIdleIOCHandler                                    0     0      0     114
                    _TMR1_StartTimer
                    _TMR3_StartTimer
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) i2_TMR3_Reload                                       0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
               _rightCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _rightCapTouchHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                _leftCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _leftCapTouchHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0   39288
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) i2_printf                                            9     7      2   39288
                                             68 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (17) i2__doprnt                                          57    51      6   38760
                                             12 BANK0     56    50      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (18) i2_scale                                             9     5      4    6850
                                             68 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (19) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) i2_fround                                           13     9      4    5676
                                             68 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     442
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     451
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2__tdiv_to_l_                                      17     9      8     524
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (18) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (18) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     582
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (18) i2___fltol                                          10     6      4     442
                                             77 COMRAM    10     6      4
                          i2___flmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fleq                                           12     4      8     270
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16621
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADC_PostProcessingHandler *
 ---------------------------------------------------------------------------------
 (16) _ADC_PostProcessingHandler                          23    23      0   16621
                                             12 BANK0     23    23      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                    _TMR2_StartTimer
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flsub                                           8     0      8    3987
                                              4 BANK0      8     0      8
                _ADCC_GetFilterValue (ARG)
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fladd                                          16     8      8    3432
                                             81 COMRAM    12     4      8
                                              0 BANK0      4     4      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                               _fabs (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    4433
                                             43 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2___fldiv                                          25    17      8    2313
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _fabs                                                4     0      4     408
                                              4 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) i2___flneg                                           4     0      4     135
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (18) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _IOCBF2_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _LM73AcquisitionHandler
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
     _LM73Convert
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _LM73TempSensorInitialize
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _OLED_Clear
     _OLED_PutChar
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
   _OLED_updateHandler
     _OLED_UpdateFromRAMBuffer
       _OLED_WriteString
         _OLED_PutChar
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
       _strlen
     ___fldiv
     _getCauseOfResetStringSmall
     _getDaysFromOnTime
       ___lldiv
       ___wmul
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getHoursFromOnTime
       ___lldiv
       ___wmul
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinutesFromOnTime
       ___lldiv
       ___wmul
     _getNXQChargeStateStringCaps
     _getSecondsFromOnTime
       ___lldiv
       ___wmul
     _getYearsFromOnTime
       ___lldiv
     _sprintf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       _getDaysFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getHoursFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinutesFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getSecondsFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getYearsFromOnTime (ARG)
         ___lldiv
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getNXQChargeStateStringCaps (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CCP2_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _TMR2_SetInterruptHandler
   _TMR3_Reload
     _TMR3_WriteTimer
   _TMR3_SetInterruptHandler
   _TMR3_StopTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _freqMeasStartCaptures
   _getCauseOfReset
   _getCauseOfResetString
   _printf
     ___fldiv (ARG)
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
       ___flmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg *
       ___flsub *
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART2_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     _getCauseOfResetString (ARG)
     _getDeviceID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getNXQChargeStateString (ARG)
     _getStringSecondsAsTime (ARG)
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _getUserID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
   _terminalClearScreen
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalSetCursorHome
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalTextAttributes
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _strcat
     _strncpy
   _terminalTextAttributesReset
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _clearADCErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearI2CErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearUARTErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getStringSecondsAsTime
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printCurrentMeasurements
         ___fldiv
         _getNXQChargeStateString
         _getStringSecondsAsTime
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                           ___xxtofl (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                           ___xxtofl (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printErrorHandlerStatus
         _getADCError
         _getI2CError
         _getUARTError
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                           ___xxtofl (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                           ___xxtofl (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcmp
       _strlen
       _terminalTextAttributes
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminalTextAttributesReset
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                         ___xxtofl (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                       ___xxtofl (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                     ___xxtofl (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
     _strlen
   _updateErrorLEDs
     _getADCError
     _getI2CError
     _getUARTError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _CCP2_CaptureISR *
     _CCP2_CallBack
       _freqMeasConvert
         i1___fladd
           i1___xxtofl (ARG)
         i1___fldiv
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___flmul
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___fldiv (ARG)
             i1___fladd (ARG)
               i1___xxtofl (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___xxtofl
   _EUSART2_Transmit_ISR *
   _I2C2_BusCollisionISR *
   _I2C2_ISR *
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR2_ISR *
     Absolute function(Fake) *
     _ADC_acquisitionTimerHandler *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion
       _TMR2_StopTimer
         _TMR2_Stop
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR *
     Absolute function(Fake) *
     _QIIdleChargedTimerHandler *
       i1_TMR3_Reload
         i1_TMR3_WriteTimer
       i1_TMR3_StopTimer
     _TMR3_DefaultInterruptHandler *
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingHandler *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _TMR2_StartTimer
         _TMR2_Start
       _fabs
         i2___flneg
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fleq *
         i2___flge *
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
         i2___flsub *
           _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             _fabs (ARG)
               i2___flneg
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___lwdiv (ARG)
                   i2___lwmod (ARG)
                 i2___lwmod (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv
                 i2___lwmod (ARG)
               i2___lwmod
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _leftCapTouchHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _rightCapTouchHandler *
   _PIN_MANAGER_IOC *
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _QIIdleIOCHandler *
         _TMR1_StartTimer
         _TMR3_StartTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _QIChargeIOCHandler *
         _TMR3_StartTimer
         i2_TMR1_Reload
           i2_TMR1_WriteTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _heartbeatTimerHandler *
       i2___llmod
         i2___lldiv (ARG)
   _TMR1_ISR *
     Absolute function(Fake) *
     _QIErrorTimerHandler *
       i2_TMR1_Reload
         i2_TMR1_WriteTimer
       i2_TMR1_StopTimer
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     1A      DA      14       85.2%
BITBANK3           100      0       0      11        0.0%
BANK3              100     23     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     AE     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     61      BE       8       74.2%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     59      9E       5       98.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     493       6        0.0%
DATA                 0      0     493       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 13:00:21 2019

                              _temp_adc_offset EA47               __end_of_TMR2_SetInterruptHandler C044  
                                 ___fldiv@aexp 0218                                   ___fldiv@bexp 0217  
                                  i1___fladd@a 0112                                    i1___fladd@b 010E  
             ??_IOCBF3_DefaultInterruptHandler 0001                ?_IOCBF3_DefaultInterruptHandler 0001  
                                 ___fldiv@sign 0210                           ??_OLED_updateHandler 0297  
                    _QIIdleChargedTimerHandler BDA6                          __end_ofi1_TMR3_Reload C0D0  
                                  i1___fldiv@a 0122                                    i1___fldiv@b 011E  
                                  __CFG_CP$OFF 000000                          ?_I2C2_MasterTRBInsert 0200  
                                 ___awdiv@sign 020B                                    i1___flmul@a 013B  
                                  i1___flmul@b 0137                         __end_of_FVR_Initialize C112  
                        _freqMeasStartCaptures C12A                 __size_of_heartbeatTimerHandler 009E  
                                           bsr 000FE0                            ___wmul@multiplicand 0202  
                           i2___lwdiv@dividend 0006                  __end_of_heartbeatTimerHandler A58C  
                            ??_TMR5_WriteTimer 0202                 I2C2_MasterReadTRBBuild@address 0205  
                                   i1___xxtofl 9376                                            l122 B444  
                                          l115 B656                                            l124 B45A  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                     ?_printErrorHandlerStatus 0001                                    i2___fladd@a 0056  
                                  i2___fladd@b 0052                      _pos12_isns_average_buffer 0440  
                              _timer1ReloadVal 018F                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString A624  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 0205  
            __size_of_LM73TempSensorInitialize 0238                         ??_rightCapTouchHandler 0001  
                                 __CFG_IDLOC0$ 00000D                                     i2___xxtofl 94BA  
                                 __CFG_IDLOC1$ 00000E                                   __CFG_IDLOC2$ 00000A  
                                 __CFG_IDLOC3$ 00000D                                   __CFG_IDLOC4$ 00000B  
                                 __CFG_IDLOC5$ 00000E                                   __CFG_IDLOC6$ 00000E  
                                 __CFG_IDLOC7$ 00000F                                _TMR2_Initialize B944  
                                          prod 000FF3                      ?_LM73TempSensorInitialize 0001  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0030                                  i1___fladd@grs 011D  
                                  i2___flmul@b 002C                                    i2___flsub@a 0068  
                                  i2___flsub@b 0064                   __end_of_getSecondsFromOnTime 90E2  
                                 ___flmul@aexp 021B                                   ___flmul@bexp 0220  
                     __end_of_OLED_WriteString B00A                               OLED_Command@temp 0210  
                                 ___flmul@sign 021A                                   ___flmul@temp 0225  
                                 ___flmul@prod 0221                                   __CFG_LVP$OFF 000000  
                                _INT1_CallBack BC9E                                   __CFG_ZCD$OFF 000000  
                                i1___fldiv@grs 0131                                  i1___fldiv@rem 012A  
                             __end_of_I2C2_ISR 8910                                   ___fltol@exp1 0239  
                                         l1321 8A30                                           l3021 AC38  
                                         l3102 B4BC                                           l1270 8662  
                                         l2071 8DD6                                           l2128 9AAA  
                                         l3130 6C8E                                           l3131 6C6C  
                              _timer3ReloadVal 0193                                           l1269 8570  
                                         l2510 1314                                           l2086 4DD4  
                                         l2078 8EB2                                           l3215 61D2  
                                         l3232 6470                                           l3224 63EA  
                                         l2512 12E2                                           l3225 63E6  
                                         l2097 5098                                           l2089 4E28  
                                         l3146 6D60                                           l1570 AF80  
                                         l1562 AF60                                           l3155 6DC6  
                                         l2427 0B8A                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l3156 6DC2                                           l3092 B054  
                                         l2460 0D78                                           l1572 AF88  
                                         l1564 AF68                                           l2429 0B58  
                                         l2606 A9E8                                           l1574 AF90  
                                         l1566 AF70                                           l3263 92F2  
                                         l3256 9274                                           l2544 14FC  
                                         l1568 AF78                                           l3185 7DF4  
                                         l2481 10B4                                           l2393 099C  
                                         l2546 14CA                                           l2395 096A  
                                         l1860 A036                                           l3196 7E62  
                                         l1924 35DA                                           l3197 7E5E  
                         _ADCC_StartConversion C0D0                                           l2944 979E  
                                         l2857 9D7E                                           l2945 97C6  
                        __size_ofi2__div_to_l_ 00F4                                           STR_1 FFC6  
                                         STR_2 F238                                           STR_3 F4A2  
                                         STR_4 F5C3                                           STR_5 F04E  
                                         STR_6 EEAC                                           STR_7 F5EA  
                                         STR_8 F3EE                                           STR_9 F89B  
                              __end_of_OLED_YX B50A                                    ?_OLED_Clear 0001  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           _T2PR 000FBC  
                                         _PMD0 000EE1                                           _PMD1 000EE2  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         _PMD4 000EE5                                           _PMD5 000EE6  
                                         _TMR2 000FBB                          ??_leftCapTouchHandler 0001  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                _INT2_CallBack BC7A                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0001                                   i2___flge@ff2 0005  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write B43E  
              ??_ADCC_HasAccumulatorOverflowed 0001                       ??_LM73AcquisitionHandler 0230  
                                 i2___fleq@ff1 0001                                   i2___fleq@ff2 0005  
                                         _fabs B7FE                           __end_of_getUARTError C16A  
                      __end_of_CCP2_Initialize BCE4                                           _main 841C  
                                  i2__doprnt@c 00A3                                           _line 0340  
                                  i2__doprnt@f 006E                                  i1___flmul@grs 0144  
                       OLED_Command@data_array 0212                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                             i2___lwdiv@quotient 000B  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005E                 __size_of_ADCC_ClearAccumulator 0006  
                                 i2___flneg@f1 0001                                _OLED_RAM_Buffer 02BA  
            __size_of_INT2_SetInterruptHandler 000E                    I2C2_MasterReadTRBBuild@ptrb 0200  
                __end_of_ADCC_ClearAccumulator C176                                 _clearI2CErrors BE04  
                    ?_INT2_SetInterruptHandler 0200                     __size_ofi2_TMR3_WriteTimer 001C  
                                         prodh 000FF4                                           prodl 000FF3  
                               i1___fladd@aexp 011B                             _QIChargeIOCHandler BE3C  
                               i1___fladd@bexp 011C                                           start 00C2  
                              _timer5ReloadVal 0191                              ??_clearUARTErrors 0201  
                                 i2___fltol@f1 004E                                 _clearADCErrors BFDC  
                              ___fldiv@new_exp 0211                                __end_ofi2_scale 5A24  
                 __end_of_EUSART2_Transmit_ISR B9A8                                _TMR3_Initialize B152  
                              __end_ofi2_putch C15C                     ??_TMR1_SetInterruptHandler 0203  
                                __CFG_CSWEN$ON 000000                            _QIErrorTimerHandler BF26  
                                 ___param_bank 000000                        __end_of_updateErrorLEDs B3F8  
                         __size_of_getI2CError 0028                                  __CFG_SCANE$ON 000000  
                        __end_ofi2_TMR1_Reload C0EC                           __size_of_getADCError 0016  
                     __size_ofi2_EUSART2_Write 0042                            ?_QIChargeIOCHandler 0001  
                           __size_of_OLED_Init 0098                          __end_ofi2_TMR3_Reload C0FA  
                      __end_of_TMR0_Initialize BAEE                       ?_getNXQChargeStateString 0200  
                             __end_of_INT1_ISR C152                               __end_of_INT2_ISR C148  
                               i1___fldiv@aexp 0136                                 i1___fldiv@bexp 0135  
                                   _i2c2_state 00DC                 ??_TMR0_DefaultInterruptHandler 0001  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0211  
               __size_of_OSCILLATOR_Initialize 0018                                 i1___fldiv@sign 012E  
                          __size_of_IOCBF2_ISR 002A                            __size_of_IOCBF3_ISR 002A  
                __end_of_OSCILLATOR_Initialize BF10                                          l21014 4AF6  
                                        l21006 4AB6                                          l21040 4BA4  
                                        l21016 4AFC                                          l21026 4B3E  
                                        l22020 8CB8                                          l22004 8C60  
                                        l21044 4BC8                                          l21036 4B80  
                                        l22022 8CDA                                          l22006 8C82  
                                        l21062 BD5A                                          l21302 BD1A  
                                        l21048 4CB8                                          l22200 8560  
                      _I2C2_MasterReadTRBBuild B05E                                          l22052 8D68  
                                        l22036 8D10                                          l20620 BD3A  
                                        l21324 AF98                                          l22038 8D32  
                                        l20710 AF22                                          l21510 31F4  
                                        l21430 2FCE                                          l21414 2F6C  
                                        l22214 866E                                          l21360 B6DA  
                                        l20704 AF16                                          l20456 B658  
                                        l20466 B680                                          l20644 B284  
                                        l20716 AF2E                                          l20724 AF3A  
                                        l21700 3982                                          l20654 7A6A  
                                        l21366 B6E2                                          l21622 3512  
                                        l21606 34A0                                          l21542 32D8  
                                        l21526 3266                                          l21462 309E  
                                        l21446 3030                                          l20912 960E  
                                        l21720 3AB2                                          l21712 39EA  
                                        l20682 7C22                                          l20922 962A  
                                        l21810 3DE4                                          l21730 3B8E  
                                        l21706 39E0                                          l21394 2EB0  
                                        l21378 2E40                                          l22354 A5F4  
                                        l20668 7B46                                          l21820 8916  
                                        l20940 9672                                          l20924 963C  
                                        l20916 9616                                          l20844 BA5E  
                                        l20692 AEFE                                          l17100 B02A  
                                        l17020 A906                                          l21812 3DEA  
                                        l22356 A60A                                          l17006 648E  
                                        l20934 9658                                          l17110 B04A  
                                        l21742 3BF6                                          l21726 3B40  
                                        l21638 3584                                          l21590 342E  
                                        l21574 33BC                                          l21558 334A  
                                        l21494 3182                                          l21478 3110  
                                        l22358 A61A                                          l21920 8B40  
                                        l21904 8AE8                                          l21840 8980  
                                        l20952 96A0                                          l20936 966A  
                                        l20928 9644                                          l17120 B49A  
                                        l17200 BCFE                                          l17032 A92C  
                                        l21736 3BEC                                          l21656 360E  
                                        l21648 35C4                                          l21816 3DF6  
                                        l21906 8B0A                                          l21842 89A2  
                                        l21826 894A                                          l20946 9686  
                                        l20698 AF0A                                          l17210 974A  
                                        l17034 A934                                          l17026 A916  
                                        l21690 3846                                          l21666 364E  
                                        l20948 9698                                          l17052 A96C  
                                        l17044 A954                                          l18004 12EE  
                                        l20972 B29C                                          l21668 3698  
                                        l20980 4868                                          l21940 9A4E  
                                        l21932 9A20                                          l20958 96B4  
                                        l17310 99E4                                          l17126 B4B2  
                                        l17118 B492                                          l17150 76E2  
                                        l18014 1354                                          l18030 13F8  
                                        l20974 B2A6                                          l21758 3C64  
                                        l21694 38F4                                          l21686 3796  
                                        l21678 36CC                                          l21856 89D8  
                                        l19000 7D54                                          l17144 75F4  
                                        l17048 A95E                                          l17080 AB50  
                                        l17072 AB30                                          l17064 AB16  
                                        l18040 1466                                          l18024 13C4  
                                        l18016 1370                                          l20984 48A2  
                                        l21944 9A6C                                          l18114 B234  
                                        l21954 8B4E                                          l21890 8AB2  
                                        l21874 8A5A                                          l21858 89FA  
                                        l19010 7DA4                                          l17306 99D4  
                                        l17250 97F0                                          l17074 AB38  
                                        l17170 53C8                                          l18018 137E  
                                        l21794 3D82                                          l21778 3D20  
                                        l18210 AC82                                          l21946 9A8C  
                                        l21972 8BB0                                          l17332 A99A  
                                        l17316 99EC                                          l17084 AB5A  
                                        l17068 AB22                                          l17164 5318  
                                        l18036 143C                                          l18028 13EE  
                                        l18212 AC8E                                          l18204 AC54  
                                        l20988 48E4                                          l17502 9364  
                                        l21990 8C2A                                          l21974 8BD2  
                                        l21958 8B7A                                          l19030 7E0A  
                                        l17334 A9A6                                          l17422 A14E  
                                        l17406 A104                                          l17318 99F8  
                                        l17246 97E0                                          l17182 552C  
                                        l17174 53F8                                          l18070 15DC  
                                        l18054 14D6                                          l18126 BF22  
                                        l18150 BB66                                          l20998 49E4  
                                        l21888 8A90                                          l19024 7DF2  
                                        l17344 A9DA                                          l16720 6BC4  
                                        l17440 A18E                                          l17432 A166  
                                        l17256 97F8                                          l17088 AB68  
                                        l18064 153C                                          l18048 149C  
                                        l17600 026E                                          l18216 AC9E  
                                        l19018 7DCC                                          l17362 A844  
                                        l17434 A172                                          l17426 A15E  
                                        l17450 AC02                                          l17266 993A  
                                        l17258 9804                                          l17098 B022  
                                        l18082 16A2                                          l17610 02B6  
                                        l17532 A428                                          l21988 8C08  
                                        l18156 BA72                                          l19060 7ECA  
                                        l19036 7E28                                          l16804 6CEA  
                                        l16716 6BC0                                          l17188 55DC  
                                        l18084 16BE                                          l18076 1650  
                                        l18068 155A                                          l18180 AE6C  
                                        l17534 A434                                          l18158 BA78  
                                        l19070 7F00                                          l17366 A862  
                                        l17358 A810                                          l17382 9D68  
                                        l17374 9D1E                                          l16822 6D84  
                                        l16814 6D50                                          l17294 99B8  
                                        l17286 9988                                          l18078 1666  
                                        l18086 16CC                                          l17702 06CA  
                                        l17622 031E                                          l17606 02A6  
                                        l17542 0004                                          l18174 AE4C  
                                        l17528 A414                                          l16912 61BE  
                                        l17472 92A2                                          l18192 A2D6  
                                        l19072 7F02                                          l19064 7EF4  
                                        l19056 7EA6                                          l16832 6D9A  
                                        l16728 6BE4                                          l17456 AC2A  
                                        l17448 ABF6                                          l16664 B446  
                                        l17800 0AC4                                          l17640 0406  
                                        l17624 0328                                          l17632 038E  
                                        l17608 02B0                                          l17552 0078  
                                        l18176 AE52                                          l16922 61F0  
                                        l16914 61C2                                          l17474 92A8  
                                        l17466 9284                                          l17378 9D52  
                                        l16770 6C7A                                          l17714 0780  
                                        l17706 0714                                          l17650 048E  
                                        l17634 03A2                                          l17618 0308  
                                        l17570 010C                                          l17554 008A  
                                        l17562 009E                                          l18178 AE62  
                                        ?_fabs 0005                                          l17484 9318  
                                        l17476 92B4                                          l18188 A2A0  
                                        l17388 9DB6                                          l17396 B9F6  
                                        l16772 6C7E                                          l16692 6B78  
                                        l16676 B47A                                          l17900 100C  
                                        l17820 0B64                                          l17804 0AEE  
                                        l17732 088C                                          l17628 0364  
                                        l17660 051C                                          l17556 0090  
                                        l17548 004A                                          l17486 9324  
                                        l17478 92DA                                          l16870 6E3A  
                                        l16838 6DA4                                          l16758 6C20  
                                        l16678 B47C                                          l17910 1068  
                                        l17902 1014                                          l17830 0BCA  
                                        l17814 0B2A                                          l17806 0AF6  
                                        l17750 08F8                                          l17734 0890  
                                        l17718 07AE                                          l17654 04A0  
                                        l17646 0456                                          l17590 0254  
                                        l17558 0096                                          l19510 B9CE  
                                        l18710 5E3C                                          l16872 6E3C  
                                        l16696 6B7C                                          l17920 10EA  
                                        l17912 109A                                          l17728 0814  
                                        l17904 101E                                          l17648 046A  
                                        l17584 01D4                                          l18800 AEC6  
                                        l18712 5E54                                          l16970 63B0  
                                        l16866 6E32                                          l16858 6E0C  
                                        l16794 6CD4                                          l16786 6CB2  
                                        l17930 113C                                          l17922 111E  
                                        l17850 0D22                                          l17842 0CAE  
                                        l17834 0BE6                                          l17770 0976  
                                        l17754 0912                                          l17746 08CE  
                                        l17690 061C                                          l17674 0590  
                                        l17666 0532                                          l17594 0262  
                                        l17658 04A6                                          l18730 5F26  
                                        l18714 5E6C                                          l18706 5E0C  
                                        l18722 5EB4                                          l16964 6392  
                                        l18900 AD44                                          l16796 6CD8  
                                        l17844 0CDA                                          l17780 09DC  
                                        l17764 093C                                          l17596 0266  
                                        l17588 0228                                          l18740 5F9E  
                                        l18732 5F3E                                          l18716 5E84  
                                        l18708 5E24                                          l18724 5EDE  
                                        l16990 642E                                          l16894 617E  
                                        l17942 117A                                          l17870 0DC6  
                                        l17862 0D7C                                          l17854 0D4C  
                                        l17846 0CE6                                          l17782 09F8  
                                        l17598 026A                                          l19550 A5A2  
                                        l18806 AED2                                          l18814 AEDE  
                                        l18822 5A40                                          l18750 601C  
                                        l18742 5FB6                                          l18734 5F56  
                                        l18726 5EF6                                          l18718 5E9C  
                                        l19710 5018                                          l16896 6182  
                                        l19624 AFB4                                          l17944 117E  
                                        l17960 11D2                                          l17928 1138  
                                        l17856 0D54                                          l17792 0A6E  
                                        l17784 0A08                                          l19544 A598  
                                        l18760 6094                                          l18752 6034  
                                        l18736 5F6E                                          l18728 5F0E  
                                        l19712 5036                                          l19632 B104  
                                        l16994 644C                                          l16898 6192  
                                        l17890 0F9A                                          l17874 0DF0  
                                        l17794 0A76                                          l17698 069C  
                                        l19562 A5B6                                          l19538 A58E  
                                        l18818 5A2C                                          l18762 60AC  
                                        l18754 604C                                          l18770 60F4  
                                        l18738 5F86                                          l18746 5FCE  
                                        l19650 8DC0                                          l19634 B10C  
                                        l19628 AFE0                                          l17980 1256  
                                        l17964 11F2                                          l17892 0FA6  
                                        l17796 0A88                                          l17788 0A44  
                                        l19556 A5AC                                          l18844 5C14  
                                        l18764 60C4                                          l18756 6064  
                                        l18772 612A                                          l18748 6004  
                                        l17982 125E                                          l17974 1234  
                                        l17958 11BC                                          l17886 0F1A  
                                        l17878 0E52                                          l19574 A5CA  
                                        l19582 A5D4                                          l18782 AEA2  
                                        l18854 5C72                                          l18846 5C30  
                                        l18766 60DC                                          l18758 607C  
                                        l19718 5056                                          l19654 8DFA  
                                ___fltol@sign1 0238                                          l18928 A0AC  
                                        l17968 1212                                          l17896 0FE2  
                                        l17888 0F46                                          l19568 A5C0  
                                        l18864 5CD0                                          l18856 5C8E  
                                        l18848 5C46                                          l19672 8E86  
                                        l19664 8E5A                                          l19680 8ED6  
                                        l19656 8E1C                                          l18954 7CAE  
                                        l17986 1282                                          l18794 AEBA  
                                        l18874 5D2E                                          l18866 5CEC  
                                        l18858 5CA4                                          l18698 5DD4  
                                        l19682 8EF8                                          l17988 128A  
                                        l18788 AEAE                                          l18884 5D8C  
                                        l18876 5D4A                                          l18868 5D02  
                                        l19676 8E9C                                          l19668 8E70  
                                        l18974 7CEE                                          l18958 7CB2  
                                        l17998 12B4                                          l18886 5DA8  
                                        l18878 5D60                                          l19694 4D82  
                                        l19686 8F44                                          l18992 7D3C  
                                        l18888 5DBE                                          l18986 7D26  
                                        l18978 7CF2                                          l19698 4DAA  
                   __size_of_getDaysFromOnTime 0090                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                              __end_of___fladd 6E58                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 7F0A  
                                        _ADREF 000F58                                __end_of___awdiv A976  
                              __end_of___flneg BA08                                          _ADPRE 000F5E  
                                        STR_10 F363                                          STR_11 FFB5  
                                        STR_12 FF3F                                          STR_20 FEFE  
                                        STR_13 FD24                                          STR_21 FC11  
                                        STR_30 FC11                                          STR_14 FF9B  
                                        STR_22 FC6D                                          STR_15 FF08  
                                        STR_23 FC21                                          STR_31 FEFE  
                                        STR_40 FEFE                                          STR_16 FFB0  
                                        STR_24 FB47                                          STR_32 FEF4  
                                        STR_17 FD6A                                          STR_41 FE08  
                                        STR_25 F52C                                          STR_33 FEEA  
                                        STR_50 FF36                                          STR_42 FDA7  
                                        STR_18 FD16                                          STR_26 F523  
                                        STR_34 FE98                                          STR_19 FF95  
                                        STR_51 FED6                                          STR_43 FDF0  
                                        STR_27 F95F                                          STR_35 FEA4  
                                        STR_52 FECC                                          STR_44 FDFC  
                                        STR_60 FC98                                          STR_28 FACF  
                                        STR_36 FEA3                                __end_of___awmod AB72  
                                        STR_53 FE6C                                          STR_45 FD8D  
                                        STR_61 FBF1                                          STR_29 FA8F  
                                        STR_37 FC5E                                          STR_54 FDE4  
                                        STR_46 FD9A                                          STR_70 FC4F  
                                        STR_62 FBE1                                          STR_38 FE82  
                                        STR_47 FEFE                                          STR_63 FE2A  
                                        STR_55 FD80                                          STR_71 FCFA  
                                        STR_39 FE8D                                          STR_80 FDEE  
                                        STR_64 FFAB                                          STR_56 FEE0  
                                        STR_48 FEC2                                          STR_72 FE35  
                                        _ADRPT 000F66                                          STR_81 FDEE  
                                        STR_57 FE77                                          STR_49 FE61  
                                        STR_65 FD32                                          STR_73 FD08  
                                        STR_66 FF7B                                          STR_90 FDCC  
                                        STR_82 FD3F                                          STR_74 FBB1  
                                        STR_91 FF5F                                          STR_83 FF6D  
                                        STR_75 FC40                                          STR_67 FBD1  
                                        STR_92 FDEE                                          STR_84 FDEE  
                                        STR_76 FDEE                                          STR_68 FEB8  
                                        STR_93 FDEE                                          STR_85 FDEE  
                                        STR_77 FDEE                                          STR_69 FC01  
                            __end_of_I2C2_Stop B54E                                          STR_94 FD59  
                                        STR_86 FCEC                                          STR_78 FCA6  
                                        STR_95 FF74                                          STR_79 FF6D  
                                        STR_87 FF5F                                          STR_96 FDEE  
                                        STR_88 FDEE                                __end_of___flmul 64A4  
                                        STR_97 FDEE                                          STR_89 FDEE  
                                        STR_98 FCDE                                          STR_99 FF74  
                              __end_of___flsub B36A                                __end_of___fltol A1A0  
                              _TMR1_StartTimer C198                                __end_of___lldiv A9FA  
                                        _T1CLK 000FD2                                          u21000 9928  
                                        u20140 6C42                                ___awdiv@divisor 0208  
                                        u20150 6C52                                          u21120 A85E  
                                        u20400 6E18                                          u20320 6DA8  
                                        u20160 6C54                                          u21200 A122  
                                        _T1CON 000FCF                                __end_of___llmod AC4A  
                                        u20340 6DBC                                          u21060 99FE  
                                        u21205 A118                                          u20510 61DE  
                                        u20190 6C96                                          _T3CLK 000FCC  
                                        u20600 643C                                          u20520 6354  
                                        u21080 A9AA                                          u21240 A178  
                                        u22040 0B04                                          u22008 0A2E  
                                        _T2CON 000FBD                                          u20610 645A  
                                        u21500 0156                                          u20525 634A  
                                        u21350 932E                                          u21190 A0F2  
                                        u21270 AC06                                          u22038 0AAE  
                                        u21510 0192                                          u20560 63E0  
                                        u24000 A0DC                                          u20720 AB3C  
                                        u22128 0BB4                                          u21600 02EA  
                                        u21520 019A                                          _T3CON 000FC9  
                                        u21530 01BC                                          u21507 014C  
                                        u20660 A938                                          u22228 0DB0  
                                        u22180 0D62                                          u22148 0C96  
                                        u21700 0440                                          u21460 00C0  
                                        u21517 0188                                          u22190 0D72  
                                        u21550 020C                                          u20911 972E  
                                        _T5CLK 000FC6                                          u20920 9738  
                                        u20760 B02E                                          u22248 0F02  
                                        u22088 0B42                                          u21800 06DA  
                                        u21720 04D6                                          u21560 024A  
                                        u21480 00FA                                          u21537 01B2  
                                        u24210 7EB4                                          u22178 0D0C  
                                        u21810 0726                                          u21458 0034  
                                        u20931 975A                                          u21707 0436  
                                        u21467 00B6                                          u24220 7ED8  
                                        u22620 1476                                          u22508 12CC  
                                        _T2HLT 000FBE                                          u21557 0202  
                                        u20790 B49E                                          u22278 0FCC  
                                        u21590 02E4                                          u21727 04CC  
                                        u21567 0240                                          u21487 00F0  
                                        u21840 0780                                          _T5CON 000FC3  
                                        u24170 7E58                                          u22730 16DE  
                                        u22618 1426                                          u21690 03FC  
                                        u21658 034E                                          u25050 5008  
                                        u22740 170E                                          u22708 1526  
                                        u22548 133E                                          u21597 02DA  
                                        u20990 980A                                          u22750 171A  
                                        u22590 1400                                          u22830 BB62  
                                        u25070 5046                                          u22728 168C  
                                        u21688 03C8                                          u21697 03F2  
                                        u21689 03FE                                          u22578 13AE  
                                        u22747 1704                                          u22668 14B4  
                                        u21948 0954                                          u22780 BF1E  
                                        u22860 AE96                                 __CFG_DEBUG$OFF 000000  
                                        u28000 8BAA                                          u23920 AD74  
                                        u22867 AE8C                                          u23940 A032  
                                        u21988 09C6                                          u24900 B146  
                                        u28120 8C5A                                          u27400 B6FA  
                                        u27410 B70C                                __end_of___lwdiv B05E  
                                        u28300 8D62                                          u28060 8C02  
                                        u24860 AFD6                                          u27500 3A16  
                                        u24845 B7B2                                          u24870 B002  
                                        u27510 3AC2                                          u27430 35AC  
                                        u24855 B4F4                                          u28240 8D0A  
                   _ADCC_ADTI_InterruptHandler 017A                                          u27450 3636  
                                        u26715 7ACC                                          u24867 AFCC  
                                        u28180 8CB2                                          u24877 AFF8  
                                        u27710 8A2A                                          u27470 37AA  
                                        u26735 7BA8                                          u27480 3858  
                                        u27650 89D2                                          u26930 B2D0  
                                        u27490 3904                                          u27900 9A44  
                                        _T2TMR 000FBB                 __size_of_I2C2_FunctionComplete 001A  
                                        u27830 8AE2                                          u27590 897A  
                                        u26695 79F0                                          i1l136 B9A2  
                                        u26937 B2C6                                          i1l250 009A  
                                        u27770 8A8A                                          _T2RST 000FC0  
                                        i1l251 0090                                          i1l243 004C  
                                        i1l245 0058                                          u26990 4A32  
                                        i1l247 0064                                          i1l249 0070  
                              __end_of___lwmod B4C6                                          i2l122 B594  
                                        u27890 8B3A                                          i2l124 B5AA  
                                        i2l230 9F00                                          u28767 8430  
                                        i2l144 A358                                          i2l232 9F0C  
                                        i2l224 9EC8                                          i2l233 9F22  
                                        i2l234 9F18                                          i2l226 9ED4  
                                        i2l228 9EF4                                          i1l940 8734  
                                        i1l943 8740                                          i1l953 87FA  
                                        i1l937 86D4                                          i1l971 88A6  
                                        i1l963 883C                                          i1l948 877C  
                                        i1l949 878E                                          i1l966 8858  
                                        i1l967 886E                                          i1l959 8808  
                              ___awdiv@counter 020A                  __end_of_I2C2_FunctionComplete BEDE  
                                        _OSCEN 000EDC                                          _TMR0H 000FD4  
                                        _TMR1H 000FCE                                          _TMR0L 000FD3  
                     _OLED_UpdateFromRAMBuffer 95FA                                          _TMR3H 000FC8  
                                        _TMR1L 000FCD                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                 i2__div_to_l_ 9B04                                __end_of__doprnt 1724  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A              __size_of_TMR0_SetInterruptHandler 000E  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000              __size_of_TMR3_SetInterruptHandler 000E  
                    ?_TMR0_SetInterruptHandler 0200                        terminalTextAttributes@i 04D1  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                         ?_QIErrorTimerHandler 0001                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0063                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                    ?_TMR3_SetInterruptHandler 0200                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                             __end_of_TMR0_ISR BBE2                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR1_ISR B944                               __end_of_TMR2_ISR BBBA  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR B910  
                         _getMinutesFromOnTime 90E2                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                       __end_of_QIIdleIOCHandler BFA4  
                               ?_INT1_CallBack 0001                               ?_CCP2_CaptureISR 0001  
                       __size_of_CCP2_CallBack 0040                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 03FF  
               ??_TMR3_DefaultInterruptHandler 0100                        __end_of_PIN_MANAGER_IOC BF90  
                              __end_of_dpowers EA47                             __size_of_TMR2_Stop 0004  
                                  ?_TMR2_Start 0001                                          fabs@d 0005  
                                   i2scale@scl 004D                 ??_INT1_DefaultInterruptHandler 0001  
                               i1___flmul@aexp 0148                                 i1___flmul@bexp 0149  
                                 i2__doprnt@ap 0070                                   i2__doprnt@cp 008B  
                        ?_ADCC_StartConversion 0001                           ??_QIChargeIOCHandler 0003  
                                 i2__doprnt@pb 006C                                          _scale 51D8  
                              __end_of_isdigit BD06                                __end_of_memmove A308  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 001F                                 i1___flmul@sign 0143  
                               i1___flmul@temp 014E                                 i1___flmul@prod 014A  
                                        _putch BF68                                 ?_INT2_CallBack 0001  
                 I2C2_MasterReadTRBBuild@pdata 0202                       _INT1_SetInterruptHandler C08A  
                      __end_of_TMR1_Initialize B1F2                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 9E8A  
                             __end_ofi2___fleq A8F0                                          tablat 000FF5  
                     __end_ofi1_TMR3_StopTimer C18C                         __end_of_clearI2CErrors BE20  
                             __end_ofi2___wmul BC56                                          plusw2 000FDB  
                               ??_EUSART2_Read 0200                   __size_of_ADCC_GetFilterValue 0014  
                                        ttemp5 005F                                          ttemp6 0062  
                                        ttemp7 0066                                          status 000FD8  
                      __end_of_temp_adc_offset EA4B                         __end_of_clearADCErrors BFEC  
                                        wtemp8 005F                                __end_of_sprintf B322  
                           __size_ofi1___fladd 030E                    getCauseOfResetStringSmall@r 0202  
                           __size_ofi1___fldiv 028A                                  i2___flmul@grs 003A  
                              _TMR2_StartTimer C176                                i1___fladd@signs 011A  
                           __size_ofi1___flmul 0354                                __end_of_strncpy ACB0  
                             __end_ofi2_fround 79E4                                _TMR1_WriteTimer BD46  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 030E  
                           __size_ofi2___fldiv 0288                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0212                             __size_ofi2___flmul 0352  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00BA  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf B7FE                             __size_ofi2___lwdiv 0052  
                           __size_ofi2___lwmod 0042                   ??_getCauseOfResetStringSmall 0202  
        __end_of_EUSART2_SetTxInterruptHandler C0A6         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler C098                                _TMR5_Initialize B74A  
                            ??_I2C2_MasterRead 0210                             __size_ofi2__doprnt 1718  
                            ??_I2C2_Initialize 0200                                __initialization A74C  
               __size_of_terminalSetCursorHome 0010                        getStringSecondsAsTime@i 03F1  
                __end_of_terminalSetCursorHome BFFC                              i2___lldiv@divisor 0005  
                                 __end_of_fabs B83A                                   __end_of_main 869A  
                       ??_I2C2_MasterTRBInsert 0204                              i2___lldiv@counter 000D  
                                   i2printf@ap 00A6                                     i2printf@pb 00A8  
                       ?_freqMeasStartCaptures 0001                          __end_of_ringBufferLUT 4D1E  
                      FLASH_ReadByte@flashAddr 0200                        __end_of_TMR2_Initialize B976  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont EA1F                            __size_of_OLED_Clear 003E  
              getYearsFromOnTime@input_seconds 020D                                         ??_fabs 0009  
             __end_of_I2C2_MasterWriteTRBBuild B43E                       _TMR2_SetInterruptHandler C036  
                                       ??_main 04D8                                    ?i1___xxtofl 0100  
                                  _i2c2_object 0161                                _TMR3_StartTimer C194  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                        _TMR3_InterruptHandler 0171                           __size_of_LM73Convert 029C  
                      __size_of_FLASH_ReadWord 0042                       ??_getStringSecondsAsTime 029B  
                   __size_of_getDeviceIDString 0098                           __size_of__tdiv_to_l_ 0100  
                        ??_QIErrorTimerHandler 0003                                    ?i2___xxtofl 0005  
                 ?_getNXQChargeStateStringCaps 0200                                      ??_OLED_YX 0215  
                        ?_getMinutesFromOnTime 020D                    __size_of_getYearsFromOnTime 0030  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize AD16                   ??_IOCBF2_SetInterruptHandler 0203  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 0199                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 020D  
                                       _ADLTHH 000F6B                                         ?_scale 0227  
                                       STR_100 FDEE                                         _ADLTHL 000F6A  
                                       STR_101 FDEE                                         STR_110 FEAE  
                                       STR_102 FDD8                                         STR_111 FF66  
                                       STR_103 FF48                                         STR_120 FDEE  
                                       STR_112 FDEE                                         STR_104 FDEE  
                                       STR_200 FBA0                                         STR_121 FDEE  
                                       STR_113 FDEE                                         STR_105 FDEE  
                                       STR_201 FA1F                                         STR_130 FDEE  
                                       STR_106 FF12                                         STR_122 FCD0  
                                       STR_114 FCC2                                         STR_202 FB8F  
                                       STR_210 FA63                                         _ADRESH 000F64  
                                       STR_131 FDEE                                         STR_115 FF66  
                                       STR_107 FF66                                         STR_123 FE40  
                                       STR_203 FA36                                         STR_211 EA4B  
                                       STR_220 F365                                         STR_212 F04E  
                                       STR_116 FDEE                                         STR_108 FDEE  
                                       STR_300 FFFC                                         STR_140 FE56  
                                       STR_124 FF82                                         STR_132 FCB4  
                                       STR_204 FB6C                                         STR_213 EEAC  
                                       STR_125 FDEE                                         STR_117 FDEE  
                                       STR_109 FDEE                                         STR_301 FDF9  
                                       STR_133 FF1B                                         STR_141 FE4B  
                                       STR_205 F9C2                                         STR_221 F8B9  
                                       STR_214 F5EA                                         STR_126 FDEE  
                                       STR_310 FE28                                         STR_150 FE56  
                                       STR_142 FE56                                         STR_302 FFD0  
                                       STR_134 FF50                                         STR_118 FDC0  
                                       STR_206 FC8A                                         STR_230 F65B  
                                       STR_222 F29E                                         _ADRESL 000F63  
                                       STR_215 F3EE                                         STR_119 FF66  
                                       STR_151 FE4B                                         STR_143 FE4B  
                                       STR_303 FFD6                                         STR_135 FF24  
                                       STR_311 FE1F                                         STR_127 FD4C  
                                       STR_207 FA79                                         STR_223 F8F2  
                                       STR_231 F754                                         STR_240 F98F  
                                       STR_216 F89B                                         STR_160 FDEE  
                                       STR_144 FDEE                                         STR_128 FE40  
                                       STR_152 FE56                                         STR_136 FF50  
                                       STR_304 FFDC                                         STR_208 FFA6  
                                       STR_224 FC7C                                         STR_312 FB5A  
                                       STR_320 FB0C                                         STR_232 F7FE  
                                       STR_217 F98F                                         STR_209 F98F  
                                       STR_161 FBE1                                         STR_153 FE4B  
                                       STR_145 FE4B                                         STR_137 FF24  
                                       STR_305 FFE2                                         STR_129 FF2D  
                                       STR_313 F90E                                         STR_241 F731  
                                       STR_321 F6EB                                         STR_225 F1D0  
                                       STR_233 EDB2                                         STR_250 F98F  
                                       STR_162 FDEE                                         STR_154 FDEE  
                                       STR_146 FDEE                                         STR_170 FC01  
                                       STR_306 FFE8                                         STR_138 FE56  
                                       STR_314 FAA5                                         STR_330 F929  
                                       STR_226 F85E                                         STR_234 F83F  
                                       STR_322 F7DD                                         STR_218 F636  
                                       STR_242 EFDA                                         STR_163 FDEE  
                                       STR_147 FDEE                                         STR_139 FF24  
                                       STR_171 FC4F                                         STR_307 FFEE  
                                       STR_155 FD66                                         STR_315 FB34  
                                       STR_251 FA08                                         STR_331 F9AA  
                                       STR_235 F87D                                         STR_323 F70E  
                                       STR_227 F392                                         STR_243 F302  
                                       STR_219 ECDA                                         STR_260 F98F  
                                       STR_244 F98F                                         STR_156 FDEE  
                                       STR_172 FC98                                         STR_164 FE2A  
                                       STR_180 FFA1                                         STR_308 FFF4  
                                       STR_148 FBC1                                         STR_316 FABA  
                                       STR_332 F992                                         STR_228 F8D6  
                                       STR_324 F680                                         STR_252 F204  
                                       STR_236 ED32                                         STR_157 FDEE  
                                       STR_309 FDF9                                         STR_181 FFC2  
                                       STR_165 FFAB                                         STR_173 FBF1  
                                       STR_149 FF24                                         STR_317 FA4D  
                                       STR_333 F97A                                         STR_237 F81F  
                                       STR_325 F777                                         STR_261 F6A4  
                                       STR_229 F574                                         STR_245 F3C0  
                                       STR_253 F19A                                         STR_254 F98F  
                                       STR_246 F98F                                         STR_238 F98F  
                                       STR_166 FD32                                         STR_158 FE4B  
                                       STR_182 FF89                                         STR_174 FD73  
                                       STR_318 FAF8                                         STR_326 F611  
                                       STR_262 F4F9                                         STR_270 F2D0  
                                       STR_334 EF27                                         STR_190 EE6E  
                                       STR_271 F98F                                         STR_191 F98F  
                                       STR_159 FDEE                                         STR_167 FF7B  
                                       STR_335 FF58                                         STR_175 FDB4  
                                       STR_255 FB20                                         STR_247 F9F1  
                                       STR_319 F9DA                                         STR_327 F799  
                                       STR_239 F334                                         STR_183 F12E  
                                       STR_263 ED72                                         STR_168 FBD1  
                                       STR_176 FE87                                         STR_280 FFBA  
                                       STR_184 FC31                                         STR_336 FB7E  
                                       STR_272 F7BB                                         STR_328 F6C8  
                                       STR_264 F54C                                         STR_248 F476  
                                       STR_256 EF9F                                         STR_192 EEEA  
                                       STR_185 F98F                                         STR_169 FEB8  
                                       STR_281 FFBE                                         STR_177 FFA1  
                                       STR_337 FE14                                         STR_329 FAE4  
                                       STR_249 F4CE                                         STR_257 F014  
                                       STR_193 EF63                                         STR_273 EE30  
                                       STR_265 EDF1                                         STR_266 F98F  
                                       STR_258 F98F                                         STR_194 F98F  
                                       STR_290 FFFC                                         STR_282 FFF7  
                                       STR_178 FFC2                                         STR_186 F449  
                                       STR_274 EC7A                                         STR_187 F98F  
                                       STR_283 FFCB                                         STR_291 FFCA  
                                       STR_179 FF8F                                         STR_267 F944  
                                       STR_275 F59C                                         STR_259 F41C  
                                       STR_195 F0BF                                         STR_276 F98F  
                                       STR_196 F98F                                         STR_284 FFCE  
                                       STR_292 FFCD                                         STR_188 F26C  
                                       STR_268 F0F7                                         _CCPR2H 000FA7  
                                       STR_189 F98F                                         STR_285 FFE0  
                                       STR_277 FFA1                                         STR_293 FFD3  
                                       STR_197 F164                                         STR_269 F087  
                                       STR_198 F98F                                         STR_286 FFE6  
                                       STR_278 FFC2                                         STR_294 FFD9  
                                       STR_199 F98F                                         STR_287 FFF2  
                                       STR_295 FFDF                                         STR_288 FFFA  
                                       STR_296 FFE5                                         _CCPR2L 000FA6  
                                       STR_289 FFCB                                         STR_297 FFEB  
                                       STR_298 FFF1                                         STR_299 FFF1  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 0206                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _T0CON0 000FD5                                         _T0CON1 000FD6  
                                       _T1GATE 000FD1                                         _T1GCON 000FD0  
                                       _T3GATE 000FCB                                         _T3GCON 000FCA  
                            __end_of_OLED_Init A6BC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _RC2REG 000E99  
                                       _RB4PPS 000EF3                                         _RC2STA 000E9D  
                                       _RB5PPS 000EF4                        TMR1_WriteTimer@timerVal 0200  
                                       _RC4PPS 000EFB                   __end_of_I2C2_BusCollisionISR C11E  
                                       i1l1069 B626                                         _ODCONA 000F0F  
                                       i1l3130 6F9C                                         _ODCONB 000F17  
                                       i1l3131 6F7A                                         _ODCONC 000F1F  
                                       i1l1444 BDB0                                         i1l3215 6526  
                                       i1l3232 67C4                                         i1l3224 673E  
                                       i1l3225 673A                                         i1l3146 706E  
                                       i1l3155 70D4                                         i1l3156 70D0  
                                       i1l3263 9436                                         i1l3256 93B8  
     __end_of_I2C2_WaitForLastPacketToComplete C13E      __size_of_I2C2_WaitForLastPacketToComplete 000A  
            ?_I2C2_WaitForLastPacketToComplete 0001             ??_I2C2_WaitForLastPacketToComplete 0200  
             _I2C2_WaitForLastPacketToComplete C134                                         i1l3185 807E  
                                       i1l3196 80EC                        __end_of_TMR3_Initialize B1A2  
                                       i1l3197 80E8                                         i2l3021 ADD0  
                                       i2l1510 4008                                         i2l3102 B60A  
                                       i2l3130 72AA                                         i2l3131 7288  
                                       i2l2510 2A2E                                         i2l1550 BF62  
                                       i2l3215 6878                                         i2l3232 6B16  
                                       i2l3224 6A90                                         i2l2512 29FC  
                                       i2l3225 6A8C                                         i2l1705 A54C  
                                       i2l3146 737C                                         i2l1554 BF4C  
                                       i2l1706 A584                                         i2l3155 73E2  
                                       i2l2427 22A8                                         i2l3156 73DE  
                                       i2l3092 B0F8                                         i2l2460 2494  
                                       i2l2429 2276                                         i2l2606 AAEE  
                                       i2l3263 9576                                         i2l3256 94F8  
                                       i2l2544 2C16                                         i2l3185 8306  
                                       i2l2481 27CE                                         i2l2393 20BA  
                                       i2l2546 2BE4                                         i2l3275 B828  
                                       i2l2395 2088                                         i2l3196 8374  
                                       i2l3197 8370                                         i2l2944 989C  
                                       i2l2857 9E4E                                         i2l2945 98C4  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000F31                                      ??i2_scale 0049  
                  ?_getCauseOfResetStringSmall 0200                                         _OSCFRQ 000EDE  
                              ?_clearI2CErrors 0001                                  ?_OLED_Command 0001  
                                       _NVMDAT 000F80                                      ??i2_putch 0002  
                                       _RX2PPS 000E8D                               _adc_calculations 00B9  
                                       _TX2REG 000E9A                                         _TX2STA 000E9E  
              __size_of_LM73AcquisitionHandler 022C                               ?_CCP2_Initialize 0001  
                              ?_clearADCErrors 0001                                _freqMeasConvert 9F56  
                             __end_of___xxtofl 9376                          I2C2_MasterRead@length 020B  
                    __size_ofi2_TMR1_StopTimer 0004          __end_of_ADCC_DischargeSampleCapacitor C164  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor C15C  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 00FE  
                              _TMR3_WriteTimer BD26                                 i2___fladd@aexp 0061  
                               i2___fladd@bexp 0062                                  ?_OLED_PutChar 0001  
        __end_of_ADCC_HasAccumulatorOverflowed C12A         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed C11E                                 __CFG_XINST$OFF 000000  
                                 __doprnt$4890 0269                                   __doprnt$4883 025B  
                                 __doprnt$4884 025D                                   __doprnt$5932 0256  
                                 __doprnt$4885 025F                                   __doprnt$4886 0261  
                                 __doprnt$4887 0263                                   __doprnt$4888 0265  
                                 __doprnt$4889 0267                                   i2_scale$6317 0049  
                             __end_of__powers_ E6CB           __end_of_TMR1_DefaultInterruptHandler C1AE  
        __size_of_TMR1_DefaultInterruptHandler 0002                   _TMR1_DefaultInterruptHandler C1AC  
                                _CCP2_CallBack B614                __end_of_terminal_ringBufferPull 9B04  
                         _getSecondsFromOnTime 8F68                                         ___flge 9CE8  
                                       ___fleq A7DA                               ?_updateErrorLEDs 0001  
                      __end_of_TMR1_StartTimer C19C                                   ?_TMR1_Reload 0001  
                            _ADCC_ThresholdISR BBE2                                      ??___fladd 023C  
                                       ___wmul BB6A                                      ??___fldiv 0208  
                                    ??___awdiv 020A                                      ??___flneg 0204  
                               _p_i2c2_current 00D3                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 0204                              __end_of_TMR2_Stop C190  
                                    ??___flmul 0216                      ??_I2C2_MasterReadTRBBuild 0207  
                                    ??___flsub 024C                                      ??___fltol 0234  
                                    ??___lldiv 0208                                      ??___llmod 0215  
                                 ?_TMR3_Reload 0001                                      ??___lwdiv 0209  
                                    ??___lwmod 0204                            __size_of_TMR2_Start 0004  
                    i2TMR3_WriteTimer@timerVal 0001                                      ??__doprnt 0252  
                             ?_TMR0_Initialize 0001                             ?_ADCC_ThresholdISR 0001  
                                i2__doprnt@idx 007A                                         _fround 7474  
                                i2__doprnt@len 008D                                      ?_I2C2_ISR 0001  
                                i2__doprnt@val 0099                                         clear_0 A796  
                                       clear_1 A7A2                                         clear_2 A7AE  
                                       clear_3 A7BA                                         clear_4 A7CA  
                         _eusart2RxStringReady 07E0                               ___awdiv@quotient 020C  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0202                                 i2___fldiv@sign 0023  
                                 __doprnt@flag 0281                       I2C2_Stop@completion_code 0102  
                              ___awmod@counter 0204                                         _printf B70E  
                                 __doprnt@eexp 026F                                   __doprnt@fval 0275  
          __size_of_IOCBF2_SetInterruptHandler 000E                                   __doprnt@prec 027F  
                                       _strcat AE42                                         _strcmp B102  
                I2C2_MasterReadTRBBuild@length 0204                                         _strcpy B292  
                                       _strlen BA68                                 i2___awdiv@sign 000C  
                            __end_ofi1___fladd 7166                   getCauseOfResetString@strings 03CB  
                            __end_ofi1___fldiv 8194                                _ADCC_Initialize ADE2  
                            __end_ofi1___flmul 67F8                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize BE20           __end_of_INT2_DefaultInterruptHandler C1B6  
        __size_of_INT2_DefaultInterruptHandler 0002                   _INT2_DefaultInterruptHandler C1B4  
                      FLASH_ReadWord@flashAddr 0204                              __end_ofi2___fladd 7474  
                                    ??_isdigit 0200                                      ??_memmove 0206  
                            __end_ofi2___fldiv 841C                              __end_ofi2___awdiv AA7E  
                            __end_ofi2___flneg BAC4                                ??_INT1_CallBack 0001  
                            __end_ofi2___awmod ABE2                              __end_ofi2___flmul 6B4A  
                            __end_ofi2___flsub B3B2                              __end_ofi2___fltol A25A  
                            __end_ofi2___lldiv AB00                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod ADE2                              __end_ofi2___lwdiv B102  
                                 __mediumconst E696                              __end_ofi2___lwmod B614  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion C1A0  
                         _EUSART2_Transmit_ISR B976                              __end_ofi2__doprnt 2E3C  
                       ??_ADCC_StartConversion 0100                                ??_INT2_CallBack 0001  
                               i2___awmod@sign 0006                          __size_of_getUARTError 0006  
                      __end_of_TMR2_StartTimer C17C                                ??_EUSART2_Write 0200  
     TMR1_SetInterruptHandler@InterruptHandler 0200       TMR3_SetInterruptHandler@InterruptHandler 0200  
     TMR2_SetInterruptHandler@InterruptHandler 0200       TMR0_SetInterruptHandler@InterruptHandler 0200  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0200     IOCBF3_SetInterruptHandler@InterruptHandler 0200  
   IOCBF2_SetInterruptHandler@InterruptHandler 0200       INT2_SetInterruptHandler@InterruptHandler 0200  
     INT1_SetInterruptHandler@InterruptHandler 0200                               ?_PIN_MANAGER_IOC 0001  
                                    ??_sprintf 0290                        __end_of_TMR1_WriteTimer BD66  
                               i2___flmul@aexp 0039                                 i2___flmul@bexp 003E  
                                    ??_strncpy 0206                                   ??_IOCBF2_ISR 0003  
                               i2___flmul@sign 0038                                 i2___flmul@temp 0043  
                                 ??_IOCBF3_ISR 0003                                 i2___flmul@prod 003F  
                __size_of_INTERRUPT_Initialize 0020                                _eusart2RxBuffer 0300  
                             _OLED_update_flag 02B6                                     ___flge@ff1 0200  
                                   ___flge@ff2 0204                                 ??_OLED_Command 0210  
                             ?_TMR1_Initialize 0001                        __end_of_TMR5_Initialize B786  
                                 ___xxtofl@arg 020A                              __end_ofi2_isdigit BE04  
                                 ___xxtofl@exp 0209                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00AD                               _OLED_update_time 02FF  
                            _SYSTEM_Initialize B692                                   ___xxtofl@val 0200  
                                   ___fleq@ff1 0200                                     ___fleq@ff2 0204  
                              _eusart2TxBuffer 0480                                     __accesstop 0060  
                      __end_of__initialization A7D0                                 i2___fltol@exp1 0057  
                                    ?_INT1_ISR 0001                                     ___flneg@f1 0200  
                                    ?_INT2_ISR 0001                         _qi_isns_average_buffer 0400  
                           ?_SYSTEM_Initialize 0001                            __size_ofi1___xxtofl 0144  
                                ___rparam_used 000001      __end_of_ADCC_GetCurrentCountofConversions C1A8  
   __size_of_ADCC_GetCurrentCountofConversions 0004            ??_ADCC_GetCurrentCountofConversions 0001  
           ?_ADCC_GetCurrentCountofConversions 0001              _ADCC_GetCurrentCountofConversions C1A4  
                                   ___fltol@f1 0230                              ?_I2C2_MasterWrite 0209  
                              _TMR5_WriteTimer BD06                                 ??_OLED_PutChar 0210  
                           i2__tdiv_to_l_@exp1 0011                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 0010                      __end_of_ADCC_ThresholdISR BC0A  
                               ?_CCP2_CallBack 0154      LM73TempSensorInitialize@output_data_array 0210  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000C              terminal_ringBufferPull@charNumber 04D2  
                          __size_ofi2___xxtofl 0140                          ?_getSecondsFromOnTime 020D  
                 ?_ADC_acquisitionTimerHandler 0001                             ??_I2C2_MasterWrite 0210  
                   __end_of_getMajorRevisionID B7C2                             i2___lwmod@dividend 0001  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
             __end_of_LM73TempSensorInitialize 8B48                    __size_of_getHoursFromOnTime 00F0  
                                 __pidataBANK0 C1BA                                   __pidataBANK2 C1BB  
                                 __pidataBANK3 BC56                            ??_SYSTEM_Initialize 0205  
                      __end_of_TMR3_StartTimer C198                                      ?_TMR0_ISR 0001  
                                    ?_TMR1_ISR 0001                                      ?_TMR2_ISR 0001  
                ?_TMR1_DefaultInterruptHandler 0001                                      ?_TMR3_ISR 0001  
                                __end_of_scale 560C                 ?_EUSART2_SetTxInterruptHandler 0200  
                               _i2c2_trb_count 00DB                                  __end_of_putch BF7C  
                                   ??_I2C2_ISR 0103                               ?_TMR2_Initialize 0001  
                     __size_of_getCauseOfReset 005A                                 _QI_charge_time 02B2  
                       __end_of_PMD_Initialize BE3C                         _LM73AcquisitionHandler 8B48  
                        _getCauseOfResetString B9A8                             __end_of_IOCBF2_ISR BB42  
                                    ?i2___flge 0001                             __end_of_IOCBF3_ISR BB18  
                                    ?i2___fleq 0001                           __end_of_EUSART2_Read B692  
                                 _getUARTError C164                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 981C                    __size_of_EXT_INT_Initialize 0038  
                                   __div_to_l_ 991A                         ??_getMinutesFromOnTime 0211  
                     _printCurrentMeasurements 4D1E                __size_of_getStringSecondsAsTime 03A6  
                           __size_of_getUserID 0034                                      ?i2_fround 0045  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
             __end_of_INT2_SetInterruptHandler C08A                    __end_of_terminalClearScreen C00C  
                     _I2C2_MasterWriteTRBBuild B3F8                  ?_INT2_DefaultInterruptHandler 0001  
                                    ?i2_printf 00A4         __end_of_IOCBF3_DefaultInterruptHandler C1B2  
      __size_of_IOCBF3_DefaultInterruptHandler 0002                 _IOCBF3_DefaultInterruptHandler C1B0  
                  ADCC_StartConversion@channel 0100                              ?_OLED_WriteString 0221  
                              _clearUARTErrors C0FA                                     __doprnt@ap 0250  
                                   __doprnt@cp 026B                   I2C2_MasterWriteTRBBuild@ptrb 0200  
                                   __doprnt@pb 024C                        __end_of_freqMeasConvert A020  
                              __div_to_l_@exp1 020D                                __div_to_l_@cntr 020C  
                                      ??_scale 022B                      __end_of_SYSTEM_Initialize B6D0  
                              __div_to_l_@quot 0208                        __end_of_TMR3_WriteTimer BD46  
                                      ??_putch 0201                             i2___lldiv@quotient 0009  
                                 ??_OLED_Clear 0221                             ??_OLED_WriteString 0223  
                                _eusart2RxHead 00DD                                  _eusart2TxHead 019B  
                                   __pbssBANK0 00B9                                     __pbssBANK1 0161  
                                   __pbssBANK2 02AE                                     __pbssBANK3 0300  
                                   __pbssBANK4 0400                                  _eusart2RxTail 0198  
                                _eusart2TxTail 019A                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0005                               ?_TMR3_Initialize 0001  
             __size_of_printErrorHandlerStatus 01F4                getHoursFromOnTime@input_seconds 020D  
                                   ??_INT1_ISR 0001                                     ??_INT2_ISR 0001  
                               i1___xxtofl@arg 010A                                 i1___xxtofl@exp 0109  
                               i1___xxtofl@val 0100                                  __div_to_l_@f1 0200  
                                __div_to_l_@f2 0204                              _freq_meas_results 0168  
                        EUSART2_Read@readValue 0200                          ??_ADCC_StopConversion 0001  
         __size_of_getNXQChargeStateStringCaps 005C                               ??_FVR_Initialize 0200  
                    getMinutesFromOnTime@hours 0218                                  _error_handler 00C5  
                    getMinutesFromOnTime@years 0216                                        ?___flge 0200  
                                      ?___fleq 0200               __end_of_TMR0_SetInterruptHandler C060  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_4462 04D4  
                   ??_OLED_UpdateFromRAMBuffer 0223               __end_of_TMR3_SetInterruptHandler C036  
                                      ?___wmul 0200                               ?_TMR1_StartTimer 0001  
                                   ??_TMR0_ISR 0018                                     ??_TMR1_ISR 0003  
                              __CFG_PPS1WAY$ON 000000                                     ??_TMR2_ISR 0101  
                                   ??_TMR3_ISR 0102                        __end_of_ADCC_Initialize AE42  
                  __size_of_OLED_updateHandler 107A                                        _CCP2CAP 000FA9  
                                      _CCP2CON 000FA8                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _CCP2PPS 000EB0                                        ?_fround 0227  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler C0C2          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler C0B4             OLED_UpdateFromRAMBuffer@char_index 0223  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                         _I2C2_BusCollisionISR C112                                        ?_printf 029F  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue BFA4  
            getCauseOfResetStringSmall@strings 03B9                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 0009                             __end_of_OLED_Clear B70E  
                                   ??i2___fleq 0009                                        ?_strcat 0200  
                                      ?_strcmp 0200                                        ?_strcpy 0203  
                                      ?_strlen 0200                                 _FLASH_ReadByte BE90  
                      __size_of_TMR1_StopTimer 0004                                     ??i2___wmul 0005  
                               _FLASH_ReadWord B54E                          _heartbeatTimerHandler A4EE  
                                      i1l13002 6E86                                        i1l13030 6ED2  
                                      i1l13006 6E8A                                        i1l13104 6FE2  
                   ??_INT1_SetInterruptHandler 0203                                        i1l13106 6FE6  
                                      i1l13114 6FF8                                        i1l13026 6ECE  
                                      i1l13210 7F38                                        i1l13132 7092  
                                      i1l13124 705E                                        i1l13142 70A8  
                                      i1l13038 6EF2                                        i1l13230 7F78  
                                      i1l13214 7F3C                                        i1l21206 881E  
                                      i1l21150 8738                                        i1l13080 6F88  
                                      i1l13320 817E                                        i1l13312 8130  
                                      i1l21232 8882                                        i1l21216 8842  
                                      i1l13082 6F8C                                        i1l13242 7FB0  
                                      i1l13234 7F7C                                        i1l21146 8724  
                                      i1l13180 7148                                        i1l13148 70B2  
                                      i1l13068 6F2E                                        i1l13316 8154  
                                      i1l21244 88AE                                        i1l21228 8878  
                                      i1l21164 8776                                        i1l13182 714A  
                                      i1l13326 818A                                        i1l13350 64D6  
                                      i1l20630 B548                                        i1l21246 88B4  
                                      i1l21158 8752                                        i1l21254 88C8  
                                      i1l13176 7140                                        i1l13168 711A  
                                      i1l13096 6FC0                                        i1l13328 818C  
                                      i1l13280 807C                                        i1l13256 7FDE  
                                      i1l13248 7FC6                                        i1l13424 6704  
                                      i1l13352 64E6                                        i1l21248 88BC  
                                      i1l13274 8056                                        i1l13266 802E  
                                      i1l13418 66E6                                        i1l21178 87C0  
                                      i1l13292 80B2                                        i1l13460 67E2  
                                      i1l13444 6782                                        i1l13348 64D2  
                                      i1l13508 94A8                                        i1l13286 8094  
                                      i1l13366 6512                                        i1l20638 BED8  
                                      i1l13448 67A0                                        i1l13376 6544  
                                      i1l13368 6516                                        i1l13480 93EC  
                                      i1l13472 93C8                                        i1l13490 945C  
                                      i1l13482 93F8                                        i1l15322 B99E  
                                      i1l13492 9468                                        i1l13484 941E  
                                      i1l12676 BDDA                                        i1l13478 93E6  
                                      i1l14940 BDBC                                        i1l14838 B616  
                                      i2l20000 2282                                        i1l14848 B642  
                                      i2l20010 22E8                                        i2l20100 2804  
                                      i2l20102 2838                                        i2l20030 243E  
                                      i2l20022 23CA                                        i2l20014 2304  
                                      i2l20024 23F6                                        i2l20210 2B12  
                                      i2l20122 2894                                        i2l20114 2856  
                                      i2l20050 24E2                                        i2l20042 2498  
                                      i2l20034 2468                                        i2l20026 2402  
                                      _INT1PPS 000EA2                                        i2l20220 2B80  
                                      i2l20204 2ADE                                        i2l20140 28EC  
                                      i2l20108 2852                                        i2l20036 2470  
                                      i2l20310 8204                                        i2l20070 26B4  
                                      i2l20054 250C                                        i2l20216 2B56  
                                      i2l20208 2B08                                        i2l20160 2970  
                                      i2l20144 290C                                        i2l20128 2898  
                                      i2l20080 2726                                        i2l20072 26C0  
                                      i2l20402 8412                                        i2l20306 8200  
                                      i2l20250 2CF4                                        i2l20234 2BF0  
                                      i2l20162 2978                                        i2l20154 294E  
                                      i2l20138 28D6                                        i2l20090 2782  
                                      i2l20082 272E                                        i2l20066 2634  
                                      i2l20058 256E                                        _INT2PPS 000EA3  
                                      i2l20404 8414                                        i2l20332 8266  
                                      i2l20324 824E                                        i2l20244 2C56  
                                      i2l20228 2BB6                                        i2l20148 292C  
                                      i2l20092 27B4                                        i2l20076 26FC  
                                      i2l20068 2660                                        i2l20084 2738  
                                      i2l21108 A3A4                                        i2l20350 82DE  
                                      i2l20342 82B6                                        i2l20318 8238  
                                      i2l20262 2DBA                                        i2l20166 299C  
                                      i2l20264 2DD6                                        i2l20256 2D68  
                                      i2l20248 2C74                                        i2l20184 2A08  
                                      i2l20168 29A4                                        i2l20362 831C  
                                      i2l20290 81C4                                        i2l20258 2D7E  
                                      i2l20266 2DE4                                        i2l20194 2A6E  
                                      i2l20178 29CE                                        i2l11810 BE6A  
                                      i2l20356 8304                                        i2l20196 2A8A  
                                      i2l20286 81C0                                        i2l20198 2A98  
                                      i2l21094 A35C                                        i2l21086 A336  
                                      i2l21078 A318                                        i2l20392 83DC  
                                      i2l20368 833A                                        i2l20800 4574  
                                      i2l20810 46D2                                        i2l20730 3EC2  
                                      i2l20396 8406                                        i2l20388 83B8  
                                      i2l20820 471A                                        i2l20734 3F10  
                                      i2l20814 46D8                                        i2l20824 472A  
                                      i2l20752 41E4                                        i2l20744 400C  
                                      i2l20816 470A                                        i2l20834 4824  
                                      i2l20748 40E6                                        i2l11796 BE86  
                                      u2457_41 982C                                        i2l20790 44DA  
                                      i2l20766 4312                                        i2l20774 43A8  
                                      i2l13662 BE4A                                        i2l20854 A53A  
                                      i2l20776 43AC                                        i2l20798 4570  
                                      i2l18220 B596                                        u2459_41 9858  
                                      i2l19110 5740                                        i2l19200 9BA0  
                                      i2l18232 B5CA                                        i2l18312 ABD8  
                                      i2l18304 ABC0                                        i2l19120 581C  
                                      i2l18402 7200                                        i2l18322 B0C6  
                                      i2l18234 B5CC                                        i2l18250 AA1E  
                                      i2l19212 9BBC                                        i2l18324 B0CE  
                                      i2l18244 AA0E                                        i2l18308 ABCA  
                                      i2l19116 57EC                                        i2l14948 BF32  
                                      i2l19230 A89A                                        i2l19150 AAA0  
                                      i2l19222 9BD4                                        i2l18334 B0EE  
                                      i2l18350 B600                                        i2l18342 B5E0  
                                      i2l19134 59F4                                        i2l18512 73C0  
                                      i2l18432 723C                                        i2l19400 9508  
                                      i2l19312 A248                                        i2l19304 A220  
                                      i2l19152 AAAC                                        i2l19224 9BE0  
                                      i2l19216 9BCC                                        i2l18344 B5E8  
                                      i2l18256 AA34                                        i2l18272 AA66  
                                      i2l19128 5948                                        i2l19250 9E22  
                                      i2l18506 73B6                                        i2l18370 7198  
                                      i2l19410 9538                                        i2l19234 A8CE  
                                      i2l19306 A22C                                        i2l19162 AAE0  
                                      i2l19322 9848                                        i2l19090 78A8  
                                      i2l18258 AA3C                                        i2l19260 9E86  
                                      i2l18540 744E                                        i2l18532 7428  
                                      i2l18460 72CE                                        i2l18444 7296  
                                      i2l19420 95A8                                        i2l19412 955E  
                                      i2l19172 9B22                                        i2l18276 AA74  
                                      i2l18268 AA5C                                        i2l18292 AB92  
                                      i2l19254 9E38                                        i2l19246 9DEE  
                                      i2l18470 72F4                                        i2l18446 729A  
                                      i2l18390 71DC                                        i2l18366 7194  
                                      i2l19406 9526                                        i2l19238 A8EC  
                                      i2l18544 7456                                        i2l19408 952C  
                                      i2l19192 9B70                                        i2l19096 7990  
                                      i2l18296 ABA0                                        i2l18288 AB86  
                                      i2l18570 6828                                        i2l18546 7458  
                                      i2l18394 71E0                                        i2l19418 959C  
                                      i2l19370 9902                                        i2l19362 98EE  
                                      i2l18298 ABA8                                        i2l19268 BAB2  
                                      i2l18644 6A56                                        i2l18572 6838  
                                      i2l18468 72F0                                        i2l19436 95E8  
                                      i2l18638 6A38                                        i2l18478 7306  
                                      i2l19294 A208                                        i2l19278 A1BE  
                                      i2l19358 98DE                                        i2l18680 6B34  
                                      i2l18664 6AD4                                        i2l18568 6824  
                                      i2l18496 73A0                                        i2l18488 736C  
                                      i2l19384 ADC2                                        i2l19376 AD8E  
                                      i2l19368 98F6                                        i2l19448 BDFC  
                 ?_terminalTextAttributesReset 0001                                        i2l18586 6864  
                                      i2l19298 A218                                        i2l19378 AD9A  
                                      i2l19802 1A3E                                        i2l19722 1728  
                                      i2l18668 6AF2                                        i2l18596 6896  
                                      i2l18588 6868                                        i2l19820 1B26  
                                      i2l19804 1A48                                        i2l19812 1AAE  
                                      i2l19732 179C                                        i2l19830 1BAE  
                                      i2l19814 1AC2                                        i2l19750 1830  
                                      i2l19734 17AE                                        i2l19742 17C2  
                                      i2l19912 1FAC                                        i2l19808 1A84  
                                      i2l19840 1C3C                                        i2l19736 17B4  
                                      i2l19728 176E                                        i2l19930 2016  
                                      i2l19834 1BC0                                        i2l19826 1B76  
                                      i2l19770 1974                                        i2l19738 17BA  
                                      i2l19908 1F34                                        i2l19828 1B8A  
                                      i2l19780 198E                                        i2l19764 18F6  
                                      i2l19950 2094                                        i2l19934 2030  
                                      i2l19918 1FB0                                        i2l19870 1D3A  
                                      i2l19854 1CB0                                        i2l19846 1C52  
                                      i2l19790 19D6                                        i2l19774 1982  
                                      i2l19838 1BC6                                        i2l19960 20FA  
                                      i2l19944 205A                                        i2l19776 1986  
                                      i2l19768 1948                                        i2l19962 2116  
                                      i2l19882 1DE6                                        i2l19786 19C6  
                                      i2l19778 198A                                        i2l19980 21E2  
                                      i2l19972 218C                                        i2l19964 2126  
                                      i2l19788 19D0                                        i2l19974 2194  
                                      i2l19894 1E9E                                        i2l19886 1E32  
                                      i2l19878 1DB8                                        i2l19798 1A28  
                                      i2l19984 220C                                        i2l19976 21A6  
                                      i2l19968 2162                                        i2l19994 2248  
                                      i2l19986 2214                                        i2l19898 1ECC  
                                    ?___xxtofl 0200              I2C2_ISR@i2c_10bit_address_restart 00D9  
                                      _SP2BRGH 000E9C                                     ??i2_fround 0049  
                                      _SP2BRGL 000E9B                                        _OLED_YX B4C6  
                  __end_of_leftCapTouchHandler BF68                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                         I2C2_MasterRead@address 020C  
                  __end_of_EUSART2_Receive_ISR A3AC             __end_of_IOCBF2_SetInterruptHandler C07C  
                   _IOCBF2_SetInterruptHandler C06E                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                    _I2C2_Stop B50A                                     ??i2_printf 005E  
                                      _NVMADRH 000F7F                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                                      _SSP2ADD 000E93                  __size_of_rightCapTouchHandler 0016  
                     getMinutesFromOnTime@days 0217                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      _SSP2BUF 000E92                                   ??_TMR2_Start 0001  
                      __size_of_TMR2_StopTimer 0006                              ?_QIIdleIOCHandler 0001  
             __size_of_getNXQChargeStateString 005C                               ?_TMR2_StartTimer 0001  
                getStringSecondsAsTime@minutes 03F6                  getStringSecondsAsTime@seconds 03F2  
                              _I2C2_MasterRead B242                               ?_TMR1_WriteTimer 0200  
                      __end_of_TMR5_WriteTimer BD26                                _I2C2_Initialize B872  
                           ??_QIIdleIOCHandler 0003                         __size_ofi1_TMR3_Reload 000E  
                                      i2_scale 560C                               ?_TMR5_Initialize 0001  
                       I2C2_MasterRead@trBlock 01AE                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch C152                              ?i1_TMR3_StopTimer 0001  
                      __size_of_TMR3_StopTimer 0004                               i2_TMR1_StopTimer C190  
                              ??_CCP2_CallBack 0156                                i2___fladd@signs 0060  
                       _getStringSecondsAsTime 5A24                                  ??_getI2CError 0200  
                           ??i1_TMR3_StopTimer 0100            getStringSecondsAsTime@input_seconds 0297  
                       ??_getSecondsFromOnTime 0211                                  ??_getADCError 0200  
                            __end_of__npowers_ E6FF                                        __Hparam 0000  
                      ??_freqMeasStartCaptures 0200                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$5931 022B                                        __Lparam 0000  
                            __end_of_getUserID B8DC                          _ADCC_ClearAccumulator C170  
                   ??_TMR2_SetInterruptHandler 0203                       ??_terminalTextAttributes 02AE  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                              __size_of___fleq 008C                                        ___fladd 6B4A  
                                      ___fldiv 7C80                        getHoursFromOnTime@hours 0215  
                                      ___awdiv A8F0                                        ___flneg B9D8  
                                      ___awmod AB00                                 i2__doprnt$6318 0076  
                                      ___flmul 6150                               ?_TMR3_StartTimer 0001  
                               i2__doprnt$4890 0089                                 i2__doprnt$4883 007B  
                               i2__doprnt$4884 007D                                 i2__doprnt$4885 007F  
                               i2__doprnt$4886 0081                                 i2__doprnt$4887 0083  
                               i2__doprnt$4888 0085                                        ___flsub B322  
                               i2__doprnt$4889 0087                                        ___fltol A0E4  
                                      ___lldiv A976                                __size_of___wmul 0028  
                      getHoursFromOnTime@years 0216                                        ___llmod ABE2  
                                      ___lwdiv B00A                                        ___lwmod B482  
                       __end_of_FLASH_ReadByte BEAA                                        __doprnt 0000  
                       ?_getCauseOfResetString 0200                             __end_of_TMR2_Start C1A0  
                        ?_I2C2_BusCollisionISR 0001                           __size_of_TMR1_Reload 000E  
                       __end_of_FLASH_ReadWord B590                                        __pcinit A74C  
                              __size_of_fround 02C2                                        __ramtop 0F00  
                         __end_of_OLED_Command AD7C                       _LM73TempSensorInitialize 8910  
                    I2C2_MasterTRBInsert@count 0205                           __size_of_TMR3_Reload 000E  
                                 ??i1___xxtofl 0104                                        __ptext0 841C  
                                      __ptext1 9A10                                        __ptext2 482A  
                                      __ptext3 B102                                        __ptext4 8D74  
                                      __ptext5 4D1E                                        __ptext6 BFCC  
                                      __ptext7 5DCA                                        __ptext8 AC4A  
                                      __ptext9 5A24                      I2C2_MasterTRBInsert@pflag 0202  
                              __size_of_printf 003C                        __end_of_clearUARTErrors C106  
               ??_TMR1_DefaultInterruptHandler 0001                  ?_ADCC_SetADTIInterruptHandler 0200  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 005E  
                              __size_of_strcmp 0050                                  i2_fround$6315 004D  
                                i2_fround$6316 0049                                __size_of_strcpy 0048  
                              __size_of_strlen 002E                              __end_of_hexpowers E71F  
                                    _T1CONbits 000FCF                         getCauseOfResetString@r 0202  
                                  ?__div_to_l_ 0200                                        _dpowers EA1F  
                        _OSCILLATOR_Initialize BEF8                         ??_EUSART2_Transmit_ISR 0100  
                                    _T2CONbits 000FBD                                   i2fround@prec 0051  
                                      _isdigit BCE4                                 i2__doprnt@flag 00A1  
                                 ??i2___xxtofl 0009                                        _memmove A25A  
                               i2__doprnt@eexp 008F                                     ??___xxtofl 0204  
                                    _T3CONbits 000FC9                                 i2__doprnt@fval 0095  
                             ___awmod@dividend 0200                                 i2__doprnt@prec 009F  
            __size_of_TMR1_SetInterruptHandler 000E                           __end_of_OLED_PutChar A0E4  
                     ??_PIN_MANAGER_Initialize 0203                      ?_TMR1_SetInterruptHandler 0200  
                                    _T2HLTbits 000FBE                                      _IOCBFbits 000F12  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0200  
                                   ?_I2C2_Stop 0001                                _LM73_start_flag 02B8  
                                    _IOCBNbits 000F13                          _I2C2_FunctionComplete BEC4  
                ??_terminalTextAttributesReset 02AE                                      _IOCBPbits 000F14  
         __size_of_ADC_acquisitionTimerHandler 001A                               ??_clearI2CErrors 0201  
                             ??_clearADCErrors 0201                     __size_of_SYSTEM_Initialize 003E  
                             ?_freqMeasConvert 0001                                        _sprintf B2DA  
                                __doprnt@width 027D                          i2EUSART2_Write@txData 0001  
                  __size_of_QIChargeIOCHandler 001C                                 __pintcode_body 9E8A  
                                      _strncpy AC4A                           end_of_initialization A7D0  
                             ?_TMR3_WriteTimer 0200                                        ftoa@buf 03A8  
                       __size_ofi2_TMR1_Reload 000E                                      _T2RSTbits 000FC0  
                     _INT2_SetInterruptHandler C07C                 ??_INT2_DefaultInterruptHandler 0001  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                       __size_ofi2_TMR3_Reload 000E                                        int_func 9E8A  
                                    i1u1510_20 7126                                      i1u1502_20 70B6  
                                    i1u1504_20 70CA                            i2___wmul@multiplier 0001  
                                    i1u1530_20 80E2                                      i1u1534_20 813E  
                                    i1u1535_20 8162                                      i1u1544_20 6532  
                                    i1u1553_20 6790                                      i1u1545_20 66A8  
                                    i1u1545_25 669E                                      i1u1554_20 67AE  
                                    i1u1562_20 9472                                      i1u1484_20 6F50  
                                    i1u1485_20 6F60                                      i1u1549_20 6734  
                                    i1u1486_20 6F62                       __size_of_CCP2_CaptureISR 001A  
                                    i1u1489_20 6FA4                                      i1u1841_28 BBA6  
                                    i1u1856_28 B8FC                                 i2___xxtofl@arg 000F  
                                    _OLED_Init A624                                      i2u2302_40 AA40  
                               i2___xxtofl@exp 000E                                      i2u2312_40 B0D2  
                                    i1u2856_28 007A                                 i2___xxtofl@val 0005  
                                    i2u2331_40 72B2                                      i2u2315_40 B5EC  
                                    i2u2308_40 ABAC                                      i2u2326_40 725E  
                                    i2u2327_40 726E                                      i2u2511_40 17E4  
                                    i2u2510_48 1758                                      i2u2511_47 17DA  
                                    i2u2352_40 7434                                      i2u2344_40 73C4  
                                    i2u2328_40 7270                                      i2u2432_40 AAB0  
                                    i2u2440_40 9BE6                                      i2u2520_40 192C  
                                    i2u2520_47 1922                                      i2u2521_40 196A  
                                    i2u2513_40 181E                                      i2u2521_47 1960  
                                    i2u2513_47 1814                                      i2u2346_40 73D8  
                                    i2u2450_40 A1AC                                      i2u2434_40 9B10  
                                    i2u2363_40 6884                                      i2u2443_40 A8E8  
                                    i2u2451_40 A1DC                                      i2u2530_48 1A6E  
                                    i2u2515_40 1878                                      i2u2451_45 A1D2  
                                    i2u2515_47 186E                                      i2u2372_40 6AE2  
                                    i2u2364_40 69FA                                      i2u2524_40 1A04  
                                    i2u2516_40 18B4                                      i2u2364_45 69F0  
                                    i2u2524_47 19FA                                      i2u2516_47 18AA  
                                    i2u2373_40 6B00                                      i2u2525_40 1A0A  
                                    i2u2517_40 18BC                                      i2u2534_40 1B1C  
                                    i2u2533_48 1AE8                                      i2u2518_40 18DE  
                                    i2u2533_49 1B1E                                      i2u2534_47 1B12  
                                    i2u2518_47 18D4                                      i2u2455_40 A232  
                                    i2u2622_48 2AC8                                      i2u2535_40 1B60  
                                    i2u2711_40 A34C                                      i2u2535_47 1B56  
                                    i2u2368_40 6A86                                      i2u2640_40 2E32  
                                    i2u2631_48 2BCE                                      i2u2624_40 2B1A  
                                    i2u2615_48 29E6                                      i2u2552_40 1FEC  
                                    i2u2481_40 C126                                      i2u2465_40 9908  
                                    i2u2545_40 1DF8                                      i2u2537_40 1BF6  
                                    i2u2537_47 1BEC                                      i2u2458_40 9836  
                                    i2u2546_40 1E44                                      i2u1833_48 B930  
                                    i2u2475_40 95B2                                      i2u2467_40 AD9E  
                                    i2u2627_40 2B90                                      i2u2626_48 2B40  
                                    i2u2635_48 2C40                                      i2u2619_48 2A58  
                                    i2u2563_48 20E4                                      i2u2715_48 BBCE  
                                    i2u2661_40 83C6                                      i2u2549_40 1E9E  
                                    i2u2662_40 83EA                                      i2u2717_48 BBF6  
                                    i2u2638_40 2DF6                                      i2u2637_48 2DA4  
                                    i2u2573_48 2260                                      i2u2565_48 214C  
                                    i2u1773_48 BB28                                      i2u1773_49 BB3C  
                                    i2u2639_40 2E26                                      i2u2583_40 247E  
                                    i2u2582_48 2428                                      i2u2639_47 2E1C  
                                    i2u2584_40 248E                                      i2u2559_48 2072  
                                    i2u1767_48 BCAE                                      i2u1775_48 BAFE  
                                    i2u1775_49 BB12                                      i2u2657_40 836A  
                                    i2u2592_48 26E6                                      i2u2569_40 2222  
                                    i2u2568_48 21CC                                      i2u2577_48 22D2  
                                    i2u1769_48 BC8A                                ___lldiv@divisor 0204  
                                    i2u2676_40 4002                                      i2u2587_48 24CC  
                                    i2u2579_48 23B2                             __end_ofi1___xxtofl 94BA  
                                    i2u2685_40 A4F6                                      i2u2685_46 A4F8  
                                    i2u2589_48 261C                                      i2u2837_48 9EDE  
                                    i2u2687_40 A52A                                ___lldiv@counter 020C  
                           _EUSART2_Initialize ACB0                    getDeviceIDString@inputDevID 020D  
                              i2_EUSART2_Write B590                                  ??_getDeviceID 020D  
                        I2C2_MasterWrite@pdata 0209                             _p_i2c2_trb_current 00D5  
                        I2C2_MasterWrite@pflag 020E                                        printf@f 029F  
                           __end_ofi2___xxtofl 95FA                                        postdec1 000FE5  
                                      postdec2 000FDD                         I2C2_ISR@i2c_bytes_left 00DA  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 003E                ADC_PostProcessingHandler@i_3361 007A  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0200  
                               __tdiv_to_l_@f2 0204                          _terminalSetCursorHome BFEC  
                          __end_of_getI2CError BB6A                                ??i2__tdiv_to_l_ 0009  
                __size_of_I2C2_MasterTRBInsert 00A2                                        strcmp@r 0206  
                  __end_of_QIErrorTimerHandler BF3C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0200                            ?_EUSART2_Initialize 0001  
                                i1_TMR3_Reload C0C2                                  ??_LM73Convert 0227  
                          __end_of_getADCError BF26                                        strlen@s 0200  
                 terminal_ringBufferPull@index 04D6                                  ??__tdiv_to_l_ 0208  
                              ?_FLASH_ReadWord 0204                       _TMR0_SetInterruptHandler C052  
                       ?_heartbeatTimerHandler 0001                     CCP2_CallBack@capturedValue 0154  
                        _INT1_InterruptHandler 018C                                      _PORTBbits 000F8E  
                                    _TMR2_Stop C18C                       _TMR3_SetInterruptHandler C028  
                           LM73Convert@QI_Conv 022A                         getDaysFromOnTime@years 0216  
                            __size_of_I2C2_ISR 0276                     __end_of_getYearsFromOnTime BA38  
                     ?_terminal_ringBufferPull 0001                        __end_of_I2C2_MasterRead B292  
                                  ___fladd@grs 0243                        _IOCBF2_InterruptHandler 0180  
                      __end_of_I2C2_Initialize B8A8                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 0208                                      i1___fladd 6E58  
                                    i1___fldiv 7F0A                               _next_adc_channel 00FD  
                                    i1___flmul 64A4                                    ___fldiv@grs 0213  
                                  ___fldiv@rem 020C                                i2___fltol@sign1 0056  
                 ??_IOCBF3_SetInterruptHandler 0203                                      i2___fladd 7166  
                                    i2___fldiv 8194                                      i2___awdiv A9FA  
                                    i2___flneg BA96                                      i2___awmod AB72  
                                    i2___flmul 67F8                                      i2___flsub B36A  
                                    i2___fltol A1A0                               __CFG_FEXTOSC$OFF 000000  
                            i2___lwdiv@divisor 0008                                      i2___lldiv AA7E  
                                    i2___llmod AD7C                                      i2___lwdiv B0B0  
                                    i2___lwmod B5D2                              i2___lwdiv@counter 000A  
                             ?_TMR5_WriteTimer 0200                           ??_EUSART2_Initialize 0203  
                      _printErrorHandlerStatus 8D74                                      i2__doprnt 1724  
                  getMinutesFromOnTime@minutes 0215                        TMR5_WriteTimer@timerVal 0200  
                  getSecondsFromOnTime@minutes 0219                    getSecondsFromOnTime@seconds 0215  
                       __size_of_ringBufferLUT 04F4                              OLED_WriteString@s 0221  
                                  ___flmul@grs 021C                                    _CCP2CONbits 000FA8  
                                 _EUSART2_Read B654                             i2___llmod@dividend 000E  
                                   ?_OLED_Init 0001                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit BDE6  
         __size_of_terminalTextAttributesReset 0010                            __size_of__div_to_l_ 00F6  
                            __size_of_INT1_ISR 000A                             _adc_result_scaling 00CD  
                            __size_of_INT2_ISR 000A         terminalTextAttributes@foreground_color 04C0  
              __size_of_terminalTextAttributes 0386                        ?_LM73AcquisitionHandler 0001  
                   ??_printCurrentMeasurements 02AE                       __size_of_CCP2_Initialize 0022  
                 __end_of_INTERRUPT_Initialize BD86           __end_of_TMR2_DefaultInterruptHandler C1AC  
        __size_of_TMR2_DefaultInterruptHandler 0002                   _TMR2_DefaultInterruptHandler C1AA  
                       ??_I2C2_BusCollisionISR 0100                 ??_ADCC_DefaultInterruptHandler 0001  
                               __end_of___flge 9DBA                                 __end_of___fleq A866  
                               ?i1_TMR3_Reload 0001                                  i2_TMR1_Reload C0DE  
                    i2TMR1_WriteTimer@timerVal 0001                     ??_I2C2_MasterWriteTRBBuild 0207  
                               __end_of___wmul BB92             __size_of_ADC_PostProcessingHandler 0974  
                                i2_TMR3_Reload C0EC                              __size_of_TMR0_ISR 0028  
                            __size_of_TMR1_ISR 0034                              __size_of_TMR2_ISR 0028  
                   ?_ADC_PostProcessingHandler 0001                              __size_of_TMR3_ISR 0034  
                               _TMR1_StopTimer C184            __size_of_IOCBF3_SetInterruptHandler 000E  
                                   ?_TMR2_Stop 0001                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07E0                            __end_of_getDeviceID BDA6  
                               __end_of_fround 7736              __size_of_ADCC_GetConversionResult 0014  
                    __size_of_I2C2_MasterWrite 0050                               ?_clearUARTErrors 0001  
                    ?_ADCC_GetConversionResult 0001                       __size_of_updateErrorLEDs 0046  
                             i2___wmul@product 0005                                 __end_of_printf B74A  
                                  _adc_results 00DE                             _getMajorRevisionID B786  
                               __end_of_strcat AEA0                                 __end_of_strcmp B152  
                               __end_of_strcpy B2DA                                 __end_of_strlen BA96  
                       ?_I2C2_FunctionComplete 0001                              __size_ofi2___flge 00D0  
                          start_initialization A74C                              __size_ofi2___fleq 008A  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                          __end_of_LM73Convert 7C80                                    ??_I2C2_Stop 0100  
                     __size_of_TMR0_Initialize 002A                __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of__tdiv_to_l_ 981C                        _getNXQChargeStateString AEA0  
                        __end_of_INT1_CallBack BCC2                                     ?i1___fladd 010E  
                               _TMR2_StopTimer C16A                                     ?i1___fldiv 011E  
                                   ?i1___flmul 0137                                      i2printf@f 00A4  
      OLED_UpdateFromRAMBuffer@char_index_4057 0224        OLED_UpdateFromRAMBuffer@char_index_4058 0225  
      OLED_UpdateFromRAMBuffer@char_index_4059 0226                                     ?i2___fladd 0052  
EUSART2_SetRxInterruptHandler@interruptHandler 0200  EUSART2_SetTxInterruptHandler@interruptHandler 0200  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 0001  
                                   ?i2___awmod 0001                                     ?i2___flmul 002C  
                                   ?i2___flsub 0064                                     ?i2___fltol 004E  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0201                                     ?i2___lwdiv 0006  
                        __end_of_INT2_CallBack BC9E                                     ?i2___lwmod 0001  
                            __size_ofi2_printf 003C                          __end_of_EUSART2_Write B482  
                               _device_on_time 02AE                                     ?i2__doprnt 006C  
                      __end_ofi2_EUSART2_Write B5D2                                 _TMR3_StopTimer C180  
                              ___llmod@divisor 0211                              _LM73_temp_results 019C  
                              ___llmod@counter 0215                               _nxq_charge_state 0195  
              I2C2_MasterWriteTRBBuild@address 0205                       __size_of_PIN_MANAGER_IOC 0014  
                                   ?i2_isdigit 0001                           I2C2_MasterRead@pdata 0209  
                     ?_I2C2_MasterReadTRBBuild 0200                           I2C2_MasterRead@pflag 020E  
                   __end_of_getHoursFromOnTime 9CE8                                    _getI2CError BB42  
                             __CFG_LPBOREN$OFF 000000                                    _getADCError BF10  
                    __size_of_OLED_WriteString 0058                 __end_of_LM73AcquisitionHandler 8D74  
                     __size_of_TMR1_Initialize 0050                 _ADC_PostProcessingHandler$6310 007B  
               _ADC_PostProcessingHandler$6311 007F                 _ADC_PostProcessingHandler$6312 006C  
               _ADC_PostProcessingHandler$6313 0070                 _ADC_PostProcessingHandler$6314 0074  
                                     ??___flge 0208                          __size_of_OLED_Command 0066  
                                     ??___fleq 0208                               ??_PMD_Initialize 0200  
                       ?_terminalSetCursorHome 0001                                       ??___wmul 0204  
                            ??_CCP2_CaptureISR 0156                  I2C2_MasterWriteTRBBuild@pdata 0202  
                               ?i2_TMR1_Reload 0001                           I2C2_ISR@pi2c_buf_ptr 00D1  
                                  _CCPTMRSbits 000FAE                           ??_getMajorRevisionID 020B  
                                   OLED_YX@Row 0218                                    __doprnt@idx 025A  
                                  __doprnt@len 026D                                    __doprnt@val 0279  
                       __end_of_TMR1_StopTimer C188                                    __pdataBANK0 00FD  
                                  __pdataBANK2 02FF                                    __pdataBANK3 03B9  
                               ?i2_TMR3_Reload 0001                                       ??_fround 022B  
                                _ringBufferLUT 482A                     __end_of_EXT_INT_Initialize B872  
                ?_TMR2_DefaultInterruptHandler 0001                          __size_of_OLED_PutChar 00C4  
                                     ??_printf 02A7              getCauseOfReset@return_reset_cause 0200  
                               _TMR5_StopTimer C17C                       getSecondsFromOnTime@days 0217  
                                     ??_strcat 0204                                       ??_strcmp 0204  
                                     ??_strcpy 0207                                       ??_strlen 0202  
            __end_of_ADC_PostProcessingHandler 482A                     __end_of_getMinorRevisionID BC30  
                                    ___fladd@a 0238                                      ___fladd@b 0234  
                     __end_ofi2_TMR1_StopTimer C194                                     fround@prec 0233  
                               _eusart2RxCount 0197                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 0204                                      ___fldiv@b 0200  
          __end_of_getNXQChargeStateStringCaps AF58                    _getNXQChargeStateStringCaps AEFC  
                       __end_of_TMR2_StopTimer C170                               ?_I2C2_MasterRead 0209  
                        _qi_isns_average_index 00D7                                      ___flmul@a 0212  
                                    ___flmul@b 020E                               ?_I2C2_Initialize 0001  
                                    ___flsub@a 0248                                      ___flsub@b 0244  
                                     ?_OLED_YX 0214                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0200  
                                __pcstackBANK3 03DD                                  __pcstackBANK4 04C0  
                       _terminalTextAttributes 5DCA                       __size_of_TMR2_Initialize 0032  
                __size_of_getMinutesFromOnTime 0150                    ?_IOCBF2_SetInterruptHandler 0200  
                            i2___lwmod@divisor 0003                      ??_printErrorHandlerStatus 02AE  
                            __size_of___xxtofl 0144                              i2___lwmod@counter 0005  
                                 _isdigit$5355 0201             __size_of_QIIdleChargedTimerHandler 0020  
                          EUSART2_Write@txData 0200                     ?_QIIdleChargedTimerHandler 0001  
                                _i2c2_tr_queue 01B8                         __end_of_TMR3_StopTimer C184  
                              i1___xxtofl@sign 0108                           _freq_meas_start_flag 02B9  
                ??_getNXQChargeStateStringCaps 0202                    __end_of_ADCC_StopConversion C1A4  
                      ?_getStringSecondsAsTime 0297                                       ?i2_scale 0045  
              ??_EUSART2_SetRxInterruptHandler 0203                   __size_of_terminalClearScreen 0010  
                                     ?i2_putch 0001                                      __doprnt@c 0283  
                                    __doprnt@f 024E                          _INT2_InterruptHandler 0189  
                                 _OLED_Command AD16                              i1___fldiv@new_exp 012F  
                                  ??_OLED_Init 0214                          _TMR0_InterruptHandler 0177  
                                    __pnvBANK2 02FE                    getMinorRevisionID@REVID_RAW 020B  
                      _IOCBF3_InterruptHandler 017D                     ??_LM73TempSensorInitialize 0210  
                             ___lwdiv@dividend 0205                         _PIN_MANAGER_Initialize A44E  
                 __end_of_rightCapTouchHandler BF52               ??_IOCBF2_DefaultInterruptHandler 0001  
              ?_IOCBF2_DefaultInterruptHandler 0001                                   _OLED_PutChar A020  
                   __end_of_OLED_updateHandler 3EB6                       __size_of_TMR3_Initialize 0050  
                    __size_of_QIIdleIOCHandler 0014                        ??_getCauseOfResetString 0202  
                              ??i1_TMR3_Reload 0102                 __size_of_freqMeasStartCaptures 000A  
                                    __pintcode 0008                  __end_of_freqMeasStartCaptures C134  
                                  _getDeviceID BD86               __end_of_TMR1_SetInterruptHandler C052  
                                __pmediumconst E696                                       ?___fladd 0234  
                                     ?___fldiv 0200                                       ?___awdiv 0206  
                                    __ptext100 95FA                                      __ptext101 BA68  
                                    __ptext110 8B48                                      __ptext102 B4C6  
                                     ?___flneg 0200                                      __ptext111 79E4  
                                    __ptext103 AFB2                                      __ptext200 7166  
                                    __ptext112 9232                                      __ptext104 A624  
                                    __ptext201 67F8                                      __ptext121 B8DC  
                                    __ptext113 6150                                      __ptext105 AD16  
                                    __ptext210 BFA4                                      __ptext202 9DBA  
                                    __ptext130 C16A                                      __ptext122 BDA6  
                                    __ptext114 B1F2                                      __ptext106 B6D0  
                                    __ptext211 C1A4                                      __ptext203 8194  
                                    __ptext131 C18C                                      __ptext123 C1A8  
                                    __ptext115 B3F8                                      __ptext107 A020  
                                    __ptext212 BFB8                                      __ptext204 B7FE  
                                    __ptext140 BEDE                                      __ptext132 C0D0  
                                    __ptext124 C188                                      __ptext116 B242  
                                    __ptext108 A25A                                      __ptext213 0000  
                                    __ptext205 BA96                                      __ptext141 B614  
                                    __ptext133 C15C                                      __ptext125 C0C2  
                                    __ptext117 A3AC                                      __ptext109 8910  
                                    __ptext206 C176                                      __ptext150 C1AC  
                                    __ptext142 9F56                                      __ptext134 C170  
                                    __ptext126 BDC6                                      __ptext118 C134  
                                    __ptext207 C19C                                      __ptext151 C190  
                                    __ptext143 9376                                      __ptext135 869A  
                                    __ptext127 BB92                                      __ptext119 B05E  
                                    __ptext208 C1A0                                      __ptext160 BE58  
                                    __ptext152 BBBA                                      __ptext144 64A4  
                                    __ptext136 B50A                                      __ptext128 BEAA  
                                    __ptext209 C11E                                      __ptext161 BB18  
                                    __ptext153 C1AE                                      __ptext145 7F0A  
                                    __ptext137 BEC4                                      __ptext129 C1AA  
                                    __ptext170 C1B4                                      __ptext162 C1B2  
                                    __ptext154 A4EE                                      __ptext146 6E58  
                                    __ptext138 C112                                      __ptext171 BF3C  
                                    __ptext163 BF90                                      __ptext155 BF7C  
                                    __ptext139 B976                                      __ptext180 AB72  
                                    __ptext172 C148                                      __ptext164 C0EC  
                                    __ptext156 BAEE                                      __ptext148 B910  
                                    __ptext181 A9FA                                      __ptext173 BC9E  
                                    __ptext165 BE74                                      __ptext157 C1B0  
                                    __ptext149 BF26                                      __ptext190 BC30  
                                    __ptext182 C152                                      __ptext174 C1B6  
                                    __ptext166 C194                                      __ptext158 BE3C  
                                    __ptext191 AD7C                                      __ptext183 B590  
                                    __ptext175 BF52                                      __ptext167 C198  
                                    __ptext159 C0DE                                      __ptext192 AA7E  
                                    __ptext184 BDE6                                      __ptext176 A308  
                                    __ptext168 C13E                                      __ptext193 A1A0  
                                    __ptext185 7736                                      __ptext177 B7C2  
                                    __ptext169 BC7A                                      __ptext194 A866  
                                    __ptext186 B5D2                                      __ptext178 1724  
                                    __ptext195 BBE2                                      __ptext187 B0B0  
                                    __ptext179 560C                                       ?___awmod 0200  
                                    __ptext196 C1B8                                      __ptext188 981C  
                                    __ptext197 3EB6                                      __ptext189 9B04  
                                    __ptext198 94BA                                      __ptext199 B36A  
                                     ?___flmul 020E                                       ?___flsub 0244  
                                     ?___fltol 0230                                       ?___lldiv 0200  
                                     ?___llmod 020D                                      __npowers_ E6CB  
                                     ?___lwdiv 0205                                _getCauseOfReset AF58  
                                     ?___lwmod 0200                                 ?_ringBufferLUT 03F9  
                                    _getUserID B8A8                                ?_TMR1_StopTimer 0001  
                       __end_of_TMR5_StopTimer C180              _EUSART2_TxDefaultInterruptHandler 0186  
                                     ?__doprnt 024C                         OLED_PutChar@data_array 0214  
                                  __pintcodelo 0018                                       _I2C2_ISR 869A  
                    __size_ofi1_TMR3_StopTimer 0004                                    _LM73Convert 79E4  
                                  __tdiv_to_l_ 971C                                    ??_TMR2_Stop 0100  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 0208  
                                     _BAUD2CON 000E9F                              ??_CCP2_Initialize 0200  
                    ??_getNXQChargeStateString 0202                     ??_INT2_SetInterruptHandler 0203  
                     __size_of_TMR1_StartTimer 0004                                       ?_isdigit 0001  
                                     ?_memmove 0200                                ?_TMR2_StopTimer 0001  
                  getStringSecondsAsTime@hours 03F5                    getStringSecondsAsTime@years 03F3  
                             __CFG_WDTE$NSLEEP 000000             __end_of_IOCBF3_SetInterruptHandler C06E  
                   _IOCBF3_SetInterruptHandler C060                                    ??i1___fladd 0116  
                       getHoursFromOnTime@days 0217                                    ??i1___fldiv 0126  
                                  ??i1___flmul 013F                                      _hexpowers E6FF  
            __size_of_OLED_UpdateFromRAMBuffer 0122                      ?_OLED_UpdateFromRAMBuffer 0001  
                             ___lwdiv@quotient 020A                                    ??i2___fladd 005A  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0005                                    ??i2___awmod 0005  
                                     ?_sprintf 0284                                    ??i2___flmul 0034  
                                  ??i2___flsub 005E                                    ??i2___fltol 0052  
                            ??_updateErrorLEDs 0200                                    ??i2___lldiv 0009  
                                     _T2CLKCON 000FBF                                 __size_of_scale 0434  
                                  ??i2___llmod 0016                 __end_of_getStringSecondsAsTime 5DCA  
                                     ?_strncpy 0200                                    ??i2___lwdiv 000A  
                                  ??i2___lwmod 0005                                 __size_of_putch 0014  
                         _INTERRUPT_Initialize BD66                                ?_TMR3_StopTimer 0001  
                                  ??i2__doprnt 0072              __end_of_QIIdleChargedTimerHandler BDC6  
              __end_of_I2C2_MasterReadTRBBuild B0B0                              ??_TMR0_Initialize 0203  
                 __size_of_leftCapTouchHandler 0016                   __size_of_EUSART2_Receive_ISR 00A4  
                     _pos12_isns_average_index 00D8                                       _INT1_ISR C148  
                                     _INT2_ISR C13E                                 ___wmul@product 0204  
                             i2__doprnt@tmpval 0091                               ?i2_EUSART2_Write 0001  
                                     _LATBbits 000F84                                       _LATCbits 000F85  
            __size_of_INT1_SetInterruptHandler 000E                      ?_INT1_SetInterruptHandler 0200  
                                  strncpy@from 0202                                       _IPR0bits 000EBA  
                                     _IPR1bits 000EBB                                       _PIE0bits 000EC2  
                                     _IPR3bits 000EBD                                       _PIE1bits 000EC3  
                                     _IPR4bits 000EBE                                    strncpy@size 0204  
                                     _PIE3bits 000EC5                                       _IPR6bits 000EC0  
                                     _PIE4bits 000EC6                                       _PIE6bits 000EC8  
                                  ??i2_isdigit 0001                       __size_of_TMR2_StartTimer 0006  
                          __CFG_BORV$VBOR_2P45 000000                       __size_of_TMR1_WriteTimer 0020  
          __end_of_ADC_acquisitionTimerHandler BEC4                    _ADC_acquisitionTimerHandler BEAA  
                        __end_of_CCP2_CallBack B654                     ??_TMR0_SetInterruptHandler 0203  
                                     _PIR0bits 000ECA                                       _PIR1bits 000ECB  
                           __end_of__div_to_l_ 9A10                               ??_FLASH_ReadByte 0204  
                                     _PIR3bits 000ECD                                       _PIR4bits 000ECE  
                              ??i2_TMR1_Reload 0003                     ??_TMR3_SetInterruptHandler 0203  
                                     _PIR6bits 000ED0                                       _PIR7bits 000ED1  
              __end_of_printErrorHandlerStatus 8F68                               ??_FLASH_ReadWord 0208  
                     __size_of_TMR5_Initialize 003C                  __size_of_getSecondsFromOnTime 017A  
             __end_of_printCurrentMeasurements 51D8                                  ??_TMR1_Reload 0202  
                            i2___fldiv@new_exp 0024                   OLED_updateHandler@dev_id_str 03DD  
                              ??i2_TMR3_Reload 0003                                       _SSP2CON1 000E96  
                                     _SSP2CON3 000E98                                       _TMR0_ISR BBBA  
                      ??_heartbeatTimerHandler 0017                                       _TMR1_ISR B910  
                                ??_TMR3_Reload 0202                                       _TMR2_ISR BB92  
                                     _TMR3_ISR B8DC                          getDaysFromOnTime@days 0215  
                                     _SSP2STAT 000E95                              ??_PIN_MANAGER_IOC 0003  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 020B                        getYearsFromOnTime@years 0211  
                              ?_TMR5_StopTimer 0001                  I2C2_MasterTRBInsert@ptrb_list 0200  
                ??_ADC_acquisitionTimerHandler 0101                              ??_TMR1_Initialize 0203  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 9DBA  
                                   _ADCON3bits 000F5B                                       i2___fleq A866  
                            ___wmul@multiplier 0200                               _I2C2_MasterWrite B1F2  
                                     i2___wmul BC30                        __size_of_FVR_Initialize 000C  
            getMinutesFromOnTime@input_seconds 020D                       __size_of_TMR3_StartTimer 0004  
               ??_TMR2_DefaultInterruptHandler 0100              __size_of_TMR2_SetInterruptHandler 000E  
                            i2___awdiv@divisor 0009                                       i2_fround 7736  
                    ?_TMR2_SetInterruptHandler 0200                                     _I2C_STATUS 01BD  
                            i2___awdiv@counter 000B                     __end_of_QIChargeIOCHandler BE58  
 ADC_PostProcessingHandler@current_adc_channel 0078                    __end_of_ADCC_GetFilterValue BFB8  
                __size_of_EUSART2_Transmit_ISR 0032            __size_of_getCauseOfResetStringSmall 0030  
                                     i2_printf B7C2                               __size_of_OLED_YX 0044  
                                    copy_data0 A760                   __end_of_I2C2_MasterTRBInsert A44E  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
          getStringSecondsAsTime@return_string 0380                        ??_ADCC_ClearAccumulator 0100  
                            i1_TMR3_WriteTimer BDC6                             _getYearsFromOnTime BA08  
                            ??_TMR2_Initialize 0203               __size_of_terminal_ringBufferPull 00F4  
                             __size_ofi2_scale 0418                                       _OledFont E71F  
                             __size_ofi2_putch 000A                __end_of_getNXQChargeStateString AEFC  
                           ?i1_TMR3_WriteTimer 0100                        __end_of_getCauseOfReset AFB2  
                     __size_of_freqMeasConvert 00CA                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult BFCC  
                     freqMeasConvert@qi_period 0150          __end_of_EUSART2_SetRxInterruptHandler C0B4  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler C0A6  
                     __size_of_TMR3_WriteTimer 0020                         OLED_PutChar@input_base 021D  
                             _OLED_WriteString AFB2                              i2_TMR1_WriteTimer BE58  
                          ?_getYearsFromOnTime 020D                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                 I2C2_MasterWriteTRBBuild@length 0204  
                              ??_ringBufferLUT 03FB                             ?i2_TMR1_WriteTimer 0001  
                          ??i1_TMR3_WriteTimer 0102                        LM73Convert@Ambient_Conv 022E  
            getSecondsFromOnTime@input_seconds 020D                        ??_OSCILLATOR_Initialize 0200  
                                    memmove@d1 0200                                      memmove@s1 0202  
               getDaysFromOnTime@input_seconds 020D                               __size_of___fladd 030E  
                             __size_of___fldiv 028A                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0354                               __size_of___flsub 0048  
                             __size_of___fltol 00BC                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
                      ??_I2C2_FunctionComplete 0100                               __size_of__doprnt 1724  
                                  _fround$5930 022B                                    _fround$5929 022F  
                  ??_ADC_PostProcessingHandler 005E                              ??_TMR3_Initialize 0203  
                     _TMR1_SetInterruptHandler C044                          __end_ofi2__tdiv_to_l_ 991A  
                                ?_getUARTError 0001                                _putch$intlevel0 BF6E  
                          __end_of_TMR1_Reload C028                            ??i2_TMR1_WriteTimer 0003  
          __end_of_terminalTextAttributesReset BFDC                    _terminalTextAttributesReset BFCC  
                        _TMR1_InterruptHandler 016E                            __end_of_TMR3_Reload C01A  
                                     ___xxtofl 9232                                     _T0CON0bits 000FD5  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0202  
              ??_INTERRUPT_InterruptManagerLow 0158                               __size_of_isdigit 0022  
                         ??_getYearsFromOnTime 0211                   __size_of_QIErrorTimerHandler 0016  
                             __size_of_memmove 00AE                      getSecondsFromOnTime@hours 0218  
                              ___lwdiv@divisor 0207                      getSecondsFromOnTime@years 0216  
                              ___lwdiv@counter 0209                           _rightCapTouchHandler BF3C  
                                     __ptext10 AE42                                       __ptext11 AEA0  
                                     __ptext20 BB42                                       __ptext12 B8A8  
                                     __ptext21 BF10                                       __ptext13 A58C  
                                   _T1GCONbits 000FD0                                       __ptext30 C180  
                                     __ptext22 B654                                       __ptext14 B9A8  
                                     __ptext31 C00C                                       __ptext23 BFEC  
                                     __ptext15 C0FA                                       __ptext40 B944  
                                     __ptext32 BD26                                       __ptext24 BFFC  
                                     __ptext16 BE04                                       __ptext41 C036  
                                     __ptext33 C184                                       __ptext25 B70E  
                                     __ptext17 BFDC                                       __ptext50 BEF8  
                                     __ptext42 B1A2                                       __ptext34 C01A  
                                     __ptext26 AF58                                       __ptext18 B3B2  
                                     __ptext51 BD66                                       __ptext43 C044  
                                     __ptext35 BD46                                       __ptext27 C12A  
                                     __ptext19 C164                                       __ptext60 BCC2  
                                     __ptext52 B872                                       __ptext44 BAC4  
                                     __ptext36 B692                                       __ptext28 BD06  
                                     __ptext61 ADE2                                       __ptext53 C106  
                                     __ptext45 C052                                       __ptext37 B74A  
                                     __ptext29 C17C                                       __ptext70 BF68  
                                     __ptext62 C0B4                                       __ptext54 B83A  
                                     __ptext46 BE20                                       __ptext38 B152  
                                     __ptext71 B43E                                       __ptext63 2E3C  
                                     __ptext55 C07C                                       __ptext47 A44E  
                                     __ptext39 C028                                       __ptext80 B322  
                                     __ptext72 BCE4                                       __ptext64 B292  
                                     __ptext56 C08A                                       __ptext48 C060  
                                     __ptext81 6B4A                                       __ptext73 7474  
                                     __ptext65 B2DA                                       __ptext57 ACB0  
                                     __ptext49 C06E                                       __ptext90 B786  
                                     __ptext82 B9D8                                       __ptext74 B482  
                                     __ptext66 0000                                       __ptext58 C098  
                                     __ptext91 9BF8                                       __ptext83 9CE8  
                                     __ptext75 B00A                                       __ptext67 51D8  
                                     __ptext59 C0A6                                       __ptext92 BD86  
                                     __ptext84 A7DA                                       __ptext76 971C  
                                     __ptext68 AB00                                       __ptext93 B54E  
                                     __ptext85 BA08                                       __ptext77 991A  
                                     __ptext69 A8F0                                       __ptext94 BE90  
                                     __ptext86 8F68                                       __ptext78 ABE2  
                                     __ptext95 A6BC                                       __ptext87 AEFC  
                                     __ptext79 A0E4                                       __ptext96 BB6A  
                                     __ptext88 90E2                                       __ptext97 A976  
                                     __ptext89 BC0A                                       __ptext98 BA38  
                                     __ptext99 7C80                                       __powers_ E697  
                    __end_ofi1_TMR3_WriteTimer BDE6                                   _SSP2CON1bits 000E96  
                                 _SSP2CON2bits 000E97                            ringBufferLUT@userID 03FD  
                            ??_TMR1_StartTimer 0001                               __size_of_sprintf 0048  
                                   _IOCBF2_ISR BB18                                     _IOCBF3_ISR BAEE  
                                   _T3GCONbits 000FCA                     getStringSecondsAsTime@days 03F4  
                   getStringSecondsAsTime@buff 03DD                        TMR3_WriteTimer@timerVal 0200  
                             __size_of_strncpy 0066                    __size_of_EUSART2_Initialize 0066  
                                   strcpy@from 0205                                 i2_isdigit$5355 0002  
                              _CCP2_CaptureISR BEDE                                  __size_of_fabs 003C  
                                __size_of_main 027E                                     _T5GCONbits 000FC4  
                 OLED_updateHandler@rev_id_str 03EE                                  OLED_Clear@col 0223  
                    __end_ofi2_TMR1_WriteTimer BE74                           __end_ofi2__div_to_l_ 9BF8  
                                OLED_Clear@row 0221           __end_of_TMR0_DefaultInterruptHandler C1B0  
        __size_of_TMR0_DefaultInterruptHandler 0002                   _TMR0_DefaultInterruptHandler C1AE  
                              i2__doprnt@width 009D                                  OLED_YX@Column 0214  
                         __CFG_WDTCWS$WDTCWS_7 000000                        __size_of_clearI2CErrors 001C  
                      ??_terminalSetCursorHome 02AE                                   ?_getI2CError 0001  
                      I2C2_MasterWrite@address 020C          terminalTextAttributes@input_attribute 03F8  
                                 ?_getADCError 0001                        __size_of_clearADCErrors 0010  
                     __size_of_TMR5_WriteTimer 0020                                 OLED_PutChar@ch 0220  
                            i2_TMR3_WriteTimer BE74                               _QIIdleIOCHandler BF90  
                                   _RC2STAbits 000E9D                      i1TMR3_WriteTimer@timerVal 0100  
                 __end_of_ADCC_StartConversion C0DE                                       int$flags 005E  
                           ?i2_TMR3_WriteTimer 0001                                    ??_getUserID 020D  
                            ??_TMR2_StartTimer 0001                        I2C2_MasterWrite@trBlock 01B3  
                            ??_TMR1_WriteTimer 0202                               i1_TMR3_StopTimer C188  
                               ??_getUARTError 0200                                 __doprnt@tmpval 0271  
         __end_of_TMR3_DefaultInterruptHandler C1AA          __size_of_TMR3_DefaultInterruptHandler 0002  
                 _TMR3_DefaultInterruptHandler C1A8                  __size_of_I2C2_BusCollisionISR 000C  
                          _terminalClearScreen BFFC           __end_of_INT1_DefaultInterruptHandler C1B8  
        __size_of_INT1_DefaultInterruptHandler 0002                   _INT1_DefaultInterruptHandler C1B6  
                            ??_TMR5_Initialize 0200                             _getHoursFromOnTime 9BF8  
                      ?_terminalTextAttributes 03F7               __size_of_I2C2_MasterReadTRBBuild 0052  
                            i2___awmod@divisor 0003                            ??i2_TMR3_WriteTimer 0003  
                            i2___awmod@counter 0005                              ?i2_TMR1_StopTimer 0001  
                            _getDaysFromOnTime A6BC                                     _INTCONbits 000FF2  
                                  _NVMCON1bits 000F81                                     _FVRCONbits 000F31  
                        ?_rightCapTouchHandler 0001                             ??i2_TMR1_StopTimer 0001  
                           ?_getDaysFromOnTime 020D                                       isdigit@c 0202  
                       ??_INTERRUPT_Initialize 0200                            ?_getHoursFromOnTime 020D  
            __size_of_printCurrentMeasurements 04BA                                       memmove@d 0208  
                                     memmove@n 0204                                       memmove@s 020A  
                                     scale@scl 022F                      ?_printCurrentMeasurements 0001  
                           _EXT_INT_Initialize B83A                       __size_of_clearUARTErrors 000C  
            __size_of_I2C2_MasterWriteTRBBuild 0046                    ??_QIIdleChargedTimerHandler 0102  
                    ?_I2C2_MasterWriteTRBBuild 0200           __end_of_ADCC_DefaultInterruptHandler C1BA  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler C1B8  
                            ??_TMR3_StartTimer 0001                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear B6D0  
                                    sprintf@ap 0290                                      sprintf@pb 0292  
                             __tdiv_to_l_@exp1 0210                                      sprintf@wh 0284  
                             __tdiv_to_l_@cntr 020F                                     _OLED_Frame 02B7  
                           _getMinorRevisionID BC0A             __end_of_getCauseOfResetStringSmall BA68  
                   _getCauseOfResetStringSmall BA38                               __tdiv_to_l_@quot 020B  
                              i2___xxtofl@sign 000D                      _ADC_PostProcessingHandler 3EB6  
                         ?_terminalClearScreen 0001                            ??_getDaysFromOnTime 0211  
                             ___lwmod@dividend 0200                            I2C2_ISR@i2c_address 00FA  
                             ___lldiv@dividend 0200                        ?_PIN_MANAGER_Initialize 0001  
                            __CFG_CLKOUTEN$OFF 000000                            ?_EXT_INT_Initialize 0001  
                    __end_ofi2_TMR3_WriteTimer BE90                           LM73Convert@POS5_Conv 022C  
                                  _reset_cause 02FE                               ?_getCauseOfReset 0001  
                             ??_TMR1_StopTimer 0200                   __end_of_getMinutesFromOnTime 9232  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 0206  
                                    strncpy@to 0200                  ?_TMR0_DefaultInterruptHandler 0001  
                              _CCP2_Initialize BCC2                           ??_getHoursFromOnTime 0211  
                                 ?_getDeviceID 020B                         I2C2_MasterWrite@length 020B  
                              _QI_current_edge 0196                                    _TMR1_Reload C01A  
                                     printf@ap 02A7                                       printf@pb 02A9  
                       __size_of_INT1_CallBack 0024             terminalTextAttributes@print_string 04C1  
               __size_of_getCauseOfResetString 0030                                    _TMR3_Reload C00C  
                __end_of_getCauseOfResetString B9D8                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult BFB8                              ??_freqMeasConvert 0150  
               ?_EUSART2_SetRxInterruptHandler 0200               __end_of_OLED_UpdateFromRAMBuffer 971C  
                         _I2C2_MasterTRBInsert A3AC                               ??_TMR2_StopTimer 0100  
                            ??_TMR3_WriteTimer 0202         terminalTextAttributes@background_color 03F7  
                       __size_of_INT2_CallBack 0024                                   ?_LM73Convert 0001  
               __end_of_terminalTextAttributes 6150                                   ?__tdiv_to_l_ 0200  
                          _leftCapTouchHandler BF52                         __size_of_EUSART2_Write 0044  
                          _EUSART2_Receive_ISR A308                                _updateErrorLEDs B3B2  
                    __end_of_getDaysFromOnTime A74C         __end_of_INTERRUPT_InterruptManagerHigh 9F56  
      __size_of_INTERRUPT_InterruptManagerHigh 9F4E                 _INTERRUPT_InterruptManagerHigh 0008  
                  getMajorRevisionID@REVID_RAW 020E                                 _FVR_Initialize C106  
                         ??_EXT_INT_Initialize 0203                          CCP2_CaptureISR@module 0156  
                                     sprintf@f 0286                                       strcat@cp 0204  
                ?_TMR3_DefaultInterruptHandler 0001                                       strcat@to 0200  
                ?_INT1_DefaultInterruptHandler 0001                                       strcmp@s1 0200  
                                     strcmp@s2 0202                                     _SSP2DATPPS 000E90  
                            ringBufferLUT@line 03F9                               ___lldiv@quotient 0208  
                           _OLED_updateHandler 2E3C                                     _SSP2CLKPPS 000E8F  
                              ___lwmod@divisor 0202         __end_of_IOCBF2_DefaultInterruptHandler C1B4  
      __size_of_IOCBF2_DefaultInterruptHandler 0002                 _IOCBF2_DefaultInterruptHandler C1B2  
                              _TMR0_Initialize BAC4                                       strcpy@cp 0207  
                                     strlen@cp 0202                                       strcpy@to 0203  
                         ??_getMinorRevisionID 020B                                ___lwmod@counter 0204  
                             ??_TMR3_StopTimer 0200               __end_of_INT1_SetInterruptHandler C098  
                      __end_of_CCP2_CaptureISR BEF8                              _getDeviceIDString A58C  
                  ?_IOCBF3_SetInterruptHandler 0200                                     _TMR2_Start C19C  
                                   _TX2STAbits 000E9E                                  ___fladd@signs 0240  
                   __size_ofi1_TMR3_WriteTimer 0020                            ?_OLED_updateHandler 0001  
                           ?_getDeviceIDString 020D          __end_of_INTERRUPT_InterruptManagerLow 00C2  
       __size_of_INTERRUPT_InterruptManagerLow 00AA                  _INTERRUPT_InterruptManagerLow 0018  
                                  ?_IOCBF2_ISR 0001                                    ?_IOCBF3_ISR 0001  
               ??_ADCC_SetADTIInterruptHandler 0203                 __end_of_PIN_MANAGER_Initialize A4EE  
                            ??_ADCC_Initialize 0203                          ??_terminalClearScreen 02AE  
                            i2__div_to_l_@exp1 000E                       __size_of_I2C2_MasterRead 0050  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 9A10  
                         ?_leftCapTouchHandler 0001                       __size_of_I2C2_Initialize 0036  
              ??_EUSART2_SetTxInterruptHandler 0203                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001                                   ___fladd@aexp 0241  
                                 ___fladd@bexp 0242                  ?_ADCC_DefaultInterruptHandler 0001  
                   ADC_PostProcessingHandler@i 0079                             __size_of_I2C2_Stop 0044  
                              _PIN_MANAGER_IOC BF7C                       __end_of_I2C2_MasterWrite B242  
                        _TMR2_InterruptHandler 0174                     __size_ofi2_TMR1_WriteTimer 001C  
                          ??_getDeviceIDString 020F                                _TMR1_Initialize B1A2  
            _EUSART2_RxDefaultInterruptHandler 0183                               ??_TMR5_StopTimer 0200  
                 __size_of_ADCC_StopConversion 0004  
