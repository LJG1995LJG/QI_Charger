

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 12 17:42:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=2,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=2,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=2,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   176                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   177                           	psect	text149,global,reloc=2,class=CODE,delta=1
   178                           	psect	text150,global,reloc=2,class=CODE,delta=1
   179                           	psect	text151,global,reloc=2,class=CODE,delta=1
   180                           	psect	text152,global,reloc=2,class=CODE,delta=1
   181                           	psect	text153,global,reloc=2,class=CODE,delta=1
   182                           	psect	text154,global,reloc=2,class=CODE,delta=1
   183                           	psect	text155,global,reloc=2,class=CODE,delta=1
   184                           	psect	text156,global,reloc=2,class=CODE,delta=1
   185                           	psect	text157,global,reloc=2,class=CODE,delta=1
   186                           	psect	text158,global,reloc=2,class=CODE,delta=1
   187                           	psect	text159,global,reloc=2,class=CODE,delta=1
   188                           	psect	text160,global,reloc=2,class=CODE,delta=1
   189                           	psect	text161,global,reloc=2,class=CODE,delta=1
   190                           	psect	text162,global,reloc=2,class=CODE,delta=1
   191                           	psect	text163,global,reloc=2,class=CODE,delta=1
   192                           	psect	text164,global,reloc=2,class=CODE,delta=1
   193                           	psect	text165,global,reloc=2,class=CODE,delta=1
   194                           	psect	text166,global,reloc=2,class=CODE,delta=1
   195                           	psect	text167,global,reloc=2,class=CODE,delta=1
   196                           	psect	text168,global,reloc=2,class=CODE,delta=1
   197                           	psect	text169,global,reloc=2,class=CODE,delta=1
   198                           	psect	text170,global,reloc=2,class=CODE,delta=1
   199                           	psect	text171,global,reloc=2,class=CODE,delta=1
   200                           	psect	text172,global,reloc=2,class=CODE,delta=1
   201                           	psect	text173,global,reloc=2,class=CODE,delta=1
   202                           	psect	text174,global,reloc=2,class=CODE,delta=1
   203                           	psect	text175,global,reloc=2,class=CODE,delta=1
   204                           	psect	text176,global,reloc=2,class=CODE,delta=1
   205                           	psect	text177,global,reloc=2,class=CODE,delta=1
   206                           	psect	text178,global,reloc=2,class=CODE,delta=1
   207                           	psect	text179,global,reloc=2,class=CODE,delta=1
   208                           	psect	text180,global,reloc=2,class=CODE,delta=1
   209                           	psect	text181,global,reloc=2,class=CODE,delta=1
   210                           	psect	text182,global,reloc=2,class=CODE,delta=1
   211                           	psect	text183,global,reloc=2,class=CODE,delta=1
   212                           	psect	text184,global,reloc=2,class=CODE,delta=1
   213                           	psect	text185,global,reloc=2,class=CODE,delta=1
   214                           	psect	text186,global,reloc=2,class=CODE,delta=1
   215                           	psect	text187,global,reloc=2,class=CODE,delta=1
   216                           	psect	text188,global,reloc=2,class=CODE,delta=1
   217                           	psect	text189,global,reloc=2,class=CODE,delta=1
   218                           	psect	text190,global,reloc=2,class=CODE,delta=1
   219                           	psect	text191,global,reloc=2,class=CODE,delta=1
   220                           	psect	text192,global,reloc=2,class=CODE,delta=1
   221                           	psect	text193,global,reloc=2,class=CODE,delta=1
   222                           	psect	text194,global,reloc=2,class=CODE,delta=1
   223                           	psect	text195,global,reloc=2,class=CODE,delta=1
   224                           	psect	text196,global,reloc=2,class=CODE,delta=1
   225                           	psect	text197,global,reloc=2,class=CODE,delta=1
   226                           	psect	text198,global,reloc=2,class=CODE,delta=1
   227                           	psect	text199,global,reloc=2,class=CODE,delta=1
   228                           	psect	text200,global,reloc=2,class=CODE,delta=1
   229                           	psect	text201,global,reloc=2,class=CODE,delta=1
   230                           	psect	text202,global,reloc=2,class=CODE,delta=1
   231                           	psect	text203,global,reloc=2,class=CODE,delta=1
   232                           	psect	text204,global,reloc=2,class=CODE,delta=1
   233                           	psect	text205,global,reloc=2,class=CODE,delta=1
   234                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=2
   235                           	psect	text207,global,reloc=2,class=CODE,delta=1
   236                           	psect	text208,global,reloc=2,class=CODE,delta=1
   237                           	psect	text209,global,reloc=2,class=CODE,delta=1
   238                           	psect	text210,global,reloc=2,class=CODE,delta=1
   239                           	psect	text211,global,reloc=2,class=CODE,delta=1
   240                           	psect	text212,global,reloc=2,class=CODE,delta=1
   241                           	psect	text213,global,reloc=2,class=CODE,delta=1
   242                           	psect	text214,global,reloc=2,class=CODE,delta=1
   243                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   244                           	psect	text215,global,reloc=2,class=CODE,delta=1
   245                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   246                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   247  0000                     
   248                           ; Version 2.05
   249                           ; Generated 20/12/2018 GMT
   250                           ; 
   251                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   252                           ; All rights reserved.
   253                           ; 
   254                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   255                           ; 
   256                           ; Redistribution and use in source and binary forms, with or without modification, are
   257                           ; permitted provided that the following conditions are met:
   258                           ; 
   259                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   260                           ;        conditions and the following disclaimer.
   261                           ; 
   262                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   263                           ;        of conditions and the following disclaimer in the documentation and/or other
   264                           ;        materials provided with the distribution.
   265                           ; 
   266                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   267                           ;        software without specific prior written permission.
   268                           ; 
   269                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   270                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   271                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   272                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   273                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   274                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   275                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   276                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   277                           ; 
   278                           ; 
   279                           ; Code-generator required, PIC18F27K40 Definitions
   280                           ; 
   281                           ; SFR Addresses
   282  0000                     
   283                           	psect	idataBANK0
   284  01C8F6                     __pidataBANK0:
   285                           	opt callstack 0
   286                           
   287                           ;initializer for _OLED_update_time
   288  01C8F6  03                 	db	3
   289                           
   290                           ;initializer for _next_adc_channel
   291  01C8F7  3C                 	db	60
   292                           
   293                           	psect	idataBANK1
   294  01C6F6                     __pidataBANK1:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for getCauseOfResetString@strings
   298  01C6F6  9A                 	db	low STR_23
   299  01C6F7  FB                 	db	high STR_23
   300  01C6F8  14                 	db	low STR_24
   301  01C6F9  FC                 	db	high STR_24
   302  01C6FA  AA                 	db	low STR_25
   303  01C6FB  FB                 	db	high STR_25
   304  01C6FC  E0                 	db	low STR_26
   305  01C6FD  FA                 	db	high STR_26
   306  01C6FE  8F                 	db	low (STR_28+9)
   307  01C6FF  F4                 	db	high (STR_28+9)
   308  01C700  86                 	db	low STR_28
   309  01C701  F4                 	db	high STR_28
   310  01C702  D9                 	db	low STR_29
   311  01C703  F8                 	db	high STR_29
   312  01C704  7C                 	db	low STR_30
   313  01C705  FA                 	db	high STR_30
   314  01C706  3C                 	db	low STR_31
   315  01C707  FA                 	db	high STR_31
   316                           
   317                           	psect	idataBANK2
   318  01C708                     __pidataBANK2:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for getCauseOfResetStringSmall@strings
   322  01C708  B2                 	db	low STR_22
   323  01C709  FE                 	db	high STR_22
   324  01C70A  A8                 	db	low STR_34
   325  01C70B  FE                 	db	high STR_34
   326  01C70C  9E                 	db	low STR_35
   327  01C70D  FE                 	db	high STR_35
   328  01C70E  4C                 	db	low STR_36
   329  01C70F  FE                 	db	high STR_36
   330  01C710  58                 	db	low (STR_38+1)
   331  01C711  FE                 	db	high (STR_38+1)
   332  01C712  57                 	db	low STR_38
   333  01C713  FE                 	db	high STR_38
   334  01C714  05                 	db	low STR_39
   335  01C715  FC                 	db	high STR_39
   336  01C716  36                 	db	low STR_40
   337  01C717  FE                 	db	high STR_40
   338  01C718  41                 	db	low STR_41
   339  01C719  FE                 	db	high STR_41
   340                           
   341                           	psect	mediumconst
   342  00E426                     __pmediumconst:
   343                           	opt callstack 0
   344  00E426  00                 	db	0
   345  00E427                     __powers_:
   346                           	opt callstack 0
   347  00E427  0000               	dw	0
   348  00E429  3F80               	dw	16256
   349  00E42B  0000               	dw	0
   350  00E42D  4120               	dw	16672
   351  00E42F  0000               	dw	0
   352  00E431  42C8               	dw	17096
   353  00E433  0000               	dw	0
   354  00E435  447A               	dw	17530
   355  00E437  4000               	dw	16384
   356  00E439  461C               	dw	17948
   357  00E43B  5000               	dw	20480
   358  00E43D  47C3               	dw	18371
   359  00E43F  2400               	dw	9216
   360  00E441  4974               	dw	18804
   361  00E443  9680               	dw	38528
   362  00E445  4B18               	dw	19224
   363  00E447  BC20               	dw	48160
   364  00E449  4CBE               	dw	19646
   365  00E44B  6B28               	dw	27432
   366  00E44D  4E6E               	dw	20078
   367  00E44F  02F9               	dw	761
   368  00E451  5015               	dw	20501
   369  00E453  78EC               	dw	30956
   370  00E455  60AD               	dw	24749
   371  00E457  F2CA               	dw	62154
   372  00E459  7149               	dw	29001
   373  00E45B                     __end_of__powers_:
   374                           	opt callstack 0
   375  00E45B                     __npowers_:
   376                           	opt callstack 0
   377  00E45B  0000               	dw	0
   378  00E45D  3F80               	dw	16256
   379  00E45F  CCCD               	dw	52429
   380  00E461  3DCC               	dw	15820
   381  00E463  D70A               	dw	55050
   382  00E465  3C23               	dw	15395
   383  00E467  126F               	dw	4719
   384  00E469  3A83               	dw	14979
   385  00E46B  B717               	dw	46871
   386  00E46D  38D1               	dw	14545
   387  00E46F  C5AC               	dw	50604
   388  00E471  3727               	dw	14119
   389  00E473  37BD               	dw	14269
   390  00E475  3586               	dw	13702
   391  00E477  BF95               	dw	49045
   392  00E479  33D6               	dw	13270
   393  00E47B  CC77               	dw	52343
   394  00E47D  322B               	dw	12843
   395  00E47F  705F               	dw	28767
   396  00E481  3089               	dw	12425
   397  00E483  E6FF               	dw	59135
   398  00E485  2EDB               	dw	11995
   399  00E487  E508               	dw	58632
   400  00E489  1E3C               	dw	7740
   401  00E48B  4260               	dw	16992
   402  00E48D  0DA2               	dw	3490
   403  00E48F                     __end_of__npowers_:
   404                           	opt callstack 0
   405  00E48F                     _hexpowers:
   406                           	opt callstack 0
   407  00E48F  0001               	dw	1
   408  00E491  0000               	dw	0
   409  00E493  0010               	dw	16
   410  00E495  0000               	dw	0
   411  00E497  0100               	dw	256
   412  00E499  0000               	dw	0
   413  00E49B  1000               	dw	4096
   414  00E49D  0000               	dw	0
   415  00E49F  0000               	dw	0
   416  00E4A1  0001               	dw	1
   417  00E4A3  0000               	dw	0
   418  00E4A5  0010               	dw	16
   419  00E4A7  0000               	dw	0
   420  00E4A9  0100               	dw	256
   421  00E4AB  0000               	dw	0
   422  00E4AD  1000               	dw	4096
   423  00E4AF                     __end_of_hexpowers:
   424                           	opt callstack 0
   425  00E4AF                     _OledFont:
   426                           	opt callstack 0
   427  00E4AF  00                 	db	0
   428  00E4B0  00                 	db	0
   429  00E4B1  00                 	db	0
   430  00E4B2  00                 	db	0
   431  00E4B3  00                 	db	0
   432  00E4B4  00                 	db	0
   433  00E4B5  00                 	db	0
   434  00E4B6  00                 	db	0
   435  00E4B7  00                 	db	0
   436  00E4B8  00                 	db	0
   437  00E4B9  5F                 	db	95
   438  00E4BA  00                 	db	0
   439  00E4BB  00                 	db	0
   440  00E4BC  00                 	db	0
   441  00E4BD  00                 	db	0
   442  00E4BE  00                 	db	0
   443  00E4BF  00                 	db	0
   444  00E4C0  00                 	db	0
   445  00E4C1  07                 	db	7
   446  00E4C2  00                 	db	0
   447  00E4C3  07                 	db	7
   448  00E4C4  00                 	db	0
   449  00E4C5  00                 	db	0
   450  00E4C6  00                 	db	0
   451  00E4C7  00                 	db	0
   452  00E4C8  14                 	db	20
   453  00E4C9  7F                 	db	127
   454  00E4CA  14                 	db	20
   455  00E4CB  7F                 	db	127
   456  00E4CC  14                 	db	20
   457  00E4CD  00                 	db	0
   458  00E4CE  00                 	db	0
   459  00E4CF  00                 	db	0
   460  00E4D0  24                 	db	36
   461  00E4D1  2A                 	db	42
   462  00E4D2  7F                 	db	127
   463  00E4D3  2A                 	db	42
   464  00E4D4  12                 	db	18
   465  00E4D5  00                 	db	0
   466  00E4D6  00                 	db	0
   467  00E4D7  00                 	db	0
   468  00E4D8  23                 	db	35
   469  00E4D9  13                 	db	19
   470  00E4DA  08                 	db	8
   471  00E4DB  64                 	db	100
   472  00E4DC  62                 	db	98
   473  00E4DD  00                 	db	0
   474  00E4DE  00                 	db	0
   475  00E4DF  00                 	db	0
   476  00E4E0  36                 	db	54
   477  00E4E1  49                 	db	73
   478  00E4E2  55                 	db	85
   479  00E4E3  22                 	db	34
   480  00E4E4  50                 	db	80
   481  00E4E5  00                 	db	0
   482  00E4E6  00                 	db	0
   483  00E4E7  00                 	db	0
   484  00E4E8  00                 	db	0
   485  00E4E9  05                 	db	5
   486  00E4EA  03                 	db	3
   487  00E4EB  00                 	db	0
   488  00E4EC  00                 	db	0
   489  00E4ED  00                 	db	0
   490  00E4EE  00                 	db	0
   491  00E4EF  00                 	db	0
   492  00E4F0  1C                 	db	28
   493  00E4F1  22                 	db	34
   494  00E4F2  41                 	db	65
   495  00E4F3  00                 	db	0
   496  00E4F4  00                 	db	0
   497  00E4F5  00                 	db	0
   498  00E4F6  00                 	db	0
   499  00E4F7  00                 	db	0
   500  00E4F8  41                 	db	65
   501  00E4F9  22                 	db	34
   502  00E4FA  1C                 	db	28
   503  00E4FB  00                 	db	0
   504  00E4FC  00                 	db	0
   505  00E4FD  00                 	db	0
   506  00E4FE  00                 	db	0
   507  00E4FF  00                 	db	0
   508  00E500  08                 	db	8
   509  00E501  2A                 	db	42
   510  00E502  1C                 	db	28
   511  00E503  2A                 	db	42
   512  00E504  08                 	db	8
   513  00E505  00                 	db	0
   514  00E506  00                 	db	0
   515  00E507  00                 	db	0
   516  00E508  08                 	db	8
   517  00E509  08                 	db	8
   518  00E50A  3E                 	db	62
   519  00E50B  08                 	db	8
   520  00E50C  08                 	db	8
   521  00E50D  00                 	db	0
   522  00E50E  00                 	db	0
   523  00E50F  00                 	db	0
   524  00E510  A0                 	db	160
   525  00E511  60                 	db	96
   526  00E512  00                 	db	0
   527  00E513  00                 	db	0
   528  00E514  00                 	db	0
   529  00E515  00                 	db	0
   530  00E516  00                 	db	0
   531  00E517  00                 	db	0
   532  00E518  08                 	db	8
   533  00E519  08                 	db	8
   534  00E51A  08                 	db	8
   535  00E51B  08                 	db	8
   536  00E51C  08                 	db	8
   537  00E51D  00                 	db	0
   538  00E51E  00                 	db	0
   539  00E51F  00                 	db	0
   540  00E520  60                 	db	96
   541  00E521  60                 	db	96
   542  00E522  00                 	db	0
   543  00E523  00                 	db	0
   544  00E524  00                 	db	0
   545  00E525  00                 	db	0
   546  00E526  00                 	db	0
   547  00E527  00                 	db	0
   548  00E528  20                 	db	32
   549  00E529  10                 	db	16
   550  00E52A  08                 	db	8
   551  00E52B  04                 	db	4
   552  00E52C  02                 	db	2
   553  00E52D  00                 	db	0
   554  00E52E  00                 	db	0
   555  00E52F  00                 	db	0
   556  00E530  3E                 	db	62
   557  00E531  51                 	db	81
   558  00E532  49                 	db	73
   559  00E533  45                 	db	69
   560  00E534  3E                 	db	62
   561  00E535  00                 	db	0
   562  00E536  00                 	db	0
   563  00E537  00                 	db	0
   564  00E538  00                 	db	0
   565  00E539  42                 	db	66
   566  00E53A  7F                 	db	127
   567  00E53B  40                 	db	64
   568  00E53C  00                 	db	0
   569  00E53D  00                 	db	0
   570  00E53E  00                 	db	0
   571  00E53F  00                 	db	0
   572  00E540  62                 	db	98
   573  00E541  51                 	db	81
   574  00E542  49                 	db	73
   575  00E543  49                 	db	73
   576  00E544  46                 	db	70
   577  00E545  00                 	db	0
   578  00E546  00                 	db	0
   579  00E547  00                 	db	0
   580  00E548  22                 	db	34
   581  00E549  41                 	db	65
   582  00E54A  49                 	db	73
   583  00E54B  49                 	db	73
   584  00E54C  36                 	db	54
   585  00E54D  00                 	db	0
   586  00E54E  00                 	db	0
   587  00E54F  00                 	db	0
   588  00E550  18                 	db	24
   589  00E551  14                 	db	20
   590  00E552  12                 	db	18
   591  00E553  7F                 	db	127
   592  00E554  10                 	db	16
   593  00E555  00                 	db	0
   594  00E556  00                 	db	0
   595  00E557  00                 	db	0
   596  00E558  27                 	db	39
   597  00E559  45                 	db	69
   598  00E55A  45                 	db	69
   599  00E55B  45                 	db	69
   600  00E55C  39                 	db	57
   601  00E55D  00                 	db	0
   602  00E55E  00                 	db	0
   603  00E55F  00                 	db	0
   604  00E560  3C                 	db	60
   605  00E561  4A                 	db	74
   606  00E562  49                 	db	73
   607  00E563  49                 	db	73
   608  00E564  30                 	db	48
   609  00E565  00                 	db	0
   610  00E566  00                 	db	0
   611  00E567  00                 	db	0
   612  00E568  01                 	db	1
   613  00E569  71                 	db	113
   614  00E56A  09                 	db	9
   615  00E56B  05                 	db	5
   616  00E56C  03                 	db	3
   617  00E56D  00                 	db	0
   618  00E56E  00                 	db	0
   619  00E56F  00                 	db	0
   620  00E570  36                 	db	54
   621  00E571  49                 	db	73
   622  00E572  49                 	db	73
   623  00E573  49                 	db	73
   624  00E574  36                 	db	54
   625  00E575  00                 	db	0
   626  00E576  00                 	db	0
   627  00E577  00                 	db	0
   628  00E578  06                 	db	6
   629  00E579  49                 	db	73
   630  00E57A  49                 	db	73
   631  00E57B  29                 	db	41
   632  00E57C  1E                 	db	30
   633  00E57D  00                 	db	0
   634  00E57E  00                 	db	0
   635  00E57F  00                 	db	0
   636  00E580  00                 	db	0
   637  00E581  36                 	db	54
   638  00E582  36                 	db	54
   639  00E583  00                 	db	0
   640  00E584  00                 	db	0
   641  00E585  00                 	db	0
   642  00E586  00                 	db	0
   643  00E587  00                 	db	0
   644  00E588  00                 	db	0
   645  00E589  AC                 	db	172
   646  00E58A  6C                 	db	108
   647  00E58B  00                 	db	0
   648  00E58C  00                 	db	0
   649  00E58D  00                 	db	0
   650  00E58E  00                 	db	0
   651  00E58F  00                 	db	0
   652  00E590  08                 	db	8
   653  00E591  14                 	db	20
   654  00E592  22                 	db	34
   655  00E593  41                 	db	65
   656  00E594  00                 	db	0
   657  00E595  00                 	db	0
   658  00E596  00                 	db	0
   659  00E597  00                 	db	0
   660  00E598  14                 	db	20
   661  00E599  14                 	db	20
   662  00E59A  14                 	db	20
   663  00E59B  14                 	db	20
   664  00E59C  14                 	db	20
   665  00E59D  00                 	db	0
   666  00E59E  00                 	db	0
   667  00E59F  00                 	db	0
   668  00E5A0  41                 	db	65
   669  00E5A1  22                 	db	34
   670  00E5A2  14                 	db	20
   671  00E5A3  08                 	db	8
   672  00E5A4  00                 	db	0
   673  00E5A5  00                 	db	0
   674  00E5A6  00                 	db	0
   675  00E5A7  00                 	db	0
   676  00E5A8  02                 	db	2
   677  00E5A9  01                 	db	1
   678  00E5AA  51                 	db	81
   679  00E5AB  09                 	db	9
   680  00E5AC  06                 	db	6
   681  00E5AD  00                 	db	0
   682  00E5AE  00                 	db	0
   683  00E5AF  00                 	db	0
   684  00E5B0  32                 	db	50
   685  00E5B1  49                 	db	73
   686  00E5B2  79                 	db	121
   687  00E5B3  41                 	db	65
   688  00E5B4  3E                 	db	62
   689  00E5B5  00                 	db	0
   690  00E5B6  00                 	db	0
   691  00E5B7  00                 	db	0
   692  00E5B8  7E                 	db	126
   693  00E5B9  09                 	db	9
   694  00E5BA  09                 	db	9
   695  00E5BB  09                 	db	9
   696  00E5BC  7E                 	db	126
   697  00E5BD  00                 	db	0
   698  00E5BE  00                 	db	0
   699  00E5BF  00                 	db	0
   700  00E5C0  7F                 	db	127
   701  00E5C1  49                 	db	73
   702  00E5C2  49                 	db	73
   703  00E5C3  49                 	db	73
   704  00E5C4  36                 	db	54
   705  00E5C5  00                 	db	0
   706  00E5C6  00                 	db	0
   707  00E5C7  00                 	db	0
   708  00E5C8  3E                 	db	62
   709  00E5C9  41                 	db	65
   710  00E5CA  41                 	db	65
   711  00E5CB  41                 	db	65
   712  00E5CC  22                 	db	34
   713  00E5CD  00                 	db	0
   714  00E5CE  00                 	db	0
   715  00E5CF  00                 	db	0
   716  00E5D0  7F                 	db	127
   717  00E5D1  41                 	db	65
   718  00E5D2  41                 	db	65
   719  00E5D3  22                 	db	34
   720  00E5D4  1C                 	db	28
   721  00E5D5  00                 	db	0
   722  00E5D6  00                 	db	0
   723  00E5D7  00                 	db	0
   724  00E5D8  7F                 	db	127
   725  00E5D9  49                 	db	73
   726  00E5DA  49                 	db	73
   727  00E5DB  49                 	db	73
   728  00E5DC  41                 	db	65
   729  00E5DD  00                 	db	0
   730  00E5DE  00                 	db	0
   731  00E5DF  00                 	db	0
   732  00E5E0  7F                 	db	127
   733  00E5E1  09                 	db	9
   734  00E5E2  09                 	db	9
   735  00E5E3  09                 	db	9
   736  00E5E4  01                 	db	1
   737  00E5E5  00                 	db	0
   738  00E5E6  00                 	db	0
   739  00E5E7  00                 	db	0
   740  00E5E8  3E                 	db	62
   741  00E5E9  41                 	db	65
   742  00E5EA  41                 	db	65
   743  00E5EB  51                 	db	81
   744  00E5EC  72                 	db	114
   745  00E5ED  00                 	db	0
   746  00E5EE  00                 	db	0
   747  00E5EF  00                 	db	0
   748  00E5F0  7F                 	db	127
   749  00E5F1  08                 	db	8
   750  00E5F2  08                 	db	8
   751  00E5F3  08                 	db	8
   752  00E5F4  7F                 	db	127
   753  00E5F5  00                 	db	0
   754  00E5F6  00                 	db	0
   755  00E5F7  00                 	db	0
   756  00E5F8  41                 	db	65
   757  00E5F9  7F                 	db	127
   758  00E5FA  41                 	db	65
   759  00E5FB  00                 	db	0
   760  00E5FC  00                 	db	0
   761  00E5FD  00                 	db	0
   762  00E5FE  00                 	db	0
   763  00E5FF  00                 	db	0
   764  00E600  20                 	db	32
   765  00E601  40                 	db	64
   766  00E602  41                 	db	65
   767  00E603  3F                 	db	63
   768  00E604  01                 	db	1
   769  00E605  00                 	db	0
   770  00E606  00                 	db	0
   771  00E607  00                 	db	0
   772  00E608  7F                 	db	127
   773  00E609  08                 	db	8
   774  00E60A  14                 	db	20
   775  00E60B  22                 	db	34
   776  00E60C  41                 	db	65
   777  00E60D  00                 	db	0
   778  00E60E  00                 	db	0
   779  00E60F  00                 	db	0
   780  00E610  7F                 	db	127
   781  00E611  40                 	db	64
   782  00E612  40                 	db	64
   783  00E613  40                 	db	64
   784  00E614  40                 	db	64
   785  00E615  00                 	db	0
   786  00E616  00                 	db	0
   787  00E617  00                 	db	0
   788  00E618  7F                 	db	127
   789  00E619  02                 	db	2
   790  00E61A  0C                 	db	12
   791  00E61B  02                 	db	2
   792  00E61C  7F                 	db	127
   793  00E61D  00                 	db	0
   794  00E61E  00                 	db	0
   795  00E61F  00                 	db	0
   796  00E620  7F                 	db	127
   797  00E621  04                 	db	4
   798  00E622  08                 	db	8
   799  00E623  10                 	db	16
   800  00E624  7F                 	db	127
   801  00E625  00                 	db	0
   802  00E626  00                 	db	0
   803  00E627  00                 	db	0
   804  00E628  3E                 	db	62
   805  00E629  41                 	db	65
   806  00E62A  41                 	db	65
   807  00E62B  41                 	db	65
   808  00E62C  3E                 	db	62
   809  00E62D  00                 	db	0
   810  00E62E  00                 	db	0
   811  00E62F  00                 	db	0
   812  00E630  7F                 	db	127
   813  00E631  09                 	db	9
   814  00E632  09                 	db	9
   815  00E633  09                 	db	9
   816  00E634  06                 	db	6
   817  00E635  00                 	db	0
   818  00E636  00                 	db	0
   819  00E637  00                 	db	0
   820  00E638  3E                 	db	62
   821  00E639  41                 	db	65
   822  00E63A  51                 	db	81
   823  00E63B  21                 	db	33
   824  00E63C  5E                 	db	94
   825  00E63D  00                 	db	0
   826  00E63E  00                 	db	0
   827  00E63F  00                 	db	0
   828  00E640  7F                 	db	127
   829  00E641  09                 	db	9
   830  00E642  19                 	db	25
   831  00E643  29                 	db	41
   832  00E644  46                 	db	70
   833  00E645  00                 	db	0
   834  00E646  00                 	db	0
   835  00E647  00                 	db	0
   836  00E648  26                 	db	38
   837  00E649  49                 	db	73
   838  00E64A  49                 	db	73
   839  00E64B  49                 	db	73
   840  00E64C  32                 	db	50
   841  00E64D  00                 	db	0
   842  00E64E  00                 	db	0
   843  00E64F  00                 	db	0
   844  00E650  01                 	db	1
   845  00E651  01                 	db	1
   846  00E652  7F                 	db	127
   847  00E653  01                 	db	1
   848  00E654  01                 	db	1
   849  00E655  00                 	db	0
   850  00E656  00                 	db	0
   851  00E657  00                 	db	0
   852  00E658  3F                 	db	63
   853  00E659  40                 	db	64
   854  00E65A  40                 	db	64
   855  00E65B  40                 	db	64
   856  00E65C  3F                 	db	63
   857  00E65D  00                 	db	0
   858  00E65E  00                 	db	0
   859  00E65F  00                 	db	0
   860  00E660  1F                 	db	31
   861  00E661  20                 	db	32
   862  00E662  40                 	db	64
   863  00E663  20                 	db	32
   864  00E664  1F                 	db	31
   865  00E665  00                 	db	0
   866  00E666  00                 	db	0
   867  00E667  00                 	db	0
   868  00E668  3F                 	db	63
   869  00E669  40                 	db	64
   870  00E66A  38                 	db	56
   871  00E66B  40                 	db	64
   872  00E66C  3F                 	db	63
   873  00E66D  00                 	db	0
   874  00E66E  00                 	db	0
   875  00E66F  00                 	db	0
   876  00E670  63                 	db	99
   877  00E671  14                 	db	20
   878  00E672  08                 	db	8
   879  00E673  14                 	db	20
   880  00E674  63                 	db	99
   881  00E675  00                 	db	0
   882  00E676  00                 	db	0
   883  00E677  00                 	db	0
   884  00E678  03                 	db	3
   885  00E679  04                 	db	4
   886  00E67A  78                 	db	120
   887  00E67B  04                 	db	4
   888  00E67C  03                 	db	3
   889  00E67D  00                 	db	0
   890  00E67E  00                 	db	0
   891  00E67F  00                 	db	0
   892  00E680  61                 	db	97
   893  00E681  51                 	db	81
   894  00E682  49                 	db	73
   895  00E683  45                 	db	69
   896  00E684  43                 	db	67
   897  00E685  00                 	db	0
   898  00E686  00                 	db	0
   899  00E687  00                 	db	0
   900  00E688  7F                 	db	127
   901  00E689  41                 	db	65
   902  00E68A  41                 	db	65
   903  00E68B  00                 	db	0
   904  00E68C  00                 	db	0
   905  00E68D  00                 	db	0
   906  00E68E  00                 	db	0
   907  00E68F  00                 	db	0
   908  00E690  02                 	db	2
   909  00E691  04                 	db	4
   910  00E692  08                 	db	8
   911  00E693  10                 	db	16
   912  00E694  20                 	db	32
   913  00E695  00                 	db	0
   914  00E696  00                 	db	0
   915  00E697  00                 	db	0
   916  00E698  41                 	db	65
   917  00E699  41                 	db	65
   918  00E69A  7F                 	db	127
   919  00E69B  00                 	db	0
   920  00E69C  00                 	db	0
   921  00E69D  00                 	db	0
   922  00E69E  00                 	db	0
   923  00E69F  00                 	db	0
   924  00E6A0  04                 	db	4
   925  00E6A1  02                 	db	2
   926  00E6A2  01                 	db	1
   927  00E6A3  02                 	db	2
   928  00E6A4  04                 	db	4
   929  00E6A5  00                 	db	0
   930  00E6A6  00                 	db	0
   931  00E6A7  00                 	db	0
   932  00E6A8  80                 	db	128
   933  00E6A9  80                 	db	128
   934  00E6AA  80                 	db	128
   935  00E6AB  80                 	db	128
   936  00E6AC  80                 	db	128
   937  00E6AD  00                 	db	0
   938  00E6AE  00                 	db	0
   939  00E6AF  00                 	db	0
   940  00E6B0  01                 	db	1
   941  00E6B1  02                 	db	2
   942  00E6B2  04                 	db	4
   943  00E6B3  00                 	db	0
   944  00E6B4  00                 	db	0
   945  00E6B5  00                 	db	0
   946  00E6B6  00                 	db	0
   947  00E6B7  00                 	db	0
   948  00E6B8  20                 	db	32
   949  00E6B9  54                 	db	84
   950  00E6BA  54                 	db	84
   951  00E6BB  54                 	db	84
   952  00E6BC  78                 	db	120
   953  00E6BD  00                 	db	0
   954  00E6BE  00                 	db	0
   955  00E6BF  00                 	db	0
   956  00E6C0  7F                 	db	127
   957  00E6C1  48                 	db	72
   958  00E6C2  44                 	db	68
   959  00E6C3  44                 	db	68
   960  00E6C4  38                 	db	56
   961  00E6C5  00                 	db	0
   962  00E6C6  00                 	db	0
   963  00E6C7  00                 	db	0
   964  00E6C8  38                 	db	56
   965  00E6C9  44                 	db	68
   966  00E6CA  44                 	db	68
   967  00E6CB  28                 	db	40
   968  00E6CC  00                 	db	0
   969  00E6CD  00                 	db	0
   970  00E6CE  00                 	db	0
   971  00E6CF  00                 	db	0
   972  00E6D0  38                 	db	56
   973  00E6D1  44                 	db	68
   974  00E6D2  44                 	db	68
   975  00E6D3  48                 	db	72
   976  00E6D4  7F                 	db	127
   977  00E6D5  00                 	db	0
   978  00E6D6  00                 	db	0
   979  00E6D7  00                 	db	0
   980  00E6D8  38                 	db	56
   981  00E6D9  54                 	db	84
   982  00E6DA  54                 	db	84
   983  00E6DB  54                 	db	84
   984  00E6DC  18                 	db	24
   985  00E6DD  00                 	db	0
   986  00E6DE  00                 	db	0
   987  00E6DF  00                 	db	0
   988  00E6E0  08                 	db	8
   989  00E6E1  7E                 	db	126
   990  00E6E2  09                 	db	9
   991  00E6E3  02                 	db	2
   992  00E6E4  00                 	db	0
   993  00E6E5  00                 	db	0
   994  00E6E6  00                 	db	0
   995  00E6E7  00                 	db	0
   996  00E6E8  18                 	db	24
   997  00E6E9  A4                 	db	164
   998  00E6EA  A4                 	db	164
   999  00E6EB  A4                 	db	164
  1000  00E6EC  7C                 	db	124
  1001  00E6ED  00                 	db	0
  1002  00E6EE  00                 	db	0
  1003  00E6EF  00                 	db	0
  1004  00E6F0  7F                 	db	127
  1005  00E6F1  08                 	db	8
  1006  00E6F2  04                 	db	4
  1007  00E6F3  04                 	db	4
  1008  00E6F4  78                 	db	120
  1009  00E6F5  00                 	db	0
  1010  00E6F6  00                 	db	0
  1011  00E6F7  00                 	db	0
  1012  00E6F8  00                 	db	0
  1013  00E6F9  7D                 	db	125
  1014  00E6FA  00                 	db	0
  1015  00E6FB  00                 	db	0
  1016  00E6FC  00                 	db	0
  1017  00E6FD  00                 	db	0
  1018  00E6FE  00                 	db	0
  1019  00E6FF  00                 	db	0
  1020  00E700  80                 	db	128
  1021  00E701  84                 	db	132
  1022  00E702  7D                 	db	125
  1023  00E703  00                 	db	0
  1024  00E704  00                 	db	0
  1025  00E705  00                 	db	0
  1026  00E706  00                 	db	0
  1027  00E707  00                 	db	0
  1028  00E708  7F                 	db	127
  1029  00E709  10                 	db	16
  1030  00E70A  28                 	db	40
  1031  00E70B  44                 	db	68
  1032  00E70C  00                 	db	0
  1033  00E70D  00                 	db	0
  1034  00E70E  00                 	db	0
  1035  00E70F  00                 	db	0
  1036  00E710  41                 	db	65
  1037  00E711  7F                 	db	127
  1038  00E712  40                 	db	64
  1039  00E713  00                 	db	0
  1040  00E714  00                 	db	0
  1041  00E715  00                 	db	0
  1042  00E716  00                 	db	0
  1043  00E717  00                 	db	0
  1044  00E718  7C                 	db	124
  1045  00E719  04                 	db	4
  1046  00E71A  18                 	db	24
  1047  00E71B  04                 	db	4
  1048  00E71C  78                 	db	120
  1049  00E71D  00                 	db	0
  1050  00E71E  00                 	db	0
  1051  00E71F  00                 	db	0
  1052  00E720  7C                 	db	124
  1053  00E721  08                 	db	8
  1054  00E722  04                 	db	4
  1055  00E723  7C                 	db	124
  1056  00E724  00                 	db	0
  1057  00E725  00                 	db	0
  1058  00E726  00                 	db	0
  1059  00E727  00                 	db	0
  1060  00E728  38                 	db	56
  1061  00E729  44                 	db	68
  1062  00E72A  44                 	db	68
  1063  00E72B  38                 	db	56
  1064  00E72C  00                 	db	0
  1065  00E72D  00                 	db	0
  1066  00E72E  00                 	db	0
  1067  00E72F  00                 	db	0
  1068  00E730  FC                 	db	252
  1069  00E731  24                 	db	36
  1070  00E732  24                 	db	36
  1071  00E733  18                 	db	24
  1072  00E734  00                 	db	0
  1073  00E735  00                 	db	0
  1074  00E736  00                 	db	0
  1075  00E737  00                 	db	0
  1076  00E738  18                 	db	24
  1077  00E739  24                 	db	36
  1078  00E73A  24                 	db	36
  1079  00E73B  FC                 	db	252
  1080  00E73C  00                 	db	0
  1081  00E73D  00                 	db	0
  1082  00E73E  00                 	db	0
  1083  00E73F  00                 	db	0
  1084  00E740  00                 	db	0
  1085  00E741  7C                 	db	124
  1086  00E742  08                 	db	8
  1087  00E743  04                 	db	4
  1088  00E744  00                 	db	0
  1089  00E745  00                 	db	0
  1090  00E746  00                 	db	0
  1091  00E747  00                 	db	0
  1092  00E748  48                 	db	72
  1093  00E749  54                 	db	84
  1094  00E74A  54                 	db	84
  1095  00E74B  24                 	db	36
  1096  00E74C  00                 	db	0
  1097  00E74D  00                 	db	0
  1098  00E74E  00                 	db	0
  1099  00E74F  00                 	db	0
  1100  00E750  04                 	db	4
  1101  00E751  7F                 	db	127
  1102  00E752  44                 	db	68
  1103  00E753  00                 	db	0
  1104  00E754  00                 	db	0
  1105  00E755  00                 	db	0
  1106  00E756  00                 	db	0
  1107  00E757  00                 	db	0
  1108  00E758  3C                 	db	60
  1109  00E759  40                 	db	64
  1110  00E75A  40                 	db	64
  1111  00E75B  7C                 	db	124
  1112  00E75C  00                 	db	0
  1113  00E75D  00                 	db	0
  1114  00E75E  00                 	db	0
  1115  00E75F  00                 	db	0
  1116  00E760  1C                 	db	28
  1117  00E761  20                 	db	32
  1118  00E762  40                 	db	64
  1119  00E763  20                 	db	32
  1120  00E764  1C                 	db	28
  1121  00E765  00                 	db	0
  1122  00E766  00                 	db	0
  1123  00E767  00                 	db	0
  1124  00E768  3C                 	db	60
  1125  00E769  40                 	db	64
  1126  00E76A  30                 	db	48
  1127  00E76B  40                 	db	64
  1128  00E76C  3C                 	db	60
  1129  00E76D  00                 	db	0
  1130  00E76E  00                 	db	0
  1131  00E76F  00                 	db	0
  1132  00E770  44                 	db	68
  1133  00E771  28                 	db	40
  1134  00E772  10                 	db	16
  1135  00E773  28                 	db	40
  1136  00E774  44                 	db	68
  1137  00E775  00                 	db	0
  1138  00E776  00                 	db	0
  1139  00E777  00                 	db	0
  1140  00E778  1C                 	db	28
  1141  00E779  A0                 	db	160
  1142  00E77A  A0                 	db	160
  1143  00E77B  7C                 	db	124
  1144  00E77C  00                 	db	0
  1145  00E77D  00                 	db	0
  1146  00E77E  00                 	db	0
  1147  00E77F  00                 	db	0
  1148  00E780  44                 	db	68
  1149  00E781  64                 	db	100
  1150  00E782  54                 	db	84
  1151  00E783  4C                 	db	76
  1152  00E784  44                 	db	68
  1153  00E785  00                 	db	0
  1154  00E786  00                 	db	0
  1155  00E787  00                 	db	0
  1156  00E788  08                 	db	8
  1157  00E789  36                 	db	54
  1158  00E78A  41                 	db	65
  1159  00E78B  00                 	db	0
  1160  00E78C  00                 	db	0
  1161  00E78D  00                 	db	0
  1162  00E78E  00                 	db	0
  1163  00E78F  00                 	db	0
  1164  00E790  00                 	db	0
  1165  00E791  7F                 	db	127
  1166  00E792  00                 	db	0
  1167  00E793  00                 	db	0
  1168  00E794  00                 	db	0
  1169  00E795  00                 	db	0
  1170  00E796  00                 	db	0
  1171  00E797  00                 	db	0
  1172  00E798  41                 	db	65
  1173  00E799  36                 	db	54
  1174  00E79A  08                 	db	8
  1175  00E79B  00                 	db	0
  1176  00E79C  00                 	db	0
  1177  00E79D  00                 	db	0
  1178  00E79E  00                 	db	0
  1179  00E79F  00                 	db	0
  1180  00E7A0  02                 	db	2
  1181  00E7A1  01                 	db	1
  1182  00E7A2  01                 	db	1
  1183  00E7A3  02                 	db	2
  1184  00E7A4  01                 	db	1
  1185  00E7A5  00                 	db	0
  1186  00E7A6  00                 	db	0
  1187  00E7A7  00                 	db	0
  1188  00E7A8  02                 	db	2
  1189  00E7A9  05                 	db	5
  1190  00E7AA  05                 	db	5
  1191  00E7AB  02                 	db	2
  1192  00E7AC  00                 	db	0
  1193  00E7AD  00                 	db	0
  1194  00E7AE  00                 	db	0
  1195  00E7AF                     __end_of_OledFont:
  1196                           	opt callstack 0
  1197  00E7AF                     _dpowers:
  1198                           	opt callstack 0
  1199  00E7AF  0001               	dw	1
  1200  00E7B1  0000               	dw	0
  1201  00E7B3  000A               	dw	10
  1202  00E7B5  0000               	dw	0
  1203  00E7B7  0064               	dw	100
  1204  00E7B9  0000               	dw	0
  1205  00E7BB  03E8               	dw	1000
  1206  00E7BD  0000               	dw	0
  1207  00E7BF  2710               	dw	10000
  1208  00E7C1  0000               	dw	0
  1209  00E7C3  86A0               	dw	34464
  1210  00E7C5  0001               	dw	1
  1211  00E7C7  4240               	dw	16960
  1212  00E7C9  000F               	dw	15
  1213  00E7CB  9680               	dw	38528
  1214  00E7CD  0098               	dw	152
  1215  00E7CF  E100               	dw	57600
  1216  00E7D1  05F5               	dw	1525
  1217  00E7D3  CA00               	dw	51712
  1218  00E7D5  3B9A               	dw	15258
  1219  00E7D7                     __end_of_dpowers:
  1220                           	opt callstack 0
  1221  00E7D7  0EB8               	dw	3768
  1222  00E7D9  43BC               	dw	17340
  1223  00E7DB                     __end_of_temp_adc_offset:
  1224                           	opt callstack 0
  1225  00E7DB                     STR_231:
  1226  00E7DB  20                 	db	32
  1227  00E7DC  20                 	db	32
  1228  00E7DD  20                 	db	32
  1229  00E7DE  20                 	db	32
  1230  00E7DF  2A                 	db	42
  1231  00E7E0  49                 	db	73	;'I'
  1232  00E7E1  44                 	db	68	;'D'
  1233  00E7E2  4E                 	db	78	;'N'
  1234  00E7E3  3F                 	db	63	;'?'
  1235  00E7E4  3A                 	db	58	;':'
  1236  00E7E5  20                 	db	32
  1237  00E7E6  50                 	db	80	;'P'
  1238  00E7E7  72                 	db	114	;'r'
  1239  00E7E8  69                 	db	105	;'i'
  1240  00E7E9  6E                 	db	110	;'n'
  1241  00E7EA  74                 	db	116	;'t'
  1242  00E7EB  73                 	db	115	;'s'
  1243  00E7EC  20                 	db	32
  1244  00E7ED  69                 	db	105	;'i'
  1245  00E7EE  64                 	db	100	;'d'
  1246  00E7EF  65                 	db	101	;'e'
  1247  00E7F0  6E                 	db	110	;'n'
  1248  00E7F1  74                 	db	116	;'t'
  1249  00E7F2  69                 	db	105	;'i'
  1250  00E7F3  66                 	db	102	;'f'
  1251  00E7F4  69                 	db	105	;'i'
  1252  00E7F5  63                 	db	99	;'c'
  1253  00E7F6  61                 	db	97	;'a'
  1254  00E7F7  74                 	db	116	;'t'
  1255  00E7F8  69                 	db	105	;'i'
  1256  00E7F9  6F                 	db	111	;'o'
  1257  00E7FA  6E                 	db	110	;'n'
  1258  00E7FB  20                 	db	32
  1259  00E7FC  73                 	db	115	;'s'
  1260  00E7FD  74                 	db	116	;'t'
  1261  00E7FE  72                 	db	114	;'r'
  1262  00E7FF  69                 	db	105	;'i'
  1263  00E800  6E                 	db	110	;'n'
  1264  00E801  67                 	db	103	;'g'
  1265  00E802  0A                 	db	10
  1266  00E803  0D                 	db	13
  1267  00E804  20                 	db	32
  1268  00E805  20                 	db	32
  1269  00E806  20                 	db	32
  1270  00E807  20                 	db	32
  1271  00E808  52                 	db	82	;'R'
  1272  00E809  65                 	db	101	;'e'
  1273  00E80A  73                 	db	115	;'s'
  1274  00E80B  65                 	db	101	;'e'
  1275  00E80C  74                 	db	116	;'t'
  1276  00E80D  3A                 	db	58	;':'
  1277  00E80E  20                 	db	32
  1278  00E80F  45                 	db	69	;'E'
  1279  00E810  78                 	db	120	;'x'
  1280  00E811  65                 	db	101	;'e'
  1281  00E812  63                 	db	99	;'c'
  1282  00E813  75                 	db	117	;'u'
  1283  00E814  74                 	db	116	;'t'
  1284  00E815  65                 	db	101	;'e'
  1285  00E816  73                 	db	115	;'s'
  1286  00E817  20                 	db	32
  1287  00E818  73                 	db	115	;'s'
  1288  00E819  6F                 	db	111	;'o'
  1289  00E81A  66                 	db	102	;'f'
  1290  00E81B  74                 	db	116	;'t'
  1291  00E81C  77                 	db	119	;'w'
  1292  00E81D  61                 	db	97	;'a'
  1293  00E81E  72                 	db	114	;'r'
  1294  00E81F  65                 	db	101	;'e'
  1295  00E820  20                 	db	32
  1296  00E821  72                 	db	114	;'r'
  1297  00E822  65                 	db	101	;'e'
  1298  00E823  73                 	db	115	;'s'
  1299  00E824  65                 	db	101	;'e'
  1300  00E825  74                 	db	116	;'t'
  1301  00E826  20                 	db	32
  1302  00E827  69                 	db	105	;'i'
  1303  00E828  6E                 	db	110	;'n'
  1304  00E829  73                 	db	115	;'s'
  1305  00E82A  74                 	db	116	;'t'
  1306  00E82B  72                 	db	114	;'r'
  1307  00E82C  75                 	db	117	;'u'
  1308  00E82D  63                 	db	99	;'c'
  1309  00E82E  74                 	db	116	;'t'
  1310  00E82F  69                 	db	105	;'i'
  1311  00E830  6F                 	db	111	;'o'
  1312  00E831  6E                 	db	110	;'n'
  1313  00E832  0A                 	db	10
  1314  00E833  0D                 	db	13
  1315  00E834  20                 	db	32
  1316  00E835  20                 	db	32
  1317  00E836  20                 	db	32
  1318  00E837  20                 	db	32
  1319  00E838  43                 	db	67	;'C'
  1320  00E839  6C                 	db	108	;'l'
  1321  00E83A  65                 	db	101	;'e'
  1322  00E83B  61                 	db	97	;'a'
  1323  00E83C  72                 	db	114	;'r'
  1324  00E83D  3A                 	db	58	;':'
  1325  00E83E  20                 	db	32
  1326  00E83F  43                 	db	67	;'C'
  1327  00E840  6C                 	db	108	;'l'
  1328  00E841  65                 	db	101	;'e'
  1329  00E842  61                 	db	97	;'a'
  1330  00E843  72                 	db	114	;'r'
  1331  00E844  73                 	db	115	;'s'
  1332  00E845  20                 	db	32
  1333  00E846  74                 	db	116	;'t'
  1334  00E847  68                 	db	104	;'h'
  1335  00E848  65                 	db	101	;'e'
  1336  00E849  20                 	db	32
  1337  00E84A  76                 	db	118	;'v'
  1338  00E84B  69                 	db	105	;'i'
  1339  00E84C  72                 	db	114	;'r'
  1340  00E84D  74                 	db	116	;'t'
  1341  00E84E  75                 	db	117	;'u'
  1342  00E84F  61                 	db	97	;'a'
  1343  00E850  6C                 	db	108	;'l'
  1344  00E851  20                 	db	32
  1345  00E852  43                 	db	67	;'C'
  1346  00E853  4F                 	db	79	;'O'
  1347  00E854  4D                 	db	77	;'M'
  1348  00E855  20                 	db	32
  1349  00E856  70                 	db	112	;'p'
  1350  00E857  6F                 	db	111	;'o'
  1351  00E858  72                 	db	114	;'r'
  1352  00E859  74                 	db	116	;'t'
  1353  00E85A  20                 	db	32
  1354  00E85B  74                 	db	116	;'t'
  1355  00E85C  65                 	db	101	;'e'
  1356  00E85D  72                 	db	114	;'r'
  1357  00E85E  6D                 	db	109	;'m'
  1358  00E85F  69                 	db	105	;'i'
  1359  00E860  6E                 	db	110	;'n'
  1360  00E861  61                 	db	97	;'a'
  1361  00E862  6C                 	db	108	;'l'
  1362  00E863  0A                 	db	10
  1363  00E864  0D                 	db	13
  1364  00E865  20                 	db	32
  1365  00E866  20                 	db	32
  1366  00E867  20                 	db	32
  1367  00E868  20                 	db	32
  1368  00E869  43                 	db	67	;'C'
  1369  00E86A  75                 	db	117	;'u'
  1370  00E86B  72                 	db	114	;'r'
  1371  00E86C  72                 	db	114	;'r'
  1372  00E86D  65                 	db	101	;'e'
  1373  00E86E  6E                 	db	110	;'n'
  1374  00E86F  74                 	db	116	;'t'
  1375  00E870  20                 	db	32
  1376  00E871  4D                 	db	77	;'M'
  1377  00E872  65                 	db	101	;'e'
  1378  00E873  61                 	db	97	;'a'
  1379  00E874  73                 	db	115	;'s'
  1380  00E875  75                 	db	117	;'u'
  1381  00E876  72                 	db	114	;'r'
  1382  00E877  65                 	db	101	;'e'
  1383  00E878  6D                 	db	109	;'m'
  1384  00E879  65                 	db	101	;'e'
  1385  00E87A  6E                 	db	110	;'n'
  1386  00E87B  74                 	db	116	;'t'
  1387  00E87C  73                 	db	115	;'s'
  1388  00E87D  3F                 	db	63	;'?'
  1389  00E87E  3A                 	db	58	;':'
  1390  00E87F  20                 	db	32
  1391  00E880  50                 	db	80	;'P'
  1392  00E881  72                 	db	114	;'r'
  1393  00E882  69                 	db	105	;'i'
  1394  00E883  6E                 	db	110	;'n'
  1395  00E884  74                 	db	116	;'t'
  1396  00E885  73                 	db	115	;'s'
  1397  00E886  20                 	db	32
  1398  00E887  69                 	db	105	;'i'
  1399  00E888  6E                 	db	110	;'n'
  1400  00E889  73                 	db	115	;'s'
  1401  00E88A  74                 	db	116	;'t'
  1402  00E88B  61                 	db	97	;'a'
  1403  00E88C  6E                 	db	110	;'n'
  1404  00E88D  74                 	db	116	;'t'
  1405  00E88E  61                 	db	97	;'a'
  1406  00E88F  6E                 	db	110	;'n'
  1407  00E890  65                 	db	101	;'e'
  1408  00E891  6F                 	db	111	;'o'
  1409  00E892  75                 	db	117	;'u'
  1410  00E893  73                 	db	115	;'s'
  1411  00E894  20                 	db	32
  1412  00E895  73                 	db	115	;'s'
  1413  00E896  79                 	db	121	;'y'
  1414  00E897  73                 	db	115	;'s'
  1415  00E898  74                 	db	116	;'t'
  1416  00E899  65                 	db	101	;'e'
  1417  00E89A  6D                 	db	109	;'m'
  1418  00E89B  20                 	db	32
  1419  00E89C  6C                 	db	108	;'l'
  1420  00E89D  65                 	db	101	;'e'
  1421  00E89E  76                 	db	118	;'v'
  1422  00E89F  65                 	db	101	;'e'
  1423  00E8A0  6C                 	db	108	;'l'
  1424  00E8A1  20                 	db	32
  1425  00E8A2  65                 	db	101	;'e'
  1426  00E8A3  6C                 	db	108	;'l'
  1427  00E8A4  65                 	db	101	;'e'
  1428  00E8A5  63                 	db	99	;'c'
  1429  00E8A6  74                 	db	116	;'t'
  1430  00E8A7  72                 	db	114	;'r'
  1431  00E8A8  69                 	db	105	;'i'
  1432  00E8A9  63                 	db	99	;'c'
  1433  00E8AA  61                 	db	97	;'a'
  1434  00E8AB  6C                 	db	108	;'l'
  1435  00E8AC  20                 	db	32
  1436  00E8AD  6D                 	db	109	;'m'
  1437  00E8AE  65                 	db	101	;'e'
  1438  00E8AF  61                 	db	97	;'a'
  1439  00E8B0  73                 	db	115	;'s'
  1440  00E8B1  75                 	db	117	;'u'
  1441  00E8B2  72                 	db	114	;'r'
  1442  00E8B3  65                 	db	101	;'e'
  1443  00E8B4  6D                 	db	109	;'m'
  1444  00E8B5  65                 	db	101	;'e'
  1445  00E8B6  6E                 	db	110	;'n'
  1446  00E8B7  74                 	db	116	;'t'
  1447  00E8B8  73                 	db	115	;'s'
  1448  00E8B9  0A                 	db	10
  1449  00E8BA  0D                 	db	13
  1450  00E8BB  20                 	db	32
  1451  00E8BC  20                 	db	32
  1452  00E8BD  20                 	db	32
  1453  00E8BE  20                 	db	32
  1454  00E8BF  45                 	db	69	;'E'
  1455  00E8C0  6E                 	db	110	;'n'
  1456  00E8C1  61                 	db	97	;'a'
  1457  00E8C2  62                 	db	98	;'b'
  1458  00E8C3  6C                 	db	108	;'l'
  1459  00E8C4  65                 	db	101	;'e'
  1460  00E8C5  20                 	db	32
  1461  00E8C6  4C                 	db	76	;'L'
  1462  00E8C7  69                 	db	105	;'i'
  1463  00E8C8  76                 	db	118	;'v'
  1464  00E8C9  65                 	db	101	;'e'
  1465  00E8CA  20                 	db	32
  1466  00E8CB  4D                 	db	77	;'M'
  1467  00E8CC  65                 	db	101	;'e'
  1468  00E8CD  61                 	db	97	;'a'
  1469  00E8CE  73                 	db	115	;'s'
  1470  00E8CF  75                 	db	117	;'u'
  1471  00E8D0  72                 	db	114	;'r'
  1472  00E8D1  65                 	db	101	;'e'
  1473  00E8D2  6D                 	db	109	;'m'
  1474  00E8D3  65                 	db	101	;'e'
  1475  00E8D4  6E                 	db	110	;'n'
  1476  00E8D5  74                 	db	116	;'t'
  1477  00E8D6  73                 	db	115	;'s'
  1478  00E8D7  3A                 	db	58	;':'
  1479  00E8D8  20                 	db	32
  1480  00E8D9  50                 	db	80	;'P'
  1481  00E8DA  72                 	db	114	;'r'
  1482  00E8DB  69                 	db	105	;'i'
  1483  00E8DC  6E                 	db	110	;'n'
  1484  00E8DD  74                 	db	116	;'t'
  1485  00E8DE  73                 	db	115	;'s'
  1486  00E8DF  20                 	db	32
  1487  00E8E0  61                 	db	97	;'a'
  1488  00E8E1  20                 	db	32
  1489  00E8E2  63                 	db	99	;'c'
  1490  00E8E3  6F                 	db	111	;'o'
  1491  00E8E4  6E                 	db	110	;'n'
  1492  00E8E5  74                 	db	116	;'t'
  1493  00E8E6  69                 	db	105	;'i'
  1494  00E8E7  6E                 	db	110	;'n'
  1495  00E8E8  75                 	db	117	;'u'
  1496  00E8E9  6F                 	db	111	;'o'
  1497  00E8EA  75                 	db	117	;'u'
  1498  00E8EB  73                 	db	115	;'s'
  1499  00E8EC  20                 	db	32
  1500  00E8ED  73                 	db	115	;'s'
  1501  00E8EE  74                 	db	116	;'t'
  1502  00E8EF  72                 	db	114	;'r'
  1503  00E8F0  65                 	db	101	;'e'
  1504  00E8F1  61                 	db	97	;'a'
  1505  00E8F2  6D                 	db	109	;'m'
  1506  00E8F3  20                 	db	32
  1507  00E8F4  6F                 	db	111	;'o'
  1508  00E8F5  66                 	db	102	;'f'
  1509  00E8F6  20                 	db	32
  1510  00E8F7  6D                 	db	109	;'m'
  1511  00E8F8  65                 	db	101	;'e'
  1512  00E8F9  61                 	db	97	;'a'
  1513  00E8FA  73                 	db	115	;'s'
  1514  00E8FB  75                 	db	117	;'u'
  1515  00E8FC  72                 	db	114	;'r'
  1516  00E8FD  65                 	db	101	;'e'
  1517  00E8FE  6D                 	db	109	;'m'
  1518  00E8FF  65                 	db	101	;'e'
  1519  00E900  6E                 	db	110	;'n'
  1520  00E901  74                 	db	116	;'t'
  1521  00E902  20                 	db	32
  1522  00E903  64                 	db	100	;'d'
  1523  00E904  61                 	db	97	;'a'
  1524  00E905  74                 	db	116	;'t'
  1525  00E906  61                 	db	97	;'a'
  1526  00E907  20                 	db	32
  1527  00E908  74                 	db	116	;'t'
  1528  00E909  6F                 	db	111	;'o'
  1529  00E90A  20                 	db	32
  1530  00E90B  74                 	db	116	;'t'
  1531  00E90C  68                 	db	104	;'h'
  1532  00E90D  65                 	db	101	;'e'
  1533  00E90E  20                 	db	32
  1534  00E90F  74                 	db	116	;'t'
  1535  00E910  65                 	db	101	;'e'
  1536  00E911  72                 	db	114	;'r'
  1537  00E912  6D                 	db	109	;'m'
  1538  00E913  69                 	db	105	;'i'
  1539  00E914  6E                 	db	110	;'n'
  1540  00E915  61                 	db	97	;'a'
  1541  00E916  6C                 	db	108	;'l'
  1542  00E917  0A                 	db	10
  1543  00E918  0D                 	db	13
  1544  00E919  20                 	db	32
  1545  00E91A  20                 	db	32
  1546  00E91B  20                 	db	32
  1547  00E91C  20                 	db	32
  1548  00E91D  44                 	db	68	;'D'
  1549  00E91E  65                 	db	101	;'e'
  1550  00E91F  76                 	db	118	;'v'
  1551  00E920  69                 	db	105	;'i'
  1552  00E921  63                 	db	99	;'c'
  1553  00E922  65                 	db	101	;'e'
  1554  00E923  20                 	db	32
  1555  00E924  53                 	db	83	;'S'
  1556  00E925  74                 	db	116	;'t'
  1557  00E926  61                 	db	97	;'a'
  1558  00E927  74                 	db	116	;'t'
  1559  00E928  75                 	db	117	;'u'
  1560  00E929  73                 	db	115	;'s'
  1561  00E92A  3F                 	db	63	;'?'
  1562  00E92B  3A                 	db	58	;':'
  1563  00E92C  20                 	db	32
  1564  00E92D  50                 	db	80	;'P'
  1565  00E92E  72                 	db	114	;'r'
  1566  00E92F  69                 	db	105	;'i'
  1567  00E930  6E                 	db	110	;'n'
  1568  00E931  74                 	db	116	;'t'
  1569  00E932  73                 	db	115	;'s'
  1570  00E933  20                 	db	32
  1571  00E934  64                 	db	100	;'d'
  1572  00E935  69                 	db	105	;'i'
  1573  00E936  67                 	db	103	;'g'
  1574  00E937  69                 	db	105	;'i'
  1575  00E938  74                 	db	116	;'t'
  1576  00E939  61                 	db	97	;'a'
  1577  00E93A  6C                 	db	108	;'l'
  1578  00E93B  20                 	db	32
  1579  00E93C  6D                 	db	109	;'m'
  1580  00E93D  6F                 	db	111	;'o'
  1581  00E93E  6E                 	db	110	;'n'
  1582  00E93F  69                 	db	105	;'i'
  1583  00E940  74                 	db	116	;'t'
  1584  00E941  6F                 	db	111	;'o'
  1585  00E942  72                 	db	114	;'r'
  1586  00E943  69                 	db	105	;'i'
  1587  00E944  6E                 	db	110	;'n'
  1588  00E945  67                 	db	103	;'g'
  1589  00E946  20                 	db	32
  1590  00E947  6D                 	db	109	;'m'
  1591  00E948  69                 	db	105	;'i'
  1592  00E949  63                 	db	99	;'c'
  1593  00E94A  72                 	db	114	;'r'
  1594  00E94B  6F                 	db	111	;'o'
  1595  00E94C  63                 	db	99	;'c'
  1596  00E94D  6F                 	db	111	;'o'
  1597  00E94E  6E                 	db	110	;'n'
  1598  00E94F  74                 	db	116	;'t'
  1599  00E950  72                 	db	114	;'r'
  1600  00E951  6F                 	db	111	;'o'
  1601  00E952  6C                 	db	108	;'l'
  1602  00E953  6C                 	db	108	;'l'
  1603  00E954  65                 	db	101	;'e'
  1604  00E955  72                 	db	114	;'r'
  1605  00E956  20                 	db	32
  1606  00E957  64                 	db	100	;'d'
  1607  00E958  65                 	db	101	;'e'
  1608  00E959  76                 	db	118	;'v'
  1609  00E95A  69                 	db	105	;'i'
  1610  00E95B  63                 	db	99	;'c'
  1611  00E95C  65                 	db	101	;'e'
  1612  00E95D  20                 	db	32
  1613  00E95E  73                 	db	115	;'s'
  1614  00E95F  74                 	db	116	;'t'
  1615  00E960  61                 	db	97	;'a'
  1616  00E961  74                 	db	116	;'t'
  1617  00E962  75                 	db	117	;'u'
  1618  00E963  73                 	db	115	;'s'
  1619  00E964  0A                 	db	10
  1620  00E965  0D                 	db	13
  1621  00E966  20                 	db	32
  1622  00E967  20                 	db	32
  1623  00E968  20                 	db	32
  1624  00E969  20                 	db	32
  1625  00E96A  45                 	db	69	;'E'
  1626  00E96B  72                 	db	114	;'r'
  1627  00E96C  72                 	db	114	;'r'
  1628  00E96D  6F                 	db	111	;'o'
  1629  00E96E  72                 	db	114	;'r'
  1630  00E96F  20                 	db	32
  1631  00E970  53                 	db	83	;'S'
  1632  00E971  74                 	db	116	;'t'
  1633  00E972  61                 	db	97	;'a'
  1634  00E973  74                 	db	116	;'t'
  1635  00E974  75                 	db	117	;'u'
  1636  00E975  73                 	db	115	;'s'
  1637  00E976  3F                 	db	63	;'?'
  1638  00E977  20                 	db	32
  1639  00E978  50                 	db	80	;'P'
  1640  00E979  72                 	db	114	;'r'
  1641  00E97A  69                 	db	105	;'i'
  1642  00E97B  6E                 	db	110	;'n'
  1643  00E97C  74                 	db	116	;'t'
  1644  00E97D  73                 	db	115	;'s'
  1645  00E97E  20                 	db	32
  1646  00E97F  69                 	db	105	;'i'
  1647  00E980  66                 	db	102	;'f'
  1648  00E981  20                 	db	32
  1649  00E982  61                 	db	97	;'a'
  1650  00E983  6E                 	db	110	;'n'
  1651  00E984  79                 	db	121	;'y'
  1652  00E985  20                 	db	32
  1653  00E986  73                 	db	115	;'s'
  1654  00E987  79                 	db	121	;'y'
  1655  00E988  73                 	db	115	;'s'
  1656  00E989  74                 	db	116	;'t'
  1657  00E98A  65                 	db	101	;'e'
  1658  00E98B  6D                 	db	109	;'m'
  1659  00E98C  20                 	db	32
  1660  00E98D  66                 	db	102	;'f'
  1661  00E98E  61                 	db	97	;'a'
  1662  00E98F  75                 	db	117	;'u'
  1663  00E990  6C                 	db	108	;'l'
  1664  00E991  74                 	db	116	;'t'
  1665  00E992  73                 	db	115	;'s'
  1666  00E993  20                 	db	32
  1667  00E994  68                 	db	104	;'h'
  1668  00E995  61                 	db	97	;'a'
  1669  00E996  76                 	db	118	;'v'
  1670  00E997  65                 	db	101	;'e'
  1671  00E998  20                 	db	32
  1672  00E999  62                 	db	98	;'b'
  1673  00E99A  65                 	db	101	;'e'
  1674  00E99B  65                 	db	101	;'e'
  1675  00E99C  6E                 	db	110	;'n'
  1676  00E99D  20                 	db	32
  1677  00E99E  64                 	db	100	;'d'
  1678  00E99F  65                 	db	101	;'e'
  1679  00E9A0  74                 	db	116	;'t'
  1680  00E9A1  65                 	db	101	;'e'
  1681  00E9A2  63                 	db	99	;'c'
  1682  00E9A3  74                 	db	116	;'t'
  1683  00E9A4  65                 	db	101	;'e'
  1684  00E9A5  64                 	db	100	;'d'
  1685  00E9A6  0A                 	db	10
  1686  00E9A7  0D                 	db	13
  1687  00E9A8  20                 	db	32
  1688  00E9A9  20                 	db	32
  1689  00E9AA  20                 	db	32
  1690  00E9AB  20                 	db	32
  1691  00E9AC  43                 	db	67	;'C'
  1692  00E9AD  6C                 	db	108	;'l'
  1693  00E9AE  65                 	db	101	;'e'
  1694  00E9AF  61                 	db	97	;'a'
  1695  00E9B0  72                 	db	114	;'r'
  1696  00E9B1  20                 	db	32
  1697  00E9B2  55                 	db	85	;'U'
  1698  00E9B3  41                 	db	65	;'A'
  1699  00E9B4  52                 	db	82	;'R'
  1700  00E9B5  54                 	db	84	;'T'
  1701  00E9B6  20                 	db	32
  1702  00E9B7  45                 	db	69	;'E'
  1703  00E9B8  72                 	db	114	;'r'
  1704  00E9B9  72                 	db	114	;'r'
  1705  00E9BA  6F                 	db	111	;'o'
  1706  00E9BB  72                 	db	114	;'r'
  1707  00E9BC  73                 	db	115	;'s'
  1708  00E9BD  3A                 	db	58	;':'
  1709  00E9BE  20                 	db	32
  1710  00E9BF  43                 	db	67	;'C'
  1711  00E9C0  6C                 	db	108	;'l'
  1712  00E9C1  65                 	db	101	;'e'
  1713  00E9C2  61                 	db	97	;'a'
  1714  00E9C3  72                 	db	114	;'r'
  1715  00E9C4  73                 	db	115	;'s'
  1716  00E9C5  20                 	db	32
  1717  00E9C6  55                 	db	85	;'U'
  1718  00E9C7  41                 	db	65	;'A'
  1719  00E9C8  52                 	db	82	;'R'
  1720  00E9C9  54                 	db	84	;'T'
  1721  00E9CA  20                 	db	32
  1722  00E9CB  65                 	db	101	;'e'
  1723  00E9CC  72                 	db	114	;'r'
  1724  00E9CD  72                 	db	114	;'r'
  1725  00E9CE  6F                 	db	111	;'o'
  1726  00E9CF  72                 	db	114	;'r'
  1727  00E9D0  20                 	db	32
  1728  00E9D1  66                 	db	102	;'f'
  1729  00E9D2  6C                 	db	108	;'l'
  1730  00E9D3  61                 	db	97	;'a'
  1731  00E9D4  67                 	db	103	;'g'
  1732  00E9D5  73                 	db	115	;'s'
  1733  00E9D6  0A                 	db	10
  1734  00E9D7  0D                 	db	13
  1735  00E9D8  20                 	db	32
  1736  00E9D9  20                 	db	32
  1737  00E9DA  20                 	db	32
  1738  00E9DB  20                 	db	32
  1739  00E9DC  43                 	db	67	;'C'
  1740  00E9DD  6C                 	db	108	;'l'
  1741  00E9DE  65                 	db	101	;'e'
  1742  00E9DF  61                 	db	97	;'a'
  1743  00E9E0  72                 	db	114	;'r'
  1744  00E9E1  20                 	db	32
  1745  00E9E2  49                 	db	73	;'I'
  1746  00E9E3  32                 	db	50	;'2'
  1747  00E9E4  43                 	db	67	;'C'
  1748  00E9E5  20                 	db	32
  1749  00E9E6  45                 	db	69	;'E'
  1750  00E9E7  72                 	db	114	;'r'
  1751  00E9E8  72                 	db	114	;'r'
  1752  00E9E9  6F                 	db	111	;'o'
  1753  00E9EA  72                 	db	114	;'r'
  1754  00E9EB  73                 	db	115	;'s'
  1755  00E9EC  3A                 	db	58	;':'
  1756  00E9ED  20                 	db	32
  1757  00E9EE  43                 	db	67	;'C'
  1758  00E9EF  6C                 	db	108	;'l'
  1759  00E9F0  65                 	db	101	;'e'
  1760  00E9F1  61                 	db	97	;'a'
  1761  00E9F2  72                 	db	114	;'r'
  1762  00E9F3  73                 	db	115	;'s'
  1763  00E9F4  20                 	db	32
  1764  00E9F5  49                 	db	73	;'I'
  1765  00E9F6  32                 	db	50	;'2'
  1766  00E9F7  43                 	db	67	;'C'
  1767  00E9F8  20                 	db	32
  1768  00E9F9  65                 	db	101	;'e'
  1769  00E9FA  72                 	db	114	;'r'
  1770  00E9FB  72                 	db	114	;'r'
  1771  00E9FC  6F                 	db	111	;'o'
  1772  00E9FD  72                 	db	114	;'r'
  1773  00E9FE  20                 	db	32
  1774  00E9FF  66                 	db	102	;'f'
  1775  00EA00  6C                 	db	108	;'l'
  1776  00EA01  61                 	db	97	;'a'
  1777  00EA02  67                 	db	103	;'g'
  1778  00EA03  73                 	db	115	;'s'
  1779  00EA04  0A                 	db	10
  1780  00EA05  0D                 	db	13
  1781  00EA06  20                 	db	32
  1782  00EA07  20                 	db	32
  1783  00EA08  20                 	db	32
  1784  00EA09  20                 	db	32
  1785  00EA0A  43                 	db	67	;'C'
  1786  00EA0B  6C                 	db	108	;'l'
  1787  00EA0C  65                 	db	101	;'e'
  1788  00EA0D  61                 	db	97	;'a'
  1789  00EA0E  72                 	db	114	;'r'
  1790  00EA0F  20                 	db	32
  1791  00EA10  41                 	db	65	;'A'
  1792  00EA11  44                 	db	68	;'D'
  1793  00EA12  43                 	db	67	;'C'
  1794  00EA13  20                 	db	32
  1795  00EA14  45                 	db	69	;'E'
  1796  00EA15  72                 	db	114	;'r'
  1797  00EA16  72                 	db	114	;'r'
  1798  00EA17  6F                 	db	111	;'o'
  1799  00EA18  72                 	db	114	;'r'
  1800  00EA19  73                 	db	115	;'s'
  1801  00EA1A  3A                 	db	58	;':'
  1802  00EA1B  20                 	db	32
  1803  00EA1C  43                 	db	67	;'C'
  1804  00EA1D  6C                 	db	108	;'l'
  1805  00EA1E  65                 	db	101	;'e'
  1806  00EA1F  61                 	db	97	;'a'
  1807  00EA20  72                 	db	114	;'r'
  1808  00EA21  73                 	db	115	;'s'
  1809  00EA22  20                 	db	32
  1810  00EA23  41                 	db	65	;'A'
  1811  00EA24  44                 	db	68	;'D'
  1812  00EA25  43                 	db	67	;'C'
  1813  00EA26  20                 	db	32
  1814  00EA27  65                 	db	101	;'e'
  1815  00EA28  72                 	db	114	;'r'
  1816  00EA29  72                 	db	114	;'r'
  1817  00EA2A  6F                 	db	111	;'o'
  1818  00EA2B  72                 	db	114	;'r'
  1819  00EA2C  20                 	db	32
  1820  00EA2D  66                 	db	102	;'f'
  1821  00EA2E  6C                 	db	108	;'l'
  1822  00EA2F  61                 	db	97	;'a'
  1823  00EA30  67                 	db	103	;'g'
  1824  00EA31  73                 	db	115	;'s'
  1825  00EA32  0A                 	db	10
  1826  00EA33  0D                 	db	13
  1827  00EA34  20                 	db	32
  1828  00EA35  20                 	db	32
  1829  00EA36  20                 	db	32
  1830  00EA37  20                 	db	32
  1831  00EA38  48                 	db	72	;'H'
  1832  00EA39  65                 	db	101	;'e'
  1833  00EA3A  6C                 	db	108	;'l'
  1834  00EA3B  70                 	db	112	;'p'
  1835  00EA3C  3A                 	db	58	;':'
  1836  00EA3D  20                 	db	32
  1837  00EA3E  4C                 	db	76	;'L'
  1838  00EA3F  69                 	db	105	;'i'
  1839  00EA40  73                 	db	115	;'s'
  1840  00EA41  74                 	db	116	;'t'
  1841  00EA42  73                 	db	115	;'s'
  1842  00EA43  20                 	db	32
  1843  00EA44  61                 	db	97	;'a'
  1844  00EA45  76                 	db	118	;'v'
  1845  00EA46  61                 	db	97	;'a'
  1846  00EA47  69                 	db	105	;'i'
  1847  00EA48  6C                 	db	108	;'l'
  1848  00EA49  61                 	db	97	;'a'
  1849  00EA4A  62                 	db	98	;'b'
  1850  00EA4B  6C                 	db	108	;'l'
  1851  00EA4C  65                 	db	101	;'e'
  1852  00EA4D  20                 	db	32
  1853  00EA4E  63                 	db	99	;'c'
  1854  00EA4F  6F                 	db	111	;'o'
  1855  00EA50  6D                 	db	109	;'m'
  1856  00EA51  6D                 	db	109	;'m'
  1857  00EA52  61                 	db	97	;'a'
  1858  00EA53  6E                 	db	110	;'n'
  1859  00EA54  64                 	db	100	;'d'
  1860  00EA55  73                 	db	115	;'s'
  1861  00EA56  20                 	db	32
  1862  00EA57  28                 	db	40
  1863  00EA58  74                 	db	116	;'t'
  1864  00EA59  68                 	db	104	;'h'
  1865  00EA5A  69                 	db	105	;'i'
  1866  00EA5B  73                 	db	115	;'s'
  1867  00EA5C  20                 	db	32
  1868  00EA5D  63                 	db	99	;'c'
  1869  00EA5E  6F                 	db	111	;'o'
  1870  00EA5F  6D                 	db	109	;'m'
  1871  00EA60  6D                 	db	109	;'m'
  1872  00EA61  61                 	db	97	;'a'
  1873  00EA62  6E                 	db	110	;'n'
  1874  00EA63  64                 	db	100	;'d'
  1875  00EA64  29                 	db	41
  1876  00EA65  0A                 	db	10
  1877  00EA66  0D                 	db	13
  1878  00EA67  00                 	db	0
  1879  00EA68                     STR_289:
  1880  00EA68  20                 	db	32
  1881  00EA69  20                 	db	32
  1882  00EA6A  20                 	db	32
  1883  00EA6B  20                 	db	32
  1884  00EA6C  20                 	db	32
  1885  00EA6D  20                 	db	32
  1886  00EA6E  20                 	db	32
  1887  00EA6F  20                 	db	32
  1888  00EA70  46                 	db	70	;'F'
  1889  00EA71  69                 	db	105	;'i'
  1890  00EA72  78                 	db	120	;'x'
  1891  00EA73  65                 	db	101	;'e'
  1892  00EA74  64                 	db	100	;'d'
  1893  00EA75  20                 	db	32
  1894  00EA76  56                 	db	86	;'V'
  1895  00EA77  6F                 	db	111	;'o'
  1896  00EA78  6C                 	db	108	;'l'
  1897  00EA79  74                 	db	116	;'t'
  1898  00EA7A  61                 	db	97	;'a'
  1899  00EA7B  67                 	db	103	;'g'
  1900  00EA7C  65                 	db	101	;'e'
  1901  00EA7D  20                 	db	32
  1902  00EA7E  52                 	db	82	;'R'
  1903  00EA7F  65                 	db	101	;'e'
  1904  00EA80  66                 	db	102	;'f'
  1905  00EA81  65                 	db	101	;'e'
  1906  00EA82  72                 	db	114	;'r'
  1907  00EA83  65                 	db	101	;'e'
  1908  00EA84  6E                 	db	110	;'n'
  1909  00EA85  63                 	db	99	;'c'
  1910  00EA86  65                 	db	101	;'e'
  1911  00EA87  20                 	db	32
  1912  00EA88  42                 	db	66	;'B'
  1913  00EA89  75                 	db	117	;'u'
  1914  00EA8A  66                 	db	102	;'f'
  1915  00EA8B  66                 	db	102	;'f'
  1916  00EA8C  65                 	db	101	;'e'
  1917  00EA8D  72                 	db	114	;'r'
  1918  00EA8E  20                 	db	32
  1919  00EA8F  31                 	db	49	;'1'
  1920  00EA90  20                 	db	32
  1921  00EA91  6D                 	db	109	;'m'
  1922  00EA92  65                 	db	101	;'e'
  1923  00EA93  61                 	db	97	;'a'
  1924  00EA94  73                 	db	115	;'s'
  1925  00EA95  75                 	db	117	;'u'
  1926  00EA96  72                 	db	114	;'r'
  1927  00EA97  65                 	db	101	;'e'
  1928  00EA98  64                 	db	100	;'d'
  1929  00EA99  20                 	db	32
  1930  00EA9A  61                 	db	97	;'a'
  1931  00EA9B  73                 	db	115	;'s'
  1932  00EA9C  20                 	db	32
  1933  00EA9D  25                 	db	37
  1934  00EA9E  2B                 	db	43
  1935  00EA9F  2E                 	db	46
  1936  00EAA0  33                 	db	51	;'3'
  1937  00EAA1  66                 	db	102	;'f'
  1938  00EAA2  20                 	db	32
  1939  00EAA3  56                 	db	86	;'V'
  1940  00EAA4  6F                 	db	111	;'o'
  1941  00EAA5  6C                 	db	108	;'l'
  1942  00EAA6  74                 	db	116	;'t'
  1943  00EAA7  73                 	db	115	;'s'
  1944  00EAA8  2C                 	db	44
  1945  00EAA9  20                 	db	32
  1946  00EAAA  63                 	db	99	;'c'
  1947  00EAAB  61                 	db	97	;'a'
  1948  00EAAC  6C                 	db	108	;'l'
  1949  00EAAD  69                 	db	105	;'i'
  1950  00EAAE  62                 	db	98	;'b'
  1951  00EAAF  72                 	db	114	;'r'
  1952  00EAB0  61                 	db	97	;'a'
  1953  00EAB1  74                 	db	116	;'t'
  1954  00EAB2  65                 	db	101	;'e'
  1955  00EAB3  64                 	db	100	;'d'
  1956  00EAB4  20                 	db	32
  1957  00EAB5  66                 	db	102	;'f'
  1958  00EAB6  6F                 	db	111	;'o'
  1959  00EAB7  72                 	db	114	;'r'
  1960  00EAB8  20                 	db	32
  1961  00EAB9  2B                 	db	43
  1962  00EABA  34                 	db	52	;'4'
  1963  00EABB  2E                 	db	46
  1964  00EABC  30                 	db	48	;'0'
  1965  00EABD  39                 	db	57	;'9'
  1966  00EABE  36                 	db	54	;'6'
  1967  00EABF  20                 	db	32
  1968  00EAC0  56                 	db	86	;'V'
  1969  00EAC1  6F                 	db	111	;'o'
  1970  00EAC2  6C                 	db	108	;'l'
  1971  00EAC3  74                 	db	116	;'t'
  1972  00EAC4  73                 	db	115	;'s'
  1973  00EAC5  1B                 	db	27
  1974  00EAC6  5B                 	db	91	;'['
  1975  00EAC7  4B                 	db	75	;'K'
  1976  00EAC8  0A                 	db	10
  1977  00EAC9  0D                 	db	13
  1978  00EACA  00                 	db	0
  1979  00EACB                     STR_239:
  1980  00EACB  43                 	db	67	;'C'
  1981  00EACC  6F                 	db	111	;'o'
  1982  00EACD  6D                 	db	109	;'m'
  1983  00EACE  6D                 	db	109	;'m'
  1984  00EACF  61                 	db	97	;'a'
  1985  00EAD0  6E                 	db	110	;'n'
  1986  00EAD1  64                 	db	100	;'d'
  1987  00EAD2  73                 	db	115	;'s'
  1988  00EAD3  20                 	db	32
  1989  00EAD4  61                 	db	97	;'a'
  1990  00EAD5  72                 	db	114	;'r'
  1991  00EAD6  65                 	db	101	;'e'
  1992  00EAD7  20                 	db	32
  1993  00EAD8  63                 	db	99	;'c'
  1994  00EAD9  61                 	db	97	;'a'
  1995  00EADA  73                 	db	115	;'s'
  1996  00EADB  65                 	db	101	;'e'
  1997  00EADC  20                 	db	32
  1998  00EADD  73                 	db	115	;'s'
  1999  00EADE  65                 	db	101	;'e'
  2000  00EADF  6E                 	db	110	;'n'
  2001  00EAE0  73                 	db	115	;'s'
  2002  00EAE1  69                 	db	105	;'i'
  2003  00EAE2  74                 	db	116	;'t'
  2004  00EAE3  69                 	db	105	;'i'
  2005  00EAE4  76                 	db	118	;'v'
  2006  00EAE5  65                 	db	101	;'e'
  2007  00EAE6  2C                 	db	44
  2008  00EAE7  20                 	db	32
  2009  00EAE8  62                 	db	98	;'b'
  2010  00EAE9  61                 	db	97	;'a'
  2011  00EAEA  63                 	db	99	;'c'
  2012  00EAEB  6B                 	db	107	;'k'
  2013  00EAEC  73                 	db	115	;'s'
  2014  00EAED  70                 	db	112	;'p'
  2015  00EAEE  61                 	db	97	;'a'
  2016  00EAEF  63                 	db	99	;'c'
  2017  00EAF0  65                 	db	101	;'e'
  2018  00EAF1  20                 	db	32
  2019  00EAF2  69                 	db	105	;'i'
  2020  00EAF3  73                 	db	115	;'s'
  2021  00EAF4  20                 	db	32
  2022  00EAF5  73                 	db	115	;'s'
  2023  00EAF6  75                 	db	117	;'u'
  2024  00EAF7  70                 	db	112	;'p'
  2025  00EAF8  70                 	db	112	;'p'
  2026  00EAF9  6F                 	db	111	;'o'
  2027  00EAFA  72                 	db	114	;'r'
  2028  00EAFB  74                 	db	116	;'t'
  2029  00EAFC  65                 	db	101	;'e'
  2030  00EAFD  64                 	db	100	;'d'
  2031  00EAFE  2C                 	db	44
  2032  00EAFF  20                 	db	32
  2033  00EB00  63                 	db	99	;'c'
  2034  00EB01  6F                 	db	111	;'o'
  2035  00EB02  6D                 	db	109	;'m'
  2036  00EB03  6D                 	db	109	;'m'
  2037  00EB04  61                 	db	97	;'a'
  2038  00EB05  6E                 	db	110	;'n'
  2039  00EB06  64                 	db	100	;'d'
  2040  00EB07  20                 	db	32
  2041  00EB08  68                 	db	104	;'h'
  2042  00EB09  69                 	db	105	;'i'
  2043  00EB0A  73                 	db	115	;'s'
  2044  00EB0B  74                 	db	116	;'t'
  2045  00EB0C  6F                 	db	111	;'o'
  2046  00EB0D  72                 	db	114	;'r'
  2047  00EB0E  79                 	db	121	;'y'
  2048  00EB0F  20                 	db	32
  2049  00EB10  69                 	db	105	;'i'
  2050  00EB11  73                 	db	115	;'s'
  2051  00EB12  20                 	db	32
  2052  00EB13  6E                 	db	110	;'n'
  2053  00EB14  6F                 	db	111	;'o'
  2054  00EB15  74                 	db	116	;'t'
  2055  00EB16  20                 	db	32
  2056  00EB17  73                 	db	115	;'s'
  2057  00EB18  75                 	db	117	;'u'
  2058  00EB19  70                 	db	112	;'p'
  2059  00EB1A  70                 	db	112	;'p'
  2060  00EB1B  6F                 	db	111	;'o'
  2061  00EB1C  72                 	db	114	;'r'
  2062  00EB1D  74                 	db	116	;'t'
  2063  00EB1E  65                 	db	101	;'e'
  2064  00EB1F  64                 	db	100	;'d'
  2065  00EB20  0A                 	db	10
  2066  00EB21  0D                 	db	13
  2067  00EB22  00                 	db	0
  2068  00EB23                     STR_282:
  2069  00EB23  20                 	db	32
  2070  00EB24  20                 	db	32
  2071  00EB25  20                 	db	32
  2072  00EB26  20                 	db	32
  2073  00EB27  20                 	db	32
  2074  00EB28  20                 	db	32
  2075  00EB29  20                 	db	32
  2076  00EB2A  20                 	db	32
  2077  00EB2B  43                 	db	67	;'C'
  2078  00EB2C  75                 	db	117	;'u'
  2079  00EB2D  72                 	db	114	;'r'
  2080  00EB2E  72                 	db	114	;'r'
  2081  00EB2F  65                 	db	101	;'e'
  2082  00EB30  6E                 	db	110	;'n'
  2083  00EB31  74                 	db	116	;'t'
  2084  00EB32  20                 	db	32
  2085  00EB33  51                 	db	81	;'Q'
  2086  00EB34  49                 	db	73	;'I'
  2087  00EB35  20                 	db	32
  2088  00EB36  53                 	db	83	;'S'
  2089  00EB37  77                 	db	119	;'w'
  2090  00EB38  69                 	db	105	;'i'
  2091  00EB39  74                 	db	116	;'t'
  2092  00EB3A  63                 	db	99	;'c'
  2093  00EB3B  68                 	db	104	;'h'
  2094  00EB3C  69                 	db	105	;'i'
  2095  00EB3D  6E                 	db	110	;'n'
  2096  00EB3E  67                 	db	103	;'g'
  2097  00EB3F  20                 	db	32
  2098  00EB40  46                 	db	70	;'F'
  2099  00EB41  72                 	db	114	;'r'
  2100  00EB42  65                 	db	101	;'e'
  2101  00EB43  71                 	db	113	;'q'
  2102  00EB44  75                 	db	117	;'u'
  2103  00EB45  65                 	db	101	;'e'
  2104  00EB46  6E                 	db	110	;'n'
  2105  00EB47  63                 	db	99	;'c'
  2106  00EB48  79                 	db	121	;'y'
  2107  00EB49  20                 	db	32
  2108  00EB4A  6D                 	db	109	;'m'
  2109  00EB4B  65                 	db	101	;'e'
  2110  00EB4C  61                 	db	97	;'a'
  2111  00EB4D  73                 	db	115	;'s'
  2112  00EB4E  75                 	db	117	;'u'
  2113  00EB4F  72                 	db	114	;'r'
  2114  00EB50  65                 	db	101	;'e'
  2115  00EB51  64                 	db	100	;'d'
  2116  00EB52  20                 	db	32
  2117  00EB53  61                 	db	97	;'a'
  2118  00EB54  73                 	db	115	;'s'
  2119  00EB55  20                 	db	32
  2120  00EB56  25                 	db	37
  2121  00EB57  2B                 	db	43
  2122  00EB58  2E                 	db	46
  2123  00EB59  33                 	db	51	;'3'
  2124  00EB5A  66                 	db	102	;'f'
  2125  00EB5B  20                 	db	32
  2126  00EB5C  6B                 	db	107	;'k'
  2127  00EB5D  48                 	db	72	;'H'
  2128  00EB5E  7A                 	db	122	;'z'
  2129  00EB5F  1B                 	db	27
  2130  00EB60  5B                 	db	91	;'['
  2131  00EB61  4B                 	db	75	;'K'
  2132  00EB62  0A                 	db	10
  2133  00EB63  0D                 	db	13
  2134  00EB64  1B                 	db	27
  2135  00EB65  5B                 	db	91	;'['
  2136  00EB66  4B                 	db	75	;'K'
  2137  00EB67  0A                 	db	10
  2138  00EB68  0D                 	db	13
  2139  00EB69  00                 	db	0
  2140  00EB6A                     STR_276:
  2141  00EB6A  20                 	db	32
  2142  00EB6B  20                 	db	32
  2143  00EB6C  20                 	db	32
  2144  00EB6D  20                 	db	32
  2145  00EB6E  43                 	db	67	;'C'
  2146  00EB6F  68                 	db	104	;'h'
  2147  00EB70  61                 	db	97	;'a'
  2148  00EB71  72                 	db	114	;'r'
  2149  00EB72  67                 	db	103	;'g'
  2150  00EB73  65                 	db	101	;'e'
  2151  00EB74  20                 	db	32
  2152  00EB75  63                 	db	99	;'c'
  2153  00EB76  6F                 	db	111	;'o'
  2154  00EB77  6E                 	db	110	;'n'
  2155  00EB78  73                 	db	115	;'s'
  2156  00EB79  75                 	db	117	;'u'
  2157  00EB7A  6D                 	db	109	;'m'
  2158  00EB7B  65                 	db	101	;'e'
  2159  00EB7C  64                 	db	100	;'d'
  2160  00EB7D  20                 	db	32
  2161  00EB7E  62                 	db	98	;'b'
  2162  00EB7F  79                 	db	121	;'y'
  2163  00EB80  20                 	db	32
  2164  00EB81  74                 	db	116	;'t'
  2165  00EB82  68                 	db	104	;'h'
  2166  00EB83  65                 	db	101	;'e'
  2167  00EB84  20                 	db	32
  2168  00EB85  6C                 	db	108	;'l'
  2169  00EB86  6F                 	db	111	;'o'
  2170  00EB87  61                 	db	97	;'a'
  2171  00EB88  64                 	db	100	;'d'
  2172  00EB89  20                 	db	32
  2173  00EB8A  77                 	db	119	;'w'
  2174  00EB8B  68                 	db	104	;'h'
  2175  00EB8C  69                 	db	105	;'i'
  2176  00EB8D  6C                 	db	108	;'l'
  2177  00EB8E  65                 	db	101	;'e'
  2178  00EB8F  20                 	db	32
  2179  00EB90  63                 	db	99	;'c'
  2180  00EB91  68                 	db	104	;'h'
  2181  00EB92  61                 	db	97	;'a'
  2182  00EB93  72                 	db	114	;'r'
  2183  00EB94  67                 	db	103	;'g'
  2184  00EB95  69                 	db	105	;'i'
  2185  00EB96  6E                 	db	110	;'n'
  2186  00EB97  67                 	db	103	;'g'
  2187  00EB98  3A                 	db	58	;':'
  2188  00EB99  20                 	db	32
  2189  00EB9A  25                 	db	37
  2190  00EB9B  73                 	db	115	;'s'
  2191  00EB9C  43                 	db	67	;'C'
  2192  00EB9D  6F                 	db	111	;'o'
  2193  00EB9E  75                 	db	117	;'u'
  2194  00EB9F  6C                 	db	108	;'l'
  2195  00EBA0  6F                 	db	111	;'o'
  2196  00EBA1  6D                 	db	109	;'m'
  2197  00EBA2  62                 	db	98	;'b'
  2198  00EBA3  73                 	db	115	;'s'
  2199  00EBA4  1B                 	db	27
  2200  00EBA5  5B                 	db	91	;'['
  2201  00EBA6  4B                 	db	75	;'K'
  2202  00EBA7  0A                 	db	10
  2203  00EBA8  0D                 	db	13
  2204  00EBA9  1B                 	db	27
  2205  00EBAA  5B                 	db	91	;'['
  2206  00EBAB  4B                 	db	75	;'K'
  2207  00EBAC  0A                 	db	10
  2208  00EBAD  0D                 	db	13
  2209  00EBAE  00                 	db	0
  2210  00EBAF                     STR_274:
  2211  00EBAF  20                 	db	32
  2212  00EBB0  20                 	db	32
  2213  00EBB1  20                 	db	32
  2214  00EBB2  20                 	db	32
  2215  00EBB3  45                 	db	69	;'E'
  2216  00EBB4  6E                 	db	110	;'n'
  2217  00EBB5  65                 	db	101	;'e'
  2218  00EBB6  72                 	db	114	;'r'
  2219  00EBB7  67                 	db	103	;'g'
  2220  00EBB8  79                 	db	121	;'y'
  2221  00EBB9  20                 	db	32
  2222  00EBBA  63                 	db	99	;'c'
  2223  00EBBB  6F                 	db	111	;'o'
  2224  00EBBC  6E                 	db	110	;'n'
  2225  00EBBD  73                 	db	115	;'s'
  2226  00EBBE  75                 	db	117	;'u'
  2227  00EBBF  6D                 	db	109	;'m'
  2228  00EBC0  65                 	db	101	;'e'
  2229  00EBC1  64                 	db	100	;'d'
  2230  00EBC2  20                 	db	32
  2231  00EBC3  62                 	db	98	;'b'
  2232  00EBC4  79                 	db	121	;'y'
  2233  00EBC5  20                 	db	32
  2234  00EBC6  74                 	db	116	;'t'
  2235  00EBC7  68                 	db	104	;'h'
  2236  00EBC8  65                 	db	101	;'e'
  2237  00EBC9  20                 	db	32
  2238  00EBCA  6C                 	db	108	;'l'
  2239  00EBCB  6F                 	db	111	;'o'
  2240  00EBCC  61                 	db	97	;'a'
  2241  00EBCD  64                 	db	100	;'d'
  2242  00EBCE  20                 	db	32
  2243  00EBCF  77                 	db	119	;'w'
  2244  00EBD0  68                 	db	104	;'h'
  2245  00EBD1  69                 	db	105	;'i'
  2246  00EBD2  6C                 	db	108	;'l'
  2247  00EBD3  65                 	db	101	;'e'
  2248  00EBD4  20                 	db	32
  2249  00EBD5  63                 	db	99	;'c'
  2250  00EBD6  68                 	db	104	;'h'
  2251  00EBD7  61                 	db	97	;'a'
  2252  00EBD8  72                 	db	114	;'r'
  2253  00EBD9  67                 	db	103	;'g'
  2254  00EBDA  69                 	db	105	;'i'
  2255  00EBDB  6E                 	db	110	;'n'
  2256  00EBDC  67                 	db	103	;'g'
  2257  00EBDD  3A                 	db	58	;':'
  2258  00EBDE  20                 	db	32
  2259  00EBDF  25                 	db	37
  2260  00EBE0  73                 	db	115	;'s'
  2261  00EBE1  4A                 	db	74	;'J'
  2262  00EBE2  6F                 	db	111	;'o'
  2263  00EBE3  75                 	db	117	;'u'
  2264  00EBE4  6C                 	db	108	;'l'
  2265  00EBE5  65                 	db	101	;'e'
  2266  00EBE6  73                 	db	115	;'s'
  2267  00EBE7  1B                 	db	27
  2268  00EBE8  5B                 	db	91	;'['
  2269  00EBE9  4B                 	db	75	;'K'
  2270  00EBEA  0A                 	db	10
  2271  00EBEB  0D                 	db	13
  2272  00EBEC  1B                 	db	27
  2273  00EBED  5B                 	db	91	;'['
  2274  00EBEE  4B                 	db	75	;'K'
  2275  00EBEF  0A                 	db	10
  2276  00EBF0  0D                 	db	13
  2277  00EBF1  00                 	db	0
  2278  00EBF2                     STR_280:
  2279  00EBF2  20                 	db	32
  2280  00EBF3  20                 	db	32
  2281  00EBF4  20                 	db	32
  2282  00EBF5  20                 	db	32
  2283  00EBF6  20                 	db	32
  2284  00EBF7  20                 	db	32
  2285  00EBF8  20                 	db	32
  2286  00EBF9  20                 	db	32
  2287  00EBFA  43                 	db	67	;'C'
  2288  00EBFB  75                 	db	117	;'u'
  2289  00EBFC  72                 	db	114	;'r'
  2290  00EBFD  72                 	db	114	;'r'
  2291  00EBFE  65                 	db	101	;'e'
  2292  00EBFF  6E                 	db	110	;'n'
  2293  00EC00  74                 	db	116	;'t'
  2294  00EC01  20                 	db	32
  2295  00EC02  2B                 	db	43
  2296  00EC03  35                 	db	53	;'5'
  2297  00EC04  56                 	db	86	;'V'
  2298  00EC05  20                 	db	32
  2299  00EC06  53                 	db	83	;'S'
  2300  00EC07  77                 	db	119	;'w'
  2301  00EC08  69                 	db	105	;'i'
  2302  00EC09  74                 	db	116	;'t'
  2303  00EC0A  63                 	db	99	;'c'
  2304  00EC0B  68                 	db	104	;'h'
  2305  00EC0C  69                 	db	105	;'i'
  2306  00EC0D  6E                 	db	110	;'n'
  2307  00EC0E  67                 	db	103	;'g'
  2308  00EC0F  20                 	db	32
  2309  00EC10  46                 	db	70	;'F'
  2310  00EC11  72                 	db	114	;'r'
  2311  00EC12  65                 	db	101	;'e'
  2312  00EC13  71                 	db	113	;'q'
  2313  00EC14  75                 	db	117	;'u'
  2314  00EC15  65                 	db	101	;'e'
  2315  00EC16  6E                 	db	110	;'n'
  2316  00EC17  63                 	db	99	;'c'
  2317  00EC18  79                 	db	121	;'y'
  2318  00EC19  20                 	db	32
  2319  00EC1A  6D                 	db	109	;'m'
  2320  00EC1B  65                 	db	101	;'e'
  2321  00EC1C  61                 	db	97	;'a'
  2322  00EC1D  73                 	db	115	;'s'
  2323  00EC1E  75                 	db	117	;'u'
  2324  00EC1F  72                 	db	114	;'r'
  2325  00EC20  65                 	db	101	;'e'
  2326  00EC21  64                 	db	100	;'d'
  2327  00EC22  20                 	db	32
  2328  00EC23  61                 	db	97	;'a'
  2329  00EC24  73                 	db	115	;'s'
  2330  00EC25  20                 	db	32
  2331  00EC26  25                 	db	37
  2332  00EC27  2B                 	db	43
  2333  00EC28  2E                 	db	46
  2334  00EC29  31                 	db	49	;'1'
  2335  00EC2A  66                 	db	102	;'f'
  2336  00EC2B  20                 	db	32
  2337  00EC2C  4D                 	db	77	;'M'
  2338  00EC2D  48                 	db	72	;'H'
  2339  00EC2E  7A                 	db	122	;'z'
  2340  00EC2F  1B                 	db	27
  2341  00EC30  5B                 	db	91	;'['
  2342  00EC31  4B                 	db	75	;'K'
  2343  00EC32  0A                 	db	10
  2344  00EC33  0D                 	db	13
  2345  00EC34  00                 	db	0
  2346  00EC35                     STR_260:
  2347  00EC35  20                 	db	32
  2348  00EC36  20                 	db	32
  2349  00EC37  20                 	db	32
  2350  00EC38  20                 	db	32
  2351  00EC39  51                 	db	81	;'Q'
  2352  00EC3A  49                 	db	73	;'I'
  2353  00EC3B  20                 	db	32
  2354  00EC3C  77                 	db	119	;'w'
  2355  00EC3D  69                 	db	105	;'i'
  2356  00EC3E  72                 	db	114	;'r'
  2357  00EC3F  65                 	db	101	;'e'
  2358  00EC40  6C                 	db	108	;'l'
  2359  00EC41  65                 	db	101	;'e'
  2360  00EC42  73                 	db	115	;'s'
  2361  00EC43  73                 	db	115	;'s'
  2362  00EC44  20                 	db	32
  2363  00EC45  70                 	db	112	;'p'
  2364  00EC46  6F                 	db	111	;'o'
  2365  00EC47  77                 	db	119	;'w'
  2366  00EC48  65                 	db	101	;'e'
  2367  00EC49  72                 	db	114	;'r'
  2368  00EC4A  20                 	db	32
  2369  00EC4B  63                 	db	99	;'c'
  2370  00EC4C  6F                 	db	111	;'o'
  2371  00EC4D  6E                 	db	110	;'n'
  2372  00EC4E  76                 	db	118	;'v'
  2373  00EC4F  65                 	db	101	;'e'
  2374  00EC50  72                 	db	114	;'r'
  2375  00EC51  74                 	db	116	;'t'
  2376  00EC52  65                 	db	101	;'e'
  2377  00EC53  72                 	db	114	;'r'
  2378  00EC54  20                 	db	32
  2379  00EC55  68                 	db	104	;'h'
  2380  00EC56  61                 	db	97	;'a'
  2381  00EC57  73                 	db	115	;'s'
  2382  00EC58  20                 	db	32
  2383  00EC59  66                 	db	102	;'f'
  2384  00EC5A  75                 	db	117	;'u'
  2385  00EC5B  6C                 	db	108	;'l'
  2386  00EC5C  6C                 	db	108	;'l'
  2387  00EC5D  79                 	db	121	;'y'
  2388  00EC5E  20                 	db	32
  2389  00EC5F  63                 	db	99	;'c'
  2390  00EC60  68                 	db	104	;'h'
  2391  00EC61  61                 	db	97	;'a'
  2392  00EC62  72                 	db	114	;'r'
  2393  00EC63  67                 	db	103	;'g'
  2394  00EC64  65                 	db	101	;'e'
  2395  00EC65  64                 	db	100	;'d'
  2396  00EC66  20                 	db	32
  2397  00EC67  70                 	db	112	;'p'
  2398  00EC68  68                 	db	104	;'h'
  2399  00EC69  6F                 	db	111	;'o'
  2400  00EC6A  6E                 	db	110	;'n'
  2401  00EC6B  65                 	db	101	;'e'
  2402  00EC6C  1B                 	db	27
  2403  00EC6D  5B                 	db	91	;'['
  2404  00EC6E  4B                 	db	75	;'K'
  2405  00EC6F  0A                 	db	10
  2406  00EC70  0D                 	db	13
  2407  00EC71  1B                 	db	27
  2408  00EC72  5B                 	db	91	;'['
  2409  00EC73  4B                 	db	75	;'K'
  2410  00EC74  0A                 	db	10
  2411  00EC75  0D                 	db	13
  2412  00EC76  00                 	db	0
  2413  00EC77                     STR_272:
  2414  00EC77  20                 	db	32
  2415  00EC78  20                 	db	32
  2416  00EC79  20                 	db	32
  2417  00EC7A  20                 	db	32
  2418  00EC7B  20                 	db	32
  2419  00EC7C  20                 	db	32
  2420  00EC7D  20                 	db	32
  2421  00EC7E  20                 	db	32
  2422  00EC7F  57                 	db	87	;'W'
  2423  00EC80  69                 	db	105	;'i'
  2424  00EC81  72                 	db	114	;'r'
  2425  00EC82  65                 	db	101	;'e'
  2426  00EC83  6C                 	db	108	;'l'
  2427  00EC84  65                 	db	101	;'e'
  2428  00EC85  73                 	db	115	;'s'
  2429  00EC86  73                 	db	115	;'s'
  2430  00EC87  20                 	db	32
  2431  00EC88  4F                 	db	79	;'O'
  2432  00EC89  75                 	db	117	;'u'
  2433  00EC8A  74                 	db	116	;'t'
  2434  00EC8B  70                 	db	112	;'p'
  2435  00EC8C  75                 	db	117	;'u'
  2436  00EC8D  74                 	db	116	;'t'
  2437  00EC8E  20                 	db	32
  2438  00EC8F  50                 	db	80	;'P'
  2439  00EC90  6F                 	db	111	;'o'
  2440  00EC91  77                 	db	119	;'w'
  2441  00EC92  65                 	db	101	;'e'
  2442  00EC93  72                 	db	114	;'r'
  2443  00EC94  20                 	db	32
  2444  00EC95  63                 	db	99	;'c'
  2445  00EC96  61                 	db	97	;'a'
  2446  00EC97  6C                 	db	108	;'l'
  2447  00EC98  63                 	db	99	;'c'
  2448  00EC99  75                 	db	117	;'u'
  2449  00EC9A  6C                 	db	108	;'l'
  2450  00EC9B  61                 	db	97	;'a'
  2451  00EC9C  74                 	db	116	;'t'
  2452  00EC9D  65                 	db	101	;'e'
  2453  00EC9E  64                 	db	100	;'d'
  2454  00EC9F  20                 	db	32
  2455  00ECA0  61                 	db	97	;'a'
  2456  00ECA1  73                 	db	115	;'s'
  2457  00ECA2  20                 	db	32
  2458  00ECA3  25                 	db	37
  2459  00ECA4  2B                 	db	43
  2460  00ECA5  2E                 	db	46
  2461  00ECA6  33                 	db	51	;'3'
  2462  00ECA7  66                 	db	102	;'f'
  2463  00ECA8  20                 	db	32
  2464  00ECA9  57                 	db	87	;'W'
  2465  00ECAA  61                 	db	97	;'a'
  2466  00ECAB  74                 	db	116	;'t'
  2467  00ECAC  74                 	db	116	;'t'
  2468  00ECAD  73                 	db	115	;'s'
  2469  00ECAE  1B                 	db	27
  2470  00ECAF  5B                 	db	91	;'['
  2471  00ECB0  4B                 	db	75	;'K'
  2472  00ECB1  0A                 	db	10
  2473  00ECB2  0D                 	db	13
  2474  00ECB3  1B                 	db	27
  2475  00ECB4  5B                 	db	91	;'['
  2476  00ECB5  4B                 	db	75	;'K'
  2477  00ECB6  0A                 	db	10
  2478  00ECB7  0D                 	db	13
  2479  00ECB8  00                 	db	0
  2480  00ECB9                     STR_288:
  2481  00ECB9  20                 	db	32
  2482  00ECBA  20                 	db	32
  2483  00ECBB  20                 	db	32
  2484  00ECBC  20                 	db	32
  2485  00ECBD  20                 	db	32
  2486  00ECBE  20                 	db	32
  2487  00ECBF  20                 	db	32
  2488  00ECC0  20                 	db	32
  2489  00ECC1  4D                 	db	77	;'M'
  2490  00ECC2  69                 	db	105	;'i'
  2491  00ECC3  63                 	db	99	;'c'
  2492  00ECC4  72                 	db	114	;'r'
  2493  00ECC5  6F                 	db	111	;'o'
  2494  00ECC6  63                 	db	99	;'c'
  2495  00ECC7  6F                 	db	111	;'o'
  2496  00ECC8  6E                 	db	110	;'n'
  2497  00ECC9  74                 	db	116	;'t'
  2498  00ECCA  72                 	db	114	;'r'
  2499  00ECCB  6F                 	db	111	;'o'
  2500  00ECCC  6C                 	db	108	;'l'
  2501  00ECCD  6C                 	db	108	;'l'
  2502  00ECCE  65                 	db	101	;'e'
  2503  00ECCF  72                 	db	114	;'r'
  2504  00ECD0  20                 	db	32
  2505  00ECD1  44                 	db	68	;'D'
  2506  00ECD2  69                 	db	105	;'i'
  2507  00ECD3  65                 	db	101	;'e'
  2508  00ECD4  20                 	db	32
  2509  00ECD5  54                 	db	84	;'T'
  2510  00ECD6  65                 	db	101	;'e'
  2511  00ECD7  6D                 	db	109	;'m'
  2512  00ECD8  70                 	db	112	;'p'
  2513  00ECD9  65                 	db	101	;'e'
  2514  00ECDA  72                 	db	114	;'r'
  2515  00ECDB  61                 	db	97	;'a'
  2516  00ECDC  74                 	db	116	;'t'
  2517  00ECDD  75                 	db	117	;'u'
  2518  00ECDE  72                 	db	114	;'r'
  2519  00ECDF  65                 	db	101	;'e'
  2520  00ECE0  20                 	db	32
  2521  00ECE1  6D                 	db	109	;'m'
  2522  00ECE2  65                 	db	101	;'e'
  2523  00ECE3  61                 	db	97	;'a'
  2524  00ECE4  73                 	db	115	;'s'
  2525  00ECE5  75                 	db	117	;'u'
  2526  00ECE6  72                 	db	114	;'r'
  2527  00ECE7  65                 	db	101	;'e'
  2528  00ECE8  64                 	db	100	;'d'
  2529  00ECE9  20                 	db	32
  2530  00ECEA  61                 	db	97	;'a'
  2531  00ECEB  73                 	db	115	;'s'
  2532  00ECEC  20                 	db	32
  2533  00ECED  25                 	db	37
  2534  00ECEE  2B                 	db	43
  2535  00ECEF  2E                 	db	46
  2536  00ECF0  33                 	db	51	;'3'
  2537  00ECF1  66                 	db	102	;'f'
  2538  00ECF2  20                 	db	32
  2539  00ECF3  43                 	db	67	;'C'
  2540  00ECF4  1B                 	db	27
  2541  00ECF5  5B                 	db	91	;'['
  2542  00ECF6  4B                 	db	75	;'K'
  2543  00ECF7  0A                 	db	10
  2544  00ECF8  0D                 	db	13
  2545  00ECF9  00                 	db	0
  2546  00ECFA                     STR_257:
  2547  00ECFA  20                 	db	32
  2548  00ECFB  20                 	db	32
  2549  00ECFC  20                 	db	32
  2550  00ECFD  20                 	db	32
  2551  00ECFE  43                 	db	67	;'C'
  2552  00ECFF  61                 	db	97	;'a'
  2553  00ED00  6C                 	db	108	;'l'
  2554  00ED01  6C                 	db	108	;'l'
  2555  00ED02  20                 	db	32
  2556  00ED03  27                 	db	39
  2557  00ED04  43                 	db	67	;'C'
  2558  00ED05  6C                 	db	108	;'l'
  2559  00ED06  65                 	db	101	;'e'
  2560  00ED07  61                 	db	97	;'a'
  2561  00ED08  72                 	db	114	;'r'
  2562  00ED09  20                 	db	32
  2563  00ED0A  55                 	db	85	;'U'
  2564  00ED0B  41                 	db	65	;'A'
  2565  00ED0C  52                 	db	82	;'R'
  2566  00ED0D  54                 	db	84	;'T'
  2567  00ED0E  20                 	db	32
  2568  00ED0F  45                 	db	69	;'E'
  2569  00ED10  72                 	db	114	;'r'
  2570  00ED11  72                 	db	114	;'r'
  2571  00ED12  6F                 	db	111	;'o'
  2572  00ED13  72                 	db	114	;'r'
  2573  00ED14  73                 	db	115	;'s'
  2574  00ED15  27                 	db	39
  2575  00ED16  20                 	db	32
  2576  00ED17  74                 	db	116	;'t'
  2577  00ED18  6F                 	db	111	;'o'
  2578  00ED19  20                 	db	32
  2579  00ED1A  63                 	db	99	;'c'
  2580  00ED1B  6C                 	db	108	;'l'
  2581  00ED1C  65                 	db	101	;'e'
  2582  00ED1D  61                 	db	97	;'a'
  2583  00ED1E  72                 	db	114	;'r'
  2584  00ED1F  20                 	db	32
  2585  00ED20  63                 	db	99	;'c'
  2586  00ED21  6F                 	db	111	;'o'
  2587  00ED22  6D                 	db	109	;'m'
  2588  00ED23  6D                 	db	109	;'m'
  2589  00ED24  75                 	db	117	;'u'
  2590  00ED25  6E                 	db	110	;'n'
  2591  00ED26  69                 	db	105	;'i'
  2592  00ED27  63                 	db	99	;'c'
  2593  00ED28  61                 	db	97	;'a'
  2594  00ED29  74                 	db	116	;'t'
  2595  00ED2A  69                 	db	105	;'i'
  2596  00ED2B  6F                 	db	111	;'o'
  2597  00ED2C  6E                 	db	110	;'n'
  2598  00ED2D  73                 	db	115	;'s'
  2599  00ED2E  20                 	db	32
  2600  00ED2F  65                 	db	101	;'e'
  2601  00ED30  72                 	db	114	;'r'
  2602  00ED31  72                 	db	114	;'r'
  2603  00ED32  6F                 	db	111	;'o'
  2604  00ED33  72                 	db	114	;'r'
  2605  00ED34  28                 	db	40
  2606  00ED35  73                 	db	115	;'s'
  2607  00ED36  29                 	db	41
  2608  00ED37  0A                 	db	10
  2609  00ED38  0D                 	db	13
  2610  00ED39  00                 	db	0
  2611  00ED3A                     STR_254:
  2612  00ED3A  20                 	db	32
  2613  00ED3B  20                 	db	32
  2614  00ED3C  20                 	db	32
  2615  00ED3D  20                 	db	32
  2616  00ED3E  43                 	db	67	;'C'
  2617  00ED3F  61                 	db	97	;'a'
  2618  00ED40  6C                 	db	108	;'l'
  2619  00ED41  6C                 	db	108	;'l'
  2620  00ED42  20                 	db	32
  2621  00ED43  27                 	db	39
  2622  00ED44  43                 	db	67	;'C'
  2623  00ED45  6C                 	db	108	;'l'
  2624  00ED46  65                 	db	101	;'e'
  2625  00ED47  61                 	db	97	;'a'
  2626  00ED48  72                 	db	114	;'r'
  2627  00ED49  20                 	db	32
  2628  00ED4A  49                 	db	73	;'I'
  2629  00ED4B  32                 	db	50	;'2'
  2630  00ED4C  43                 	db	67	;'C'
  2631  00ED4D  20                 	db	32
  2632  00ED4E  45                 	db	69	;'E'
  2633  00ED4F  72                 	db	114	;'r'
  2634  00ED50  72                 	db	114	;'r'
  2635  00ED51  6F                 	db	111	;'o'
  2636  00ED52  72                 	db	114	;'r'
  2637  00ED53  73                 	db	115	;'s'
  2638  00ED54  27                 	db	39
  2639  00ED55  20                 	db	32
  2640  00ED56  74                 	db	116	;'t'
  2641  00ED57  6F                 	db	111	;'o'
  2642  00ED58  20                 	db	32
  2643  00ED59  63                 	db	99	;'c'
  2644  00ED5A  6C                 	db	108	;'l'
  2645  00ED5B  65                 	db	101	;'e'
  2646  00ED5C  61                 	db	97	;'a'
  2647  00ED5D  72                 	db	114	;'r'
  2648  00ED5E  20                 	db	32
  2649  00ED5F  63                 	db	99	;'c'
  2650  00ED60  6F                 	db	111	;'o'
  2651  00ED61  6D                 	db	109	;'m'
  2652  00ED62  6D                 	db	109	;'m'
  2653  00ED63  75                 	db	117	;'u'
  2654  00ED64  6E                 	db	110	;'n'
  2655  00ED65  69                 	db	105	;'i'
  2656  00ED66  63                 	db	99	;'c'
  2657  00ED67  61                 	db	97	;'a'
  2658  00ED68  74                 	db	116	;'t'
  2659  00ED69  69                 	db	105	;'i'
  2660  00ED6A  6F                 	db	111	;'o'
  2661  00ED6B  6E                 	db	110	;'n'
  2662  00ED6C  73                 	db	115	;'s'
  2663  00ED6D  20                 	db	32
  2664  00ED6E  65                 	db	101	;'e'
  2665  00ED6F  72                 	db	114	;'r'
  2666  00ED70  72                 	db	114	;'r'
  2667  00ED71  6F                 	db	111	;'o'
  2668  00ED72  72                 	db	114	;'r'
  2669  00ED73  28                 	db	40
  2670  00ED74  73                 	db	115	;'s'
  2671  00ED75  29                 	db	41
  2672  00ED76  0A                 	db	10
  2673  00ED77  0D                 	db	13
  2674  00ED78  00                 	db	0
  2675  00ED79                     STR_269:
  2676  00ED79  20                 	db	32
  2677  00ED7A  20                 	db	32
  2678  00ED7B  20                 	db	32
  2679  00ED7C  20                 	db	32
  2680  00ED7D  20                 	db	32
  2681  00ED7E  20                 	db	32
  2682  00ED7F  20                 	db	32
  2683  00ED80  20                 	db	32
  2684  00ED81  51                 	db	81	;'Q'
  2685  00ED82  49                 	db	73	;'I'
  2686  00ED83  20                 	db	32
  2687  00ED84  63                 	db	99	;'c'
  2688  00ED85  6F                 	db	111	;'o'
  2689  00ED86  6E                 	db	110	;'n'
  2690  00ED87  76                 	db	118	;'v'
  2691  00ED88  65                 	db	101	;'e'
  2692  00ED89  72                 	db	114	;'r'
  2693  00ED8A  74                 	db	116	;'t'
  2694  00ED8B  65                 	db	101	;'e'
  2695  00ED8C  72                 	db	114	;'r'
  2696  00ED8D  20                 	db	32
  2697  00ED8E  63                 	db	99	;'c'
  2698  00ED8F  75                 	db	117	;'u'
  2699  00ED90  72                 	db	114	;'r'
  2700  00ED91  72                 	db	114	;'r'
  2701  00ED92  65                 	db	101	;'e'
  2702  00ED93  6E                 	db	110	;'n'
  2703  00ED94  74                 	db	116	;'t'
  2704  00ED95  20                 	db	32
  2705  00ED96  6D                 	db	109	;'m'
  2706  00ED97  65                 	db	101	;'e'
  2707  00ED98  61                 	db	97	;'a'
  2708  00ED99  73                 	db	115	;'s'
  2709  00ED9A  75                 	db	117	;'u'
  2710  00ED9B  72                 	db	114	;'r'
  2711  00ED9C  65                 	db	101	;'e'
  2712  00ED9D  64                 	db	100	;'d'
  2713  00ED9E  20                 	db	32
  2714  00ED9F  61                 	db	97	;'a'
  2715  00EDA0  73                 	db	115	;'s'
  2716  00EDA1  20                 	db	32
  2717  00EDA2  25                 	db	37
  2718  00EDA3  2B                 	db	43
  2719  00EDA4  2E                 	db	46
  2720  00EDA5  33                 	db	51	;'3'
  2721  00EDA6  66                 	db	102	;'f'
  2722  00EDA7  20                 	db	32
  2723  00EDA8  41                 	db	65	;'A'
  2724  00EDA9  6D                 	db	109	;'m'
  2725  00EDAA  70                 	db	112	;'p'
  2726  00EDAB  73                 	db	115	;'s'
  2727  00EDAC  1B                 	db	27
  2728  00EDAD  5B                 	db	91	;'['
  2729  00EDAE  4B                 	db	75	;'K'
  2730  00EDAF  0A                 	db	10
  2731  00EDB0  0D                 	db	13
  2732  00EDB1  1B                 	db	27
  2733  00EDB2  5B                 	db	91	;'['
  2734  00EDB3  4B                 	db	75	;'K'
  2735  00EDB4  0A                 	db	10
  2736  00EDB5  0D                 	db	13
  2737  00EDB6  00                 	db	0
  2738  00EDB7                     STR_271:
  2739  00EDB7  20                 	db	32
  2740  00EDB8  20                 	db	32
  2741  00EDB9  20                 	db	32
  2742  00EDBA  20                 	db	32
  2743  00EDBB  20                 	db	32
  2744  00EDBC  20                 	db	32
  2745  00EDBD  20                 	db	32
  2746  00EDBE  20                 	db	32
  2747  00EDBF  45                 	db	69	;'E'
  2748  00EDC0  6C                 	db	108	;'l'
  2749  00EDC1  65                 	db	101	;'e'
  2750  00EDC2  63                 	db	99	;'c'
  2751  00EDC3  74                 	db	116	;'t'
  2752  00EDC4  72                 	db	114	;'r'
  2753  00EDC5  69                 	db	105	;'i'
  2754  00EDC6  63                 	db	99	;'c'
  2755  00EDC7  61                 	db	97	;'a'
  2756  00EDC8  6C                 	db	108	;'l'
  2757  00EDC9  20                 	db	32
  2758  00EDCA  49                 	db	73	;'I'
  2759  00EDCB  6E                 	db	110	;'n'
  2760  00EDCC  70                 	db	112	;'p'
  2761  00EDCD  75                 	db	117	;'u'
  2762  00EDCE  74                 	db	116	;'t'
  2763  00EDCF  20                 	db	32
  2764  00EDD0  50                 	db	80	;'P'
  2765  00EDD1  6F                 	db	111	;'o'
  2766  00EDD2  77                 	db	119	;'w'
  2767  00EDD3  65                 	db	101	;'e'
  2768  00EDD4  72                 	db	114	;'r'
  2769  00EDD5  20                 	db	32
  2770  00EDD6  63                 	db	99	;'c'
  2771  00EDD7  61                 	db	97	;'a'
  2772  00EDD8  6C                 	db	108	;'l'
  2773  00EDD9  63                 	db	99	;'c'
  2774  00EDDA  75                 	db	117	;'u'
  2775  00EDDB  6C                 	db	108	;'l'
  2776  00EDDC  61                 	db	97	;'a'
  2777  00EDDD  74                 	db	116	;'t'
  2778  00EDDE  65                 	db	101	;'e'
  2779  00EDDF  64                 	db	100	;'d'
  2780  00EDE0  20                 	db	32
  2781  00EDE1  61                 	db	97	;'a'
  2782  00EDE2  73                 	db	115	;'s'
  2783  00EDE3  20                 	db	32
  2784  00EDE4  25                 	db	37
  2785  00EDE5  2B                 	db	43
  2786  00EDE6  2E                 	db	46
  2787  00EDE7  33                 	db	51	;'3'
  2788  00EDE8  66                 	db	102	;'f'
  2789  00EDE9  20                 	db	32
  2790  00EDEA  57                 	db	87	;'W'
  2791  00EDEB  61                 	db	97	;'a'
  2792  00EDEC  74                 	db	116	;'t'
  2793  00EDED  74                 	db	116	;'t'
  2794  00EDEE  73                 	db	115	;'s'
  2795  00EDEF  1B                 	db	27
  2796  00EDF0  5B                 	db	91	;'['
  2797  00EDF1  4B                 	db	75	;'K'
  2798  00EDF2  0A                 	db	10
  2799  00EDF3  0D                 	db	13
  2800  00EDF4  00                 	db	0
  2801  00EDF5                     STR_205:
  2802  00EDF5  20                 	db	32
  2803  00EDF6  20                 	db	32
  2804  00EDF7  20                 	db	32
  2805  00EDF8  20                 	db	32
  2806  00EDF9  44                 	db	68	;'D'
  2807  00EDFA  65                 	db	101	;'e'
  2808  00EDFB  76                 	db	118	;'v'
  2809  00EDFC  69                 	db	105	;'i'
  2810  00EDFD  63                 	db	99	;'c'
  2811  00EDFE  65                 	db	101	;'e'
  2812  00EDFF  20                 	db	32
  2813  00EE00  73                 	db	115	;'s'
  2814  00EE01  69                 	db	105	;'i'
  2815  00EE02  6C                 	db	108	;'l'
  2816  00EE03  69                 	db	105	;'i'
  2817  00EE04  63                 	db	99	;'c'
  2818  00EE05  6F                 	db	111	;'o'
  2819  00EE06  6E                 	db	110	;'n'
  2820  00EE07  20                 	db	32
  2821  00EE08  72                 	db	114	;'r'
  2822  00EE09  65                 	db	101	;'e'
  2823  00EE0A  76                 	db	118	;'v'
  2824  00EE0B  69                 	db	105	;'i'
  2825  00EE0C  73                 	db	115	;'s'
  2826  00EE0D  69                 	db	105	;'i'
  2827  00EE0E  6F                 	db	111	;'o'
  2828  00EE0F  6E                 	db	110	;'n'
  2829  00EE10  20                 	db	32
  2830  00EE11  49                 	db	73	;'I'
  2831  00EE12  44                 	db	68	;'D'
  2832  00EE13  20                 	db	32
  2833  00EE14  72                 	db	114	;'r'
  2834  00EE15  65                 	db	101	;'e'
  2835  00EE16  74                 	db	116	;'t'
  2836  00EE17  72                 	db	114	;'r'
  2837  00EE18  69                 	db	105	;'i'
  2838  00EE19  65                 	db	101	;'e'
  2839  00EE1A  76                 	db	118	;'v'
  2840  00EE1B  65                 	db	101	;'e'
  2841  00EE1C  64                 	db	100	;'d'
  2842  00EE1D  20                 	db	32
  2843  00EE1E  66                 	db	102	;'f'
  2844  00EE1F  72                 	db	114	;'r'
  2845  00EE20  6F                 	db	111	;'o'
  2846  00EE21  6D                 	db	109	;'m'
  2847  00EE22  20                 	db	32
  2848  00EE23  66                 	db	102	;'f'
  2849  00EE24  6C                 	db	108	;'l'
  2850  00EE25  61                 	db	97	;'a'
  2851  00EE26  73                 	db	115	;'s'
  2852  00EE27  68                 	db	104	;'h'
  2853  00EE28  3A                 	db	58	;':'
  2854  00EE29  20                 	db	32
  2855  00EE2A  25                 	db	37
  2856  00EE2B  63                 	db	99	;'c'
  2857  00EE2C  25                 	db	37
  2858  00EE2D  30                 	db	48	;'0'
  2859  00EE2E  33                 	db	51	;'3'
  2860  00EE2F  64                 	db	100	;'d'
  2861  00EE30  0A                 	db	10
  2862  00EE31  0D                 	db	13
  2863  00EE32  00                 	db	0
  2864  00EE33                     STR_6:
  2865  00EE33  53                 	db	83	;'S'
  2866  00EE34  79                 	db	121	;'y'
  2867  00EE35  73                 	db	115	;'s'
  2868  00EE36  74                 	db	116	;'t'
  2869  00EE37  65                 	db	101	;'e'
  2870  00EE38  6D                 	db	109	;'m'
  2871  00EE39  20                 	db	32
  2872  00EE3A  70                 	db	112	;'p'
  2873  00EE3B  61                 	db	97	;'a'
  2874  00EE3C  72                 	db	114	;'r'
  2875  00EE3D  61                 	db	97	;'a'
  2876  00EE3E  6D                 	db	109	;'m'
  2877  00EE3F  65                 	db	101	;'e'
  2878  00EE40  74                 	db	116	;'t'
  2879  00EE41  65                 	db	101	;'e'
  2880  00EE42  72                 	db	114	;'r'
  2881  00EE43  73                 	db	115	;'s'
  2882  00EE44  20                 	db	32
  2883  00EE45  61                 	db	97	;'a'
  2884  00EE46  6E                 	db	110	;'n'
  2885  00EE47  64                 	db	100	;'d'
  2886  00EE48  20                 	db	32
  2887  00EE49  61                 	db	97	;'a'
  2888  00EE4A  66                 	db	102	;'f'
  2889  00EE4B  66                 	db	102	;'f'
  2890  00EE4C  69                 	db	105	;'i'
  2891  00EE4D  72                 	db	114	;'r'
  2892  00EE4E  6D                 	db	109	;'m'
  2893  00EE4F  61                 	db	97	;'a'
  2894  00EE50  74                 	db	116	;'t'
  2895  00EE51  69                 	db	105	;'i'
  2896  00EE52  76                 	db	118	;'v'
  2897  00EE53  65                 	db	101	;'e'
  2898  00EE54  20                 	db	32
  2899  00EE55  72                 	db	114	;'r'
  2900  00EE56  65                 	db	101	;'e'
  2901  00EE57  73                 	db	115	;'s'
  2902  00EE58  70                 	db	112	;'p'
  2903  00EE59  6F                 	db	111	;'o'
  2904  00EE5A  6E                 	db	110	;'n'
  2905  00EE5B  73                 	db	115	;'s'
  2906  00EE5C  65                 	db	101	;'e'
  2907  00EE5D  73                 	db	115	;'s'
  2908  00EE5E  20                 	db	32
  2909  00EE5F  61                 	db	97	;'a'
  2910  00EE60  70                 	db	112	;'p'
  2911  00EE61  70                 	db	112	;'p'
  2912  00EE62  65                 	db	101	;'e'
  2913  00EE63  61                 	db	97	;'a'
  2914  00EE64  72                 	db	114	;'r'
  2915  00EE65  20                 	db	32
  2916  00EE66  69                 	db	105	;'i'
  2917  00EE67  6E                 	db	110	;'n'
  2918  00EE68  20                 	db	32
  2919  00EE69  67                 	db	103	;'g'
  2920  00EE6A  72                 	db	114	;'r'
  2921  00EE6B  65                 	db	101	;'e'
  2922  00EE6C  65                 	db	101	;'e'
  2923  00EE6D  6E                 	db	110	;'n'
  2924  00EE6E  0A                 	db	10
  2925  00EE6F  0D                 	db	13
  2926  00EE70  00                 	db	0
  2927  00EE71                     STR_207:
  2928  00EE71  20                 	db	32
  2929  00EE72  20                 	db	32
  2930  00EE73  20                 	db	32
  2931  00EE74  20                 	db	32
  2932  00EE75  54                 	db	84	;'T'
  2933  00EE76  68                 	db	104	;'h'
  2934  00EE77  65                 	db	101	;'e'
  2935  00EE78  20                 	db	32
  2936  00EE79  66                 	db	102	;'f'
  2937  00EE7A  6F                 	db	111	;'o'
  2938  00EE7B  6C                 	db	108	;'l'
  2939  00EE7C  6C                 	db	108	;'l'
  2940  00EE7D  6F                 	db	111	;'o'
  2941  00EE7E  77                 	db	119	;'w'
  2942  00EE7F  69                 	db	105	;'i'
  2943  00EE80  6E                 	db	110	;'n'
  2944  00EE81  67                 	db	103	;'g'
  2945  00EE82  20                 	db	32
  2946  00EE83  55                 	db	85	;'U'
  2947  00EE84  73                 	db	115	;'s'
  2948  00EE85  65                 	db	101	;'e'
  2949  00EE86  72                 	db	114	;'r'
  2950  00EE87  20                 	db	32
  2951  00EE88  49                 	db	73	;'I'
  2952  00EE89  44                 	db	68	;'D'
  2953  00EE8A  73                 	db	115	;'s'
  2954  00EE8B  20                 	db	32
  2955  00EE8C  68                 	db	104	;'h'
  2956  00EE8D  61                 	db	97	;'a'
  2957  00EE8E  76                 	db	118	;'v'
  2958  00EE8F  65                 	db	101	;'e'
  2959  00EE90  20                 	db	32
  2960  00EE91  62                 	db	98	;'b'
  2961  00EE92  65                 	db	101	;'e'
  2962  00EE93  65                 	db	101	;'e'
  2963  00EE94  6E                 	db	110	;'n'
  2964  00EE95  20                 	db	32
  2965  00EE96  72                 	db	114	;'r'
  2966  00EE97  65                 	db	101	;'e'
  2967  00EE98  74                 	db	116	;'t'
  2968  00EE99  72                 	db	114	;'r'
  2969  00EE9A  69                 	db	105	;'i'
  2970  00EE9B  65                 	db	101	;'e'
  2971  00EE9C  76                 	db	118	;'v'
  2972  00EE9D  65                 	db	101	;'e'
  2973  00EE9E  64                 	db	100	;'d'
  2974  00EE9F  20                 	db	32
  2975  00EEA0  66                 	db	102	;'f'
  2976  00EEA1  72                 	db	114	;'r'
  2977  00EEA2  6F                 	db	111	;'o'
  2978  00EEA3  6D                 	db	109	;'m'
  2979  00EEA4  20                 	db	32
  2980  00EEA5  66                 	db	102	;'f'
  2981  00EEA6  6C                 	db	108	;'l'
  2982  00EEA7  61                 	db	97	;'a'
  2983  00EEA8  73                 	db	115	;'s'
  2984  00EEA9  68                 	db	104	;'h'
  2985  00EEAA  3A                 	db	58	;':'
  2986  00EEAB  0A                 	db	10
  2987  00EEAC  0D                 	db	13
  2988  00EEAD  00                 	db	0
  2989  00EEAE  46                 	db	70	;'F'
  2990  00EEAF  69                 	db	105	;'i'
  2991  00EEB0  6E                 	db	110	;'n'
  2992  00EEB1  69                 	db	105	;'i'
  2993  00EEB2  73                 	db	115	;'s'
  2994  00EEB3  68                 	db	104	;'h'
  2995  00EEB4  65                 	db	101	;'e'
  2996  00EEB5  64                 	db	100	;'d'
  2997  00EEB6  20                 	db	32
  2998  00EEB7  74                 	db	116	;'t'
  2999  00EEB8  65                 	db	101	;'e'
  3000  00EEB9  73                 	db	115	;'s'
  3001  00EEBA  74                 	db	116	;'t'
  3002  00EEBB  20                 	db	32
  3003  00EEBC  6D                 	db	109	;'m'
  3004  00EEBD  65                 	db	101	;'e'
  3005  00EEBE  73                 	db	115	;'s'
  3006  00EEBF  73                 	db	115	;'s'
  3007  00EEC0  61                 	db	97	;'a'
  3008  00EEC1  67                 	db	103	;'g'
  3009  00EEC2  65                 	db	101	;'e'
  3010  00EEC3  2C                 	db	44
  3011  00EEC4  20                 	db	32
  3012  00EEC5  74                 	db	116	;'t'
  3013  00EEC6  79                 	db	121	;'y'
  3014  00EEC7  70                 	db	112	;'p'
  3015  00EEC8  65                 	db	101	;'e'
  3016  00EEC9  20                 	db	32
  3017  00EECA  27                 	db	39
  3018  00EECB  48                 	db	72	;'H'
  3019  00EECC  65                 	db	101	;'e'
  3020  00EECD  6C                 	db	108	;'l'
  3021  00EECE  70                 	db	112	;'p'
  3022  00EECF  27                 	db	39
  3023  00EED0  20                 	db	32
  3024  00EED1  66                 	db	102	;'f'
  3025  00EED2  6F                 	db	111	;'o'
  3026  00EED3  72                 	db	114	;'r'
  3027  00EED4  20                 	db	32
  3028  00EED5  6C                 	db	108	;'l'
  3029  00EED6  69                 	db	105	;'i'
  3030  00EED7  73                 	db	115	;'s'
  3031  00EED8  74                 	db	116	;'t'
  3032  00EED9  20                 	db	32
  3033  00EEDA  6F                 	db	111	;'o'
  3034  00EEDB  66                 	db	102	;'f'
  3035  00EEDC  20                 	db	32
  3036  00EEDD  63                 	db	99	;'c'
  3037  00EEDE  6F                 	db	111	;'o'
  3038  00EEDF  6D                 	db	109	;'m'
  3039  00EEE0  6D                 	db	109	;'m'
  3040  00EEE1  61                 	db	97	;'a'
  3041  00EEE2  6E                 	db	110	;'n'
  3042  00EEE3  64                 	db	100	;'d'
  3043  00EEE4  73                 	db	115	;'s'
  3044  00EEE5  0A                 	db	10
  3045  00EEE6  0D                 	db	13
  3046  00EEE7  0A                 	db	10
  3047  00EEE8  0D                 	db	13
  3048  00EEE9  00                 	db	0
  3049  00EEEA                     STR_208:
  3050  00EEEA  20                 	db	32
  3051  00EEEB  20                 	db	32
  3052  00EEEC  20                 	db	32
  3053  00EEED  20                 	db	32
  3054  00EEEE  20                 	db	32
  3055  00EEEF  20                 	db	32
  3056  00EEF0  20                 	db	32
  3057  00EEF1  20                 	db	32
  3058  00EEF2  55                 	db	85	;'U'
  3059  00EEF3  73                 	db	115	;'s'
  3060  00EEF4  65                 	db	101	;'e'
  3061  00EEF5  72                 	db	114	;'r'
  3062  00EEF6  20                 	db	32
  3063  00EEF7  49                 	db	73	;'I'
  3064  00EEF8  44                 	db	68	;'D'
  3065  00EEF9  20                 	db	32
  3066  00EEFA  57                 	db	87	;'W'
  3067  00EEFB  6F                 	db	111	;'o'
  3068  00EEFC  72                 	db	114	;'r'
  3069  00EEFD  64                 	db	100	;'d'
  3070  00EEFE  20                 	db	32
  3071  00EEFF  25                 	db	37
  3072  00EF00  64                 	db	100	;'d'
  3073  00EF01  20                 	db	32
  3074  00EF02  28                 	db	40
  3075  00EF03  46                 	db	70	;'F'
  3076  00EF04  6C                 	db	108	;'l'
  3077  00EF05  61                 	db	97	;'a'
  3078  00EF06  73                 	db	115	;'s'
  3079  00EF07  68                 	db	104	;'h'
  3080  00EF08  20                 	db	32
  3081  00EF09  61                 	db	97	;'a'
  3082  00EF0A  64                 	db	100	;'d'
  3083  00EF0B  64                 	db	100	;'d'
  3084  00EF0C  72                 	db	114	;'r'
  3085  00EF0D  65                 	db	101	;'e'
  3086  00EF0E  73                 	db	115	;'s'
  3087  00EF0F  73                 	db	115	;'s'
  3088  00EF10  20                 	db	32
  3089  00EF11  30                 	db	48	;'0'
  3090  00EF12  78                 	db	120	;'x'
  3091  00EF13  32                 	db	50	;'2'
  3092  00EF14  30                 	db	48	;'0'
  3093  00EF15  30                 	db	48	;'0'
  3094  00EF16  30                 	db	48	;'0'
  3095  00EF17  30                 	db	48	;'0'
  3096  00EF18  25                 	db	37
  3097  00EF19  58                 	db	88	;'X'
  3098  00EF1A  29                 	db	41
  3099  00EF1B  3A                 	db	58	;':'
  3100  00EF1C  20                 	db	32
  3101  00EF1D  30                 	db	48	;'0'
  3102  00EF1E  78                 	db	120	;'x'
  3103  00EF1F  25                 	db	37
  3104  00EF20  30                 	db	48	;'0'
  3105  00EF21  34                 	db	52	;'4'
  3106  00EF22  58                 	db	88	;'X'
  3107  00EF23  0A                 	db	10
  3108  00EF24  0D                 	db	13
  3109  00EF25  00                 	db	0
  3110  00EF26                     STR_285:
  3111  00EF26  20                 	db	32
  3112  00EF27  20                 	db	32
  3113  00EF28  20                 	db	32
  3114  00EF29  20                 	db	32
  3115  00EF2A  20                 	db	32
  3116  00EF2B  20                 	db	32
  3117  00EF2C  20                 	db	32
  3118  00EF2D  20                 	db	32
  3119  00EF2E  2B                 	db	43
  3120  00EF2F  35                 	db	53	;'5'
  3121  00EF30  56                 	db	86	;'V'
  3122  00EF31  20                 	db	32
  3123  00EF32  43                 	db	67	;'C'
  3124  00EF33  6F                 	db	111	;'o'
  3125  00EF34  6E                 	db	110	;'n'
  3126  00EF35  76                 	db	118	;'v'
  3127  00EF36  65                 	db	101	;'e'
  3128  00EF37  72                 	db	114	;'r'
  3129  00EF38  74                 	db	116	;'t'
  3130  00EF39  65                 	db	101	;'e'
  3131  00EF3A  72                 	db	114	;'r'
  3132  00EF3B  20                 	db	32
  3133  00EF3C  54                 	db	84	;'T'
  3134  00EF3D  65                 	db	101	;'e'
  3135  00EF3E  6D                 	db	109	;'m'
  3136  00EF3F  70                 	db	112	;'p'
  3137  00EF40  65                 	db	101	;'e'
  3138  00EF41  72                 	db	114	;'r'
  3139  00EF42  61                 	db	97	;'a'
  3140  00EF43  74                 	db	116	;'t'
  3141  00EF44  75                 	db	117	;'u'
  3142  00EF45  72                 	db	114	;'r'
  3143  00EF46  65                 	db	101	;'e'
  3144  00EF47  20                 	db	32
  3145  00EF48  6D                 	db	109	;'m'
  3146  00EF49  65                 	db	101	;'e'
  3147  00EF4A  61                 	db	97	;'a'
  3148  00EF4B  73                 	db	115	;'s'
  3149  00EF4C  75                 	db	117	;'u'
  3150  00EF4D  72                 	db	114	;'r'
  3151  00EF4E  65                 	db	101	;'e'
  3152  00EF4F  64                 	db	100	;'d'
  3153  00EF50  20                 	db	32
  3154  00EF51  61                 	db	97	;'a'
  3155  00EF52  73                 	db	115	;'s'
  3156  00EF53  20                 	db	32
  3157  00EF54  25                 	db	37
  3158  00EF55  2B                 	db	43
  3159  00EF56  2E                 	db	46
  3160  00EF57  33                 	db	51	;'3'
  3161  00EF58  66                 	db	102	;'f'
  3162  00EF59  20                 	db	32
  3163  00EF5A  43                 	db	67	;'C'
  3164  00EF5B  1B                 	db	27
  3165  00EF5C  5B                 	db	91	;'['
  3166  00EF5D  4B                 	db	75	;'K'
  3167  00EF5E  0A                 	db	10
  3168  00EF5F  0D                 	db	13
  3169  00EF60  00                 	db	0
  3170  00EF61                     STR_286:
  3171  00EF61  20                 	db	32
  3172  00EF62  20                 	db	32
  3173  00EF63  20                 	db	32
  3174  00EF64  20                 	db	32
  3175  00EF65  20                 	db	32
  3176  00EF66  20                 	db	32
  3177  00EF67  20                 	db	32
  3178  00EF68  20                 	db	32
  3179  00EF69  41                 	db	65	;'A'
  3180  00EF6A  6D                 	db	109	;'m'
  3181  00EF6B  62                 	db	98	;'b'
  3182  00EF6C  69                 	db	105	;'i'
  3183  00EF6D  65                 	db	101	;'e'
  3184  00EF6E  6E                 	db	110	;'n'
  3185  00EF6F  74                 	db	116	;'t'
  3186  00EF70  20                 	db	32
  3187  00EF71  54                 	db	84	;'T'
  3188  00EF72  65                 	db	101	;'e'
  3189  00EF73  6D                 	db	109	;'m'
  3190  00EF74  70                 	db	112	;'p'
  3191  00EF75  65                 	db	101	;'e'
  3192  00EF76  72                 	db	114	;'r'
  3193  00EF77  61                 	db	97	;'a'
  3194  00EF78  74                 	db	116	;'t'
  3195  00EF79  75                 	db	117	;'u'
  3196  00EF7A  72                 	db	114	;'r'
  3197  00EF7B  65                 	db	101	;'e'
  3198  00EF7C  20                 	db	32
  3199  00EF7D  6D                 	db	109	;'m'
  3200  00EF7E  65                 	db	101	;'e'
  3201  00EF7F  61                 	db	97	;'a'
  3202  00EF80  73                 	db	115	;'s'
  3203  00EF81  75                 	db	117	;'u'
  3204  00EF82  72                 	db	114	;'r'
  3205  00EF83  65                 	db	101	;'e'
  3206  00EF84  64                 	db	100	;'d'
  3207  00EF85  20                 	db	32
  3208  00EF86  61                 	db	97	;'a'
  3209  00EF87  73                 	db	115	;'s'
  3210  00EF88  20                 	db	32
  3211  00EF89  25                 	db	37
  3212  00EF8A  2B                 	db	43
  3213  00EF8B  2E                 	db	46
  3214  00EF8C  33                 	db	51	;'3'
  3215  00EF8D  66                 	db	102	;'f'
  3216  00EF8E  20                 	db	32
  3217  00EF8F  43                 	db	67	;'C'
  3218  00EF90  1B                 	db	27
  3219  00EF91  5B                 	db	91	;'['
  3220  00EF92  4B                 	db	75	;'K'
  3221  00EF93  0A                 	db	10
  3222  00EF94  0D                 	db	13
  3223  00EF95  1B                 	db	27
  3224  00EF96  5B                 	db	91	;'['
  3225  00EF97  4B                 	db	75	;'K'
  3226  00EF98  0A                 	db	10
  3227  00EF99  0D                 	db	13
  3228  00EF9A  00                 	db	0
  3229  00EF9B                     STR_261:
  3230  00EF9B  20                 	db	32
  3231  00EF9C  20                 	db	32
  3232  00EF9D  20                 	db	32
  3233  00EF9E  20                 	db	32
  3234  00EF9F  51                 	db	81	;'Q'
  3235  00EFA0  49                 	db	73	;'I'
  3236  00EFA1  20                 	db	32
  3237  00EFA2  77                 	db	119	;'w'
  3238  00EFA3  69                 	db	105	;'i'
  3239  00EFA4  72                 	db	114	;'r'
  3240  00EFA5  65                 	db	101	;'e'
  3241  00EFA6  6C                 	db	108	;'l'
  3242  00EFA7  65                 	db	101	;'e'
  3243  00EFA8  73                 	db	115	;'s'
  3244  00EFA9  73                 	db	115	;'s'
  3245  00EFAA  20                 	db	32
  3246  00EFAB  70                 	db	112	;'p'
  3247  00EFAC  6F                 	db	111	;'o'
  3248  00EFAD  77                 	db	119	;'w'
  3249  00EFAE  65                 	db	101	;'e'
  3250  00EFAF  72                 	db	114	;'r'
  3251  00EFB0  20                 	db	32
  3252  00EFB1  63                 	db	99	;'c'
  3253  00EFB2  6F                 	db	111	;'o'
  3254  00EFB3  6E                 	db	110	;'n'
  3255  00EFB4  76                 	db	118	;'v'
  3256  00EFB5  65                 	db	101	;'e'
  3257  00EFB6  72                 	db	114	;'r'
  3258  00EFB7  74                 	db	116	;'t'
  3259  00EFB8  65                 	db	101	;'e'
  3260  00EFB9  72                 	db	114	;'r'
  3261  00EFBA  20                 	db	32
  3262  00EFBB  69                 	db	105	;'i'
  3263  00EFBC  73                 	db	115	;'s'
  3264  00EFBD  20                 	db	32
  3265  00EFBE  63                 	db	99	;'c'
  3266  00EFBF  75                 	db	117	;'u'
  3267  00EFC0  72                 	db	114	;'r'
  3268  00EFC1  72                 	db	114	;'r'
  3269  00EFC2  65                 	db	101	;'e'
  3270  00EFC3  6E                 	db	110	;'n'
  3271  00EFC4  74                 	db	116	;'t'
  3272  00EFC5  6C                 	db	108	;'l'
  3273  00EFC6  79                 	db	121	;'y'
  3274  00EFC7  20                 	db	32
  3275  00EFC8  25                 	db	37
  3276  00EFC9  73                 	db	115	;'s'
  3277  00EFCA  1B                 	db	27
  3278  00EFCB  5B                 	db	91	;'['
  3279  00EFCC  4B                 	db	75	;'K'
  3280  00EFCD  0A                 	db	10
  3281  00EFCE  0D                 	db	13
  3282  00EFCF  1B                 	db	27
  3283  00EFD0  5B                 	db	91	;'['
  3284  00EFD1  4B                 	db	75	;'K'
  3285  00EFD2  0A                 	db	10
  3286  00EFD3  0D                 	db	13
  3287  00EFD4  00                 	db	0
  3288  00EFD5                     STR_284:
  3289  00EFD5  20                 	db	32
  3290  00EFD6  20                 	db	32
  3291  00EFD7  20                 	db	32
  3292  00EFD8  20                 	db	32
  3293  00EFD9  20                 	db	32
  3294  00EFDA  20                 	db	32
  3295  00EFDB  20                 	db	32
  3296  00EFDC  20                 	db	32
  3297  00EFDD  51                 	db	81	;'Q'
  3298  00EFDE  49                 	db	73	;'I'
  3299  00EFDF  20                 	db	32
  3300  00EFE0  43                 	db	67	;'C'
  3301  00EFE1  6F                 	db	111	;'o'
  3302  00EFE2  6E                 	db	110	;'n'
  3303  00EFE3  76                 	db	118	;'v'
  3304  00EFE4  65                 	db	101	;'e'
  3305  00EFE5  72                 	db	114	;'r'
  3306  00EFE6  74                 	db	116	;'t'
  3307  00EFE7  65                 	db	101	;'e'
  3308  00EFE8  72                 	db	114	;'r'
  3309  00EFE9  20                 	db	32
  3310  00EFEA  54                 	db	84	;'T'
  3311  00EFEB  65                 	db	101	;'e'
  3312  00EFEC  6D                 	db	109	;'m'
  3313  00EFED  70                 	db	112	;'p'
  3314  00EFEE  65                 	db	101	;'e'
  3315  00EFEF  72                 	db	114	;'r'
  3316  00EFF0  61                 	db	97	;'a'
  3317  00EFF1  74                 	db	116	;'t'
  3318  00EFF2  75                 	db	117	;'u'
  3319  00EFF3  72                 	db	114	;'r'
  3320  00EFF4  65                 	db	101	;'e'
  3321  00EFF5  20                 	db	32
  3322  00EFF6  6D                 	db	109	;'m'
  3323  00EFF7  65                 	db	101	;'e'
  3324  00EFF8  61                 	db	97	;'a'
  3325  00EFF9  73                 	db	115	;'s'
  3326  00EFFA  75                 	db	117	;'u'
  3327  00EFFB  72                 	db	114	;'r'
  3328  00EFFC  65                 	db	101	;'e'
  3329  00EFFD  64                 	db	100	;'d'
  3330  00EFFE  20                 	db	32
  3331  00EFFF  61                 	db	97	;'a'
  3332  00F000  73                 	db	115	;'s'
  3333  00F001  20                 	db	32
  3334  00F002  25                 	db	37
  3335  00F003  2B                 	db	43
  3336  00F004  2E                 	db	46
  3337  00F005  33                 	db	51	;'3'
  3338  00F006  66                 	db	102	;'f'
  3339  00F007  20                 	db	32
  3340  00F008  43                 	db	67	;'C'
  3341  00F009  1B                 	db	27
  3342  00F00A  5B                 	db	91	;'['
  3343  00F00B  4B                 	db	75	;'K'
  3344  00F00C  0A                 	db	10
  3345  00F00D  0D                 	db	13
  3346  00F00E  00                 	db	0
  3347  00F00F                     STR_5:
  3348  00F00F  0A                 	db	10
  3349  00F010  0D                 	db	13
  3350  00F011  48                 	db	72	;'H'
  3351  00F012  65                 	db	101	;'e'
  3352  00F013  6C                 	db	108	;'l'
  3353  00F014  70                 	db	112	;'p'
  3354  00F015  20                 	db	32
  3355  00F016  6D                 	db	109	;'m'
  3356  00F017  65                 	db	101	;'e'
  3357  00F018  73                 	db	115	;'s'
  3358  00F019  73                 	db	115	;'s'
  3359  00F01A  61                 	db	97	;'a'
  3360  00F01B  67                 	db	103	;'g'
  3361  00F01C  65                 	db	101	;'e'
  3362  00F01D  73                 	db	115	;'s'
  3363  00F01E  20                 	db	32
  3364  00F01F  61                 	db	97	;'a'
  3365  00F020  6E                 	db	110	;'n'
  3366  00F021  64                 	db	100	;'d'
  3367  00F022  20                 	db	32
  3368  00F023  6E                 	db	110	;'n'
  3369  00F024  65                 	db	101	;'e'
  3370  00F025  75                 	db	117	;'u'
  3371  00F026  74                 	db	116	;'t'
  3372  00F027  72                 	db	114	;'r'
  3373  00F028  61                 	db	97	;'a'
  3374  00F029  6C                 	db	108	;'l'
  3375  00F02A  20                 	db	32
  3376  00F02B  72                 	db	114	;'r'
  3377  00F02C  65                 	db	101	;'e'
  3378  00F02D  73                 	db	115	;'s'
  3379  00F02E  70                 	db	112	;'p'
  3380  00F02F  6F                 	db	111	;'o'
  3381  00F030  6E                 	db	110	;'n'
  3382  00F031  73                 	db	115	;'s'
  3383  00F032  65                 	db	101	;'e'
  3384  00F033  73                 	db	115	;'s'
  3385  00F034  20                 	db	32
  3386  00F035  61                 	db	97	;'a'
  3387  00F036  70                 	db	112	;'p'
  3388  00F037  70                 	db	112	;'p'
  3389  00F038  65                 	db	101	;'e'
  3390  00F039  61                 	db	97	;'a'
  3391  00F03A  72                 	db	114	;'r'
  3392  00F03B  20                 	db	32
  3393  00F03C  69                 	db	105	;'i'
  3394  00F03D  6E                 	db	110	;'n'
  3395  00F03E  20                 	db	32
  3396  00F03F  79                 	db	121	;'y'
  3397  00F040  65                 	db	101	;'e'
  3398  00F041  6C                 	db	108	;'l'
  3399  00F042  6C                 	db	108	;'l'
  3400  00F043  6F                 	db	111	;'o'
  3401  00F044  77                 	db	119	;'w'
  3402  00F045  0A                 	db	10
  3403  00F046  0D                 	db	13
  3404  00F047  00                 	db	0
  3405  00F048                     STR_210:
  3406  00F048  20                 	db	32
  3407  00F049  20                 	db	32
  3408  00F04A  20                 	db	32
  3409  00F04B  20                 	db	32
  3410  00F04C  54                 	db	84	;'T'
  3411  00F04D  68                 	db	104	;'h'
  3412  00F04E  65                 	db	101	;'e'
  3413  00F04F  20                 	db	32
  3414  00F050  63                 	db	99	;'c'
  3415  00F051  61                 	db	97	;'a'
  3416  00F052  75                 	db	117	;'u'
  3417  00F053  73                 	db	115	;'s'
  3418  00F054  65                 	db	101	;'e'
  3419  00F055  20                 	db	32
  3420  00F056  6F                 	db	111	;'o'
  3421  00F057  66                 	db	102	;'f'
  3422  00F058  20                 	db	32
  3423  00F059  74                 	db	116	;'t'
  3424  00F05A  68                 	db	104	;'h'
  3425  00F05B  65                 	db	101	;'e'
  3426  00F05C  20                 	db	32
  3427  00F05D  6D                 	db	109	;'m'
  3428  00F05E  6F                 	db	111	;'o'
  3429  00F05F  73                 	db	115	;'s'
  3430  00F060  74                 	db	116	;'t'
  3431  00F061  20                 	db	32
  3432  00F062  72                 	db	114	;'r'
  3433  00F063  65                 	db	101	;'e'
  3434  00F064  63                 	db	99	;'c'
  3435  00F065  65                 	db	101	;'e'
  3436  00F066  6E                 	db	110	;'n'
  3437  00F067  74                 	db	116	;'t'
  3438  00F068  20                 	db	32
  3439  00F069  64                 	db	100	;'d'
  3440  00F06A  65                 	db	101	;'e'
  3441  00F06B  76                 	db	118	;'v'
  3442  00F06C  69                 	db	105	;'i'
  3443  00F06D  63                 	db	99	;'c'
  3444  00F06E  65                 	db	101	;'e'
  3445  00F06F  20                 	db	32
  3446  00F070  72                 	db	114	;'r'
  3447  00F071  65                 	db	101	;'e'
  3448  00F072  73                 	db	115	;'s'
  3449  00F073  65                 	db	101	;'e'
  3450  00F074  74                 	db	116	;'t'
  3451  00F075  20                 	db	32
  3452  00F076  77                 	db	119	;'w'
  3453  00F077  61                 	db	97	;'a'
  3454  00F078  73                 	db	115	;'s'
  3455  00F079  3A                 	db	58	;':'
  3456  00F07A  20                 	db	32
  3457  00F07B  25                 	db	37
  3458  00F07C  73                 	db	115	;'s'
  3459  00F07D  0A                 	db	10
  3460  00F07E  0D                 	db	13
  3461  00F07F  00                 	db	0
  3462  00F080                     STR_268:
  3463  00F080  20                 	db	32
  3464  00F081  20                 	db	32
  3465  00F082  20                 	db	32
  3466  00F083  20                 	db	32
  3467  00F084  20                 	db	32
  3468  00F085  20                 	db	32
  3469  00F086  20                 	db	32
  3470  00F087  20                 	db	32
  3471  00F088  2B                 	db	43
  3472  00F089  31                 	db	49	;'1'
  3473  00F08A  32                 	db	50	;'2'
  3474  00F08B  56                 	db	86	;'V'
  3475  00F08C  20                 	db	32
  3476  00F08D  69                 	db	105	;'i'
  3477  00F08E  6E                 	db	110	;'n'
  3478  00F08F  70                 	db	112	;'p'
  3479  00F090  75                 	db	117	;'u'
  3480  00F091  74                 	db	116	;'t'
  3481  00F092  20                 	db	32
  3482  00F093  63                 	db	99	;'c'
  3483  00F094  75                 	db	117	;'u'
  3484  00F095  72                 	db	114	;'r'
  3485  00F096  72                 	db	114	;'r'
  3486  00F097  65                 	db	101	;'e'
  3487  00F098  6E                 	db	110	;'n'
  3488  00F099  74                 	db	116	;'t'
  3489  00F09A  20                 	db	32
  3490  00F09B  6D                 	db	109	;'m'
  3491  00F09C  65                 	db	101	;'e'
  3492  00F09D  61                 	db	97	;'a'
  3493  00F09E  73                 	db	115	;'s'
  3494  00F09F  75                 	db	117	;'u'
  3495  00F0A0  72                 	db	114	;'r'
  3496  00F0A1  65                 	db	101	;'e'
  3497  00F0A2  64                 	db	100	;'d'
  3498  00F0A3  20                 	db	32
  3499  00F0A4  61                 	db	97	;'a'
  3500  00F0A5  73                 	db	115	;'s'
  3501  00F0A6  20                 	db	32
  3502  00F0A7  25                 	db	37
  3503  00F0A8  2B                 	db	43
  3504  00F0A9  2E                 	db	46
  3505  00F0AA  33                 	db	51	;'3'
  3506  00F0AB  66                 	db	102	;'f'
  3507  00F0AC  20                 	db	32
  3508  00F0AD  41                 	db	65	;'A'
  3509  00F0AE  6D                 	db	109	;'m'
  3510  00F0AF  70                 	db	112	;'p'
  3511  00F0B0  73                 	db	115	;'s'
  3512  00F0B1  1B                 	db	27
  3513  00F0B2  5B                 	db	91	;'['
  3514  00F0B3  4B                 	db	75	;'K'
  3515  00F0B4  0A                 	db	10
  3516  00F0B5  0D                 	db	13
  3517  00F0B6  00                 	db	0
  3518  00F0B7                     STR_262:
  3519  00F0B7  20                 	db	32
  3520  00F0B8  20                 	db	32
  3521  00F0B9  20                 	db	32
  3522  00F0BA  20                 	db	32
  3523  00F0BB  53                 	db	83	;'S'
  3524  00F0BC  79                 	db	121	;'y'
  3525  00F0BD  73                 	db	115	;'s'
  3526  00F0BE  74                 	db	116	;'t'
  3527  00F0BF  65                 	db	101	;'e'
  3528  00F0C0  6D                 	db	109	;'m'
  3529  00F0C1  20                 	db	32
  3530  00F0C2  68                 	db	104	;'h'
  3531  00F0C3  61                 	db	97	;'a'
  3532  00F0C4  73                 	db	115	;'s'
  3533  00F0C5  20                 	db	32
  3534  00F0C6  62                 	db	98	;'b'
  3535  00F0C7  65                 	db	101	;'e'
  3536  00F0C8  65                 	db	101	;'e'
  3537  00F0C9  6E                 	db	110	;'n'
  3538  00F0CA  20                 	db	32
  3539  00F0CB  63                 	db	99	;'c'
  3540  00F0CC  68                 	db	104	;'h'
  3541  00F0CD  61                 	db	97	;'a'
  3542  00F0CE  72                 	db	114	;'r'
  3543  00F0CF  67                 	db	103	;'g'
  3544  00F0D0  69                 	db	105	;'i'
  3545  00F0D1  6E                 	db	110	;'n'
  3546  00F0D2  67                 	db	103	;'g'
  3547  00F0D3  20                 	db	32
  3548  00F0D4  61                 	db	97	;'a'
  3549  00F0D5  20                 	db	32
  3550  00F0D6  70                 	db	112	;'p'
  3551  00F0D7  68                 	db	104	;'h'
  3552  00F0D8  6F                 	db	111	;'o'
  3553  00F0D9  6E                 	db	110	;'n'
  3554  00F0DA  65                 	db	101	;'e'
  3555  00F0DB  20                 	db	32
  3556  00F0DC  66                 	db	102	;'f'
  3557  00F0DD  6F                 	db	111	;'o'
  3558  00F0DE  72                 	db	114	;'r'
  3559  00F0DF  20                 	db	32
  3560  00F0E0  25                 	db	37
  3561  00F0E1  73                 	db	115	;'s'
  3562  00F0E2  1B                 	db	27
  3563  00F0E3  5B                 	db	91	;'['
  3564  00F0E4  4B                 	db	75	;'K'
  3565  00F0E5  0A                 	db	10
  3566  00F0E6  0D                 	db	13
  3567  00F0E7  1B                 	db	27
  3568  00F0E8  5B                 	db	91	;'['
  3569  00F0E9  4B                 	db	75	;'K'
  3570  00F0EA  0A                 	db	10
  3571  00F0EB  0D                 	db	13
  3572  00F0EC  00                 	db	0
  3573  00F0ED                     STR_198:
  3574  00F0ED  51                 	db	81	;'Q'
  3575  00F0EE  49                 	db	73	;'I'
  3576  00F0EF  20                 	db	32
  3577  00F0F0  43                 	db	67	;'C'
  3578  00F0F1  68                 	db	104	;'h'
  3579  00F0F2  61                 	db	97	;'a'
  3580  00F0F3  72                 	db	114	;'r'
  3581  00F0F4  67                 	db	103	;'g'
  3582  00F0F5  65                 	db	101	;'e'
  3583  00F0F6  72                 	db	114	;'r'
  3584  00F0F7  20                 	db	32
  3585  00F0F8  77                 	db	119	;'w'
  3586  00F0F9  69                 	db	105	;'i'
  3587  00F0FA  74                 	db	116	;'t'
  3588  00F0FB  68                 	db	104	;'h'
  3589  00F0FC  20                 	db	32
  3590  00F0FD  44                 	db	68	;'D'
  3591  00F0FE  69                 	db	105	;'i'
  3592  00F0FF  67                 	db	103	;'g'
  3593  00F100  69                 	db	105	;'i'
  3594  00F101  74                 	db	116	;'t'
  3595  00F102  61                 	db	97	;'a'
  3596  00F103  6C                 	db	108	;'l'
  3597  00F104  20                 	db	32
  3598  00F105  4D                 	db	77	;'M'
  3599  00F106  6F                 	db	111	;'o'
  3600  00F107  6E                 	db	110	;'n'
  3601  00F108  69                 	db	105	;'i'
  3602  00F109  74                 	db	116	;'t'
  3603  00F10A  6F                 	db	111	;'o'
  3604  00F10B  72                 	db	114	;'r'
  3605  00F10C  69                 	db	105	;'i'
  3606  00F10D  6E                 	db	110	;'n'
  3607  00F10E  67                 	db	103	;'g'
  3608  00F10F  2C                 	db	44
  3609  00F110  20                 	db	32
  3610  00F111  62                 	db	98	;'b'
  3611  00F112  79                 	db	121	;'y'
  3612  00F113  20                 	db	32
  3613  00F114  44                 	db	68	;'D'
  3614  00F115  72                 	db	114	;'r'
  3615  00F116  65                 	db	101	;'e'
  3616  00F117  77                 	db	119	;'w'
  3617  00F118  20                 	db	32
  3618  00F119  4D                 	db	77	;'M'
  3619  00F11A  61                 	db	97	;'a'
  3620  00F11B  61                 	db	97	;'a'
  3621  00F11C  74                 	db	116	;'t'
  3622  00F11D  6D                 	db	109	;'m'
  3623  00F11E  61                 	db	97	;'a'
  3624  00F11F  6E                 	db	110	;'n'
  3625  00F120  0A                 	db	10
  3626  00F121  0D                 	db	13
  3627  00F122  00                 	db	0
  3628  00F123                     STR_212:
  3629  00F123  20                 	db	32
  3630  00F124  20                 	db	32
  3631  00F125  20                 	db	32
  3632  00F126  20                 	db	32
  3633  00F127  44                 	db	68	;'D'
  3634  00F128  65                 	db	101	;'e'
  3635  00F129  76                 	db	118	;'v'
  3636  00F12A  69                 	db	105	;'i'
  3637  00F12B  63                 	db	99	;'c'
  3638  00F12C  65                 	db	101	;'e'
  3639  00F12D  20                 	db	32
  3640  00F12E  6F                 	db	111	;'o'
  3641  00F12F  6E                 	db	110	;'n'
  3642  00F130  20                 	db	32
  3643  00F131  74                 	db	116	;'t'
  3644  00F132  69                 	db	105	;'i'
  3645  00F133  6D                 	db	109	;'m'
  3646  00F134  65                 	db	101	;'e'
  3647  00F135  20                 	db	32
  3648  00F136  73                 	db	115	;'s'
  3649  00F137  69                 	db	105	;'i'
  3650  00F138  6E                 	db	110	;'n'
  3651  00F139  63                 	db	99	;'c'
  3652  00F13A  65                 	db	101	;'e'
  3653  00F13B  20                 	db	32
  3654  00F13C  6C                 	db	108	;'l'
  3655  00F13D  61                 	db	97	;'a'
  3656  00F13E  73                 	db	115	;'s'
  3657  00F13F  74                 	db	116	;'t'
  3658  00F140  20                 	db	32
  3659  00F141  72                 	db	114	;'r'
  3660  00F142  65                 	db	101	;'e'
  3661  00F143  73                 	db	115	;'s'
  3662  00F144  65                 	db	101	;'e'
  3663  00F145  74                 	db	116	;'t'
  3664  00F146  20                 	db	32
  3665  00F147  63                 	db	99	;'c'
  3666  00F148  6F                 	db	111	;'o'
  3667  00F149  6E                 	db	110	;'n'
  3668  00F14A  64                 	db	100	;'d'
  3669  00F14B  69                 	db	105	;'i'
  3670  00F14C  74                 	db	116	;'t'
  3671  00F14D  69                 	db	105	;'i'
  3672  00F14E  6F                 	db	111	;'o'
  3673  00F14F  6E                 	db	110	;'n'
  3674  00F150  20                 	db	32
  3675  00F151  69                 	db	105	;'i'
  3676  00F152  73                 	db	115	;'s'
  3677  00F153  20                 	db	32
  3678  00F154  25                 	db	37
  3679  00F155  73                 	db	115	;'s'
  3680  00F156  0A                 	db	10
  3681  00F157  0D                 	db	13
  3682  00F158  00                 	db	0
  3683  00F159                     STR_273:
  3684  00F159  20                 	db	32
  3685  00F15A  20                 	db	32
  3686  00F15B  20                 	db	32
  3687  00F15C  20                 	db	32
  3688  00F15D  53                 	db	83	;'S'
  3689  00F15E  79                 	db	121	;'y'
  3690  00F15F  73                 	db	115	;'s'
  3691  00F160  74                 	db	116	;'t'
  3692  00F161  65                 	db	101	;'e'
  3693  00F162  6D                 	db	109	;'m'
  3694  00F163  20                 	db	32
  3695  00F164  45                 	db	69	;'E'
  3696  00F165  66                 	db	102	;'f'
  3697  00F166  66                 	db	102	;'f'
  3698  00F167  69                 	db	105	;'i'
  3699  00F168  63                 	db	99	;'c'
  3700  00F169  69                 	db	105	;'i'
  3701  00F16A  65                 	db	101	;'e'
  3702  00F16B  6E                 	db	110	;'n'
  3703  00F16C  63                 	db	99	;'c'
  3704  00F16D  79                 	db	121	;'y'
  3705  00F16E  20                 	db	32
  3706  00F16F  63                 	db	99	;'c'
  3707  00F170  61                 	db	97	;'a'
  3708  00F171  6C                 	db	108	;'l'
  3709  00F172  63                 	db	99	;'c'
  3710  00F173  75                 	db	117	;'u'
  3711  00F174  6C                 	db	108	;'l'
  3712  00F175  61                 	db	97	;'a'
  3713  00F176  74                 	db	116	;'t'
  3714  00F177  65                 	db	101	;'e'
  3715  00F178  64                 	db	100	;'d'
  3716  00F179  20                 	db	32
  3717  00F17A  61                 	db	97	;'a'
  3718  00F17B  73                 	db	115	;'s'
  3719  00F17C  20                 	db	32
  3720  00F17D  25                 	db	37
  3721  00F17E  2E                 	db	46
  3722  00F17F  33                 	db	51	;'3'
  3723  00F180  66                 	db	102	;'f'
  3724  00F181  25                 	db	37
  3725  00F182  25                 	db	37
  3726  00F183  1B                 	db	27
  3727  00F184  5B                 	db	91	;'['
  3728  00F185  4B                 	db	75	;'K'
  3729  00F186  0A                 	db	10
  3730  00F187  0D                 	db	13
  3731  00F188  1B                 	db	27
  3732  00F189  5B                 	db	91	;'['
  3733  00F18A  4B                 	db	75	;'K'
  3734  00F18B  0A                 	db	10
  3735  00F18C  0D                 	db	13
  3736  00F18D  00                 	db	0
  3737  00F18E                     STR_246:
  3738  00F18E  20                 	db	32
  3739  00F18F  20                 	db	32
  3740  00F190  20                 	db	32
  3741  00F191  20                 	db	32
  3742  00F192  43                 	db	67	;'C'
  3743  00F193  61                 	db	97	;'a'
  3744  00F194  6C                 	db	108	;'l'
  3745  00F195  6C                 	db	108	;'l'
  3746  00F196  20                 	db	32
  3747  00F197  27                 	db	39
  3748  00F198  43                 	db	67	;'C'
  3749  00F199  6C                 	db	108	;'l'
  3750  00F19A  65                 	db	101	;'e'
  3751  00F19B  61                 	db	97	;'a'
  3752  00F19C  72                 	db	114	;'r'
  3753  00F19D  20                 	db	32
  3754  00F19E  41                 	db	65	;'A'
  3755  00F19F  44                 	db	68	;'D'
  3756  00F1A0  43                 	db	67	;'C'
  3757  00F1A1  20                 	db	32
  3758  00F1A2  45                 	db	69	;'E'
  3759  00F1A3  72                 	db	114	;'r'
  3760  00F1A4  72                 	db	114	;'r'
  3761  00F1A5  6F                 	db	111	;'o'
  3762  00F1A6  72                 	db	114	;'r'
  3763  00F1A7  73                 	db	115	;'s'
  3764  00F1A8  27                 	db	39
  3765  00F1A9  20                 	db	32
  3766  00F1AA  74                 	db	116	;'t'
  3767  00F1AB  6F                 	db	111	;'o'
  3768  00F1AC  20                 	db	32
  3769  00F1AD  63                 	db	99	;'c'
  3770  00F1AE  6C                 	db	108	;'l'
  3771  00F1AF  65                 	db	101	;'e'
  3772  00F1B0  61                 	db	97	;'a'
  3773  00F1B1  72                 	db	114	;'r'
  3774  00F1B2  20                 	db	32
  3775  00F1B3  41                 	db	65	;'A'
  3776  00F1B4  44                 	db	68	;'D'
  3777  00F1B5  43                 	db	67	;'C'
  3778  00F1B6  20                 	db	32
  3779  00F1B7  65                 	db	101	;'e'
  3780  00F1B8  72                 	db	114	;'r'
  3781  00F1B9  72                 	db	114	;'r'
  3782  00F1BA  6F                 	db	111	;'o'
  3783  00F1BB  72                 	db	114	;'r'
  3784  00F1BC  28                 	db	40
  3785  00F1BD  73                 	db	115	;'s'
  3786  00F1BE  29                 	db	41
  3787  00F1BF  0A                 	db	10
  3788  00F1C0  0D                 	db	13
  3789  00F1C1  00                 	db	0
  3790  00F1C2                     STR_2:
  3791  00F1C2  51                 	db	81	;'Q'
  3792  00F1C3  49                 	db	73	;'I'
  3793  00F1C4  20                 	db	32
  3794  00F1C5  43                 	db	67	;'C'
  3795  00F1C6  68                 	db	104	;'h'
  3796  00F1C7  61                 	db	97	;'a'
  3797  00F1C8  72                 	db	114	;'r'
  3798  00F1C9  67                 	db	103	;'g'
  3799  00F1CA  65                 	db	101	;'e'
  3800  00F1CB  72                 	db	114	;'r'
  3801  00F1CC  20                 	db	32
  3802  00F1CD  77                 	db	119	;'w'
  3803  00F1CE  69                 	db	105	;'i'
  3804  00F1CF  74                 	db	116	;'t'
  3805  00F1D0  68                 	db	104	;'h'
  3806  00F1D1  20                 	db	32
  3807  00F1D2  44                 	db	68	;'D'
  3808  00F1D3  69                 	db	105	;'i'
  3809  00F1D4  67                 	db	103	;'g'
  3810  00F1D5  69                 	db	105	;'i'
  3811  00F1D6  74                 	db	116	;'t'
  3812  00F1D7  61                 	db	97	;'a'
  3813  00F1D8  6C                 	db	108	;'l'
  3814  00F1D9  20                 	db	32
  3815  00F1DA  4D                 	db	77	;'M'
  3816  00F1DB  6F                 	db	111	;'o'
  3817  00F1DC  6E                 	db	110	;'n'
  3818  00F1DD  69                 	db	105	;'i'
  3819  00F1DE  74                 	db	116	;'t'
  3820  00F1DF  6F                 	db	111	;'o'
  3821  00F1E0  72                 	db	114	;'r'
  3822  00F1E1  69                 	db	105	;'i'
  3823  00F1E2  6E                 	db	110	;'n'
  3824  00F1E3  67                 	db	103	;'g'
  3825  00F1E4  0A                 	db	10
  3826  00F1E5  0D                 	db	13
  3827  00F1E6  42                 	db	66	;'B'
  3828  00F1E7  6F                 	db	111	;'o'
  3829  00F1E8  6F                 	db	111	;'o'
  3830  00F1E9  74                 	db	116	;'t'
  3831  00F1EA  20                 	db	32
  3832  00F1EB  43                 	db	67	;'C'
  3833  00F1EC  6F                 	db	111	;'o'
  3834  00F1ED  6D                 	db	109	;'m'
  3835  00F1EE  70                 	db	112	;'p'
  3836  00F1EF  6C                 	db	108	;'l'
  3837  00F1F0  65                 	db	101	;'e'
  3838  00F1F1  74                 	db	116	;'t'
  3839  00F1F2  65                 	db	101	;'e'
  3840  00F1F3  0A                 	db	10
  3841  00F1F4  0D                 	db	13
  3842  00F1F5  00                 	db	0
  3843  00F1F6                     STR_266:
  3844  00F1F6  20                 	db	32
  3845  00F1F7  20                 	db	32
  3846  00F1F8  20                 	db	32
  3847  00F1F9  20                 	db	32
  3848  00F1FA  20                 	db	32
  3849  00F1FB  20                 	db	32
  3850  00F1FC  20                 	db	32
  3851  00F1FD  20                 	db	32
  3852  00F1FE  2B                 	db	43
  3853  00F1FF  35                 	db	53	;'5'
  3854  00F200  56                 	db	86	;'V'
  3855  00F201  20                 	db	32
  3856  00F202  72                 	db	114	;'r'
  3857  00F203  61                 	db	97	;'a'
  3858  00F204  69                 	db	105	;'i'
  3859  00F205  6C                 	db	108	;'l'
  3860  00F206  20                 	db	32
  3861  00F207  6D                 	db	109	;'m'
  3862  00F208  65                 	db	101	;'e'
  3863  00F209  61                 	db	97	;'a'
  3864  00F20A  73                 	db	115	;'s'
  3865  00F20B  75                 	db	117	;'u'
  3866  00F20C  72                 	db	114	;'r'
  3867  00F20D  65                 	db	101	;'e'
  3868  00F20E  64                 	db	100	;'d'
  3869  00F20F  20                 	db	32
  3870  00F210  61                 	db	97	;'a'
  3871  00F211  73                 	db	115	;'s'
  3872  00F212  20                 	db	32
  3873  00F213  25                 	db	37
  3874  00F214  2B                 	db	43
  3875  00F215  2E                 	db	46
  3876  00F216  33                 	db	51	;'3'
  3877  00F217  66                 	db	102	;'f'
  3878  00F218  20                 	db	32
  3879  00F219  56                 	db	86	;'V'
  3880  00F21A  6F                 	db	111	;'o'
  3881  00F21B  6C                 	db	108	;'l'
  3882  00F21C  74                 	db	116	;'t'
  3883  00F21D  73                 	db	115	;'s'
  3884  00F21E  1B                 	db	27
  3885  00F21F  5B                 	db	91	;'['
  3886  00F220  4B                 	db	75	;'K'
  3887  00F221  0A                 	db	10
  3888  00F222  0D                 	db	13
  3889  00F223  1B                 	db	27
  3890  00F224  5B                 	db	91	;'['
  3891  00F225  4B                 	db	75	;'K'
  3892  00F226  0A                 	db	10
  3893  00F227  0D                 	db	13
  3894  00F228  00                 	db	0
  3895  00F229                     STR_203:
  3896  00F229  20                 	db	32
  3897  00F22A  20                 	db	32
  3898  00F22B  20                 	db	32
  3899  00F22C  20                 	db	32
  3900  00F22D  44                 	db	68	;'D'
  3901  00F22E  65                 	db	101	;'e'
  3902  00F22F  76                 	db	118	;'v'
  3903  00F230  69                 	db	105	;'i'
  3904  00F231  63                 	db	99	;'c'
  3905  00F232  65                 	db	101	;'e'
  3906  00F233  20                 	db	32
  3907  00F234  49                 	db	73	;'I'
  3908  00F235  44                 	db	68	;'D'
  3909  00F236  20                 	db	32
  3910  00F237  72                 	db	114	;'r'
  3911  00F238  65                 	db	101	;'e'
  3912  00F239  74                 	db	116	;'t'
  3913  00F23A  72                 	db	114	;'r'
  3914  00F23B  69                 	db	105	;'i'
  3915  00F23C  65                 	db	101	;'e'
  3916  00F23D  76                 	db	118	;'v'
  3917  00F23E  65                 	db	101	;'e'
  3918  00F23F  64                 	db	100	;'d'
  3919  00F240  20                 	db	32
  3920  00F241  66                 	db	102	;'f'
  3921  00F242  72                 	db	114	;'r'
  3922  00F243  6F                 	db	111	;'o'
  3923  00F244  6D                 	db	109	;'m'
  3924  00F245  20                 	db	32
  3925  00F246  66                 	db	102	;'f'
  3926  00F247  6C                 	db	108	;'l'
  3927  00F248  61                 	db	97	;'a'
  3928  00F249  73                 	db	115	;'s'
  3929  00F24A  68                 	db	104	;'h'
  3930  00F24B  3A                 	db	58	;':'
  3931  00F24C  20                 	db	32
  3932  00F24D  25                 	db	37
  3933  00F24E  73                 	db	115	;'s'
  3934  00F24F  20                 	db	32
  3935  00F250  28                 	db	40
  3936  00F251  30                 	db	48	;'0'
  3937  00F252  78                 	db	120	;'x'
  3938  00F253  25                 	db	37
  3939  00F254  30                 	db	48	;'0'
  3940  00F255  34                 	db	52	;'4'
  3941  00F256  58                 	db	88	;'X'
  3942  00F257  29                 	db	41
  3943  00F258  0A                 	db	10
  3944  00F259  0D                 	db	13
  3945  00F25A  00                 	db	0
  3946  00F25B                     STR_243:
  3947  00F25B  20                 	db	32
  3948  00F25C  20                 	db	32
  3949  00F25D  20                 	db	32
  3950  00F25E  20                 	db	32
  3951  00F25F  54                 	db	84	;'T'
  3952  00F260  68                 	db	104	;'h'
  3953  00F261  65                 	db	101	;'e'
  3954  00F262  20                 	db	32
  3955  00F263  66                 	db	102	;'f'
  3956  00F264  6F                 	db	111	;'o'
  3957  00F265  6C                 	db	108	;'l'
  3958  00F266  6C                 	db	108	;'l'
  3959  00F267  6F                 	db	111	;'o'
  3960  00F268  77                 	db	119	;'w'
  3961  00F269  69                 	db	105	;'i'
  3962  00F26A  6E                 	db	110	;'n'
  3963  00F26B  67                 	db	103	;'g'
  3964  00F26C  20                 	db	32
  3965  00F26D  63                 	db	99	;'c'
  3966  00F26E  68                 	db	104	;'h'
  3967  00F26F  61                 	db	97	;'a'
  3968  00F270  6E                 	db	110	;'n'
  3969  00F271  6E                 	db	110	;'n'
  3970  00F272  65                 	db	101	;'e'
  3971  00F273  6C                 	db	108	;'l'
  3972  00F274  73                 	db	115	;'s'
  3973  00F275  20                 	db	32
  3974  00F276  63                 	db	99	;'c'
  3975  00F277  61                 	db	97	;'a'
  3976  00F278  75                 	db	117	;'u'
  3977  00F279  73                 	db	115	;'s'
  3978  00F27A  65                 	db	101	;'e'
  3979  00F27B  64                 	db	100	;'d'
  3980  00F27C  20                 	db	32
  3981  00F27D  61                 	db	97	;'a'
  3982  00F27E  6E                 	db	110	;'n'
  3983  00F27F  20                 	db	32
  3984  00F280  41                 	db	65	;'A'
  3985  00F281  44                 	db	68	;'D'
  3986  00F282  43                 	db	67	;'C'
  3987  00F283  20                 	db	32
  3988  00F284  65                 	db	101	;'e'
  3989  00F285  72                 	db	114	;'r'
  3990  00F286  72                 	db	114	;'r'
  3991  00F287  6F                 	db	111	;'o'
  3992  00F288  72                 	db	114	;'r'
  3993  00F289  3A                 	db	58	;':'
  3994  00F28A  0A                 	db	10
  3995  00F28B  0D                 	db	13
  3996  00F28C  00                 	db	0
  3997  00F28D                     STR_281:
  3998  00F28D  20                 	db	32
  3999  00F28E  20                 	db	32
  4000  00F28F  20                 	db	32
  4001  00F290  20                 	db	32
  4002  00F291  20                 	db	32
  4003  00F292  20                 	db	32
  4004  00F293  20                 	db	32
  4005  00F294  20                 	db	32
  4006  00F295  51                 	db	81	;'Q'
  4007  00F296  49                 	db	73	;'I'
  4008  00F297  20                 	db	32
  4009  00F298  43                 	db	67	;'C'
  4010  00F299  6F                 	db	111	;'o'
  4011  00F29A  6E                 	db	110	;'n'
  4012  00F29B  76                 	db	118	;'v'
  4013  00F29C  65                 	db	101	;'e'
  4014  00F29D  72                 	db	114	;'r'
  4015  00F29E  74                 	db	116	;'t'
  4016  00F29F  65                 	db	101	;'e'
  4017  00F2A0  72                 	db	114	;'r'
  4018  00F2A1  20                 	db	32
  4019  00F2A2  69                 	db	105	;'i'
  4020  00F2A3  73                 	db	115	;'s'
  4021  00F2A4  20                 	db	32
  4022  00F2A5  69                 	db	105	;'i'
  4023  00F2A6  6E                 	db	110	;'n'
  4024  00F2A7  20                 	db	32
  4025  00F2A8  42                 	db	66	;'B'
  4026  00F2A9  75                 	db	117	;'u'
  4027  00F2AA  72                 	db	114	;'r'
  4028  00F2AB  73                 	db	115	;'s'
  4029  00F2AC  74                 	db	116	;'t'
  4030  00F2AD  20                 	db	32
  4031  00F2AE  4D                 	db	77	;'M'
  4032  00F2AF  6F                 	db	111	;'o'
  4033  00F2B0  64                 	db	100	;'d'
  4034  00F2B1  65                 	db	101	;'e'
  4035  00F2B2  1B                 	db	27
  4036  00F2B3  5B                 	db	91	;'['
  4037  00F2B4  4B                 	db	75	;'K'
  4038  00F2B5  0A                 	db	10
  4039  00F2B6  0D                 	db	13
  4040  00F2B7  1B                 	db	27
  4041  00F2B8  5B                 	db	91	;'['
  4042  00F2B9  4B                 	db	75	;'K'
  4043  00F2BA  0A                 	db	10
  4044  00F2BB  0D                 	db	13
  4045  00F2BC  00                 	db	0
  4046  00F2BD                     STR_224:
  4047  00F2BD  53                 	db	83	;'S'
  4048  00F2BE  79                 	db	121	;'y'
  4049  00F2BF  73                 	db	115	;'s'
  4050  00F2C0  74                 	db	116	;'t'
  4051  00F2C1  65                 	db	101	;'e'
  4052  00F2C2  6D                 	db	109	;'m'
  4053  00F2C3  20                 	db	32
  4054  00F2C4  4D                 	db	77	;'M'
  4055  00F2C5  65                 	db	101	;'e'
  4056  00F2C6  61                 	db	97	;'a'
  4057  00F2C7  73                 	db	115	;'s'
  4058  00F2C8  75                 	db	117	;'u'
  4059  00F2C9  72                 	db	114	;'r'
  4060  00F2CA  65                 	db	101	;'e'
  4061  00F2CB  6D                 	db	109	;'m'
  4062  00F2CC  65                 	db	101	;'e'
  4063  00F2CD  6E                 	db	110	;'n'
  4064  00F2CE  74                 	db	116	;'t'
  4065  00F2CF  73                 	db	115	;'s'
  4066  00F2D0  20                 	db	32
  4067  00F2D1  61                 	db	97	;'a'
  4068  00F2D2  74                 	db	116	;'t'
  4069  00F2D3  20                 	db	32
  4070  00F2D4  74                 	db	116	;'t'
  4071  00F2D5  69                 	db	105	;'i'
  4072  00F2D6  6D                 	db	109	;'m'
  4073  00F2D7  65                 	db	101	;'e'
  4074  00F2D8  20                 	db	32
  4075  00F2D9  6F                 	db	111	;'o'
  4076  00F2DA  66                 	db	102	;'f'
  4077  00F2DB  20                 	db	32
  4078  00F2DC  63                 	db	99	;'c'
  4079  00F2DD  6F                 	db	111	;'o'
  4080  00F2DE  6D                 	db	109	;'m'
  4081  00F2DF  6D                 	db	109	;'m'
  4082  00F2E0  61                 	db	97	;'a'
  4083  00F2E1  6E                 	db	110	;'n'
  4084  00F2E2  64                 	db	100	;'d'
  4085  00F2E3  20                 	db	32
  4086  00F2E4  63                 	db	99	;'c'
  4087  00F2E5  61                 	db	97	;'a'
  4088  00F2E6  6C                 	db	108	;'l'
  4089  00F2E7  6C                 	db	108	;'l'
  4090  00F2E8  3A                 	db	58	;':'
  4091  00F2E9  0A                 	db	10
  4092  00F2EA  0D                 	db	13
  4093  00F2EB  00                 	db	0
  4094  00F2EC                     STR_290:
  4095  00F2EC  20                 	db	32
  4096  00F2ED  20                 	db	32
  4097  00F2EE  20                 	db	32
  4098  00F2EF  20                 	db	32
  4099  00F2F0  20                 	db	32
  4100  00F2F1  20                 	db	32
  4101  00F2F2  20                 	db	32
  4102  00F2F3  20                 	db	32
  4103  00F2F4  41                 	db	65	;'A'
  4104  00F2F5  56                 	db	86	;'V'
  4105  00F2F6  53                 	db	83	;'S'
  4106  00F2F7  53                 	db	83	;'S'
  4107  00F2F8  20                 	db	32
  4108  00F2F9  6D                 	db	109	;'m'
  4109  00F2FA  65                 	db	101	;'e'
  4110  00F2FB  61                 	db	97	;'a'
  4111  00F2FC  73                 	db	115	;'s'
  4112  00F2FD  75                 	db	117	;'u'
  4113  00F2FE  72                 	db	114	;'r'
  4114  00F2FF  65                 	db	101	;'e'
  4115  00F300  64                 	db	100	;'d'
  4116  00F301  20                 	db	32
  4117  00F302  61                 	db	97	;'a'
  4118  00F303  73                 	db	115	;'s'
  4119  00F304  20                 	db	32
  4120  00F305  25                 	db	37
  4121  00F306  2B                 	db	43
  4122  00F307  2E                 	db	46
  4123  00F308  33                 	db	51	;'3'
  4124  00F309  66                 	db	102	;'f'
  4125  00F30A  20                 	db	32
  4126  00F30B  56                 	db	86	;'V'
  4127  00F30C  6F                 	db	111	;'o'
  4128  00F30D  6C                 	db	108	;'l'
  4129  00F30E  74                 	db	116	;'t'
  4130  00F30F  73                 	db	115	;'s'
  4131  00F310  1B                 	db	27
  4132  00F311  5B                 	db	91	;'['
  4133  00F312  4B                 	db	75	;'K'
  4134  00F313  0A                 	db	10
  4135  00F314  0D                 	db	13
  4136  00F315  1B                 	db	27
  4137  00F316  5B                 	db	91	;'['
  4138  00F317  4B                 	db	75	;'K'
  4139  00F318  0A                 	db	10
  4140  00F319  0D                 	db	13
  4141  00F31A  00                 	db	0
  4142  00F31B                     STR_265:
  4143  00F31B  20                 	db	32
  4144  00F31C  20                 	db	32
  4145  00F31D  20                 	db	32
  4146  00F31E  20                 	db	32
  4147  00F31F  20                 	db	32
  4148  00F320  20                 	db	32
  4149  00F321  20                 	db	32
  4150  00F322  20                 	db	32
  4151  00F323  2B                 	db	43
  4152  00F324  31                 	db	49	;'1'
  4153  00F325  32                 	db	50	;'2'
  4154  00F326  56                 	db	86	;'V'
  4155  00F327  20                 	db	32
  4156  00F328  72                 	db	114	;'r'
  4157  00F329  61                 	db	97	;'a'
  4158  00F32A  69                 	db	105	;'i'
  4159  00F32B  6C                 	db	108	;'l'
  4160  00F32C  20                 	db	32
  4161  00F32D  6D                 	db	109	;'m'
  4162  00F32E  65                 	db	101	;'e'
  4163  00F32F  61                 	db	97	;'a'
  4164  00F330  73                 	db	115	;'s'
  4165  00F331  75                 	db	117	;'u'
  4166  00F332  72                 	db	114	;'r'
  4167  00F333  65                 	db	101	;'e'
  4168  00F334  64                 	db	100	;'d'
  4169  00F335  20                 	db	32
  4170  00F336  61                 	db	97	;'a'
  4171  00F337  73                 	db	115	;'s'
  4172  00F338  20                 	db	32
  4173  00F339  25                 	db	37
  4174  00F33A  2B                 	db	43
  4175  00F33B  2E                 	db	46
  4176  00F33C  33                 	db	51	;'3'
  4177  00F33D  66                 	db	102	;'f'
  4178  00F33E  20                 	db	32
  4179  00F33F  56                 	db	86	;'V'
  4180  00F340  6F                 	db	111	;'o'
  4181  00F341  6C                 	db	108	;'l'
  4182  00F342  74                 	db	116	;'t'
  4183  00F343  73                 	db	115	;'s'
  4184  00F344  1B                 	db	27
  4185  00F345  5B                 	db	91	;'['
  4186  00F346  4B                 	db	75	;'K'
  4187  00F347  0A                 	db	10
  4188  00F348  0D                 	db	13
  4189  00F349  00                 	db	0
  4190  00F34A                     STR_10:
  4191  00F34A  0A                 	db	10
  4192  00F34B  0D                 	db	13
  4193  00F34C  43                 	db	67	;'C'
  4194  00F34D  61                 	db	97	;'a'
  4195  00F34E  6C                 	db	108	;'l'
  4196  00F34F  6C                 	db	108	;'l'
  4197  00F350  20                 	db	32
  4198  00F351  27                 	db	39
  4199  00F352  48                 	db	72	;'H'
  4200  00F353  65                 	db	101	;'e'
  4201  00F354  6C                 	db	108	;'l'
  4202  00F355  70                 	db	112	;'p'
  4203  00F356  27                 	db	39
  4204  00F357  20                 	db	32
  4205  00F358  66                 	db	102	;'f'
  4206  00F359  6F                 	db	111	;'o'
  4207  00F35A  72                 	db	114	;'r'
  4208  00F35B  20                 	db	32
  4209  00F35C  6C                 	db	108	;'l'
  4210  00F35D  69                 	db	105	;'i'
  4211  00F35E  73                 	db	115	;'s'
  4212  00F35F  74                 	db	116	;'t'
  4213  00F360  20                 	db	32
  4214  00F361  6F                 	db	111	;'o'
  4215  00F362  66                 	db	102	;'f'
  4216  00F363  20                 	db	32
  4217  00F364  73                 	db	115	;'s'
  4218  00F365  75                 	db	117	;'u'
  4219  00F366  70                 	db	112	;'p'
  4220  00F367  70                 	db	112	;'p'
  4221  00F368  6F                 	db	111	;'o'
  4222  00F369  72                 	db	114	;'r'
  4223  00F36A  74                 	db	116	;'t'
  4224  00F36B  65                 	db	101	;'e'
  4225  00F36C  64                 	db	100	;'d'
  4226  00F36D  20                 	db	32
  4227  00F36E  63                 	db	99	;'c'
  4228  00F36F  6F                 	db	111	;'o'
  4229  00F370  6D                 	db	109	;'m'
  4230  00F371  6D                 	db	109	;'m'
  4231  00F372  61                 	db	97	;'a'
  4232  00F373  6E                 	db	110	;'n'
  4233  00F374  64                 	db	100	;'d'
  4234  00F375  73                 	db	115	;'s'
  4235  00F376  0A                 	db	10
  4236  00F377  0D                 	db	13
  4237  00F378  00                 	db	0
  4238  00F379                     STR_248:
  4239  00F379  20                 	db	32
  4240  00F37A  20                 	db	32
  4241  00F37B  20                 	db	32
  4242  00F37C  20                 	db	32
  4243  00F37D  54                 	db	84	;'T'
  4244  00F37E  68                 	db	104	;'h'
  4245  00F37F  65                 	db	101	;'e'
  4246  00F380  20                 	db	32
  4247  00F381  66                 	db	102	;'f'
  4248  00F382  6F                 	db	111	;'o'
  4249  00F383  6C                 	db	108	;'l'
  4250  00F384  6C                 	db	108	;'l'
  4251  00F385  6F                 	db	111	;'o'
  4252  00F386  77                 	db	119	;'w'
  4253  00F387  69                 	db	105	;'i'
  4254  00F388  6E                 	db	110	;'n'
  4255  00F389  67                 	db	103	;'g'
  4256  00F38A  20                 	db	32
  4257  00F38B  49                 	db	73	;'I'
  4258  00F38C  32                 	db	50	;'2'
  4259  00F38D  43                 	db	67	;'C'
  4260  00F38E  20                 	db	32
  4261  00F38F  45                 	db	69	;'E'
  4262  00F390  72                 	db	114	;'r'
  4263  00F391  72                 	db	114	;'r'
  4264  00F392  6F                 	db	111	;'o'
  4265  00F393  72                 	db	114	;'r'
  4266  00F394  73                 	db	115	;'s'
  4267  00F395  20                 	db	32
  4268  00F396  77                 	db	119	;'w'
  4269  00F397  65                 	db	101	;'e'
  4270  00F398  72                 	db	114	;'r'
  4271  00F399  65                 	db	101	;'e'
  4272  00F39A  20                 	db	32
  4273  00F39B  64                 	db	100	;'d'
  4274  00F39C  65                 	db	101	;'e'
  4275  00F39D  74                 	db	116	;'t'
  4276  00F39E  65                 	db	101	;'e'
  4277  00F39F  63                 	db	99	;'c'
  4278  00F3A0  74                 	db	116	;'t'
  4279  00F3A1  65                 	db	101	;'e'
  4280  00F3A2  64                 	db	100	;'d'
  4281  00F3A3  3A                 	db	58	;':'
  4282  00F3A4  0A                 	db	10
  4283  00F3A5  0D                 	db	13
  4284  00F3A6  00                 	db	0
  4285  00F3A7                     STR_8:
  4286  00F3A7  45                 	db	69	;'E'
  4287  00F3A8  72                 	db	114	;'r'
  4288  00F3A9  72                 	db	114	;'r'
  4289  00F3AA  6F                 	db	111	;'o'
  4290  00F3AB  72                 	db	114	;'r'
  4291  00F3AC  73                 	db	115	;'s'
  4292  00F3AD  20                 	db	32
  4293  00F3AE  61                 	db	97	;'a'
  4294  00F3AF  6E                 	db	110	;'n'
  4295  00F3B0  64                 	db	100	;'d'
  4296  00F3B1  20                 	db	32
  4297  00F3B2  6E                 	db	110	;'n'
  4298  00F3B3  65                 	db	101	;'e'
  4299  00F3B4  67                 	db	103	;'g'
  4300  00F3B5  61                 	db	97	;'a'
  4301  00F3B6  74                 	db	116	;'t'
  4302  00F3B7  69                 	db	105	;'i'
  4303  00F3B8  76                 	db	118	;'v'
  4304  00F3B9  65                 	db	101	;'e'
  4305  00F3BA  20                 	db	32
  4306  00F3BB  72                 	db	114	;'r'
  4307  00F3BC  65                 	db	101	;'e'
  4308  00F3BD  73                 	db	115	;'s'
  4309  00F3BE  70                 	db	112	;'p'
  4310  00F3BF  6F                 	db	111	;'o'
  4311  00F3C0  6E                 	db	110	;'n'
  4312  00F3C1  73                 	db	115	;'s'
  4313  00F3C2  65                 	db	101	;'e'
  4314  00F3C3  73                 	db	115	;'s'
  4315  00F3C4  20                 	db	32
  4316  00F3C5  61                 	db	97	;'a'
  4317  00F3C6  70                 	db	112	;'p'
  4318  00F3C7  70                 	db	112	;'p'
  4319  00F3C8  65                 	db	101	;'e'
  4320  00F3C9  61                 	db	97	;'a'
  4321  00F3CA  72                 	db	114	;'r'
  4322  00F3CB  20                 	db	32
  4323  00F3CC  69                 	db	105	;'i'
  4324  00F3CD  6E                 	db	110	;'n'
  4325  00F3CE  20                 	db	32
  4326  00F3CF  72                 	db	114	;'r'
  4327  00F3D0  65                 	db	101	;'e'
  4328  00F3D1  64                 	db	100	;'d'
  4329  00F3D2  0A                 	db	10
  4330  00F3D3  0D                 	db	13
  4331  00F3D4  00                 	db	0
  4332  00F3D5                     STR_201:
  4333  00F3D5  44                 	db	68	;'D'
  4334  00F3D6  69                 	db	105	;'i'
  4335  00F3D7  67                 	db	103	;'g'
  4336  00F3D8  69                 	db	105	;'i'
  4337  00F3D9  74                 	db	116	;'t'
  4338  00F3DA  61                 	db	97	;'a'
  4339  00F3DB  6C                 	db	108	;'l'
  4340  00F3DC  20                 	db	32
  4341  00F3DD  4D                 	db	77	;'M'
  4342  00F3DE  6F                 	db	111	;'o'
  4343  00F3DF  6E                 	db	110	;'n'
  4344  00F3E0  69                 	db	105	;'i'
  4345  00F3E1  74                 	db	116	;'t'
  4346  00F3E2  6F                 	db	111	;'o'
  4347  00F3E3  72                 	db	114	;'r'
  4348  00F3E4  69                 	db	105	;'i'
  4349  00F3E5  6E                 	db	110	;'n'
  4350  00F3E6  67                 	db	103	;'g'
  4351  00F3E7  20                 	db	32
  4352  00F3E8  4D                 	db	77	;'M'
  4353  00F3E9  69                 	db	105	;'i'
  4354  00F3EA  63                 	db	99	;'c'
  4355  00F3EB  72                 	db	114	;'r'
  4356  00F3EC  6F                 	db	111	;'o'
  4357  00F3ED  63                 	db	99	;'c'
  4358  00F3EE  6F                 	db	111	;'o'
  4359  00F3EF  6E                 	db	110	;'n'
  4360  00F3F0  74                 	db	116	;'t'
  4361  00F3F1  72                 	db	114	;'r'
  4362  00F3F2  6F                 	db	111	;'o'
  4363  00F3F3  6C                 	db	108	;'l'
  4364  00F3F4  6C                 	db	108	;'l'
  4365  00F3F5  65                 	db	101	;'e'
  4366  00F3F6  72                 	db	114	;'r'
  4367  00F3F7  20                 	db	32
  4368  00F3F8  53                 	db	83	;'S'
  4369  00F3F9  74                 	db	116	;'t'
  4370  00F3FA  61                 	db	97	;'a'
  4371  00F3FB  74                 	db	116	;'t'
  4372  00F3FC  75                 	db	117	;'u'
  4373  00F3FD  73                 	db	115	;'s'
  4374  00F3FE  3A                 	db	58	;':'
  4375  00F3FF  0A                 	db	10
  4376  00F400  0D                 	db	13
  4377  00F401  00                 	db	0
  4378  00F402                     STR_279:
  4379  00F402  20                 	db	32
  4380  00F403  20                 	db	32
  4381  00F404  20                 	db	32
  4382  00F405  20                 	db	32
  4383  00F406  20                 	db	32
  4384  00F407  20                 	db	32
  4385  00F408  20                 	db	32
  4386  00F409  20                 	db	32
  4387  00F40A  50                 	db	80	;'P'
  4388  00F40B  4F                 	db	79	;'O'
  4389  00F40C  53                 	db	83	;'S'
  4390  00F40D  35                 	db	53	;'5'
  4391  00F40E  20                 	db	32
  4392  00F40F  43                 	db	67	;'C'
  4393  00F410  6F                 	db	111	;'o'
  4394  00F411  6E                 	db	110	;'n'
  4395  00F412  76                 	db	118	;'v'
  4396  00F413  65                 	db	101	;'e'
  4397  00F414  72                 	db	114	;'r'
  4398  00F415  74                 	db	116	;'t'
  4399  00F416  65                 	db	101	;'e'
  4400  00F417  72                 	db	114	;'r'
  4401  00F418  20                 	db	32
  4402  00F419  69                 	db	105	;'i'
  4403  00F41A  73                 	db	115	;'s'
  4404  00F41B  20                 	db	32
  4405  00F41C  69                 	db	105	;'i'
  4406  00F41D  6E                 	db	110	;'n'
  4407  00F41E  20                 	db	32
  4408  00F41F  42                 	db	66	;'B'
  4409  00F420  75                 	db	117	;'u'
  4410  00F421  72                 	db	114	;'r'
  4411  00F422  73                 	db	115	;'s'
  4412  00F423  74                 	db	116	;'t'
  4413  00F424  20                 	db	32
  4414  00F425  4D                 	db	77	;'M'
  4415  00F426  6F                 	db	111	;'o'
  4416  00F427  64                 	db	100	;'d'
  4417  00F428  65                 	db	101	;'e'
  4418  00F429  1B                 	db	27
  4419  00F42A  5B                 	db	91	;'['
  4420  00F42B  4B                 	db	75	;'K'
  4421  00F42C  0A                 	db	10
  4422  00F42D  0D                 	db	13
  4423  00F42E  00                 	db	0
  4424  00F42F                     STR_3:
  4425  00F42F  43                 	db	67	;'C'
  4426  00F430  61                 	db	97	;'a'
  4427  00F431  75                 	db	117	;'u'
  4428  00F432  73                 	db	115	;'s'
  4429  00F433  65                 	db	101	;'e'
  4430  00F434  20                 	db	32
  4431  00F435  6F                 	db	111	;'o'
  4432  00F436  66                 	db	102	;'f'
  4433  00F437  20                 	db	32
  4434  00F438  6D                 	db	109	;'m'
  4435  00F439  6F                 	db	111	;'o'
  4436  00F43A  73                 	db	115	;'s'
  4437  00F43B  74                 	db	116	;'t'
  4438  00F43C  20                 	db	32
  4439  00F43D  72                 	db	114	;'r'
  4440  00F43E  65                 	db	101	;'e'
  4441  00F43F  63                 	db	99	;'c'
  4442  00F440  65                 	db	101	;'e'
  4443  00F441  6E                 	db	110	;'n'
  4444  00F442  74                 	db	116	;'t'
  4445  00F443  20                 	db	32
  4446  00F444  64                 	db	100	;'d'
  4447  00F445  65                 	db	101	;'e'
  4448  00F446  76                 	db	118	;'v'
  4449  00F447  69                 	db	105	;'i'
  4450  00F448  63                 	db	99	;'c'
  4451  00F449  65                 	db	101	;'e'
  4452  00F44A  20                 	db	32
  4453  00F44B  72                 	db	114	;'r'
  4454  00F44C  65                 	db	101	;'e'
  4455  00F44D  73                 	db	115	;'s'
  4456  00F44E  65                 	db	101	;'e'
  4457  00F44F  74                 	db	116	;'t'
  4458  00F450  20                 	db	32
  4459  00F451  77                 	db	119	;'w'
  4460  00F452  61                 	db	97	;'a'
  4461  00F453  73                 	db	115	;'s'
  4462  00F454  3A                 	db	58	;':'
  4463  00F455  20                 	db	32
  4464  00F456  25                 	db	37
  4465  00F457  73                 	db	115	;'s'
  4466  00F458  0A                 	db	10
  4467  00F459  0D                 	db	13
  4468  00F45A  00                 	db	0
  4469  00F45B                     STR_259:
  4470  00F45B  20                 	db	32
  4471  00F45C  20                 	db	32
  4472  00F45D  20                 	db	32
  4473  00F45E  20                 	db	32
  4474  00F45F  51                 	db	81	;'Q'
  4475  00F460  49                 	db	73	;'I'
  4476  00F461  20                 	db	32
  4477  00F462  43                 	db	67	;'C'
  4478  00F463  68                 	db	104	;'h'
  4479  00F464  61                 	db	97	;'a'
  4480  00F465  72                 	db	114	;'r'
  4481  00F466  67                 	db	103	;'g'
  4482  00F467  65                 	db	101	;'e'
  4483  00F468  72                 	db	114	;'r'
  4484  00F469  20                 	db	32
  4485  00F46A  69                 	db	105	;'i'
  4486  00F46B  73                 	db	115	;'s'
  4487  00F46C  20                 	db	32
  4488  00F46D  69                 	db	105	;'i'
  4489  00F46E  6E                 	db	110	;'n'
  4490  00F46F  20                 	db	32
  4491  00F470  45                 	db	69	;'E'
  4492  00F471  72                 	db	114	;'r'
  4493  00F472  72                 	db	114	;'r'
  4494  00F473  6F                 	db	111	;'o'
  4495  00F474  72                 	db	114	;'r'
  4496  00F475  20                 	db	32
  4497  00F476  53                 	db	83	;'S'
  4498  00F477  74                 	db	116	;'t'
  4499  00F478  61                 	db	97	;'a'
  4500  00F479  74                 	db	116	;'t'
  4501  00F47A  65                 	db	101	;'e'
  4502  00F47B  1B                 	db	27
  4503  00F47C  5B                 	db	91	;'['
  4504  00F47D  4B                 	db	75	;'K'
  4505  00F47E  0A                 	db	10
  4506  00F47F  0D                 	db	13
  4507  00F480  1B                 	db	27
  4508  00F481  5B                 	db	91	;'['
  4509  00F482  4B                 	db	75	;'K'
  4510  00F483  0A                 	db	10
  4511  00F484  0D                 	db	13
  4512  00F485  00                 	db	0
  4513  00F486                     STR_28:
  4514  00F486  57                 	db	87	;'W'
  4515  00F487  69                 	db	105	;'i'
  4516  00F488  6E                 	db	110	;'n'
  4517  00F489  64                 	db	100	;'d'
  4518  00F48A  6F                 	db	111	;'o'
  4519  00F48B  77                 	db	119	;'w'
  4520  00F48C  65                 	db	101	;'e'
  4521  00F48D  64                 	db	100	;'d'
  4522  00F48E  20                 	db	32
  4523  00F48F  57                 	db	87	;'W'
  4524  00F490  61                 	db	97	;'a'
  4525  00F491  74                 	db	116	;'t'
  4526  00F492  63                 	db	99	;'c'
  4527  00F493  68                 	db	104	;'h'
  4528  00F494  20                 	db	32
  4529  00F495  44                 	db	68	;'D'
  4530  00F496  6F                 	db	111	;'o'
  4531  00F497  67                 	db	103	;'g'
  4532  00F498  20                 	db	32
  4533  00F499  54                 	db	84	;'T'
  4534  00F49A  69                 	db	105	;'i'
  4535  00F49B  6D                 	db	109	;'m'
  4536  00F49C  65                 	db	101	;'e'
  4537  00F49D  72                 	db	114	;'r'
  4538  00F49E  20                 	db	32
  4539  00F49F  56                 	db	86	;'V'
  4540  00F4A0  69                 	db	105	;'i'
  4541  00F4A1  6F                 	db	111	;'o'
  4542  00F4A2  6C                 	db	108	;'l'
  4543  00F4A3  61                 	db	97	;'a'
  4544  00F4A4  74                 	db	116	;'t'
  4545  00F4A5  69                 	db	105	;'i'
  4546  00F4A6  6F                 	db	111	;'o'
  4547  00F4A7  6E                 	db	110	;'n'
  4548  00F4A8  20                 	db	32
  4549  00F4A9  52                 	db	82	;'R'
  4550  00F4AA  65                 	db	101	;'e'
  4551  00F4AB  73                 	db	115	;'s'
  4552  00F4AC  65                 	db	101	;'e'
  4553  00F4AD  74                 	db	116	;'t'
  4554  00F4AE  00                 	db	0
  4555  00F4AF                     STR_250:
  4556  00F4AF  20                 	db	32
  4557  00F4B0  20                 	db	32
  4558  00F4B1  20                 	db	32
  4559  00F4B2  20                 	db	32
  4560  00F4B3  20                 	db	32
  4561  00F4B4  20                 	db	32
  4562  00F4B5  20                 	db	32
  4563  00F4B6  20                 	db	32
  4564  00F4B7  49                 	db	73	;'I'
  4565  00F4B8  32                 	db	50	;'2'
  4566  00F4B9  43                 	db	67	;'C'
  4567  00F4BA  20                 	db	32
  4568  00F4BB  41                 	db	65	;'A'
  4569  00F4BC  6D                 	db	109	;'m'
  4570  00F4BD  62                 	db	98	;'b'
  4571  00F4BE  69                 	db	105	;'i'
  4572  00F4BF  65                 	db	101	;'e'
  4573  00F4C0  6E                 	db	110	;'n'
  4574  00F4C1  74                 	db	116	;'t'
  4575  00F4C2  20                 	db	32
  4576  00F4C3  54                 	db	84	;'T'
  4577  00F4C4  65                 	db	101	;'e'
  4578  00F4C5  6D                 	db	109	;'m'
  4579  00F4C6  70                 	db	112	;'p'
  4580  00F4C7  20                 	db	32
  4581  00F4C8  53                 	db	83	;'S'
  4582  00F4C9  65                 	db	101	;'e'
  4583  00F4CA  6E                 	db	110	;'n'
  4584  00F4CB  73                 	db	115	;'s'
  4585  00F4CC  6F                 	db	111	;'o'
  4586  00F4CD  72                 	db	114	;'r'
  4587  00F4CE  20                 	db	32
  4588  00F4CF  45                 	db	69	;'E'
  4589  00F4D0  72                 	db	114	;'r'
  4590  00F4D1  72                 	db	114	;'r'
  4591  00F4D2  6F                 	db	111	;'o'
  4592  00F4D3  72                 	db	114	;'r'
  4593  00F4D4  0A                 	db	10
  4594  00F4D5  0D                 	db	13
  4595  00F4D6  00                 	db	0
  4596  00F4D7                     STR_278:
  4597  00F4D7  20                 	db	32
  4598  00F4D8  20                 	db	32
  4599  00F4D9  20                 	db	32
  4600  00F4DA  20                 	db	32
  4601  00F4DB  53                 	db	83	;'S'
  4602  00F4DC  79                 	db	121	;'y'
  4603  00F4DD  73                 	db	115	;'s'
  4604  00F4DE  74                 	db	116	;'t'
  4605  00F4DF  65                 	db	101	;'e'
  4606  00F4E0  6D                 	db	109	;'m'
  4607  00F4E1  20                 	db	32
  4608  00F4E2  53                 	db	83	;'S'
  4609  00F4E3  77                 	db	119	;'w'
  4610  00F4E4  69                 	db	105	;'i'
  4611  00F4E5  74                 	db	116	;'t'
  4612  00F4E6  63                 	db	99	;'c'
  4613  00F4E7  68                 	db	104	;'h'
  4614  00F4E8  69                 	db	105	;'i'
  4615  00F4E9  6E                 	db	110	;'n'
  4616  00F4EA  67                 	db	103	;'g'
  4617  00F4EB  20                 	db	32
  4618  00F4EC  46                 	db	70	;'F'
  4619  00F4ED  72                 	db	114	;'r'
  4620  00F4EE  65                 	db	101	;'e'
  4621  00F4EF  71                 	db	113	;'q'
  4622  00F4F0  75                 	db	117	;'u'
  4623  00F4F1  65                 	db	101	;'e'
  4624  00F4F2  6E                 	db	110	;'n'
  4625  00F4F3  63                 	db	99	;'c'
  4626  00F4F4  69                 	db	105	;'i'
  4627  00F4F5  65                 	db	101	;'e'
  4628  00F4F6  73                 	db	115	;'s'
  4629  00F4F7  3A                 	db	58	;':'
  4630  00F4F8  1B                 	db	27
  4631  00F4F9  5B                 	db	91	;'['
  4632  00F4FA  4B                 	db	75	;'K'
  4633  00F4FB  0A                 	db	10
  4634  00F4FC  0D                 	db	13
  4635  00F4FD  00                 	db	0
  4636  00F4FE                     STR_4:
  4637  00F4FE  51                 	db	81	;'Q'
  4638  00F4FF  49                 	db	73	;'I'
  4639  00F500  20                 	db	32
  4640  00F501  57                 	db	87	;'W'
  4641  00F502  69                 	db	105	;'i'
  4642  00F503  72                 	db	114	;'r'
  4643  00F504  65                 	db	101	;'e'
  4644  00F505  6C                 	db	108	;'l'
  4645  00F506  65                 	db	101	;'e'
  4646  00F507  73                 	db	115	;'s'
  4647  00F508  73                 	db	115	;'s'
  4648  00F509  20                 	db	32
  4649  00F50A  50                 	db	80	;'P'
  4650  00F50B  6F                 	db	111	;'o'
  4651  00F50C  77                 	db	119	;'w'
  4652  00F50D  65                 	db	101	;'e'
  4653  00F50E  72                 	db	114	;'r'
  4654  00F50F  20                 	db	32
  4655  00F510  43                 	db	67	;'C'
  4656  00F511  6F                 	db	111	;'o'
  4657  00F512  6E                 	db	110	;'n'
  4658  00F513  76                 	db	118	;'v'
  4659  00F514  65                 	db	101	;'e'
  4660  00F515  72                 	db	114	;'r'
  4661  00F516  73                 	db	115	;'s'
  4662  00F517  69                 	db	105	;'i'
  4663  00F518  6F                 	db	111	;'o'
  4664  00F519  6E                 	db	110	;'n'
  4665  00F51A  20                 	db	32
  4666  00F51B  45                 	db	69	;'E'
  4667  00F51C  6E                 	db	110	;'n'
  4668  00F51D  61                 	db	97	;'a'
  4669  00F51E  62                 	db	98	;'b'
  4670  00F51F  6C                 	db	108	;'l'
  4671  00F520  65                 	db	101	;'e'
  4672  00F521  64                 	db	100	;'d'
  4673  00F522  0A                 	db	10
  4674  00F523  0D                 	db	13
  4675  00F524  00                 	db	0
  4676  00F525                     STR_7:
  4677  00F525  4D                 	db	77	;'M'
  4678  00F526  65                 	db	101	;'e'
  4679  00F527  61                 	db	97	;'a'
  4680  00F528  73                 	db	115	;'s'
  4681  00F529  75                 	db	117	;'u'
  4682  00F52A  72                 	db	114	;'r'
  4683  00F52B  65                 	db	101	;'e'
  4684  00F52C  6D                 	db	109	;'m'
  4685  00F52D  65                 	db	101	;'e'
  4686  00F52E  6E                 	db	110	;'n'
  4687  00F52F  74                 	db	116	;'t'
  4688  00F530  20                 	db	32
  4689  00F531  72                 	db	114	;'r'
  4690  00F532  65                 	db	101	;'e'
  4691  00F533  73                 	db	115	;'s'
  4692  00F534  70                 	db	112	;'p'
  4693  00F535  6F                 	db	111	;'o'
  4694  00F536  6E                 	db	110	;'n'
  4695  00F537  73                 	db	115	;'s'
  4696  00F538  65                 	db	101	;'e'
  4697  00F539  73                 	db	115	;'s'
  4698  00F53A  20                 	db	32
  4699  00F53B  61                 	db	97	;'a'
  4700  00F53C  70                 	db	112	;'p'
  4701  00F53D  70                 	db	112	;'p'
  4702  00F53E  65                 	db	101	;'e'
  4703  00F53F  61                 	db	97	;'a'
  4704  00F540  72                 	db	114	;'r'
  4705  00F541  20                 	db	32
  4706  00F542  69                 	db	105	;'i'
  4707  00F543  6E                 	db	110	;'n'
  4708  00F544  20                 	db	32
  4709  00F545  63                 	db	99	;'c'
  4710  00F546  79                 	db	121	;'y'
  4711  00F547  61                 	db	97	;'a'
  4712  00F548  6E                 	db	110	;'n'
  4713  00F549  0A                 	db	10
  4714  00F54A  0D                 	db	13
  4715  00F54B  00                 	db	0
  4716  00F54C  54                 	db	84	;'T'
  4717  00F54D  68                 	db	104	;'h'
  4718  00F54E  69                 	db	105	;'i'
  4719  00F54F  73                 	db	115	;'s'
  4720  00F550  20                 	db	32
  4721  00F551  74                 	db	116	;'t'
  4722  00F552  65                 	db	101	;'e'
  4723  00F553  78                 	db	120	;'x'
  4724  00F554  74                 	db	116	;'t'
  4725  00F555  20                 	db	32
  4726  00F556  68                 	db	104	;'h'
  4727  00F557  61                 	db	97	;'a'
  4728  00F558  73                 	db	115	;'s'
  4729  00F559  20                 	db	32
  4730  00F55A  61                 	db	97	;'a'
  4731  00F55B  20                 	db	32
  4732  00F55C  6D                 	db	109	;'m'
  4733  00F55D  61                 	db	97	;'a'
  4734  00F55E  67                 	db	103	;'g'
  4735  00F55F  65                 	db	101	;'e'
  4736  00F560  6E                 	db	110	;'n'
  4737  00F561  74                 	db	116	;'t'
  4738  00F562  61                 	db	97	;'a'
  4739  00F563  20                 	db	32
  4740  00F564  62                 	db	98	;'b'
  4741  00F565  61                 	db	97	;'a'
  4742  00F566  63                 	db	99	;'c'
  4743  00F567  6B                 	db	107	;'k'
  4744  00F568  67                 	db	103	;'g'
  4745  00F569  72                 	db	114	;'r'
  4746  00F56A  6F                 	db	111	;'o'
  4747  00F56B  75                 	db	117	;'u'
  4748  00F56C  6E                 	db	110	;'n'
  4749  00F56D  64                 	db	100	;'d'
  4750  00F56E  0A                 	db	10
  4751  00F56F  0D                 	db	13
  4752  00F570  00                 	db	0
  4753  00F571                     STR_287:
  4754  00F571  20                 	db	32
  4755  00F572  20                 	db	32
  4756  00F573  20                 	db	32
  4757  00F574  20                 	db	32
  4758  00F575  4D                 	db	77	;'M'
  4759  00F576  69                 	db	105	;'i'
  4760  00F577  63                 	db	99	;'c'
  4761  00F578  72                 	db	114	;'r'
  4762  00F579  6F                 	db	111	;'o'
  4763  00F57A  63                 	db	99	;'c'
  4764  00F57B  6F                 	db	111	;'o'
  4765  00F57C  6E                 	db	110	;'n'
  4766  00F57D  74                 	db	116	;'t'
  4767  00F57E  72                 	db	114	;'r'
  4768  00F57F  6F                 	db	111	;'o'
  4769  00F580  6C                 	db	108	;'l'
  4770  00F581  6C                 	db	108	;'l'
  4771  00F582  65                 	db	101	;'e'
  4772  00F583  72                 	db	114	;'r'
  4773  00F584  20                 	db	32
  4774  00F585  50                 	db	80	;'P'
  4775  00F586  61                 	db	97	;'a'
  4776  00F587  72                 	db	114	;'r'
  4777  00F588  61                 	db	97	;'a'
  4778  00F589  6D                 	db	109	;'m'
  4779  00F58A  65                 	db	101	;'e'
  4780  00F58B  74                 	db	116	;'t'
  4781  00F58C  65                 	db	101	;'e'
  4782  00F58D  72                 	db	114	;'r'
  4783  00F58E  73                 	db	115	;'s'
  4784  00F58F  3A                 	db	58	;':'
  4785  00F590  1B                 	db	27
  4786  00F591  5B                 	db	91	;'['
  4787  00F592  4B                 	db	75	;'K'
  4788  00F593  0A                 	db	10
  4789  00F594  0D                 	db	13
  4790  00F595  00                 	db	0
  4791  00F596                     STR_238:
  4792  00F596  55                 	db	85	;'U'
  4793  00F597  6E                 	db	110	;'n'
  4794  00F598  73                 	db	115	;'s'
  4795  00F599  75                 	db	117	;'u'
  4796  00F59A  70                 	db	112	;'p'
  4797  00F59B  70                 	db	112	;'p'
  4798  00F59C  6F                 	db	111	;'o'
  4799  00F59D  72                 	db	114	;'r'
  4800  00F59E  74                 	db	116	;'t'
  4801  00F59F  65                 	db	101	;'e'
  4802  00F5A0  64                 	db	100	;'d'
  4803  00F5A1  20                 	db	32
  4804  00F5A2  6F                 	db	111	;'o'
  4805  00F5A3  72                 	db	114	;'r'
  4806  00F5A4  20                 	db	32
  4807  00F5A5  6D                 	db	109	;'m'
  4808  00F5A6  69                 	db	105	;'i'
  4809  00F5A7  73                 	db	115	;'s'
  4810  00F5A8  2D                 	db	45
  4811  00F5A9  65                 	db	101	;'e'
  4812  00F5AA  6E                 	db	110	;'n'
  4813  00F5AB  74                 	db	116	;'t'
  4814  00F5AC  65                 	db	101	;'e'
  4815  00F5AD  72                 	db	114	;'r'
  4816  00F5AE  65                 	db	101	;'e'
  4817  00F5AF  64                 	db	100	;'d'
  4818  00F5B0  20                 	db	32
  4819  00F5B1  63                 	db	99	;'c'
  4820  00F5B2  6F                 	db	111	;'o'
  4821  00F5B3  6D                 	db	109	;'m'
  4822  00F5B4  6D                 	db	109	;'m'
  4823  00F5B5  61                 	db	97	;'a'
  4824  00F5B6  6E                 	db	110	;'n'
  4825  00F5B7  64                 	db	100	;'d'
  4826  00F5B8  0A                 	db	10
  4827  00F5B9  0D                 	db	13
  4828  00F5BA  00                 	db	0
  4829  00F5BB                     STR_251:
  4830  00F5BB  20                 	db	32
  4831  00F5BC  20                 	db	32
  4832  00F5BD  20                 	db	32
  4833  00F5BE  20                 	db	32
  4834  00F5BF  20                 	db	32
  4835  00F5C0  20                 	db	32
  4836  00F5C1  20                 	db	32
  4837  00F5C2  20                 	db	32
  4838  00F5C3  49                 	db	73	;'I'
  4839  00F5C4  32                 	db	50	;'2'
  4840  00F5C5  43                 	db	67	;'C'
  4841  00F5C6  20                 	db	32
  4842  00F5C7  50                 	db	80	;'P'
  4843  00F5C8  4F                 	db	79	;'O'
  4844  00F5C9  53                 	db	83	;'S'
  4845  00F5CA  35                 	db	53	;'5'
  4846  00F5CB  20                 	db	32
  4847  00F5CC  54                 	db	84	;'T'
  4848  00F5CD  65                 	db	101	;'e'
  4849  00F5CE  6D                 	db	109	;'m'
  4850  00F5CF  70                 	db	112	;'p'
  4851  00F5D0  20                 	db	32
  4852  00F5D1  53                 	db	83	;'S'
  4853  00F5D2  65                 	db	101	;'e'
  4854  00F5D3  6E                 	db	110	;'n'
  4855  00F5D4  73                 	db	115	;'s'
  4856  00F5D5  6F                 	db	111	;'o'
  4857  00F5D6  72                 	db	114	;'r'
  4858  00F5D7  20                 	db	32
  4859  00F5D8  45                 	db	69	;'E'
  4860  00F5D9  72                 	db	114	;'r'
  4861  00F5DA  72                 	db	114	;'r'
  4862  00F5DB  6F                 	db	111	;'o'
  4863  00F5DC  72                 	db	114	;'r'
  4864  00F5DD  0A                 	db	10
  4865  00F5DE  0D                 	db	13
  4866  00F5DF  00                 	db	0
  4867  00F5E0  54                 	db	84	;'T'
  4868  00F5E1  68                 	db	104	;'h'
  4869  00F5E2  69                 	db	105	;'i'
  4870  00F5E3  73                 	db	115	;'s'
  4871  00F5E4  20                 	db	32
  4872  00F5E5  74                 	db	116	;'t'
  4873  00F5E6  65                 	db	101	;'e'
  4874  00F5E7  78                 	db	120	;'x'
  4875  00F5E8  74                 	db	116	;'t'
  4876  00F5E9  20                 	db	32
  4877  00F5EA  68                 	db	104	;'h'
  4878  00F5EB  61                 	db	97	;'a'
  4879  00F5EC  73                 	db	115	;'s'
  4880  00F5ED  20                 	db	32
  4881  00F5EE  61                 	db	97	;'a'
  4882  00F5EF  20                 	db	32
  4883  00F5F0  79                 	db	121	;'y'
  4884  00F5F1  65                 	db	101	;'e'
  4885  00F5F2  6C                 	db	108	;'l'
  4886  00F5F3  6C                 	db	108	;'l'
  4887  00F5F4  6F                 	db	111	;'o'
  4888  00F5F5  77                 	db	119	;'w'
  4889  00F5F6  20                 	db	32
  4890  00F5F7  62                 	db	98	;'b'
  4891  00F5F8  61                 	db	97	;'a'
  4892  00F5F9  63                 	db	99	;'c'
  4893  00F5FA  6B                 	db	107	;'k'
  4894  00F5FB  67                 	db	103	;'g'
  4895  00F5FC  72                 	db	114	;'r'
  4896  00F5FD  6F                 	db	111	;'o'
  4897  00F5FE  75                 	db	117	;'u'
  4898  00F5FF  6E                 	db	110	;'n'
  4899  00F600  64                 	db	100	;'d'
  4900  00F601  0A                 	db	10
  4901  00F602  0D                 	db	13
  4902  00F603  00                 	db	0
  4903  00F604                     STR_241:
  4904  00F604  4C                 	db	76	;'L'
  4905  00F605  69                 	db	105	;'i'
  4906  00F606  76                 	db	118	;'v'
  4907  00F607  65                 	db	101	;'e'
  4908  00F608  20                 	db	32
  4909  00F609  6D                 	db	109	;'m'
  4910  00F60A  65                 	db	101	;'e'
  4911  00F60B  61                 	db	97	;'a'
  4912  00F60C  73                 	db	115	;'s'
  4913  00F60D  75                 	db	117	;'u'
  4914  00F60E  72                 	db	114	;'r'
  4915  00F60F  65                 	db	101	;'e'
  4916  00F610  6D                 	db	109	;'m'
  4917  00F611  65                 	db	101	;'e'
  4918  00F612  6E                 	db	110	;'n'
  4919  00F613  74                 	db	116	;'t'
  4920  00F614  20                 	db	32
  4921  00F615  75                 	db	117	;'u'
  4922  00F616  70                 	db	112	;'p'
  4923  00F617  64                 	db	100	;'d'
  4924  00F618  61                 	db	97	;'a'
  4925  00F619  74                 	db	116	;'t'
  4926  00F61A  65                 	db	101	;'e'
  4927  00F61B  73                 	db	115	;'s'
  4928  00F61C  20                 	db	32
  4929  00F61D  64                 	db	100	;'d'
  4930  00F61E  69                 	db	105	;'i'
  4931  00F61F  73                 	db	115	;'s'
  4932  00F620  61                 	db	97	;'a'
  4933  00F621  62                 	db	98	;'b'
  4934  00F622  6C                 	db	108	;'l'
  4935  00F623  65                 	db	101	;'e'
  4936  00F624  64                 	db	100	;'d'
  4937  00F625  0A                 	db	10
  4938  00F626  0D                 	db	13
  4939  00F627  00                 	db	0
  4940  00F628  54                 	db	84	;'T'
  4941  00F629  68                 	db	104	;'h'
  4942  00F62A  69                 	db	105	;'i'
  4943  00F62B  73                 	db	115	;'s'
  4944  00F62C  20                 	db	32
  4945  00F62D  74                 	db	116	;'t'
  4946  00F62E  65                 	db	101	;'e'
  4947  00F62F  78                 	db	120	;'x'
  4948  00F630  74                 	db	116	;'t'
  4949  00F631  20                 	db	32
  4950  00F632  68                 	db	104	;'h'
  4951  00F633  61                 	db	97	;'a'
  4952  00F634  73                 	db	115	;'s'
  4953  00F635  20                 	db	32
  4954  00F636  61                 	db	97	;'a'
  4955  00F637  20                 	db	32
  4956  00F638  77                 	db	119	;'w'
  4957  00F639  68                 	db	104	;'h'
  4958  00F63A  69                 	db	105	;'i'
  4959  00F63B  74                 	db	116	;'t'
  4960  00F63C  65                 	db	101	;'e'
  4961  00F63D  20                 	db	32
  4962  00F63E  62                 	db	98	;'b'
  4963  00F63F  61                 	db	97	;'a'
  4964  00F640  63                 	db	99	;'c'
  4965  00F641  6B                 	db	107	;'k'
  4966  00F642  67                 	db	103	;'g'
  4967  00F643  72                 	db	114	;'r'
  4968  00F644  6F                 	db	111	;'o'
  4969  00F645  75                 	db	117	;'u'
  4970  00F646  6E                 	db	110	;'n'
  4971  00F647  64                 	db	100	;'d'
  4972  00F648  0A                 	db	10
  4973  00F649  0D                 	db	13
  4974  00F64A  00                 	db	0
  4975  00F64B  54                 	db	84	;'T'
  4976  00F64C  68                 	db	104	;'h'
  4977  00F64D  69                 	db	105	;'i'
  4978  00F64E  73                 	db	115	;'s'
  4979  00F64F  20                 	db	32
  4980  00F650  74                 	db	116	;'t'
  4981  00F651  65                 	db	101	;'e'
  4982  00F652  78                 	db	120	;'x'
  4983  00F653  74                 	db	116	;'t'
  4984  00F654  20                 	db	32
  4985  00F655  68                 	db	104	;'h'
  4986  00F656  61                 	db	97	;'a'
  4987  00F657  73                 	db	115	;'s'
  4988  00F658  20                 	db	32
  4989  00F659  61                 	db	97	;'a'
  4990  00F65A  20                 	db	32
  4991  00F65B  62                 	db	98	;'b'
  4992  00F65C  6C                 	db	108	;'l'
  4993  00F65D  61                 	db	97	;'a'
  4994  00F65E  63                 	db	99	;'c'
  4995  00F65F  6B                 	db	107	;'k'
  4996  00F660  20                 	db	32
  4997  00F661  62                 	db	98	;'b'
  4998  00F662  61                 	db	97	;'a'
  4999  00F663  63                 	db	99	;'c'
  5000  00F664  6B                 	db	107	;'k'
  5001  00F665  67                 	db	103	;'g'
  5002  00F666  72                 	db	114	;'r'
  5003  00F667  6F                 	db	111	;'o'
  5004  00F668  75                 	db	117	;'u'
  5005  00F669  6E                 	db	110	;'n'
  5006  00F66A  64                 	db	100	;'d'
  5007  00F66B  0A                 	db	10
  5008  00F66C  0D                 	db	13
  5009  00F66D  00                 	db	0
  5010  00F66E  54                 	db	84	;'T'
  5011  00F66F  68                 	db	104	;'h'
  5012  00F670  69                 	db	105	;'i'
  5013  00F671  73                 	db	115	;'s'
  5014  00F672  20                 	db	32
  5015  00F673  74                 	db	116	;'t'
  5016  00F674  65                 	db	101	;'e'
  5017  00F675  78                 	db	120	;'x'
  5018  00F676  74                 	db	116	;'t'
  5019  00F677  20                 	db	32
  5020  00F678  68                 	db	104	;'h'
  5021  00F679  61                 	db	97	;'a'
  5022  00F67A  73                 	db	115	;'s'
  5023  00F67B  20                 	db	32
  5024  00F67C  61                 	db	97	;'a'
  5025  00F67D  20                 	db	32
  5026  00F67E  67                 	db	103	;'g'
  5027  00F67F  72                 	db	114	;'r'
  5028  00F680  65                 	db	101	;'e'
  5029  00F681  65                 	db	101	;'e'
  5030  00F682  6E                 	db	110	;'n'
  5031  00F683  20                 	db	32
  5032  00F684  62                 	db	98	;'b'
  5033  00F685  61                 	db	97	;'a'
  5034  00F686  63                 	db	99	;'c'
  5035  00F687  6B                 	db	107	;'k'
  5036  00F688  67                 	db	103	;'g'
  5037  00F689  72                 	db	114	;'r'
  5038  00F68A  6F                 	db	111	;'o'
  5039  00F68B  75                 	db	117	;'u'
  5040  00F68C  6E                 	db	110	;'n'
  5041  00F68D  64                 	db	100	;'d'
  5042  00F68E  0A                 	db	10
  5043  00F68F  0D                 	db	13
  5044  00F690  00                 	db	0
  5045  00F691                     STR_252:
  5046  00F691  20                 	db	32
  5047  00F692  20                 	db	32
  5048  00F693  20                 	db	32
  5049  00F694  20                 	db	32
  5050  00F695  20                 	db	32
  5051  00F696  20                 	db	32
  5052  00F697  20                 	db	32
  5053  00F698  20                 	db	32
  5054  00F699  49                 	db	73	;'I'
  5055  00F69A  32                 	db	50	;'2'
  5056  00F69B  43                 	db	67	;'C'
  5057  00F69C  20                 	db	32
  5058  00F69D  51                 	db	81	;'Q'
  5059  00F69E  49                 	db	73	;'I'
  5060  00F69F  20                 	db	32
  5061  00F6A0  54                 	db	84	;'T'
  5062  00F6A1  65                 	db	101	;'e'
  5063  00F6A2  6D                 	db	109	;'m'
  5064  00F6A3  70                 	db	112	;'p'
  5065  00F6A4  20                 	db	32
  5066  00F6A5  53                 	db	83	;'S'
  5067  00F6A6  65                 	db	101	;'e'
  5068  00F6A7  6E                 	db	110	;'n'
  5069  00F6A8  73                 	db	115	;'s'
  5070  00F6A9  6F                 	db	111	;'o'
  5071  00F6AA  72                 	db	114	;'r'
  5072  00F6AB  20                 	db	32
  5073  00F6AC  45                 	db	69	;'E'
  5074  00F6AD  72                 	db	114	;'r'
  5075  00F6AE  72                 	db	114	;'r'
  5076  00F6AF  6F                 	db	111	;'o'
  5077  00F6B0  72                 	db	114	;'r'
  5078  00F6B1  0A                 	db	10
  5079  00F6B2  0D                 	db	13
  5080  00F6B3  00                 	db	0
  5081  00F6B4  54                 	db	84	;'T'
  5082  00F6B5  68                 	db	104	;'h'
  5083  00F6B6  69                 	db	105	;'i'
  5084  00F6B7  73                 	db	115	;'s'
  5085  00F6B8  20                 	db	32
  5086  00F6B9  74                 	db	116	;'t'
  5087  00F6BA  65                 	db	101	;'e'
  5088  00F6BB  78                 	db	120	;'x'
  5089  00F6BC  74                 	db	116	;'t'
  5090  00F6BD  20                 	db	32
  5091  00F6BE  68                 	db	104	;'h'
  5092  00F6BF  61                 	db	97	;'a'
  5093  00F6C0  73                 	db	115	;'s'
  5094  00F6C1  20                 	db	32
  5095  00F6C2  61                 	db	97	;'a'
  5096  00F6C3  20                 	db	32
  5097  00F6C4  62                 	db	98	;'b'
  5098  00F6C5  6C                 	db	108	;'l'
  5099  00F6C6  75                 	db	117	;'u'
  5100  00F6C7  65                 	db	101	;'e'
  5101  00F6C8  20                 	db	32
  5102  00F6C9  62                 	db	98	;'b'
  5103  00F6CA  61                 	db	97	;'a'
  5104  00F6CB  63                 	db	99	;'c'
  5105  00F6CC  6B                 	db	107	;'k'
  5106  00F6CD  67                 	db	103	;'g'
  5107  00F6CE  72                 	db	114	;'r'
  5108  00F6CF  6F                 	db	111	;'o'
  5109  00F6D0  75                 	db	117	;'u'
  5110  00F6D1  6E                 	db	110	;'n'
  5111  00F6D2  64                 	db	100	;'d'
  5112  00F6D3  0A                 	db	10
  5113  00F6D4  0D                 	db	13
  5114  00F6D5  00                 	db	0
  5115  00F6D6  54                 	db	84	;'T'
  5116  00F6D7  68                 	db	104	;'h'
  5117  00F6D8  69                 	db	105	;'i'
  5118  00F6D9  73                 	db	115	;'s'
  5119  00F6DA  20                 	db	32
  5120  00F6DB  74                 	db	116	;'t'
  5121  00F6DC  65                 	db	101	;'e'
  5122  00F6DD  78                 	db	120	;'x'
  5123  00F6DE  74                 	db	116	;'t'
  5124  00F6DF  20                 	db	32
  5125  00F6E0  68                 	db	104	;'h'
  5126  00F6E1  61                 	db	97	;'a'
  5127  00F6E2  73                 	db	115	;'s'
  5128  00F6E3  20                 	db	32
  5129  00F6E4  61                 	db	97	;'a'
  5130  00F6E5  20                 	db	32
  5131  00F6E6  63                 	db	99	;'c'
  5132  00F6E7  79                 	db	121	;'y'
  5133  00F6E8  61                 	db	97	;'a'
  5134  00F6E9  6E                 	db	110	;'n'
  5135  00F6EA  20                 	db	32
  5136  00F6EB  62                 	db	98	;'b'
  5137  00F6EC  61                 	db	97	;'a'
  5138  00F6ED  63                 	db	99	;'c'
  5139  00F6EE  6B                 	db	107	;'k'
  5140  00F6EF  67                 	db	103	;'g'
  5141  00F6F0  72                 	db	114	;'r'
  5142  00F6F1  6F                 	db	111	;'o'
  5143  00F6F2  75                 	db	117	;'u'
  5144  00F6F3  6E                 	db	110	;'n'
  5145  00F6F4  64                 	db	100	;'d'
  5146  00F6F5  0A                 	db	10
  5147  00F6F6  0D                 	db	13
  5148  00F6F7  00                 	db	0
  5149  00F6F8                     STR_12:
  5150  00F6F8  50                 	db	80	;'P'
  5151  00F6F9  72                 	db	114	;'r'
  5152  00F6FA  65                 	db	101	;'e'
  5153  00F6FB  73                 	db	115	;'s'
  5154  00F6FC  73                 	db	115	;'s'
  5155  00F6FD  20                 	db	32
  5156  00F6FE  65                 	db	101	;'e'
  5157  00F6FF  6E                 	db	110	;'n'
  5158  00F700  74                 	db	116	;'t'
  5159  00F701  65                 	db	101	;'e'
  5160  00F702  72                 	db	114	;'r'
  5161  00F703  20                 	db	32
  5162  00F704  6B                 	db	107	;'k'
  5163  00F705  65                 	db	101	;'e'
  5164  00F706  79                 	db	121	;'y'
  5165  00F707  20                 	db	32
  5166  00F708  74                 	db	116	;'t'
  5167  00F709  6F                 	db	111	;'o'
  5168  00F70A  20                 	db	32
  5169  00F70B  65                 	db	101	;'e'
  5170  00F70C  78                 	db	120	;'x'
  5171  00F70D  69                 	db	105	;'i'
  5172  00F70E  74                 	db	116	;'t'
  5173  00F70F  1B                 	db	27
  5174  00F710  5B                 	db	91	;'['
  5175  00F711  4B                 	db	75	;'K'
  5176  00F712  0A                 	db	10
  5177  00F713  0D                 	db	13
  5178  00F714  1B                 	db	27
  5179  00F715  5B                 	db	91	;'['
  5180  00F716  4B                 	db	75	;'K'
  5181  00F717  0A                 	db	10
  5182  00F718  0D                 	db	13
  5183  00F719  00                 	db	0
  5184  00F71A  54                 	db	84	;'T'
  5185  00F71B  68                 	db	104	;'h'
  5186  00F71C  69                 	db	105	;'i'
  5187  00F71D  73                 	db	115	;'s'
  5188  00F71E  20                 	db	32
  5189  00F71F  74                 	db	116	;'t'
  5190  00F720  65                 	db	101	;'e'
  5191  00F721  78                 	db	120	;'x'
  5192  00F722  74                 	db	116	;'t'
  5193  00F723  20                 	db	32
  5194  00F724  68                 	db	104	;'h'
  5195  00F725  61                 	db	97	;'a'
  5196  00F726  73                 	db	115	;'s'
  5197  00F727  20                 	db	32
  5198  00F728  61                 	db	97	;'a'
  5199  00F729  20                 	db	32
  5200  00F72A  72                 	db	114	;'r'
  5201  00F72B  65                 	db	101	;'e'
  5202  00F72C  64                 	db	100	;'d'
  5203  00F72D  20                 	db	32
  5204  00F72E  62                 	db	98	;'b'
  5205  00F72F  61                 	db	97	;'a'
  5206  00F730  63                 	db	99	;'c'
  5207  00F731  6B                 	db	107	;'k'
  5208  00F732  67                 	db	103	;'g'
  5209  00F733  72                 	db	114	;'r'
  5210  00F734  6F                 	db	111	;'o'
  5211  00F735  75                 	db	117	;'u'
  5212  00F736  6E                 	db	110	;'n'
  5213  00F737  64                 	db	100	;'d'
  5214  00F738  0A                 	db	10
  5215  00F739  0D                 	db	13
  5216  00F73A  00                 	db	0
  5217  00F73B                     STR_253:
  5218  00F73B  20                 	db	32
  5219  00F73C  20                 	db	32
  5220  00F73D  20                 	db	32
  5221  00F73E  20                 	db	32
  5222  00F73F  20                 	db	32
  5223  00F740  20                 	db	32
  5224  00F741  20                 	db	32
  5225  00F742  20                 	db	32
  5226  00F743  49                 	db	73	;'I'
  5227  00F744  32                 	db	50	;'2'
  5228  00F745  43                 	db	67	;'C'
  5229  00F746  20                 	db	32
  5230  00F747  4F                 	db	79	;'O'
  5231  00F748  4C                 	db	76	;'L'
  5232  00F749  45                 	db	69	;'E'
  5233  00F74A  44                 	db	68	;'D'
  5234  00F74B  20                 	db	32
  5235  00F74C  44                 	db	68	;'D'
  5236  00F74D  69                 	db	105	;'i'
  5237  00F74E  73                 	db	115	;'s'
  5238  00F74F  70                 	db	112	;'p'
  5239  00F750  6C                 	db	108	;'l'
  5240  00F751  61                 	db	97	;'a'
  5241  00F752  79                 	db	121	;'y'
  5242  00F753  20                 	db	32
  5243  00F754  45                 	db	69	;'E'
  5244  00F755  72                 	db	114	;'r'
  5245  00F756  72                 	db	114	;'r'
  5246  00F757  6F                 	db	111	;'o'
  5247  00F758  72                 	db	114	;'r'
  5248  00F759  0A                 	db	10
  5249  00F75A  0D                 	db	13
  5250  00F75B  00                 	db	0
  5251  00F75C                     STR_258:
  5252  00F75C  20                 	db	32
  5253  00F75D  20                 	db	32
  5254  00F75E  20                 	db	32
  5255  00F75F  20                 	db	32
  5256  00F760  4E                 	db	78	;'N'
  5257  00F761  6F                 	db	111	;'o'
  5258  00F762  20                 	db	32
  5259  00F763  55                 	db	85	;'U'
  5260  00F764  41                 	db	65	;'A'
  5261  00F765  52                 	db	82	;'R'
  5262  00F766  54                 	db	84	;'T'
  5263  00F767  20                 	db	32
  5264  00F768  65                 	db	101	;'e'
  5265  00F769  72                 	db	114	;'r'
  5266  00F76A  72                 	db	114	;'r'
  5267  00F76B  6F                 	db	111	;'o'
  5268  00F76C  72                 	db	114	;'r'
  5269  00F76D  28                 	db	40
  5270  00F76E  73                 	db	115	;'s'
  5271  00F76F  29                 	db	41
  5272  00F770  20                 	db	32
  5273  00F771  64                 	db	100	;'d'
  5274  00F772  65                 	db	101	;'e'
  5275  00F773  74                 	db	116	;'t'
  5276  00F774  65                 	db	101	;'e'
  5277  00F775  63                 	db	99	;'c'
  5278  00F776  74                 	db	116	;'t'
  5279  00F777  65                 	db	101	;'e'
  5280  00F778  64                 	db	100	;'d'
  5281  00F779  0A                 	db	10
  5282  00F77A  0D                 	db	13
  5283  00F77B  00                 	db	0
  5284  00F77C                     STR_255:
  5285  00F77C  20                 	db	32
  5286  00F77D  20                 	db	32
  5287  00F77E  20                 	db	32
  5288  00F77F  20                 	db	32
  5289  00F780  4E                 	db	78	;'N'
  5290  00F781  6F                 	db	111	;'o'
  5291  00F782  20                 	db	32
  5292  00F783  49                 	db	73	;'I'
  5293  00F784  32                 	db	50	;'2'
  5294  00F785  43                 	db	67	;'C'
  5295  00F786  20                 	db	32
  5296  00F787  65                 	db	101	;'e'
  5297  00F788  72                 	db	114	;'r'
  5298  00F789  72                 	db	114	;'r'
  5299  00F78A  6F                 	db	111	;'o'
  5300  00F78B  72                 	db	114	;'r'
  5301  00F78C  28                 	db	40
  5302  00F78D  73                 	db	115	;'s'
  5303  00F78E  29                 	db	41
  5304  00F78F  20                 	db	32
  5305  00F790  64                 	db	100	;'d'
  5306  00F791  65                 	db	101	;'e'
  5307  00F792  74                 	db	116	;'t'
  5308  00F793  65                 	db	101	;'e'
  5309  00F794  63                 	db	99	;'c'
  5310  00F795  74                 	db	116	;'t'
  5311  00F796  65                 	db	101	;'e'
  5312  00F797  64                 	db	100	;'d'
  5313  00F798  0A                 	db	10
  5314  00F799  0D                 	db	13
  5315  00F79A  00                 	db	0
  5316  00F79B                     STR_247:
  5317  00F79B  20                 	db	32
  5318  00F79C  20                 	db	32
  5319  00F79D  20                 	db	32
  5320  00F79E  20                 	db	32
  5321  00F79F  4E                 	db	78	;'N'
  5322  00F7A0  6F                 	db	111	;'o'
  5323  00F7A1  20                 	db	32
  5324  00F7A2  41                 	db	65	;'A'
  5325  00F7A3  44                 	db	68	;'D'
  5326  00F7A4  43                 	db	67	;'C'
  5327  00F7A5  20                 	db	32
  5328  00F7A6  65                 	db	101	;'e'
  5329  00F7A7  72                 	db	114	;'r'
  5330  00F7A8  72                 	db	114	;'r'
  5331  00F7A9  6F                 	db	111	;'o'
  5332  00F7AA  72                 	db	114	;'r'
  5333  00F7AB  28                 	db	40
  5334  00F7AC  73                 	db	115	;'s'
  5335  00F7AD  29                 	db	41
  5336  00F7AE  20                 	db	32
  5337  00F7AF  64                 	db	100	;'d'
  5338  00F7B0  65                 	db	101	;'e'
  5339  00F7B1  74                 	db	116	;'t'
  5340  00F7B2  65                 	db	101	;'e'
  5341  00F7B3  63                 	db	99	;'c'
  5342  00F7B4  74                 	db	116	;'t'
  5343  00F7B5  65                 	db	101	;'e'
  5344  00F7B6  64                 	db	100	;'d'
  5345  00F7B7  0A                 	db	10
  5346  00F7B8  0D                 	db	13
  5347  00F7B9  00                 	db	0
  5348  00F7BA                     STR_283:
  5349  00F7BA  20                 	db	32
  5350  00F7BB  20                 	db	32
  5351  00F7BC  20                 	db	32
  5352  00F7BD  20                 	db	32
  5353  00F7BE  53                 	db	83	;'S'
  5354  00F7BF  79                 	db	121	;'y'
  5355  00F7C0  73                 	db	115	;'s'
  5356  00F7C1  74                 	db	116	;'t'
  5357  00F7C2  65                 	db	101	;'e'
  5358  00F7C3  6D                 	db	109	;'m'
  5359  00F7C4  20                 	db	32
  5360  00F7C5  54                 	db	84	;'T'
  5361  00F7C6  65                 	db	101	;'e'
  5362  00F7C7  6D                 	db	109	;'m'
  5363  00F7C8  70                 	db	112	;'p'
  5364  00F7C9  65                 	db	101	;'e'
  5365  00F7CA  72                 	db	114	;'r'
  5366  00F7CB  61                 	db	97	;'a'
  5367  00F7CC  74                 	db	116	;'t'
  5368  00F7CD  75                 	db	117	;'u'
  5369  00F7CE  72                 	db	114	;'r'
  5370  00F7CF  65                 	db	101	;'e'
  5371  00F7D0  73                 	db	115	;'s'
  5372  00F7D1  3A                 	db	58	;':'
  5373  00F7D2  1B                 	db	27
  5374  00F7D3  5B                 	db	91	;'['
  5375  00F7D4  4B                 	db	75	;'K'
  5376  00F7D5  0A                 	db	10
  5377  00F7D6  0D                 	db	13
  5378  00F7D7  00                 	db	0
  5379  00F7D8                     STR_256:
  5380  00F7D8  20                 	db	32
  5381  00F7D9  20                 	db	32
  5382  00F7DA  20                 	db	32
  5383  00F7DB  20                 	db	32
  5384  00F7DC  55                 	db	85	;'U'
  5385  00F7DD  53                 	db	83	;'S'
  5386  00F7DE  42                 	db	66	;'B'
  5387  00F7DF  20                 	db	32
  5388  00F7E0  55                 	db	85	;'U'
  5389  00F7E1  41                 	db	65	;'A'
  5390  00F7E2  52                 	db	82	;'R'
  5391  00F7E3  54                 	db	84	;'T'
  5392  00F7E4  20                 	db	32
  5393  00F7E5  45                 	db	69	;'E'
  5394  00F7E6  72                 	db	114	;'r'
  5395  00F7E7  72                 	db	114	;'r'
  5396  00F7E8  6F                 	db	111	;'o'
  5397  00F7E9  72                 	db	114	;'r'
  5398  00F7EA  20                 	db	32
  5399  00F7EB  44                 	db	68	;'D'
  5400  00F7EC  65                 	db	101	;'e'
  5401  00F7ED  74                 	db	116	;'t'
  5402  00F7EE  65                 	db	101	;'e'
  5403  00F7EF  63                 	db	99	;'c'
  5404  00F7F0  74                 	db	116	;'t'
  5405  00F7F1  65                 	db	101	;'e'
  5406  00F7F2  64                 	db	100	;'d'
  5407  00F7F3  0A                 	db	10
  5408  00F7F4  0D                 	db	13
  5409  00F7F5  00                 	db	0
  5410  00F7F6                     STR_9:
  5411  00F7F6  55                 	db	85	;'U'
  5412  00F7F7  73                 	db	115	;'s'
  5413  00F7F8  65                 	db	101	;'e'
  5414  00F7F9  72                 	db	114	;'r'
  5415  00F7FA  20                 	db	32
  5416  00F7FB  69                 	db	105	;'i'
  5417  00F7FC  6E                 	db	110	;'n'
  5418  00F7FD  70                 	db	112	;'p'
  5419  00F7FE  75                 	db	117	;'u'
  5420  00F7FF  74                 	db	116	;'t'
  5421  00F800  20                 	db	32
  5422  00F801  61                 	db	97	;'a'
  5423  00F802  70                 	db	112	;'p'
  5424  00F803  70                 	db	112	;'p'
  5425  00F804  65                 	db	101	;'e'
  5426  00F805  61                 	db	97	;'a'
  5427  00F806  72                 	db	114	;'r'
  5428  00F807  73                 	db	115	;'s'
  5429  00F808  20                 	db	32
  5430  00F809  69                 	db	105	;'i'
  5431  00F80A  6E                 	db	110	;'n'
  5432  00F80B  20                 	db	32
  5433  00F80C  77                 	db	119	;'w'
  5434  00F80D  68                 	db	104	;'h'
  5435  00F80E  69                 	db	105	;'i'
  5436  00F80F  74                 	db	116	;'t'
  5437  00F810  65                 	db	101	;'e'
  5438  00F811  0A                 	db	10
  5439  00F812  0D                 	db	13
  5440  00F813  00                 	db	0
  5441  00F814                     STR_242:
  5442  00F814  20                 	db	32
  5443  00F815  20                 	db	32
  5444  00F816  20                 	db	32
  5445  00F817  20                 	db	32
  5446  00F818  41                 	db	65	;'A'
  5447  00F819  44                 	db	68	;'D'
  5448  00F81A  43                 	db	67	;'C'
  5449  00F81B  20                 	db	32
  5450  00F81C  65                 	db	101	;'e'
  5451  00F81D  72                 	db	114	;'r'
  5452  00F81E  72                 	db	114	;'r'
  5453  00F81F  6F                 	db	111	;'o'
  5454  00F820  72                 	db	114	;'r'
  5455  00F821  28                 	db	40
  5456  00F822  73                 	db	115	;'s'
  5457  00F823  29                 	db	41
  5458  00F824  20                 	db	32
  5459  00F825  64                 	db	100	;'d'
  5460  00F826  65                 	db	101	;'e'
  5461  00F827  74                 	db	116	;'t'
  5462  00F828  65                 	db	101	;'e'
  5463  00F829  63                 	db	99	;'c'
  5464  00F82A  74                 	db	116	;'t'
  5465  00F82B  65                 	db	101	;'e'
  5466  00F82C  64                 	db	100	;'d'
  5467  00F82D  21                 	db	33
  5468  00F82E  0A                 	db	10
  5469  00F82F  0D                 	db	13
  5470  00F830  00                 	db	0
  5471  00F831                     STR_227:
  5472  00F831  45                 	db	69	;'E'
  5473  00F832  6E                 	db	110	;'n'
  5474  00F833  61                 	db	97	;'a'
  5475  00F834  62                 	db	98	;'b'
  5476  00F835  6C                 	db	108	;'l'
  5477  00F836  69                 	db	105	;'i'
  5478  00F837  6E                 	db	110	;'n'
  5479  00F838  67                 	db	103	;'g'
  5480  00F839  20                 	db	32
  5481  00F83A  6C                 	db	108	;'l'
  5482  00F83B  69                 	db	105	;'i'
  5483  00F83C  76                 	db	118	;'v'
  5484  00F83D  65                 	db	101	;'e'
  5485  00F83E  20                 	db	32
  5486  00F83F  6D                 	db	109	;'m'
  5487  00F840  65                 	db	101	;'e'
  5488  00F841  61                 	db	97	;'a'
  5489  00F842  73                 	db	115	;'s'
  5490  00F843  75                 	db	117	;'u'
  5491  00F844  72                 	db	114	;'r'
  5492  00F845  65                 	db	101	;'e'
  5493  00F846  6D                 	db	109	;'m'
  5494  00F847  65                 	db	101	;'e'
  5495  00F848  6E                 	db	110	;'n'
  5496  00F849  74                 	db	116	;'t'
  5497  00F84A  73                 	db	115	;'s'
  5498  00F84B  0A                 	db	10
  5499  00F84C  0D                 	db	13
  5500  00F84D  00                 	db	0
  5501  00F84E                     STR_11:
  5502  00F84E  4C                 	db	76	;'L'
  5503  00F84F  69                 	db	105	;'i'
  5504  00F850  76                 	db	118	;'v'
  5505  00F851  65                 	db	101	;'e'
  5506  00F852  20                 	db	32
  5507  00F853  4D                 	db	77	;'M'
  5508  00F854  65                 	db	101	;'e'
  5509  00F855  61                 	db	97	;'a'
  5510  00F856  73                 	db	115	;'s'
  5511  00F857  75                 	db	117	;'u'
  5512  00F858  72                 	db	114	;'r'
  5513  00F859  65                 	db	101	;'e'
  5514  00F85A  6D                 	db	109	;'m'
  5515  00F85B  65                 	db	101	;'e'
  5516  00F85C  6E                 	db	110	;'n'
  5517  00F85D  74                 	db	116	;'t'
  5518  00F85E  73                 	db	115	;'s'
  5519  00F85F  3A                 	db	58	;':'
  5520  00F860  1B                 	db	27
  5521  00F861  5B                 	db	91	;'['
  5522  00F862  4B                 	db	75	;'K'
  5523  00F863  0A                 	db	10
  5524  00F864  0D                 	db	13
  5525  00F865  1B                 	db	27
  5526  00F866  5B                 	db	91	;'['
  5527  00F867  4B                 	db	75	;'K'
  5528  00F868  0A                 	db	10
  5529  00F869  0D                 	db	13
  5530  00F86A  00                 	db	0
  5531  00F86B                     STR_249:
  5532  00F86B  20                 	db	32
  5533  00F86C  20                 	db	32
  5534  00F86D  20                 	db	32
  5535  00F86E  20                 	db	32
  5536  00F86F  20                 	db	32
  5537  00F870  20                 	db	32
  5538  00F871  20                 	db	32
  5539  00F872  20                 	db	32
  5540  00F873  49                 	db	73	;'I'
  5541  00F874  32                 	db	50	;'2'
  5542  00F875  43                 	db	67	;'C'
  5543  00F876  20                 	db	32
  5544  00F877  47                 	db	71	;'G'
  5545  00F878  65                 	db	101	;'e'
  5546  00F879  6E                 	db	110	;'n'
  5547  00F87A  65                 	db	101	;'e'
  5548  00F87B  72                 	db	114	;'r'
  5549  00F87C  61                 	db	97	;'a'
  5550  00F87D  6C                 	db	108	;'l'
  5551  00F87E  20                 	db	32
  5552  00F87F  45                 	db	69	;'E'
  5553  00F880  72                 	db	114	;'r'
  5554  00F881  72                 	db	114	;'r'
  5555  00F882  6F                 	db	111	;'o'
  5556  00F883  72                 	db	114	;'r'
  5557  00F884  0A                 	db	10
  5558  00F885  0D                 	db	13
  5559  00F886  00                 	db	0
  5560  00F887                     STR_244:
  5561  00F887  20                 	db	32
  5562  00F888  20                 	db	32
  5563  00F889  20                 	db	32
  5564  00F88A  20                 	db	32
  5565  00F88B  20                 	db	32
  5566  00F88C  20                 	db	32
  5567  00F88D  20                 	db	32
  5568  00F88E  20                 	db	32
  5569  00F88F  47                 	db	71	;'G'
  5570  00F890  65                 	db	101	;'e'
  5571  00F891  6E                 	db	110	;'n'
  5572  00F892  65                 	db	101	;'e'
  5573  00F893  72                 	db	114	;'r'
  5574  00F894  61                 	db	97	;'a'
  5575  00F895  6C                 	db	108	;'l'
  5576  00F896  20                 	db	32
  5577  00F897  41                 	db	65	;'A'
  5578  00F898  44                 	db	68	;'D'
  5579  00F899  43                 	db	67	;'C'
  5580  00F89A  20                 	db	32
  5581  00F89B  65                 	db	101	;'e'
  5582  00F89C  72                 	db	114	;'r'
  5583  00F89D  72                 	db	114	;'r'
  5584  00F89E  6F                 	db	111	;'o'
  5585  00F89F  72                 	db	114	;'r'
  5586  00F8A0  0A                 	db	10
  5587  00F8A1  0D                 	db	13
  5588  00F8A2  00                 	db	0
  5589  00F8A3  54                 	db	84	;'T'
  5590  00F8A4  65                 	db	101	;'e'
  5591  00F8A5  73                 	db	115	;'s'
  5592  00F8A6  74                 	db	116	;'t'
  5593  00F8A7  69                 	db	105	;'i'
  5594  00F8A8  6E                 	db	110	;'n'
  5595  00F8A9  67                 	db	103	;'g'
  5596  00F8AA  20                 	db	32
  5597  00F8AB  74                 	db	116	;'t'
  5598  00F8AC  65                 	db	101	;'e'
  5599  00F8AD  78                 	db	120	;'x'
  5600  00F8AE  74                 	db	116	;'t'
  5601  00F8AF  20                 	db	32
  5602  00F8B0  61                 	db	97	;'a'
  5603  00F8B1  74                 	db	116	;'t'
  5604  00F8B2  74                 	db	116	;'t'
  5605  00F8B3  72                 	db	114	;'r'
  5606  00F8B4  69                 	db	105	;'i'
  5607  00F8B5  62                 	db	98	;'b'
  5608  00F8B6  75                 	db	117	;'u'
  5609  00F8B7  74                 	db	116	;'t'
  5610  00F8B8  65                 	db	101	;'e'
  5611  00F8B9  73                 	db	115	;'s'
  5612  00F8BA  3A                 	db	58	;':'
  5613  00F8BB  0A                 	db	10
  5614  00F8BC  0D                 	db	13
  5615  00F8BD  00                 	db	0
  5616  00F8BE  54                 	db	84	;'T'
  5617  00F8BF  68                 	db	104	;'h'
  5618  00F8C0  69                 	db	105	;'i'
  5619  00F8C1  73                 	db	115	;'s'
  5620  00F8C2  20                 	db	32
  5621  00F8C3  74                 	db	116	;'t'
  5622  00F8C4  65                 	db	101	;'e'
  5623  00F8C5  78                 	db	120	;'x'
  5624  00F8C6  74                 	db	116	;'t'
  5625  00F8C7  20                 	db	32
  5626  00F8C8  69                 	db	105	;'i'
  5627  00F8C9  73                 	db	115	;'s'
  5628  00F8CA  20                 	db	32
  5629  00F8CB  75                 	db	117	;'u'
  5630  00F8CC  6E                 	db	110	;'n'
  5631  00F8CD  64                 	db	100	;'d'
  5632  00F8CE  65                 	db	101	;'e'
  5633  00F8CF  72                 	db	114	;'r'
  5634  00F8D0  73                 	db	115	;'s'
  5635  00F8D1  63                 	db	99	;'c'
  5636  00F8D2  6F                 	db	111	;'o'
  5637  00F8D3  72                 	db	114	;'r'
  5638  00F8D4  65                 	db	101	;'e'
  5639  00F8D5  64                 	db	100	;'d'
  5640  00F8D6  0A                 	db	10
  5641  00F8D7  0D                 	db	13
  5642  00F8D8  00                 	db	0
  5643  00F8D9                     STR_29:
  5644  00F8D9  52                 	db	82	;'R'
  5645  00F8DA  45                 	db	69	;'E'
  5646  00F8DB  53                 	db	83	;'S'
  5647  00F8DC  45                 	db	69	;'E'
  5648  00F8DD  54                 	db	84	;'T'
  5649  00F8DE  20                 	db	32
  5650  00F8DF  49                 	db	73	;'I'
  5651  00F8E0  6E                 	db	110	;'n'
  5652  00F8E1  73                 	db	115	;'s'
  5653  00F8E2  74                 	db	116	;'t'
  5654  00F8E3  72                 	db	114	;'r'
  5655  00F8E4  75                 	db	117	;'u'
  5656  00F8E5  63                 	db	99	;'c'
  5657  00F8E6  74                 	db	116	;'t'
  5658  00F8E7  69                 	db	105	;'i'
  5659  00F8E8  6F                 	db	111	;'o'
  5660  00F8E9  6E                 	db	110	;'n'
  5661  00F8EA  20                 	db	32
  5662  00F8EB  45                 	db	69	;'E'
  5663  00F8EC  78                 	db	120	;'x'
  5664  00F8ED  65                 	db	101	;'e'
  5665  00F8EE  63                 	db	99	;'c'
  5666  00F8EF  75                 	db	117	;'u'
  5667  00F8F0  74                 	db	116	;'t'
  5668  00F8F1  65                 	db	101	;'e'
  5669  00F8F2  64                 	db	100	;'d'
  5670  00F8F3  00                 	db	0
  5671  00F8F4                     STR_267:
  5672  00F8F4  20                 	db	32
  5673  00F8F5  20                 	db	32
  5674  00F8F6  20                 	db	32
  5675  00F8F7  20                 	db	32
  5676  00F8F8  53                 	db	83	;'S'
  5677  00F8F9  79                 	db	121	;'y'
  5678  00F8FA  73                 	db	115	;'s'
  5679  00F8FB  74                 	db	116	;'t'
  5680  00F8FC  65                 	db	101	;'e'
  5681  00F8FD  6D                 	db	109	;'m'
  5682  00F8FE  20                 	db	32
  5683  00F8FF  43                 	db	67	;'C'
  5684  00F900  75                 	db	117	;'u'
  5685  00F901  72                 	db	114	;'r'
  5686  00F902  72                 	db	114	;'r'
  5687  00F903  65                 	db	101	;'e'
  5688  00F904  6E                 	db	110	;'n'
  5689  00F905  74                 	db	116	;'t'
  5690  00F906  73                 	db	115	;'s'
  5691  00F907  3A                 	db	58	;':'
  5692  00F908  1B                 	db	27
  5693  00F909  5B                 	db	91	;'['
  5694  00F90A  4B                 	db	75	;'K'
  5695  00F90B  0A                 	db	10
  5696  00F90C  0D                 	db	13
  5697  00F90D  00                 	db	0
  5698  00F90E                     STR_226:
  5699  00F90E  45                 	db	69	;'E'
  5700  00F90F  6E                 	db	110	;'n'
  5701  00F910  61                 	db	97	;'a'
  5702  00F911  62                 	db	98	;'b'
  5703  00F912  6C                 	db	108	;'l'
  5704  00F913  65                 	db	101	;'e'
  5705  00F914  20                 	db	32
  5706  00F915  4C                 	db	76	;'L'
  5707  00F916  69                 	db	105	;'i'
  5708  00F917  76                 	db	118	;'v'
  5709  00F918  65                 	db	101	;'e'
  5710  00F919  20                 	db	32
  5711  00F91A  4D                 	db	77	;'M'
  5712  00F91B  65                 	db	101	;'e'
  5713  00F91C  61                 	db	97	;'a'
  5714  00F91D  73                 	db	115	;'s'
  5715  00F91E  75                 	db	117	;'u'
  5716  00F91F  72                 	db	114	;'r'
  5717  00F920  65                 	db	101	;'e'
  5718  00F921  6D                 	db	109	;'m'
  5719  00F922  65                 	db	101	;'e'
  5720  00F923  6E                 	db	110	;'n'
  5721  00F924  74                 	db	116	;'t'
  5722  00F925  73                 	db	115	;'s'
  5723  00F926  00                 	db	0
  5724  00F927  54                 	db	84	;'T'
  5725  00F928  68                 	db	104	;'h'
  5726  00F929  69                 	db	105	;'i'
  5727  00F92A  73                 	db	115	;'s'
  5728  00F92B  20                 	db	32
  5729  00F92C  74                 	db	116	;'t'
  5730  00F92D  65                 	db	101	;'e'
  5731  00F92E  78                 	db	120	;'x'
  5732  00F92F  74                 	db	116	;'t'
  5733  00F930  20                 	db	32
  5734  00F931  69                 	db	105	;'i'
  5735  00F932  73                 	db	115	;'s'
  5736  00F933  20                 	db	32
  5737  00F934  6E                 	db	110	;'n'
  5738  00F935  6F                 	db	111	;'o'
  5739  00F936  72                 	db	114	;'r'
  5740  00F937  6D                 	db	109	;'m'
  5741  00F938  61                 	db	97	;'a'
  5742  00F939  6C                 	db	108	;'l'
  5743  00F93A  0A                 	db	10
  5744  00F93B  0D                 	db	13
  5745  00F93C  0A                 	db	10
  5746  00F93D  0D                 	db	13
  5747  00F93E  00                 	db	0
  5748  00F93F  54                 	db	84	;'T'
  5749  00F940  68                 	db	104	;'h'
  5750  00F941  69                 	db	105	;'i'
  5751  00F942  73                 	db	115	;'s'
  5752  00F943  20                 	db	32
  5753  00F944  74                 	db	116	;'t'
  5754  00F945  65                 	db	101	;'e'
  5755  00F946  78                 	db	120	;'x'
  5756  00F947  74                 	db	116	;'t'
  5757  00F948  20                 	db	32
  5758  00F949  69                 	db	105	;'i'
  5759  00F94A  73                 	db	115	;'s'
  5760  00F94B  20                 	db	32
  5761  00F94C  72                 	db	114	;'r'
  5762  00F94D  65                 	db	101	;'e'
  5763  00F94E  76                 	db	118	;'v'
  5764  00F94F  65                 	db	101	;'e'
  5765  00F950  72                 	db	114	;'r'
  5766  00F951  73                 	db	115	;'s'
  5767  00F952  65                 	db	101	;'e'
  5768  00F953  64                 	db	100	;'d'
  5769  00F954  0A                 	db	10
  5770  00F955  0D                 	db	13
  5771  00F956  00                 	db	0
  5772  00F957  54                 	db	84	;'T'
  5773  00F958  68                 	db	104	;'h'
  5774  00F959  69                 	db	105	;'i'
  5775  00F95A  73                 	db	115	;'s'
  5776  00F95B  20                 	db	32
  5777  00F95C  74                 	db	116	;'t'
  5778  00F95D  65                 	db	101	;'e'
  5779  00F95E  78                 	db	120	;'x'
  5780  00F95F  74                 	db	116	;'t'
  5781  00F960  20                 	db	32
  5782  00F961  69                 	db	105	;'i'
  5783  00F962  73                 	db	115	;'s'
  5784  00F963  20                 	db	32
  5785  00F964  62                 	db	98	;'b'
  5786  00F965  6C                 	db	108	;'l'
  5787  00F966  69                 	db	105	;'i'
  5788  00F967  6E                 	db	110	;'n'
  5789  00F968  6B                 	db	107	;'k'
  5790  00F969  69                 	db	105	;'i'
  5791  00F96A  6E                 	db	110	;'n'
  5792  00F96B  67                 	db	103	;'g'
  5793  00F96C  0A                 	db	10
  5794  00F96D  0D                 	db	13
  5795  00F96E  00                 	db	0
  5796  00F96F                     STR_220:
  5797  00F96F  55                 	db	85	;'U'
  5798  00F970  41                 	db	65	;'A'
  5799  00F971  52                 	db	82	;'R'
  5800  00F972  54                 	db	84	;'T'
  5801  00F973  20                 	db	32
  5802  00F974  65                 	db	101	;'e'
  5803  00F975  72                 	db	114	;'r'
  5804  00F976  72                 	db	114	;'r'
  5805  00F977  6F                 	db	111	;'o'
  5806  00F978  72                 	db	114	;'r'
  5807  00F979  28                 	db	40
  5808  00F97A  73                 	db	115	;'s'
  5809  00F97B  29                 	db	41
  5810  00F97C  20                 	db	32
  5811  00F97D  63                 	db	99	;'c'
  5812  00F97E  6C                 	db	108	;'l'
  5813  00F97F  65                 	db	101	;'e'
  5814  00F980  61                 	db	97	;'a'
  5815  00F981  72                 	db	114	;'r'
  5816  00F982  65                 	db	101	;'e'
  5817  00F983  64                 	db	100	;'d'
  5818  00F984  0A                 	db	10
  5819  00F985  0D                 	db	13
  5820  00F986  00                 	db	0
  5821  00F987  54                 	db	84	;'T'
  5822  00F988  68                 	db	104	;'h'
  5823  00F989  69                 	db	105	;'i'
  5824  00F98A  73                 	db	115	;'s'
  5825  00F98B  20                 	db	32
  5826  00F98C  74                 	db	116	;'t'
  5827  00F98D  65                 	db	101	;'e'
  5828  00F98E  78                 	db	120	;'x'
  5829  00F98F  74                 	db	116	;'t'
  5830  00F990  20                 	db	32
  5831  00F991  69                 	db	105	;'i'
  5832  00F992  73                 	db	115	;'s'
  5833  00F993  20                 	db	32
  5834  00F994  6D                 	db	109	;'m'
  5835  00F995  61                 	db	97	;'a'
  5836  00F996  67                 	db	103	;'g'
  5837  00F997  65                 	db	101	;'e'
  5838  00F998  6E                 	db	110	;'n'
  5839  00F999  74                 	db	116	;'t'
  5840  00F99A  61                 	db	97	;'a'
  5841  00F99B  0A                 	db	10
  5842  00F99C  0D                 	db	13
  5843  00F99D  00                 	db	0
  5844  00F99E                     STR_264:
  5845  00F99E  20                 	db	32
  5846  00F99F  20                 	db	32
  5847  00F9A0  20                 	db	32
  5848  00F9A1  20                 	db	32
  5849  00F9A2  53                 	db	83	;'S'
  5850  00F9A3  79                 	db	121	;'y'
  5851  00F9A4  73                 	db	115	;'s'
  5852  00F9A5  74                 	db	116	;'t'
  5853  00F9A6  65                 	db	101	;'e'
  5854  00F9A7  6D                 	db	109	;'m'
  5855  00F9A8  20                 	db	32
  5856  00F9A9  56                 	db	86	;'V'
  5857  00F9AA  6F                 	db	111	;'o'
  5858  00F9AB  6C                 	db	108	;'l'
  5859  00F9AC  74                 	db	116	;'t'
  5860  00F9AD  61                 	db	97	;'a'
  5861  00F9AE  67                 	db	103	;'g'
  5862  00F9AF  65                 	db	101	;'e'
  5863  00F9B0  73                 	db	115	;'s'
  5864  00F9B1  3A                 	db	58	;':'
  5865  00F9B2  0A                 	db	10
  5866  00F9B3  0D                 	db	13
  5867  00F9B4  00                 	db	0
  5868  00F9B5                     STR_270:
  5869  00F9B5  20                 	db	32
  5870  00F9B6  20                 	db	32
  5871  00F9B7  20                 	db	32
  5872  00F9B8  20                 	db	32
  5873  00F9B9  53                 	db	83	;'S'
  5874  00F9BA  79                 	db	121	;'y'
  5875  00F9BB  73                 	db	115	;'s'
  5876  00F9BC  74                 	db	116	;'t'
  5877  00F9BD  65                 	db	101	;'e'
  5878  00F9BE  6D                 	db	109	;'m'
  5879  00F9BF  20                 	db	32
  5880  00F9C0  50                 	db	80	;'P'
  5881  00F9C1  6F                 	db	111	;'o'
  5882  00F9C2  77                 	db	119	;'w'
  5883  00F9C3  65                 	db	101	;'e'
  5884  00F9C4  72                 	db	114	;'r'
  5885  00F9C5  3A                 	db	58	;':'
  5886  00F9C6  1B                 	db	27
  5887  00F9C7  5B                 	db	91	;'['
  5888  00F9C8  4B                 	db	75	;'K'
  5889  00F9C9  0A                 	db	10
  5890  00F9CA  0D                 	db	13
  5891  00F9CB  00                 	db	0
  5892  00F9CC                     STR_216:
  5893  00F9CC  41                 	db	65	;'A'
  5894  00F9CD  44                 	db	68	;'D'
  5895  00F9CE  43                 	db	67	;'C'
  5896  00F9CF  20                 	db	32
  5897  00F9D0  45                 	db	69	;'E'
  5898  00F9D1  72                 	db	114	;'r'
  5899  00F9D2  72                 	db	114	;'r'
  5900  00F9D3  6F                 	db	111	;'o'
  5901  00F9D4  72                 	db	114	;'r'
  5902  00F9D5  28                 	db	40
  5903  00F9D6  73                 	db	115	;'s'
  5904  00F9D7  29                 	db	41
  5905  00F9D8  20                 	db	32
  5906  00F9D9  63                 	db	99	;'c'
  5907  00F9DA  6C                 	db	108	;'l'
  5908  00F9DB  65                 	db	101	;'e'
  5909  00F9DC  61                 	db	97	;'a'
  5910  00F9DD  72                 	db	114	;'r'
  5911  00F9DE  65                 	db	101	;'e'
  5912  00F9DF  64                 	db	100	;'d'
  5913  00F9E0  0A                 	db	10
  5914  00F9E1  0D                 	db	13
  5915  00F9E2  00                 	db	0
  5916  00F9E3                     STR_218:
  5917  00F9E3  49                 	db	73	;'I'
  5918  00F9E4  32                 	db	50	;'2'
  5919  00F9E5  43                 	db	67	;'C'
  5920  00F9E6  20                 	db	32
  5921  00F9E7  65                 	db	101	;'e'
  5922  00F9E8  72                 	db	114	;'r'
  5923  00F9E9  72                 	db	114	;'r'
  5924  00F9EA  6F                 	db	111	;'o'
  5925  00F9EB  72                 	db	114	;'r'
  5926  00F9EC  28                 	db	40
  5927  00F9ED  73                 	db	115	;'s'
  5928  00F9EE  29                 	db	41
  5929  00F9EF  20                 	db	32
  5930  00F9F0  63                 	db	99	;'c'
  5931  00F9F1  6C                 	db	108	;'l'
  5932  00F9F2  65                 	db	101	;'e'
  5933  00F9F3  61                 	db	97	;'a'
  5934  00F9F4  72                 	db	114	;'r'
  5935  00F9F5  65                 	db	101	;'e'
  5936  00F9F6  64                 	db	100	;'d'
  5937  00F9F7  0A                 	db	10
  5938  00F9F8  0D                 	db	13
  5939  00F9F9  00                 	db	0
  5940  00F9FA  54                 	db	84	;'T'
  5941  00F9FB  68                 	db	104	;'h'
  5942  00F9FC  69                 	db	105	;'i'
  5943  00F9FD  73                 	db	115	;'s'
  5944  00F9FE  20                 	db	32
  5945  00F9FF  74                 	db	116	;'t'
  5946  00FA00  65                 	db	101	;'e'
  5947  00FA01  78                 	db	120	;'x'
  5948  00FA02  74                 	db	116	;'t'
  5949  00FA03  20                 	db	32
  5950  00FA04  69                 	db	105	;'i'
  5951  00FA05  73                 	db	115	;'s'
  5952  00FA06  20                 	db	32
  5953  00FA07  79                 	db	121	;'y'
  5954  00FA08  65                 	db	101	;'e'
  5955  00FA09  6C                 	db	108	;'l'
  5956  00FA0A  6C                 	db	108	;'l'
  5957  00FA0B  6F                 	db	111	;'o'
  5958  00FA0C  77                 	db	119	;'w'
  5959  00FA0D  0A                 	db	10
  5960  00FA0E  0D                 	db	13
  5961  00FA0F  00                 	db	0
  5962  00FA10                     STR_230:
  5963  00FA10  41                 	db	65	;'A'
  5964  00FA11  76                 	db	118	;'v'
  5965  00FA12  61                 	db	97	;'a'
  5966  00FA13  69                 	db	105	;'i'
  5967  00FA14  6C                 	db	108	;'l'
  5968  00FA15  61                 	db	97	;'a'
  5969  00FA16  62                 	db	98	;'b'
  5970  00FA17  6C                 	db	108	;'l'
  5971  00FA18  65                 	db	101	;'e'
  5972  00FA19  20                 	db	32
  5973  00FA1A  43                 	db	67	;'C'
  5974  00FA1B  6F                 	db	111	;'o'
  5975  00FA1C  6D                 	db	109	;'m'
  5976  00FA1D  6D                 	db	109	;'m'
  5977  00FA1E  61                 	db	97	;'a'
  5978  00FA1F  6E                 	db	110	;'n'
  5979  00FA20  64                 	db	100	;'d'
  5980  00FA21  73                 	db	115	;'s'
  5981  00FA22  3A                 	db	58	;':'
  5982  00FA23  0A                 	db	10
  5983  00FA24  0D                 	db	13
  5984  00FA25  00                 	db	0
  5985  00FA26                     STR_222:
  5986  00FA26  43                 	db	67	;'C'
  5987  00FA27  75                 	db	117	;'u'
  5988  00FA28  72                 	db	114	;'r'
  5989  00FA29  72                 	db	114	;'r'
  5990  00FA2A  65                 	db	101	;'e'
  5991  00FA2B  6E                 	db	110	;'n'
  5992  00FA2C  74                 	db	116	;'t'
  5993  00FA2D  20                 	db	32
  5994  00FA2E  4D                 	db	77	;'M'
  5995  00FA2F  65                 	db	101	;'e'
  5996  00FA30  61                 	db	97	;'a'
  5997  00FA31  73                 	db	115	;'s'
  5998  00FA32  75                 	db	117	;'u'
  5999  00FA33  72                 	db	114	;'r'
  6000  00FA34  65                 	db	101	;'e'
  6001  00FA35  6D                 	db	109	;'m'
  6002  00FA36  65                 	db	101	;'e'
  6003  00FA37  6E                 	db	110	;'n'
  6004  00FA38  74                 	db	116	;'t'
  6005  00FA39  73                 	db	115	;'s'
  6006  00FA3A  3F                 	db	63	;'?'
  6007  00FA3B  00                 	db	0
  6008  00FA3C                     STR_31:
  6009  00FA3C  53                 	db	83	;'S'
  6010  00FA3D  74                 	db	116	;'t'
  6011  00FA3E  61                 	db	97	;'a'
  6012  00FA3F  63                 	db	99	;'c'
  6013  00FA40  6B                 	db	107	;'k'
  6014  00FA41  20                 	db	32
  6015  00FA42  55                 	db	85	;'U'
  6016  00FA43  6E                 	db	110	;'n'
  6017  00FA44  64                 	db	100	;'d'
  6018  00FA45  65                 	db	101	;'e'
  6019  00FA46  72                 	db	114	;'r'
  6020  00FA47  66                 	db	102	;'f'
  6021  00FA48  6C                 	db	108	;'l'
  6022  00FA49  6F                 	db	111	;'o'
  6023  00FA4A  77                 	db	119	;'w'
  6024  00FA4B  20                 	db	32
  6025  00FA4C  52                 	db	82	;'R'
  6026  00FA4D  65                 	db	101	;'e'
  6027  00FA4E  73                 	db	115	;'s'
  6028  00FA4F  65                 	db	101	;'e'
  6029  00FA50  74                 	db	116	;'t'
  6030  00FA51  00                 	db	0
  6031  00FA52  54                 	db	84	;'T'
  6032  00FA53  68                 	db	104	;'h'
  6033  00FA54  69                 	db	105	;'i'
  6034  00FA55  73                 	db	115	;'s'
  6035  00FA56  20                 	db	32
  6036  00FA57  74                 	db	116	;'t'
  6037  00FA58  65                 	db	101	;'e'
  6038  00FA59  78                 	db	120	;'x'
  6039  00FA5A  74                 	db	116	;'t'
  6040  00FA5B  20                 	db	32
  6041  00FA5C  69                 	db	105	;'i'
  6042  00FA5D  73                 	db	115	;'s'
  6043  00FA5E  20                 	db	32
  6044  00FA5F  62                 	db	98	;'b'
  6045  00FA60  6C                 	db	108	;'l'
  6046  00FA61  61                 	db	97	;'a'
  6047  00FA62  63                 	db	99	;'c'
  6048  00FA63  6B                 	db	107	;'k'
  6049  00FA64  0A                 	db	10
  6050  00FA65  0D                 	db	13
  6051  00FA66  00                 	db	0
  6052  00FA67  54                 	db	84	;'T'
  6053  00FA68  68                 	db	104	;'h'
  6054  00FA69  69                 	db	105	;'i'
  6055  00FA6A  73                 	db	115	;'s'
  6056  00FA6B  20                 	db	32
  6057  00FA6C  74                 	db	116	;'t'
  6058  00FA6D  65                 	db	101	;'e'
  6059  00FA6E  78                 	db	120	;'x'
  6060  00FA6F  74                 	db	116	;'t'
  6061  00FA70  20                 	db	32
  6062  00FA71  69                 	db	105	;'i'
  6063  00FA72  73                 	db	115	;'s'
  6064  00FA73  20                 	db	32
  6065  00FA74  67                 	db	103	;'g'
  6066  00FA75  72                 	db	114	;'r'
  6067  00FA76  65                 	db	101	;'e'
  6068  00FA77  65                 	db	101	;'e'
  6069  00FA78  6E                 	db	110	;'n'
  6070  00FA79  0A                 	db	10
  6071  00FA7A  0D                 	db	13
  6072  00FA7B  00                 	db	0
  6073  00FA7C                     STR_30:
  6074  00FA7C  53                 	db	83	;'S'
  6075  00FA7D  74                 	db	116	;'t'
  6076  00FA7E  61                 	db	97	;'a'
  6077  00FA7F  63                 	db	99	;'c'
  6078  00FA80  6B                 	db	107	;'k'
  6079  00FA81  20                 	db	32
  6080  00FA82  4F                 	db	79	;'O'
  6081  00FA83  76                 	db	118	;'v'
  6082  00FA84  65                 	db	101	;'e'
  6083  00FA85  72                 	db	114	;'r'
  6084  00FA86  66                 	db	102	;'f'
  6085  00FA87  6C                 	db	108	;'l'
  6086  00FA88  6F                 	db	111	;'o'
  6087  00FA89  77                 	db	119	;'w'
  6088  00FA8A  20                 	db	32
  6089  00FA8B  52                 	db	82	;'R'
  6090  00FA8C  65                 	db	101	;'e'
  6091  00FA8D  73                 	db	115	;'s'
  6092  00FA8E  65                 	db	101	;'e'
  6093  00FA8F  74                 	db	116	;'t'
  6094  00FA90  00                 	db	0
  6095  00FA91  54                 	db	84	;'T'
  6096  00FA92  68                 	db	104	;'h'
  6097  00FA93  69                 	db	105	;'i'
  6098  00FA94  73                 	db	115	;'s'
  6099  00FA95  20                 	db	32
  6100  00FA96  74                 	db	116	;'t'
  6101  00FA97  65                 	db	101	;'e'
  6102  00FA98  78                 	db	120	;'x'
  6103  00FA99  74                 	db	116	;'t'
  6104  00FA9A  20                 	db	32
  6105  00FA9B  69                 	db	105	;'i'
  6106  00FA9C  73                 	db	115	;'s'
  6107  00FA9D  20                 	db	32
  6108  00FA9E  62                 	db	98	;'b'
  6109  00FA9F  6F                 	db	111	;'o'
  6110  00FAA0  6C                 	db	108	;'l'
  6111  00FAA1  64                 	db	100	;'d'
  6112  00FAA2  0A                 	db	10
  6113  00FAA3  0D                 	db	13
  6114  00FAA4  00                 	db	0
  6115  00FAA5  54                 	db	84	;'T'
  6116  00FAA6  68                 	db	104	;'h'
  6117  00FAA7  69                 	db	105	;'i'
  6118  00FAA8  73                 	db	115	;'s'
  6119  00FAA9  20                 	db	32
  6120  00FAAA  74                 	db	116	;'t'
  6121  00FAAB  65                 	db	101	;'e'
  6122  00FAAC  78                 	db	120	;'x'
  6123  00FAAD  74                 	db	116	;'t'
  6124  00FAAE  20                 	db	32
  6125  00FAAF  69                 	db	105	;'i'
  6126  00FAB0  73                 	db	115	;'s'
  6127  00FAB1  20                 	db	32
  6128  00FAB2  62                 	db	98	;'b'
  6129  00FAB3  6C                 	db	108	;'l'
  6130  00FAB4  75                 	db	117	;'u'
  6131  00FAB5  65                 	db	101	;'e'
  6132  00FAB6  0A                 	db	10
  6133  00FAB7  0D                 	db	13
  6134  00FAB8  00                 	db	0
  6135  00FAB9  54                 	db	84	;'T'
  6136  00FABA  68                 	db	104	;'h'
  6137  00FABB  69                 	db	105	;'i'
  6138  00FABC  73                 	db	115	;'s'
  6139  00FABD  20                 	db	32
  6140  00FABE  74                 	db	116	;'t'
  6141  00FABF  65                 	db	101	;'e'
  6142  00FAC0  78                 	db	120	;'x'
  6143  00FAC1  74                 	db	116	;'t'
  6144  00FAC2  20                 	db	32
  6145  00FAC3  69                 	db	105	;'i'
  6146  00FAC4  73                 	db	115	;'s'
  6147  00FAC5  20                 	db	32
  6148  00FAC6  63                 	db	99	;'c'
  6149  00FAC7  79                 	db	121	;'y'
  6150  00FAC8  61                 	db	97	;'a'
  6151  00FAC9  6E                 	db	110	;'n'
  6152  00FACA  0A                 	db	10
  6153  00FACB  0D                 	db	13
  6154  00FACC  00                 	db	0
  6155  00FACD  54                 	db	84	;'T'
  6156  00FACE  68                 	db	104	;'h'
  6157  00FACF  69                 	db	105	;'i'
  6158  00FAD0  73                 	db	115	;'s'
  6159  00FAD1  20                 	db	32
  6160  00FAD2  74                 	db	116	;'t'
  6161  00FAD3  65                 	db	101	;'e'
  6162  00FAD4  78                 	db	120	;'x'
  6163  00FAD5  74                 	db	116	;'t'
  6164  00FAD6  20                 	db	32
  6165  00FAD7  69                 	db	105	;'i'
  6166  00FAD8  73                 	db	115	;'s'
  6167  00FAD9  20                 	db	32
  6168  00FADA  72                 	db	114	;'r'
  6169  00FADB  65                 	db	101	;'e'
  6170  00FADC  64                 	db	100	;'d'
  6171  00FADD  0A                 	db	10
  6172  00FADE  0D                 	db	13
  6173  00FADF  00                 	db	0
  6174  00FAE0                     STR_26:
  6175  00FAE0  4D                 	db	77	;'M'
  6176  00FAE1  61                 	db	97	;'a'
  6177  00FAE2  73                 	db	115	;'s'
  6178  00FAE3  74                 	db	116	;'t'
  6179  00FAE4  65                 	db	101	;'e'
  6180  00FAE5  72                 	db	114	;'r'
  6181  00FAE6  20                 	db	32
  6182  00FAE7  43                 	db	67	;'C'
  6183  00FAE8  6C                 	db	108	;'l'
  6184  00FAE9  65                 	db	101	;'e'
  6185  00FAEA  61                 	db	97	;'a'
  6186  00FAEB  72                 	db	114	;'r'
  6187  00FAEC  20                 	db	32
  6188  00FAED  52                 	db	82	;'R'
  6189  00FAEE  65                 	db	101	;'e'
  6190  00FAEF  73                 	db	115	;'s'
  6191  00FAF0  65                 	db	101	;'e'
  6192  00FAF1  74                 	db	116	;'t'
  6193  00FAF2  00                 	db	0
  6194  00FAF3  55                 	db	85	;'U'
  6195  00FAF4  53                 	db	83	;'S'
  6196  00FAF5  42                 	db	66	;'B'
  6197  00FAF6  20                 	db	32
  6198  00FAF7  55                 	db	85	;'U'
  6199  00FAF8  41                 	db	65	;'A'
  6200  00FAF9  52                 	db	82	;'R'
  6201  00FAFA  54                 	db	84	;'T'
  6202  00FAFB  20                 	db	32
  6203  00FAFC  54                 	db	84	;'T'
  6204  00FAFD  65                 	db	101	;'e'
  6205  00FAFE  73                 	db	115	;'s'
  6206  00FAFF  74                 	db	116	;'t'
  6207  00FB00  0A                 	db	10
  6208  00FB01  0D                 	db	13
  6209  00FB02  0A                 	db	10
  6210  00FB03  0D                 	db	13
  6211  00FB04  00                 	db	0
  6212  00FB05                     STR_219:
  6213  00FB05  43                 	db	67	;'C'
  6214  00FB06  6C                 	db	108	;'l'
  6215  00FB07  65                 	db	101	;'e'
  6216  00FB08  61                 	db	97	;'a'
  6217  00FB09  72                 	db	114	;'r'
  6218  00FB0A  20                 	db	32
  6219  00FB0B  55                 	db	85	;'U'
  6220  00FB0C  41                 	db	65	;'A'
  6221  00FB0D  52                 	db	82	;'R'
  6222  00FB0E  54                 	db	84	;'T'
  6223  00FB0F  20                 	db	32
  6224  00FB10  45                 	db	69	;'E'
  6225  00FB11  72                 	db	114	;'r'
  6226  00FB12  72                 	db	114	;'r'
  6227  00FB13  6F                 	db	111	;'o'
  6228  00FB14  72                 	db	114	;'r'
  6229  00FB15  73                 	db	115	;'s'
  6230  00FB16  00                 	db	0
  6231  00FB17                     STR_357:
  6232  00FB17  30                 	db	48	;'0'
  6233  00FB18  31                 	db	49	;'1'
  6234  00FB19  32                 	db	50	;'2'
  6235  00FB1A  33                 	db	51	;'3'
  6236  00FB1B  34                 	db	52	;'4'
  6237  00FB1C  35                 	db	53	;'5'
  6238  00FB1D  36                 	db	54	;'6'
  6239  00FB1E  37                 	db	55	;'7'
  6240  00FB1F  38                 	db	56	;'8'
  6241  00FB20  39                 	db	57	;'9'
  6242  00FB21  41                 	db	65	;'A'
  6243  00FB22  42                 	db	66	;'B'
  6244  00FB23  43                 	db	67	;'C'
  6245  00FB24  44                 	db	68	;'D'
  6246  00FB25  45                 	db	69	;'E'
  6247  00FB26  46                 	db	70	;'F'
  6248  00FB27  00                 	db	0
  6249  00FB28                     STR_217:
  6250  00FB28  43                 	db	67	;'C'
  6251  00FB29  6C                 	db	108	;'l'
  6252  00FB2A  65                 	db	101	;'e'
  6253  00FB2B  61                 	db	97	;'a'
  6254  00FB2C  72                 	db	114	;'r'
  6255  00FB2D  20                 	db	32
  6256  00FB2E  49                 	db	73	;'I'
  6257  00FB2F  32                 	db	50	;'2'
  6258  00FB30  43                 	db	67	;'C'
  6259  00FB31  20                 	db	32
  6260  00FB32  45                 	db	69	;'E'
  6261  00FB33  72                 	db	114	;'r'
  6262  00FB34  72                 	db	114	;'r'
  6263  00FB35  6F                 	db	111	;'o'
  6264  00FB36  72                 	db	114	;'r'
  6265  00FB37  73                 	db	115	;'s'
  6266  00FB38  00                 	db	0
  6267  00FB39                     STR_215:
  6268  00FB39  43                 	db	67	;'C'
  6269  00FB3A  6C                 	db	108	;'l'
  6270  00FB3B  65                 	db	101	;'e'
  6271  00FB3C  61                 	db	97	;'a'
  6272  00FB3D  72                 	db	114	;'r'
  6273  00FB3E  20                 	db	32
  6274  00FB3F  41                 	db	65	;'A'
  6275  00FB40  44                 	db	68	;'D'
  6276  00FB41  43                 	db	67	;'C'
  6277  00FB42  20                 	db	32
  6278  00FB43  45                 	db	69	;'E'
  6279  00FB44  72                 	db	114	;'r'
  6280  00FB45  72                 	db	114	;'r'
  6281  00FB46  6F                 	db	111	;'o'
  6282  00FB47  72                 	db	114	;'r'
  6283  00FB48  73                 	db	115	;'s'
  6284  00FB49  00                 	db	0
  6285  00FB4A                     STR_76:
  6286  00FB4A  76                 	db	118	;'v'
  6287  00FB4B  69                 	db	105	;'i'
  6288  00FB4C  61                 	db	97	;'a'
  6289  00FB4D  20                 	db	32
  6290  00FB4E  55                 	db	85	;'U'
  6291  00FB4F  53                 	db	83	;'S'
  6292  00FB50  42                 	db	66	;'B'
  6293  00FB51  2C                 	db	44
  6294  00FB52  20                 	db	32
  6295  00FB53  27                 	db	39
  6296  00FB54  48                 	db	72	;'H'
  6297  00FB55  65                 	db	101	;'e'
  6298  00FB56  6C                 	db	108	;'l'
  6299  00FB57  70                 	db	112	;'p'
  6300  00FB58  27                 	db	39
  6301  00FB59  00                 	db	0
  6302  00FB5A                     STR_69:
  6303  00FB5A  43                 	db	67	;'C'
  6304  00FB5B  4F                 	db	79	;'O'
  6305  00FB5C  4D                 	db	77	;'M'
  6306  00FB5D  20                 	db	32
  6307  00FB5E  50                 	db	80	;'P'
  6308  00FB5F  6F                 	db	111	;'o'
  6309  00FB60  72                 	db	114	;'r'
  6310  00FB61  74                 	db	116	;'t'
  6311  00FB62  20                 	db	32
  6312  00FB63  53                 	db	83	;'S'
  6313  00FB64  65                 	db	101	;'e'
  6314  00FB65  74                 	db	116	;'t'
  6315  00FB66  75                 	db	117	;'u'
  6316  00FB67  70                 	db	112	;'p'
  6317  00FB68  3A                 	db	58	;':'
  6318  00FB69  00                 	db	0
  6319  00FB6A                     STR_64:
  6320  00FB6A  43                 	db	67	;'C'
  6321  00FB6B  61                 	db	97	;'a'
  6322  00FB6C  75                 	db	117	;'u'
  6323  00FB6D  73                 	db	115	;'s'
  6324  00FB6E  65                 	db	101	;'e'
  6325  00FB6F  20                 	db	32
  6326  00FB70  6F                 	db	111	;'o'
  6327  00FB71  66                 	db	102	;'f'
  6328  00FB72  20                 	db	32
  6329  00FB73  52                 	db	82	;'R'
  6330  00FB74  65                 	db	101	;'e'
  6331  00FB75  73                 	db	115	;'s'
  6332  00FB76  65                 	db	101	;'e'
  6333  00FB77  74                 	db	116	;'t'
  6334  00FB78  3A                 	db	58	;':'
  6335  00FB79  00                 	db	0
  6336  00FB7A                     STR_63:
  6337  00FB7A  44                 	db	68	;'D'
  6338  00FB7B  69                 	db	105	;'i'
  6339  00FB7C  67                 	db	103	;'g'
  6340  00FB7D  69                 	db	105	;'i'
  6341  00FB7E  74                 	db	116	;'t'
  6342  00FB7F  61                 	db	97	;'a'
  6343  00FB80  6C                 	db	108	;'l'
  6344  00FB81  20                 	db	32
  6345  00FB82  4D                 	db	77	;'M'
  6346  00FB83  6F                 	db	111	;'o'
  6347  00FB84  6E                 	db	110	;'n'
  6348  00FB85  69                 	db	105	;'i'
  6349  00FB86  74                 	db	116	;'t'
  6350  00FB87  6F                 	db	111	;'o'
  6351  00FB88  72                 	db	114	;'r'
  6352  00FB89  00                 	db	0
  6353  00FB8A                     STR_71:
  6354  00FB8A  38                 	db	56	;'8'
  6355  00FB8B  62                 	db	98	;'b'
  6356  00FB8C  69                 	db	105	;'i'
  6357  00FB8D  74                 	db	116	;'t'
  6358  00FB8E  2C                 	db	44
  6359  00FB8F  20                 	db	32
  6360  00FB90  6E                 	db	110	;'n'
  6361  00FB91  6F                 	db	111	;'o'
  6362  00FB92  20                 	db	32
  6363  00FB93  70                 	db	112	;'p'
  6364  00FB94  61                 	db	97	;'a'
  6365  00FB95  72                 	db	114	;'r'
  6366  00FB96  69                 	db	105	;'i'
  6367  00FB97  74                 	db	116	;'t'
  6368  00FB98  79                 	db	121	;'y'
  6369  00FB99  00                 	db	0
  6370  00FB9A                     STR_23:
  6371  00FB9A  55                 	db	85	;'U'
  6372  00FB9B  6E                 	db	110	;'n'
  6373  00FB9C  64                 	db	100	;'d'
  6374  00FB9D  65                 	db	101	;'e'
  6375  00FB9E  66                 	db	102	;'f'
  6376  00FB9F  69                 	db	105	;'i'
  6377  00FBA0  6E                 	db	110	;'n'
  6378  00FBA1  65                 	db	101	;'e'
  6379  00FBA2  64                 	db	100	;'d'
  6380  00FBA3  20                 	db	32
  6381  00FBA4  52                 	db	82	;'R'
  6382  00FBA5  65                 	db	101	;'e'
  6383  00FBA6  73                 	db	115	;'s'
  6384  00FBA7  65                 	db	101	;'e'
  6385  00FBA8  74                 	db	116	;'t'
  6386  00FBA9  00                 	db	0
  6387  00FBAA                     STR_25:
  6388  00FBAA  42                 	db	66	;'B'
  6389  00FBAB  72                 	db	114	;'r'
  6390  00FBAC  6F                 	db	111	;'o'
  6391  00FBAD  77                 	db	119	;'w'
  6392  00FBAE  6E                 	db	110	;'n'
  6393  00FBAF  20                 	db	32
  6394  00FBB0  4F                 	db	79	;'O'
  6395  00FBB1  75                 	db	117	;'u'
  6396  00FBB2  74                 	db	116	;'t'
  6397  00FBB3  20                 	db	32
  6398  00FBB4  52                 	db	82	;'R'
  6399  00FBB5  65                 	db	101	;'e'
  6400  00FBB6  73                 	db	115	;'s'
  6401  00FBB7  65                 	db	101	;'e'
  6402  00FBB8  74                 	db	116	;'t'
  6403  00FBB9  00                 	db	0
  6404  00FBBA                     STR_199:
  6405  00FBBA  44                 	db	68	;'D'
  6406  00FBBB  65                 	db	101	;'e'
  6407  00FBBC  76                 	db	118	;'v'
  6408  00FBBD  69                 	db	105	;'i'
  6409  00FBBE  63                 	db	99	;'c'
  6410  00FBBF  65                 	db	101	;'e'
  6411  00FBC0  20                 	db	32
  6412  00FBC1  53                 	db	83	;'S'
  6413  00FBC2  74                 	db	116	;'t'
  6414  00FBC3  61                 	db	97	;'a'
  6415  00FBC4  74                 	db	116	;'t'
  6416  00FBC5  75                 	db	117	;'u'
  6417  00FBC6  73                 	db	115	;'s'
  6418  00FBC7  3F                 	db	63	;'?'
  6419  00FBC8  00                 	db	0
  6420  00FBC9                     STR_166:
  6421  00FBC9  4F                 	db	79	;'O'
  6422  00FBCA  75                 	db	117	;'u'
  6423  00FBCB  74                 	db	116	;'t'
  6424  00FBCC  70                 	db	112	;'p'
  6425  00FBCD  75                 	db	117	;'u'
  6426  00FBCE  74                 	db	116	;'t'
  6427  00FBCF  20                 	db	32
  6428  00FBD0  43                 	db	67	;'C'
  6429  00FBD1  68                 	db	104	;'h'
  6430  00FBD2  61                 	db	97	;'a'
  6431  00FBD3  72                 	db	114	;'r'
  6432  00FBD4  67                 	db	103	;'g'
  6433  00FBD5  65                 	db	101	;'e'
  6434  00FBD6  3A                 	db	58	;':'
  6435  00FBD7  00                 	db	0
  6436  00FBD8                     STR_77:
  6437  00FBD8  43                 	db	67	;'C'
  6438  00FBD9  68                 	db	104	;'h'
  6439  00FBDA  61                 	db	97	;'a'
  6440  00FBDB  72                 	db	114	;'r'
  6441  00FBDC  67                 	db	103	;'g'
  6442  00FBDD  65                 	db	101	;'e'
  6443  00FBDE  20                 	db	32
  6444  00FBDF  53                 	db	83	;'S'
  6445  00FBE0  74                 	db	116	;'t'
  6446  00FBE1  61                 	db	97	;'a'
  6447  00FBE2  74                 	db	116	;'t'
  6448  00FBE3  75                 	db	117	;'u'
  6449  00FBE4  73                 	db	115	;'s'
  6450  00FBE5  3A                 	db	58	;':'
  6451  00FBE6  00                 	db	0
  6452  00FBE7                     STR_171:
  6453  00FBE7  4F                 	db	79	;'O'
  6454  00FBE8  75                 	db	117	;'u'
  6455  00FBE9  74                 	db	116	;'t'
  6456  00FBEA  70                 	db	112	;'p'
  6457  00FBEB  75                 	db	117	;'u'
  6458  00FBEC  74                 	db	116	;'t'
  6459  00FBED  20                 	db	32
  6460  00FBEE  45                 	db	69	;'E'
  6461  00FBEF  6E                 	db	110	;'n'
  6462  00FBF0  65                 	db	101	;'e'
  6463  00FBF1  72                 	db	114	;'r'
  6464  00FBF2  67                 	db	103	;'g'
  6465  00FBF3  79                 	db	121	;'y'
  6466  00FBF4  3A                 	db	58	;':'
  6467  00FBF5  00                 	db	0
  6468  00FBF6                     STR_72:
  6469  00FBF6  31                 	db	49	;'1'
  6470  00FBF7  20                 	db	32
  6471  00FBF8  73                 	db	115	;'s'
  6472  00FBF9  74                 	db	116	;'t'
  6473  00FBFA  70                 	db	112	;'p'
  6474  00FBFB  2C                 	db	44
  6475  00FBFC  20                 	db	32
  6476  00FBFD  6E                 	db	110	;'n'
  6477  00FBFE  6F                 	db	111	;'o'
  6478  00FBFF  20                 	db	32
  6479  00FC00  66                 	db	102	;'f'
  6480  00FC01  6C                 	db	108	;'l'
  6481  00FC02  6F                 	db	111	;'o'
  6482  00FC03  77                 	db	119	;'w'
  6483  00FC04  00                 	db	0
  6484  00FC05                     STR_39:
  6485  00FC05  52                 	db	82	;'R'
  6486  00FC06  45                 	db	69	;'E'
  6487  00FC07  53                 	db	83	;'S'
  6488  00FC08  45                 	db	69	;'E'
  6489  00FC09  54                 	db	84	;'T'
  6490  00FC0A  20                 	db	32
  6491  00FC0B  45                 	db	69	;'E'
  6492  00FC0C  78                 	db	120	;'x'
  6493  00FC0D  65                 	db	101	;'e'
  6494  00FC0E  63                 	db	99	;'c'
  6495  00FC0F  75                 	db	117	;'u'
  6496  00FC10  74                 	db	116	;'t'
  6497  00FC11  65                 	db	101	;'e'
  6498  00FC12  64                 	db	100	;'d'
  6499  00FC13  00                 	db	0
  6500  00FC14                     STR_24:
  6501  00FC14  50                 	db	80	;'P'
  6502  00FC15  6F                 	db	111	;'o'
  6503  00FC16  77                 	db	119	;'w'
  6504  00FC17  65                 	db	101	;'e'
  6505  00FC18  72                 	db	114	;'r'
  6506  00FC19  20                 	db	32
  6507  00FC1A  4F                 	db	79	;'O'
  6508  00FC1B  6E                 	db	110	;'n'
  6509  00FC1C  20                 	db	32
  6510  00FC1D  52                 	db	82	;'R'
  6511  00FC1E  65                 	db	101	;'e'
  6512  00FC1F  73                 	db	115	;'s'
  6513  00FC20  65                 	db	101	;'e'
  6514  00FC21  74                 	db	116	;'t'
  6515  00FC22  00                 	db	0
  6516  00FC23                     STR_245:
  6517  00FC23  20                 	db	32
  6518  00FC24  20                 	db	32
  6519  00FC25  20                 	db	32
  6520  00FC26  20                 	db	32
  6521  00FC27  20                 	db	32
  6522  00FC28  20                 	db	32
  6523  00FC29  20                 	db	32
  6524  00FC2A  20                 	db	32
  6525  00FC2B  46                 	db	70	;'F'
  6526  00FC2C  56                 	db	86	;'V'
  6527  00FC2D  52                 	db	82	;'R'
  6528  00FC2E  0A                 	db	10
  6529  00FC2F  0D                 	db	13
  6530  00FC30  00                 	db	0
  6531  00FC31                     STR_221:
  6532  00FC31  45                 	db	69	;'E'
  6533  00FC32  72                 	db	114	;'r'
  6534  00FC33  72                 	db	114	;'r'
  6535  00FC34  6F                 	db	111	;'o'
  6536  00FC35  72                 	db	114	;'r'
  6537  00FC36  20                 	db	32
  6538  00FC37  53                 	db	83	;'S'
  6539  00FC38  74                 	db	116	;'t'
  6540  00FC39  61                 	db	97	;'a'
  6541  00FC3A  74                 	db	116	;'t'
  6542  00FC3B  75                 	db	117	;'u'
  6543  00FC3C  73                 	db	115	;'s'
  6544  00FC3D  3F                 	db	63	;'?'
  6545  00FC3E  00                 	db	0
  6546  00FC3F                     STR_62:
  6547  00FC3F  51                 	db	81	;'Q'
  6548  00FC40  49                 	db	73	;'I'
  6549  00FC41  20                 	db	32
  6550  00FC42  43                 	db	67	;'C'
  6551  00FC43  68                 	db	104	;'h'
  6552  00FC44  61                 	db	97	;'a'
  6553  00FC45  72                 	db	114	;'r'
  6554  00FC46  67                 	db	103	;'g'
  6555  00FC47  65                 	db	101	;'e'
  6556  00FC48  72                 	db	114	;'r'
  6557  00FC49  20                 	db	32
  6558  00FC4A  77                 	db	119	;'w'
  6559  00FC4B  2F                 	db	47
  6560  00FC4C  00                 	db	0
  6561  00FC4D                     STR_80:
  6562  00FC4D  2B                 	db	43
  6563  00FC4E  31                 	db	49	;'1'
  6564  00FC4F  32                 	db	50	;'2'
  6565  00FC50  56                 	db	86	;'V'
  6566  00FC51  20                 	db	32
  6567  00FC52  56                 	db	86	;'V'
  6568  00FC53  6F                 	db	111	;'o'
  6569  00FC54  6C                 	db	108	;'l'
  6570  00FC55  74                 	db	116	;'t'
  6571  00FC56  61                 	db	97	;'a'
  6572  00FC57  67                 	db	103	;'g'
  6573  00FC58  65                 	db	101	;'e'
  6574  00FC59  3A                 	db	58	;':'
  6575  00FC5A  00                 	db	0
  6576  00FC5B                     STR_137:
  6577  00FC5B  44                 	db	68	;'D'
  6578  00FC5C  65                 	db	101	;'e'
  6579  00FC5D  76                 	db	118	;'v'
  6580  00FC5E  2E                 	db	46
  6581  00FC5F  20                 	db	32
  6582  00FC60  4F                 	db	79	;'O'
  6583  00FC61  6E                 	db	110	;'n'
  6584  00FC62  20                 	db	32
  6585  00FC63  54                 	db	84	;'T'
  6586  00FC64  69                 	db	105	;'i'
  6587  00FC65  6D                 	db	109	;'m'
  6588  00FC66  65                 	db	101	;'e'
  6589  00FC67  3A                 	db	58	;':'
  6590  00FC68  00                 	db	0
  6591  00FC69                     STR_119:
  6592  00FC69  41                 	db	65	;'A'
  6593  00FC6A  6D                 	db	109	;'m'
  6594  00FC6B  62                 	db	98	;'b'
  6595  00FC6C  69                 	db	105	;'i'
  6596  00FC6D  65                 	db	101	;'e'
  6597  00FC6E  6E                 	db	110	;'n'
  6598  00FC6F  74                 	db	116	;'t'
  6599  00FC70  20                 	db	32
  6600  00FC71  54                 	db	84	;'T'
  6601  00FC72  65                 	db	101	;'e'
  6602  00FC73  6D                 	db	109	;'m'
  6603  00FC74  70                 	db	112	;'p'
  6604  00FC75  3A                 	db	58	;':'
  6605  00FC76  00                 	db	0
  6606  00FC77                     STR_127:
  6607  00FC77  2B                 	db	43
  6608  00FC78  35                 	db	53	;'5'
  6609  00FC79  56                 	db	86	;'V'
  6610  00FC7A  20                 	db	32
  6611  00FC7B  53                 	db	83	;'S'
  6612  00FC7C  77                 	db	119	;'w'
  6613  00FC7D  2E                 	db	46
  6614  00FC7E  20                 	db	32
  6615  00FC7F  46                 	db	70	;'F'
  6616  00FC80  72                 	db	114	;'r'
  6617  00FC81  65                 	db	101	;'e'
  6618  00FC82  71                 	db	113	;'q'
  6619  00FC83  3A                 	db	58	;':'
  6620  00FC84  00                 	db	0
  6621  00FC85                     STR_101:
  6622  00FC85  4F                 	db	79	;'O'
  6623  00FC86  75                 	db	117	;'u'
  6624  00FC87  74                 	db	116	;'t'
  6625  00FC88  70                 	db	112	;'p'
  6626  00FC89  75                 	db	117	;'u'
  6627  00FC8A  74                 	db	116	;'t'
  6628  00FC8B  20                 	db	32
  6629  00FC8C  50                 	db	80	;'P'
  6630  00FC8D  6F                 	db	111	;'o'
  6631  00FC8E  77                 	db	119	;'w'
  6632  00FC8F  65                 	db	101	;'e'
  6633  00FC90  72                 	db	114	;'r'
  6634  00FC91  3A                 	db	58	;':'
  6635  00FC92  00                 	db	0
  6636  00FC93                     STR_88:
  6637  00FC93  2B                 	db	43
  6638  00FC94  31                 	db	49	;'1'
  6639  00FC95  32                 	db	50	;'2'
  6640  00FC96  56                 	db	86	;'V'
  6641  00FC97  20                 	db	32
  6642  00FC98  43                 	db	67	;'C'
  6643  00FC99  75                 	db	117	;'u'
  6644  00FC9A  72                 	db	114	;'r'
  6645  00FC9B  72                 	db	114	;'r'
  6646  00FC9C  65                 	db	101	;'e'
  6647  00FC9D  6E                 	db	110	;'n'
  6648  00FC9E  74                 	db	116	;'t'
  6649  00FC9F  3A                 	db	58	;':'
  6650  00FCA0  00                 	db	0
  6651  00FCA1                     STR_73:
  6652  00FCA1  42                 	db	66	;'B'
  6653  00FCA2  6F                 	db	111	;'o'
  6654  00FCA3  6F                 	db	111	;'o'
  6655  00FCA4  74                 	db	116	;'t'
  6656  00FCA5  20                 	db	32
  6657  00FCA6  43                 	db	67	;'C'
  6658  00FCA7  6F                 	db	111	;'o'
  6659  00FCA8  6D                 	db	109	;'m'
  6660  00FCA9  70                 	db	112	;'p'
  6661  00FCAA  6C                 	db	108	;'l'
  6662  00FCAB  65                 	db	101	;'e'
  6663  00FCAC  74                 	db	116	;'t'
  6664  00FCAD  65                 	db	101	;'e'
  6665  00FCAE  00                 	db	0
  6666  00FCAF                     STR_75:
  6667  00FCAF  4D                 	db	77	;'M'
  6668  00FCB0  6F                 	db	111	;'o'
  6669  00FCB1  72                 	db	114	;'r'
  6670  00FCB2  65                 	db	101	;'e'
  6671  00FCB3  20                 	db	32
  6672  00FCB4  53                 	db	83	;'S'
  6673  00FCB5  65                 	db	101	;'e'
  6674  00FCB6  74                 	db	116	;'t'
  6675  00FCB7  74                 	db	116	;'t'
  6676  00FCB8  69                 	db	105	;'i'
  6677  00FCB9  6E                 	db	110	;'n'
  6678  00FCBA  67                 	db	103	;'g'
  6679  00FCBB  73                 	db	115	;'s'
  6680  00FCBC  00                 	db	0
  6681  00FCBD                     STR_20:
  6682  00FCBD  46                 	db	70	;'F'
  6683  00FCBE  75                 	db	117	;'u'
  6684  00FCBF  6C                 	db	108	;'l'
  6685  00FCC0  6C                 	db	108	;'l'
  6686  00FCC1  79                 	db	121	;'y'
  6687  00FCC2  20                 	db	32
  6688  00FCC3  43                 	db	67	;'C'
  6689  00FCC4  68                 	db	104	;'h'
  6690  00FCC5  61                 	db	97	;'a'
  6691  00FCC6  72                 	db	114	;'r'
  6692  00FCC7  67                 	db	103	;'g'
  6693  00FCC8  65                 	db	101	;'e'
  6694  00FCC9  64                 	db	100	;'d'
  6695  00FCCA  00                 	db	0
  6696  00FCCB                     STR_15:
  6697  00FCCB  66                 	db	102	;'f'
  6698  00FCCC  75                 	db	117	;'u'
  6699  00FCCD  6C                 	db	108	;'l'
  6700  00FCCE  6C                 	db	108	;'l'
  6701  00FCCF  79                 	db	121	;'y'
  6702  00FCD0  20                 	db	32
  6703  00FCD1  63                 	db	99	;'c'
  6704  00FCD2  68                 	db	104	;'h'
  6705  00FCD3  61                 	db	97	;'a'
  6706  00FCD4  72                 	db	114	;'r'
  6707  00FCD5  67                 	db	103	;'g'
  6708  00FCD6  65                 	db	101	;'e'
  6709  00FCD7  64                 	db	100	;'d'
  6710  00FCD8  00                 	db	0
  6711  00FCD9                     STR_67:
  6712  00FCD9  52                 	db	82	;'R'
  6713  00FCDA  65                 	db	101	;'e'
  6714  00FCDB  76                 	db	118	;'v'
  6715  00FCDC  69                 	db	105	;'i'
  6716  00FCDD  73                 	db	115	;'s'
  6717  00FCDE  69                 	db	105	;'i'
  6718  00FCDF  6F                 	db	111	;'o'
  6719  00FCE0  6E                 	db	110	;'n'
  6720  00FCE1  20                 	db	32
  6721  00FCE2  49                 	db	73	;'I'
  6722  00FCE3  44                 	db	68	;'D'
  6723  00FCE4  3A                 	db	58	;':'
  6724  00FCE5  00                 	db	0
  6725  00FCE6                     STR_84:
  6726  00FCE6  2B                 	db	43
  6727  00FCE7  35                 	db	53	;'5'
  6728  00FCE8  56                 	db	86	;'V'
  6729  00FCE9  20                 	db	32
  6730  00FCEA  56                 	db	86	;'V'
  6731  00FCEB  6F                 	db	111	;'o'
  6732  00FCEC  6C                 	db	108	;'l'
  6733  00FCED  74                 	db	116	;'t'
  6734  00FCEE  61                 	db	97	;'a'
  6735  00FCEF  67                 	db	103	;'g'
  6736  00FCF0  65                 	db	101	;'e'
  6737  00FCF1  3A                 	db	58	;':'
  6738  00FCF2  00                 	db	0
  6739  00FCF3                     STR_153:
  6740  00FCF3  43                 	db	67	;'C'
  6741  00FCF4  68                 	db	104	;'h'
  6742  00FCF5  61                 	db	97	;'a'
  6743  00FCF6  72                 	db	114	;'r'
  6744  00FCF7  67                 	db	103	;'g'
  6745  00FCF8  65                 	db	101	;'e'
  6746  00FCF9  20                 	db	32
  6747  00FCFA  54                 	db	84	;'T'
  6748  00FCFB  69                 	db	105	;'i'
  6749  00FCFC  6D                 	db	109	;'m'
  6750  00FCFD  65                 	db	101	;'e'
  6751  00FCFE  3A                 	db	58	;':'
  6752  00FCFF  00                 	db	0
  6753  00FD00                     STR_132:
  6754  00FD00  51                 	db	81	;'Q'
  6755  00FD01  49                 	db	73	;'I'
  6756  00FD02  20                 	db	32
  6757  00FD03  53                 	db	83	;'S'
  6758  00FD04  77                 	db	119	;'w'
  6759  00FD05  2E                 	db	46
  6760  00FD06  20                 	db	32
  6761  00FD07  46                 	db	70	;'F'
  6762  00FD08  72                 	db	114	;'r'
  6763  00FD09  65                 	db	101	;'e'
  6764  00FD0A  71                 	db	113	;'q'
  6765  00FD0B  3A                 	db	58	;':'
  6766  00FD0C  00                 	db	0
  6767  00FD0D                     STR_97:
  6768  00FD0D  49                 	db	73	;'I'
  6769  00FD0E  6E                 	db	110	;'n'
  6770  00FD0F  70                 	db	112	;'p'
  6771  00FD10  75                 	db	117	;'u'
  6772  00FD11  74                 	db	116	;'t'
  6773  00FD12  20                 	db	32
  6774  00FD13  50                 	db	80	;'P'
  6775  00FD14  6F                 	db	111	;'o'
  6776  00FD15  77                 	db	119	;'w'
  6777  00FD16  65                 	db	101	;'e'
  6778  00FD17  72                 	db	114	;'r'
  6779  00FD18  3A                 	db	58	;':'
  6780  00FD19  00                 	db	0
  6781  00FD1A                     STR_93:
  6782  00FD1A  4E                 	db	78	;'N'
  6783  00FD1B  6F                 	db	111	;'o'
  6784  00FD1C  74                 	db	116	;'t'
  6785  00FD1D  20                 	db	32
  6786  00FD1E  43                 	db	67	;'C'
  6787  00FD1F  68                 	db	104	;'h'
  6788  00FD20  61                 	db	97	;'a'
  6789  00FD21  72                 	db	114	;'r'
  6790  00FD22  67                 	db	103	;'g'
  6791  00FD23  69                 	db	105	;'i'
  6792  00FD24  6E                 	db	110	;'n'
  6793  00FD25  67                 	db	103	;'g'
  6794  00FD26  00                 	db	0
  6795  00FD27                     STR_189:
  6796  00FD27  44                 	db	68	;'D'
  6797  00FD28  72                 	db	114	;'r'
  6798  00FD29  65                 	db	101	;'e'
  6799  00FD2A  77                 	db	119	;'w'
  6800  00FD2B  20                 	db	32
  6801  00FD2C  4D                 	db	77	;'M'
  6802  00FD2D  61                 	db	97	;'a'
  6803  00FD2E  61                 	db	97	;'a'
  6804  00FD2F  74                 	db	116	;'t'
  6805  00FD30  6D                 	db	109	;'m'
  6806  00FD31  61                 	db	97	;'a'
  6807  00FD32  6E                 	db	110	;'n'
  6808  00FD33  00                 	db	0
  6809  00FD34                     STR_57:
  6810  00FD34  25                 	db	37
  6811  00FD35  64                 	db	100	;'d'
  6812  00FD36  20                 	db	32
  6813  00FD37  6D                 	db	109	;'m'
  6814  00FD38  69                 	db	105	;'i'
  6815  00FD39  6E                 	db	110	;'n'
  6816  00FD3A  75                 	db	117	;'u'
  6817  00FD3B  74                 	db	116	;'t'
  6818  00FD3C  65                 	db	101	;'e'
  6819  00FD3D  73                 	db	115	;'s'
  6820  00FD3E  2C                 	db	44
  6821  00FD3F  20                 	db	32
  6822  00FD40  00                 	db	0
  6823  00FD41                     STR_47:
  6824  00FD41  50                 	db	80	;'P'
  6825  00FD42  49                 	db	73	;'I'
  6826  00FD43  43                 	db	67	;'C'
  6827  00FD44  31                 	db	49	;'1'
  6828  00FD45  38                 	db	56	;'8'
  6829  00FD46  4C                 	db	76	;'L'
  6830  00FD47  46                 	db	70	;'F'
  6831  00FD48  32                 	db	50	;'2'
  6832  00FD49  37                 	db	55	;'7'
  6833  00FD4A  4B                 	db	75	;'K'
  6834  00FD4B  34                 	db	52	;'4'
  6835  00FD4C  30                 	db	48	;'0'
  6836  00FD4D  00                 	db	0
  6837  00FD4E                     STR_48:
  6838  00FD4E  50                 	db	80	;'P'
  6839  00FD4F  49                 	db	73	;'I'
  6840  00FD50  43                 	db	67	;'C'
  6841  00FD51  31                 	db	49	;'1'
  6842  00FD52  38                 	db	56	;'8'
  6843  00FD53  4C                 	db	76	;'L'
  6844  00FD54  46                 	db	70	;'F'
  6845  00FD55  34                 	db	52	;'4'
  6846  00FD56  37                 	db	55	;'7'
  6847  00FD57  4B                 	db	75	;'K'
  6848  00FD58  34                 	db	52	;'4'
  6849  00FD59  30                 	db	48	;'0'
  6850  00FD5A  00                 	db	0
  6851  00FD5B                     STR_44:
  6852  00FD5B  50                 	db	80	;'P'
  6853  00FD5C  49                 	db	73	;'I'
  6854  00FD5D  43                 	db	67	;'C'
  6855  00FD5E  31                 	db	49	;'1'
  6856  00FD5F  38                 	db	56	;'8'
  6857  00FD60  4C                 	db	76	;'L'
  6858  00FD61  46                 	db	70	;'F'
  6859  00FD62  36                 	db	54	;'6'
  6860  00FD63  37                 	db	55	;'7'
  6861  00FD64  4B                 	db	75	;'K'
  6862  00FD65  34                 	db	52	;'4'
  6863  00FD66  30                 	db	48	;'0'
  6864  00FD67  00                 	db	0
  6865  00FD68                     STR_190:
  6866  00FD68  53                 	db	83	;'S'
  6867  00FD69  70                 	db	112	;'p'
  6868  00FD6A  72                 	db	114	;'r'
  6869  00FD6B  69                 	db	105	;'i'
  6870  00FD6C  6E                 	db	110	;'n'
  6871  00FD6D  67                 	db	103	;'g'
  6872  00FD6E  20                 	db	32
  6873  00FD6F  32                 	db	50	;'2'
  6874  00FD70  30                 	db	48	;'0'
  6875  00FD71  31                 	db	49	;'1'
  6876  00FD72  39                 	db	57	;'9'
  6877  00FD73  00                 	db	0
  6878  00FD74                     STR_123:
  6879  00FD74  4D                 	db	77	;'M'
  6880  00FD75  69                 	db	105	;'i'
  6881  00FD76  63                 	db	99	;'c'
  6882  00FD77  72                 	db	114	;'r'
  6883  00FD78  6F                 	db	111	;'o'
  6884  00FD79  20                 	db	32
  6885  00FD7A  54                 	db	84	;'T'
  6886  00FD7B  65                 	db	101	;'e'
  6887  00FD7C  6D                 	db	109	;'m'
  6888  00FD7D  70                 	db	112	;'p'
  6889  00FD7E  3A                 	db	58	;':'
  6890  00FD7F  00                 	db	0
  6891  00FD80                     STR_92:
  6892  00FD80  51                 	db	81	;'Q'
  6893  00FD81  49                 	db	73	;'I'
  6894  00FD82  20                 	db	32
  6895  00FD83  43                 	db	67	;'C'
  6896  00FD84  75                 	db	117	;'u'
  6897  00FD85  72                 	db	114	;'r'
  6898  00FD86  72                 	db	114	;'r'
  6899  00FD87  65                 	db	101	;'e'
  6900  00FD88  6E                 	db	110	;'n'
  6901  00FD89  74                 	db	116	;'t'
  6902  00FD8A  3A                 	db	58	;':'
  6903  00FD8B  00                 	db	0
  6904  00FD8C                     STR_106:
  6905  00FD8C  45                 	db	69	;'E'
  6906  00FD8D  66                 	db	102	;'f'
  6907  00FD8E  66                 	db	102	;'f'
  6908  00FD8F  69                 	db	105	;'i'
  6909  00FD90  63                 	db	99	;'c'
  6910  00FD91  69                 	db	105	;'i'
  6911  00FD92  65                 	db	101	;'e'
  6912  00FD93  6E                 	db	110	;'n'
  6913  00FD94  63                 	db	99	;'c'
  6914  00FD95  79                 	db	121	;'y'
  6915  00FD96  3A                 	db	58	;':'
  6916  00FD97  00                 	db	0
  6917  00FD98                     STR_56:
  6918  00FD98  25                 	db	37
  6919  00FD99  64                 	db	100	;'d'
  6920  00FD9A  20                 	db	32
  6921  00FD9B  6D                 	db	109	;'m'
  6922  00FD9C  69                 	db	105	;'i'
  6923  00FD9D  6E                 	db	110	;'n'
  6924  00FD9E  75                 	db	117	;'u'
  6925  00FD9F  74                 	db	116	;'t'
  6926  00FDA0  65                 	db	101	;'e'
  6927  00FDA1  2C                 	db	44
  6928  00FDA2  20                 	db	32
  6929  00FDA3  00                 	db	0
  6930  00FDA4                     STR_45:
  6931  00FDA4  50                 	db	80	;'P'
  6932  00FDA5  49                 	db	73	;'I'
  6933  00FDA6  43                 	db	67	;'C'
  6934  00FDA7  31                 	db	49	;'1'
  6935  00FDA8  38                 	db	56	;'8'
  6936  00FDA9  46                 	db	70	;'F'
  6937  00FDAA  32                 	db	50	;'2'
  6938  00FDAB  37                 	db	55	;'7'
  6939  00FDAC  4B                 	db	75	;'K'
  6940  00FDAD  34                 	db	52	;'4'
  6941  00FDAE  30                 	db	48	;'0'
  6942  00FDAF  00                 	db	0
  6943  00FDB0                     STR_46:
  6944  00FDB0  50                 	db	80	;'P'
  6945  00FDB1  49                 	db	73	;'I'
  6946  00FDB2  43                 	db	67	;'C'
  6947  00FDB3  31                 	db	49	;'1'
  6948  00FDB4  38                 	db	56	;'8'
  6949  00FDB5  46                 	db	70	;'F'
  6950  00FDB6  34                 	db	52	;'4'
  6951  00FDB7  37                 	db	55	;'7'
  6952  00FDB8  4B                 	db	75	;'K'
  6953  00FDB9  34                 	db	52	;'4'
  6954  00FDBA  30                 	db	48	;'0'
  6955  00FDBB  00                 	db	0
  6956  00FDBC                     STR_43:
  6957  00FDBC  50                 	db	80	;'P'
  6958  00FDBD  49                 	db	73	;'I'
  6959  00FDBE  43                 	db	67	;'C'
  6960  00FDBF  31                 	db	49	;'1'
  6961  00FDC0  38                 	db	56	;'8'
  6962  00FDC1  46                 	db	70	;'F'
  6963  00FDC2  36                 	db	54	;'6'
  6964  00FDC3  37                 	db	55	;'7'
  6965  00FDC4  4B                 	db	75	;'K'
  6966  00FDC5  34                 	db	52	;'4'
  6967  00FDC6  30                 	db	48	;'0'
  6968  00FDC7  00                 	db	0
  6969  00FDC8  25                 	db	37
  6970  00FDC9  6C                 	db	108	;'l'
  6971  00FDCA  75                 	db	117	;'u'
  6972  00FDCB  2E                 	db	46
  6973  00FDCC  25                 	db	37
  6974  00FDCD  36                 	db	54	;'6'
  6975  00FDCE  2E                 	db	46
  6976  00FDCF  36                 	db	54	;'6'
  6977  00FDD0  6C                 	db	108	;'l'
  6978  00FDD1  75                 	db	117	;'u'
  6979  00FDD2  00                 	db	0
  6980  00FDD3                     STR_332:
  6981  00FDD3  1B                 	db	27
  6982  00FDD4  5B                 	db	91	;'['
  6983  00FDD5  30                 	db	48	;'0'
  6984  00FDD6  3B                 	db	59	;';'
  6985  00FDD7  33                 	db	51	;'3'
  6986  00FDD8  37                 	db	55	;'7'
  6987  00FDD9  3B                 	db	59	;';'
  6988  00FDDA  34                 	db	52	;'4'
  6989  00FDDB  30                 	db	48	;'0'
  6990  00FDDC  6D                 	db	109	;'m'
  6991  00FDDD  00                 	db	0
  6992  00FDDE                     STR_65:
  6993  00FDDE  44                 	db	68	;'D'
  6994  00FDDF  65                 	db	101	;'e'
  6995  00FDE0  76                 	db	118	;'v'
  6996  00FDE1  69                 	db	105	;'i'
  6997  00FDE2  63                 	db	99	;'c'
  6998  00FDE3  65                 	db	101	;'e'
  6999  00FDE4  20                 	db	32
  7000  00FDE5  49                 	db	73	;'I'
  7001  00FDE6  44                 	db	68	;'D'
  7002  00FDE7  3A                 	db	58	;':'
  7003  00FDE8  00                 	db	0
  7004  00FDE9                     STR_74:
  7005  00FDE9  51                 	db	81	;'Q'
  7006  00FDEA  49                 	db	73	;'I'
  7007  00FDEB  20                 	db	32
  7008  00FDEC  45                 	db	69	;'E'
  7009  00FDED  6E                 	db	110	;'n'
  7010  00FDEE  61                 	db	97	;'a'
  7011  00FDEF  62                 	db	98	;'b'
  7012  00FDF0  6C                 	db	108	;'l'
  7013  00FDF1  65                 	db	101	;'e'
  7014  00FDF2  64                 	db	100	;'d'
  7015  00FDF3  00                 	db	0
  7016  00FDF4                     STR_128:
  7017  00FDF4  42                 	db	66	;'B'
  7018  00FDF5  75                 	db	117	;'u'
  7019  00FDF6  72                 	db	114	;'r'
  7020  00FDF7  73                 	db	115	;'s'
  7021  00FDF8  74                 	db	116	;'t'
  7022  00FDF9  20                 	db	32
  7023  00FDFA  4D                 	db	77	;'M'
  7024  00FDFB  6F                 	db	111	;'o'
  7025  00FDFC  64                 	db	100	;'d'
  7026  00FDFD  65                 	db	101	;'e'
  7027  00FDFE  00                 	db	0
  7028  00FDFF                     STR_146:
  7029  00FDFF  25                 	db	37
  7030  00FE00  75                 	db	117	;'u'
  7031  00FE01  20                 	db	32
  7032  00FE02  73                 	db	115	;'s'
  7033  00FE03  65                 	db	101	;'e'
  7034  00FE04  63                 	db	99	;'c'
  7035  00FE05  6F                 	db	111	;'o'
  7036  00FE06  6E                 	db	110	;'n'
  7037  00FE07  64                 	db	100	;'d'
  7038  00FE08  73                 	db	115	;'s'
  7039  00FE09  00                 	db	0
  7040  00FE0A                     STR_143:
  7041  00FE0A  25                 	db	37
  7042  00FE0B  75                 	db	117	;'u'
  7043  00FE0C  20                 	db	32
  7044  00FE0D  6D                 	db	109	;'m'
  7045  00FE0E  69                 	db	105	;'i'
  7046  00FE0F  6E                 	db	110	;'n'
  7047  00FE10  75                 	db	117	;'u'
  7048  00FE11  74                 	db	116	;'t'
  7049  00FE12  65                 	db	101	;'e'
  7050  00FE13  73                 	db	115	;'s'
  7051  00FE14  00                 	db	0
  7052  00FE15                     STR_51:
  7053  00FE15  25                 	db	37
  7054  00FE16  64                 	db	100	;'d'
  7055  00FE17  20                 	db	32
  7056  00FE18  79                 	db	121	;'y'
  7057  00FE19  65                 	db	101	;'e'
  7058  00FE1A  61                 	db	97	;'a'
  7059  00FE1B  72                 	db	114	;'r'
  7060  00FE1C  73                 	db	115	;'s'
  7061  00FE1D  2C                 	db	44
  7062  00FE1E  20                 	db	32
  7063  00FE1F  00                 	db	0
  7064  00FE20                     STR_55:
  7065  00FE20  25                 	db	37
  7066  00FE21  64                 	db	100	;'d'
  7067  00FE22  20                 	db	32
  7068  00FE23  68                 	db	104	;'h'
  7069  00FE24  6F                 	db	111	;'o'
  7070  00FE25  75                 	db	117	;'u'
  7071  00FE26  72                 	db	114	;'r'
  7072  00FE27  73                 	db	115	;'s'
  7073  00FE28  2C                 	db	44
  7074  00FE29  20                 	db	32
  7075  00FE2A  00                 	db	0
  7076  00FE2B                     STR_59:
  7077  00FE2B  25                 	db	37
  7078  00FE2C  64                 	db	100	;'d'
  7079  00FE2D  20                 	db	32
  7080  00FE2E  73                 	db	115	;'s'
  7081  00FE2F  65                 	db	101	;'e'
  7082  00FE30  63                 	db	99	;'c'
  7083  00FE31  6F                 	db	111	;'o'
  7084  00FE32  6E                 	db	110	;'n'
  7085  00FE33  64                 	db	100	;'d'
  7086  00FE34  73                 	db	115	;'s'
  7087  00FE35  00                 	db	0
  7088  00FE36                     STR_40:
  7089  00FE36  53                 	db	83	;'S'
  7090  00FE37  54                 	db	84	;'T'
  7091  00FE38  4F                 	db	79	;'O'
  7092  00FE39  46                 	db	70	;'F'
  7093  00FE3A  20                 	db	32
  7094  00FE3B  52                 	db	82	;'R'
  7095  00FE3C  65                 	db	101	;'e'
  7096  00FE3D  73                 	db	115	;'s'
  7097  00FE3E  65                 	db	101	;'e'
  7098  00FE3F  74                 	db	116	;'t'
  7099  00FE40  00                 	db	0
  7100  00FE41                     STR_41:
  7101  00FE41  53                 	db	83	;'S'
  7102  00FE42  54                 	db	84	;'T'
  7103  00FE43  55                 	db	85	;'U'
  7104  00FE44  46                 	db	70	;'F'
  7105  00FE45  20                 	db	32
  7106  00FE46  52                 	db	82	;'R'
  7107  00FE47  65                 	db	101	;'e'
  7108  00FE48  73                 	db	115	;'s'
  7109  00FE49  65                 	db	101	;'e'
  7110  00FE4A  74                 	db	116	;'t'
  7111  00FE4B  00                 	db	0
  7112  00FE4C                     STR_36:
  7113  00FE4C  4D                 	db	77	;'M'
  7114  00FE4D  43                 	db	67	;'C'
  7115  00FE4E  4C                 	db	76	;'L'
  7116  00FE4F  52                 	db	82	;'R'
  7117  00FE50  20                 	db	32
  7118  00FE51  52                 	db	82	;'R'
  7119  00FE52  65                 	db	101	;'e'
  7120  00FE53  73                 	db	115	;'s'
  7121  00FE54  65                 	db	101	;'e'
  7122  00FE55  74                 	db	116	;'t'
  7123  00FE56  00                 	db	0
  7124  00FE57                     STR_38:
  7125  00FE57  57                 	db	87	;'W'
  7126  00FE58  57                 	db	87	;'W'
  7127  00FE59  44                 	db	68	;'D'
  7128  00FE5A  54                 	db	84	;'T'
  7129  00FE5B  20                 	db	32
  7130  00FE5C  52                 	db	82	;'R'
  7131  00FE5D  65                 	db	101	;'e'
  7132  00FE5E  73                 	db	115	;'s'
  7133  00FE5F  65                 	db	101	;'e'
  7134  00FE60  74                 	db	116	;'t'
  7135  00FE61  00                 	db	0
  7136  00FE62                     STR_115:
  7137  00FE62  2B                 	db	43
  7138  00FE63  35                 	db	53	;'5'
  7139  00FE64  56                 	db	86	;'V'
  7140  00FE65  20                 	db	32
  7141  00FE66  54                 	db	84	;'T'
  7142  00FE67  65                 	db	101	;'e'
  7143  00FE68  6D                 	db	109	;'m'
  7144  00FE69  70                 	db	112	;'p'
  7145  00FE6A  3A                 	db	58	;':'
  7146  00FE6B  00                 	db	0
  7147  00FE6C                     STR_70:
  7148  00FE6C  31                 	db	49	;'1'
  7149  00FE6D  31                 	db	49	;'1'
  7150  00FE6E  35                 	db	53	;'5'
  7151  00FE6F  2E                 	db	46
  7152  00FE70  32                 	db	50	;'2'
  7153  00FE71  20                 	db	32
  7154  00FE72  6B                 	db	107	;'k'
  7155  00FE73  62                 	db	98	;'b'
  7156  00FE74  73                 	db	115	;'s'
  7157  00FE75  00                 	db	0
  7158  00FE76                     STR_50:
  7159  00FE76  25                 	db	37
  7160  00FE77  64                 	db	100	;'d'
  7161  00FE78  20                 	db	32
  7162  00FE79  79                 	db	121	;'y'
  7163  00FE7A  65                 	db	101	;'e'
  7164  00FE7B  61                 	db	97	;'a'
  7165  00FE7C  72                 	db	114	;'r'
  7166  00FE7D  2C                 	db	44
  7167  00FE7E  20                 	db	32
  7168  00FE7F  00                 	db	0
  7169  00FE80                     STR_54:
  7170  00FE80  25                 	db	37
  7171  00FE81  64                 	db	100	;'d'
  7172  00FE82  20                 	db	32
  7173  00FE83  68                 	db	104	;'h'
  7174  00FE84  6F                 	db	111	;'o'
  7175  00FE85  75                 	db	117	;'u'
  7176  00FE86  72                 	db	114	;'r'
  7177  00FE87  2C                 	db	44
  7178  00FE88  20                 	db	32
  7179  00FE89  00                 	db	0
  7180  00FE8A                     STR_53:
  7181  00FE8A  25                 	db	37
  7182  00FE8B  64                 	db	100	;'d'
  7183  00FE8C  20                 	db	32
  7184  00FE8D  64                 	db	100	;'d'
  7185  00FE8E  61                 	db	97	;'a'
  7186  00FE8F  79                 	db	121	;'y'
  7187  00FE90  73                 	db	115	;'s'
  7188  00FE91  2C                 	db	44
  7189  00FE92  20                 	db	32
  7190  00FE93  00                 	db	0
  7191  00FE94                     STR_58:
  7192  00FE94  25                 	db	37
  7193  00FE95  64                 	db	100	;'d'
  7194  00FE96  20                 	db	32
  7195  00FE97  73                 	db	115	;'s'
  7196  00FE98  65                 	db	101	;'e'
  7197  00FE99  63                 	db	99	;'c'
  7198  00FE9A  6F                 	db	111	;'o'
  7199  00FE9B  6E                 	db	110	;'n'
  7200  00FE9C  64                 	db	100	;'d'
  7201  00FE9D  00                 	db	0
  7202  00FE9E                     STR_35:
  7203  00FE9E  42                 	db	66	;'B'
  7204  00FE9F  4F                 	db	79	;'O'
  7205  00FEA0  52                 	db	82	;'R'
  7206  00FEA1  20                 	db	32
  7207  00FEA2  52                 	db	82	;'R'
  7208  00FEA3  65                 	db	101	;'e'
  7209  00FEA4  73                 	db	115	;'s'
  7210  00FEA5  65                 	db	101	;'e'
  7211  00FEA6  74                 	db	116	;'t'
  7212  00FEA7  00                 	db	0
  7213  00FEA8                     STR_34:
  7214  00FEA8  50                 	db	80	;'P'
  7215  00FEA9  4F                 	db	79	;'O'
  7216  00FEAA  52                 	db	82	;'R'
  7217  00FEAB  20                 	db	32
  7218  00FEAC  52                 	db	82	;'R'
  7219  00FEAD  65                 	db	101	;'e'
  7220  00FEAE  73                 	db	115	;'s'
  7221  00FEAF  65                 	db	101	;'e'
  7222  00FEB0  74                 	db	116	;'t'
  7223  00FEB1  00                 	db	0
  7224  00FEB2                     STR_22:
  7225  00FEB2  55                 	db	85	;'U'
  7226  00FEB3  6E                 	db	110	;'n'
  7227  00FEB4  64                 	db	100	;'d'
  7228  00FEB5  65                 	db	101	;'e'
  7229  00FEB6  66                 	db	102	;'f'
  7230  00FEB7  69                 	db	105	;'i'
  7231  00FEB8  6E                 	db	110	;'n'
  7232  00FEB9  65                 	db	101	;'e'
  7233  00FEBA  64                 	db	100	;'d'
  7234  00FEBB  00                 	db	0
  7235  00FEBC                     STR_17:
  7236  00FEBC  75                 	db	117	;'u'
  7237  00FEBD  6E                 	db	110	;'n'
  7238  00FEBE  64                 	db	100	;'d'
  7239  00FEBF  65                 	db	101	;'e'
  7240  00FEC0  66                 	db	102	;'f'
  7241  00FEC1  69                 	db	105	;'i'
  7242  00FEC2  6E                 	db	110	;'n'
  7243  00FEC3  65                 	db	101	;'e'
  7244  00FEC4  64                 	db	100	;'d'
  7245  00FEC5  00                 	db	0
  7246  00FEC6                     STR_291:
  7247  00FEC6  2B                 	db	43
  7248  00FEC7  25                 	db	37
  7249  00FEC8  30                 	db	48	;'0'
  7250  00FEC9  2E                 	db	46
  7251  00FECA  33                 	db	51	;'3'
  7252  00FECB  66                 	db	102	;'f'
  7253  00FECC  20                 	db	32
  7254  00FECD  4D                 	db	77	;'M'
  7255  00FECE  00                 	db	0
  7256  00FECF                     STR_292:
  7257  00FECF  2B                 	db	43
  7258  00FED0  25                 	db	37
  7259  00FED1  30                 	db	48	;'0'
  7260  00FED2  2E                 	db	46
  7261  00FED3  33                 	db	51	;'3'
  7262  00FED4  66                 	db	102	;'f'
  7263  00FED5  20                 	db	32
  7264  00FED6  6B                 	db	107	;'k'
  7265  00FED7  00                 	db	0
  7266  00FED8                     STR_294:
  7267  00FED8  2B                 	db	43
  7268  00FED9  25                 	db	37
  7269  00FEDA  30                 	db	48	;'0'
  7270  00FEDB  2E                 	db	46
  7271  00FEDC  33                 	db	51	;'3'
  7272  00FEDD  66                 	db	102	;'f'
  7273  00FEDE  20                 	db	32
  7274  00FEDF  6D                 	db	109	;'m'
  7275  00FEE0  00                 	db	0
  7276  00FEE1                     STR_296:
  7277  00FEE1  2B                 	db	43
  7278  00FEE2  25                 	db	37
  7279  00FEE3  30                 	db	48	;'0'
  7280  00FEE4  2E                 	db	46
  7281  00FEE5  33                 	db	51	;'3'
  7282  00FEE6  66                 	db	102	;'f'
  7283  00FEE7  20                 	db	32
  7284  00FEE8  6E                 	db	110	;'n'
  7285  00FEE9  00                 	db	0
  7286  00FEEA                     STR_295:
  7287  00FEEA  2B                 	db	43
  7288  00FEEB  25                 	db	37
  7289  00FEEC  30                 	db	48	;'0'
  7290  00FEED  2E                 	db	46
  7291  00FEEE  33                 	db	51	;'3'
  7292  00FEEF  66                 	db	102	;'f'
  7293  00FEF0  20                 	db	32
  7294  00FEF1  75                 	db	117	;'u'
  7295  00FEF2  00                 	db	0
  7296  00FEF3                     STR_108:
  7297  00FEF3  25                 	db	37
  7298  00FEF4  2B                 	db	43
  7299  00FEF5  2E                 	db	46
  7300  00FEF6  33                 	db	51	;'3'
  7301  00FEF7  66                 	db	102	;'f'
  7302  00FEF8  20                 	db	32
  7303  00FEF9  25                 	db	37
  7304  00FEFA  25                 	db	37
  7305  00FEFB  00                 	db	0
  7306  00FEFC                     STR_111:
  7307  00FEFC  51                 	db	81	;'Q'
  7308  00FEFD  49                 	db	73	;'I'
  7309  00FEFE  20                 	db	32
  7310  00FEFF  54                 	db	84	;'T'
  7311  00FF00  65                 	db	101	;'e'
  7312  00FF01  6D                 	db	109	;'m'
  7313  00FF02  70                 	db	112	;'p'
  7314  00FF03  3A                 	db	58	;':'
  7315  00FF04  00                 	db	0
  7316  00FF05                     STR_138:
  7317  00FF05  25                 	db	37
  7318  00FF06  75                 	db	117	;'u'
  7319  00FF07  20                 	db	32
  7320  00FF08  79                 	db	121	;'y'
  7321  00FF09  65                 	db	101	;'e'
  7322  00FF0A  61                 	db	97	;'a'
  7323  00FF0B  72                 	db	114	;'r'
  7324  00FF0C  73                 	db	115	;'s'
  7325  00FF0D  00                 	db	0
  7326  00FF0E                     STR_140:
  7327  00FF0E  25                 	db	37
  7328  00FF0F  75                 	db	117	;'u'
  7329  00FF10  20                 	db	32
  7330  00FF11  68                 	db	104	;'h'
  7331  00FF12  6F                 	db	111	;'o'
  7332  00FF13  75                 	db	117	;'u'
  7333  00FF14  72                 	db	114	;'r'
  7334  00FF15  73                 	db	115	;'s'
  7335  00FF16  00                 	db	0
  7336  00FF17                     STR_129:
  7337  00FF17  2B                 	db	43
  7338  00FF18  32                 	db	50	;'2'
  7339  00FF19  2E                 	db	46
  7340  00FF1A  35                 	db	53	;'5'
  7341  00FF1B  20                 	db	32
  7342  00FF1C  4D                 	db	77	;'M'
  7343  00FF1D  48                 	db	72	;'H'
  7344  00FF1E  7A                 	db	122	;'z'
  7345  00FF1F  00                 	db	0
  7346  00FF20                     STR_52:
  7347  00FF20  25                 	db	37
  7348  00FF21  64                 	db	100	;'d'
  7349  00FF22  20                 	db	32
  7350  00FF23  64                 	db	100	;'d'
  7351  00FF24  61                 	db	97	;'a'
  7352  00FF25  79                 	db	121	;'y'
  7353  00FF26  2C                 	db	44
  7354  00FF27  20                 	db	32
  7355  00FF28  00                 	db	0
  7356  00FF29                     STR_14:
  7357  00FF29  63                 	db	99	;'c'
  7358  00FF2A  68                 	db	104	;'h'
  7359  00FF2B  61                 	db	97	;'a'
  7360  00FF2C  72                 	db	114	;'r'
  7361  00FF2D  67                 	db	103	;'g'
  7362  00FF2E  69                 	db	105	;'i'
  7363  00FF2F  6E                 	db	110	;'n'
  7364  00FF30  67                 	db	103	;'g'
  7365  00FF31  00                 	db	0
  7366  00FF32                     STR_263:
  7367  00FF32  1B                 	db	27
  7368  00FF33  5B                 	db	91	;'['
  7369  00FF34  4B                 	db	75	;'K'
  7370  00FF35  0A                 	db	10
  7371  00FF36  0D                 	db	13
  7372  00FF37  0A                 	db	10
  7373  00FF38  0D                 	db	13
  7374  00FF39  00                 	db	0
  7375  00FF3A                     STR_293:
  7376  00FF3A  2B                 	db	43
  7377  00FF3B  25                 	db	37
  7378  00FF3C  30                 	db	48	;'0'
  7379  00FF3D  2E                 	db	46
  7380  00FF3E  33                 	db	51	;'3'
  7381  00FF3F  66                 	db	102	;'f'
  7382  00FF40  20                 	db	32
  7383  00FF41  00                 	db	0
  7384  00FF42                     STR_89:
  7385  00FF42  25                 	db	37
  7386  00FF43  2B                 	db	43
  7387  00FF44  2E                 	db	46
  7388  00FF45  33                 	db	51	;'3'
  7389  00FF46  66                 	db	102	;'f'
  7390  00FF47  20                 	db	32
  7391  00FF48  41                 	db	65	;'A'
  7392  00FF49  00                 	db	0
  7393  00FF4A                     STR_112:
  7394  00FF4A  25                 	db	37
  7395  00FF4B  2B                 	db	43
  7396  00FF4C  2E                 	db	46
  7397  00FF4D  33                 	db	51	;'3'
  7398  00FF4E  66                 	db	102	;'f'
  7399  00FF4F  20                 	db	32
  7400  00FF50  43                 	db	67	;'C'
  7401  00FF51  00                 	db	0
  7402  00FF52                     STR_81:
  7403  00FF52  25                 	db	37
  7404  00FF53  2B                 	db	43
  7405  00FF54  2E                 	db	46
  7406  00FF55  33                 	db	51	;'3'
  7407  00FF56  66                 	db	102	;'f'
  7408  00FF57  20                 	db	32
  7409  00FF58  56                 	db	86	;'V'
  7410  00FF59  00                 	db	0
  7411  00FF5A                     STR_98:
  7412  00FF5A  25                 	db	37
  7413  00FF5B  2B                 	db	43
  7414  00FF5C  2E                 	db	46
  7415  00FF5D  33                 	db	51	;'3'
  7416  00FF5E  66                 	db	102	;'f'
  7417  00FF5F  20                 	db	32
  7418  00FF60  57                 	db	87	;'W'
  7419  00FF61  00                 	db	0
  7420  00FF62                     STR_139:
  7421  00FF62  25                 	db	37
  7422  00FF63  75                 	db	117	;'u'
  7423  00FF64  20                 	db	32
  7424  00FF65  64                 	db	100	;'d'
  7425  00FF66  61                 	db	97	;'a'
  7426  00FF67  79                 	db	121	;'y'
  7427  00FF68  73                 	db	115	;'s'
  7428  00FF69  00                 	db	0
  7429  00FF6A                     STR_356:
  7430  00FF6A  28                 	db	40
  7431  00FF6B  6E                 	db	110	;'n'
  7432  00FF6C  75                 	db	117	;'u'
  7433  00FF6D  6C                 	db	108	;'l'
  7434  00FF6E  6C                 	db	108	;'l'
  7435  00FF6F  29                 	db	41
  7436  00FF70  00                 	db	0
  7437  00FF71                     STR_68:
  7438  00FF71  25                 	db	37
  7439  00FF72  63                 	db	99	;'c'
  7440  00FF73  25                 	db	37
  7441  00FF74  30                 	db	48	;'0'
  7442  00FF75  33                 	db	51	;'3'
  7443  00FF76  64                 	db	100	;'d'
  7444  00FF77  00                 	db	0
  7445  00FF78                     STR_197:
  7446  00FF78  2A                 	db	42
  7447  00FF79  49                 	db	73	;'I'
  7448  00FF7A  44                 	db	68	;'D'
  7449  00FF7B  4E                 	db	78	;'N'
  7450  00FF7C  3F                 	db	63	;'?'
  7451  00FF7D  00                 	db	0
  7452  00FF7E                     STR_194:
  7453  00FF7E  43                 	db	67	;'C'
  7454  00FF7F  6C                 	db	108	;'l'
  7455  00FF80  65                 	db	101	;'e'
  7456  00FF81  61                 	db	97	;'a'
  7457  00FF82  72                 	db	114	;'r'
  7458  00FF83  00                 	db	0
  7459  00FF84                     STR_21:
  7460  00FF84  45                 	db	69	;'E'
  7461  00FF85  72                 	db	114	;'r'
  7462  00FF86  72                 	db	114	;'r'
  7463  00FF87  6F                 	db	111	;'o'
  7464  00FF88  72                 	db	114	;'r'
  7465  00FF89  00                 	db	0
  7466  00FF8A                     STR_16:
  7467  00FF8A  65                 	db	101	;'e'
  7468  00FF8B  72                 	db	114	;'r'
  7469  00FF8C  72                 	db	114	;'r'
  7470  00FF8D  6F                 	db	111	;'o'
  7471  00FF8E  72                 	db	114	;'r'
  7472  00FF8F  00                 	db	0
  7473  00FF90                     STR_297:
  7474  00FF90  30                 	db	48	;'0'
  7475  00FF91  2E                 	db	46
  7476  00FF92  30                 	db	48	;'0'
  7477  00FF93  20                 	db	32
  7478  00FF94  00                 	db	0
  7479  00FF95                     STR_192:
  7480  00FF95  1B                 	db	27
  7481  00FF96  5B                 	db	91	;'['
  7482  00FF97  32                 	db	50	;'2'
  7483  00FF98  4A                 	db	74	;'J'
  7484  00FF99  00                 	db	0
  7485  00FF9A                     STR_228:
  7486  00FF9A  48                 	db	72	;'H'
  7487  00FF9B  65                 	db	101	;'e'
  7488  00FF9C  6C                 	db	108	;'l'
  7489  00FF9D  70                 	db	112	;'p'
  7490  00FF9E  00                 	db	0
  7491  00FF9F                     STR_66:
  7492  00FF9F  30                 	db	48	;'0'
  7493  00FFA0  78                 	db	120	;'x'
  7494  00FFA1  25                 	db	37
  7495  00FFA2  58                 	db	88	;'X'
  7496  00FFA3  00                 	db	0
  7497  00FFA4                     STR_134:
  7498  00FFA4  25                 	db	37
  7499  00FFA5  73                 	db	115	;'s'
  7500  00FFA6  48                 	db	72	;'H'
  7501  00FFA7  7A                 	db	122	;'z'
  7502  00FFA8  00                 	db	0
  7503  00FFA9                     STR_18:
  7504  00FFA9  49                 	db	73	;'I'
  7505  00FFAA  64                 	db	100	;'d'
  7506  00FFAB  6C                 	db	108	;'l'
  7507  00FFAC  65                 	db	101	;'e'
  7508  00FFAD  00                 	db	0
  7509  00FFAE                     STR_13:
  7510  00FFAE  69                 	db	105	;'i'
  7511  00FFAF  64                 	db	100	;'d'
  7512  00FFB0  6C                 	db	108	;'l'
  7513  00FFB1  65                 	db	101	;'e'
  7514  00FFB2  00                 	db	0
  7515  00FFB3  1B                 	db	27
  7516  00FFB4  5B                 	db	91	;'['
  7517  00FFB5  73                 	db	115	;'s'
  7518  00FFB6  00                 	db	0
  7519  00FFB7  1B                 	db	27
  7520  00FFB8  5B                 	db	91	;'['
  7521  00FFB9  75                 	db	117	;'u'
  7522  00FFBA  00                 	db	0
  7523  00FFBB                     STR_193:
  7524  00FFBB  1B                 	db	27
  7525  00FFBC  5B                 	db	91	;'['
  7526  00FFBD  48                 	db	72	;'H'
  7527  00FFBE  00                 	db	0
  7528  00FFBF                     STR_168:
  7529  00FFBF  25                 	db	37
  7530  00FFC0  73                 	db	115	;'s'
  7531  00FFC1  43                 	db	67	;'C'
  7532  00FFC2  00                 	db	0
  7533  00FFC3                     STR_173:
  7534  00FFC3  25                 	db	37
  7535  00FFC4  73                 	db	115	;'s'
  7536  00FFC5  4A                 	db	74	;'J'
  7537  00FFC6  00                 	db	0
  7538  00FFC7                     STR_1:
  7539  00FFC7  1B                 	db	27
  7540  00FFC8  5B                 	db	91	;'['
  7541  00FFC9  4B                 	db	75	;'K'
  7542  00FFCA  00                 	db	0
  7543  00FFCB                     STR_312:
  7544  00FFCB  33                 	db	51	;'3'
  7545  00FFCC  30                 	db	48	;'0'
  7546  00FFCD  00                 	db	0
  7547  00FFCE                     STR_313:
  7548  00FFCE  33                 	db	51	;'3'
  7549  00FFCF  31                 	db	49	;'1'
  7550  00FFD0  00                 	db	0
  7551  00FFD1                     STR_323:
  7552  00FFD1  34                 	db	52	;'4'
  7553  00FFD2  31                 	db	49	;'1'
  7554  00FFD3  00                 	db	0
  7555  00FFD4                     STR_314:
  7556  00FFD4  33                 	db	51	;'3'
  7557  00FFD5  32                 	db	50	;'2'
  7558  00FFD6  00                 	db	0
  7559  00FFD7                     STR_324:
  7560  00FFD7  34                 	db	52	;'4'
  7561  00FFD8  32                 	db	50	;'2'
  7562  00FFD9  00                 	db	0
  7563  00FFDA                     STR_315:
  7564  00FFDA  33                 	db	51	;'3'
  7565  00FFDB  33                 	db	51	;'3'
  7566  00FFDC  00                 	db	0
  7567  00FFDD                     STR_325:
  7568  00FFDD  34                 	db	52	;'4'
  7569  00FFDE  33                 	db	51	;'3'
  7570  00FFDF  00                 	db	0
  7571  00FFE0                     STR_316:
  7572  00FFE0  33                 	db	51	;'3'
  7573  00FFE1  34                 	db	52	;'4'
  7574  00FFE2  00                 	db	0
  7575  00FFE3                     STR_326:
  7576  00FFE3  34                 	db	52	;'4'
  7577  00FFE4  34                 	db	52	;'4'
  7578  00FFE5  00                 	db	0
  7579  00FFE6                     STR_317:
  7580  00FFE6  33                 	db	51	;'3'
  7581  00FFE7  35                 	db	53	;'5'
  7582  00FFE8  00                 	db	0
  7583  00FFE9                     STR_327:
  7584  00FFE9  34                 	db	52	;'4'
  7585  00FFEA  35                 	db	53	;'5'
  7586  00FFEB  00                 	db	0
  7587  00FFEC                     STR_318:
  7588  00FFEC  33                 	db	51	;'3'
  7589  00FFED  36                 	db	54	;'6'
  7590  00FFEE  00                 	db	0
  7591  00FFEF                     STR_328:
  7592  00FFEF  34                 	db	52	;'4'
  7593  00FFF0  36                 	db	54	;'6'
  7594  00FFF1  00                 	db	0
  7595  00FFF2                     STR_319:
  7596  00FFF2  33                 	db	51	;'3'
  7597  00FFF3  37                 	db	55	;'7'
  7598  00FFF4  00                 	db	0
  7599  00FFF5                     STR_329:
  7600  00FFF5  34                 	db	52	;'4'
  7601  00FFF6  37                 	db	55	;'7'
  7602  00FFF7  00                 	db	0
  7603  00FFF8                     STR_303:
  7604  00FFF8  1B                 	db	27
  7605  00FFF9  5B                 	db	91	;'['
  7606  00FFFA  00                 	db	0
  7607  00FFFB                     STR_309:
  7608  00FFFB  38                 	db	56	;'8'
  7609  00FFFC  00                 	db	0
  7610  00FFFD                     STR_311:
  7611  00FFFD  3B                 	db	59	;';'
  7612  00FFFE  00                 	db	0
  7613  0000                     
  7614                           ; #config settings
  7615  00FFFF  00                 	db	0	; dummy byte at the end
  7616  0000                     
  7617                           	psect	nvBANK2
  7618  0002FF                     __pnvBANK2:
  7619                           	opt callstack 0
  7620  0002FF                     _reset_cause:
  7621                           	opt callstack 0
  7622  0002FF                     	ds	1
  7623  0000                     _SSP2BUF	set	3730
  7624  0000                     _SSP2CON2bits	set	3735
  7625  0000                     _SSP2CON1bits	set	3734
  7626  0000                     _SSP2ADD	set	3731
  7627  0000                     _SSP2CON3	set	3736
  7628  0000                     _SSP2CON1	set	3734
  7629  0000                     _SSP2STAT	set	3733
  7630  0000                     _PIR7bits	set	3793
  7631  0000                     _SSP2CLKPPS	set	3727
  7632  0000                     _RX2PPS	set	3725
  7633  0000                     _INT1PPS	set	3746
  7634  0000                     _INT2PPS	set	3747
  7635  0000                     _RB4PPS	set	3827
  7636  0000                     _RC4PPS	set	3835
  7637  0000                     _RB5PPS	set	3828
  7638  0000                     _SSP2DATPPS	set	3728
  7639  0000                     _CCP2PPS	set	3760
  7640  0000                     _PMD5	set	3814
  7641  0000                     _PMD4	set	3813
  7642  0000                     _PMD3	set	3812
  7643  0000                     _PMD2	set	3811
  7644  0000                     _PMD1	set	3810
  7645  0000                     _PMD0	set	3809
  7646  0000                     _OSCTUNE	set	3805
  7647  0000                     _OSCFRQ	set	3806
  7648  0000                     _OSCEN	set	3804
  7649  0000                     _OSCCON3	set	3802
  7650  0000                     _OSCCON1	set	3800
  7651  0000                     _PIR6bits	set	3792
  7652  0000                     _PIE6bits	set	3784
  7653  0000                     _PIR1bits	set	3787
  7654  0000                     _PIE1bits	set	3779
  7655  0000                     _PIR3bits	set	3789
  7656  0000                     _PIR4bits	set	3790
  7657  0000                     _PIE4bits	set	3782
  7658  0000                     _IPR6bits	set	3776
  7659  0000                     _IPR1bits	set	3771
  7660  0000                     _IPR3bits	set	3773
  7661  0000                     _IPR0bits	set	3770
  7662  0000                     _IPR4bits	set	3774
  7663  0000                     _RC2REG	set	3737
  7664  0000                     _RC2STAbits	set	3741
  7665  0000                     _TX2REG	set	3738
  7666  0000                     _TX2STAbits	set	3742
  7667  0000                     _SP2BRGH	set	3740
  7668  0000                     _SP2BRGL	set	3739
  7669  0000                     _TX2STA	set	3742
  7670  0000                     _RC2STA	set	3741
  7671  0000                     _BAUD2CON	set	3743
  7672  0000                     _PIE3bits	set	3781
  7673  0000                     _PIE0bits	set	3778
  7674  0000                     _PIR0bits	set	3786
  7675  0000                     _FVRCONbits	set	3889
  7676  0000                     _FVRCON	set	3889
  7677  0000                     _ADCON1bits	set	3929
  7678  0000                     _ADCON2bits	set	3930
  7679  0000                     _ADPRE	set	3934
  7680  0000                     _ADCON3bits	set	3931
  7681  0000                     _ADACQ	set	3932
  7682  0000                     _ADCLK	set	3927
  7683  0000                     _ADACT	set	3926
  7684  0000                     _ADREF	set	3928
  7685  0000                     _ADCON3	set	3931
  7686  0000                     _ADCON2	set	3930
  7687  0000                     _ADCON1	set	3929
  7688  0000                     _ADCAP	set	3933
  7689  0000                     _ADPCH	set	3935
  7690  0000                     _IOCBPbits	set	3860
  7691  0000                     _IOCBNbits	set	3859
  7692  0000                     _IOCBFbits	set	3858
  7693  0000                     _SLRCONC	set	3870
  7694  0000                     _SLRCONB	set	3862
  7695  0000                     _SLRCONA	set	3854
  7696  0000                     _ODCONC	set	3871
  7697  0000                     _ODCONB	set	3863
  7698  0000                     _ODCONA	set	3855
  7699  0000                     _WPUC	set	3872
  7700  0000                     _WPUA	set	3856
  7701  0000                     _WPUB	set	3864
  7702  0000                     _WPUE	set	3885
  7703  0000                     _ANSELA	set	3857
  7704  0000                     _ANSELB	set	3865
  7705  0000                     _ANSELC	set	3873
  7706  0000                     _CCP2CONbits	set	4008
  7707  0000                     _LATBbits	set	3972
  7708  0000                     _PCON0bits	set	4055
  7709  0000                     _PORTBbits	set	3982
  7710  0000                     _LATCbits	set	3973
  7711  0000                     _T1GCONbits	set	4048
  7712  0000                     _T1CONbits	set	4047
  7713  0000                     _T1CON	set	4047
  7714  0000                     _TMR1L	set	4045
  7715  0000                     _TMR1H	set	4046
  7716  0000                     _T1CLK	set	4050
  7717  0000                     _T1GATE	set	4049
  7718  0000                     _T1GCON	set	4048
  7719  0000                     _T5GCONbits	set	4036
  7720  0000                     _T5CON	set	4035
  7721  0000                     _T5CLK	set	4038
  7722  0000                     _T5GATE	set	4037
  7723  0000                     _T5GCON	set	4036
  7724  0000                     _T5CONbits	set	4035
  7725  0000                     _TMR5L	set	4033
  7726  0000                     _TMR5H	set	4034
  7727  0000                     _CCPTMRSbits	set	4014
  7728  0000                     _CCPR2L	set	4006
  7729  0000                     _CCPR2H	set	4007
  7730  0000                     _CCP2CAP	set	4009
  7731  0000                     _CCP2CON	set	4008
  7732  0000                     _T3GCONbits	set	4042
  7733  0000                     _T3CONbits	set	4041
  7734  0000                     _T3CON	set	4041
  7735  0000                     _TMR3L	set	4039
  7736  0000                     _TMR3H	set	4040
  7737  0000                     _T3CLK	set	4044
  7738  0000                     _T3GATE	set	4043
  7739  0000                     _T3GCON	set	4042
  7740  0000                     _PR2	set	4028
  7741  0000                     _TMR2	set	4027
  7742  0000                     _T2CONbits	set	4029
  7743  0000                     _T2RSTbits	set	4032
  7744  0000                     _T2HLTbits	set	4030
  7745  0000                     _T2CON	set	4029
  7746  0000                     _T2TMR	set	4027
  7747  0000                     _T2PR	set	4028
  7748  0000                     _T2RST	set	4032
  7749  0000                     _T2HLT	set	4030
  7750  0000                     _T2CLKCON	set	4031
  7751  0000                     _NVMDAT	set	3968
  7752  0000                     _NVMADRL	set	3966
  7753  0000                     _NVMADRH	set	3967
  7754  0000                     _NVMCON2	set	3970
  7755  0000                     _TABLAT	set	4085
  7756  0000                     _TBLPTRL	set	4086
  7757  0000                     _TBLPTRH	set	4087
  7758  0000                     _TBLPTRU	set	4088
  7759  0000                     _NVMCON1bits	set	3969
  7760  0000                     _T0CON0bits	set	4053
  7761  0000                     _T0CON0	set	4053
  7762  0000                     _TMR0L	set	4051
  7763  0000                     _TMR0H	set	4052
  7764  0000                     _T0CON1	set	4054
  7765  0000                     _ADERRL	set	3950
  7766  0000                     _ADERRH	set	3951
  7767  0000                     _ADPREVL	set	3937
  7768  0000                     _ADPREVH	set	3938
  7769  0000                     _ADFLTRL	set	3954
  7770  0000                     _ADFLTRH	set	3955
  7771  0000                     _ADSTATbits	set	3941
  7772  0000                     _ADACCL	set	3952
  7773  0000                     _ADACCH	set	3953
  7774  0000                     _ADCNT	set	3943
  7775  0000                     _ADRESL	set	3939
  7776  0000                     _ADRESH	set	3940
  7777  0000                     _ADCON0bits	set	3936
  7778  0000                     _ADCON0	set	3936
  7779  0000                     _ADSTAT	set	3941
  7780  0000                     _ADRPT	set	3942
  7781  0000                     _ADSTPTH	set	3945
  7782  0000                     _ADSTPTL	set	3944
  7783  0000                     _ADUTHH	set	3949
  7784  0000                     _ADUTHL	set	3948
  7785  0000                     _ADLTHH	set	3947
  7786  0000                     _ADLTHL	set	3946
  7787  0000                     _TRISC	set	3978
  7788  0000                     _TRISB	set	3977
  7789  0000                     _TRISA	set	3976
  7790  0000                     _LATC	set	3973
  7791  0000                     _LATB	set	3972
  7792  0000                     _LATA	set	3971
  7793  0000                     _INTCONbits	set	4082
  7794                           
  7795                           	psect	cinit
  7796  01A9B0                     __pcinit:
  7797                           	opt callstack 0
  7798  01A9B0                     start_initialization:
  7799                           	opt callstack 0
  7800  01A9B0                     __initialization:
  7801                           	opt callstack 0
  7802                           
  7803                           ; Initialize objects allocated to BANK2 (18 bytes)
  7804                           ; load TBLPTR registers with __pidataBANK2
  7805  01A9B0  0E08               	movlw	low __pidataBANK2
  7806  01A9B2  6EF6               	movwf	tblptrl,c
  7807  01A9B4  0EC7               	movlw	high __pidataBANK2
  7808  01A9B6  6EF7               	movwf	tblptrh,c
  7809  01A9B8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7810  01A9BA  6EF8               	movwf	tblptru,c
  7811  01A9BC  EE02  F0ED         	lfsr	0,__pdataBANK2
  7812  01A9C0  EE10 F012          	lfsr	1,18
  7813  01A9C4                     copy_data0:
  7814  01A9C4  0009               	tblrd		*+
  7815  01A9C6  CFF5 FFEE          	movff	tablat,postinc0
  7816  01A9CA  50E5               	movf	postdec1,w,c
  7817  01A9CC  50E1               	movf	fsr1l,w,c
  7818  01A9CE  E1FA               	bnz	copy_data0
  7819                           
  7820                           ; Initialize objects allocated to BANK1 (18 bytes)
  7821                           ; load TBLPTR registers with __pidataBANK1
  7822  01A9D0  0EF6               	movlw	low __pidataBANK1
  7823  01A9D2  6EF6               	movwf	tblptrl,c
  7824  01A9D4  0EC6               	movlw	high __pidataBANK1
  7825  01A9D6  6EF7               	movwf	tblptrh,c
  7826  01A9D8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  7827  01A9DA  6EF8               	movwf	tblptru,c
  7828  01A9DC  EE01  F0A9         	lfsr	0,__pdataBANK1
  7829  01A9E0  EE10 F012          	lfsr	1,18
  7830  01A9E4                     copy_data1:
  7831  01A9E4  0009               	tblrd		*+
  7832  01A9E6  CFF5 FFEE          	movff	tablat,postinc0
  7833  01A9EA  50E5               	movf	postdec1,w,c
  7834  01A9EC  50E1               	movf	fsr1l,w,c
  7835  01A9EE  E1FA               	bnz	copy_data1
  7836                           
  7837                           ; Initialize objects allocated to BANK0 (2 bytes)
  7838                           ; load TBLPTR registers with __pidataBANK0
  7839  01A9F0  0EF6               	movlw	low __pidataBANK0
  7840  01A9F2  6EF6               	movwf	tblptrl,c
  7841  01A9F4  0EC8               	movlw	high __pidataBANK0
  7842  01A9F6  6EF7               	movwf	tblptrh,c
  7843  01A9F8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7844  01A9FA  6EF8               	movwf	tblptru,c
  7845  01A9FC  0009               	tblrd		*+	;fetch initializer
  7846  01A9FE  CFF5 F0FB          	movff	tablat,__pdataBANK0
  7847  01AA02  0009               	tblrd		*+	;fetch initializer
  7848  01AA04  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
  7849                           
  7850                           ; Clear objects allocated to BIGRAM (1024 bytes)
  7851  01AA08  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  7852  01AA0C  EE14 F000          	lfsr	1,1024
  7853  01AA10                     clear_0:
  7854  01AA10  6AEE               	clrf	postinc0,c
  7855  01AA12  50E5               	movf	postdec1,w,c
  7856  01AA14  50E1               	movf	fsr1l,w,c
  7857  01AA16  E1FC               	bnz	clear_0
  7858  01AA18  50E2               	movf	fsr1h,w,c
  7859  01AA1A  E1FA               	bnz	clear_0
  7860                           
  7861                           ; Clear objects allocated to BANK4 (192 bytes)
  7862  01AA1C  EE04  F000         	lfsr	0,__pbssBANK4
  7863  01AA20  0EC0               	movlw	192
  7864  01AA22                     clear_1:
  7865  01AA22  6AEE               	clrf	postinc0,c
  7866  01AA24  06E8               	decf	wreg,f,c
  7867  01AA26  E1FD               	bnz	clear_1
  7868                           
  7869                           ; Clear objects allocated to BANK3 (209 bytes)
  7870  01AA28  EE03  F000         	lfsr	0,__pbssBANK3
  7871  01AA2C  0ED1               	movlw	209
  7872  01AA2E                     clear_2:
  7873  01AA2E  6AEE               	clrf	postinc0,c
  7874  01AA30  06E8               	decf	wreg,f,c
  7875  01AA32  E1FD               	bnz	clear_2
  7876                           
  7877                           ; Clear objects allocated to BANK2 (47 bytes)
  7878  01AA34  EE02  F0BE         	lfsr	0,__pbssBANK2
  7879  01AA38  0E2F               	movlw	47
  7880  01AA3A                     clear_3:
  7881  01AA3A  6AEE               	clrf	postinc0,c
  7882  01AA3C  06E8               	decf	wreg,f,c
  7883  01AA3E  E1FD               	bnz	clear_3
  7884                           
  7885                           ; Clear objects allocated to BANK1 (72 bytes)
  7886  01AA40  EE01  F061         	lfsr	0,__pbssBANK1
  7887  01AA44  0E48               	movlw	72
  7888  01AA46                     clear_4:
  7889  01AA46  6AEE               	clrf	postinc0,c
  7890  01AA48  06E8               	decf	wreg,f,c
  7891  01AA4A  E1FD               	bnz	clear_4
  7892                           
  7893                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7894  01AA4C  0100               	movlb	0
  7895  01AA4E  6BFD               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7896                           
  7897                           ; Clear objects allocated to BANK0 (66 bytes)
  7898  01AA50  EE00  F0B9         	lfsr	0,__pbssBANK0
  7899  01AA54  0E42               	movlw	66
  7900  01AA56                     clear_5:
  7901  01AA56  6AEE               	clrf	postinc0,c
  7902  01AA58  06E8               	decf	wreg,f,c
  7903  01AA5A  E1FD               	bnz	clear_5
  7904  01AA5C                     end_of_initialization:
  7905                           	opt callstack 0
  7906  01AA5C                     __end_of__initialization:
  7907                           	opt callstack 0
  7908  01AA5C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7909  01AA5E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7910  01AA60  0100               	movlb	0
  7911  01AA62  EF0C  F0BD         	goto	_main	;jump to C main() function
  7912                           
  7913                           	psect	bitbssBANK0
  7914  0007E8                     __pbitbssBANK0:
  7915                           	opt callstack 0
  7916  0007E8                     _eusart2RxStringReady:
  7917                           	opt callstack 0
  7918  0007E8                     	ds	1
  7919                           
  7920                           	psect	bssBANK0
  7921  0000B9                     __pbssBANK0:
  7922                           	opt callstack 0
  7923  0000B9                     _error_handler:
  7924                           	opt callstack 0
  7925  0000B9                     	ds	8
  7926  0000C1                     _adc_result_scaling:
  7927                           	opt callstack 0
  7928  0000C1                     	ds	4
  7929  0000C5                     _device_on_time:
  7930                           	opt callstack 0
  7931  0000C5                     	ds	4
  7932  0000C9                     _TMR0_InterruptHandler:
  7933                           	opt callstack 0
  7934  0000C9                     	ds	3
  7935  0000CC                     _ADCC_ADTI_InterruptHandler:
  7936                           	opt callstack 0
  7937  0000CC                     	ds	3
  7938  0000CF                     I2C2_ISR@pi2c_buf_ptr:
  7939                           	opt callstack 0
  7940  0000CF                     	ds	2
  7941  0000D1                     _p_i2c2_current:
  7942                           	opt callstack 0
  7943  0000D1                     	ds	2
  7944  0000D3                     _p_i2c2_trb_current:
  7945                           	opt callstack 0
  7946  0000D3                     	ds	2
  7947  0000D5                     _qi_isns_average_index:
  7948                           	opt callstack 0
  7949  0000D5                     	ds	1
  7950  0000D6                     _pos12_isns_average_index:
  7951                           	opt callstack 0
  7952  0000D6                     	ds	1
  7953  0000D7                     _live_measurement_enable_flag:
  7954                           	opt callstack 0
  7955  0000D7                     	ds	1
  7956  0000D8                     I2C2_ISR@i2c_10bit_address_restart:
  7957                           	opt callstack 0
  7958  0000D8                     	ds	1
  7959  0000D9                     I2C2_ISR@i2c_bytes_left:
  7960                           	opt callstack 0
  7961  0000D9                     	ds	1
  7962  0000DA                     _i2c2_trb_count:
  7963                           	opt callstack 0
  7964  0000DA                     	ds	1
  7965  0000DB                     _i2c2_state:
  7966                           	opt callstack 0
  7967  0000DB                     	ds	1
  7968  0000DC                     _eusart2RxHead:
  7969                           	opt callstack 0
  7970  0000DC                     	ds	1
  7971  0000DD                     _adc_results:
  7972                           	opt callstack 0
  7973  0000DD                     	ds	28
  7974  0000F9                     I2C2_ISR@i2c_address:
  7975                           	opt callstack 0
  7976  0000F9                     	ds	2
  7977                           
  7978                           	psect	dataBANK0
  7979  0000FB                     __pdataBANK0:
  7980                           	opt callstack 0
  7981  0000FB                     _OLED_update_time:
  7982                           	opt callstack 0
  7983  0000FB                     	ds	1
  7984  0000FC                     _next_adc_channel:
  7985                           	opt callstack 0
  7986  0000FC                     	ds	1
  7987                           
  7988                           	psect	bssBANK1
  7989  000161                     __pbssBANK1:
  7990                           	opt callstack 0
  7991  000161                     _i2c2_object:
  7992                           	opt callstack 0
  7993  000161                     	ds	7
  7994  000168                     _freq_meas_results:
  7995                           	opt callstack 0
  7996  000168                     	ds	6
  7997  00016E                     _TMR1_InterruptHandler:
  7998                           	opt callstack 0
  7999  00016E                     	ds	3
  8000  000171                     _TMR3_InterruptHandler:
  8001                           	opt callstack 0
  8002  000171                     	ds	3
  8003  000174                     _TMR2_InterruptHandler:
  8004                           	opt callstack 0
  8005  000174                     	ds	3
  8006  000177                     _IOCBF3_InterruptHandler:
  8007                           	opt callstack 0
  8008  000177                     	ds	3
  8009  00017A                     _IOCBF2_InterruptHandler:
  8010                           	opt callstack 0
  8011  00017A                     	ds	3
  8012  00017D                     _EUSART2_RxDefaultInterruptHandler:
  8013                           	opt callstack 0
  8014  00017D                     	ds	3
  8015  000180                     _EUSART2_TxDefaultInterruptHandler:
  8016                           	opt callstack 0
  8017  000180                     	ds	3
  8018  000183                     _INT2_InterruptHandler:
  8019                           	opt callstack 0
  8020  000183                     	ds	3
  8021  000186                     _INT1_InterruptHandler:
  8022                           	opt callstack 0
  8023  000186                     	ds	3
  8024  000189                     _timer1ReloadVal:
  8025                           	opt callstack 0
  8026  000189                     	ds	2
  8027  00018B                     _timer5ReloadVal:
  8028                           	opt callstack 0
  8029  00018B                     	ds	2
  8030  00018D                     _timer3ReloadVal:
  8031                           	opt callstack 0
  8032  00018D                     	ds	2
  8033  00018F                     _eusart2TxBufferRemaining:
  8034                           	opt callstack 0
  8035  00018F                     	ds	2
  8036  000191                     _eusart2TxTail:
  8037                           	opt callstack 0
  8038  000191                     	ds	2
  8039  000193                     _eusart2TxHead:
  8040                           	opt callstack 0
  8041  000193                     	ds	2
  8042  000195                     _nxq_charge_state:
  8043                           	opt callstack 0
  8044  000195                     	ds	1
  8045  000196                     _QI_current_edge:
  8046                           	opt callstack 0
  8047  000196                     	ds	1
  8048  000197                     _eusart2RxCount:
  8049                           	opt callstack 0
  8050  000197                     	ds	1
  8051  000198                     _eusart2RxTail:
  8052                           	opt callstack 0
  8053  000198                     	ds	1
  8054  000199                     I2C2_MasterRead@trBlock:
  8055                           	opt callstack 0
  8056  000199                     	ds	5
  8057  00019E                     I2C2_MasterWrite@trBlock:
  8058                           	opt callstack 0
  8059  00019E                     	ds	5
  8060  0001A3                     _i2c2_tr_queue:
  8061                           	opt callstack 0
  8062  0001A3                     	ds	5
  8063  0001A8                     _I2C_STATUS:
  8064                           	opt callstack 0
  8065  0001A8                     	ds	1
  8066                           
  8067                           	psect	dataBANK1
  8068  0001A9                     __pdataBANK1:
  8069                           	opt callstack 0
  8070  0001A9                     getCauseOfResetString@strings:
  8071                           	opt callstack 0
  8072  0001A9                     	ds	18
  8073                           
  8074                           	psect	bssBANK2
  8075  0002BE                     __pbssBANK2:
  8076                           	opt callstack 0
  8077  0002BE                     _adc_calculations:
  8078                           	opt callstack 0
  8079  0002BE                     	ds	20
  8080  0002D2                     _QI_charge_time:
  8081                           	opt callstack 0
  8082  0002D2                     	ds	4
  8083  0002D6                     _OLED_update_flag:
  8084                           	opt callstack 0
  8085  0002D6                     	ds	1
  8086  0002D7                     _OLED_Frame:
  8087                           	opt callstack 0
  8088  0002D7                     	ds	1
  8089  0002D8                     _LM73_start_flag:
  8090                           	opt callstack 0
  8091  0002D8                     	ds	1
  8092  0002D9                     _live_measurement_request_flag:
  8093                           	opt callstack 0
  8094  0002D9                     	ds	1
  8095  0002DA                     _freq_meas_start_flag:
  8096                           	opt callstack 0
  8097  0002DA                     	ds	1
  8098  0002DB                     _LM73_temp_results:
  8099                           	opt callstack 0
  8100  0002DB                     	ds	18
  8101                           
  8102                           	psect	dataBANK2
  8103  0002ED                     __pdataBANK2:
  8104                           	opt callstack 0
  8105  0002ED                     getCauseOfResetStringSmall@strings:
  8106                           	opt callstack 0
  8107  0002ED                     	ds	18
  8108                           
  8109                           	psect	bssBANK3
  8110  000300                     __pbssBANK3:
  8111                           	opt callstack 0
  8112  000300                     _OLED_RAM_Buffer:
  8113                           	opt callstack 0
  8114  000300                     	ds	68
  8115  000344                     _line:
  8116                           	opt callstack 0
  8117  000344                     	ds	64
  8118  000384                     getStringSecondsAsTime@return_string:
  8119                           	opt callstack 0
  8120  000384                     	ds	40
  8121  0003AC                     floatToEngineeringFormat@result:
  8122                           	opt callstack 0
  8123  0003AC                     	ds	20
  8124  0003C0                     ftoa@buf:
  8125                           	opt callstack 0
  8126  0003C0                     	ds	17
  8127                           
  8128                           	psect	bssBANK4
  8129  000400                     __pbssBANK4:
  8130                           	opt callstack 0
  8131  000400                     _qi_isns_average_buffer:
  8132                           	opt callstack 0
  8133  000400                     	ds	64
  8134  000440                     _pos12_isns_average_buffer:
  8135                           	opt callstack 0
  8136  000440                     	ds	64
  8137  000480                     _eusart2RxBuffer:
  8138                           	opt callstack 0
  8139  000480                     	ds	64
  8140                           
  8141                           	psect	bssBIGRAM
  8142  0004C8                     __pbssBIGRAM:
  8143                           	opt callstack 0
  8144  0004C8                     _eusart2TxBuffer:
  8145                           	opt callstack 0
  8146  0004C8                     	ds	1024
  8147                           
  8148                           	psect	cstackBANK4
  8149  0004C0                     __pcstackBANK4:
  8150                           	opt callstack 0
  8151  0004C0                     terminal_ringBufferPull@charNumber:
  8152                           	opt callstack 0
  8153                           
  8154                           ; 2 bytes @ 0x0
  8155  0004C0                     	ds	2
  8156  0004C2                     terminal_ringBufferPull@index_4746:
  8157                           	opt callstack 0
  8158                           
  8159                           ; 2 bytes @ 0x2
  8160  0004C2                     	ds	2
  8161  0004C4                     terminal_ringBufferPull@index:
  8162                           	opt callstack 0
  8163                           
  8164                           ; 2 bytes @ 0x4
  8165  0004C4                     	ds	2
  8166  0004C6                     ??_main:
  8167                           
  8168                           ; 1 bytes @ 0x6
  8169  0004C6                     	ds	2
  8170                           
  8171                           	psect	cstackBANK3
  8172  0003D1                     __pcstackBANK3:
  8173                           	opt callstack 0
  8174  0003D1                     OLED_updateHandler@dev_id_str:
  8175                           	opt callstack 0
  8176  0003D1                     getStringSecondsAsTime@buff:
  8177                           	opt callstack 0
  8178                           
  8179                           ; 20 bytes @ 0x0
  8180  0003D1                     	ds	17
  8181  0003E2                     OLED_updateHandler@rev_id_str:
  8182                           	opt callstack 0
  8183                           
  8184                           ; 17 bytes @ 0x11
  8185  0003E2                     	ds	3
  8186  0003E5                     getStringSecondsAsTime@i:
  8187                           	opt callstack 0
  8188                           
  8189                           ; 1 bytes @ 0x14
  8190  0003E5                     	ds	1
  8191  0003E6                     getStringSecondsAsTime@seconds:
  8192                           	opt callstack 0
  8193                           
  8194                           ; 1 bytes @ 0x15
  8195  0003E6                     	ds	1
  8196  0003E7                     getStringSecondsAsTime@years:
  8197                           	opt callstack 0
  8198                           
  8199                           ; 1 bytes @ 0x16
  8200  0003E7                     	ds	1
  8201  0003E8                     getStringSecondsAsTime@days:
  8202                           	opt callstack 0
  8203                           
  8204                           ; 1 bytes @ 0x17
  8205  0003E8                     	ds	1
  8206  0003E9                     getStringSecondsAsTime@hours:
  8207                           	opt callstack 0
  8208                           
  8209                           ; 1 bytes @ 0x18
  8210  0003E9                     	ds	1
  8211  0003EA                     getStringSecondsAsTime@minutes:
  8212                           	opt callstack 0
  8213                           
  8214                           ; 1 bytes @ 0x19
  8215  0003EA                     	ds	1
  8216  0003EB                     terminalTextAttributes@foreground_color:
  8217                           	opt callstack 0
  8218                           
  8219                           ; 1 bytes @ 0x1A
  8220  0003EB                     	ds	1
  8221  0003EC                     terminalTextAttributes@print_string:
  8222                           	opt callstack 0
  8223                           
  8224                           ; 16 bytes @ 0x1B
  8225  0003EC                     	ds	7
  8226  0003F3                     _OLED_updateHandler$6035:
  8227                           	opt callstack 0
  8228                           
  8229                           ; 2 bytes @ 0x22
  8230  0003F3                     	ds	9
  8231  0003FC                     terminalTextAttributes@i:
  8232                           	opt callstack 0
  8233                           
  8234                           ; 1 bytes @ 0x2B
  8235  0003FC                     	ds	1
  8236  0003FD                     ringBufferLUT@userID:
  8237                           	opt callstack 0
  8238                           
  8239                           ; 2 bytes @ 0x2C
  8240  0003FD                     	ds	2
  8241  0003FF                     ??_terminal_ringBufferPull:
  8242                           
  8243                           ; 1 bytes @ 0x2E
  8244  0003FF                     	ds	1
  8245                           
  8246                           	psect	cstackBANK2
  8247  000200                     __pcstackBANK2:
  8248                           	opt callstack 0
  8249  000200                     ??_TMR5_Initialize:
  8250  000200                     ??_updateErrorLEDs:
  8251  000200                     ??_isdigit:
  8252  000200                     ?_getCauseOfResetString:
  8253                           	opt callstack 0
  8254  000200                     ?_getNXQChargeStateString:
  8255                           	opt callstack 0
  8256  000200                     ?_getNXQChargeStateStringCaps:
  8257                           	opt callstack 0
  8258  000200                     ?_getCauseOfResetStringSmall:
  8259                           	opt callstack 0
  8260  000200                     ?_strlen:
  8261                           	opt callstack 0
  8262  000200                     ?_strcmp:
  8263                           	opt callstack 0
  8264  000200                     ?___wmul:
  8265                           	opt callstack 0
  8266  000200                     ?___awmod:
  8267                           	opt callstack 0
  8268  000200                     ?___lwmod:
  8269                           	opt callstack 0
  8270  000200                     ?__tdiv_to_l_:
  8271                           	opt callstack 0
  8272  000200                     ?__div_to_l_:
  8273                           	opt callstack 0
  8274  000200                     ?___fldiv:
  8275                           	opt callstack 0
  8276  000200                     ?___lldiv:
  8277                           	opt callstack 0
  8278  000200                     ?___flneg:
  8279                           	opt callstack 0
  8280  000200                     EUSART2_Read@readValue:
  8281                           	opt callstack 0
  8282  000200                     EUSART2_Write@txData:
  8283                           	opt callstack 0
  8284  000200                     getCauseOfReset@return_reset_cause:
  8285                           	opt callstack 0
  8286  000200                     TMR3_WriteTimer@timerVal:
  8287                           	opt callstack 0
  8288  000200                     I2C2_MasterTRBInsert@ptrb_list:
  8289                           	opt callstack 0
  8290  000200                     I2C2_MasterReadTRBBuild@ptrb:
  8291                           	opt callstack 0
  8292  000200                     I2C2_MasterWriteTRBBuild@ptrb:
  8293                           	opt callstack 0
  8294  000200                     TMR5_WriteTimer@timerVal:
  8295                           	opt callstack 0
  8296  000200                     TMR1_WriteTimer@timerVal:
  8297                           	opt callstack 0
  8298  000200                     ___wmul@multiplier:
  8299                           	opt callstack 0
  8300  000200                     ___awmod@dividend:
  8301                           	opt callstack 0
  8302  000200                     ___lwmod@dividend:
  8303                           	opt callstack 0
  8304  000200                     memmove@d1:
  8305                           	opt callstack 0
  8306  000200                     strcat@to:
  8307                           	opt callstack 0
  8308  000200                     strcmp@s1:
  8309                           	opt callstack 0
  8310  000200                     strlen@s:
  8311                           	opt callstack 0
  8312  000200                     strncpy@to:
  8313                           	opt callstack 0
  8314  000200                     INT1_SetInterruptHandler@InterruptHandler:
  8315                           	opt callstack 0
  8316  000200                     INT2_SetInterruptHandler@InterruptHandler:
  8317                           	opt callstack 0
  8318  000200                     EUSART2_SetTxInterruptHandler@interruptHandler:
  8319                           	opt callstack 0
  8320  000200                     EUSART2_SetRxInterruptHandler@interruptHandler:
  8321                           	opt callstack 0
  8322  000200                     IOCBF2_SetInterruptHandler@InterruptHandler:
  8323                           	opt callstack 0
  8324  000200                     IOCBF3_SetInterruptHandler@InterruptHandler:
  8325                           	opt callstack 0
  8326  000200                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  8327                           	opt callstack 0
  8328  000200                     TMR0_SetInterruptHandler@InterruptHandler:
  8329                           	opt callstack 0
  8330  000200                     TMR2_SetInterruptHandler@InterruptHandler:
  8331                           	opt callstack 0
  8332  000200                     TMR3_SetInterruptHandler@InterruptHandler:
  8333                           	opt callstack 0
  8334  000200                     TMR1_SetInterruptHandler@InterruptHandler:
  8335                           	opt callstack 0
  8336  000200                     FLASH_ReadByte@flashAddr:
  8337                           	opt callstack 0
  8338  000200                     ___lldiv@dividend:
  8339                           	opt callstack 0
  8340  000200                     __div_to_l_@f1:
  8341                           	opt callstack 0
  8342  000200                     ___fleq@ff1:
  8343                           	opt callstack 0
  8344  000200                     ___flge@ff1:
  8345                           	opt callstack 0
  8346  000200                     ___flneg@f1:
  8347                           	opt callstack 0
  8348  000200                     __tdiv_to_l_@f1:
  8349                           	opt callstack 0
  8350  000200                     ___fldiv@b:
  8351                           	opt callstack 0
  8352                           
  8353                           ; 4 bytes @ 0x0
  8354  000200                     	ds	1
  8355  000201                     putch@txData:
  8356                           	opt callstack 0
  8357  000201                     _isdigit$5455:
  8358                           	opt callstack 0
  8359                           
  8360                           ; 1 bytes @ 0x1
  8361  000201                     	ds	1
  8362  000202                     getCauseOfResetString@r:
  8363                           	opt callstack 0
  8364  000202                     getCauseOfResetStringSmall@r:
  8365                           	opt callstack 0
  8366  000202                     isdigit@c:
  8367                           	opt callstack 0
  8368  000202                     I2C2_MasterTRBInsert@pflag:
  8369                           	opt callstack 0
  8370  000202                     I2C2_MasterReadTRBBuild@pdata:
  8371                           	opt callstack 0
  8372  000202                     I2C2_MasterWriteTRBBuild@pdata:
  8373                           	opt callstack 0
  8374  000202                     ___wmul@multiplicand:
  8375                           	opt callstack 0
  8376  000202                     ___awmod@divisor:
  8377                           	opt callstack 0
  8378  000202                     ___lwmod@divisor:
  8379                           	opt callstack 0
  8380  000202                     memmove@s1:
  8381                           	opt callstack 0
  8382  000202                     strcat@from:
  8383                           	opt callstack 0
  8384  000202                     strcmp@s2:
  8385                           	opt callstack 0
  8386  000202                     strlen@cp:
  8387                           	opt callstack 0
  8388  000202                     strncpy@from:
  8389                           	opt callstack 0
  8390                           
  8391                           ; 2 bytes @ 0x2
  8392  000202                     	ds	1
  8393  000203                     ??_TMR3_Initialize:
  8394  000203                     ??_TMR1_Initialize:
  8395  000203                     strcpy@to:
  8396                           	opt callstack 0
  8397                           
  8398                           ; 2 bytes @ 0x3
  8399  000203                     	ds	1
  8400  000204                     ??_strcmp:
  8401  000204                     ?_FLASH_ReadWord:
  8402                           	opt callstack 0
  8403  000204                     I2C2_MasterReadTRBBuild@length:
  8404                           	opt callstack 0
  8405  000204                     I2C2_MasterWriteTRBBuild@length:
  8406                           	opt callstack 0
  8407  000204                     ___awmod@counter:
  8408                           	opt callstack 0
  8409  000204                     ___lwmod@counter:
  8410                           	opt callstack 0
  8411  000204                     ___wmul@product:
  8412                           	opt callstack 0
  8413  000204                     memmove@n:
  8414                           	opt callstack 0
  8415  000204                     strcat@cp:
  8416                           	opt callstack 0
  8417  000204                     strncpy@size:
  8418                           	opt callstack 0
  8419  000204                     FLASH_ReadWord@flashAddr:
  8420                           	opt callstack 0
  8421  000204                     ___lldiv@divisor:
  8422                           	opt callstack 0
  8423  000204                     __div_to_l_@f2:
  8424                           	opt callstack 0
  8425  000204                     ___fleq@ff2:
  8426                           	opt callstack 0
  8427  000204                     ___flge@ff2:
  8428                           	opt callstack 0
  8429  000204                     __tdiv_to_l_@f2:
  8430                           	opt callstack 0
  8431  000204                     ___fldiv@a:
  8432                           	opt callstack 0
  8433                           
  8434                           ; 4 bytes @ 0x4
  8435  000204                     	ds	1
  8436  000205                     ?___lwdiv:
  8437                           	opt callstack 0
  8438  000205                     I2C2_MasterTRBInsert@count:
  8439                           	opt callstack 0
  8440  000205                     ___awmod@sign:
  8441                           	opt callstack 0
  8442  000205                     I2C2_MasterReadTRBBuild@address:
  8443                           	opt callstack 0
  8444  000205                     I2C2_MasterWriteTRBBuild@address:
  8445                           	opt callstack 0
  8446  000205                     ___lwdiv@dividend:
  8447                           	opt callstack 0
  8448  000205                     strcpy@from:
  8449                           	opt callstack 0
  8450                           
  8451                           ; 2 bytes @ 0x5
  8452  000205                     	ds	1
  8453  000206                     ??_memmove:
  8454  000206                     ?___awdiv:
  8455                           	opt callstack 0
  8456  000206                     strcmp@r:
  8457                           	opt callstack 0
  8458  000206                     ___awdiv@dividend:
  8459                           	opt callstack 0
  8460  000206                     strncpy@cp:
  8461                           	opt callstack 0
  8462                           
  8463                           ; 2 bytes @ 0x6
  8464  000206                     	ds	1
  8465  000207                     ??_I2C2_MasterWriteTRBBuild:
  8466  000207                     ??_I2C2_MasterReadTRBBuild:
  8467  000207                     ___lwdiv@divisor:
  8468                           	opt callstack 0
  8469  000207                     strcpy@cp:
  8470                           	opt callstack 0
  8471                           
  8472                           ; 2 bytes @ 0x7
  8473  000207                     	ds	1
  8474  000208                     ??__tdiv_to_l_:
  8475  000208                     ??___fldiv:
  8476  000208                     ??_FLASH_ReadWord:
  8477  000208                     ??___fleq:
  8478  000208                     ??___flge:
  8479  000208                     ___awdiv@divisor:
  8480                           	opt callstack 0
  8481  000208                     memmove@d:
  8482                           	opt callstack 0
  8483  000208                     ___lldiv@quotient:
  8484                           	opt callstack 0
  8485  000208                     __div_to_l_@quot:
  8486                           	opt callstack 0
  8487                           
  8488                           ; 4 bytes @ 0x8
  8489  000208                     	ds	1
  8490  000209                     ___lwdiv@counter:
  8491                           	opt callstack 0
  8492  000209                     I2C2_MasterWrite@pdata:
  8493                           	opt callstack 0
  8494  000209                     I2C2_MasterRead@pdata:
  8495                           	opt callstack 0
  8496                           
  8497                           ; 2 bytes @ 0x9
  8498  000209                     	ds	1
  8499  00020A                     ___awdiv@counter:
  8500                           	opt callstack 0
  8501  00020A                     ___lwdiv@quotient:
  8502                           	opt callstack 0
  8503  00020A                     memmove@s:
  8504                           	opt callstack 0
  8505                           
  8506                           ; 2 bytes @ 0xA
  8507  00020A                     	ds	1
  8508  00020B                     ??_getMajorRevisionID:
  8509  00020B                     ?_getDeviceID:
  8510                           	opt callstack 0
  8511  00020B                     ?_getUserID:
  8512                           	opt callstack 0
  8513  00020B                     I2C2_MasterWrite@length:
  8514                           	opt callstack 0
  8515  00020B                     I2C2_MasterRead@length:
  8516                           	opt callstack 0
  8517  00020B                     ___awdiv@sign:
  8518                           	opt callstack 0
  8519  00020B                     getMinorRevisionID@REVID_RAW:
  8520                           	opt callstack 0
  8521  00020B                     __tdiv_to_l_@quot:
  8522                           	opt callstack 0
  8523                           
  8524                           ; 4 bytes @ 0xB
  8525  00020B                     	ds	1
  8526  00020C                     ___lldiv@counter:
  8527                           	opt callstack 0
  8528  00020C                     __div_to_l_@cntr:
  8529                           	opt callstack 0
  8530  00020C                     I2C2_MasterWrite@address:
  8531                           	opt callstack 0
  8532  00020C                     I2C2_MasterRead@address:
  8533                           	opt callstack 0
  8534  00020C                     ___awdiv@quotient:
  8535                           	opt callstack 0
  8536  00020C                     ___fldiv@rem:
  8537                           	opt callstack 0
  8538                           
  8539                           ; 4 bytes @ 0xC
  8540  00020C                     	ds	1
  8541  00020D                     ?_getDeviceIDString:
  8542                           	opt callstack 0
  8543  00020D                     ?___llmod:
  8544                           	opt callstack 0
  8545  00020D                     __div_to_l_@exp1:
  8546                           	opt callstack 0
  8547  00020D                     getDeviceIDString@inputDevID:
  8548                           	opt callstack 0
  8549  00020D                     getYearsFromOnTime@input_seconds:
  8550                           	opt callstack 0
  8551  00020D                     getDaysFromOnTime@input_seconds:
  8552                           	opt callstack 0
  8553  00020D                     getHoursFromOnTime@input_seconds:
  8554                           	opt callstack 0
  8555  00020D                     getMinutesFromOnTime@input_seconds:
  8556                           	opt callstack 0
  8557  00020D                     getSecondsFromOnTime@input_seconds:
  8558                           	opt callstack 0
  8559  00020D                     ___llmod@dividend:
  8560                           	opt callstack 0
  8561                           
  8562                           ; 4 bytes @ 0xD
  8563  00020D                     	ds	1
  8564  00020E                     ?___flmul:
  8565                           	opt callstack 0
  8566  00020E                     I2C2_MasterWrite@pflag:
  8567                           	opt callstack 0
  8568  00020E                     I2C2_MasterRead@pflag:
  8569                           	opt callstack 0
  8570  00020E                     getMajorRevisionID@REVID_RAW:
  8571                           	opt callstack 0
  8572  00020E                     ___flmul@b:
  8573                           	opt callstack 0
  8574                           
  8575                           ; 4 bytes @ 0xE
  8576  00020E                     	ds	1
  8577  00020F                     ??_getDeviceIDString:
  8578  00020F                     __tdiv_to_l_@cntr:
  8579                           	opt callstack 0
  8580                           
  8581                           ; 1 bytes @ 0xF
  8582  00020F                     	ds	1
  8583  000210                     ??_OLED_PutChar:
  8584  000210                     OLED_Command@temp:
  8585                           	opt callstack 0
  8586  000210                     __tdiv_to_l_@exp1:
  8587                           	opt callstack 0
  8588  000210                     ___fldiv@sign:
  8589                           	opt callstack 0
  8590  000210                     LM73TempSensorInitialize@output_data_array:
  8591                           	opt callstack 0
  8592                           
  8593                           ; 2 bytes @ 0x10
  8594  000210                     	ds	1
  8595  000211                     ??_getDaysFromOnTime:
  8596  000211                     ??_getHoursFromOnTime:
  8597  000211                     ??_getMinutesFromOnTime:
  8598  000211                     ??_getSecondsFromOnTime:
  8599  000211                     getUserID@inputUserID:
  8600                           	opt callstack 0
  8601  000211                     getYearsFromOnTime@years:
  8602                           	opt callstack 0
  8603  000211                     ___fldiv@new_exp:
  8604                           	opt callstack 0
  8605  000211                     ___llmod@divisor:
  8606                           	opt callstack 0
  8607                           
  8608                           ; 4 bytes @ 0x11
  8609  000211                     	ds	1
  8610  000212                     getUserID@IDOffset:
  8611                           	opt callstack 0
  8612  000212                     OLED_Command@data_array:
  8613                           	opt callstack 0
  8614  000212                     ___flmul@a:
  8615                           	opt callstack 0
  8616                           
  8617                           ; 4 bytes @ 0x12
  8618  000212                     	ds	1
  8619  000213                     ___fldiv@grs:
  8620                           	opt callstack 0
  8621                           
  8622                           ; 4 bytes @ 0x13
  8623  000213                     	ds	1
  8624  000214                     OLED_YX@Column:
  8625                           	opt callstack 0
  8626  000214                     OLED_PutChar@data_array:
  8627                           	opt callstack 0
  8628                           
  8629                           ; 9 bytes @ 0x14
  8630  000214                     	ds	1
  8631  000215                     ??_OLED_YX:
  8632  000215                     getDaysFromOnTime@days:
  8633                           	opt callstack 0
  8634  000215                     getHoursFromOnTime@hours:
  8635                           	opt callstack 0
  8636  000215                     getMinutesFromOnTime@minutes:
  8637                           	opt callstack 0
  8638  000215                     getSecondsFromOnTime@seconds:
  8639                           	opt callstack 0
  8640  000215                     ___llmod@counter:
  8641                           	opt callstack 0
  8642                           
  8643                           ; 1 bytes @ 0x15
  8644  000215                     	ds	1
  8645  000216                     ??___flmul:
  8646  000216                     getDaysFromOnTime@years:
  8647                           	opt callstack 0
  8648  000216                     getHoursFromOnTime@years:
  8649                           	opt callstack 0
  8650  000216                     getMinutesFromOnTime@years:
  8651                           	opt callstack 0
  8652  000216                     getSecondsFromOnTime@years:
  8653                           	opt callstack 0
  8654                           
  8655                           ; 1 bytes @ 0x16
  8656  000216                     	ds	1
  8657  000217                     getHoursFromOnTime@days:
  8658                           	opt callstack 0
  8659  000217                     getMinutesFromOnTime@days:
  8660                           	opt callstack 0
  8661  000217                     getSecondsFromOnTime@days:
  8662                           	opt callstack 0
  8663  000217                     ___fldiv@bexp:
  8664                           	opt callstack 0
  8665                           
  8666                           ; 1 bytes @ 0x17
  8667  000217                     	ds	1
  8668  000218                     getMinutesFromOnTime@hours:
  8669                           	opt callstack 0
  8670  000218                     getSecondsFromOnTime@hours:
  8671                           	opt callstack 0
  8672  000218                     OLED_YX@Row:
  8673                           	opt callstack 0
  8674  000218                     ___fldiv@aexp:
  8675                           	opt callstack 0
  8676                           
  8677                           ; 1 bytes @ 0x18
  8678  000218                     	ds	1
  8679  000219                     getSecondsFromOnTime@minutes:
  8680                           	opt callstack 0
  8681                           
  8682                           ; 1 bytes @ 0x19
  8683  000219                     	ds	1
  8684  00021A                     ___flmul@sign:
  8685                           	opt callstack 0
  8686                           
  8687                           ; 1 bytes @ 0x1A
  8688  00021A                     	ds	1
  8689  00021B                     ___flmul@aexp:
  8690                           	opt callstack 0
  8691                           
  8692                           ; 1 bytes @ 0x1B
  8693  00021B                     	ds	1
  8694  00021C                     ___flmul@grs:
  8695                           	opt callstack 0
  8696                           
  8697                           ; 4 bytes @ 0x1C
  8698  00021C                     	ds	1
  8699  00021D                     OLED_PutChar@input_base:
  8700                           	opt callstack 0
  8701                           
  8702                           ; 2 bytes @ 0x1D
  8703  00021D                     	ds	3
  8704  000220                     OLED_PutChar@ch:
  8705                           	opt callstack 0
  8706  000220                     ___flmul@bexp:
  8707                           	opt callstack 0
  8708                           
  8709                           ; 1 bytes @ 0x20
  8710  000220                     	ds	1
  8711  000221                     OLED_Clear@row:
  8712                           	opt callstack 0
  8713  000221                     OLED_WriteString@s:
  8714                           	opt callstack 0
  8715  000221                     ___flmul@prod:
  8716                           	opt callstack 0
  8717                           
  8718                           ; 4 bytes @ 0x21
  8719  000221                     	ds	2
  8720  000223                     OLED_UpdateFromRAMBuffer@char_index:
  8721                           	opt callstack 0
  8722  000223                     OLED_Clear@col:
  8723                           	opt callstack 0
  8724                           
  8725                           ; 2 bytes @ 0x23
  8726  000223                     	ds	1
  8727  000224                     OLED_UpdateFromRAMBuffer@char_index_4304:
  8728                           	opt callstack 0
  8729                           
  8730                           ; 1 bytes @ 0x24
  8731  000224                     	ds	1
  8732  000225                     OLED_UpdateFromRAMBuffer@char_index_4305:
  8733                           	opt callstack 0
  8734  000225                     ___flmul@temp:
  8735                           	opt callstack 0
  8736                           
  8737                           ; 2 bytes @ 0x25
  8738  000225                     	ds	1
  8739  000226                     OLED_UpdateFromRAMBuffer@char_index_4306:
  8740                           	opt callstack 0
  8741                           
  8742                           ; 1 bytes @ 0x26
  8743  000226                     	ds	1
  8744  000227                     ?_fround:
  8745                           	opt callstack 0
  8746  000227                     ?_scale:
  8747                           	opt callstack 0
  8748                           
  8749                           ; 4 bytes @ 0x27
  8750  000227                     	ds	4
  8751  00022B                     _fround$6037:
  8752                           	opt callstack 0
  8753  00022B                     _scale$6038:
  8754                           	opt callstack 0
  8755                           
  8756                           ; 4 bytes @ 0x2B
  8757  00022B                     	ds	4
  8758  00022F                     scale@scl:
  8759                           	opt callstack 0
  8760  00022F                     _fround$6036:
  8761                           	opt callstack 0
  8762                           
  8763                           ; 4 bytes @ 0x2F
  8764  00022F                     	ds	1
  8765  000230                     ?___fltol:
  8766                           	opt callstack 0
  8767  000230                     ___fltol@f1:
  8768                           	opt callstack 0
  8769                           
  8770                           ; 4 bytes @ 0x30
  8771  000230                     	ds	3
  8772  000233                     fround@prec:
  8773                           	opt callstack 0
  8774                           
  8775                           ; 1 bytes @ 0x33
  8776  000233                     	ds	1
  8777  000234                     ??___fltol:
  8778  000234                     ?___fladd:
  8779                           	opt callstack 0
  8780  000234                     ___fladd@b:
  8781                           	opt callstack 0
  8782                           
  8783                           ; 4 bytes @ 0x34
  8784  000234                     	ds	4
  8785  000238                     ___fltol@sign1:
  8786                           	opt callstack 0
  8787  000238                     ___fladd@a:
  8788                           	opt callstack 0
  8789                           
  8790                           ; 4 bytes @ 0x38
  8791  000238                     	ds	1
  8792  000239                     ___fltol@exp1:
  8793                           	opt callstack 0
  8794                           
  8795                           ; 1 bytes @ 0x39
  8796  000239                     	ds	1
  8797  00023A                     ?_abs:
  8798                           	opt callstack 0
  8799  00023A                     abs@a:
  8800                           	opt callstack 0
  8801                           
  8802                           ; 2 bytes @ 0x3A
  8803  00023A                     	ds	2
  8804  00023C                     ??_abs:
  8805  00023C                     ??___fladd:
  8806                           
  8807                           ; 1 bytes @ 0x3C
  8808  00023C                     	ds	2
  8809  00023E                     ?___xxtofl:
  8810                           	opt callstack 0
  8811  00023E                     ___xxtofl@val:
  8812                           	opt callstack 0
  8813                           
  8814                           ; 4 bytes @ 0x3E
  8815  00023E                     	ds	2
  8816  000240                     ___fladd@signs:
  8817                           	opt callstack 0
  8818                           
  8819                           ; 1 bytes @ 0x40
  8820  000240                     	ds	1
  8821  000241                     ___fladd@aexp:
  8822                           	opt callstack 0
  8823                           
  8824                           ; 1 bytes @ 0x41
  8825  000241                     	ds	1
  8826  000242                     ??___xxtofl:
  8827  000242                     ___fladd@bexp:
  8828                           	opt callstack 0
  8829                           
  8830                           ; 1 bytes @ 0x42
  8831  000242                     	ds	1
  8832  000243                     ___fladd@grs:
  8833                           	opt callstack 0
  8834                           
  8835                           ; 1 bytes @ 0x43
  8836  000243                     	ds	3
  8837  000246                     ___xxtofl@sign:
  8838                           	opt callstack 0
  8839                           
  8840                           ; 1 bytes @ 0x46
  8841  000246                     	ds	1
  8842  000247                     ___xxtofl@exp:
  8843                           	opt callstack 0
  8844                           
  8845                           ; 1 bytes @ 0x47
  8846  000247                     	ds	1
  8847  000248                     ___xxtofl@arg:
  8848                           	opt callstack 0
  8849                           
  8850                           ; 4 bytes @ 0x48
  8851  000248                     	ds	4
  8852  00024C                     ??_LM73Convert:
  8853  00024C                     ?___flsub:
  8854                           	opt callstack 0
  8855  00024C                     ___flsub@b:
  8856                           	opt callstack 0
  8857                           
  8858                           ; 4 bytes @ 0x4C
  8859  00024C                     	ds	3
  8860  00024F                     LM73Convert@QI_Conv:
  8861                           	opt callstack 0
  8862                           
  8863                           ; 2 bytes @ 0x4F
  8864  00024F                     	ds	1
  8865  000250                     ___flsub@a:
  8866                           	opt callstack 0
  8867                           
  8868                           ; 4 bytes @ 0x50
  8869  000250                     	ds	1
  8870  000251                     LM73Convert@POS5_Conv:
  8871                           	opt callstack 0
  8872                           
  8873                           ; 2 bytes @ 0x51
  8874  000251                     	ds	2
  8875  000253                     LM73Convert@Ambient_Conv:
  8876                           	opt callstack 0
  8877                           
  8878                           ; 2 bytes @ 0x53
  8879  000253                     	ds	1
  8880  000254                     ?__doprnt:
  8881                           	opt callstack 0
  8882  000254                     __doprnt@pb:
  8883                           	opt callstack 0
  8884                           
  8885                           ; 2 bytes @ 0x54
  8886  000254                     	ds	1
  8887  000255                     
  8888                           ; 1 bytes @ 0x55
  8889  000255                     	ds	1
  8890  000256                     __doprnt@f:
  8891                           	opt callstack 0
  8892                           
  8893                           ; 2 bytes @ 0x56
  8894  000256                     	ds	2
  8895  000258                     __doprnt@ap:
  8896                           	opt callstack 0
  8897                           
  8898                           ; 2 bytes @ 0x58
  8899  000258                     	ds	2
  8900  00025A                     ??__doprnt:
  8901                           
  8902                           ; 1 bytes @ 0x5A
  8903  00025A                     	ds	4
  8904  00025E                     __doprnt$6039:
  8905                           	opt callstack 0
  8906                           
  8907                           ; 4 bytes @ 0x5E
  8908  00025E                     	ds	4
  8909  000262                     __doprnt@idx:
  8910                           	opt callstack 0
  8911                           
  8912                           ; 1 bytes @ 0x62
  8913  000262                     	ds	1
  8914  000263                     __doprnt$4981:
  8915                           	opt callstack 0
  8916                           
  8917                           ; 2 bytes @ 0x63
  8918  000263                     	ds	2
  8919  000265                     __doprnt$4982:
  8920                           	opt callstack 0
  8921                           
  8922                           ; 2 bytes @ 0x65
  8923  000265                     	ds	2
  8924  000267                     __doprnt$4983:
  8925                           	opt callstack 0
  8926                           
  8927                           ; 2 bytes @ 0x67
  8928  000267                     	ds	2
  8929  000269                     __doprnt$4984:
  8930                           	opt callstack 0
  8931                           
  8932                           ; 2 bytes @ 0x69
  8933  000269                     	ds	2
  8934  00026B                     __doprnt$4985:
  8935                           	opt callstack 0
  8936                           
  8937                           ; 2 bytes @ 0x6B
  8938  00026B                     	ds	2
  8939  00026D                     __doprnt$4986:
  8940                           	opt callstack 0
  8941                           
  8942                           ; 2 bytes @ 0x6D
  8943  00026D                     	ds	2
  8944  00026F                     __doprnt$4987:
  8945                           	opt callstack 0
  8946                           
  8947                           ; 2 bytes @ 0x6F
  8948  00026F                     	ds	2
  8949  000271                     __doprnt$4988:
  8950                           	opt callstack 0
  8951                           
  8952                           ; 2 bytes @ 0x71
  8953  000271                     	ds	2
  8954  000273                     __doprnt@cp:
  8955                           	opt callstack 0
  8956                           
  8957                           ; 2 bytes @ 0x73
  8958  000273                     	ds	2
  8959  000275                     __doprnt@len:
  8960                           	opt callstack 0
  8961                           
  8962                           ; 2 bytes @ 0x75
  8963  000275                     	ds	2
  8964  000277                     __doprnt@eexp:
  8965                           	opt callstack 0
  8966                           
  8967                           ; 2 bytes @ 0x77
  8968  000277                     	ds	2
  8969  000279                     __doprnt@tmpval:
  8970                           	opt callstack 0
  8971                           
  8972                           ; 4 bytes @ 0x79
  8973  000279                     	ds	4
  8974  00027D                     __doprnt@fval:
  8975                           	opt callstack 0
  8976                           
  8977                           ; 4 bytes @ 0x7D
  8978  00027D                     	ds	4
  8979  000281                     __doprnt@val:
  8980                           	opt callstack 0
  8981                           
  8982                           ; 4 bytes @ 0x81
  8983  000281                     	ds	4
  8984  000285                     __doprnt@width:
  8985                           	opt callstack 0
  8986                           
  8987                           ; 2 bytes @ 0x85
  8988  000285                     	ds	2
  8989  000287                     __doprnt@prec:
  8990                           	opt callstack 0
  8991                           
  8992                           ; 2 bytes @ 0x87
  8993  000287                     	ds	2
  8994  000289                     __doprnt@flag:
  8995                           	opt callstack 0
  8996                           
  8997                           ; 2 bytes @ 0x89
  8998  000289                     	ds	2
  8999  00028B                     __doprnt@c:
  9000                           	opt callstack 0
  9001                           
  9002                           ; 1 bytes @ 0x8B
  9003  00028B                     	ds	1
  9004  00028C                     ?_sprintf:
  9005                           	opt callstack 0
  9006  00028C                     sprintf@wh:
  9007                           	opt callstack 0
  9008                           
  9009                           ; 2 bytes @ 0x8C
  9010  00028C                     	ds	2
  9011  00028E                     sprintf@f:
  9012                           	opt callstack 0
  9013                           
  9014                           ; 2 bytes @ 0x8E
  9015  00028E                     	ds	10
  9016  000298                     sprintf@ap:
  9017                           	opt callstack 0
  9018                           
  9019                           ; 2 bytes @ 0x98
  9020  000298                     	ds	2
  9021  00029A                     sprintf@pb:
  9022                           	opt callstack 0
  9023                           
  9024                           ; 5 bytes @ 0x9A
  9025  00029A                     	ds	5
  9026  00029F                     ?_getStringSecondsAsTime:
  9027                           	opt callstack 0
  9028  00029F                     ?_floatToEngineeringFormat:
  9029                           	opt callstack 0
  9030  00029F                     getStringSecondsAsTime@input_seconds:
  9031                           	opt callstack 0
  9032  00029F                     floatToEngineeringFormat@input_value:
  9033                           	opt callstack 0
  9034                           
  9035                           ; 4 bytes @ 0x9F
  9036  00029F                     	ds	4
  9037  0002A3                     ??_getStringSecondsAsTime:
  9038  0002A3                     floatToEngineeringFormat@mag:
  9039                           	opt callstack 0
  9040                           
  9041                           ; 4 bytes @ 0xA3
  9042  0002A3                     	ds	4
  9043  0002A7                     floatToEngineeringFormat@res:
  9044                           	opt callstack 0
  9045                           
  9046                           ; 2 bytes @ 0xA7
  9047  0002A7                     	ds	2
  9048  0002A9                     ??_OLED_updateHandler:
  9049  0002A9                     ?_printf:
  9050                           	opt callstack 0
  9051  0002A9                     printf@f:
  9052                           	opt callstack 0
  9053                           
  9054                           ; 2 bytes @ 0xA9
  9055  0002A9                     	ds	8
  9056  0002B1                     printf@ap:
  9057                           	opt callstack 0
  9058                           
  9059                           ; 2 bytes @ 0xB1
  9060  0002B1                     	ds	2
  9061  0002B3                     printf@pb:
  9062                           	opt callstack 0
  9063                           
  9064                           ; 5 bytes @ 0xB3
  9065  0002B3                     	ds	5
  9066  0002B8                     terminalTextAttributes@background_color:
  9067                           	opt callstack 0
  9068                           
  9069                           ; 1 bytes @ 0xB8
  9070  0002B8                     	ds	1
  9071  0002B9                     terminalTextAttributes@input_attribute:
  9072                           	opt callstack 0
  9073                           
  9074                           ; 1 bytes @ 0xB9
  9075  0002B9                     	ds	1
  9076  0002BA                     ringBufferLUT@line:
  9077                           	opt callstack 0
  9078                           
  9079                           ; 2 bytes @ 0xBA
  9080  0002BA                     	ds	2
  9081  0002BC                     ??_ringBufferLUT:
  9082                           
  9083                           ; 1 bytes @ 0xBC
  9084  0002BC                     	ds	2
  9085                           
  9086                           	psect	cstackBANK1
  9087  000100                     __pcstackBANK1:
  9088                           	opt callstack 0
  9089  000100                     ??_I2C2_Stop:
  9090  000100                     ?i1___xxtofl:
  9091                           	opt callstack 0
  9092  000100                     ADCC_StartConversion@channel:
  9093                           	opt callstack 0
  9094  000100                     i1TMR3_WriteTimer@timerVal:
  9095                           	opt callstack 0
  9096  000100                     i1___xxtofl@val:
  9097                           	opt callstack 0
  9098                           
  9099                           ; 4 bytes @ 0x0
  9100  000100                     	ds	1
  9101  000101                     
  9102                           ; 1 bytes @ 0x1
  9103  000101                     	ds	1
  9104  000102                     I2C2_Stop@completion_code:
  9105                           	opt callstack 0
  9106                           
  9107                           ; 1 bytes @ 0x2
  9108  000102                     	ds	1
  9109  000103                     ??_I2C2_ISR:
  9110                           
  9111                           ; 1 bytes @ 0x3
  9112  000103                     	ds	1
  9113  000104                     ??i1___xxtofl:
  9114                           
  9115                           ; 1 bytes @ 0x4
  9116  000104                     	ds	4
  9117  000108                     i1___xxtofl@sign:
  9118                           	opt callstack 0
  9119                           
  9120                           ; 1 bytes @ 0x8
  9121  000108                     	ds	1
  9122  000109                     i1___xxtofl@exp:
  9123                           	opt callstack 0
  9124                           
  9125                           ; 1 bytes @ 0x9
  9126  000109                     	ds	1
  9127  00010A                     i1___xxtofl@arg:
  9128                           	opt callstack 0
  9129                           
  9130                           ; 4 bytes @ 0xA
  9131  00010A                     	ds	4
  9132  00010E                     ?i1___fladd:
  9133                           	opt callstack 0
  9134  00010E                     i1___fladd@b:
  9135                           	opt callstack 0
  9136                           
  9137                           ; 4 bytes @ 0xE
  9138  00010E                     	ds	4
  9139  000112                     i1___fladd@a:
  9140                           	opt callstack 0
  9141                           
  9142                           ; 4 bytes @ 0x12
  9143  000112                     	ds	4
  9144  000116                     ??i1___fladd:
  9145                           
  9146                           ; 1 bytes @ 0x16
  9147  000116                     	ds	4
  9148  00011A                     i1___fladd@signs:
  9149                           	opt callstack 0
  9150                           
  9151                           ; 1 bytes @ 0x1A
  9152  00011A                     	ds	1
  9153  00011B                     i1___fladd@aexp:
  9154                           	opt callstack 0
  9155                           
  9156                           ; 1 bytes @ 0x1B
  9157  00011B                     	ds	1
  9158  00011C                     i1___fladd@bexp:
  9159                           	opt callstack 0
  9160                           
  9161                           ; 1 bytes @ 0x1C
  9162  00011C                     	ds	1
  9163  00011D                     i1___fladd@grs:
  9164                           	opt callstack 0
  9165                           
  9166                           ; 1 bytes @ 0x1D
  9167  00011D                     	ds	1
  9168  00011E                     ?i1___fldiv:
  9169                           	opt callstack 0
  9170  00011E                     i1___fldiv@b:
  9171                           	opt callstack 0
  9172                           
  9173                           ; 4 bytes @ 0x1E
  9174  00011E                     	ds	4
  9175  000122                     i1___fldiv@a:
  9176                           	opt callstack 0
  9177                           
  9178                           ; 4 bytes @ 0x22
  9179  000122                     	ds	4
  9180  000126                     ??i1___fldiv:
  9181                           
  9182                           ; 1 bytes @ 0x26
  9183  000126                     	ds	4
  9184  00012A                     i1___fldiv@rem:
  9185                           	opt callstack 0
  9186                           
  9187                           ; 4 bytes @ 0x2A
  9188  00012A                     	ds	4
  9189  00012E                     i1___fldiv@sign:
  9190                           	opt callstack 0
  9191                           
  9192                           ; 1 bytes @ 0x2E
  9193  00012E                     	ds	1
  9194  00012F                     i1___fldiv@new_exp:
  9195                           	opt callstack 0
  9196                           
  9197                           ; 2 bytes @ 0x2F
  9198  00012F                     	ds	2
  9199  000131                     i1___fldiv@grs:
  9200                           	opt callstack 0
  9201                           
  9202                           ; 4 bytes @ 0x31
  9203  000131                     	ds	4
  9204  000135                     i1___fldiv@bexp:
  9205                           	opt callstack 0
  9206                           
  9207                           ; 1 bytes @ 0x35
  9208  000135                     	ds	1
  9209  000136                     i1___fldiv@aexp:
  9210                           	opt callstack 0
  9211                           
  9212                           ; 1 bytes @ 0x36
  9213  000136                     	ds	1
  9214  000137                     ?i1___flmul:
  9215                           	opt callstack 0
  9216  000137                     i1___flmul@b:
  9217                           	opt callstack 0
  9218                           
  9219                           ; 4 bytes @ 0x37
  9220  000137                     	ds	4
  9221  00013B                     i1___flmul@a:
  9222                           	opt callstack 0
  9223                           
  9224                           ; 4 bytes @ 0x3B
  9225  00013B                     	ds	4
  9226  00013F                     ??i1___flmul:
  9227                           
  9228                           ; 1 bytes @ 0x3F
  9229  00013F                     	ds	4
  9230  000143                     i1___flmul@sign:
  9231                           	opt callstack 0
  9232                           
  9233                           ; 1 bytes @ 0x43
  9234  000143                     	ds	1
  9235  000144                     i1___flmul@grs:
  9236                           	opt callstack 0
  9237                           
  9238                           ; 4 bytes @ 0x44
  9239  000144                     	ds	4
  9240  000148                     i1___flmul@aexp:
  9241                           	opt callstack 0
  9242                           
  9243                           ; 1 bytes @ 0x48
  9244  000148                     	ds	1
  9245  000149                     i1___flmul@bexp:
  9246                           	opt callstack 0
  9247                           
  9248                           ; 1 bytes @ 0x49
  9249  000149                     	ds	1
  9250  00014A                     i1___flmul@prod:
  9251                           	opt callstack 0
  9252                           
  9253                           ; 4 bytes @ 0x4A
  9254  00014A                     	ds	4
  9255  00014E                     i1___flmul@temp:
  9256                           	opt callstack 0
  9257                           
  9258                           ; 2 bytes @ 0x4E
  9259  00014E                     	ds	2
  9260  000150                     freqMeasConvert@qi_period:
  9261                           	opt callstack 0
  9262                           
  9263                           ; 4 bytes @ 0x50
  9264  000150                     	ds	4
  9265  000154                     CCP2_CallBack@capturedValue:
  9266                           	opt callstack 0
  9267                           
  9268                           ; 2 bytes @ 0x54
  9269  000154                     	ds	2
  9270  000156                     CCP2_CaptureISR@module:
  9271                           	opt callstack 0
  9272                           
  9273                           ; 2 bytes @ 0x56
  9274  000156                     	ds	2
  9275  000158                     ??_INTERRUPT_InterruptManagerLow:
  9276                           
  9277                           ; 1 bytes @ 0x58
  9278  000158                     	ds	9
  9279                           
  9280                           	psect	cstackBANK0
  9281  000060                     __pcstackBANK0:
  9282                           	opt callstack 0
  9283  000060                     i2___fladd@signs:
  9284                           	opt callstack 0
  9285                           
  9286                           ; 1 bytes @ 0x0
  9287  000060                     	ds	1
  9288  000061                     i2___fladd@aexp:
  9289                           	opt callstack 0
  9290                           
  9291                           ; 1 bytes @ 0x1
  9292  000061                     	ds	1
  9293  000062                     i2___fladd@bexp:
  9294                           	opt callstack 0
  9295                           
  9296                           ; 1 bytes @ 0x2
  9297  000062                     	ds	1
  9298  000063                     i2___fladd@grs:
  9299                           	opt callstack 0
  9300                           
  9301                           ; 1 bytes @ 0x3
  9302  000063                     	ds	1
  9303  000064                     ?i2___flsub:
  9304                           	opt callstack 0
  9305  000064                     i2___flsub@b:
  9306                           	opt callstack 0
  9307                           
  9308                           ; 4 bytes @ 0x4
  9309  000064                     	ds	4
  9310  000068                     i2___flsub@a:
  9311                           	opt callstack 0
  9312                           
  9313                           ; 4 bytes @ 0x8
  9314  000068                     	ds	4
  9315  00006C                     ?i2__doprnt:
  9316                           	opt callstack 0
  9317  00006C                     i2__doprnt@pb:
  9318                           	opt callstack 0
  9319  00006C                     _ADC_PostProcessingHandler$6419:
  9320                           	opt callstack 0
  9321                           
  9322                           ; 4 bytes @ 0xC
  9323  00006C                     	ds	2
  9324  00006E                     i2__doprnt@f:
  9325                           	opt callstack 0
  9326                           
  9327                           ; 2 bytes @ 0xE
  9328  00006E                     	ds	2
  9329  000070                     i2__doprnt@ap:
  9330                           	opt callstack 0
  9331  000070                     _ADC_PostProcessingHandler$6420:
  9332                           	opt callstack 0
  9333                           
  9334                           ; 4 bytes @ 0x10
  9335  000070                     	ds	2
  9336  000072                     ??i2__doprnt:
  9337                           
  9338                           ; 1 bytes @ 0x12
  9339  000072                     	ds	2
  9340  000074                     _ADC_PostProcessingHandler$6421:
  9341                           	opt callstack 0
  9342                           
  9343                           ; 4 bytes @ 0x14
  9344  000074                     	ds	2
  9345  000076                     i2__doprnt$6425:
  9346                           	opt callstack 0
  9347                           
  9348                           ; 4 bytes @ 0x16
  9349  000076                     	ds	2
  9350  000078                     ADC_PostProcessingHandler@current_adc_channel:
  9351                           	opt callstack 0
  9352                           
  9353                           ; 1 bytes @ 0x18
  9354  000078                     	ds	1
  9355  000079                     ADC_PostProcessingHandler@i:
  9356                           	opt callstack 0
  9357                           
  9358                           ; 1 bytes @ 0x19
  9359  000079                     	ds	1
  9360  00007A                     ADC_PostProcessingHandler@i_3557:
  9361                           	opt callstack 0
  9362  00007A                     i2__doprnt@idx:
  9363                           	opt callstack 0
  9364                           
  9365                           ; 1 bytes @ 0x1A
  9366  00007A                     	ds	1
  9367  00007B                     i2__doprnt$4981:
  9368                           	opt callstack 0
  9369  00007B                     _ADC_PostProcessingHandler$6417:
  9370                           	opt callstack 0
  9371                           
  9372                           ; 4 bytes @ 0x1B
  9373  00007B                     	ds	2
  9374  00007D                     i2__doprnt$4982:
  9375                           	opt callstack 0
  9376                           
  9377                           ; 2 bytes @ 0x1D
  9378  00007D                     	ds	2
  9379  00007F                     i2__doprnt$4983:
  9380                           	opt callstack 0
  9381  00007F                     _ADC_PostProcessingHandler$6418:
  9382                           	opt callstack 0
  9383                           
  9384                           ; 4 bytes @ 0x1F
  9385  00007F                     	ds	2
  9386  000081                     i2__doprnt$4984:
  9387                           	opt callstack 0
  9388                           
  9389                           ; 2 bytes @ 0x21
  9390  000081                     	ds	2
  9391  000083                     i2__doprnt$4985:
  9392                           	opt callstack 0
  9393                           
  9394                           ; 2 bytes @ 0x23
  9395  000083                     	ds	2
  9396  000085                     i2__doprnt$4986:
  9397                           	opt callstack 0
  9398                           
  9399                           ; 2 bytes @ 0x25
  9400  000085                     	ds	2
  9401  000087                     i2__doprnt$4987:
  9402                           	opt callstack 0
  9403                           
  9404                           ; 2 bytes @ 0x27
  9405  000087                     	ds	2
  9406  000089                     i2__doprnt$4988:
  9407                           	opt callstack 0
  9408                           
  9409                           ; 2 bytes @ 0x29
  9410  000089                     	ds	2
  9411  00008B                     i2__doprnt@cp:
  9412                           	opt callstack 0
  9413                           
  9414                           ; 2 bytes @ 0x2B
  9415  00008B                     	ds	2
  9416  00008D                     i2__doprnt@len:
  9417                           	opt callstack 0
  9418                           
  9419                           ; 2 bytes @ 0x2D
  9420  00008D                     	ds	2
  9421  00008F                     i2__doprnt@eexp:
  9422                           	opt callstack 0
  9423                           
  9424                           ; 2 bytes @ 0x2F
  9425  00008F                     	ds	2
  9426  000091                     i2__doprnt@tmpval:
  9427                           	opt callstack 0
  9428                           
  9429                           ; 4 bytes @ 0x31
  9430  000091                     	ds	4
  9431  000095                     i2__doprnt@fval:
  9432                           	opt callstack 0
  9433                           
  9434                           ; 4 bytes @ 0x35
  9435  000095                     	ds	4
  9436  000099                     i2__doprnt@val:
  9437                           	opt callstack 0
  9438                           
  9439                           ; 4 bytes @ 0x39
  9440  000099                     	ds	4
  9441  00009D                     i2__doprnt@width:
  9442                           	opt callstack 0
  9443                           
  9444                           ; 2 bytes @ 0x3D
  9445  00009D                     	ds	2
  9446  00009F                     i2__doprnt@prec:
  9447                           	opt callstack 0
  9448                           
  9449                           ; 2 bytes @ 0x3F
  9450  00009F                     	ds	2
  9451  0000A1                     i2__doprnt@flag:
  9452                           	opt callstack 0
  9453                           
  9454                           ; 2 bytes @ 0x41
  9455  0000A1                     	ds	2
  9456  0000A3                     i2__doprnt@c:
  9457                           	opt callstack 0
  9458                           
  9459                           ; 1 bytes @ 0x43
  9460  0000A3                     	ds	1
  9461  0000A4                     ?i2_printf:
  9462                           	opt callstack 0
  9463  0000A4                     i2printf@f:
  9464                           	opt callstack 0
  9465                           
  9466                           ; 2 bytes @ 0x44
  9467  0000A4                     	ds	2
  9468  0000A6                     i2printf@ap:
  9469                           	opt callstack 0
  9470                           
  9471                           ; 2 bytes @ 0x46
  9472  0000A6                     	ds	2
  9473  0000A8                     i2printf@pb:
  9474                           	opt callstack 0
  9475                           
  9476                           ; 5 bytes @ 0x48
  9477  0000A8                     	ds	5
  9478  0000AD                     ??_INTERRUPT_InterruptManagerHigh:
  9479                           
  9480                           ; 1 bytes @ 0x4D
  9481  0000AD                     	ds	12
  9482                           
  9483                           	psect	cstackCOMRAM
  9484  000001                     __pcstackCOMRAM:
  9485                           	opt callstack 0
  9486  000001                     ??i2_isdigit:
  9487  000001                     ?_ADCC_GetConversionResult:
  9488                           	opt callstack 0
  9489  000001                     ?_ADCC_GetFilterValue:
  9490                           	opt callstack 0
  9491  000001                     ?i2___wmul:
  9492                           	opt callstack 0
  9493  000001                     ?i2___awmod:
  9494                           	opt callstack 0
  9495  000001                     ?i2___lwmod:
  9496                           	opt callstack 0
  9497  000001                     ?i2___lldiv:
  9498                           	opt callstack 0
  9499  000001                     ?i2__div_to_l_:
  9500                           	opt callstack 0
  9501  000001                     ?i2___flneg:
  9502                           	opt callstack 0
  9503  000001                     ?i2__tdiv_to_l_:
  9504                           	opt callstack 0
  9505  000001                     i2EUSART2_Write@txData:
  9506                           	opt callstack 0
  9507  000001                     i2TMR3_WriteTimer@timerVal:
  9508                           	opt callstack 0
  9509  000001                     i2TMR1_WriteTimer@timerVal:
  9510                           	opt callstack 0
  9511  000001                     i2___wmul@multiplier:
  9512                           	opt callstack 0
  9513  000001                     i2___awmod@dividend:
  9514                           	opt callstack 0
  9515  000001                     i2___lwmod@dividend:
  9516                           	opt callstack 0
  9517  000001                     i2___lldiv@dividend:
  9518                           	opt callstack 0
  9519  000001                     i2__div_to_l_@f1:
  9520                           	opt callstack 0
  9521  000001                     i2___fleq@ff1:
  9522                           	opt callstack 0
  9523  000001                     i2___flge@ff1:
  9524                           	opt callstack 0
  9525  000001                     i2___flneg@f1:
  9526                           	opt callstack 0
  9527  000001                     i2__tdiv_to_l_@f1:
  9528                           	opt callstack 0
  9529                           
  9530                           ; 4 bytes @ 0x0
  9531  000001                     	ds	1
  9532  000002                     i2putch@txData:
  9533                           	opt callstack 0
  9534  000002                     i2_isdigit$5455:
  9535                           	opt callstack 0
  9536                           
  9537                           ; 1 bytes @ 0x1
  9538  000002                     	ds	1
  9539  000003                     ??_ADCC_GetConversionResult:
  9540  000003                     ??_ADCC_GetFilterValue:
  9541  000003                     i2isdigit@c:
  9542                           	opt callstack 0
  9543  000003                     i2___wmul@multiplicand:
  9544                           	opt callstack 0
  9545  000003                     i2___awmod@divisor:
  9546                           	opt callstack 0
  9547  000003                     i2___lwmod@divisor:
  9548                           	opt callstack 0
  9549                           
  9550                           ; 2 bytes @ 0x2
  9551  000003                     	ds	2
  9552  000005                     ?_fabs:
  9553                           	opt callstack 0
  9554  000005                     ?i2___xxtofl:
  9555                           	opt callstack 0
  9556  000005                     i2___awmod@counter:
  9557                           	opt callstack 0
  9558  000005                     i2___lwmod@counter:
  9559                           	opt callstack 0
  9560  000005                     i2___wmul@product:
  9561                           	opt callstack 0
  9562  000005                     fabs@d:
  9563                           	opt callstack 0
  9564  000005                     i2___lldiv@divisor:
  9565                           	opt callstack 0
  9566  000005                     i2__div_to_l_@f2:
  9567                           	opt callstack 0
  9568  000005                     i2___fleq@ff2:
  9569                           	opt callstack 0
  9570  000005                     i2___flge@ff2:
  9571                           	opt callstack 0
  9572  000005                     i2__tdiv_to_l_@f2:
  9573                           	opt callstack 0
  9574  000005                     i2___xxtofl@val:
  9575                           	opt callstack 0
  9576                           
  9577                           ; 4 bytes @ 0x4
  9578  000005                     	ds	1
  9579  000006                     ?i2___lwdiv:
  9580                           	opt callstack 0
  9581  000006                     i2___awmod@sign:
  9582                           	opt callstack 0
  9583  000006                     i2___lwdiv@dividend:
  9584                           	opt callstack 0
  9585                           
  9586                           ; 2 bytes @ 0x5
  9587  000006                     	ds	1
  9588  000007                     ?i2___awdiv:
  9589                           	opt callstack 0
  9590  000007                     i2___awdiv@dividend:
  9591                           	opt callstack 0
  9592                           
  9593                           ; 2 bytes @ 0x6
  9594  000007                     	ds	1
  9595  000008                     i2___lwdiv@divisor:
  9596                           	opt callstack 0
  9597                           
  9598                           ; 2 bytes @ 0x7
  9599  000008                     	ds	1
  9600  000009                     ??i2___fleq:
  9601  000009                     ??i2___flge:
  9602  000009                     ??i2__tdiv_to_l_:
  9603  000009                     ??i2___xxtofl:
  9604  000009                     i2___awdiv@divisor:
  9605                           	opt callstack 0
  9606  000009                     i2___lldiv@quotient:
  9607                           	opt callstack 0
  9608  000009                     i2__div_to_l_@quot:
  9609                           	opt callstack 0
  9610                           
  9611                           ; 4 bytes @ 0x8
  9612  000009                     	ds	1
  9613  00000A                     i2___lwdiv@counter:
  9614                           	opt callstack 0
  9615                           
  9616                           ; 1 bytes @ 0x9
  9617  00000A                     	ds	1
  9618  00000B                     i2___awdiv@counter:
  9619                           	opt callstack 0
  9620  00000B                     i2___lwdiv@quotient:
  9621                           	opt callstack 0
  9622                           
  9623                           ; 2 bytes @ 0xA
  9624  00000B                     	ds	1
  9625  00000C                     i2___awdiv@sign:
  9626                           	opt callstack 0
  9627  00000C                     i2__tdiv_to_l_@quot:
  9628                           	opt callstack 0
  9629                           
  9630                           ; 4 bytes @ 0xB
  9631  00000C                     	ds	1
  9632  00000D                     i2___lldiv@counter:
  9633                           	opt callstack 0
  9634  00000D                     i2__div_to_l_@cntr:
  9635                           	opt callstack 0
  9636  00000D                     i2___xxtofl@sign:
  9637                           	opt callstack 0
  9638  00000D                     i2___awdiv@quotient:
  9639                           	opt callstack 0
  9640                           
  9641                           ; 2 bytes @ 0xC
  9642  00000D                     	ds	1
  9643  00000E                     ?i2___llmod:
  9644                           	opt callstack 0
  9645  00000E                     i2__div_to_l_@exp1:
  9646                           	opt callstack 0
  9647  00000E                     i2___xxtofl@exp:
  9648                           	opt callstack 0
  9649  00000E                     i2___llmod@dividend:
  9650                           	opt callstack 0
  9651                           
  9652                           ; 4 bytes @ 0xD
  9653  00000E                     	ds	1
  9654  00000F                     i2___xxtofl@arg:
  9655                           	opt callstack 0
  9656                           
  9657                           ; 4 bytes @ 0xE
  9658  00000F                     	ds	1
  9659  000010                     i2__tdiv_to_l_@cntr:
  9660                           	opt callstack 0
  9661                           
  9662                           ; 1 bytes @ 0xF
  9663  000010                     	ds	1
  9664  000011                     i2__tdiv_to_l_@exp1:
  9665                           	opt callstack 0
  9666                           
  9667                           ; 1 bytes @ 0x10
  9668  000011                     	ds	1
  9669  000012                     i2___llmod@divisor:
  9670                           	opt callstack 0
  9671                           
  9672                           ; 4 bytes @ 0x11
  9673  000012                     	ds	1
  9674  000013                     ?i2___fldiv:
  9675                           	opt callstack 0
  9676  000013                     i2___fldiv@b:
  9677                           	opt callstack 0
  9678                           
  9679                           ; 4 bytes @ 0x12
  9680  000013                     	ds	3
  9681  000016                     i2___llmod@counter:
  9682                           	opt callstack 0
  9683                           
  9684                           ; 1 bytes @ 0x15
  9685  000016                     	ds	1
  9686  000017                     i2___fldiv@a:
  9687                           	opt callstack 0
  9688                           
  9689                           ; 4 bytes @ 0x16
  9690  000017                     	ds	4
  9691  00001B                     ??i2___fldiv:
  9692                           
  9693                           ; 1 bytes @ 0x1A
  9694  00001B                     	ds	4
  9695  00001F                     i2___fldiv@rem:
  9696                           	opt callstack 0
  9697                           
  9698                           ; 4 bytes @ 0x1E
  9699  00001F                     	ds	4
  9700  000023                     i2___fldiv@sign:
  9701                           	opt callstack 0
  9702                           
  9703                           ; 1 bytes @ 0x22
  9704  000023                     	ds	1
  9705  000024                     i2___fldiv@new_exp:
  9706                           	opt callstack 0
  9707                           
  9708                           ; 2 bytes @ 0x23
  9709  000024                     	ds	2
  9710  000026                     i2___fldiv@grs:
  9711                           	opt callstack 0
  9712                           
  9713                           ; 4 bytes @ 0x25
  9714  000026                     	ds	4
  9715  00002A                     i2___fldiv@bexp:
  9716                           	opt callstack 0
  9717                           
  9718                           ; 1 bytes @ 0x29
  9719  00002A                     	ds	1
  9720  00002B                     i2___fldiv@aexp:
  9721                           	opt callstack 0
  9722                           
  9723                           ; 1 bytes @ 0x2A
  9724  00002B                     	ds	1
  9725  00002C                     ?i2___flmul:
  9726                           	opt callstack 0
  9727  00002C                     i2___flmul@b:
  9728                           	opt callstack 0
  9729                           
  9730                           ; 4 bytes @ 0x2B
  9731  00002C                     	ds	4
  9732  000030                     i2___flmul@a:
  9733                           	opt callstack 0
  9734                           
  9735                           ; 4 bytes @ 0x2F
  9736  000030                     	ds	4
  9737  000034                     ??i2___flmul:
  9738                           
  9739                           ; 1 bytes @ 0x33
  9740  000034                     	ds	4
  9741  000038                     i2___flmul@sign:
  9742                           	opt callstack 0
  9743                           
  9744                           ; 1 bytes @ 0x37
  9745  000038                     	ds	1
  9746  000039                     i2___flmul@aexp:
  9747                           	opt callstack 0
  9748                           
  9749                           ; 1 bytes @ 0x38
  9750  000039                     	ds	1
  9751  00003A                     i2___flmul@grs:
  9752                           	opt callstack 0
  9753                           
  9754                           ; 4 bytes @ 0x39
  9755  00003A                     	ds	4
  9756  00003E                     i2___flmul@bexp:
  9757                           	opt callstack 0
  9758                           
  9759                           ; 1 bytes @ 0x3D
  9760  00003E                     	ds	1
  9761  00003F                     i2___flmul@prod:
  9762                           	opt callstack 0
  9763                           
  9764                           ; 4 bytes @ 0x3E
  9765  00003F                     	ds	4
  9766  000043                     i2___flmul@temp:
  9767                           	opt callstack 0
  9768                           
  9769                           ; 2 bytes @ 0x42
  9770  000043                     	ds	2
  9771  000045                     ?i2_fround:
  9772                           	opt callstack 0
  9773  000045                     ?i2_scale:
  9774                           	opt callstack 0
  9775                           
  9776                           ; 4 bytes @ 0x44
  9777  000045                     	ds	4
  9778  000049                     i2_fround$6423:
  9779                           	opt callstack 0
  9780  000049                     i2_scale$6424:
  9781                           	opt callstack 0
  9782                           
  9783                           ; 4 bytes @ 0x48
  9784  000049                     	ds	4
  9785  00004D                     i2scale@scl:
  9786                           	opt callstack 0
  9787  00004D                     i2_fround$6422:
  9788                           	opt callstack 0
  9789                           
  9790                           ; 4 bytes @ 0x4C
  9791  00004D                     	ds	1
  9792  00004E                     ?i2___fltol:
  9793                           	opt callstack 0
  9794  00004E                     i2___fltol@f1:
  9795                           	opt callstack 0
  9796                           
  9797                           ; 4 bytes @ 0x4D
  9798  00004E                     	ds	3
  9799  000051                     i2fround@prec:
  9800                           	opt callstack 0
  9801                           
  9802                           ; 1 bytes @ 0x50
  9803  000051                     	ds	1
  9804  000052                     ??i2___fltol:
  9805  000052                     ?i2___fladd:
  9806                           	opt callstack 0
  9807  000052                     i2___fladd@b:
  9808                           	opt callstack 0
  9809                           
  9810                           ; 4 bytes @ 0x51
  9811  000052                     	ds	4
  9812  000056                     i2___fltol@sign1:
  9813                           	opt callstack 0
  9814  000056                     i2___fladd@a:
  9815                           	opt callstack 0
  9816                           
  9817                           ; 4 bytes @ 0x55
  9818  000056                     	ds	1
  9819  000057                     i2___fltol@exp1:
  9820                           	opt callstack 0
  9821                           
  9822                           ; 1 bytes @ 0x56
  9823  000057                     	ds	3
  9824  00005A                     ??i2___fladd:
  9825                           
  9826                           ; 1 bytes @ 0x59
  9827  00005A                     	ds	4
  9828  00005E                     ??_heartbeatTimerHandler:
  9829  00005E                     
  9830                           ; 1 bytes @ 0x5D
  9831  00005E                     	ds	1
  9832  00005F                     
  9833                           ; 1 bytes @ 0x5E
  9834 ;;
  9835 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9836 ;;
  9837 ;; *************** function _main *****************
  9838 ;; Defined at:
  9839 ;;		line 76 in file "main.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;		None
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9856 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;Total ram usage:        2 bytes
  9858 ;; Hardware stack levels required when called:   19
  9859 ;; This function calls:
  9860 ;;		_ADCC_SetADTIInterruptHandler
  9861 ;;		_INT1_SetInterruptHandler
  9862 ;;		_INT2_SetInterruptHandler
  9863 ;;		_IOCBF2_SetInterruptHandler
  9864 ;;		_IOCBF3_SetInterruptHandler
  9865 ;;		_LM73AcquisitionHandler
  9866 ;;		_LM73TempSensorInitialize
  9867 ;;		_OLED_Clear
  9868 ;;		_OLED_Init
  9869 ;;		_OLED_updateHandler
  9870 ;;		_SYSTEM_Initialize
  9871 ;;		_TMR0_SetInterruptHandler
  9872 ;;		_TMR1_Reload
  9873 ;;		_TMR1_SetInterruptHandler
  9874 ;;		_TMR1_StopTimer
  9875 ;;		_TMR2_SetInterruptHandler
  9876 ;;		_TMR3_Reload
  9877 ;;		_TMR3_SetInterruptHandler
  9878 ;;		_TMR3_StopTimer
  9879 ;;		_TMR5_StopTimer
  9880 ;;		_TMR5_WriteTimer
  9881 ;;		_freqMeasStartCaptures
  9882 ;;		_getCauseOfReset
  9883 ;;		_getCauseOfResetString
  9884 ;;		_printCurrentMeasurements
  9885 ;;		_printf
  9886 ;;		_terminalClearScreen
  9887 ;;		_terminalSetCursorHome
  9888 ;;		_terminalTextAttributes
  9889 ;;		_terminalTextAttributesReset
  9890 ;;		_terminal_ringBufferPull
  9891 ;;		_updateErrorLEDs
  9892 ;; This function is called by:
  9893 ;;		Startup code after reset
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text0
  9898  017A18                     __ptext0:
  9899                           	opt callstack 0
  9900  017A18                     _main:
  9901                           	opt callstack 12
  9902                           
  9903                           ;main.c: 80: reset_cause = getCauseOfReset();
  9904                           
  9905                           ;incstack = 0
  9906  017A18  EC22  F0DB         	call	_getCauseOfReset	;wreg free
  9907  017A1C  0102               	movlb	2	; () banked
  9908  017A1E  6FFF               	movwf	_reset_cause& (0+255),b
  9909                           
  9910                           ; BSR set to: 2
  9911                           ;main.c: 83: _delay((unsigned long)((250)*(64000000/4000.0)));
  9912  017A20  0E15               	movlw	21
  9913  017A22  0104               	movlb	4	; () banked
  9914  017A24  6FC7               	movwf	(??_main+1)& (0+255),b
  9915  017A26  0E4B               	movlw	75
  9916  017A28  6FC6               	movwf	??_main& (0+255),b
  9917  017A2A  0EBE               	movlw	190
  9918  017A2C                     u29217:
  9919  017A2C  2EE8               	decfsz	wreg,f,c
  9920  017A2E  D7FE               	bra	u29217
  9921  017A30  2FC6               	decfsz	??_main& (0+255),f,b
  9922  017A32  D7FC               	bra	u29217
  9923  017A34  2FC7               	decfsz	(??_main+1)& (0+255),f,b
  9924  017A36  D7FA               	bra	u29217
  9925  017A38  F000               	nop	
  9926                           
  9927                           ;main.c: 87: SYSTEM_Initialize();
  9928  017A3A  ECF4  F0DE         	call	_SYSTEM_Initialize	;wreg free
  9929                           
  9930                           ;main.c: 90: TMR0_SetInterruptHandler(heartbeatTimerHandler);
  9931  017A3E  0EBE               	movlw	low _heartbeatTimerHandler
  9932  017A40  0102               	movlb	2	; () banked
  9933  017A42  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9934  017A44  0E96               	movlw	high _heartbeatTimerHandler
  9935  017A46  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9936  017A48  0E01               	movlw	low (_heartbeatTimerHandler shr (0+16))
  9937  017A4A  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9938  017A4C  ECD0  F0E3         	call	_TMR0_SetInterruptHandler	;wreg free
  9939                           
  9940                           ;main.c: 93: TMR2_SetInterruptHandler(ADC_acquisitionTimerHandler);
  9941  017A50  0ED4               	movlw	low _ADC_acquisitionTimerHandler
  9942  017A52  0102               	movlb	2	; () banked
  9943  017A54  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9944  017A56  0EC5               	movlw	high _ADC_acquisitionTimerHandler
  9945  017A58  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9946  017A5A  0E01               	movlw	low (_ADC_acquisitionTimerHandler shr (0+16))
  9947  017A5C  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9948  017A5E  ECC2  F0E3         	call	_TMR2_SetInterruptHandler	;wreg free
  9949                           
  9950                           ;main.c: 96: ADCC_SetADTIInterruptHandler(ADC_PostProcessingHandler);
  9951  017A62  0E82               	movlw	low _ADC_PostProcessingHandler
  9952  017A64  0102               	movlb	2	; () banked
  9953  017A66  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9954  017A68  0E40               	movlw	high _ADC_PostProcessingHandler
  9955  017A6A  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9956  017A6C  0E01               	movlw	low (_ADC_PostProcessingHandler shr (0+16))
  9957  017A6E  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9958  017A70  EC01  F0E4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9959                           
  9960                           ;main.c: 99: INT1_SetInterruptHandler(leftCapTouchHandler);
  9961  017A74  0E7C               	movlw	low _leftCapTouchHandler
  9962  017A76  0102               	movlb	2	; () banked
  9963  017A78  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9964  017A7A  0EC6               	movlw	high _leftCapTouchHandler
  9965  017A7C  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9966  017A7E  0E01               	movlw	low (_leftCapTouchHandler shr (0+16))
  9967  017A80  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9968  017A82  ECEC  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
  9969                           
  9970                           ;main.c: 102: INT2_SetInterruptHandler(rightCapTouchHandler);
  9971  017A86  0E66               	movlw	low _rightCapTouchHandler
  9972  017A88  0102               	movlb	2	; () banked
  9973  017A8A  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  9974  017A8C  0EC6               	movlw	high _rightCapTouchHandler
  9975  017A8E  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9976  017A90  0E01               	movlw	low (_rightCapTouchHandler shr (0+16))
  9977  017A92  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9978  017A94  ECE5  F0E3         	call	_INT2_SetInterruptHandler	;wreg free
  9979                           
  9980                           ;main.c: 105: IOCBF2_SetInterruptHandler(QIIdleIOCHandler);
  9981  017A98  0EBA               	movlw	low _QIIdleIOCHandler
  9982  017A9A  0102               	movlb	2	; () banked
  9983  017A9C  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9984  017A9E  0EC6               	movlw	high _QIIdleIOCHandler
  9985  017AA0  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9986  017AA2  0E01               	movlw	low (_QIIdleIOCHandler shr (0+16))
  9987  017AA4  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9988  017AA6  ECDE  F0E3         	call	_IOCBF2_SetInterruptHandler	;wreg free
  9989                           
  9990                           ;main.c: 108: IOCBF3_SetInterruptHandler(QIChargeIOCHandler);
  9991  017AAA  0E66               	movlw	low _QIChargeIOCHandler
  9992  017AAC  0102               	movlb	2	; () banked
  9993  017AAE  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  9994  017AB0  0EC5               	movlw	high _QIChargeIOCHandler
  9995  017AB2  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9996  017AB4  0E01               	movlw	low (_QIChargeIOCHandler shr (0+16))
  9997  017AB6  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9998  017AB8  ECD7  F0E3         	call	_IOCBF3_SetInterruptHandler	;wreg free
  9999                           
 10000                           ;main.c: 111: TMR3_SetInterruptHandler(QIIdleChargedTimerHandler);
 10001  017ABC  0ED0               	movlw	low _QIIdleChargedTimerHandler
 10002  017ABE  0102               	movlb	2	; () banked
 10003  017AC0  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 10004  017AC2  0EC4               	movlw	high _QIIdleChargedTimerHandler
 10005  017AC4  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10006  017AC6  0E01               	movlw	low (_QIIdleChargedTimerHandler shr (0+16))
 10007  017AC8  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10008  017ACA  ECBB  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
 10009                           
 10010                           ;main.c: 112: TMR3_StopTimer();
 10011  017ACE  EC67  F0E4         	call	_TMR3_StopTimer	;wreg free
 10012                           
 10013                           ;main.c: 113: TMR3_Reload();
 10014  017AD2  ECAD  F0E3         	call	_TMR3_Reload	;wreg free
 10015                           
 10016                           ;main.c: 116: TMR1_SetInterruptHandler(QIErrorTimerHandler);
 10017  017AD6  0E50               	movlw	low _QIErrorTimerHandler
 10018  017AD8  0102               	movlb	2	; () banked
 10019  017ADA  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 10020  017ADC  0EC6               	movlw	high _QIErrorTimerHandler
 10021  017ADE  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10022  017AE0  0E01               	movlw	low (_QIErrorTimerHandler shr (0+16))
 10023  017AE2  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10024  017AE4  ECC9  F0E3         	call	_TMR1_SetInterruptHandler	;wreg free
 10025                           
 10026                           ;main.c: 117: TMR1_StopTimer();
 10027  017AE8  EC69  F0E4         	call	_TMR1_StopTimer	;wreg free
 10028                           
 10029                           ;main.c: 118: TMR1_Reload();
 10030  017AEC  ECB4  F0E3         	call	_TMR1_Reload	;wreg free
 10031                           
 10032                           ;main.c: 122: TMR5_StopTimer();
 10033  017AF0  EC65  F0E4         	call	_TMR5_StopTimer	;wreg free
 10034                           
 10035                           ;main.c: 123: TMR5_WriteTimer(0);
 10036  017AF4  0E00               	movlw	0
 10037  017AF6  0102               	movlb	2	; () banked
 10038  017AF8  6F01               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
 10039  017AFA  0E00               	movlw	0
 10040  017AFC  6F00               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
 10041  017AFE  EC18  F0E2         	call	_TMR5_WriteTimer	;wreg free
 10042                           
 10043                           ;main.c: 126: (INTCONbits.GIEH = 1);
 10044  017B02  8EF2               	bsf	4082,7,c	;volatile
 10045                           
 10046                           ;main.c: 129: (INTCONbits.GIEL = 1);
 10047  017B04  8CF2               	bsf	4082,6,c	;volatile
 10048                           
 10049                           ;main.c: 132: terminalClearScreen();
 10050  017B06  EC8D  F0E3         	call	_terminalClearScreen	;wreg free
 10051                           
 10052                           ;main.c: 133: terminalSetCursorHome();
 10053  017B0A  ECA5  F0E3         	call	_terminalSetCursorHome	;wreg free
 10054                           
 10055                           ;main.c: 135: OLED_Init();
 10056  017B0E  ECC9  F0D6         	call	_OLED_Init	;wreg free
 10057                           
 10058                           ;main.c: 136: OLED_Clear();
 10059  017B12  EC13  F0DF         	call	_OLED_Clear	;wreg free
 10060                           
 10061                           ;main.c: 139: OLED_Frame = OLED_Boot_Frame_1;
 10062  017B16  0E00               	movlw	0
 10063  017B18  0102               	movlb	2	; () banked
 10064  017B1A  6FD7               	movwf	_OLED_Frame& (0+255),b
 10065                           
 10066                           ; BSR set to: 2
 10067                           ;main.c: 140: OLED_updateHandler();
 10068  017B1C  EC1E  F097         	call	_OLED_updateHandler	;wreg free
 10069                           
 10070                           ;main.c: 143: LM73TempSensorInitialize();
 10071  017B20  EC76  F0C7         	call	_LM73TempSensorInitialize	;wreg free
 10072                           
 10073                           ;main.c: 146: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10074  017B24  0E00               	movlw	0
 10075  017B26  0102               	movlb	2	; () banked
 10076  017B28  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10077  017B2A  0E00               	movlw	0
 10078  017B2C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10079  017B2E  0E02               	movlw	2
 10080  017B30  EC1B  F0B0         	call	_terminalTextAttributes
 10081                           
 10082                           ;main.c: 147: printf("QI Charger with Digital Monitoring\n\r";main.c: 148: "Boot Complet
      +                          e\n\r");
 10083  017B34  0EC2               	movlw	low STR_2
 10084  017B36  0102               	movlb	2	; () banked
 10085  017B38  6FA9               	movwf	printf@f& (0+255),b
 10086  017B3A  0EF1               	movlw	high STR_2
 10087  017B3C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10088  017B3E  EC32  F0DF         	call	_printf	;wreg free
 10089                           
 10090                           ;main.c: 151: if ( reset_cause != Power_On_Reset) {
 10091  017B42  0102               	movlb	2	; () banked
 10092  017B44  05FF               	decf	_reset_cause& (0+255),w,b
 10093  017B46  B4D8               	btfsc	status,2,c
 10094  017B48  D008               	goto	l22623
 10095                           
 10096                           ; BSR set to: 2
 10097                           ;main.c: 153: terminalTextAttributes(RED, BLACK, NORMAL);
 10098  017B4A  0E00               	movlw	0
 10099  017B4C  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10100  017B4E  0E00               	movlw	0
 10101  017B50  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10102  017B52  0E01               	movlw	1
 10103  017B54  EC1B  F0B0         	call	_terminalTextAttributes
 10104                           
 10105                           ;main.c: 155: }
 10106  017B58  D007               	goto	l1339
 10107  017B5A                     l22623:
 10108                           
 10109                           ; BSR set to: 2
 10110                           ;main.c: 157: else {;main.c: 159: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10111  017B5A  0E00               	movlw	0
 10112  017B5C  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10113  017B5E  0E00               	movlw	0
 10114  017B60  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10115  017B62  0E02               	movlw	2
 10116  017B64  EC1B  F0B0         	call	_terminalTextAttributes
 10117  017B68                     l1339:
 10118                           
 10119                           ;main.c: 161: };main.c: 164: printf("Cause of most recent device reset was: %s\n\r", get
      +                          CauseOfResetString(reset_cause));
 10120  017B68  0E2F               	movlw	low STR_3
 10121  017B6A  0102               	movlb	2	; () banked
 10122  017B6C  6FA9               	movwf	printf@f& (0+255),b
 10123  017B6E  0EF4               	movlw	high STR_3
 10124  017B70  6FAA               	movwf	(printf@f+1)& (0+255),b
 10125  017B72  51FF               	movf	_reset_cause& (0+255),w,b
 10126  017B74  EC66  F0E0         	call	_getCauseOfResetString
 10127  017B78  C200  F2AB         	movff	?_getCauseOfResetString,?_printf+2
 10128  017B7C  C201  F2AC         	movff	?_getCauseOfResetString+1,?_printf+3
 10129  017B80  EC32  F0DF         	call	_printf	;wreg free
 10130                           
 10131                           ;main.c: 166: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10132  017B84  0E00               	movlw	0
 10133  017B86  0102               	movlb	2	; () banked
 10134  017B88  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10135  017B8A  0E00               	movlw	0
 10136  017B8C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10137  017B8E  0E02               	movlw	2
 10138  017B90  EC1B  F0B0         	call	_terminalTextAttributes
 10139                           
 10140                           ;main.c: 168: LATCbits.LATC2 = 0;
 10141  017B94  9485               	bcf	3973,2,c	;volatile
 10142                           
 10143                           ;main.c: 169: printf("QI Wireless Power Conversion Enabled\n\r");
 10144  017B96  0EFE               	movlw	low STR_4
 10145  017B98  0102               	movlb	2	; () banked
 10146  017B9A  6FA9               	movwf	printf@f& (0+255),b
 10147  017B9C  0EF4               	movlw	high STR_4
 10148  017B9E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10149  017BA0  EC32  F0DF         	call	_printf	;wreg free
 10150                           
 10151                           ;main.c: 171: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10152  017BA4  0E00               	movlw	0
 10153  017BA6  0102               	movlb	2	; () banked
 10154  017BA8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10155  017BAA  0E00               	movlw	0
 10156  017BAC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10157  017BAE  0E03               	movlw	3
 10158  017BB0  EC1B  F0B0         	call	_terminalTextAttributes
 10159                           
 10160                           ;main.c: 172: printf("\n\rHelp messages and neutral responses appear in yellow\n\r");
 10161  017BB4  0E0F               	movlw	low STR_5
 10162  017BB6  0102               	movlb	2	; () banked
 10163  017BB8  6FA9               	movwf	printf@f& (0+255),b
 10164  017BBA  0EF0               	movlw	high STR_5
 10165  017BBC  6FAA               	movwf	(printf@f+1)& (0+255),b
 10166  017BBE  EC32  F0DF         	call	_printf	;wreg free
 10167                           
 10168                           ;main.c: 173: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10169  017BC2  0E00               	movlw	0
 10170  017BC4  0102               	movlb	2	; () banked
 10171  017BC6  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10172  017BC8  0E00               	movlw	0
 10173  017BCA  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10174  017BCC  0E02               	movlw	2
 10175  017BCE  EC1B  F0B0         	call	_terminalTextAttributes
 10176                           
 10177                           ;main.c: 174: printf("System parameters and affirmative responses appear in green\n\r");
 10178  017BD2  0E33               	movlw	low STR_6
 10179  017BD4  0102               	movlb	2	; () banked
 10180  017BD6  6FA9               	movwf	printf@f& (0+255),b
 10181  017BD8  0EEE               	movlw	high STR_6
 10182  017BDA  6FAA               	movwf	(printf@f+1)& (0+255),b
 10183  017BDC  EC32  F0DF         	call	_printf	;wreg free
 10184                           
 10185                           ;main.c: 175: terminalTextAttributes(CYAN, BLACK, NORMAL);
 10186  017BE0  0E00               	movlw	0
 10187  017BE2  0102               	movlb	2	; () banked
 10188  017BE4  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10189  017BE6  0E00               	movlw	0
 10190  017BE8  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10191  017BEA  0E06               	movlw	6
 10192  017BEC  EC1B  F0B0         	call	_terminalTextAttributes
 10193                           
 10194                           ;main.c: 176: printf("Measurement responses appear in cyan\n\r");
 10195  017BF0  0E25               	movlw	low STR_7
 10196  017BF2  0102               	movlb	2	; () banked
 10197  017BF4  6FA9               	movwf	printf@f& (0+255),b
 10198  017BF6  0EF5               	movlw	high STR_7
 10199  017BF8  6FAA               	movwf	(printf@f+1)& (0+255),b
 10200  017BFA  EC32  F0DF         	call	_printf	;wreg free
 10201                           
 10202                           ;main.c: 177: terminalTextAttributes(RED, BLACK, NORMAL);
 10203  017BFE  0E00               	movlw	0
 10204  017C00  0102               	movlb	2	; () banked
 10205  017C02  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10206  017C04  0E00               	movlw	0
 10207  017C06  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10208  017C08  0E01               	movlw	1
 10209  017C0A  EC1B  F0B0         	call	_terminalTextAttributes
 10210                           
 10211                           ;main.c: 178: printf("Errors and negative responses appear in red\n\r");
 10212  017C0E  0EA7               	movlw	low STR_8
 10213  017C10  0102               	movlb	2	; () banked
 10214  017C12  6FA9               	movwf	printf@f& (0+255),b
 10215  017C14  0EF3               	movlw	high STR_8
 10216  017C16  6FAA               	movwf	(printf@f+1)& (0+255),b
 10217  017C18  EC32  F0DF         	call	_printf	;wreg free
 10218                           
 10219                           ;main.c: 179: terminalTextAttributesReset();
 10220  017C1C  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10221                           
 10222                           ;main.c: 180: printf("User input appears in white\n\r");
 10223  017C20  0EF6               	movlw	low STR_9
 10224  017C22  0102               	movlb	2	; () banked
 10225  017C24  6FA9               	movwf	printf@f& (0+255),b
 10226  017C26  0EF7               	movlw	high STR_9
 10227  017C28  6FAA               	movwf	(printf@f+1)& (0+255),b
 10228  017C2A  EC32  F0DF         	call	_printf	;wreg free
 10229                           
 10230                           ;main.c: 181: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10231  017C2E  0E00               	movlw	0
 10232  017C30  0102               	movlb	2	; () banked
 10233  017C32  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10234  017C34  0E00               	movlw	0
 10235  017C36  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10236  017C38  0E03               	movlw	3
 10237  017C3A  EC1B  F0B0         	call	_terminalTextAttributes
 10238                           
 10239                           ;main.c: 182: printf("\n\rCall 'Help' for list of supported commands\n\r");
 10240  017C3E  0E4A               	movlw	low STR_10
 10241  017C40  0102               	movlb	2	; () banked
 10242  017C42  6FA9               	movwf	printf@f& (0+255),b
 10243  017C44  0EF3               	movlw	high STR_10
 10244  017C46  6FAA               	movwf	(printf@f+1)& (0+255),b
 10245  017C48  EC32  F0DF         	call	_printf	;wreg free
 10246                           
 10247                           ;main.c: 185: terminalTextAttributesReset();
 10248  017C4C  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10249                           
 10250                           ;main.c: 188: if (PORTBbits.RB3 == 0 && PORTBbits.RB2 == 0) nxq_charge_state = QI_Idle;
 10251  017C50  A68E               	btfss	3982,3,c	;volatile
 10252  017C52  B48E               	btfsc	3982,2,c	;volatile
 10253  017C54  D002               	goto	l1340
 10254  017C56  0E00               	movlw	0
 10255  017C58  D004               	goto	L1
 10256  017C5A                     l1340:
 10257                           
 10258                           ;main.c: 189: else if (PORTBbits.RB3 == 1 && PORTBbits.RB2 == 1) nxq_charge_state = QI_F
      +                          ully_Charged;
 10259  017C5A  B68E               	btfsc	3982,3,c	;volatile
 10260  017C5C  A48E               	btfss	3982,2,c	;volatile
 10261  017C5E  D003               	goto	l22637
 10262  017C60  0E02               	movlw	2
 10263  017C62                     L1:
 10264  017C62  0101               	movlb	1	; () banked
 10265  017C64  6F95               	movwf	_nxq_charge_state& (0+255),b
 10266  017C66                     l22637:
 10267                           
 10268                           ;main.c: 195: if (eusart2RxStringReady) terminal_ringBufferPull();
 10269  017C66  0100               	movlb	0	; () banked
 10270  017C68  B1FD               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10271                           
 10272                           ; BSR set to: 0
 10273  017C6A  ECA5  F0D0         	call	_terminal_ringBufferPull	;wreg free
 10274                           
 10275                           ;main.c: 198: if (OLED_update_flag) OLED_updateHandler();
 10276  017C6E  0102               	movlb	2	; () banked
 10277  017C70  51D6               	movf	_OLED_update_flag& (0+255),w,b
 10278  017C72  A4D8               	btfss	status,2,c
 10279                           
 10280                           ; BSR set to: 2
 10281  017C74  EC1E  F097         	call	_OLED_updateHandler	;wreg free
 10282                           
 10283                           ;main.c: 201: if (LM73_start_flag) LM73AcquisitionHandler();
 10284  017C78  0102               	movlb	2	; () banked
 10285  017C7A  51D8               	movf	_LM73_start_flag& (0+255),w,b
 10286  017C7C  A4D8               	btfss	status,2,c
 10287                           
 10288                           ; BSR set to: 2
 10289  017C7E  EC92  F0C8         	call	_LM73AcquisitionHandler	;wreg free
 10290                           
 10291                           ;main.c: 204: if (freq_meas_start_flag) freqMeasStartCaptures();
 10292  017C82  0102               	movlb	2	; () banked
 10293  017C84  51DA               	movf	_freq_meas_start_flag& (0+255),w,b
 10294  017C86  A4D8               	btfss	status,2,c
 10295                           
 10296                           ; BSR set to: 2
 10297  017C88  EC3C  F0E4         	call	_freqMeasStartCaptures	;wreg free
 10298                           
 10299                           ;main.c: 207: if (live_measurement_request_flag) {
 10300  017C8C  0102               	movlb	2	; () banked
 10301  017C8E  51D9               	movf	_live_measurement_request_flag& (0+255),w,b
 10302  017C90  B4D8               	btfsc	status,2,c
 10303  017C92  D026               	goto	l22671
 10304                           
 10305                           ; BSR set to: 2
 10306                           ;main.c: 209: live_measurement_request_flag = 0;
 10307  017C94  0E00               	movlw	0
 10308  017C96  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 10309                           
 10310                           ; BSR set to: 2
 10311                           ;main.c: 212: terminalSetCursorHome();
 10312  017C98  ECA5  F0E3         	call	_terminalSetCursorHome	;wreg free
 10313                           
 10314                           ;main.c: 214: terminalTextAttributes(GREEN, BLACK, BOLD);
 10315  017C9C  0E00               	movlw	0
 10316  017C9E  0102               	movlb	2	; () banked
 10317  017CA0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10318  017CA2  0E01               	movlw	1
 10319  017CA4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10320  017CA6  0E02               	movlw	2
 10321  017CA8  EC1B  F0B0         	call	_terminalTextAttributes
 10322                           
 10323                           ;main.c: 215: printf("Live Measurements:\033[K\n\r\033[K\n\r");
 10324  017CAC  0E4E               	movlw	low STR_11
 10325  017CAE  0102               	movlb	2	; () banked
 10326  017CB0  6FA9               	movwf	printf@f& (0+255),b
 10327  017CB2  0EF8               	movlw	high STR_11
 10328  017CB4  6FAA               	movwf	(printf@f+1)& (0+255),b
 10329  017CB6  EC32  F0DF         	call	_printf	;wreg free
 10330                           
 10331                           ;main.c: 217: printCurrentMeasurements();
 10332  017CBA  ECD6  F0A7         	call	_printCurrentMeasurements	;wreg free
 10333                           
 10334                           ;main.c: 219: terminalTextAttributes(YELLOW, BLACK, REVERSE);
 10335  017CBE  0E00               	movlw	0
 10336  017CC0  0102               	movlb	2	; () banked
 10337  017CC2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10338  017CC4  0E04               	movlw	4
 10339  017CC6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10340  017CC8  0E03               	movlw	3
 10341  017CCA  EC1B  F0B0         	call	_terminalTextAttributes
 10342                           
 10343                           ;main.c: 220: printf("Press enter key to exit\033[K\n\r\033[K\n\r");
 10344  017CCE  0EF8               	movlw	low STR_12
 10345  017CD0  0102               	movlb	2	; () banked
 10346  017CD2  6FA9               	movwf	printf@f& (0+255),b
 10347  017CD4  0EF6               	movlw	high STR_12
 10348  017CD6  6FAA               	movwf	(printf@f+1)& (0+255),b
 10349  017CD8  EC32  F0DF         	call	_printf	;wreg free
 10350                           
 10351                           ;main.c: 221: terminalTextAttributesReset();
 10352  017CDC  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10353  017CE0                     l22671:
 10354                           
 10355                           ;main.c: 223: };main.c: 226: updateErrorLEDs();
 10356  017CE0  ECA4  F0DD         	call	_updateErrorLEDs	;wreg free
 10357  017CE4  D7C0               	goto	l22637
 10358  017CE6                     __end_of_main:
 10359                           	opt callstack 0
 10360                           
 10361 ;; *************** function _terminal_ringBufferPull *****************
 10362 ;; Defined at:
 10363 ;;		line 6 in file "ring_buffer_interface.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;		None
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;  index           2    2[BANK4 ] int 
 10368 ;;  index           2    4[BANK4 ] int 
 10369 ;;  charNumber      2    0[BANK4 ] int 
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Totals:         0       0       0       0       1       6       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;Total ram usage:        7 bytes
 10384 ;; Hardware stack levels used:    1
 10385 ;; Hardware stack levels required when called:   18
 10386 ;; This function calls:
 10387 ;;		_EUSART2_Read
 10388 ;;		_ringBufferLUT
 10389 ;;		_strlen
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text1
 10396  01A14A                     __ptext1:
 10397                           	opt callstack 0
 10398  01A14A                     _terminal_ringBufferPull:
 10399                           	opt callstack 12
 10400                           
 10401                           ;ring_buffer_interface.c: 8: int charNumber = eusart2RxCount;
 10402                           
 10403                           ;incstack = 0
 10404  01A14A  C197  F4C0         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 10405  01A14E  0104               	movlb	4	; () banked
 10406  01A150  6BC1               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 10407                           
 10408                           ; BSR set to: 4
 10409                           ;ring_buffer_interface.c: 11: for (int index = 0; index < 64; index++) {
 10410  01A152  0E00               	movlw	0
 10411  01A154  6FC5               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 10412  01A156  0E00               	movlw	0
 10413  01A158  6FC4               	movwf	terminal_ringBufferPull@index& (0+255),b
 10414  01A15A                     l22355:
 10415                           
 10416                           ; BSR set to: 4
 10417                           ;ring_buffer_interface.c: 13: line[index] = '\0';
 10418  01A15A  0E44               	movlw	low _line
 10419  01A15C  25C4               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 10420  01A15E  6ED9               	movwf	fsr2l,c
 10421  01A160  0E03               	movlw	high _line
 10422  01A162  21C5               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10423  01A164  6EDA               	movwf	fsr2h,c
 10424  01A166  0E00               	movlw	0
 10425  01A168  6EDF               	movwf	indf2,c
 10426                           
 10427                           ; BSR set to: 4
 10428  01A16A  4BC4               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 10429  01A16C  2BC5               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 4
 10432  01A16E  BFC5               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 10433  01A170  D7F4               	goto	l22355
 10434  01A172  51C5               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10435  01A174  E104               	bnz	u28340
 10436  01A176  0E40               	movlw	64
 10437  01A178  5DC4               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 10438  01A17A  A0D8               	btfss	status,0,c
 10439  01A17C  D7EE               	goto	l22355
 10440  01A17E                     u28340:
 10441                           
 10442                           ; BSR set to: 4
 10443                           ;ring_buffer_interface.c: 15: };ring_buffer_interface.c: 18: for(int index = 0; index < 
      +                          charNumber; index++){
 10444  01A17E  0E00               	movlw	0
 10445  01A180  6FC3               	movwf	(terminal_ringBufferPull@index_4746+1)& (0+255),b
 10446  01A182  0E00               	movlw	0
 10447  01A184  6FC2               	movwf	terminal_ringBufferPull@index_4746& (0+255),b
 10448  01A186  D00F               	goto	l22367
 10449  01A188                     l22363:
 10450                           
 10451                           ; BSR set to: 3
 10452                           ;ring_buffer_interface.c: 20: line[index] = EUSART2_Read();
 10453  01A188  ECD5  F0DE         	call	_EUSART2_Read	;wreg free
 10454  01A18C  0103               	movlb	3	; () banked
 10455  01A18E  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
 10456  01A190  0E44               	movlw	low _line
 10457  01A192  0104               	movlb	4	; () banked
 10458  01A194  25C2               	addwf	terminal_ringBufferPull@index_4746& (0+255),w,b
 10459  01A196  6ED9               	movwf	fsr2l,c
 10460  01A198  0E03               	movlw	high _line
 10461  01A19A  21C3               	addwfc	(terminal_ringBufferPull@index_4746+1)& (0+255),w,b
 10462  01A19C  6EDA               	movwf	fsr2h,c
 10463  01A19E  C3FF  FFDF         	movff	??_terminal_ringBufferPull,indf2
 10464                           
 10465                           ; BSR set to: 4
 10466  01A1A2  4BC2               	infsnz	terminal_ringBufferPull@index_4746& (0+255),f,b
 10467  01A1A4  2BC3               	incf	(terminal_ringBufferPull@index_4746+1)& (0+255),f,b
 10468  01A1A6                     l22367:
 10469                           
 10470                           ; BSR set to: 4
 10471  01A1A6  51C0               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 10472  01A1A8  5DC2               	subwf	terminal_ringBufferPull@index_4746& (0+255),w,b
 10473  01A1AA  51C3               	movf	(terminal_ringBufferPull@index_4746+1)& (0+255),w,b
 10474  01A1AC  0A80               	xorlw	128
 10475  01A1AE  0103               	movlb	3	; () banked
 10476  01A1B0  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
 10477  01A1B2  0104               	movlb	4	; () banked
 10478  01A1B4  51C1               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 10479  01A1B6  0A80               	xorlw	128
 10480  01A1B8  0103               	movlb	3	; () banked
 10481  01A1BA  59FF               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 10482  01A1BC  A0D8               	btfss	status,0,c
 10483  01A1BE  D7E4               	goto	l22363
 10484                           
 10485                           ; BSR set to: 3
 10486                           ;ring_buffer_interface.c: 22: };ring_buffer_interface.c: 25: eusart2RxTail = eusart2RxHe
      +                          ad;
 10487  01A1C0  C0DC  F198         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 10488                           
 10489                           ;ring_buffer_interface.c: 28: while((line[strlen(line) - 1] == (int) '\n') ||;ring_buffe
      +                          r_interface.c: 29: (line[strlen(line) - 1] == (int) '\r')) {
 10490  01A1C4  D00F               	goto	l2297
 10491  01A1C6                     l22369:
 10492                           
 10493                           ; BSR set to: 2
 10494                           ;ring_buffer_interface.c: 32: line[strlen(line) - 1] = '\0';
 10495  01A1C6  0E44               	movlw	low _line
 10496  01A1C8  6F00               	movwf	strlen@s& (0+255),b
 10497  01A1CA  0E03               	movlw	high _line
 10498  01A1CC  6F01               	movwf	(strlen@s+1)& (0+255),b
 10499  01A1CE  ECC6  F0E0         	call	_strlen	;wreg free
 10500  01A1D2  0E43               	movlw	low (_line+65535)
 10501  01A1D4  0102               	movlb	2	; () banked
 10502  01A1D6  2500               	addwf	?_strlen& (0+255),w,b
 10503  01A1D8  6ED9               	movwf	fsr2l,c
 10504  01A1DA  0E03               	movlw	high (_line+65535)
 10505  01A1DC  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10506  01A1DE  6EDA               	movwf	fsr2h,c
 10507  01A1E0  0E00               	movlw	0
 10508  01A1E2  6EDF               	movwf	indf2,c
 10509  01A1E4                     l2297:
 10510  01A1E4  0E44               	movlw	low _line
 10511  01A1E6  0102               	movlb	2	; () banked
 10512  01A1E8  6F00               	movwf	strlen@s& (0+255),b
 10513  01A1EA  0E03               	movlw	high _line
 10514  01A1EC  6F01               	movwf	(strlen@s+1)& (0+255),b
 10515  01A1EE  ECC6  F0E0         	call	_strlen	;wreg free
 10516  01A1F2  0E43               	movlw	low (_line+65535)
 10517  01A1F4  0102               	movlb	2	; () banked
 10518  01A1F6  2500               	addwf	?_strlen& (0+255),w,b
 10519  01A1F8  6ED9               	movwf	fsr2l,c
 10520  01A1FA  0E03               	movlw	high (_line+65535)
 10521  01A1FC  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10522  01A1FE  6EDA               	movwf	fsr2h,c
 10523  01A200  0E0A               	movlw	10
 10524  01A202  18DE               	xorwf	postinc2,w,c
 10525  01A204  B4D8               	btfsc	status,2,c
 10526  01A206  D7DF               	goto	l22369
 10527                           
 10528                           ; BSR set to: 2
 10529  01A208  0E44               	movlw	low _line
 10530  01A20A  6F00               	movwf	strlen@s& (0+255),b
 10531  01A20C  0E03               	movlw	high _line
 10532  01A20E  6F01               	movwf	(strlen@s+1)& (0+255),b
 10533  01A210  ECC6  F0E0         	call	_strlen	;wreg free
 10534  01A214  0E43               	movlw	low (_line+65535)
 10535  01A216  0102               	movlb	2	; () banked
 10536  01A218  2500               	addwf	?_strlen& (0+255),w,b
 10537  01A21A  6ED9               	movwf	fsr2l,c
 10538  01A21C  0E03               	movlw	high (_line+65535)
 10539  01A21E  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10540  01A220  6EDA               	movwf	fsr2h,c
 10541  01A222  0E0D               	movlw	13
 10542  01A224  18DE               	xorwf	postinc2,w,c
 10543  01A226  B4D8               	btfsc	status,2,c
 10544  01A228  D7CE               	goto	l22369
 10545                           
 10546                           ; BSR set to: 2
 10547                           ;ring_buffer_interface.c: 34: };ring_buffer_interface.c: 38: eusart2RxStringReady = 0;
 10548  01A22A  0100               	movlb	0	; () banked
 10549  01A22C  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;ring_buffer_interface.c: 41: ringBufferLUT(line);
 10553  01A22E  0E44               	movlw	low _line
 10554  01A230  0102               	movlb	2	; () banked
 10555  01A232  6FBA               	movwf	ringBufferLUT@line& (0+255),b
 10556  01A234  0E03               	movlw	high _line
 10557  01A236  6FBB               	movwf	(ringBufferLUT@line+1)& (0+255),b
 10558  01A238  ECFB  F0A4         	call	_ringBufferLUT	;wreg free
 10559  01A23C  0012               	return		;funcret
 10560  01A23E                     __end_of_terminal_ringBufferPull:
 10561                           	opt callstack 0
 10562                           
 10563 ;; *************** function _ringBufferLUT *****************
 10564 ;; Defined at:
 10565 ;;		line 20 in file "ring_buffer_LUT.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  line            2  186[BANK2 ] PTR unsigned char 
 10568 ;;		 -> line(64), 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  userID          2   44[BANK3 ] int 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10580 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Totals:         0       0       0       4       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;Total ram usage:        6 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:   17
 10587 ;; This function calls:
 10588 ;;		_clearADCErrors
 10589 ;;		_clearI2CErrors
 10590 ;;		_clearUARTErrors
 10591 ;;		_getCauseOfResetString
 10592 ;;		_getDeviceID
 10593 ;;		_getDeviceIDString
 10594 ;;		_getMajorRevisionID
 10595 ;;		_getMinorRevisionID
 10596 ;;		_getStringSecondsAsTime
 10597 ;;		_getUserID
 10598 ;;		_printCurrentMeasurements
 10599 ;;		_printErrorHandlerStatus
 10600 ;;		_printf
 10601 ;;		_strcmp
 10602 ;;		_strlen
 10603 ;;		_terminalClearScreen
 10604 ;;		_terminalTextAttributes
 10605 ;;		_terminalTextAttributesReset
 10606 ;; This function is called by:
 10607 ;;		_terminal_ringBufferPull
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text2
 10612  0149F6                     __ptext2:
 10613                           	opt callstack 0
 10614  0149F6                     _ringBufferLUT:
 10615                           	opt callstack 12
 10616                           
 10617                           ;ring_buffer_LUT.c: 26: if((0 == strcmp(line, "Reset"))) {
 10618                           
 10619                           ;incstack = 0
 10620  0149F6  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10621  0149FA  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10622  0149FE  0E3B               	movlw	low (STR_40+5)
 10623  014A00  0102               	movlb	2	; () banked
 10624  014A02  6F02               	movwf	strcmp@s2& (0+255),b
 10625  014A04  0EFE               	movlw	high (STR_40+5)
 10626  014A06  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10627  014A08  EC4C  F0DC         	call	_strcmp	;wreg free
 10628  014A0C  0102               	movlb	2	; () banked
 10629  014A0E  5100               	movf	?_strcmp& (0+255),w,b
 10630  014A10  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10631  014A12  A4D8               	btfss	status,2,c
 10632  014A14  D00F               	goto	l21343
 10633                           
 10634                           ; BSR set to: 2
 10635                           ;ring_buffer_LUT.c: 29: printf("\033[2J");
 10636  014A16  0E95               	movlw	low STR_192
 10637  014A18  6FA9               	movwf	printf@f& (0+255),b
 10638  014A1A  0EFF               	movlw	high STR_192
 10639  014A1C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10640  014A1E  EC32  F0DF         	call	_printf	;wreg free
 10641                           
 10642                           ;ring_buffer_LUT.c: 32: printf("\033[H");
 10643  014A22  0EBB               	movlw	low STR_193
 10644  014A24  0102               	movlb	2	; () banked
 10645  014A26  6FA9               	movwf	printf@f& (0+255),b
 10646  014A28  0EFF               	movlw	high STR_193
 10647  014A2A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10648  014A2C  EC32  F0DF         	call	_printf	;wreg free
 10649  014A30  00FF               	reset		;# 
 10650                           
 10651                           ;ring_buffer_LUT.c: 37: }
 10652  014A32  0012               	return	
 10653  014A34                     l21343:
 10654                           
 10655                           ; BSR set to: 2
 10656                           ;ring_buffer_LUT.c: 40: else if((0 == strcmp(line, "Clear"))) {
 10657  014A34  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10658  014A38  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10659  014A3C  0E7E               	movlw	low STR_194
 10660  014A3E  6F02               	movwf	strcmp@s2& (0+255),b
 10661  014A40  0EFF               	movlw	high STR_194
 10662  014A42  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10663  014A44  EC4C  F0DC         	call	_strcmp	;wreg free
 10664  014A48  0102               	movlb	2	; () banked
 10665  014A4A  5100               	movf	?_strcmp& (0+255),w,b
 10666  014A4C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10667  014A4E  A4D8               	btfss	status,2,c
 10668  014A50  D00E               	goto	l21347
 10669                           
 10670                           ; BSR set to: 2
 10671                           ;ring_buffer_LUT.c: 43: printf("\033[2J");
 10672  014A52  0E95               	movlw	low STR_192
 10673  014A54  6FA9               	movwf	printf@f& (0+255),b
 10674  014A56  0EFF               	movlw	high STR_192
 10675  014A58  6FAA               	movwf	(printf@f+1)& (0+255),b
 10676  014A5A  EC32  F0DF         	call	_printf	;wreg free
 10677                           
 10678                           ;ring_buffer_LUT.c: 46: printf("\033[H");
 10679  014A5E  0EBB               	movlw	low STR_193
 10680  014A60  0102               	movlb	2	; () banked
 10681  014A62  6FA9               	movwf	printf@f& (0+255),b
 10682  014A64  0EFF               	movlw	high STR_193
 10683  014A66  6FAA               	movwf	(printf@f+1)& (0+255),b
 10684  014A68  EC32  F0DF         	call	_printf	;wreg free
 10685                           
 10686                           ;ring_buffer_LUT.c: 48: }
 10687  014A6C  0012               	return	
 10688  014A6E                     l21347:
 10689                           
 10690                           ; BSR set to: 2
 10691                           ;ring_buffer_LUT.c: 51: else if((0 == strcmp(line, "*IDN?"))) {
 10692  014A6E  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10693  014A72  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10694  014A76  0E78               	movlw	low STR_197
 10695  014A78  6F02               	movwf	strcmp@s2& (0+255),b
 10696  014A7A  0EFF               	movlw	high STR_197
 10697  014A7C  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10698  014A7E  EC4C  F0DC         	call	_strcmp	;wreg free
 10699  014A82  0102               	movlb	2	; () banked
 10700  014A84  5100               	movf	?_strcmp& (0+255),w,b
 10701  014A86  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10702  014A88  A4D8               	btfss	status,2,c
 10703  014A8A  D011               	goto	l21351
 10704                           
 10705                           ; BSR set to: 2
 10706                           ;ring_buffer_LUT.c: 53: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10707  014A8C  0E00               	movlw	0
 10708  014A8E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10709  014A90  0E00               	movlw	0
 10710  014A92  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10711  014A94  0E02               	movlw	2
 10712  014A96  EC1B  F0B0         	call	_terminalTextAttributes
 10713                           
 10714                           ;ring_buffer_LUT.c: 54: printf("QI Charger with Digital Monitoring, by Drew Maatman\n\r"
      +                          );
 10715  014A9A  0EED               	movlw	low STR_198
 10716  014A9C  0102               	movlb	2	; () banked
 10717  014A9E  6FA9               	movwf	printf@f& (0+255),b
 10718  014AA0  0EF0               	movlw	high STR_198
 10719  014AA2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10720  014AA4  EC32  F0DF         	call	_printf	;wreg free
 10721                           
 10722                           ;ring_buffer_LUT.c: 55: terminalTextAttributesReset();
 10723  014AA8  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10724                           
 10725                           ;ring_buffer_LUT.c: 57: }
 10726  014AAC  0012               	return	
 10727  014AAE                     l21351:
 10728                           
 10729                           ; BSR set to: 2
 10730                           ;ring_buffer_LUT.c: 60: else if (0 == strcmp(line, "Device Status?")) {
 10731  014AAE  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10732  014AB2  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10733  014AB6  0EBA               	movlw	low STR_199
 10734  014AB8  6F02               	movwf	strcmp@s2& (0+255),b
 10735  014ABA  0EFB               	movlw	high STR_199
 10736  014ABC  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10737  014ABE  EC4C  F0DC         	call	_strcmp	;wreg free
 10738  014AC2  0102               	movlb	2	; () banked
 10739  014AC4  5100               	movf	?_strcmp& (0+255),w,b
 10740  014AC6  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10741  014AC8  A4D8               	btfss	status,2,c
 10742  014ACA  D0D8               	goto	l21369
 10743                           
 10744                           ; BSR set to: 2
 10745                           ;ring_buffer_LUT.c: 62: printf("\n\r");
 10746  014ACC  0E37               	movlw	low (STR_263+5)
 10747  014ACE  6FA9               	movwf	printf@f& (0+255),b
 10748  014AD0  0EFF               	movlw	high (STR_263+5)
 10749  014AD2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10750  014AD4  EC32  F0DF         	call	_printf	;wreg free
 10751                           
 10752                           ;ring_buffer_LUT.c: 64: terminalTextAttributes(GREEN, BLACK, BOLD);
 10753  014AD8  0E00               	movlw	0
 10754  014ADA  0102               	movlb	2	; () banked
 10755  014ADC  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10756  014ADE  0E01               	movlw	1
 10757  014AE0  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10758  014AE2  0E02               	movlw	2
 10759  014AE4  EC1B  F0B0         	call	_terminalTextAttributes
 10760                           
 10761                           ;ring_buffer_LUT.c: 66: printf("Digital Monitoring Microcontroller Status:\n\r");
 10762  014AE8  0ED5               	movlw	low STR_201
 10763  014AEA  0102               	movlb	2	; () banked
 10764  014AEC  6FA9               	movwf	printf@f& (0+255),b
 10765  014AEE  0EF3               	movlw	high STR_201
 10766  014AF0  6FAA               	movwf	(printf@f+1)& (0+255),b
 10767  014AF2  EC32  F0DF         	call	_printf	;wreg free
 10768                           
 10769                           ;ring_buffer_LUT.c: 68: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10770  014AF6  0E00               	movlw	0
 10771  014AF8  0102               	movlb	2	; () banked
 10772  014AFA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10773  014AFC  0E00               	movlw	0
 10774  014AFE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10775  014B00  0E02               	movlw	2
 10776  014B02  EC1B  F0B0         	call	_terminalTextAttributes
 10777                           
 10778                           ;ring_buffer_LUT.c: 70: printf("\n\r");
 10779  014B06  0E37               	movlw	low (STR_263+5)
 10780  014B08  0102               	movlb	2	; () banked
 10781  014B0A  6FA9               	movwf	printf@f& (0+255),b
 10782  014B0C  0EFF               	movlw	high (STR_263+5)
 10783  014B0E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10784  014B10  EC32  F0DF         	call	_printf	;wreg free
 10785                           
 10786                           ;ring_buffer_LUT.c: 73: printf("    Device ID retrieved from flash: %s (0x%04X)\n\r",;ri
      +                          ng_buffer_LUT.c: 74: getDeviceIDString(getDeviceID()),;ring_buffer_LUT.c: 75: getDeviceI
      +                          D());
 10787  014B14  0E29               	movlw	low STR_203
 10788  014B16  0102               	movlb	2	; () banked
 10789  014B18  6FA9               	movwf	printf@f& (0+255),b
 10790  014B1A  0EF2               	movlw	high STR_203
 10791  014B1C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10792  014B1E  EC58  F0E2         	call	_getDeviceID	;wreg free
 10793  014B22  C20B  F20D         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10794  014B26  C20C  F20E         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10795  014B2A  EC7D  F0D6         	call	_getDeviceIDString	;wreg free
 10796  014B2E  C20D  F2AB         	movff	?_getDeviceIDString,?_printf+2
 10797  014B32  C20E  F2AC         	movff	?_getDeviceIDString+1,?_printf+3
 10798  014B36  EC58  F0E2         	call	_getDeviceID	;wreg free
 10799  014B3A  C20B  F2AD         	movff	?_getDeviceID,?_printf+4
 10800  014B3E  C20C  F2AE         	movff	?_getDeviceID+1,?_printf+5
 10801  014B42  EC32  F0DF         	call	_printf	;wreg free
 10802                           
 10803                           ;ring_buffer_LUT.c: 77: printf("\n\r");
 10804  014B46  0E37               	movlw	low (STR_263+5)
 10805  014B48  0102               	movlb	2	; () banked
 10806  014B4A  6FA9               	movwf	printf@f& (0+255),b
 10807  014B4C  0EFF               	movlw	high (STR_263+5)
 10808  014B4E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10809  014B50  EC32  F0DF         	call	_printf	;wreg free
 10810                           
 10811                           ;ring_buffer_LUT.c: 79: printf("    Device silicon revision ID retrieved from flash: %c%
      +                          03d\n\r",;ring_buffer_LUT.c: 80: ((char) getMajorRevisionID() + 65),getMinorRevisionID()
      +                          );
 10812  014B54  0EF5               	movlw	low STR_205
 10813  014B56  0102               	movlb	2	; () banked
 10814  014B58  6FA9               	movwf	printf@f& (0+255),b
 10815  014B5A  0EED               	movlw	high STR_205
 10816  014B5C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10817  014B5E  EC6E  F0DF         	call	_getMajorRevisionID	;wreg free
 10818  014B62  0102               	movlb	2	; () banked
 10819  014B64  6FBC               	movwf	??_ringBufferLUT& (0+255),b
 10820  014B66  0E41               	movlw	65
 10821  014B68  25BC               	addwf	??_ringBufferLUT& (0+255),w,b
 10822  014B6A  6FAB               	movwf	(?_printf+2)& (0+255),b
 10823  014B6C  6BAC               	clrf	(?_printf+3)& (0+255),b
 10824  014B6E  0E00               	movlw	0
 10825  014B70  23AC               	addwfc	(?_printf+3)& (0+255),f,b
 10826  014B72  ECAC  F0E1         	call	_getMinorRevisionID	;wreg free
 10827  014B76  0102               	movlb	2	; () banked
 10828  014B78  6FBD               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10829  014B7A  51BD               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10830  014B7C  6FAD               	movwf	(?_printf+4)& (0+255),b
 10831  014B7E  6BAE               	clrf	(?_printf+5)& (0+255),b
 10832  014B80  EC32  F0DF         	call	_printf	;wreg free
 10833                           
 10834                           ;ring_buffer_LUT.c: 82: printf("\n\r");
 10835  014B84  0E37               	movlw	low (STR_263+5)
 10836  014B86  0102               	movlb	2	; () banked
 10837  014B88  6FA9               	movwf	printf@f& (0+255),b
 10838  014B8A  0EFF               	movlw	high (STR_263+5)
 10839  014B8C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10840  014B8E  EC32  F0DF         	call	_printf	;wreg free
 10841                           
 10842                           ;ring_buffer_LUT.c: 84: printf("    The following User IDs have been retrieved from flas
      +                          h:\n\r");
 10843  014B92  0E71               	movlw	low STR_207
 10844  014B94  0102               	movlb	2	; () banked
 10845  014B96  6FA9               	movwf	printf@f& (0+255),b
 10846  014B98  0EEE               	movlw	high STR_207
 10847  014B9A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10848  014B9C  EC32  F0DF         	call	_printf	;wreg free
 10849                           
 10850                           ;ring_buffer_LUT.c: 87: for (int userID = 0; userID <= 7; userID++) {
 10851  014BA0  0E00               	movlw	0
 10852  014BA2  0103               	movlb	3	; () banked
 10853  014BA4  6FFE               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10854  014BA6  0E00               	movlw	0
 10855  014BA8  6FFD               	movwf	ringBufferLUT@userID& (0+255),b
 10856  014BAA                     l21361:
 10857                           
 10858                           ; BSR set to: 3
 10859                           ;ring_buffer_LUT.c: 89: printf("        User ID Word %d (Flash address 0x20000%X): 0x%04
      +                          X\n\r",;ring_buffer_LUT.c: 90: userID,;ring_buffer_LUT.c: 91: (2 * userID),;ring_buffer_
      +                          LUT.c: 92: getUserID(userID));
 10860  014BAA  0EEA               	movlw	low STR_208
 10861  014BAC  0102               	movlb	2	; () banked
 10862  014BAE  6FA9               	movwf	printf@f& (0+255),b
 10863  014BB0  0EEE               	movlw	high STR_208
 10864  014BB2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10865  014BB4  C3FD  F2AB         	movff	ringBufferLUT@userID,?_printf+2
 10866  014BB8  C3FE  F2AC         	movff	ringBufferLUT@userID+1,?_printf+3
 10867  014BBC  90D8               	bcf	status,0,c
 10868  014BBE  0103               	movlb	3	; () banked
 10869  014BC0  35FD               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10870  014BC2  0102               	movlb	2	; () banked
 10871  014BC4  6FAD               	movwf	(?_printf+4)& (0+255),b
 10872  014BC6  0103               	movlb	3	; () banked
 10873  014BC8  35FE               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10874  014BCA  0102               	movlb	2	; () banked
 10875  014BCC  6FAE               	movwf	(?_printf+5)& (0+255),b
 10876  014BCE  0103               	movlb	3	; () banked
 10877  014BD0  51FD               	movf	ringBufferLUT@userID& (0+255),w,b
 10878  014BD2  ECFF  F0DF         	call	_getUserID
 10879  014BD6  C20B  F2AF         	movff	?_getUserID,?_printf+6
 10880  014BDA  C20C  F2B0         	movff	?_getUserID+1,?_printf+7
 10881  014BDE  EC32  F0DF         	call	_printf	;wreg free
 10882  014BE2  0103               	movlb	3	; () banked
 10883  014BE4  4BFD               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10884  014BE6  2BFE               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10885                           
 10886                           ; BSR set to: 3
 10887  014BE8  BFFE               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10888  014BEA  D7DF               	goto	l21361
 10889  014BEC  51FE               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10890  014BEE  E104               	bnz	u27370
 10891  014BF0  0E08               	movlw	8
 10892  014BF2  5DFD               	subwf	ringBufferLUT@userID& (0+255),w,b
 10893  014BF4  A0D8               	btfss	status,0,c
 10894  014BF6  D7D9               	goto	l21361
 10895  014BF8                     u27370:
 10896                           
 10897                           ; BSR set to: 3
 10898                           ;ring_buffer_LUT.c: 94: };ring_buffer_LUT.c: 96: printf("\n\r");
 10899  014BF8  0E37               	movlw	low (STR_263+5)
 10900  014BFA  0102               	movlb	2	; () banked
 10901  014BFC  6FA9               	movwf	printf@f& (0+255),b
 10902  014BFE  0EFF               	movlw	high (STR_263+5)
 10903  014C00  6FAA               	movwf	(printf@f+1)& (0+255),b
 10904  014C02  EC32  F0DF         	call	_printf	;wreg free
 10905                           
 10906                           ;ring_buffer_LUT.c: 98: printf("    The cause of the most recent device reset was: %s\n\
      +                          r",;ring_buffer_LUT.c: 99: getCauseOfResetString(reset_cause));
 10907  014C06  0E48               	movlw	low STR_210
 10908  014C08  0102               	movlb	2	; () banked
 10909  014C0A  6FA9               	movwf	printf@f& (0+255),b
 10910  014C0C  0EF0               	movlw	high STR_210
 10911  014C0E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10912  014C10  51FF               	movf	_reset_cause& (0+255),w,b
 10913  014C12  EC66  F0E0         	call	_getCauseOfResetString
 10914  014C16  C200  F2AB         	movff	?_getCauseOfResetString,?_printf+2
 10915  014C1A  C201  F2AC         	movff	?_getCauseOfResetString+1,?_printf+3
 10916  014C1E  EC32  F0DF         	call	_printf	;wreg free
 10917                           
 10918                           ;ring_buffer_LUT.c: 101: printf("\n\r");
 10919  014C22  0E37               	movlw	low (STR_263+5)
 10920  014C24  0102               	movlb	2	; () banked
 10921  014C26  6FA9               	movwf	printf@f& (0+255),b
 10922  014C28  0EFF               	movlw	high (STR_263+5)
 10923  014C2A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10924  014C2C  EC32  F0DF         	call	_printf	;wreg free
 10925                           
 10926                           ;ring_buffer_LUT.c: 103: printf("    Device on time since last reset condition is %s\n\r
      +                          ", getStringSecondsAsTime(device_on_time));
 10927  014C30  0E23               	movlw	low STR_212
 10928  014C32  0102               	movlb	2	; () banked
 10929  014C34  6FA9               	movwf	printf@f& (0+255),b
 10930  014C36  0EF1               	movlw	high STR_212
 10931  014C38  6FAA               	movwf	(printf@f+1)& (0+255),b
 10932  014C3A  C0C5  F29F         	movff	_device_on_time,getStringSecondsAsTime@input_seconds
 10933  014C3E  C0C6  F2A0         	movff	_device_on_time+1,getStringSecondsAsTime@input_seconds+1
 10934  014C42  C0C7  F2A1         	movff	_device_on_time+2,getStringSecondsAsTime@input_seconds+2
 10935  014C46  C0C8  F2A2         	movff	_device_on_time+3,getStringSecondsAsTime@input_seconds+3
 10936  014C4A  EC48  F0AE         	call	_getStringSecondsAsTime	;wreg free
 10937  014C4E  C29F  F2AB         	movff	?_getStringSecondsAsTime,?_printf+2
 10938  014C52  C2A0  F2AC         	movff	?_getStringSecondsAsTime+1,?_printf+3
 10939  014C56  EC32  F0DF         	call	_printf	;wreg free
 10940                           
 10941                           ;ring_buffer_LUT.c: 105: printf("\n\r");
 10942  014C5A  0E37               	movlw	low (STR_263+5)
 10943  014C5C  0102               	movlb	2	; () banked
 10944  014C5E  6FA9               	movwf	printf@f& (0+255),b
 10945  014C60  0EFF               	movlw	high (STR_263+5)
 10946  014C62  6FAA               	movwf	(printf@f+1)& (0+255),b
 10947  014C64  EC32  F0DF         	call	_printf	;wreg free
 10948                           
 10949                           ;ring_buffer_LUT.c: 107: printErrorHandlerStatus();
 10950  014C68  ECA8  F0C9         	call	_printErrorHandlerStatus	;wreg free
 10951                           
 10952                           ;ring_buffer_LUT.c: 109: printf("\n\r");
 10953  014C6C  0E37               	movlw	low (STR_263+5)
 10954  014C6E  0102               	movlb	2	; () banked
 10955  014C70  6FA9               	movwf	printf@f& (0+255),b
 10956  014C72  0EFF               	movlw	high (STR_263+5)
 10957  014C74  6FAA               	movwf	(printf@f+1)& (0+255),b
 10958  014C76  EC32  F0DF         	call	_printf	;wreg free
 10959                           
 10960                           ;ring_buffer_LUT.c: 111: }
 10961  014C7A  0012               	return	
 10962  014C7C                     l21369:
 10963                           
 10964                           ; BSR set to: 2
 10965                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 10966  014C7C  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10967  014C80  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10968  014C84  0E39               	movlw	low STR_215
 10969  014C86  6F02               	movwf	strcmp@s2& (0+255),b
 10970  014C88  0EFB               	movlw	high STR_215
 10971  014C8A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10972  014C8C  EC4C  F0DC         	call	_strcmp	;wreg free
 10973  014C90  0102               	movlb	2	; () banked
 10974  014C92  5100               	movf	?_strcmp& (0+255),w,b
 10975  014C94  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10976  014C96  A4D8               	btfss	status,2,c
 10977  014C98  D014               	goto	l21379
 10978                           
 10979                           ; BSR set to: 2
 10980                           ;ring_buffer_LUT.c: 116: clearADCErrors();
 10981  014C9A  EC9D  F0E3         	call	_clearADCErrors	;wreg free
 10982                           
 10983                           ;ring_buffer_LUT.c: 118: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10984  014C9E  0E00               	movlw	0
 10985  014CA0  0102               	movlb	2	; () banked
 10986  014CA2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10987  014CA4  0E00               	movlw	0
 10988  014CA6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10989  014CA8  0E02               	movlw	2
 10990  014CAA  EC1B  F0B0         	call	_terminalTextAttributes
 10991                           
 10992                           ;ring_buffer_LUT.c: 119: printf("ADC Error(s) cleared\n\r");
 10993  014CAE  0ECC               	movlw	low STR_216
 10994  014CB0  0102               	movlb	2	; () banked
 10995  014CB2  6FA9               	movwf	printf@f& (0+255),b
 10996  014CB4  0EF9               	movlw	high STR_216
 10997  014CB6  6FAA               	movwf	(printf@f+1)& (0+255),b
 10998  014CB8  EC32  F0DF         	call	_printf	;wreg free
 10999  014CBC                     l21377:
 11000                           
 11001                           ;ring_buffer_LUT.c: 120: terminalTextAttributesReset();
 11002  014CBC  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11003                           
 11004                           ;ring_buffer_LUT.c: 122: }
 11005  014CC0  0012               	return	
 11006  014CC2                     l21379:
 11007                           
 11008                           ; BSR set to: 2
 11009                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Clear I2C Errors"))) {
 11010  014CC2  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11011  014CC6  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11012  014CCA  0E28               	movlw	low STR_217
 11013  014CCC  6F02               	movwf	strcmp@s2& (0+255),b
 11014  014CCE  0EFB               	movlw	high STR_217
 11015  014CD0  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11016  014CD2  EC4C  F0DC         	call	_strcmp	;wreg free
 11017  014CD6  0102               	movlb	2	; () banked
 11018  014CD8  5100               	movf	?_strcmp& (0+255),w,b
 11019  014CDA  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11020  014CDC  A4D8               	btfss	status,2,c
 11021  014CDE  D012               	goto	l21389
 11022                           
 11023                           ; BSR set to: 2
 11024                           ;ring_buffer_LUT.c: 127: clearI2CErrors();
 11025  014CE0  EC97  F0E2         	call	_clearI2CErrors	;wreg free
 11026                           
 11027                           ;ring_buffer_LUT.c: 129: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11028  014CE4  0E00               	movlw	0
 11029  014CE6  0102               	movlb	2	; () banked
 11030  014CE8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11031  014CEA  0E00               	movlw	0
 11032  014CEC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11033  014CEE  0E02               	movlw	2
 11034  014CF0  EC1B  F0B0         	call	_terminalTextAttributes
 11035                           
 11036                           ;ring_buffer_LUT.c: 130: printf("I2C error(s) cleared\n\r");
 11037  014CF4  0EE3               	movlw	low STR_218
 11038  014CF6  0102               	movlb	2	; () banked
 11039  014CF8  6FA9               	movwf	printf@f& (0+255),b
 11040  014CFA  0EF9               	movlw	high STR_218
 11041  014CFC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11042  014CFE  EC32  F0DF         	call	_printf	;wreg free
 11043  014D02  D7DC               	goto	l21377
 11044  014D04                     l21389:
 11045                           
 11046                           ; BSR set to: 2
 11047                           ;ring_buffer_LUT.c: 136: else if((0 == strcmp(line, "Clear UART Errors"))) {
 11048  014D04  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11049  014D08  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11050  014D0C  0E05               	movlw	low STR_219
 11051  014D0E  6F02               	movwf	strcmp@s2& (0+255),b
 11052  014D10  0EFB               	movlw	high STR_219
 11053  014D12  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11054  014D14  EC4C  F0DC         	call	_strcmp	;wreg free
 11055  014D18  0102               	movlb	2	; () banked
 11056  014D1A  5100               	movf	?_strcmp& (0+255),w,b
 11057  014D1C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11058  014D1E  A4D8               	btfss	status,2,c
 11059  014D20  D012               	goto	l21399
 11060                           
 11061                           ; BSR set to: 2
 11062                           ;ring_buffer_LUT.c: 138: clearUARTErrors();
 11063  014D22  EC24  F0E4         	call	_clearUARTErrors	;wreg free
 11064                           
 11065                           ;ring_buffer_LUT.c: 140: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11066  014D26  0E00               	movlw	0
 11067  014D28  0102               	movlb	2	; () banked
 11068  014D2A  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11069  014D2C  0E00               	movlw	0
 11070  014D2E  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11071  014D30  0E02               	movlw	2
 11072  014D32  EC1B  F0B0         	call	_terminalTextAttributes
 11073                           
 11074                           ;ring_buffer_LUT.c: 141: printf("UART error(s) cleared\n\r");
 11075  014D36  0E6F               	movlw	low STR_220
 11076  014D38  0102               	movlb	2	; () banked
 11077  014D3A  6FA9               	movwf	printf@f& (0+255),b
 11078  014D3C  0EF9               	movlw	high STR_220
 11079  014D3E  6FAA               	movwf	(printf@f+1)& (0+255),b
 11080  014D40  EC32  F0DF         	call	_printf	;wreg free
 11081  014D44  D7BB               	goto	l21377
 11082  014D46                     l21399:
 11083                           
 11084                           ; BSR set to: 2
 11085                           ;ring_buffer_LUT.c: 146: else if ((0 == strcmp(line, "Error Status?"))) {
 11086  014D46  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11087  014D4A  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11088  014D4E  0E31               	movlw	low STR_221
 11089  014D50  6F02               	movwf	strcmp@s2& (0+255),b
 11090  014D52  0EFC               	movlw	high STR_221
 11091  014D54  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11092  014D56  EC4C  F0DC         	call	_strcmp	;wreg free
 11093  014D5A  0102               	movlb	2	; () banked
 11094  014D5C  5100               	movf	?_strcmp& (0+255),w,b
 11095  014D5E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11096  014D60  A4D8               	btfss	status,2,c
 11097  014D62  D003               	goto	l21403
 11098                           
 11099                           ; BSR set to: 2
 11100                           ;ring_buffer_LUT.c: 148: printErrorHandlerStatus();
 11101  014D64  ECA8  F0C9         	call	_printErrorHandlerStatus	;wreg free
 11102                           
 11103                           ;ring_buffer_LUT.c: 150: }
 11104  014D68  0012               	return	
 11105  014D6A                     l21403:
 11106                           
 11107                           ; BSR set to: 2
 11108                           ;ring_buffer_LUT.c: 153: else if (0 == strcmp(line, "Current Measurements?")) {
 11109  014D6A  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11110  014D6E  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11111  014D72  0E26               	movlw	low STR_222
 11112  014D74  6F02               	movwf	strcmp@s2& (0+255),b
 11113  014D76  0EFA               	movlw	high STR_222
 11114  014D78  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11115  014D7A  EC4C  F0DC         	call	_strcmp	;wreg free
 11116  014D7E  0102               	movlb	2	; () banked
 11117  014D80  5100               	movf	?_strcmp& (0+255),w,b
 11118  014D82  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11119  014D84  A4D8               	btfss	status,2,c
 11120  014D86  D01F               	goto	l21407
 11121                           
 11122                           ; BSR set to: 2
 11123                           ;ring_buffer_LUT.c: 155: printf("\n\r");
 11124  014D88  0E37               	movlw	low (STR_263+5)
 11125  014D8A  6FA9               	movwf	printf@f& (0+255),b
 11126  014D8C  0EFF               	movlw	high (STR_263+5)
 11127  014D8E  6FAA               	movwf	(printf@f+1)& (0+255),b
 11128  014D90  EC32  F0DF         	call	_printf	;wreg free
 11129                           
 11130                           ;ring_buffer_LUT.c: 157: terminalTextAttributes(GREEN, BLACK, BOLD);
 11131  014D94  0E00               	movlw	0
 11132  014D96  0102               	movlb	2	; () banked
 11133  014D98  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11134  014D9A  0E01               	movlw	1
 11135  014D9C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11136  014D9E  0E02               	movlw	2
 11137  014DA0  EC1B  F0B0         	call	_terminalTextAttributes
 11138                           
 11139                           ;ring_buffer_LUT.c: 158: printf("System Measurements at time of command call:\n\r");
 11140  014DA4  0EBD               	movlw	low STR_224
 11141  014DA6  0102               	movlb	2	; () banked
 11142  014DA8  6FA9               	movwf	printf@f& (0+255),b
 11143  014DAA  0EF2               	movlw	high STR_224
 11144  014DAC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11145  014DAE  EC32  F0DF         	call	_printf	;wreg free
 11146                           
 11147                           ;ring_buffer_LUT.c: 160: printf("\n\r");
 11148  014DB2  0E37               	movlw	low (STR_263+5)
 11149  014DB4  0102               	movlb	2	; () banked
 11150  014DB6  6FA9               	movwf	printf@f& (0+255),b
 11151  014DB8  0EFF               	movlw	high (STR_263+5)
 11152  014DBA  6FAA               	movwf	(printf@f+1)& (0+255),b
 11153  014DBC  EC32  F0DF         	call	_printf	;wreg free
 11154                           
 11155                           ;ring_buffer_LUT.c: 162: printCurrentMeasurements();
 11156  014DC0  ECD6  F0A7         	call	_printCurrentMeasurements	;wreg free
 11157                           
 11158                           ;ring_buffer_LUT.c: 164: }
 11159  014DC4  0012               	return	
 11160  014DC6                     l21407:
 11161                           
 11162                           ; BSR set to: 2
 11163                           ;ring_buffer_LUT.c: 166: else if ((0 == strcmp(line, "Enable Live Measurements"))) {
 11164  014DC6  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11165  014DCA  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11166  014DCE  0E0E               	movlw	low STR_226
 11167  014DD0  6F02               	movwf	strcmp@s2& (0+255),b
 11168  014DD2  0EF9               	movlw	high STR_226
 11169  014DD4  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11170  014DD6  EC4C  F0DC         	call	_strcmp	;wreg free
 11171  014DDA  0102               	movlb	2	; () banked
 11172  014DDC  5100               	movf	?_strcmp& (0+255),w,b
 11173  014DDE  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11174  014DE0  A4D8               	btfss	status,2,c
 11175  014DE2  D024               	goto	l21421
 11176                           
 11177                           ; BSR set to: 2
 11178                           ;ring_buffer_LUT.c: 168: live_measurement_enable_flag = 1;
 11179  014DE4  0E01               	movlw	1
 11180  014DE6  0100               	movlb	0	; () banked
 11181  014DE8  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;ring_buffer_LUT.c: 169: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11185  014DEA  0E00               	movlw	0
 11186  014DEC  0102               	movlb	2	; () banked
 11187  014DEE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11188  014DF0  0E00               	movlw	0
 11189  014DF2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11190  014DF4  0E02               	movlw	2
 11191  014DF6  EC1B  F0B0         	call	_terminalTextAttributes
 11192                           
 11193                           ;ring_buffer_LUT.c: 170: printf("Enabling live measurements\n\r");
 11194  014DFA  0E31               	movlw	low STR_227
 11195  014DFC  0102               	movlb	2	; () banked
 11196  014DFE  6FA9               	movwf	printf@f& (0+255),b
 11197  014E00  0EF8               	movlw	high STR_227
 11198  014E02  6FAA               	movwf	(printf@f+1)& (0+255),b
 11199  014E04  EC32  F0DF         	call	_printf	;wreg free
 11200                           
 11201                           ;ring_buffer_LUT.c: 171: terminalTextAttributesReset();
 11202  014E08  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11203                           
 11204                           ;ring_buffer_LUT.c: 172: _delay((unsigned long)((100)*(64000000/4000.0)));
 11205  014E0C  0E09               	movlw	9
 11206  014E0E  0102               	movlb	2	; () banked
 11207  014E10  6FBD               	movwf	(??_ringBufferLUT+1)& (0+255),b
 11208  014E12  0E1E               	movlw	30
 11209  014E14  6FBC               	movwf	??_ringBufferLUT& (0+255),b
 11210  014E16  0EE4               	movlw	228
 11211  014E18                     u29227:
 11212  014E18  2EE8               	decfsz	wreg,f,c
 11213  014E1A  D7FE               	bra	u29227
 11214  014E1C  2FBC               	decfsz	??_ringBufferLUT& (0+255),f,b
 11215  014E1E  D7FC               	bra	u29227
 11216  014E20  2FBD               	decfsz	(??_ringBufferLUT+1)& (0+255),f,b
 11217  014E22  D7FA               	bra	u29227
 11218  014E24  F000               	nop	
 11219                           
 11220                           ;ring_buffer_LUT.c: 173: terminalClearScreen();
 11221  014E26  EC8D  F0E3         	call	_terminalClearScreen	;wreg free
 11222                           
 11223                           ;ring_buffer_LUT.c: 175: }
 11224  014E2A  0012               	return	
 11225  014E2C                     l21421:
 11226                           
 11227                           ; BSR set to: 2
 11228                           ;ring_buffer_LUT.c: 178: else if((0 == strcmp(line, "Help"))) {
 11229  014E2C  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11230  014E30  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11231  014E34  0E9A               	movlw	low STR_228
 11232  014E36  6F02               	movwf	strcmp@s2& (0+255),b
 11233  014E38  0EFF               	movlw	high STR_228
 11234  014E3A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11235  014E3C  EC4C  F0DC         	call	_strcmp	;wreg free
 11236  014E40  0102               	movlb	2	; () banked
 11237  014E42  5100               	movf	?_strcmp& (0+255),w,b
 11238  014E44  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11239  014E46  A4D8               	btfss	status,2,c
 11240  014E48  D069               	goto	l21425
 11241                           
 11242                           ; BSR set to: 2
 11243                           ;ring_buffer_LUT.c: 180: printf("\n\r");
 11244  014E4A  0E37               	movlw	low (STR_263+5)
 11245  014E4C  6FA9               	movwf	printf@f& (0+255),b
 11246  014E4E  0EFF               	movlw	high (STR_263+5)
 11247  014E50  6FAA               	movwf	(printf@f+1)& (0+255),b
 11248  014E52  EC32  F0DF         	call	_printf	;wreg free
 11249                           
 11250                           ;ring_buffer_LUT.c: 182: terminalTextAttributes(YELLOW, BLACK, BOLD);
 11251  014E56  0E00               	movlw	0
 11252  014E58  0102               	movlb	2	; () banked
 11253  014E5A  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11254  014E5C  0E01               	movlw	1
 11255  014E5E  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11256  014E60  0E03               	movlw	3
 11257  014E62  EC1B  F0B0         	call	_terminalTextAttributes
 11258                           
 11259                           ;ring_buffer_LUT.c: 184: printf("Available Commands:\n\r");
 11260  014E66  0E10               	movlw	low STR_230
 11261  014E68  0102               	movlb	2	; () banked
 11262  014E6A  6FA9               	movwf	printf@f& (0+255),b
 11263  014E6C  0EFA               	movlw	high STR_230
 11264  014E6E  6FAA               	movwf	(printf@f+1)& (0+255),b
 11265  014E70  EC32  F0DF         	call	_printf	;wreg free
 11266                           
 11267                           ;ring_buffer_LUT.c: 186: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11268  014E74  0E00               	movlw	0
 11269  014E76  0102               	movlb	2	; () banked
 11270  014E78  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11271  014E7A  0E00               	movlw	0
 11272  014E7C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11273  014E7E  0E03               	movlw	3
 11274  014E80  EC1B  F0B0         	call	_terminalTextAttributes
 11275                           
 11276                           ;ring_buffer_LUT.c: 188: printf( "    *IDN?: Prints identification string\n\r";ring_buff
      +                          er_LUT.c: 189: "    Reset: Executes software reset instruction\n\r";ring_buffer_LUT.c: 1
      +                          90: "    Clear: Clears the virtual COM port terminal\n\r";ring_buffer_LUT.c: 191: "    C
      +                          urrent Measurements?: Prints instantaneous system level electrical measurements\n\r";rin
      +                          g_buffer_LUT.c: 192: "    Enable Live Measurements: Prints a continuous stream of measur
      +                          ement data to the terminal\n\r";ring_buffer_LUT.c: 193: "    Device Status?: Prints digi
      +                          tal monitoring microcontroller device status\n\r"
 11277  014E84  0EDB               	movlw	low STR_231
 11278  014E86  0102               	movlb	2	; () banked
 11279  014E88  6FA9               	movwf	printf@f& (0+255),b
 11280  014E8A  0EE7               	movlw	high STR_231
 11281  014E8C  6FAA               	movwf	(printf@f+1)& (0+255),b
 11282  014E8E  EC32  F0DF         	call	_printf	;wreg free
 11283                           
 11284                           ;ring_buffer_LUT.c: 201: printf("\n\rHelp messages and neutral responses appear in yello
      +                          w\n\r");
 11285  014E92  0E0F               	movlw	low STR_5
 11286  014E94  0102               	movlb	2	; () banked
 11287  014E96  6FA9               	movwf	printf@f& (0+255),b
 11288  014E98  0EF0               	movlw	high STR_5
 11289  014E9A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11290  014E9C  EC32  F0DF         	call	_printf	;wreg free
 11291                           
 11292                           ;ring_buffer_LUT.c: 203: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11293  014EA0  0E00               	movlw	0
 11294  014EA2  0102               	movlb	2	; () banked
 11295  014EA4  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11296  014EA6  0E00               	movlw	0
 11297  014EA8  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11298  014EAA  0E02               	movlw	2
 11299  014EAC  EC1B  F0B0         	call	_terminalTextAttributes
 11300                           
 11301                           ;ring_buffer_LUT.c: 204: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 11302  014EB0  0E33               	movlw	low STR_6
 11303  014EB2  0102               	movlb	2	; () banked
 11304  014EB4  6FA9               	movwf	printf@f& (0+255),b
 11305  014EB6  0EEE               	movlw	high STR_6
 11306  014EB8  6FAA               	movwf	(printf@f+1)& (0+255),b
 11307  014EBA  EC32  F0DF         	call	_printf	;wreg free
 11308                           
 11309                           ;ring_buffer_LUT.c: 205: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11310  014EBE  0E00               	movlw	0
 11311  014EC0  0102               	movlb	2	; () banked
 11312  014EC2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11313  014EC4  0E00               	movlw	0
 11314  014EC6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11315  014EC8  0E06               	movlw	6
 11316  014ECA  EC1B  F0B0         	call	_terminalTextAttributes
 11317                           
 11318                           ;ring_buffer_LUT.c: 206: printf("Measurement responses appear in cyan\n\r");
 11319  014ECE  0E25               	movlw	low STR_7
 11320  014ED0  0102               	movlb	2	; () banked
 11321  014ED2  6FA9               	movwf	printf@f& (0+255),b
 11322  014ED4  0EF5               	movlw	high STR_7
 11323  014ED6  6FAA               	movwf	(printf@f+1)& (0+255),b
 11324  014ED8  EC32  F0DF         	call	_printf	;wreg free
 11325                           
 11326                           ;ring_buffer_LUT.c: 207: terminalTextAttributes(RED, BLACK, NORMAL);
 11327  014EDC  0E00               	movlw	0
 11328  014EDE  0102               	movlb	2	; () banked
 11329  014EE0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11330  014EE2  0E00               	movlw	0
 11331  014EE4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11332  014EE6  0E01               	movlw	1
 11333  014EE8  EC1B  F0B0         	call	_terminalTextAttributes
 11334                           
 11335                           ;ring_buffer_LUT.c: 208: printf("Errors and negative responses appear in red\n\r");
 11336  014EEC  0EA7               	movlw	low STR_8
 11337  014EEE  0102               	movlb	2	; () banked
 11338  014EF0  6FA9               	movwf	printf@f& (0+255),b
 11339  014EF2  0EF3               	movlw	high STR_8
 11340  014EF4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11341  014EF6  EC32  F0DF         	call	_printf	;wreg free
 11342                           
 11343                           ;ring_buffer_LUT.c: 209: terminalTextAttributesReset();
 11344  014EFA  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11345                           
 11346                           ;ring_buffer_LUT.c: 210: printf("User input appears in white\n\r");
 11347  014EFE  0EF6               	movlw	low STR_9
 11348  014F00  0102               	movlb	2	; () banked
 11349  014F02  6FA9               	movwf	printf@f& (0+255),b
 11350  014F04  0EF7               	movlw	high STR_9
 11351  014F06  6FAA               	movwf	(printf@f+1)& (0+255),b
 11352  014F08  EC32  F0DF         	call	_printf	;wreg free
 11353                           
 11354                           ;ring_buffer_LUT.c: 212: printf("\n\r");
 11355  014F0C  0E37               	movlw	low (STR_263+5)
 11356  014F0E  0102               	movlb	2	; () banked
 11357  014F10  6FA9               	movwf	printf@f& (0+255),b
 11358  014F12  0EFF               	movlw	high (STR_263+5)
 11359  014F14  6FAA               	movwf	(printf@f+1)& (0+255),b
 11360  014F16  EC32  F0DF         	call	_printf	;wreg free
 11361                           
 11362                           ;ring_buffer_LUT.c: 214: }
 11363  014F1A  0012               	return	
 11364  014F1C                     l21425:
 11365                           
 11366                           ; BSR set to: 2
 11367                           ;ring_buffer_LUT.c: 217: else {;ring_buffer_LUT.c: 219: if (strlen(line) >= 1) {
 11368  014F1C  C2BA  F200         	movff	ringBufferLUT@line,strlen@s
 11369  014F20  C2BB  F201         	movff	ringBufferLUT@line+1,strlen@s+1
 11370  014F24  ECC6  F0E0         	call	_strlen	;wreg free
 11371  014F28  0102               	movlb	2	; () banked
 11372  014F2A  5100               	movf	?_strlen& (0+255),w,b
 11373  014F2C  1101               	iorwf	(?_strlen+1)& (0+255),w,b
 11374  014F2E  B4D8               	btfsc	status,2,c
 11375  014F30  D027               	goto	l21429
 11376                           
 11377                           ; BSR set to: 2
 11378                           ;ring_buffer_LUT.c: 221: terminalTextAttributes(RED, BLACK, NORMAL);
 11379  014F32  0E00               	movlw	0
 11380  014F34  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11381  014F36  0E00               	movlw	0
 11382  014F38  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11383  014F3A  0E01               	movlw	1
 11384  014F3C  EC1B  F0B0         	call	_terminalTextAttributes
 11385                           
 11386                           ;ring_buffer_LUT.c: 222: printf("Unsupported or mis-entered command\n\r");
 11387  014F40  0E96               	movlw	low STR_238
 11388  014F42  0102               	movlb	2	; () banked
 11389  014F44  6FA9               	movwf	printf@f& (0+255),b
 11390  014F46  0EF5               	movlw	high STR_238
 11391  014F48  6FAA               	movwf	(printf@f+1)& (0+255),b
 11392  014F4A  EC32  F0DF         	call	_printf	;wreg free
 11393                           
 11394                           ;ring_buffer_LUT.c: 223: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11395  014F4E  0E00               	movlw	0
 11396  014F50  0102               	movlb	2	; () banked
 11397  014F52  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11398  014F54  0E00               	movlw	0
 11399  014F56  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11400  014F58  0E03               	movlw	3
 11401  014F5A  EC1B  F0B0         	call	_terminalTextAttributes
 11402                           
 11403                           ;ring_buffer_LUT.c: 224: printf("Commands are case sensitive, backspace is supported, co
      +                          mmand history is not supported\n\r");
 11404  014F5E  0ECB               	movlw	low STR_239
 11405  014F60  0102               	movlb	2	; () banked
 11406  014F62  6FA9               	movwf	printf@f& (0+255),b
 11407  014F64  0EEA               	movlw	high STR_239
 11408  014F66  6FAA               	movwf	(printf@f+1)& (0+255),b
 11409  014F68  EC32  F0DF         	call	_printf	;wreg free
 11410                           
 11411                           ;ring_buffer_LUT.c: 225: printf("Call 'Help' for list of supported commands\n\r");
 11412  014F6C  0E4C               	movlw	low (STR_10+2)
 11413  014F6E  0102               	movlb	2	; () banked
 11414  014F70  6FA9               	movwf	printf@f& (0+255),b
 11415  014F72  0EF3               	movlw	high (STR_10+2)
 11416  014F74  6FAA               	movwf	(printf@f+1)& (0+255),b
 11417  014F76  EC32  F0DF         	call	_printf	;wreg free
 11418                           
 11419                           ;ring_buffer_LUT.c: 226: terminalTextAttributesReset();
 11420  014F7A  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11421                           
 11422                           ;ring_buffer_LUT.c: 228: }
 11423  014F7E  0012               	return	
 11424  014F80                     l21429:
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;ring_buffer_LUT.c: 230: else if (live_measurement_enable_flag) {
 11428  014F80  0100               	movlb	0	; () banked
 11429  014F82  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 11430  014F84  B4D8               	btfsc	status,2,c
 11431  014F86  0012               	return	
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;ring_buffer_LUT.c: 232: live_measurement_enable_flag = 0;
 11435  014F88  0E00               	movlw	0
 11436  014F8A  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;ring_buffer_LUT.c: 233: terminalTextAttributes(RED, BLACK, NORMAL);
 11440  014F8C  0E00               	movlw	0
 11441  014F8E  0102               	movlb	2	; () banked
 11442  014F90  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11443  014F92  0E00               	movlw	0
 11444  014F94  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11445  014F96  0E01               	movlw	1
 11446  014F98  EC1B  F0B0         	call	_terminalTextAttributes
 11447                           
 11448                           ;ring_buffer_LUT.c: 234: printf("Live measurement updates disabled\n\r");
 11449  014F9C  0E04               	movlw	low STR_241
 11450  014F9E  0102               	movlb	2	; () banked
 11451  014FA0  6FA9               	movwf	printf@f& (0+255),b
 11452  014FA2  0EF6               	movlw	high STR_241
 11453  014FA4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11454  014FA6  EC32  F0DF         	call	_printf	;wreg free
 11455  014FAA  D688               	goto	l21377
 11456  014FAC                     __end_of_ringBufferLUT:
 11457                           	opt callstack 0
 11458                           
 11459 ;; *************** function _terminalClearScreen *****************
 11460 ;; Defined at:
 11461 ;;		line 12 in file "terminal_control.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;Total ram usage:        0 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:   15
 11482 ;; This function calls:
 11483 ;;		_printf
 11484 ;; This function is called by:
 11485 ;;		_main
 11486 ;;		_ringBufferLUT
 11487 ;;		_terminalPrintTestMessage
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text3
 11492  01C71A                     __ptext3:
 11493                           	opt callstack 0
 11494  01C71A                     _terminalClearScreen:
 11495                           	opt callstack 13
 11496                           
 11497                           ;terminal_control.c: 13: printf("\033[2J");
 11498                           
 11499                           ;incstack = 0
 11500  01C71A  0E95               	movlw	low STR_192
 11501  01C71C  0102               	movlb	2	; () banked
 11502  01C71E  6FA9               	movwf	printf@f& (0+255),b
 11503  01C720  0EFF               	movlw	high STR_192
 11504  01C722  6FAA               	movwf	(printf@f+1)& (0+255),b
 11505  01C724  EC32  F0DF         	call	_printf	;wreg free
 11506  01C728  0012               	return		;funcret
 11507  01C72A                     __end_of_terminalClearScreen:
 11508                           	opt callstack 0
 11509                           
 11510 ;; *************** function _strcmp *****************
 11511 ;; Defined at:
 11512 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 11515 ;;		 -> line(64), 
 11516 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 11517 ;;		 -> STR_228(5), STR_226(25), STR_222(22), STR_221(14), 
 11518 ;;		 -> STR_219(18), STR_217(17), STR_215(17), STR_199(15), 
 11519 ;;		 -> STR_197(6), STR_194(6), STR_191(6), 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  r               1    6[BANK2 ] char 
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  2    0[BANK2 ] int 
 11524 ;; Registers used:
 11525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11531 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;Total ram usage:        7 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:   11
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		_ringBufferLUT
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           	psect	text4
 11546  01B898                     __ptext4:
 11547                           	opt callstack 0
 11548  01B898                     _strcmp:
 11549                           	opt callstack 17
 11550                           
 11551                           ;incstack = 0
 11552  01B898  D004               	goto	l20135
 11553  01B89A                     l20133:
 11554                           
 11555                           ; BSR set to: 2
 11556  01B89A  4B00               	infsnz	strcmp@s1& (0+255),f,b
 11557  01B89C  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
 11558  01B89E  4B02               	infsnz	strcmp@s2& (0+255),f,b
 11559  01B8A0  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
 11560  01B8A2                     l20135:
 11561  01B8A2  C202  FFF6         	movff	strcmp@s2,tblptrl
 11562  01B8A6  C203  FFF7         	movff	strcmp@s2+1,tblptrh
 11563  01B8AA                     	if	0	;tblptru may be non-zero
 11564  01B8AA                     	endif
 11565  01B8AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11566  01B8AA  0E00               	movlw	low (__mediumconst shr (0+16))
 11567  01B8AC  6EF8               	movwf	tblptru,c
 11568  01B8AE                     	endif
 11569  01B8AE  0008               	tblrd		*
 11570  01B8B0  CFF5 F204          	movff	tablat,??_strcmp
 11571  01B8B4  C200  FFD9         	movff	strcmp@s1,fsr2l
 11572  01B8B8  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11573  01B8BC  50DF               	movf	indf2,w,c
 11574  01B8BE  0102               	movlb	2	; () banked
 11575  01B8C0  6F05               	movwf	(??_strcmp+1)& (0+255),b
 11576  01B8C2  5104               	movf	??_strcmp& (0+255),w,b
 11577  01B8C4  5D05               	subwf	(??_strcmp+1)& (0+255),w,b
 11578  01B8C6  6F06               	movwf	strcmp@r& (0+255),b
 11579  01B8C8  5106               	movf	strcmp@r& (0+255),w,b
 11580  01B8CA  A4D8               	btfss	status,2,c
 11581  01B8CC  D007               	goto	u25520
 11582                           
 11583                           ; BSR set to: 2
 11584  01B8CE  C200  FFD9         	movff	strcmp@s1,fsr2l
 11585  01B8D2  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11586  01B8D6  50DF               	movf	indf2,w,c
 11587  01B8D8  A4D8               	btfss	status,2,c
 11588  01B8DA  D7DF               	goto	l20133
 11589  01B8DC                     u25520:
 11590                           
 11591                           ; BSR set to: 2
 11592  01B8DC  5106               	movf	strcmp@r& (0+255),w,b
 11593  01B8DE  6F00               	movwf	?_strcmp& (0+255),b
 11594  01B8E0  6B01               	clrf	(?_strcmp+1)& (0+255),b
 11595  01B8E2  BF00               	btfsc	?_strcmp& (0+255),7,b
 11596  01B8E4  0701               	decf	(?_strcmp+1)& (0+255),f,b
 11597                           
 11598                           ; BSR set to: 2
 11599  01B8E6  0012               	return		;funcret
 11600  01B8E8                     __end_of_strcmp:
 11601                           	opt callstack 0
 11602                           
 11603 ;; *************** function _printErrorHandlerStatus *****************
 11604 ;; Defined at:
 11605 ;;		line 244 in file "ring_buffer_LUT.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;		None
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;		None
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      void 
 11612 ;; Registers used:
 11613 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11623 ;;Total ram usage:        0 bytes
 11624 ;; Hardware stack levels used:    1
 11625 ;; Hardware stack levels required when called:   16
 11626 ;; This function calls:
 11627 ;;		_getADCError
 11628 ;;		_getI2CError
 11629 ;;		_getUARTError
 11630 ;;		_printf
 11631 ;;		_terminalTextAttributes
 11632 ;;		_terminalTextAttributesReset
 11633 ;; This function is called by:
 11634 ;;		_ringBufferLUT
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text5
 11639  019350                     __ptext5:
 11640                           	opt callstack 0
 11641  019350                     _printErrorHandlerStatus:
 11642                           	opt callstack 12
 11643                           
 11644                           ;ring_buffer_LUT.c: 246: if (getADCError()) {
 11645                           
 11646                           ; BSR set to: 2
 11647                           ;incstack = 0
 11648  019350  EC1D  F0E3         	call	_getADCError	;wreg free
 11649  019354  0900               	iorlw	0
 11650  019356  B4D8               	btfsc	status,2,c
 11651  019358  D03E               	goto	l20155
 11652                           
 11653                           ;ring_buffer_LUT.c: 248: terminalTextAttributes(RED, BLACK, NORMAL);
 11654  01935A  0E00               	movlw	0
 11655  01935C  0102               	movlb	2	; () banked
 11656  01935E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11657  019360  0E00               	movlw	0
 11658  019362  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11659  019364  0E01               	movlw	1
 11660  019366  EC1B  F0B0         	call	_terminalTextAttributes
 11661                           
 11662                           ;ring_buffer_LUT.c: 249: printf("    ADC error(s) detected!\n\r");
 11663  01936A  0E14               	movlw	low STR_242
 11664  01936C  0102               	movlb	2	; () banked
 11665  01936E  6FA9               	movwf	printf@f& (0+255),b
 11666  019370  0EF8               	movlw	high STR_242
 11667  019372  6FAA               	movwf	(printf@f+1)& (0+255),b
 11668  019374  EC32  F0DF         	call	_printf	;wreg free
 11669                           
 11670                           ;ring_buffer_LUT.c: 250: printf("    The following channels caused an ADC error:\n\r");
 11671  019378  0E5B               	movlw	low STR_243
 11672  01937A  0102               	movlb	2	; () banked
 11673  01937C  6FA9               	movwf	printf@f& (0+255),b
 11674  01937E  0EF2               	movlw	high STR_243
 11675  019380  6FAA               	movwf	(printf@f+1)& (0+255),b
 11676  019382  EC32  F0DF         	call	_printf	;wreg free
 11677                           
 11678                           ;ring_buffer_LUT.c: 252: if (error_handler.ADC_general_error_flag) {
 11679  019386  0100               	movlb	0	; () banked
 11680  019388  51BA               	movf	(_error_handler+1)& (0+255),w,b
 11681  01938A  B4D8               	btfsc	status,2,c
 11682  01938C  D007               	goto	l20151
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;ring_buffer_LUT.c: 253: printf("        General ADC error\n\r");
 11686  01938E  0E87               	movlw	low STR_244
 11687  019390  0102               	movlb	2	; () banked
 11688  019392  6FA9               	movwf	printf@f& (0+255),b
 11689  019394  0EF8               	movlw	high STR_244
 11690  019396  6FAA               	movwf	(printf@f+1)& (0+255),b
 11691  019398  EC32  F0DF         	call	_printf	;wreg free
 11692  01939C                     l20151:
 11693                           
 11694                           ;ring_buffer_LUT.c: 254: };ring_buffer_LUT.c: 256: if (error_handler.FVR_ADC_error_flag)
      +                           {
 11695  01939C  0100               	movlb	0	; () banked
 11696  01939E  51B9               	movf	_error_handler& (0+255),w,b
 11697  0193A0  B4D8               	btfsc	status,2,c
 11698  0193A2  D007               	goto	l2213
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;ring_buffer_LUT.c: 257: printf("        FVR\n\r");
 11702  0193A4  0E23               	movlw	low STR_245
 11703  0193A6  0102               	movlb	2	; () banked
 11704  0193A8  6FA9               	movwf	printf@f& (0+255),b
 11705  0193AA  0EFC               	movlw	high STR_245
 11706  0193AC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11707  0193AE  EC32  F0DF         	call	_printf	;wreg free
 11708  0193B2                     l2213:
 11709                           
 11710                           ;ring_buffer_LUT.c: 258: };ring_buffer_LUT.c: 260: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11711  0193B2  0E00               	movlw	0
 11712  0193B4  0102               	movlb	2	; () banked
 11713  0193B6  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11714  0193B8  0E00               	movlw	0
 11715  0193BA  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11716  0193BC  0E03               	movlw	3
 11717  0193BE  EC1B  F0B0         	call	_terminalTextAttributes
 11718                           
 11719                           ;ring_buffer_LUT.c: 261: printf("    Call 'Clear ADC Errors' to clear ADC error(s)\n\r")
      +                          ;
 11720  0193C2  0E8E               	movlw	low STR_246
 11721  0193C4  0102               	movlb	2	; () banked
 11722  0193C6  6FA9               	movwf	printf@f& (0+255),b
 11723  0193C8  0EF1               	movlw	high STR_246
 11724  0193CA  6FAA               	movwf	(printf@f+1)& (0+255),b
 11725  0193CC  EC32  F0DF         	call	_printf	;wreg free
 11726                           
 11727                           ;ring_buffer_LUT.c: 262: terminalTextAttributesReset();
 11728  0193D0  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11729                           
 11730                           ;ring_buffer_LUT.c: 264: }
 11731  0193D4  D011               	goto	l20157
 11732  0193D6                     l20155:
 11733                           
 11734                           ;ring_buffer_LUT.c: 266: else {;ring_buffer_LUT.c: 268: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11735  0193D6  0E00               	movlw	0
 11736  0193D8  0102               	movlb	2	; () banked
 11737  0193DA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11738  0193DC  0E00               	movlw	0
 11739  0193DE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11740  0193E0  0E02               	movlw	2
 11741  0193E2  EC1B  F0B0         	call	_terminalTextAttributes
 11742                           
 11743                           ;ring_buffer_LUT.c: 269: printf("    No ADC error(s) detected\n\r");
 11744  0193E6  0E9B               	movlw	low STR_247
 11745  0193E8  0102               	movlb	2	; () banked
 11746  0193EA  6FA9               	movwf	printf@f& (0+255),b
 11747  0193EC  0EF7               	movlw	high STR_247
 11748  0193EE  6FAA               	movwf	(printf@f+1)& (0+255),b
 11749  0193F0  EC32  F0DF         	call	_printf	;wreg free
 11750                           
 11751                           ;ring_buffer_LUT.c: 270: terminalTextAttributesReset();
 11752  0193F4  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11753  0193F8                     l20157:
 11754                           
 11755                           ;ring_buffer_LUT.c: 272: };ring_buffer_LUT.c: 274: if (getI2CError()) {
 11756  0193F8  EC48  F0E1         	call	_getI2CError	;wreg free
 11757  0193FC  0900               	iorlw	0
 11758  0193FE  B4D8               	btfsc	status,2,c
 11759  019400  D058               	goto	l20181
 11760                           
 11761                           ;ring_buffer_LUT.c: 276: terminalTextAttributes(RED, BLACK, NORMAL);
 11762  019402  0E00               	movlw	0
 11763  019404  0102               	movlb	2	; () banked
 11764  019406  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11765  019408  0E00               	movlw	0
 11766  01940A  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11767  01940C  0E01               	movlw	1
 11768  01940E  EC1B  F0B0         	call	_terminalTextAttributes
 11769                           
 11770                           ;ring_buffer_LUT.c: 277: printf("    The following I2C Errors were detected:\n\r");
 11771  019412  0E79               	movlw	low STR_248
 11772  019414  0102               	movlb	2	; () banked
 11773  019416  6FA9               	movwf	printf@f& (0+255),b
 11774  019418  0EF3               	movlw	high STR_248
 11775  01941A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11776  01941C  EC32  F0DF         	call	_printf	;wreg free
 11777                           
 11778                           ;ring_buffer_LUT.c: 279: if (error_handler.I2C_General_error_flag) {
 11779  019420  0100               	movlb	0	; () banked
 11780  019422  51BB               	movf	(_error_handler+2)& (0+255),w,b
 11781  019424  B4D8               	btfsc	status,2,c
 11782  019426  D007               	goto	l20165
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;ring_buffer_LUT.c: 280: printf("        I2C General Error\n\r");
 11786  019428  0E6B               	movlw	low STR_249
 11787  01942A  0102               	movlb	2	; () banked
 11788  01942C  6FA9               	movwf	printf@f& (0+255),b
 11789  01942E  0EF8               	movlw	high STR_249
 11790  019430  6FAA               	movwf	(printf@f+1)& (0+255),b
 11791  019432  EC32  F0DF         	call	_printf	;wreg free
 11792  019436                     l20165:
 11793                           
 11794                           ;ring_buffer_LUT.c: 281: };ring_buffer_LUT.c: 283: if (error_handler.I2C_Ambient_Temp_Se
      +                          nse_error_flag) {
 11795  019436  0100               	movlb	0	; () banked
 11796  019438  51BF               	movf	(_error_handler+6)& (0+255),w,b
 11797  01943A  B4D8               	btfsc	status,2,c
 11798  01943C  D007               	goto	l20169
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;ring_buffer_LUT.c: 284: printf("        I2C Ambient Temp Sensor Error\n\r");
 11802  01943E  0EAF               	movlw	low STR_250
 11803  019440  0102               	movlb	2	; () banked
 11804  019442  6FA9               	movwf	printf@f& (0+255),b
 11805  019444  0EF4               	movlw	high STR_250
 11806  019446  6FAA               	movwf	(printf@f+1)& (0+255),b
 11807  019448  EC32  F0DF         	call	_printf	;wreg free
 11808  01944C                     l20169:
 11809                           
 11810                           ;ring_buffer_LUT.c: 285: };ring_buffer_LUT.c: 287: if (error_handler.I2C_POS5_Temp_Sense
      +                          _error_flag) {
 11811  01944C  0100               	movlb	0	; () banked
 11812  01944E  51BE               	movf	(_error_handler+5)& (0+255),w,b
 11813  019450  B4D8               	btfsc	status,2,c
 11814  019452  D007               	goto	l20173
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;ring_buffer_LUT.c: 288: printf("        I2C POS5 Temp Sensor Error\n\r");
 11818  019454  0EBB               	movlw	low STR_251
 11819  019456  0102               	movlb	2	; () banked
 11820  019458  6FA9               	movwf	printf@f& (0+255),b
 11821  01945A  0EF5               	movlw	high STR_251
 11822  01945C  6FAA               	movwf	(printf@f+1)& (0+255),b
 11823  01945E  EC32  F0DF         	call	_printf	;wreg free
 11824  019462                     l20173:
 11825                           
 11826                           ;ring_buffer_LUT.c: 289: };ring_buffer_LUT.c: 291: if (error_handler.I2C_QI_Temp_Sense_e
      +                          rror_flag) {
 11827  019462  0100               	movlb	0	; () banked
 11828  019464  51BD               	movf	(_error_handler+4)& (0+255),w,b
 11829  019466  B4D8               	btfsc	status,2,c
 11830  019468  D007               	goto	l20177
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;ring_buffer_LUT.c: 292: printf("        I2C QI Temp Sensor Error\n\r");
 11834  01946A  0E91               	movlw	low STR_252
 11835  01946C  0102               	movlb	2	; () banked
 11836  01946E  6FA9               	movwf	printf@f& (0+255),b
 11837  019470  0EF6               	movlw	high STR_252
 11838  019472  6FAA               	movwf	(printf@f+1)& (0+255),b
 11839  019474  EC32  F0DF         	call	_printf	;wreg free
 11840  019478                     l20177:
 11841                           
 11842                           ;ring_buffer_LUT.c: 293: };ring_buffer_LUT.c: 295: if (error_handler.I2C_OLED_error_flag
      +                          ) {
 11843  019478  0100               	movlb	0	; () banked
 11844  01947A  51BC               	movf	(_error_handler+3)& (0+255),w,b
 11845  01947C  B4D8               	btfsc	status,2,c
 11846  01947E  D007               	goto	l2220
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;ring_buffer_LUT.c: 296: printf("        I2C OLED Display Error\n\r");
 11850  019480  0E3B               	movlw	low STR_253
 11851  019482  0102               	movlb	2	; () banked
 11852  019484  6FA9               	movwf	printf@f& (0+255),b
 11853  019486  0EF7               	movlw	high STR_253
 11854  019488  6FAA               	movwf	(printf@f+1)& (0+255),b
 11855  01948A  EC32  F0DF         	call	_printf	;wreg free
 11856  01948E                     l2220:
 11857                           
 11858                           ;ring_buffer_LUT.c: 297: };ring_buffer_LUT.c: 299: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11859  01948E  0E00               	movlw	0
 11860  019490  0102               	movlb	2	; () banked
 11861  019492  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11862  019494  0E00               	movlw	0
 11863  019496  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11864  019498  0E03               	movlw	3
 11865  01949A  EC1B  F0B0         	call	_terminalTextAttributes
 11866                           
 11867                           ;ring_buffer_LUT.c: 300: printf("    Call 'Clear I2C Errors' to clear communications err
      +                          or(s)\n\r");
 11868  01949E  0E3A               	movlw	low STR_254
 11869  0194A0  0102               	movlb	2	; () banked
 11870  0194A2  6FA9               	movwf	printf@f& (0+255),b
 11871  0194A4  0EED               	movlw	high STR_254
 11872  0194A6  6FAA               	movwf	(printf@f+1)& (0+255),b
 11873  0194A8  EC32  F0DF         	call	_printf	;wreg free
 11874                           
 11875                           ;ring_buffer_LUT.c: 301: terminalTextAttributesReset();
 11876  0194AC  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11877                           
 11878                           ;ring_buffer_LUT.c: 303: }
 11879  0194B0  D011               	goto	l20183
 11880  0194B2                     l20181:
 11881                           
 11882                           ;ring_buffer_LUT.c: 305: else {;ring_buffer_LUT.c: 307: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11883  0194B2  0E00               	movlw	0
 11884  0194B4  0102               	movlb	2	; () banked
 11885  0194B6  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11886  0194B8  0E00               	movlw	0
 11887  0194BA  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11888  0194BC  0E02               	movlw	2
 11889  0194BE  EC1B  F0B0         	call	_terminalTextAttributes
 11890                           
 11891                           ;ring_buffer_LUT.c: 308: printf("    No I2C error(s) detected\n\r");
 11892  0194C2  0E7C               	movlw	low STR_255
 11893  0194C4  0102               	movlb	2	; () banked
 11894  0194C6  6FA9               	movwf	printf@f& (0+255),b
 11895  0194C8  0EF7               	movlw	high STR_255
 11896  0194CA  6FAA               	movwf	(printf@f+1)& (0+255),b
 11897  0194CC  EC32  F0DF         	call	_printf	;wreg free
 11898                           
 11899                           ;ring_buffer_LUT.c: 309: terminalTextAttributesReset();
 11900  0194D0  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11901  0194D4                     l20183:
 11902                           
 11903                           ;ring_buffer_LUT.c: 311: };ring_buffer_LUT.c: 313: if (getUARTError()) {
 11904  0194D4  EC59  F0E4         	call	_getUARTError	;wreg free
 11905  0194D8  0900               	iorlw	0
 11906  0194DA  B4D8               	btfsc	status,2,c
 11907  0194DC  D021               	goto	l20187
 11908                           
 11909                           ;ring_buffer_LUT.c: 315: terminalTextAttributes(RED, BLACK, NORMAL);
 11910  0194DE  0E00               	movlw	0
 11911  0194E0  0102               	movlb	2	; () banked
 11912  0194E2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11913  0194E4  0E00               	movlw	0
 11914  0194E6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11915  0194E8  0E01               	movlw	1
 11916  0194EA  EC1B  F0B0         	call	_terminalTextAttributes
 11917                           
 11918                           ;ring_buffer_LUT.c: 316: printf("    USB UART Error Detected\n\r");
 11919  0194EE  0ED8               	movlw	low STR_256
 11920  0194F0  0102               	movlb	2	; () banked
 11921  0194F2  6FA9               	movwf	printf@f& (0+255),b
 11922  0194F4  0EF7               	movlw	high STR_256
 11923  0194F6  6FAA               	movwf	(printf@f+1)& (0+255),b
 11924  0194F8  EC32  F0DF         	call	_printf	;wreg free
 11925                           
 11926                           ;ring_buffer_LUT.c: 318: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11927  0194FC  0E00               	movlw	0
 11928  0194FE  0102               	movlb	2	; () banked
 11929  019500  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11930  019502  0E00               	movlw	0
 11931  019504  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11932  019506  0E03               	movlw	3
 11933  019508  EC1B  F0B0         	call	_terminalTextAttributes
 11934                           
 11935                           ;ring_buffer_LUT.c: 319: printf("    Call 'Clear UART Errors' to clear communications er
      +                          ror(s)\n\r");
 11936  01950C  0EFA               	movlw	low STR_257
 11937  01950E  0102               	movlb	2	; () banked
 11938  019510  6FA9               	movwf	printf@f& (0+255),b
 11939  019512  0EEC               	movlw	high STR_257
 11940  019514  6FAA               	movwf	(printf@f+1)& (0+255),b
 11941  019516  EC32  F0DF         	call	_printf	;wreg free
 11942                           
 11943                           ;ring_buffer_LUT.c: 320: terminalTextAttributesReset();
 11944  01951A  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11945                           
 11946                           ;ring_buffer_LUT.c: 322: }
 11947  01951E  0012               	return	
 11948  019520                     l20187:
 11949                           
 11950                           ;ring_buffer_LUT.c: 324: else {;ring_buffer_LUT.c: 326: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11951  019520  0E00               	movlw	0
 11952  019522  0102               	movlb	2	; () banked
 11953  019524  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11954  019526  0E00               	movlw	0
 11955  019528  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11956  01952A  0E02               	movlw	2
 11957  01952C  EC1B  F0B0         	call	_terminalTextAttributes
 11958                           
 11959                           ;ring_buffer_LUT.c: 327: printf("    No UART error(s) detected\n\r");
 11960  019530  0E5C               	movlw	low STR_258
 11961  019532  0102               	movlb	2	; () banked
 11962  019534  6FA9               	movwf	printf@f& (0+255),b
 11963  019536  0EF7               	movlw	high STR_258
 11964  019538  6FAA               	movwf	(printf@f+1)& (0+255),b
 11965  01953A  EC32  F0DF         	call	_printf	;wreg free
 11966                           
 11967                           ;ring_buffer_LUT.c: 328: terminalTextAttributesReset();
 11968  01953E  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11969  019542  0012               	return		;funcret
 11970  019544                     __end_of_printErrorHandlerStatus:
 11971                           	opt callstack 0
 11972                           
 11973 ;; *************** function _printCurrentMeasurements *****************
 11974 ;; Defined at:
 11975 ;;		line 335 in file "ring_buffer_LUT.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;		None
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      void 
 11982 ;; Registers used:
 11983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11993 ;;Total ram usage:        0 bytes
 11994 ;; Hardware stack levels used:    1
 11995 ;; Hardware stack levels required when called:   16
 11996 ;; This function calls:
 11997 ;;		___fldiv
 11998 ;;		_floatToEngineeringFormat
 11999 ;;		_getNXQChargeStateString
 12000 ;;		_getStringSecondsAsTime
 12001 ;;		_printf
 12002 ;;		_terminalTextAttributes
 12003 ;;		_terminalTextAttributesReset
 12004 ;; This function is called by:
 12005 ;;		_main
 12006 ;;		_ringBufferLUT
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text6
 12011  014FAC                     __ptext6:
 12012                           	opt callstack 0
 12013  014FAC                     _printCurrentMeasurements:
 12014                           	opt callstack 12
 12015                           
 12016                           ;ring_buffer_LUT.c: 337: if (nxq_charge_state == QI_Error) {
 12017                           
 12018                           ;incstack = 0
 12019  014FAC  0E03               	movlw	3
 12020  014FAE  0101               	movlb	1	; () banked
 12021  014FB0  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12022  014FB2  A4D8               	btfss	status,2,c
 12023  014FB4  D010               	goto	l19975
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;ring_buffer_LUT.c: 338: terminalTextAttributes(RED, BLACK, NORMAL);
 12027  014FB6  0E00               	movlw	0
 12028  014FB8  0102               	movlb	2	; () banked
 12029  014FBA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12030  014FBC  0E00               	movlw	0
 12031  014FBE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12032  014FC0  0E01               	movlw	1
 12033  014FC2  EC1B  F0B0         	call	_terminalTextAttributes
 12034                           
 12035                           ;ring_buffer_LUT.c: 339: printf("    QI Charger is in Error State\033[K\n\r\033[K\n\r");
 12036  014FC6  0E5B               	movlw	low STR_259
 12037  014FC8  0102               	movlb	2	; () banked
 12038  014FCA  6FA9               	movwf	printf@f& (0+255),b
 12039  014FCC  0EF4               	movlw	high STR_259
 12040  014FCE  6FAA               	movwf	(printf@f+1)& (0+255),b
 12041  014FD0  EC32  F0DF         	call	_printf	;wreg free
 12042                           
 12043                           ;ring_buffer_LUT.c: 340: }
 12044  014FD4  D029               	goto	l2228
 12045  014FD6                     l19975:
 12046                           
 12047                           ; BSR set to: 1
 12048                           ;ring_buffer_LUT.c: 341: else if (nxq_charge_state == QI_Fully_Charged) {
 12049  014FD6  0E02               	movlw	2
 12050  014FD8  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12051  014FDA  A4D8               	btfss	status,2,c
 12052  014FDC  D010               	goto	l19979
 12053                           
 12054                           ; BSR set to: 1
 12055                           ;ring_buffer_LUT.c: 342: terminalTextAttributes(GREEN, BLACK, NORMAL);
 12056  014FDE  0E00               	movlw	0
 12057  014FE0  0102               	movlb	2	; () banked
 12058  014FE2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12059  014FE4  0E00               	movlw	0
 12060  014FE6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12061  014FE8  0E02               	movlw	2
 12062  014FEA  EC1B  F0B0         	call	_terminalTextAttributes
 12063                           
 12064                           ;ring_buffer_LUT.c: 343: printf("    QI wireless power converter has fully charged phone
      +                          \033[K\n\r\033[K\n\r");
 12065  014FEE  0E35               	movlw	low STR_260
 12066  014FF0  0102               	movlb	2	; () banked
 12067  014FF2  6FA9               	movwf	printf@f& (0+255),b
 12068  014FF4  0EEC               	movlw	high STR_260
 12069  014FF6  6FAA               	movwf	(printf@f+1)& (0+255),b
 12070  014FF8  EC32  F0DF         	call	_printf	;wreg free
 12071                           
 12072                           ;ring_buffer_LUT.c: 344: }
 12073  014FFC  D015               	goto	l2228
 12074  014FFE                     l19979:
 12075                           
 12076                           ; BSR set to: 1
 12077                           ;ring_buffer_LUT.c: 345: else {;ring_buffer_LUT.c: 346: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 12078  014FFE  0E00               	movlw	0
 12079  015000  0102               	movlb	2	; () banked
 12080  015002  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12081  015004  0E00               	movlw	0
 12082  015006  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12083  015008  0E02               	movlw	2
 12084  01500A  EC1B  F0B0         	call	_terminalTextAttributes
 12085                           
 12086                           ;ring_buffer_LUT.c: 347: printf("    QI wireless power converter is currently %s\033[K\n
      +                          \r\033[K\n\r", getNXQChargeStateString());
 12087  01500E  0E9B               	movlw	low STR_261
 12088  015010  0102               	movlb	2	; () banked
 12089  015012  6FA9               	movwf	printf@f& (0+255),b
 12090  015014  0EEF               	movlw	high STR_261
 12091  015016  6FAA               	movwf	(printf@f+1)& (0+255),b
 12092  015018  ECC6  F0DA         	call	_getNXQChargeStateString	;wreg free
 12093  01501C  C200  F2AB         	movff	?_getNXQChargeStateString,?_printf+2
 12094  015020  C201  F2AC         	movff	?_getNXQChargeStateString+1,?_printf+3
 12095  015024  EC32  F0DF         	call	_printf	;wreg free
 12096  015028                     l2228:
 12097                           
 12098                           ;ring_buffer_LUT.c: 348: };ring_buffer_LUT.c: 350: terminalTextAttributes(GREEN, BLACK, 
      +                          NORMAL);
 12099  015028  0E00               	movlw	0
 12100  01502A  0102               	movlb	2	; () banked
 12101  01502C  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12102  01502E  0E00               	movlw	0
 12103  015030  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12104  015032  0E02               	movlw	2
 12105  015034  EC1B  F0B0         	call	_terminalTextAttributes
 12106                           
 12107                           ;ring_buffer_LUT.c: 351: if (QI_charge_time > 0) printf("    System has been charging a 
      +                          phone for %s\033[K\n\r\033[K\n\r", getStringSecondsAsTime(QI_charge_time));
 12108  015038  0102               	movlb	2	; () banked
 12109  01503A  51D2               	movf	_QI_charge_time& (0+255),w,b
 12110  01503C  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 12111  01503E  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 12112  015040  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 12113  015042  B4D8               	btfsc	status,2,c
 12114  015044  D015               	goto	l19985
 12115                           
 12116                           ; BSR set to: 2
 12117  015046  0EB7               	movlw	low STR_262
 12118  015048  6FA9               	movwf	printf@f& (0+255),b
 12119  01504A  0EF0               	movlw	high STR_262
 12120  01504C  6FAA               	movwf	(printf@f+1)& (0+255),b
 12121  01504E  C2D2  F29F         	movff	_QI_charge_time,getStringSecondsAsTime@input_seconds
 12122  015052  C2D3  F2A0         	movff	_QI_charge_time+1,getStringSecondsAsTime@input_seconds+1
 12123  015056  C2D4  F2A1         	movff	_QI_charge_time+2,getStringSecondsAsTime@input_seconds+2
 12124  01505A  C2D5  F2A2         	movff	_QI_charge_time+3,getStringSecondsAsTime@input_seconds+3
 12125  01505E  EC48  F0AE         	call	_getStringSecondsAsTime	;wreg free
 12126  015062  C29F  F2AB         	movff	?_getStringSecondsAsTime,?_printf+2
 12127  015066  C2A0  F2AC         	movff	?_getStringSecondsAsTime+1,?_printf+3
 12128  01506A  EC32  F0DF         	call	_printf	;wreg free
 12129  01506E  D006               	goto	l2232
 12130  015070                     l19985:
 12131                           
 12132                           ; BSR set to: 2
 12133                           ;ring_buffer_LUT.c: 352: else printf("\033[K\n\r\n\r");
 12134  015070  0E32               	movlw	low STR_263
 12135  015072  6FA9               	movwf	printf@f& (0+255),b
 12136  015074  0EFF               	movlw	high STR_263
 12137  015076  6FAA               	movwf	(printf@f+1)& (0+255),b
 12138  015078  EC32  F0DF         	call	_printf	;wreg free
 12139  01507C                     l2232:
 12140                           
 12141                           ;ring_buffer_LUT.c: 354: terminalTextAttributes(CYAN, BLACK, BOLD);
 12142  01507C  0E00               	movlw	0
 12143  01507E  0102               	movlb	2	; () banked
 12144  015080  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12145  015082  0E01               	movlw	1
 12146  015084  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12147  015086  0E06               	movlw	6
 12148  015088  EC1B  F0B0         	call	_terminalTextAttributes
 12149                           
 12150                           ;ring_buffer_LUT.c: 355: printf("    System Voltages:\n\r");
 12151  01508C  0E9E               	movlw	low STR_264
 12152  01508E  0102               	movlb	2	; () banked
 12153  015090  6FA9               	movwf	printf@f& (0+255),b
 12154  015092  0EF9               	movlw	high STR_264
 12155  015094  6FAA               	movwf	(printf@f+1)& (0+255),b
 12156  015096  EC32  F0DF         	call	_printf	;wreg free
 12157                           
 12158                           ;ring_buffer_LUT.c: 356: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12159  01509A  0E00               	movlw	0
 12160  01509C  0102               	movlb	2	; () banked
 12161  01509E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12162  0150A0  0E00               	movlw	0
 12163  0150A2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12164  0150A4  0E06               	movlw	6
 12165  0150A6  EC1B  F0B0         	call	_terminalTextAttributes
 12166                           
 12167                           ;ring_buffer_LUT.c: 357: printf("        +12V rail measured as %+.3f Volts\033[K\n\r", a
      +                          dc_results.pos12_adc_result);
 12168  0150AA  0E1B               	movlw	low STR_265
 12169  0150AC  0102               	movlb	2	; () banked
 12170  0150AE  6FA9               	movwf	printf@f& (0+255),b
 12171  0150B0  0EF3               	movlw	high STR_265
 12172  0150B2  6FAA               	movwf	(printf@f+1)& (0+255),b
 12173  0150B4  C0E9  F2AB         	movff	_adc_results+12,?_printf+2
 12174  0150B8  C0EA  F2AC         	movff	_adc_results+13,?_printf+3
 12175  0150BC  C0EB  F2AD         	movff	_adc_results+14,?_printf+4
 12176  0150C0  C0EC  F2AE         	movff	_adc_results+15,?_printf+5
 12177  0150C4  EC32  F0DF         	call	_printf	;wreg free
 12178                           
 12179                           ;ring_buffer_LUT.c: 358: printf("        +5V rail measured as %+.3f Volts\033[K\n\r\033[
      +                          K\n\r", adc_results.pos5_adc_result);
 12180  0150C8  0EF6               	movlw	low STR_266
 12181  0150CA  0102               	movlb	2	; () banked
 12182  0150CC  6FA9               	movwf	printf@f& (0+255),b
 12183  0150CE  0EF1               	movlw	high STR_266
 12184  0150D0  6FAA               	movwf	(printf@f+1)& (0+255),b
 12185  0150D2  C0E5  F2AB         	movff	_adc_results+8,?_printf+2
 12186  0150D6  C0E6  F2AC         	movff	_adc_results+9,?_printf+3
 12187  0150DA  C0E7  F2AD         	movff	_adc_results+10,?_printf+4
 12188  0150DE  C0E8  F2AE         	movff	_adc_results+11,?_printf+5
 12189  0150E2  EC32  F0DF         	call	_printf	;wreg free
 12190                           
 12191                           ;ring_buffer_LUT.c: 360: terminalTextAttributes(CYAN, BLACK, BOLD);
 12192  0150E6  0E00               	movlw	0
 12193  0150E8  0102               	movlb	2	; () banked
 12194  0150EA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12195  0150EC  0E01               	movlw	1
 12196  0150EE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12197  0150F0  0E06               	movlw	6
 12198  0150F2  EC1B  F0B0         	call	_terminalTextAttributes
 12199                           
 12200                           ;ring_buffer_LUT.c: 361: printf("    System Currents:\033[K\n\r");
 12201  0150F6  0EF4               	movlw	low STR_267
 12202  0150F8  0102               	movlb	2	; () banked
 12203  0150FA  6FA9               	movwf	printf@f& (0+255),b
 12204  0150FC  0EF8               	movlw	high STR_267
 12205  0150FE  6FAA               	movwf	(printf@f+1)& (0+255),b
 12206  015100  EC32  F0DF         	call	_printf	;wreg free
 12207                           
 12208                           ;ring_buffer_LUT.c: 362: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12209  015104  0E00               	movlw	0
 12210  015106  0102               	movlb	2	; () banked
 12211  015108  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12212  01510A  0E00               	movlw	0
 12213  01510C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12214  01510E  0E06               	movlw	6
 12215  015110  EC1B  F0B0         	call	_terminalTextAttributes
 12216                           
 12217                           ;ring_buffer_LUT.c: 363: printf("        +12V input current measured as %+.3f Amps\033[K
      +                          \n\r", adc_results.pos12_isns_adc_result);
 12218  015114  0E80               	movlw	low STR_268
 12219  015116  0102               	movlb	2	; () banked
 12220  015118  6FA9               	movwf	printf@f& (0+255),b
 12221  01511A  0EF0               	movlw	high STR_268
 12222  01511C  6FAA               	movwf	(printf@f+1)& (0+255),b
 12223  01511E  C0ED  F2AB         	movff	_adc_results+16,?_printf+2
 12224  015122  C0EE  F2AC         	movff	_adc_results+17,?_printf+3
 12225  015126  C0EF  F2AD         	movff	_adc_results+18,?_printf+4
 12226  01512A  C0F0  F2AE         	movff	_adc_results+19,?_printf+5
 12227  01512E  EC32  F0DF         	call	_printf	;wreg free
 12228                           
 12229                           ;ring_buffer_LUT.c: 364: printf("        QI converter current measured as %+.3f Amps\033
      +                          [K\n\r\033[K\n\r", adc_results.qi_isns_adc_result);
 12230  015132  0E79               	movlw	low STR_269
 12231  015134  0102               	movlb	2	; () banked
 12232  015136  6FA9               	movwf	printf@f& (0+255),b
 12233  015138  0EED               	movlw	high STR_269
 12234  01513A  6FAA               	movwf	(printf@f+1)& (0+255),b
 12235  01513C  C0F1  F2AB         	movff	_adc_results+20,?_printf+2
 12236  015140  C0F2  F2AC         	movff	_adc_results+21,?_printf+3
 12237  015144  C0F3  F2AD         	movff	_adc_results+22,?_printf+4
 12238  015148  C0F4  F2AE         	movff	_adc_results+23,?_printf+5
 12239  01514C  EC32  F0DF         	call	_printf	;wreg free
 12240                           
 12241                           ;ring_buffer_LUT.c: 366: terminalTextAttributes(CYAN, BLACK, BOLD);
 12242  015150  0E00               	movlw	0
 12243  015152  0102               	movlb	2	; () banked
 12244  015154  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12245  015156  0E01               	movlw	1
 12246  015158  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12247  01515A  0E06               	movlw	6
 12248  01515C  EC1B  F0B0         	call	_terminalTextAttributes
 12249                           
 12250                           ;ring_buffer_LUT.c: 367: printf("    System Power:\033[K\n\r");
 12251  015160  0EB5               	movlw	low STR_270
 12252  015162  0102               	movlb	2	; () banked
 12253  015164  6FA9               	movwf	printf@f& (0+255),b
 12254  015166  0EF9               	movlw	high STR_270
 12255  015168  6FAA               	movwf	(printf@f+1)& (0+255),b
 12256  01516A  EC32  F0DF         	call	_printf	;wreg free
 12257                           
 12258                           ;ring_buffer_LUT.c: 368: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12259  01516E  0E00               	movlw	0
 12260  015170  0102               	movlb	2	; () banked
 12261  015172  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12262  015174  0E00               	movlw	0
 12263  015176  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12264  015178  0E06               	movlw	6
 12265  01517A  EC1B  F0B0         	call	_terminalTextAttributes
 12266                           
 12267                           ;ring_buffer_LUT.c: 369: printf("        Electrical Input Power calculated as %+.3f Watt
      +                          s\033[K\n\r", adc_calculations.input_power);
 12268  01517E  0EB7               	movlw	low STR_271
 12269  015180  0102               	movlb	2	; () banked
 12270  015182  6FA9               	movwf	printf@f& (0+255),b
 12271  015184  0EED               	movlw	high STR_271
 12272  015186  6FAA               	movwf	(printf@f+1)& (0+255),b
 12273  015188  C2BE  F2AB         	movff	_adc_calculations,?_printf+2
 12274  01518C  C2BF  F2AC         	movff	_adc_calculations+1,?_printf+3
 12275  015190  C2C0  F2AD         	movff	_adc_calculations+2,?_printf+4
 12276  015194  C2C1  F2AE         	movff	_adc_calculations+3,?_printf+5
 12277  015198  EC32  F0DF         	call	_printf	;wreg free
 12278                           
 12279                           ;ring_buffer_LUT.c: 370: printf("        Wireless Output Power calculated as %+.3f Watts
      +                          \033[K\n\r\033[K\n\r", adc_calculations.output_power);
 12280  01519C  0E77               	movlw	low STR_272
 12281  01519E  0102               	movlb	2	; () banked
 12282  0151A0  6FA9               	movwf	printf@f& (0+255),b
 12283  0151A2  0EEC               	movlw	high STR_272
 12284  0151A4  6FAA               	movwf	(printf@f+1)& (0+255),b
 12285  0151A6  C2C2  F2AB         	movff	_adc_calculations+4,?_printf+2
 12286  0151AA  C2C3  F2AC         	movff	_adc_calculations+5,?_printf+3
 12287  0151AE  C2C4  F2AD         	movff	_adc_calculations+6,?_printf+4
 12288  0151B2  C2C5  F2AE         	movff	_adc_calculations+7,?_printf+5
 12289  0151B6  EC32  F0DF         	call	_printf	;wreg free
 12290                           
 12291                           ;ring_buffer_LUT.c: 372: terminalTextAttributes(CYAN, BLACK, BOLD);
 12292  0151BA  0E00               	movlw	0
 12293  0151BC  0102               	movlb	2	; () banked
 12294  0151BE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12295  0151C0  0E01               	movlw	1
 12296  0151C2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12297  0151C4  0E06               	movlw	6
 12298  0151C6  EC1B  F0B0         	call	_terminalTextAttributes
 12299                           
 12300                           ;ring_buffer_LUT.c: 373: printf("    System Efficiency calculated as %.3f%%\033[K\n\r\03
      +                          3[K\n\r", adc_calculations.efficiency);
 12301  0151CA  0E59               	movlw	low STR_273
 12302  0151CC  0102               	movlb	2	; () banked
 12303  0151CE  6FA9               	movwf	printf@f& (0+255),b
 12304  0151D0  0EF1               	movlw	high STR_273
 12305  0151D2  6FAA               	movwf	(printf@f+1)& (0+255),b
 12306  0151D4  C2C6  F2AB         	movff	_adc_calculations+8,?_printf+2
 12307  0151D8  C2C7  F2AC         	movff	_adc_calculations+9,?_printf+3
 12308  0151DC  C2C8  F2AD         	movff	_adc_calculations+10,?_printf+4
 12309  0151E0  C2C9  F2AE         	movff	_adc_calculations+11,?_printf+5
 12310  0151E4  EC32  F0DF         	call	_printf	;wreg free
 12311                           
 12312                           ;ring_buffer_LUT.c: 375: if (QI_charge_time > 0) printf("    Energy consumed by the load
      +                           while charging: %sJoules\033[K\n\r\033[K\n\r", floatToEngineeringFormat(adc_calculation
      +                          s.output_energy));
 12313  0151E8  0102               	movlb	2	; () banked
 12314  0151EA  51D2               	movf	_QI_charge_time& (0+255),w,b
 12315  0151EC  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 12316  0151EE  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 12317  0151F0  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 12318  0151F2  B4D8               	btfsc	status,2,c
 12319  0151F4  D015               	goto	l19991
 12320                           
 12321                           ; BSR set to: 2
 12322  0151F6  0EAF               	movlw	low STR_274
 12323  0151F8  6FA9               	movwf	printf@f& (0+255),b
 12324  0151FA  0EEB               	movlw	high STR_274
 12325  0151FC  6FAA               	movwf	(printf@f+1)& (0+255),b
 12326  0151FE  C2CE  F29F         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 12327  015202  C2CF  F2A0         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 12328  015206  C2D0  F2A1         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 12329  01520A  C2D1  F2A2         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 12330  01520E  ECCE  F0B1         	call	_floatToEngineeringFormat	;wreg free
 12331  015212  C29F  F2AB         	movff	?_floatToEngineeringFormat,?_printf+2
 12332  015216  C2A0  F2AC         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12333  01521A  EC32  F0DF         	call	_printf	;wreg free
 12334  01521E  D006               	goto	l19993
 12335  015220                     l19991:
 12336                           
 12337                           ; BSR set to: 2
 12338                           ;ring_buffer_LUT.c: 376: else printf("\033[K\n\r\n\r");
 12339  015220  0E32               	movlw	low STR_263
 12340  015222  6FA9               	movwf	printf@f& (0+255),b
 12341  015224  0EFF               	movlw	high STR_263
 12342  015226  6FAA               	movwf	(printf@f+1)& (0+255),b
 12343  015228  EC32  F0DF         	call	_printf	;wreg free
 12344  01522C                     l19993:
 12345                           
 12346                           ;ring_buffer_LUT.c: 377: if (QI_charge_time > 0) printf("    Charge consumed by the load
      +                           while charging: %sCoulombs\033[K\n\r\033[K\n\r", floatToEngineeringFormat(adc_calculati
      +                          ons.output_charge));
 12347  01522C  0102               	movlb	2	; () banked
 12348  01522E  51D2               	movf	_QI_charge_time& (0+255),w,b
 12349  015230  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 12350  015232  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 12351  015234  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 12352  015236  B4D8               	btfsc	status,2,c
 12353  015238  D015               	goto	l19997
 12354                           
 12355                           ; BSR set to: 2
 12356  01523A  0E6A               	movlw	low STR_276
 12357  01523C  6FA9               	movwf	printf@f& (0+255),b
 12358  01523E  0EEB               	movlw	high STR_276
 12359  015240  6FAA               	movwf	(printf@f+1)& (0+255),b
 12360  015242  C2CA  F29F         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 12361  015246  C2CB  F2A0         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 12362  01524A  C2CC  F2A1         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 12363  01524E  C2CD  F2A2         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 12364  015252  ECCE  F0B1         	call	_floatToEngineeringFormat	;wreg free
 12365  015256  C29F  F2AB         	movff	?_floatToEngineeringFormat,?_printf+2
 12366  01525A  C2A0  F2AC         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12367  01525E  EC32  F0DF         	call	_printf	;wreg free
 12368  015262  D006               	goto	l2236
 12369  015264                     l19997:
 12370                           
 12371                           ; BSR set to: 2
 12372                           ;ring_buffer_LUT.c: 378: else printf("\033[K\n\r\n\r");
 12373  015264  0E32               	movlw	low STR_263
 12374  015266  6FA9               	movwf	printf@f& (0+255),b
 12375  015268  0EFF               	movlw	high STR_263
 12376  01526A  6FAA               	movwf	(printf@f+1)& (0+255),b
 12377  01526C  EC32  F0DF         	call	_printf	;wreg free
 12378  015270                     l2236:
 12379                           
 12380                           ;ring_buffer_LUT.c: 380: printf("    System Switching Frequencies:\033[K\n\r");
 12381  015270  0ED7               	movlw	low STR_278
 12382  015272  0102               	movlb	2	; () banked
 12383  015274  6FA9               	movwf	printf@f& (0+255),b
 12384  015276  0EF4               	movlw	high STR_278
 12385  015278  6FAA               	movwf	(printf@f+1)& (0+255),b
 12386  01527A  EC32  F0DF         	call	_printf	;wreg free
 12387                           
 12388                           ;ring_buffer_LUT.c: 381: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12389  01527E  0E00               	movlw	0
 12390  015280  0102               	movlb	2	; () banked
 12391  015282  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12392  015284  0E00               	movlw	0
 12393  015286  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12394  015288  0E06               	movlw	6
 12395  01528A  EC1B  F0B0         	call	_terminalTextAttributes
 12396                           
 12397                           ;ring_buffer_LUT.c: 382: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        POS5 Converter is in Burst Mode\033[K\n\r");
 12398  01528E  0101               	movlb	1	; () banked
 12399  015290  5195               	movf	_nxq_charge_state& (0+255),w,b
 12400  015292  B4D8               	btfsc	status,2,c
 12401  015294  D004               	goto	u25420
 12402                           
 12403                           ; BSR set to: 1
 12404  015296  0E03               	movlw	3
 12405  015298  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12406  01529A  A4D8               	btfss	status,2,c
 12407  01529C  D008               	goto	l20005
 12408  01529E                     u25420:
 12409                           
 12410                           ; BSR set to: 1
 12411  01529E  0E02               	movlw	low STR_279
 12412  0152A0  0102               	movlb	2	; () banked
 12413  0152A2  6FA9               	movwf	printf@f& (0+255),b
 12414  0152A4  0EF4               	movlw	high STR_279
 12415  0152A6  6FAA               	movwf	(printf@f+1)& (0+255),b
 12416  0152A8  EC32  F0DF         	call	_printf	;wreg free
 12417  0152AC  D00F               	goto	l20007
 12418  0152AE                     l20005:
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;ring_buffer_LUT.c: 383: else printf("        Current +5V Switching Frequency measured a
      +                          s %+.1f MHz\033[K\n\r", 2.5);
 12422  0152AE  0EF2               	movlw	low STR_280
 12423  0152B0  0102               	movlb	2	; () banked
 12424  0152B2  6FA9               	movwf	printf@f& (0+255),b
 12425  0152B4  0EEB               	movlw	high STR_280
 12426  0152B6  6FAA               	movwf	(printf@f+1)& (0+255),b
 12427  0152B8  0E00               	movlw	0
 12428  0152BA  6FAB               	movwf	(?_printf+2)& (0+255),b
 12429  0152BC  0E00               	movlw	0
 12430  0152BE  6FAC               	movwf	(?_printf+3)& (0+255),b
 12431  0152C0  0E20               	movlw	32
 12432  0152C2  6FAD               	movwf	(?_printf+4)& (0+255),b
 12433  0152C4  0E40               	movlw	64
 12434  0152C6  6FAE               	movwf	(?_printf+5)& (0+255),b
 12435  0152C8  EC32  F0DF         	call	_printf	;wreg free
 12436  0152CC                     l20007:
 12437                           
 12438                           ;ring_buffer_LUT.c: 384: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        QI Converter is in Burst Mode\033[K\n\r\033[K\n\r");
 12439  0152CC  0101               	movlb	1	; () banked
 12440  0152CE  5195               	movf	_nxq_charge_state& (0+255),w,b
 12441  0152D0  B4D8               	btfsc	status,2,c
 12442  0152D2  D004               	goto	u25440
 12443                           
 12444                           ; BSR set to: 1
 12445  0152D4  0E03               	movlw	3
 12446  0152D6  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12447  0152D8  A4D8               	btfss	status,2,c
 12448  0152DA  D008               	goto	l20013
 12449  0152DC                     u25440:
 12450                           
 12451                           ; BSR set to: 1
 12452  0152DC  0E8D               	movlw	low STR_281
 12453  0152DE  0102               	movlb	2	; () banked
 12454  0152E0  6FA9               	movwf	printf@f& (0+255),b
 12455  0152E2  0EF2               	movlw	high STR_281
 12456  0152E4  6FAA               	movwf	(printf@f+1)& (0+255),b
 12457  0152E6  EC32  F0DF         	call	_printf	;wreg free
 12458  0152EA  D021               	goto	l2244
 12459  0152EC                     l20013:
 12460                           
 12461                           ; BSR set to: 1
 12462                           ;ring_buffer_LUT.c: 385: else printf("        Current QI Switching Frequency measured as
      +                           %+.3f kHz\033[K\n\r\033[K\n\r", freq_meas_results.QI_Freq_Meas / 1000.0);
 12463  0152EC  0E23               	movlw	low STR_282
 12464  0152EE  0102               	movlb	2	; () banked
 12465  0152F0  6FA9               	movwf	printf@f& (0+255),b
 12466  0152F2  0EEB               	movlw	high STR_282
 12467  0152F4  6FAA               	movwf	(printf@f+1)& (0+255),b
 12468  0152F6  C168  F200         	movff	_freq_meas_results,___fldiv@b
 12469  0152FA  C169  F201         	movff	_freq_meas_results+1,___fldiv@b+1
 12470  0152FE  C16A  F202         	movff	_freq_meas_results+2,___fldiv@b+2
 12471  015302  C16B  F203         	movff	_freq_meas_results+3,___fldiv@b+3
 12472  015306  0E00               	movlw	0
 12473  015308  6F04               	movwf	___fldiv@a& (0+255),b
 12474  01530A  0E00               	movlw	0
 12475  01530C  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 12476  01530E  0E7A               	movlw	122
 12477  015310  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 12478  015312  0E44               	movlw	68
 12479  015314  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 12480  015316  EC2B  F0C1         	call	___fldiv	;wreg free
 12481  01531A  C200  F2AB         	movff	?___fldiv,?_printf+2
 12482  01531E  C201  F2AC         	movff	?___fldiv+1,?_printf+3
 12483  015322  C202  F2AD         	movff	?___fldiv+2,?_printf+4
 12484  015326  C203  F2AE         	movff	?___fldiv+3,?_printf+5
 12485  01532A  EC32  F0DF         	call	_printf	;wreg free
 12486  01532E                     l2244:
 12487                           
 12488                           ;ring_buffer_LUT.c: 387: terminalTextAttributes(CYAN, BLACK, BOLD);
 12489  01532E  0E00               	movlw	0
 12490  015330  0102               	movlb	2	; () banked
 12491  015332  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12492  015334  0E01               	movlw	1
 12493  015336  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12494  015338  0E06               	movlw	6
 12495  01533A  EC1B  F0B0         	call	_terminalTextAttributes
 12496                           
 12497                           ;ring_buffer_LUT.c: 388: printf("    System Temperatures:\033[K\n\r");
 12498  01533E  0EBA               	movlw	low STR_283
 12499  015340  0102               	movlb	2	; () banked
 12500  015342  6FA9               	movwf	printf@f& (0+255),b
 12501  015344  0EF7               	movlw	high STR_283
 12502  015346  6FAA               	movwf	(printf@f+1)& (0+255),b
 12503  015348  EC32  F0DF         	call	_printf	;wreg free
 12504                           
 12505                           ;ring_buffer_LUT.c: 389: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12506  01534C  0E00               	movlw	0
 12507  01534E  0102               	movlb	2	; () banked
 12508  015350  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12509  015352  0E00               	movlw	0
 12510  015354  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12511  015356  0E06               	movlw	6
 12512  015358  EC1B  F0B0         	call	_terminalTextAttributes
 12513                           
 12514                           ;ring_buffer_LUT.c: 390: printf("        QI Converter Temperature measured as %+.3f C\03
      +                          3[K\n\r", LM73_temp_results.QI_temp_result);
 12515  01535C  0ED5               	movlw	low STR_284
 12516  01535E  0102               	movlb	2	; () banked
 12517  015360  6FA9               	movwf	printf@f& (0+255),b
 12518  015362  0EEF               	movlw	high STR_284
 12519  015364  6FAA               	movwf	(printf@f+1)& (0+255),b
 12520  015366  C2DB  F2AB         	movff	_LM73_temp_results,?_printf+2
 12521  01536A  C2DC  F2AC         	movff	_LM73_temp_results+1,?_printf+3
 12522  01536E  C2DD  F2AD         	movff	_LM73_temp_results+2,?_printf+4
 12523  015372  C2DE  F2AE         	movff	_LM73_temp_results+3,?_printf+5
 12524  015376  EC32  F0DF         	call	_printf	;wreg free
 12525                           
 12526                           ;ring_buffer_LUT.c: 391: printf("        +5V Converter Temperature measured as %+.3f C\0
      +                          33[K\n\r", LM73_temp_results.POS5_temp_result);
 12527  01537A  0E26               	movlw	low STR_285
 12528  01537C  0102               	movlb	2	; () banked
 12529  01537E  6FA9               	movwf	printf@f& (0+255),b
 12530  015380  0EEF               	movlw	high STR_285
 12531  015382  6FAA               	movwf	(printf@f+1)& (0+255),b
 12532  015384  C2DF  F2AB         	movff	_LM73_temp_results+4,?_printf+2
 12533  015388  C2E0  F2AC         	movff	_LM73_temp_results+5,?_printf+3
 12534  01538C  C2E1  F2AD         	movff	_LM73_temp_results+6,?_printf+4
 12535  015390  C2E2  F2AE         	movff	_LM73_temp_results+7,?_printf+5
 12536  015394  EC32  F0DF         	call	_printf	;wreg free
 12537                           
 12538                           ;ring_buffer_LUT.c: 392: printf("        Ambient Temperature measured as %+.3f C\033[K\n
      +                          \r\033[K\n\r", LM73_temp_results.Ambient_temp_result);
 12539  015398  0E61               	movlw	low STR_286
 12540  01539A  0102               	movlb	2	; () banked
 12541  01539C  6FA9               	movwf	printf@f& (0+255),b
 12542  01539E  0EEF               	movlw	high STR_286
 12543  0153A0  6FAA               	movwf	(printf@f+1)& (0+255),b
 12544  0153A2  C2E3  F2AB         	movff	_LM73_temp_results+8,?_printf+2
 12545  0153A6  C2E4  F2AC         	movff	_LM73_temp_results+9,?_printf+3
 12546  0153AA  C2E5  F2AD         	movff	_LM73_temp_results+10,?_printf+4
 12547  0153AE  C2E6  F2AE         	movff	_LM73_temp_results+11,?_printf+5
 12548  0153B2  EC32  F0DF         	call	_printf	;wreg free
 12549                           
 12550                           ;ring_buffer_LUT.c: 394: terminalTextAttributes(CYAN, BLACK, BOLD);
 12551  0153B6  0E00               	movlw	0
 12552  0153B8  0102               	movlb	2	; () banked
 12553  0153BA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12554  0153BC  0E01               	movlw	1
 12555  0153BE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12556  0153C0  0E06               	movlw	6
 12557  0153C2  EC1B  F0B0         	call	_terminalTextAttributes
 12558                           
 12559                           ;ring_buffer_LUT.c: 395: printf("    Microcontroller Parameters:\033[K\n\r");
 12560  0153C6  0E71               	movlw	low STR_287
 12561  0153C8  0102               	movlb	2	; () banked
 12562  0153CA  6FA9               	movwf	printf@f& (0+255),b
 12563  0153CC  0EF5               	movlw	high STR_287
 12564  0153CE  6FAA               	movwf	(printf@f+1)& (0+255),b
 12565  0153D0  EC32  F0DF         	call	_printf	;wreg free
 12566                           
 12567                           ;ring_buffer_LUT.c: 396: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12568  0153D4  0E00               	movlw	0
 12569  0153D6  0102               	movlb	2	; () banked
 12570  0153D8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12571  0153DA  0E00               	movlw	0
 12572  0153DC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12573  0153DE  0E06               	movlw	6
 12574  0153E0  EC1B  F0B0         	call	_terminalTextAttributes
 12575                           
 12576                           ;ring_buffer_LUT.c: 397: printf("        Microcontroller Die Temperature measured as %+.
      +                          3f C\033[K\n\r", adc_results.die_temp_adc_result);
 12577  0153E4  0EB9               	movlw	low STR_288
 12578  0153E6  0102               	movlb	2	; () banked
 12579  0153E8  6FA9               	movwf	printf@f& (0+255),b
 12580  0153EA  0EEC               	movlw	high STR_288
 12581  0153EC  6FAA               	movwf	(printf@f+1)& (0+255),b
 12582  0153EE  C0F5  F2AB         	movff	_adc_results+24,?_printf+2
 12583  0153F2  C0F6  F2AC         	movff	_adc_results+25,?_printf+3
 12584  0153F6  C0F7  F2AD         	movff	_adc_results+26,?_printf+4
 12585  0153FA  C0F8  F2AE         	movff	_adc_results+27,?_printf+5
 12586  0153FE  EC32  F0DF         	call	_printf	;wreg free
 12587                           
 12588                           ;ring_buffer_LUT.c: 398: printf("        Fixed Voltage Reference Buffer 1 measured as %+
      +                          .3f Volts, calibrated for +4.096 Volts\033[K\n\r", adc_results.fvr_adc_result);
 12589  015402  0E68               	movlw	low STR_289
 12590  015404  0102               	movlb	2	; () banked
 12591  015406  6FA9               	movwf	printf@f& (0+255),b
 12592  015408  0EEA               	movlw	high STR_289
 12593  01540A  6FAA               	movwf	(printf@f+1)& (0+255),b
 12594  01540C  C0E1  F2AB         	movff	_adc_results+4,?_printf+2
 12595  015410  C0E2  F2AC         	movff	_adc_results+5,?_printf+3
 12596  015414  C0E3  F2AD         	movff	_adc_results+6,?_printf+4
 12597  015418  C0E4  F2AE         	movff	_adc_results+7,?_printf+5
 12598  01541C  EC32  F0DF         	call	_printf	;wreg free
 12599                           
 12600                           ;ring_buffer_LUT.c: 399: printf("        AVSS measured as %+.3f Volts\033[K\n\r\033[K\n\
      +                          r", adc_results.avss_adc_result);
 12601  015420  0EEC               	movlw	low STR_290
 12602  015422  0102               	movlb	2	; () banked
 12603  015424  6FA9               	movwf	printf@f& (0+255),b
 12604  015426  0EF2               	movlw	high STR_290
 12605  015428  6FAA               	movwf	(printf@f+1)& (0+255),b
 12606  01542A  C0DD  F2AB         	movff	_adc_results,?_printf+2
 12607  01542E  C0DE  F2AC         	movff	_adc_results+1,?_printf+3
 12608  015432  C0DF  F2AD         	movff	_adc_results+2,?_printf+4
 12609  015436  C0E0  F2AE         	movff	_adc_results+3,?_printf+5
 12610  01543A  EC32  F0DF         	call	_printf	;wreg free
 12611                           
 12612                           ;ring_buffer_LUT.c: 401: terminalTextAttributesReset();
 12613  01543E  EC95  F0E3         	call	_terminalTextAttributesReset	;wreg free
 12614  015442  0012               	return		;funcret
 12615  015444                     __end_of_printCurrentMeasurements:
 12616                           	opt callstack 0
 12617                           
 12618 ;; *************** function _terminalTextAttributesReset *****************
 12619 ;; Defined at:
 12620 ;;		line 164 in file "terminal_control.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;		None
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;		None
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  1    wreg      void 
 12627 ;; Registers used:
 12628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;Total ram usage:        0 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:   15
 12641 ;; This function calls:
 12642 ;;		_printf
 12643 ;; This function is called by:
 12644 ;;		_main
 12645 ;;		_ringBufferLUT
 12646 ;;		_printErrorHandlerStatus
 12647 ;;		_printCurrentMeasurements
 12648 ;;		_terminalPrintTestMessage
 12649 ;; This function uses a non-reentrant model
 12650 ;;
 12651                           
 12652                           	psect	text7
 12653  01C72A                     __ptext7:
 12654                           	opt callstack 0
 12655  01C72A                     _terminalTextAttributesReset:
 12656                           	opt callstack 13
 12657                           
 12658                           ;terminal_control.c: 167: printf("\033[0;37;40m");
 12659                           
 12660                           ;incstack = 0
 12661  01C72A  0ED3               	movlw	low STR_332
 12662  01C72C  0102               	movlb	2	; () banked
 12663  01C72E  6FA9               	movwf	printf@f& (0+255),b
 12664  01C730  0EFD               	movlw	high STR_332
 12665  01C732  6FAA               	movwf	(printf@f+1)& (0+255),b
 12666  01C734  EC32  F0DF         	call	_printf	;wreg free
 12667  01C738  0012               	return		;funcret
 12668  01C73A                     __end_of_terminalTextAttributesReset:
 12669                           	opt callstack 0
 12670                           
 12671 ;; *************** function _terminalTextAttributes *****************
 12672 ;; Defined at:
 12673 ;;		line 47 in file "terminal_control.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  foreground_c    1    wreg     enum E9584
 12676 ;;  background_c    1  184[BANK2 ] enum E9584
 12677 ;;  input_attrib    1  185[BANK2 ] enum E9576
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  foreground_c    1   26[BANK3 ] enum E9584
 12680 ;;  print_string   16   27[BANK3 ] unsigned char [16]
 12681 ;;  i               1   43[BANK3 ] unsigned char 
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12691 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;      Locals:         0       0       0       0      18       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12694 ;;      Totals:         0       0       0       2      18       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;Total ram usage:       20 bytes
 12696 ;; Hardware stack levels used:    1
 12697 ;; Hardware stack levels required when called:   15
 12698 ;; This function calls:
 12699 ;;		_printf
 12700 ;;		_strcat
 12701 ;;		_strncpy
 12702 ;; This function is called by:
 12703 ;;		_main
 12704 ;;		_ringBufferLUT
 12705 ;;		_printErrorHandlerStatus
 12706 ;;		_printCurrentMeasurements
 12707 ;;		_terminalPrintTestMessage
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text8
 12712  016036                     __ptext8:
 12713                           	opt callstack 0
 12714  016036                     _terminalTextAttributes:
 12715                           	opt callstack 13
 12716                           
 12717                           ;incstack = 0
 12718                           ;terminalTextAttributes@foreground_color stored from wreg
 12719  016036  0103               	movlb	3	; () banked
 12720  016038  6FEB               	movwf	terminalTextAttributes@foreground_color& (0+255),b
 12721                           
 12722                           ;terminal_control.c: 51: char print_string[16];;terminal_control.c: 54: uint8_t i;;termi
      +                          nal_control.c: 55: for (i = 0; i < sizeof(print_string); i++) {
 12723  01603A  0E00               	movlw	0
 12724  01603C  0103               	movlb	3	; () banked
 12725  01603E  6FFC               	movwf	terminalTextAttributes@i& (0+255),b
 12726  016040                     l19275:
 12727                           
 12728                           ; BSR set to: 3
 12729                           ;terminal_control.c: 57: print_string[i] = '\0';
 12730  016040  0EEC               	movlw	low terminalTextAttributes@print_string
 12731  016042  25FC               	addwf	terminalTextAttributes@i& (0+255),w,b
 12732  016044  6ED9               	movwf	fsr2l,c
 12733  016046  6ADA               	clrf	fsr2h,c
 12734  016048  0E03               	movlw	high terminalTextAttributes@print_string
 12735  01604A  22DA               	addwfc	fsr2h,f,c
 12736  01604C  0E00               	movlw	0
 12737  01604E  6EDF               	movwf	indf2,c
 12738                           
 12739                           ; BSR set to: 3
 12740  016050  2BFC               	incf	terminalTextAttributes@i& (0+255),f,b
 12741                           
 12742                           ; BSR set to: 3
 12743  016052  0E0F               	movlw	15
 12744  016054  65FC               	cpfsgt	terminalTextAttributes@i& (0+255),b
 12745  016056  D7F4               	goto	l19275
 12746                           
 12747                           ; BSR set to: 3
 12748                           ;terminal_control.c: 59: };terminal_control.c: 61: strncpy(print_string, "\033[", sizeof
      +                          (print_string));
 12749  016058  0EEC               	movlw	low terminalTextAttributes@print_string
 12750  01605A  0102               	movlb	2	; () banked
 12751  01605C  6F00               	movwf	strncpy@to& (0+255),b
 12752  01605E  0E03               	movlw	high terminalTextAttributes@print_string
 12753  016060  6F01               	movwf	(strncpy@to+1)& (0+255),b
 12754  016062  0EF8               	movlw	low STR_303
 12755  016064  6F02               	movwf	strncpy@from& (0+255),b
 12756  016066  0EFF               	movlw	high STR_303
 12757  016068  6F03               	movwf	(strncpy@from+1)& (0+255),b
 12758  01606A  0E00               	movlw	0
 12759  01606C  6F05               	movwf	(strncpy@size+1)& (0+255),b
 12760  01606E  0E10               	movlw	16
 12761  016070  6F04               	movwf	strncpy@size& (0+255),b
 12762  016072  ECCE  F0D9         	call	_strncpy	;wreg free
 12763                           
 12764                           ;terminal_control.c: 63: switch (input_attribute) {
 12765  016076  D04D               	goto	l19299
 12766  016078                     l19283:
 12767                           
 12768                           ; BSR set to: 2
 12769                           ;terminal_control.c: 66: strcat(print_string,"0");
 12770  016078  0EEC               	movlw	low terminalTextAttributes@print_string
 12771  01607A  6F00               	movwf	strcat@to& (0+255),b
 12772  01607C  0E03               	movlw	high terminalTextAttributes@print_string
 12773  01607E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12774  016080  0ECC               	movlw	low (STR_312+1)
 12775  016082  6F02               	movwf	strcat@from& (0+255),b
 12776  016084  0EFF               	movlw	high (STR_312+1)
 12777  016086  6F03               	movwf	(strcat@from+1)& (0+255),b
 12778  016088  EC97  F0DA         	call	_strcat	;wreg free
 12779                           
 12780                           ;terminal_control.c: 67: break;
 12781  01608C  D057               	goto	l19301
 12782  01608E                     l19285:
 12783                           
 12784                           ; BSR set to: 2
 12785                           ;terminal_control.c: 69: strcat(print_string,"1");
 12786  01608E  0EEC               	movlw	low terminalTextAttributes@print_string
 12787  016090  6F00               	movwf	strcat@to& (0+255),b
 12788  016092  0E03               	movlw	high terminalTextAttributes@print_string
 12789  016094  6F01               	movwf	(strcat@to+1)& (0+255),b
 12790  016096  0ECF               	movlw	low (STR_313+1)
 12791  016098  6F02               	movwf	strcat@from& (0+255),b
 12792  01609A  0EFF               	movlw	high (STR_313+1)
 12793  01609C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12794  01609E  EC97  F0DA         	call	_strcat	;wreg free
 12795                           
 12796                           ;terminal_control.c: 70: break;
 12797  0160A2  D04C               	goto	l19301
 12798  0160A4                     l19287:
 12799                           
 12800                           ; BSR set to: 2
 12801                           ;terminal_control.c: 72: strcat(print_string,"4");
 12802  0160A4  0EEC               	movlw	low terminalTextAttributes@print_string
 12803  0160A6  6F00               	movwf	strcat@to& (0+255),b
 12804  0160A8  0E03               	movlw	high terminalTextAttributes@print_string
 12805  0160AA  6F01               	movwf	(strcat@to+1)& (0+255),b
 12806  0160AC  0EE1               	movlw	low (STR_316+1)
 12807  0160AE  6F02               	movwf	strcat@from& (0+255),b
 12808  0160B0  0EFF               	movlw	high (STR_316+1)
 12809  0160B2  6F03               	movwf	(strcat@from+1)& (0+255),b
 12810  0160B4  EC97  F0DA         	call	_strcat	;wreg free
 12811                           
 12812                           ;terminal_control.c: 73: break;
 12813  0160B8  D041               	goto	l19301
 12814  0160BA                     l19289:
 12815                           
 12816                           ; BSR set to: 2
 12817                           ;terminal_control.c: 75: strcat(print_string,"5");
 12818  0160BA  0EEC               	movlw	low terminalTextAttributes@print_string
 12819  0160BC  6F00               	movwf	strcat@to& (0+255),b
 12820  0160BE  0E03               	movlw	high terminalTextAttributes@print_string
 12821  0160C0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12822  0160C2  0EE7               	movlw	low (STR_317+1)
 12823  0160C4  6F02               	movwf	strcat@from& (0+255),b
 12824  0160C6  0EFF               	movlw	high (STR_317+1)
 12825  0160C8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12826  0160CA  EC97  F0DA         	call	_strcat	;wreg free
 12827                           
 12828                           ;terminal_control.c: 76: break;
 12829  0160CE  D036               	goto	l19301
 12830  0160D0                     l19291:
 12831                           
 12832                           ; BSR set to: 2
 12833                           ;terminal_control.c: 78: strcat(print_string,"7");
 12834  0160D0  0EEC               	movlw	low terminalTextAttributes@print_string
 12835  0160D2  6F00               	movwf	strcat@to& (0+255),b
 12836  0160D4  0E03               	movlw	high terminalTextAttributes@print_string
 12837  0160D6  6F01               	movwf	(strcat@to+1)& (0+255),b
 12838  0160D8  0EF3               	movlw	low (STR_319+1)
 12839  0160DA  6F02               	movwf	strcat@from& (0+255),b
 12840  0160DC  0EFF               	movlw	high (STR_319+1)
 12841  0160DE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12842  0160E0  EC97  F0DA         	call	_strcat	;wreg free
 12843                           
 12844                           ;terminal_control.c: 79: break;
 12845  0160E4  D02B               	goto	l19301
 12846  0160E6                     l19293:
 12847                           
 12848                           ; BSR set to: 2
 12849                           ;terminal_control.c: 81: strcat(print_string,"8");
 12850  0160E6  0EEC               	movlw	low terminalTextAttributes@print_string
 12851  0160E8  6F00               	movwf	strcat@to& (0+255),b
 12852  0160EA  0E03               	movlw	high terminalTextAttributes@print_string
 12853  0160EC  6F01               	movwf	(strcat@to+1)& (0+255),b
 12854  0160EE  0EFB               	movlw	low STR_309
 12855  0160F0  6F02               	movwf	strcat@from& (0+255),b
 12856  0160F2  0EFF               	movlw	high STR_309
 12857  0160F4  6F03               	movwf	(strcat@from+1)& (0+255),b
 12858  0160F6  EC97  F0DA         	call	_strcat	;wreg free
 12859                           
 12860                           ;terminal_control.c: 82: break;
 12861  0160FA  D020               	goto	l19301
 12862  0160FC                     l19295:
 12863                           
 12864                           ; BSR set to: 2
 12865                           ;terminal_control.c: 85: strcat(print_string,"0");
 12866  0160FC  0EEC               	movlw	low terminalTextAttributes@print_string
 12867  0160FE  6F00               	movwf	strcat@to& (0+255),b
 12868  016100  0E03               	movlw	high terminalTextAttributes@print_string
 12869  016102  6F01               	movwf	(strcat@to+1)& (0+255),b
 12870  016104  0ECC               	movlw	low (STR_312+1)
 12871  016106  6F02               	movwf	strcat@from& (0+255),b
 12872  016108  0EFF               	movlw	high (STR_312+1)
 12873  01610A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12874  01610C  EC97  F0DA         	call	_strcat	;wreg free
 12875                           
 12876                           ;terminal_control.c: 86: break;
 12877  016110  D015               	goto	l19301
 12878  016112                     l19299:
 12879  016112  0102               	movlb	2	; () banked
 12880  016114  51B9               	movf	terminalTextAttributes@input_attribute& (0+255),w,b
 12881                           
 12882                           ; Switch size 1, requested type "simple"
 12883                           ; Number of cases is 6, Range of values is 0 to 5
 12884                           ; switch strategies available:
 12885                           ; Name         Instructions Cycles
 12886                           ; simple_byte           19    10 (average)
 12887                           ;	Chosen strategy is simple_byte
 12888  016116  0A00               	xorlw	0	; case 0
 12889  016118  B4D8               	btfsc	status,2,c
 12890  01611A  D7AE               	goto	l19283
 12891  01611C  0A01               	xorlw	1	; case 1
 12892  01611E  B4D8               	btfsc	status,2,c
 12893  016120  D7B6               	goto	l19285
 12894  016122  0A03               	xorlw	3	; case 2
 12895  016124  B4D8               	btfsc	status,2,c
 12896  016126  D7BE               	goto	l19287
 12897  016128  0A01               	xorlw	1	; case 3
 12898  01612A  B4D8               	btfsc	status,2,c
 12899  01612C  D7C6               	goto	l19289
 12900  01612E  0A07               	xorlw	7	; case 4
 12901  016130  B4D8               	btfsc	status,2,c
 12902  016132  D7CE               	goto	l19291
 12903  016134  0A01               	xorlw	1	; case 5
 12904  016136  B4D8               	btfsc	status,2,c
 12905  016138  D7D6               	goto	l19293
 12906  01613A  D7E0               	goto	l19295
 12907  01613C                     l19301:
 12908                           
 12909                           ;terminal_control.c: 89: strcat(print_string,";");
 12910  01613C  0EEC               	movlw	low terminalTextAttributes@print_string
 12911  01613E  0102               	movlb	2	; () banked
 12912  016140  6F00               	movwf	strcat@to& (0+255),b
 12913  016142  0E03               	movlw	high terminalTextAttributes@print_string
 12914  016144  6F01               	movwf	(strcat@to+1)& (0+255),b
 12915  016146  0EFD               	movlw	low STR_311
 12916  016148  6F02               	movwf	strcat@from& (0+255),b
 12917  01614A  0EFF               	movlw	high STR_311
 12918  01614C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12919  01614E  EC97  F0DA         	call	_strcat	;wreg free
 12920                           
 12921                           ;terminal_control.c: 91: switch (foreground_color) {
 12922  016152  D06C               	goto	l19323
 12923  016154                     l19303:
 12924                           
 12925                           ; BSR set to: 3
 12926                           ;terminal_control.c: 94: strcat(print_string,"30");
 12927  016154  0EEC               	movlw	low terminalTextAttributes@print_string
 12928  016156  0102               	movlb	2	; () banked
 12929  016158  6F00               	movwf	strcat@to& (0+255),b
 12930  01615A  0E03               	movlw	high terminalTextAttributes@print_string
 12931  01615C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12932  01615E  0ECB               	movlw	low STR_312
 12933  016160  6F02               	movwf	strcat@from& (0+255),b
 12934  016162  0EFF               	movlw	high STR_312
 12935  016164  6F03               	movwf	(strcat@from+1)& (0+255),b
 12936  016166  EC97  F0DA         	call	_strcat	;wreg free
 12937                           
 12938                           ;terminal_control.c: 95: break;
 12939  01616A  D07B               	goto	l19325
 12940  01616C                     l19305:
 12941                           
 12942                           ; BSR set to: 3
 12943                           ;terminal_control.c: 97: strcat(print_string,"31");
 12944  01616C  0EEC               	movlw	low terminalTextAttributes@print_string
 12945  01616E  0102               	movlb	2	; () banked
 12946  016170  6F00               	movwf	strcat@to& (0+255),b
 12947  016172  0E03               	movlw	high terminalTextAttributes@print_string
 12948  016174  6F01               	movwf	(strcat@to+1)& (0+255),b
 12949  016176  0ECE               	movlw	low STR_313
 12950  016178  6F02               	movwf	strcat@from& (0+255),b
 12951  01617A  0EFF               	movlw	high STR_313
 12952  01617C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12953  01617E  EC97  F0DA         	call	_strcat	;wreg free
 12954                           
 12955                           ;terminal_control.c: 98: break;
 12956  016182  D06F               	goto	l19325
 12957  016184                     l19307:
 12958                           
 12959                           ; BSR set to: 3
 12960                           ;terminal_control.c: 100: strcat(print_string,"32");
 12961  016184  0EEC               	movlw	low terminalTextAttributes@print_string
 12962  016186  0102               	movlb	2	; () banked
 12963  016188  6F00               	movwf	strcat@to& (0+255),b
 12964  01618A  0E03               	movlw	high terminalTextAttributes@print_string
 12965  01618C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12966  01618E  0ED4               	movlw	low STR_314
 12967  016190  6F02               	movwf	strcat@from& (0+255),b
 12968  016192  0EFF               	movlw	high STR_314
 12969  016194  6F03               	movwf	(strcat@from+1)& (0+255),b
 12970  016196  EC97  F0DA         	call	_strcat	;wreg free
 12971                           
 12972                           ;terminal_control.c: 101: break;
 12973  01619A  D063               	goto	l19325
 12974  01619C                     l19309:
 12975                           
 12976                           ; BSR set to: 3
 12977                           ;terminal_control.c: 103: strcat(print_string,"33");
 12978  01619C  0EEC               	movlw	low terminalTextAttributes@print_string
 12979  01619E  0102               	movlb	2	; () banked
 12980  0161A0  6F00               	movwf	strcat@to& (0+255),b
 12981  0161A2  0E03               	movlw	high terminalTextAttributes@print_string
 12982  0161A4  6F01               	movwf	(strcat@to+1)& (0+255),b
 12983  0161A6  0EDA               	movlw	low STR_315
 12984  0161A8  6F02               	movwf	strcat@from& (0+255),b
 12985  0161AA  0EFF               	movlw	high STR_315
 12986  0161AC  6F03               	movwf	(strcat@from+1)& (0+255),b
 12987  0161AE  EC97  F0DA         	call	_strcat	;wreg free
 12988                           
 12989                           ;terminal_control.c: 104: break;
 12990  0161B2  D057               	goto	l19325
 12991  0161B4                     l19311:
 12992                           
 12993                           ; BSR set to: 3
 12994                           ;terminal_control.c: 106: strcat(print_string,"34");
 12995  0161B4  0EEC               	movlw	low terminalTextAttributes@print_string
 12996  0161B6  0102               	movlb	2	; () banked
 12997  0161B8  6F00               	movwf	strcat@to& (0+255),b
 12998  0161BA  0E03               	movlw	high terminalTextAttributes@print_string
 12999  0161BC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13000  0161BE  0EE0               	movlw	low STR_316
 13001  0161C0  6F02               	movwf	strcat@from& (0+255),b
 13002  0161C2  0EFF               	movlw	high STR_316
 13003  0161C4  6F03               	movwf	(strcat@from+1)& (0+255),b
 13004  0161C6  EC97  F0DA         	call	_strcat	;wreg free
 13005                           
 13006                           ;terminal_control.c: 107: break;
 13007  0161CA  D04B               	goto	l19325
 13008  0161CC                     l19313:
 13009                           
 13010                           ; BSR set to: 3
 13011                           ;terminal_control.c: 109: strcat(print_string,"35");
 13012  0161CC  0EEC               	movlw	low terminalTextAttributes@print_string
 13013  0161CE  0102               	movlb	2	; () banked
 13014  0161D0  6F00               	movwf	strcat@to& (0+255),b
 13015  0161D2  0E03               	movlw	high terminalTextAttributes@print_string
 13016  0161D4  6F01               	movwf	(strcat@to+1)& (0+255),b
 13017  0161D6  0EE6               	movlw	low STR_317
 13018  0161D8  6F02               	movwf	strcat@from& (0+255),b
 13019  0161DA  0EFF               	movlw	high STR_317
 13020  0161DC  6F03               	movwf	(strcat@from+1)& (0+255),b
 13021  0161DE  EC97  F0DA         	call	_strcat	;wreg free
 13022                           
 13023                           ;terminal_control.c: 110: break;
 13024  0161E2  D03F               	goto	l19325
 13025  0161E4                     l19315:
 13026                           
 13027                           ; BSR set to: 3
 13028                           ;terminal_control.c: 112: strcat(print_string,"36");
 13029  0161E4  0EEC               	movlw	low terminalTextAttributes@print_string
 13030  0161E6  0102               	movlb	2	; () banked
 13031  0161E8  6F00               	movwf	strcat@to& (0+255),b
 13032  0161EA  0E03               	movlw	high terminalTextAttributes@print_string
 13033  0161EC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13034  0161EE  0EEC               	movlw	low STR_318
 13035  0161F0  6F02               	movwf	strcat@from& (0+255),b
 13036  0161F2  0EFF               	movlw	high STR_318
 13037  0161F4  6F03               	movwf	(strcat@from+1)& (0+255),b
 13038  0161F6  EC97  F0DA         	call	_strcat	;wreg free
 13039                           
 13040                           ;terminal_control.c: 113: break;
 13041  0161FA  D033               	goto	l19325
 13042  0161FC                     l19317:
 13043                           
 13044                           ; BSR set to: 3
 13045                           ;terminal_control.c: 115: strcat(print_string,"37");
 13046  0161FC  0EEC               	movlw	low terminalTextAttributes@print_string
 13047  0161FE  0102               	movlb	2	; () banked
 13048  016200  6F00               	movwf	strcat@to& (0+255),b
 13049  016202  0E03               	movlw	high terminalTextAttributes@print_string
 13050  016204  6F01               	movwf	(strcat@to+1)& (0+255),b
 13051  016206  0EF2               	movlw	low STR_319
 13052  016208  6F02               	movwf	strcat@from& (0+255),b
 13053  01620A  0EFF               	movlw	high STR_319
 13054  01620C  6F03               	movwf	(strcat@from+1)& (0+255),b
 13055  01620E  EC97  F0DA         	call	_strcat	;wreg free
 13056                           
 13057                           ;terminal_control.c: 116: break;
 13058  016212  D027               	goto	l19325
 13059  016214                     l19319:
 13060                           
 13061                           ; BSR set to: 3
 13062                           ;terminal_control.c: 119: strcat(print_string,"37");
 13063  016214  0EEC               	movlw	low terminalTextAttributes@print_string
 13064  016216  0102               	movlb	2	; () banked
 13065  016218  6F00               	movwf	strcat@to& (0+255),b
 13066  01621A  0E03               	movlw	high terminalTextAttributes@print_string
 13067  01621C  6F01               	movwf	(strcat@to+1)& (0+255),b
 13068  01621E  0EF2               	movlw	low STR_319
 13069  016220  6F02               	movwf	strcat@from& (0+255),b
 13070  016222  0EFF               	movlw	high STR_319
 13071  016224  6F03               	movwf	(strcat@from+1)& (0+255),b
 13072  016226  EC97  F0DA         	call	_strcat	;wreg free
 13073                           
 13074                           ;terminal_control.c: 120: break;
 13075  01622A  D01B               	goto	l19325
 13076  01622C                     l19323:
 13077  01622C  0103               	movlb	3	; () banked
 13078  01622E  51EB               	movf	terminalTextAttributes@foreground_color& (0+255),w,b
 13079                           
 13080                           ; Switch size 1, requested type "simple"
 13081                           ; Number of cases is 8, Range of values is 0 to 7
 13082                           ; switch strategies available:
 13083                           ; Name         Instructions Cycles
 13084                           ; simple_byte           25    13 (average)
 13085                           ;	Chosen strategy is simple_byte
 13086  016230  0A00               	xorlw	0	; case 0
 13087  016232  B4D8               	btfsc	status,2,c
 13088  016234  D78F               	goto	l19303
 13089  016236  0A01               	xorlw	1	; case 1
 13090  016238  B4D8               	btfsc	status,2,c
 13091  01623A  D798               	goto	l19305
 13092  01623C  0A03               	xorlw	3	; case 2
 13093  01623E  B4D8               	btfsc	status,2,c
 13094  016240  D7A1               	goto	l19307
 13095  016242  0A01               	xorlw	1	; case 3
 13096  016244  B4D8               	btfsc	status,2,c
 13097  016246  D7AA               	goto	l19309
 13098  016248  0A07               	xorlw	7	; case 4
 13099  01624A  B4D8               	btfsc	status,2,c
 13100  01624C  D7B3               	goto	l19311
 13101  01624E  0A01               	xorlw	1	; case 5
 13102  016250  B4D8               	btfsc	status,2,c
 13103  016252  D7BC               	goto	l19313
 13104  016254  0A03               	xorlw	3	; case 6
 13105  016256  B4D8               	btfsc	status,2,c
 13106  016258  D7C5               	goto	l19315
 13107  01625A  0A01               	xorlw	1	; case 7
 13108  01625C  B4D8               	btfsc	status,2,c
 13109  01625E  D7CE               	goto	l19317
 13110  016260  D7D9               	goto	l19319
 13111  016262                     l19325:
 13112                           
 13113                           ;terminal_control.c: 123: strcat(print_string,";");
 13114  016262  0EEC               	movlw	low terminalTextAttributes@print_string
 13115  016264  0102               	movlb	2	; () banked
 13116  016266  6F00               	movwf	strcat@to& (0+255),b
 13117  016268  0E03               	movlw	high terminalTextAttributes@print_string
 13118  01626A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13119  01626C  0EFD               	movlw	low STR_311
 13120  01626E  6F02               	movwf	strcat@from& (0+255),b
 13121  016270  0EFF               	movlw	high STR_311
 13122  016272  6F03               	movwf	(strcat@from+1)& (0+255),b
 13123  016274  EC97  F0DA         	call	_strcat	;wreg free
 13124                           
 13125                           ;terminal_control.c: 125: switch (background_color) {
 13126  016278  D063               	goto	l19347
 13127  01627A                     l19327:
 13128                           
 13129                           ; BSR set to: 2
 13130                           ;terminal_control.c: 128: strcat(print_string,"40");
 13131  01627A  0EEC               	movlw	low terminalTextAttributes@print_string
 13132  01627C  6F00               	movwf	strcat@to& (0+255),b
 13133  01627E  0E03               	movlw	high terminalTextAttributes@print_string
 13134  016280  6F01               	movwf	(strcat@to+1)& (0+255),b
 13135  016282  0EAD               	movlw	low (STR_45+9)
 13136  016284  6F02               	movwf	strcat@from& (0+255),b
 13137  016286  0EFD               	movlw	high (STR_45+9)
 13138  016288  6F03               	movwf	(strcat@from+1)& (0+255),b
 13139  01628A  EC97  F0DA         	call	_strcat	;wreg free
 13140                           
 13141                           ;terminal_control.c: 129: break;
 13142  01628E  D073               	goto	l19349
 13143  016290                     l19329:
 13144                           
 13145                           ; BSR set to: 2
 13146                           ;terminal_control.c: 131: strcat(print_string,"41");
 13147  016290  0EEC               	movlw	low terminalTextAttributes@print_string
 13148  016292  6F00               	movwf	strcat@to& (0+255),b
 13149  016294  0E03               	movlw	high terminalTextAttributes@print_string
 13150  016296  6F01               	movwf	(strcat@to+1)& (0+255),b
 13151  016298  0ED1               	movlw	low STR_323
 13152  01629A  6F02               	movwf	strcat@from& (0+255),b
 13153  01629C  0EFF               	movlw	high STR_323
 13154  01629E  6F03               	movwf	(strcat@from+1)& (0+255),b
 13155  0162A0  EC97  F0DA         	call	_strcat	;wreg free
 13156                           
 13157                           ;terminal_control.c: 132: break;
 13158  0162A4  D068               	goto	l19349
 13159  0162A6                     l19331:
 13160                           
 13161                           ; BSR set to: 2
 13162                           ;terminal_control.c: 134: strcat(print_string,"42");
 13163  0162A6  0EEC               	movlw	low terminalTextAttributes@print_string
 13164  0162A8  6F00               	movwf	strcat@to& (0+255),b
 13165  0162AA  0E03               	movlw	high terminalTextAttributes@print_string
 13166  0162AC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13167  0162AE  0ED7               	movlw	low STR_324
 13168  0162B0  6F02               	movwf	strcat@from& (0+255),b
 13169  0162B2  0EFF               	movlw	high STR_324
 13170  0162B4  6F03               	movwf	(strcat@from+1)& (0+255),b
 13171  0162B6  EC97  F0DA         	call	_strcat	;wreg free
 13172                           
 13173                           ;terminal_control.c: 135: break;
 13174  0162BA  D05D               	goto	l19349
 13175  0162BC                     l19333:
 13176                           
 13177                           ; BSR set to: 2
 13178                           ;terminal_control.c: 137: strcat(print_string,"43");
 13179  0162BC  0EEC               	movlw	low terminalTextAttributes@print_string
 13180  0162BE  6F00               	movwf	strcat@to& (0+255),b
 13181  0162C0  0E03               	movlw	high terminalTextAttributes@print_string
 13182  0162C2  6F01               	movwf	(strcat@to+1)& (0+255),b
 13183  0162C4  0EDD               	movlw	low STR_325
 13184  0162C6  6F02               	movwf	strcat@from& (0+255),b
 13185  0162C8  0EFF               	movlw	high STR_325
 13186  0162CA  6F03               	movwf	(strcat@from+1)& (0+255),b
 13187  0162CC  EC97  F0DA         	call	_strcat	;wreg free
 13188                           
 13189                           ;terminal_control.c: 138: break;
 13190  0162D0  D052               	goto	l19349
 13191  0162D2                     l19335:
 13192                           
 13193                           ; BSR set to: 2
 13194                           ;terminal_control.c: 140: strcat(print_string,"44");
 13195  0162D2  0EEC               	movlw	low terminalTextAttributes@print_string
 13196  0162D4  6F00               	movwf	strcat@to& (0+255),b
 13197  0162D6  0E03               	movlw	high terminalTextAttributes@print_string
 13198  0162D8  6F01               	movwf	(strcat@to+1)& (0+255),b
 13199  0162DA  0EE3               	movlw	low STR_326
 13200  0162DC  6F02               	movwf	strcat@from& (0+255),b
 13201  0162DE  0EFF               	movlw	high STR_326
 13202  0162E0  6F03               	movwf	(strcat@from+1)& (0+255),b
 13203  0162E2  EC97  F0DA         	call	_strcat	;wreg free
 13204                           
 13205                           ;terminal_control.c: 141: break;
 13206  0162E6  D047               	goto	l19349
 13207  0162E8                     l19337:
 13208                           
 13209                           ; BSR set to: 2
 13210                           ;terminal_control.c: 143: strcat(print_string,"45");
 13211  0162E8  0EEC               	movlw	low terminalTextAttributes@print_string
 13212  0162EA  6F00               	movwf	strcat@to& (0+255),b
 13213  0162EC  0E03               	movlw	high terminalTextAttributes@print_string
 13214  0162EE  6F01               	movwf	(strcat@to+1)& (0+255),b
 13215  0162F0  0EE9               	movlw	low STR_327
 13216  0162F2  6F02               	movwf	strcat@from& (0+255),b
 13217  0162F4  0EFF               	movlw	high STR_327
 13218  0162F6  6F03               	movwf	(strcat@from+1)& (0+255),b
 13219  0162F8  EC97  F0DA         	call	_strcat	;wreg free
 13220                           
 13221                           ;terminal_control.c: 144: break;
 13222  0162FC  D03C               	goto	l19349
 13223  0162FE                     l19339:
 13224                           
 13225                           ; BSR set to: 2
 13226                           ;terminal_control.c: 146: strcat(print_string,"46");
 13227  0162FE  0EEC               	movlw	low terminalTextAttributes@print_string
 13228  016300  6F00               	movwf	strcat@to& (0+255),b
 13229  016302  0E03               	movlw	high terminalTextAttributes@print_string
 13230  016304  6F01               	movwf	(strcat@to+1)& (0+255),b
 13231  016306  0EEF               	movlw	low STR_328
 13232  016308  6F02               	movwf	strcat@from& (0+255),b
 13233  01630A  0EFF               	movlw	high STR_328
 13234  01630C  6F03               	movwf	(strcat@from+1)& (0+255),b
 13235  01630E  EC97  F0DA         	call	_strcat	;wreg free
 13236                           
 13237                           ;terminal_control.c: 147: break;
 13238  016312  D031               	goto	l19349
 13239  016314                     l19341:
 13240                           
 13241                           ; BSR set to: 2
 13242                           ;terminal_control.c: 149: strcat(print_string,"47");
 13243  016314  0EEC               	movlw	low terminalTextAttributes@print_string
 13244  016316  6F00               	movwf	strcat@to& (0+255),b
 13245  016318  0E03               	movlw	high terminalTextAttributes@print_string
 13246  01631A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13247  01631C  0EF5               	movlw	low STR_329
 13248  01631E  6F02               	movwf	strcat@from& (0+255),b
 13249  016320  0EFF               	movlw	high STR_329
 13250  016322  6F03               	movwf	(strcat@from+1)& (0+255),b
 13251  016324  EC97  F0DA         	call	_strcat	;wreg free
 13252                           
 13253                           ;terminal_control.c: 150: break;
 13254  016328  D026               	goto	l19349
 13255  01632A                     l19343:
 13256                           
 13257                           ; BSR set to: 2
 13258                           ;terminal_control.c: 153: strcat(print_string,"40");
 13259  01632A  0EEC               	movlw	low terminalTextAttributes@print_string
 13260  01632C  6F00               	movwf	strcat@to& (0+255),b
 13261  01632E  0E03               	movlw	high terminalTextAttributes@print_string
 13262  016330  6F01               	movwf	(strcat@to+1)& (0+255),b
 13263  016332  0EAD               	movlw	low (STR_45+9)
 13264  016334  6F02               	movwf	strcat@from& (0+255),b
 13265  016336  0EFD               	movlw	high (STR_45+9)
 13266  016338  6F03               	movwf	(strcat@from+1)& (0+255),b
 13267  01633A  EC97  F0DA         	call	_strcat	;wreg free
 13268                           
 13269                           ;terminal_control.c: 154: break;
 13270  01633E  D01B               	goto	l19349
 13271  016340                     l19347:
 13272  016340  0102               	movlb	2	; () banked
 13273  016342  51B8               	movf	terminalTextAttributes@background_color& (0+255),w,b
 13274                           
 13275                           ; Switch size 1, requested type "simple"
 13276                           ; Number of cases is 8, Range of values is 0 to 7
 13277                           ; switch strategies available:
 13278                           ; Name         Instructions Cycles
 13279                           ; simple_byte           25    13 (average)
 13280                           ;	Chosen strategy is simple_byte
 13281  016344  0A00               	xorlw	0	; case 0
 13282  016346  B4D8               	btfsc	status,2,c
 13283  016348  D798               	goto	l19327
 13284  01634A  0A01               	xorlw	1	; case 1
 13285  01634C  B4D8               	btfsc	status,2,c
 13286  01634E  D7A0               	goto	l19329
 13287  016350  0A03               	xorlw	3	; case 2
 13288  016352  B4D8               	btfsc	status,2,c
 13289  016354  D7A8               	goto	l19331
 13290  016356  0A01               	xorlw	1	; case 3
 13291  016358  B4D8               	btfsc	status,2,c
 13292  01635A  D7B0               	goto	l19333
 13293  01635C  0A07               	xorlw	7	; case 4
 13294  01635E  B4D8               	btfsc	status,2,c
 13295  016360  D7B8               	goto	l19335
 13296  016362  0A01               	xorlw	1	; case 5
 13297  016364  B4D8               	btfsc	status,2,c
 13298  016366  D7C0               	goto	l19337
 13299  016368  0A03               	xorlw	3	; case 6
 13300  01636A  B4D8               	btfsc	status,2,c
 13301  01636C  D7C8               	goto	l19339
 13302  01636E  0A01               	xorlw	1	; case 7
 13303  016370  B4D8               	btfsc	status,2,c
 13304  016372  D7D0               	goto	l19341
 13305  016374  D7DA               	goto	l19343
 13306  016376                     l19349:
 13307                           
 13308                           ;terminal_control.c: 157: strcat(print_string,"m");
 13309  016376  0EEC               	movlw	low terminalTextAttributes@print_string
 13310  016378  0102               	movlb	2	; () banked
 13311  01637A  6F00               	movwf	strcat@to& (0+255),b
 13312  01637C  0E03               	movlw	high terminalTextAttributes@print_string
 13313  01637E  6F01               	movwf	(strcat@to+1)& (0+255),b
 13314  016380  0EDF               	movlw	low (STR_294+7)
 13315  016382  6F02               	movwf	strcat@from& (0+255),b
 13316  016384  0EFE               	movlw	high (STR_294+7)
 13317  016386  6F03               	movwf	(strcat@from+1)& (0+255),b
 13318  016388  EC97  F0DA         	call	_strcat	;wreg free
 13319                           
 13320                           ;terminal_control.c: 159: printf(print_string);
 13321  01638C  0EEC               	movlw	low terminalTextAttributes@print_string
 13322  01638E  0102               	movlb	2	; () banked
 13323  016390  6FA9               	movwf	printf@f& (0+255),b
 13324  016392  0E03               	movlw	high terminalTextAttributes@print_string
 13325  016394  6FAA               	movwf	(printf@f+1)& (0+255),b
 13326  016396  EC32  F0DF         	call	_printf	;wreg free
 13327  01639A  0012               	return		;funcret
 13328  01639C                     __end_of_terminalTextAttributes:
 13329                           	opt callstack 0
 13330                           
 13331 ;; *************** function _strncpy *****************
 13332 ;; Defined at:
 13333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncpy.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13336 ;;		 -> terminalTextAttributes@print_string(16), 
 13337 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13338 ;;		 -> STR_303(3), 
 13339 ;;  size            2    4[BANK2 ] unsigned int 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  cp              2    6[BANK2 ] PTR unsigned char 
 13342 ;;		 -> terminalTextAttributes@print_string(16), 
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  2    0[BANK2 ] PTR unsigned char 
 13345 ;; Registers used:
 13346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13352 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13353 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13355 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13356 ;;Total ram usage:        8 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:   11
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_terminalTextAttributes
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text9
 13367  01B39C                     __ptext9:
 13368                           	opt callstack 0
 13369  01B39C                     _strncpy:
 13370                           	opt callstack 16
 13371                           
 13372                           ;incstack = 0
 13373  01B39C  C200  F206         	movff	strncpy@to,strncpy@cp
 13374  01B3A0  C201  F207         	movff	strncpy@to+1,strncpy@cp+1
 13375  01B3A4  D017               	goto	l18651
 13376  01B3A6                     l18645:
 13377                           
 13378                           ; BSR set to: 2
 13379  01B3A6  0704               	decf	strncpy@size& (0+255),f,b
 13380  01B3A8  A0D8               	btfss	status,0,c
 13381  01B3AA  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13382                           
 13383                           ; BSR set to: 2
 13384  01B3AC  C202  FFF6         	movff	strncpy@from,tblptrl
 13385  01B3B0  C203  FFF7         	movff	strncpy@from+1,tblptrh
 13386  01B3B4  4B02               	infsnz	strncpy@from& (0+255),f,b
 13387  01B3B6  2B03               	incf	(strncpy@from+1)& (0+255),f,b
 13388  01B3B8                     	if	0	;tblptru may be non-zero
 13389  01B3B8                     	endif
 13390  01B3B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13391  01B3B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13392  01B3BA  6EF8               	movwf	tblptru,c
 13393  01B3BC                     	endif
 13394  01B3BC  C206  FFD9         	movff	strncpy@cp,fsr2l
 13395  01B3C0  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13396  01B3C4  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13397  01B3C6  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13398  01B3C8  0008               	tblrd		*
 13399  01B3CA  CFF5 FFDF          	movff	tablat,indf2
 13400  01B3CE  50DF               	movf	indf2,w,c
 13401  01B3D0  B4D8               	btfsc	status,2,c
 13402  01B3D2  D00E               	goto	l18657
 13403  01B3D4                     l18651:
 13404  01B3D4  0102               	movlb	2	; () banked
 13405  01B3D6  5104               	movf	strncpy@size& (0+255),w,b
 13406  01B3D8  1105               	iorwf	(strncpy@size+1)& (0+255),w,b
 13407  01B3DA  B4D8               	btfsc	status,2,c
 13408  01B3DC  D009               	goto	l18657
 13409  01B3DE  D7E3               	goto	l18645
 13410  01B3E0                     l18653:
 13411                           
 13412                           ; BSR set to: 2
 13413  01B3E0  C206  FFD9         	movff	strncpy@cp,fsr2l
 13414  01B3E4  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13415  01B3E8  0E00               	movlw	0
 13416  01B3EA  6EDF               	movwf	indf2,c
 13417                           
 13418                           ; BSR set to: 2
 13419  01B3EC  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13420  01B3EE  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13421  01B3F0                     l18657:
 13422                           
 13423                           ; BSR set to: 2
 13424  01B3F0  0704               	decf	strncpy@size& (0+255),f,b
 13425  01B3F2  A0D8               	btfss	status,0,c
 13426  01B3F4  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13427  01B3F6  2904               	incf	strncpy@size& (0+255),w,b
 13428  01B3F8  E1F3               	bnz	l18653
 13429  01B3FA  2905               	incf	(strncpy@size+1)& (0+255),w,b
 13430  01B3FC  B4D8               	btfsc	status,2,c
 13431  01B3FE  0012               	return	
 13432  01B400  D7EF               	goto	l18653
 13433  01B402                     __end_of_strncpy:
 13434                           	opt callstack 0
 13435                           
 13436 ;; *************** function _getStringSecondsAsTime *****************
 13437 ;; Defined at:
 13438 ;;		line 61 in file "heartbeat_timer.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;  input_second    4  159[BANK2 ] unsigned long 
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;  buff           20    0[BANK3 ] unsigned char [20]
 13443 ;;  minutes         1   25[BANK3 ] unsigned char 
 13444 ;;  hours           1   24[BANK3 ] unsigned char 
 13445 ;;  days            1   23[BANK3 ] unsigned char 
 13446 ;;  years           1   22[BANK3 ] unsigned char 
 13447 ;;  seconds         1   21[BANK3 ] unsigned char 
 13448 ;;  i               1   20[BANK3 ] unsigned char 
 13449 ;;  remainder       1    0        unsigned char 
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  2  159[BANK2 ] PTR unsigned char 
 13452 ;; Registers used:
 13453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13459 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13460 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13461 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13462 ;;      Totals:         0       0       0       8      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13463 ;;Total ram usage:       34 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:   15
 13466 ;; This function calls:
 13467 ;;		___lldiv
 13468 ;;		___wmul
 13469 ;;		_sprintf
 13470 ;;		_strcat
 13471 ;;		_strlen
 13472 ;; This function is called by:
 13473 ;;		_ringBufferLUT
 13474 ;;		_printCurrentMeasurements
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           	psect	text10
 13479  015C90                     __ptext10:
 13480                           	opt callstack 0
 13481  015C90                     _getStringSecondsAsTime:
 13482                           	opt callstack 12
 13483                           
 13484                           ;heartbeat_timer.c: 63: uint8_t years, days, hours, minutes, seconds, remainder;;heartbe
      +                          at_timer.c: 64: static char return_string[40];;heartbeat_timer.c: 67: uint8_t i;;heartbe
      +                          at_timer.c: 68: for (i = 0; i < strlen(return_string); i++) {
 13485                           
 13486                           ; BSR set to: 2
 13487                           ;incstack = 0
 13488  015C90  0E00               	movlw	0
 13489  015C92  0103               	movlb	3	; () banked
 13490  015C94  6FE5               	movwf	getStringSecondsAsTime@i& (0+255),b
 13491  015C96  D00A               	goto	l19399
 13492  015C98                     l19395:
 13493                           
 13494                           ; BSR set to: 2
 13495                           ;heartbeat_timer.c: 70: return_string[i] = '\0';
 13496  015C98  0E84               	movlw	low getStringSecondsAsTime@return_string
 13497  015C9A  0103               	movlb	3	; () banked
 13498  015C9C  25E5               	addwf	getStringSecondsAsTime@i& (0+255),w,b
 13499  015C9E  6ED9               	movwf	fsr2l,c
 13500  015CA0  6ADA               	clrf	fsr2h,c
 13501  015CA2  0E03               	movlw	high getStringSecondsAsTime@return_string
 13502  015CA4  22DA               	addwfc	fsr2h,f,c
 13503  015CA6  0E00               	movlw	0
 13504  015CA8  6EDF               	movwf	indf2,c
 13505                           
 13506                           ; BSR set to: 3
 13507  015CAA  2BE5               	incf	getStringSecondsAsTime@i& (0+255),f,b
 13508  015CAC                     l19399:
 13509                           
 13510                           ; BSR set to: 3
 13511  015CAC  0E84               	movlw	low getStringSecondsAsTime@return_string
 13512  015CAE  0102               	movlb	2	; () banked
 13513  015CB0  6F00               	movwf	strlen@s& (0+255),b
 13514  015CB2  0E03               	movlw	high getStringSecondsAsTime@return_string
 13515  015CB4  6F01               	movwf	(strlen@s+1)& (0+255),b
 13516  015CB6  ECC6  F0E0         	call	_strlen	;wreg free
 13517  015CBA  0103               	movlb	3	; () banked
 13518  015CBC  51E5               	movf	getStringSecondsAsTime@i& (0+255),w,b
 13519  015CBE  0102               	movlb	2	; () banked
 13520  015CC0  6FA3               	movwf	??_getStringSecondsAsTime& (0+255),b
 13521  015CC2  6BA4               	clrf	(??_getStringSecondsAsTime+1)& (0+255),b
 13522  015CC4  5100               	movf	?_strlen& (0+255),w,b
 13523  015CC6  5DA3               	subwf	??_getStringSecondsAsTime& (0+255),w,b
 13524  015CC8  5101               	movf	(?_strlen+1)& (0+255),w,b
 13525  015CCA  59A4               	subwfb	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13526  015CCC  A0D8               	btfss	status,0,c
 13527  015CCE  D7E4               	goto	l19395
 13528                           
 13529                           ; BSR set to: 2
 13530                           ;heartbeat_timer.c: 72: };heartbeat_timer.c: 74: char buff[20];;heartbeat_timer.c: 76: y
      +                          ears = input_seconds / (60 * 60 * 24 * 365);
 13531  015CD0  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13532  015CD4  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13533  015CD8  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13534  015CDC  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13535  015CE0  0E80               	movlw	128
 13536  015CE2  6F04               	movwf	___lldiv@divisor& (0+255),b
 13537  015CE4  0E33               	movlw	51
 13538  015CE6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13539  015CE8  0E00               	movlw	0
 13540  015CEA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13541  015CEC  0E00               	movlw	0
 13542  015CEE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13543  015CF0  EC2B  F0D8         	call	___lldiv	;wreg free
 13544  015CF4  0102               	movlb	2	; () banked
 13545  015CF6  5100               	movf	?___lldiv& (0+255),w,b
 13546  015CF8  0103               	movlb	3	; () banked
 13547  015CFA  6FE7               	movwf	getStringSecondsAsTime@years& (0+255),b
 13548                           
 13549                           ; BSR set to: 3
 13550                           ;heartbeat_timer.c: 77: input_seconds -= years * (60 * 60 * 24 * 365);
 13551  015CFC  C3E7  F200         	movff	getStringSecondsAsTime@years,___wmul@multiplier
 13552  015D00  0102               	movlb	2	; () banked
 13553  015D02  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13554  015D04  0E33               	movlw	51
 13555  015D06  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13556  015D08  0E80               	movlw	128
 13557  015D0A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13558  015D0C  EC5C  F0E1         	call	___wmul	;wreg free
 13559  015D10  0102               	movlb	2	; () banked
 13560  015D12  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13561  015D16  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13562  015D1A  0E00               	movlw	0
 13563  015D1C  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13564  015D1E  0EFF               	movlw	255
 13565  015D20  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13566  015D22  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13567  015D24  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13568  015D26  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13569  015D28  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13570  015D2A  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13571  015D2C  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13572  015D2E  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13573  015D30  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13574  015D32  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13575                           
 13576                           ; BSR set to: 2
 13577                           ;heartbeat_timer.c: 78: days = input_seconds / (60 * 60 * 24);
 13578  015D34  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13579  015D38  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13580  015D3C  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13581  015D40  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13582  015D44  0E80               	movlw	128
 13583  015D46  6F04               	movwf	___lldiv@divisor& (0+255),b
 13584  015D48  0E51               	movlw	81
 13585  015D4A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13586  015D4C  0E00               	movlw	0
 13587  015D4E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13588  015D50  0E00               	movlw	0
 13589  015D52  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13590  015D54  EC2B  F0D8         	call	___lldiv	;wreg free
 13591  015D58  0102               	movlb	2	; () banked
 13592  015D5A  5100               	movf	?___lldiv& (0+255),w,b
 13593  015D5C  0103               	movlb	3	; () banked
 13594  015D5E  6FE8               	movwf	getStringSecondsAsTime@days& (0+255),b
 13595                           
 13596                           ;heartbeat_timer.c: 79: input_seconds -= days * (60 * 60 * 24);
 13597  015D60  C3E8  F200         	movff	getStringSecondsAsTime@days,___wmul@multiplier
 13598  015D64  0102               	movlb	2	; () banked
 13599  015D66  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13600  015D68  0E51               	movlw	81
 13601  015D6A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13602  015D6C  0E80               	movlw	128
 13603  015D6E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13604  015D70  EC5C  F0E1         	call	___wmul	;wreg free
 13605  015D74  0102               	movlb	2	; () banked
 13606  015D76  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13607  015D7A  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13608  015D7E  0E00               	movlw	0
 13609  015D80  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13610  015D82  0EFF               	movlw	255
 13611  015D84  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13612  015D86  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13613  015D88  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13614  015D8A  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13615  015D8C  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13616  015D8E  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13617  015D90  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13618  015D92  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13619  015D94  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13620  015D96  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13621                           
 13622                           ; BSR set to: 2
 13623                           ;heartbeat_timer.c: 80: hours = input_seconds / (60 * 60);
 13624  015D98  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13625  015D9C  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13626  015DA0  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13627  015DA4  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13628  015DA8  0E10               	movlw	16
 13629  015DAA  6F04               	movwf	___lldiv@divisor& (0+255),b
 13630  015DAC  0E0E               	movlw	14
 13631  015DAE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13632  015DB0  0E00               	movlw	0
 13633  015DB2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13634  015DB4  0E00               	movlw	0
 13635  015DB6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13636  015DB8  EC2B  F0D8         	call	___lldiv	;wreg free
 13637  015DBC  0102               	movlb	2	; () banked
 13638  015DBE  5100               	movf	?___lldiv& (0+255),w,b
 13639  015DC0  0103               	movlb	3	; () banked
 13640  015DC2  6FE9               	movwf	getStringSecondsAsTime@hours& (0+255),b
 13641                           
 13642                           ; BSR set to: 3
 13643                           ;heartbeat_timer.c: 81: input_seconds -= hours * (60 * 60);
 13644  015DC4  C3E9  F200         	movff	getStringSecondsAsTime@hours,___wmul@multiplier
 13645  015DC8  0102               	movlb	2	; () banked
 13646  015DCA  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13647  015DCC  0E0E               	movlw	14
 13648  015DCE  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13649  015DD0  0E10               	movlw	16
 13650  015DD2  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13651  015DD4  EC5C  F0E1         	call	___wmul	;wreg free
 13652  015DD8  0102               	movlb	2	; () banked
 13653  015DDA  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13654  015DDE  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13655  015DE2  0E00               	movlw	0
 13656  015DE4  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13657  015DE6  0EFF               	movlw	255
 13658  015DE8  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13659  015DEA  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13660  015DEC  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13661  015DEE  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13662  015DF0  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13663  015DF2  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13664  015DF4  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13665  015DF6  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13666  015DF8  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13667  015DFA  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13668                           
 13669                           ;heartbeat_timer.c: 82: minutes = input_seconds / 60;
 13670  015DFC  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13671  015E00  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13672  015E04  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13673  015E08  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13674  015E0C  0E3C               	movlw	60
 13675  015E0E  6F04               	movwf	___lldiv@divisor& (0+255),b
 13676  015E10  0E00               	movlw	0
 13677  015E12  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13678  015E14  0E00               	movlw	0
 13679  015E16  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13680  015E18  0E00               	movlw	0
 13681  015E1A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13682  015E1C  EC2B  F0D8         	call	___lldiv	;wreg free
 13683  015E20  0102               	movlb	2	; () banked
 13684  015E22  5100               	movf	?___lldiv& (0+255),w,b
 13685  015E24  0103               	movlb	3	; () banked
 13686  015E26  6FEA               	movwf	getStringSecondsAsTime@minutes& (0+255),b
 13687                           
 13688                           ; BSR set to: 3
 13689                           ;heartbeat_timer.c: 83: input_seconds -= minutes * 60;
 13690  015E28  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13691  015E2A  0D3C               	mullw	60
 13692  015E2C  CFF3 F2A3          	movff	prodl,??_getStringSecondsAsTime
 13693  015E30  CFF4 F2A4          	movff	prodh,??_getStringSecondsAsTime+1
 13694  015E34  0E00               	movlw	0
 13695  015E36  0102               	movlb	2	; () banked
 13696  015E38  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13697  015E3A  0EFF               	movlw	255
 13698  015E3C  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13699  015E3E  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13700  015E40  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13701  015E42  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13702  015E44  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13703  015E46  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13704  015E48  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13705  015E4A  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13706  015E4C  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13707  015E4E  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13708                           
 13709                           ; BSR set to: 2
 13710                           ;heartbeat_timer.c: 84: seconds = input_seconds;
 13711  015E50  C29F  F3E6         	movff	getStringSecondsAsTime@input_seconds,getStringSecondsAsTime@seconds
 13712                           
 13713                           ; BSR set to: 2
 13714                           ;heartbeat_timer.c: 86: if (years > 0) {
 13715  015E54  0103               	movlb	3	; () banked
 13716  015E56  51E7               	movf	getStringSecondsAsTime@years& (0+255),w,b
 13717  015E58  B4D8               	btfsc	status,2,c
 13718  015E5A  D02B               	goto	l19425
 13719                           
 13720                           ; BSR set to: 3
 13721                           ;heartbeat_timer.c: 88: if (years == 1) {
 13722  015E5C  05E7               	decf	getStringSecondsAsTime@years& (0+255),w,b
 13723  015E5E  A4D8               	btfss	status,2,c
 13724  015E60  D00F               	goto	l19421
 13725                           
 13726                           ; BSR set to: 3
 13727                           ;heartbeat_timer.c: 90: sprintf(buff, "%d year, ", years);
 13728  015E62  0ED1               	movlw	low getStringSecondsAsTime@buff
 13729  015E64  0102               	movlb	2	; () banked
 13730  015E66  6F8C               	movwf	sprintf@wh& (0+255),b
 13731  015E68  0E03               	movlw	high getStringSecondsAsTime@buff
 13732  015E6A  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13733  015E6C  0E76               	movlw	low STR_50
 13734  015E6E  6F8E               	movwf	sprintf@f& (0+255),b
 13735  015E70  0EFE               	movlw	high STR_50
 13736  015E72  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13737  015E74  C3E7  F290         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13738  015E78  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13739  015E7A  EC38  F0DD         	call	_sprintf	;wreg free
 13740                           
 13741                           ;heartbeat_timer.c: 92: }
 13742  015E7E  D00E               	goto	l19423
 13743  015E80                     l19421:
 13744                           
 13745                           ; BSR set to: 3
 13746                           ;heartbeat_timer.c: 94: else {;heartbeat_timer.c: 96: sprintf(buff, "%d years, ", years)
      +                          ;
 13747  015E80  0ED1               	movlw	low getStringSecondsAsTime@buff
 13748  015E82  0102               	movlb	2	; () banked
 13749  015E84  6F8C               	movwf	sprintf@wh& (0+255),b
 13750  015E86  0E03               	movlw	high getStringSecondsAsTime@buff
 13751  015E88  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13752  015E8A  0E15               	movlw	low STR_51
 13753  015E8C  6F8E               	movwf	sprintf@f& (0+255),b
 13754  015E8E  0EFE               	movlw	high STR_51
 13755  015E90  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13756  015E92  C3E7  F290         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13757  015E96  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13758  015E98  EC38  F0DD         	call	_sprintf	;wreg free
 13759  015E9C                     l19423:
 13760                           
 13761                           ;heartbeat_timer.c: 98: };heartbeat_timer.c: 100: strcat(return_string, buff);
 13762  015E9C  0E84               	movlw	low getStringSecondsAsTime@return_string
 13763  015E9E  0102               	movlb	2	; () banked
 13764  015EA0  6F00               	movwf	strcat@to& (0+255),b
 13765  015EA2  0E03               	movlw	high getStringSecondsAsTime@return_string
 13766  015EA4  6F01               	movwf	(strcat@to+1)& (0+255),b
 13767  015EA6  0ED1               	movlw	low getStringSecondsAsTime@buff
 13768  015EA8  6F02               	movwf	strcat@from& (0+255),b
 13769  015EAA  0E03               	movlw	high getStringSecondsAsTime@buff
 13770  015EAC  6F03               	movwf	(strcat@from+1)& (0+255),b
 13771  015EAE  EC97  F0DA         	call	_strcat	;wreg free
 13772  015EB2                     l19425:
 13773                           
 13774                           ;heartbeat_timer.c: 102: };heartbeat_timer.c: 104: if (days > 0) {
 13775  015EB2  0103               	movlb	3	; () banked
 13776  015EB4  51E8               	movf	getStringSecondsAsTime@days& (0+255),w,b
 13777  015EB6  B4D8               	btfsc	status,2,c
 13778  015EB8  D02B               	goto	l19435
 13779                           
 13780                           ; BSR set to: 3
 13781                           ;heartbeat_timer.c: 106: if (days == 1) {
 13782  015EBA  05E8               	decf	getStringSecondsAsTime@days& (0+255),w,b
 13783  015EBC  A4D8               	btfss	status,2,c
 13784  015EBE  D00F               	goto	l19431
 13785                           
 13786                           ; BSR set to: 3
 13787                           ;heartbeat_timer.c: 108: sprintf(buff, "%d day, ", days);
 13788  015EC0  0ED1               	movlw	low getStringSecondsAsTime@buff
 13789  015EC2  0102               	movlb	2	; () banked
 13790  015EC4  6F8C               	movwf	sprintf@wh& (0+255),b
 13791  015EC6  0E03               	movlw	high getStringSecondsAsTime@buff
 13792  015EC8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13793  015ECA  0E20               	movlw	low STR_52
 13794  015ECC  6F8E               	movwf	sprintf@f& (0+255),b
 13795  015ECE  0EFF               	movlw	high STR_52
 13796  015ED0  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13797  015ED2  C3E8  F290         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13798  015ED6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13799  015ED8  EC38  F0DD         	call	_sprintf	;wreg free
 13800                           
 13801                           ;heartbeat_timer.c: 110: }
 13802  015EDC  D00E               	goto	l19433
 13803  015EDE                     l19431:
 13804                           
 13805                           ; BSR set to: 3
 13806                           ;heartbeat_timer.c: 112: else {;heartbeat_timer.c: 114: sprintf(buff, "%d days, ", days)
      +                          ;
 13807  015EDE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13808  015EE0  0102               	movlb	2	; () banked
 13809  015EE2  6F8C               	movwf	sprintf@wh& (0+255),b
 13810  015EE4  0E03               	movlw	high getStringSecondsAsTime@buff
 13811  015EE6  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13812  015EE8  0E8A               	movlw	low STR_53
 13813  015EEA  6F8E               	movwf	sprintf@f& (0+255),b
 13814  015EEC  0EFE               	movlw	high STR_53
 13815  015EEE  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13816  015EF0  C3E8  F290         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13817  015EF4  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13818  015EF6  EC38  F0DD         	call	_sprintf	;wreg free
 13819  015EFA                     l19433:
 13820                           
 13821                           ;heartbeat_timer.c: 116: };heartbeat_timer.c: 118: strcat(return_string, buff);
 13822  015EFA  0E84               	movlw	low getStringSecondsAsTime@return_string
 13823  015EFC  0102               	movlb	2	; () banked
 13824  015EFE  6F00               	movwf	strcat@to& (0+255),b
 13825  015F00  0E03               	movlw	high getStringSecondsAsTime@return_string
 13826  015F02  6F01               	movwf	(strcat@to+1)& (0+255),b
 13827  015F04  0ED1               	movlw	low getStringSecondsAsTime@buff
 13828  015F06  6F02               	movwf	strcat@from& (0+255),b
 13829  015F08  0E03               	movlw	high getStringSecondsAsTime@buff
 13830  015F0A  6F03               	movwf	(strcat@from+1)& (0+255),b
 13831  015F0C  EC97  F0DA         	call	_strcat	;wreg free
 13832  015F10                     l19435:
 13833                           
 13834                           ;heartbeat_timer.c: 119: };heartbeat_timer.c: 121: if (hours > 0) {
 13835  015F10  0103               	movlb	3	; () banked
 13836  015F12  51E9               	movf	getStringSecondsAsTime@hours& (0+255),w,b
 13837  015F14  B4D8               	btfsc	status,2,c
 13838  015F16  D02B               	goto	l19445
 13839                           
 13840                           ; BSR set to: 3
 13841                           ;heartbeat_timer.c: 123: if (hours == 1) {
 13842  015F18  05E9               	decf	getStringSecondsAsTime@hours& (0+255),w,b
 13843  015F1A  A4D8               	btfss	status,2,c
 13844  015F1C  D00F               	goto	l19441
 13845                           
 13846                           ; BSR set to: 3
 13847                           ;heartbeat_timer.c: 125: sprintf(buff, "%d hour, ", hours);
 13848  015F1E  0ED1               	movlw	low getStringSecondsAsTime@buff
 13849  015F20  0102               	movlb	2	; () banked
 13850  015F22  6F8C               	movwf	sprintf@wh& (0+255),b
 13851  015F24  0E03               	movlw	high getStringSecondsAsTime@buff
 13852  015F26  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13853  015F28  0E80               	movlw	low STR_54
 13854  015F2A  6F8E               	movwf	sprintf@f& (0+255),b
 13855  015F2C  0EFE               	movlw	high STR_54
 13856  015F2E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13857  015F30  C3E9  F290         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13858  015F34  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13859  015F36  EC38  F0DD         	call	_sprintf	;wreg free
 13860                           
 13861                           ;heartbeat_timer.c: 127: }
 13862  015F3A  D00E               	goto	l19443
 13863  015F3C                     l19441:
 13864                           
 13865                           ; BSR set to: 3
 13866                           ;heartbeat_timer.c: 129: else {;heartbeat_timer.c: 131: sprintf(buff, "%d hours, ", hour
      +                          s);
 13867  015F3C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13868  015F3E  0102               	movlb	2	; () banked
 13869  015F40  6F8C               	movwf	sprintf@wh& (0+255),b
 13870  015F42  0E03               	movlw	high getStringSecondsAsTime@buff
 13871  015F44  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13872  015F46  0E20               	movlw	low STR_55
 13873  015F48  6F8E               	movwf	sprintf@f& (0+255),b
 13874  015F4A  0EFE               	movlw	high STR_55
 13875  015F4C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13876  015F4E  C3E9  F290         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13877  015F52  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13878  015F54  EC38  F0DD         	call	_sprintf	;wreg free
 13879  015F58                     l19443:
 13880                           
 13881                           ;heartbeat_timer.c: 133: };heartbeat_timer.c: 135: strcat(return_string, buff);
 13882  015F58  0E84               	movlw	low getStringSecondsAsTime@return_string
 13883  015F5A  0102               	movlb	2	; () banked
 13884  015F5C  6F00               	movwf	strcat@to& (0+255),b
 13885  015F5E  0E03               	movlw	high getStringSecondsAsTime@return_string
 13886  015F60  6F01               	movwf	(strcat@to+1)& (0+255),b
 13887  015F62  0ED1               	movlw	low getStringSecondsAsTime@buff
 13888  015F64  6F02               	movwf	strcat@from& (0+255),b
 13889  015F66  0E03               	movlw	high getStringSecondsAsTime@buff
 13890  015F68  6F03               	movwf	(strcat@from+1)& (0+255),b
 13891  015F6A  EC97  F0DA         	call	_strcat	;wreg free
 13892  015F6E                     l19445:
 13893                           
 13894                           ;heartbeat_timer.c: 137: };heartbeat_timer.c: 139: if (minutes > 0) {
 13895  015F6E  0103               	movlb	3	; () banked
 13896  015F70  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13897  015F72  B4D8               	btfsc	status,2,c
 13898  015F74  D02B               	goto	l19455
 13899                           
 13900                           ; BSR set to: 3
 13901                           ;heartbeat_timer.c: 141: if (minutes == 1) {
 13902  015F76  05EA               	decf	getStringSecondsAsTime@minutes& (0+255),w,b
 13903  015F78  A4D8               	btfss	status,2,c
 13904  015F7A  D00F               	goto	l19451
 13905                           
 13906                           ; BSR set to: 3
 13907                           ;heartbeat_timer.c: 143: sprintf(buff, "%d minute, ", minutes);
 13908  015F7C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13909  015F7E  0102               	movlb	2	; () banked
 13910  015F80  6F8C               	movwf	sprintf@wh& (0+255),b
 13911  015F82  0E03               	movlw	high getStringSecondsAsTime@buff
 13912  015F84  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13913  015F86  0E98               	movlw	low STR_56
 13914  015F88  6F8E               	movwf	sprintf@f& (0+255),b
 13915  015F8A  0EFD               	movlw	high STR_56
 13916  015F8C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13917  015F8E  C3EA  F290         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13918  015F92  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13919  015F94  EC38  F0DD         	call	_sprintf	;wreg free
 13920                           
 13921                           ;heartbeat_timer.c: 145: }
 13922  015F98  D00E               	goto	l19453
 13923  015F9A                     l19451:
 13924                           
 13925                           ; BSR set to: 3
 13926                           ;heartbeat_timer.c: 147: else {;heartbeat_timer.c: 149: sprintf(buff, "%d minutes, ", mi
      +                          nutes);
 13927  015F9A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13928  015F9C  0102               	movlb	2	; () banked
 13929  015F9E  6F8C               	movwf	sprintf@wh& (0+255),b
 13930  015FA0  0E03               	movlw	high getStringSecondsAsTime@buff
 13931  015FA2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13932  015FA4  0E34               	movlw	low STR_57
 13933  015FA6  6F8E               	movwf	sprintf@f& (0+255),b
 13934  015FA8  0EFD               	movlw	high STR_57
 13935  015FAA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13936  015FAC  C3EA  F290         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13937  015FB0  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13938  015FB2  EC38  F0DD         	call	_sprintf	;wreg free
 13939  015FB6                     l19453:
 13940                           
 13941                           ;heartbeat_timer.c: 151: };heartbeat_timer.c: 153: strcat(return_string, buff);
 13942  015FB6  0E84               	movlw	low getStringSecondsAsTime@return_string
 13943  015FB8  0102               	movlb	2	; () banked
 13944  015FBA  6F00               	movwf	strcat@to& (0+255),b
 13945  015FBC  0E03               	movlw	high getStringSecondsAsTime@return_string
 13946  015FBE  6F01               	movwf	(strcat@to+1)& (0+255),b
 13947  015FC0  0ED1               	movlw	low getStringSecondsAsTime@buff
 13948  015FC2  6F02               	movwf	strcat@from& (0+255),b
 13949  015FC4  0E03               	movlw	high getStringSecondsAsTime@buff
 13950  015FC6  6F03               	movwf	(strcat@from+1)& (0+255),b
 13951  015FC8  EC97  F0DA         	call	_strcat	;wreg free
 13952  015FCC                     l19455:
 13953                           
 13954                           ;heartbeat_timer.c: 155: };heartbeat_timer.c: 157: if (seconds > 0) {
 13955  015FCC  0103               	movlb	3	; () banked
 13956  015FCE  51E6               	movf	getStringSecondsAsTime@seconds& (0+255),w,b
 13957  015FD0  B4D8               	btfsc	status,2,c
 13958  015FD2  D02B               	goto	l19465
 13959                           
 13960                           ; BSR set to: 3
 13961                           ;heartbeat_timer.c: 159: if (seconds == 1) {
 13962  015FD4  05E6               	decf	getStringSecondsAsTime@seconds& (0+255),w,b
 13963  015FD6  A4D8               	btfss	status,2,c
 13964  015FD8  D00F               	goto	l19461
 13965                           
 13966                           ; BSR set to: 3
 13967                           ;heartbeat_timer.c: 161: sprintf(buff, "%d second", seconds);
 13968  015FDA  0ED1               	movlw	low getStringSecondsAsTime@buff
 13969  015FDC  0102               	movlb	2	; () banked
 13970  015FDE  6F8C               	movwf	sprintf@wh& (0+255),b
 13971  015FE0  0E03               	movlw	high getStringSecondsAsTime@buff
 13972  015FE2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13973  015FE4  0E94               	movlw	low STR_58
 13974  015FE6  6F8E               	movwf	sprintf@f& (0+255),b
 13975  015FE8  0EFE               	movlw	high STR_58
 13976  015FEA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13977  015FEC  C3E6  F290         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13978  015FF0  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13979  015FF2  EC38  F0DD         	call	_sprintf	;wreg free
 13980                           
 13981                           ;heartbeat_timer.c: 163: }
 13982  015FF6  D00E               	goto	l19463
 13983  015FF8                     l19461:
 13984                           
 13985                           ; BSR set to: 3
 13986                           ;heartbeat_timer.c: 165: else {;heartbeat_timer.c: 167: sprintf(buff, "%d seconds", seco
      +                          nds);
 13987  015FF8  0ED1               	movlw	low getStringSecondsAsTime@buff
 13988  015FFA  0102               	movlb	2	; () banked
 13989  015FFC  6F8C               	movwf	sprintf@wh& (0+255),b
 13990  015FFE  0E03               	movlw	high getStringSecondsAsTime@buff
 13991  016000  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13992  016002  0E2B               	movlw	low STR_59
 13993  016004  6F8E               	movwf	sprintf@f& (0+255),b
 13994  016006  0EFE               	movlw	high STR_59
 13995  016008  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13996  01600A  C3E6  F290         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13997  01600E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13998  016010  EC38  F0DD         	call	_sprintf	;wreg free
 13999  016014                     l19463:
 14000                           
 14001                           ;heartbeat_timer.c: 169: };heartbeat_timer.c: 171: strcat(return_string, buff);
 14002  016014  0E84               	movlw	low getStringSecondsAsTime@return_string
 14003  016016  0102               	movlb	2	; () banked
 14004  016018  6F00               	movwf	strcat@to& (0+255),b
 14005  01601A  0E03               	movlw	high getStringSecondsAsTime@return_string
 14006  01601C  6F01               	movwf	(strcat@to+1)& (0+255),b
 14007  01601E  0ED1               	movlw	low getStringSecondsAsTime@buff
 14008  016020  6F02               	movwf	strcat@from& (0+255),b
 14009  016022  0E03               	movlw	high getStringSecondsAsTime@buff
 14010  016024  6F03               	movwf	(strcat@from+1)& (0+255),b
 14011  016026  EC97  F0DA         	call	_strcat	;wreg free
 14012  01602A                     l19465:
 14013                           
 14014                           ;heartbeat_timer.c: 173: };heartbeat_timer.c: 175: return return_string;
 14015  01602A  0E84               	movlw	low getStringSecondsAsTime@return_string
 14016  01602C  0102               	movlb	2	; () banked
 14017  01602E  6F9F               	movwf	?_getStringSecondsAsTime& (0+255),b
 14018  016030  0E03               	movlw	high getStringSecondsAsTime@return_string
 14019  016032  6FA0               	movwf	(?_getStringSecondsAsTime+1)& (0+255),b
 14020                           
 14021                           ; BSR set to: 2
 14022  016034  0012               	return		;funcret
 14023  016036                     __end_of_getStringSecondsAsTime:
 14024                           	opt callstack 0
 14025                           
 14026 ;; *************** function _strcat *****************
 14027 ;; Defined at:
 14028 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
 14029 ;; Parameters:    Size  Location     Type
 14030 ;;  to              2    0[BANK2 ] PTR unsigned char 
 14031 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 14032 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 14033 ;;		 -> STR_331(2), STR_330(3), STR_329(3), STR_328(3), 
 14034 ;;		 -> STR_327(3), STR_326(3), STR_325(3), STR_324(3), 
 14035 ;;		 -> STR_323(3), STR_322(3), STR_321(2), STR_320(3), 
 14036 ;;		 -> STR_319(3), STR_318(3), STR_317(3), STR_316(3), 
 14037 ;;		 -> STR_315(3), STR_314(3), STR_313(3), STR_312(3), 
 14038 ;;		 -> STR_311(2), STR_310(2), STR_309(2), STR_308(2), 
 14039 ;;		 -> STR_307(2), STR_306(2), STR_305(2), STR_304(2), 
 14040 ;;		 -> getStringSecondsAsTime@buff(20), 
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;  cp              2    4[BANK2 ] PTR unsigned char 
 14043 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  2    0[BANK2 ] PTR unsigned char 
 14046 ;; Registers used:
 14047 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14053 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14054 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14056 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14057 ;;Total ram usage:        6 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:   11
 14060 ;; This function calls:
 14061 ;;		Nothing
 14062 ;; This function is called by:
 14063 ;;		_getStringSecondsAsTime
 14064 ;;		_terminalTextAttributes
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text11
 14069  01B52E                     __ptext11:
 14070                           	opt callstack 0
 14071  01B52E                     _strcat:
 14072                           	opt callstack 16
 14073                           
 14074                           ; BSR set to: 2
 14075                           ;incstack = 0
 14076  01B52E  C200  F204         	movff	strcat@to,strcat@cp
 14077  01B532  C201  F205         	movff	strcat@to+1,strcat@cp+1
 14078  01B536  D003               	goto	l18613
 14079  01B538                     l18611:
 14080  01B538  0102               	movlb	2	; () banked
 14081  01B53A  4B04               	infsnz	strcat@cp& (0+255),f,b
 14082  01B53C  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 14083  01B53E                     l18613:
 14084  01B53E  C204  FFD9         	movff	strcat@cp,fsr2l
 14085  01B542  C205  FFDA         	movff	strcat@cp+1,fsr2h
 14086  01B546  50DF               	movf	indf2,w,c
 14087  01B548  B4D8               	btfsc	status,2,c
 14088  01B54A  D006               	goto	l18617
 14089  01B54C  D7F5               	goto	l18611
 14090  01B54E                     l18615:
 14091  01B54E  0102               	movlb	2	; () banked
 14092  01B550  4B04               	infsnz	strcat@cp& (0+255),f,b
 14093  01B552  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 14094  01B554  4B02               	infsnz	strcat@from& (0+255),f,b
 14095  01B556  2B03               	incf	(strcat@from+1)& (0+255),f,b
 14096  01B558                     l18617:
 14097  01B558  C202  FFF6         	movff	strcat@from,tblptrl
 14098  01B55C  C203  FFF7         	movff	strcat@from+1,tblptrh
 14099  01B560  0E00               	movlw	low (__mediumconst shr (0+16))
 14100  01B562  6EF8               	movwf	tblptru,c
 14101  01B564  C204  FFD9         	movff	strcat@cp,fsr2l
 14102  01B568  C205  FFDA         	movff	strcat@cp+1,fsr2h
 14103  01B56C  0E0E               	movlw	(high __ramtop+-1)
 14104  01B56E  64F7               	cpfsgt	tblptrh,c
 14105  01B570  D003               	bra	u23327
 14106  01B572  0008               	tblrd		*
 14107  01B574  50F5               	movf	tablat,w,c
 14108  01B576  D005               	bra	u23320
 14109  01B578                     u23327:
 14110  01B578  CFF6 FFE9          	movff	tblptrl,fsr0l
 14111  01B57C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14112  01B580  50EF               	movf	indf0,w,c
 14113  01B582                     u23320:
 14114  01B582  6EDF               	movwf	indf2,c
 14115  01B584  50DF               	movf	indf2,w,c
 14116  01B586  B4D8               	btfsc	status,2,c
 14117  01B588  0012               	return	
 14118  01B58A  D7E1               	goto	l18615
 14119  01B58C                     __end_of_strcat:
 14120                           	opt callstack 0
 14121                           
 14122 ;; *************** function _getNXQChargeStateString *****************
 14123 ;; Defined at:
 14124 ;;		line 9 in file "NXQ_charge_state.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  2    0[BANK2 ] PTR unsigned char 
 14131 ;; Registers used:
 14132 ;;		wreg, status,2, status,0
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14138 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14141 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14142 ;;Total ram usage:        2 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   11
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_printCurrentMeasurements
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text12
 14153  01B58C                     __ptext12:
 14154                           	opt callstack 0
 14155  01B58C                     _getNXQChargeStateString:
 14156                           	opt callstack 16
 14157                           
 14158                           ;NXQ_charge_state.c: 11: switch (nxq_charge_state) {
 14159                           
 14160                           ;incstack = 0
 14161  01B58C  D01E               	goto	l19391
 14162  01B58E                     l19359:
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;NXQ_charge_state.c: 14: return "idle";
 14166  01B58E  0EAE               	movlw	low STR_13
 14167  01B590  0102               	movlb	2	; () banked
 14168  01B592  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14169  01B594  0EFF               	movlw	high STR_13
 14170  01B596  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14171  01B598  0012               	return	
 14172  01B59A                     l19365:
 14173                           
 14174                           ; BSR set to: 1
 14175                           ;NXQ_charge_state.c: 18: return "charging";
 14176  01B59A  0E29               	movlw	low STR_14
 14177  01B59C  0102               	movlb	2	; () banked
 14178  01B59E  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14179  01B5A0  0EFF               	movlw	high STR_14
 14180  01B5A2  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14181  01B5A4  0012               	return	
 14182  01B5A6                     l19371:
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;NXQ_charge_state.c: 22: return "fully charged";
 14186  01B5A6  0ECB               	movlw	low STR_15
 14187  01B5A8  0102               	movlb	2	; () banked
 14188  01B5AA  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14189  01B5AC  0EFC               	movlw	high STR_15
 14190  01B5AE  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14191  01B5B0  0012               	return	
 14192  01B5B2                     l19377:
 14193                           
 14194                           ; BSR set to: 1
 14195                           ;NXQ_charge_state.c: 26: return "error";
 14196  01B5B2  0E8A               	movlw	low STR_16
 14197  01B5B4  0102               	movlb	2	; () banked
 14198  01B5B6  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14199  01B5B8  0EFF               	movlw	high STR_16
 14200  01B5BA  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14201  01B5BC  0012               	return	
 14202  01B5BE                     l19383:
 14203                           
 14204                           ; BSR set to: 1
 14205                           ;NXQ_charge_state.c: 30: return "undefined";
 14206  01B5BE  0EBC               	movlw	low STR_17
 14207  01B5C0  0102               	movlb	2	; () banked
 14208  01B5C2  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14209  01B5C4  0EFE               	movlw	high STR_17
 14210  01B5C6  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14211  01B5C8  0012               	return	
 14212  01B5CA                     l19391:
 14213  01B5CA  0101               	movlb	1	; () banked
 14214  01B5CC  5195               	movf	_nxq_charge_state& (0+255),w,b
 14215                           
 14216                           ; Switch size 1, requested type "simple"
 14217                           ; Number of cases is 4, Range of values is 0 to 3
 14218                           ; switch strategies available:
 14219                           ; Name         Instructions Cycles
 14220                           ; simple_byte           13     7 (average)
 14221                           ;	Chosen strategy is simple_byte
 14222  01B5CE  0A00               	xorlw	0	; case 0
 14223  01B5D0  B4D8               	btfsc	status,2,c
 14224  01B5D2  D7DD               	goto	l19359
 14225  01B5D4  0A01               	xorlw	1	; case 1
 14226  01B5D6  B4D8               	btfsc	status,2,c
 14227  01B5D8  D7E0               	goto	l19365
 14228  01B5DA  0A03               	xorlw	3	; case 2
 14229  01B5DC  B4D8               	btfsc	status,2,c
 14230  01B5DE  D7E3               	goto	l19371
 14231  01B5E0  0A01               	xorlw	1	; case 3
 14232  01B5E2  B4D8               	btfsc	status,2,c
 14233  01B5E4  D7E6               	goto	l19377
 14234  01B5E6  D7EB               	goto	l19383
 14235  01B5E8                     __end_of_getNXQChargeStateString:
 14236                           	opt callstack 0
 14237                           
 14238 ;; *************** function _getUserID *****************
 14239 ;; Defined at:
 14240 ;;		line 72 in file "device_IDs.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  inputUserID     1    wreg     unsigned char 
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;  inputUserID     1   17[BANK2 ] unsigned char 
 14245 ;;  initialOffse    4    0        unsigned long 
 14246 ;;  IDOffset        1   18[BANK2 ] unsigned char 
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  2   11[BANK2 ] unsigned int 
 14249 ;; Registers used:
 14250 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14256 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14257 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14259 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14260 ;;Total ram usage:        8 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; Hardware stack levels required when called:   13
 14263 ;; This function calls:
 14264 ;;		_FLASH_ReadWord
 14265 ;; This function is called by:
 14266 ;;		_ringBufferLUT
 14267 ;; This function uses a non-reentrant model
 14268 ;;
 14269                           
 14270                           	psect	text13
 14271  01BFFE                     __ptext13:
 14272                           	opt callstack 0
 14273  01BFFE                     _getUserID:
 14274                           	opt callstack 15
 14275                           
 14276                           ; BSR set to: 2
 14277                           ;incstack = 0
 14278                           ;getUserID@inputUserID stored from wreg
 14279  01BFFE  0102               	movlb	2	; () banked
 14280  01C000  6F11               	movwf	getUserID@inputUserID& (0+255),b
 14281                           
 14282                           ;device_IDs.c: 78: uint8_t IDOffset = inputUserID * 2;
 14283  01C002  0102               	movlb	2	; () banked
 14284  01C004  5111               	movf	getUserID@inputUserID& (0+255),w,b
 14285  01C006  0D02               	mullw	2
 14286  01C008  CFF3 F212          	movff	prodl,getUserID@IDOffset
 14287                           
 14288                           ; BSR set to: 2
 14289                           ;device_IDs.c: 80: return FLASH_ReadWord(initialOffset + IDOffset);
 14290  01C00C  0E00               	movlw	0
 14291  01C00E  2512               	addwf	getUserID@IDOffset& (0+255),w,b
 14292  01C010  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14293  01C012  6B05               	clrf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14294  01C014  0E00               	movlw	0
 14295  01C016  2305               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),f,b
 14296  01C018  6B06               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14297  01C01A  0E20               	movlw	32
 14298  01C01C  2306               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),f,b
 14299  01C01E  6B07               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14300  01C020  0E00               	movlw	0
 14301  01C022  2307               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),f,b
 14302  01C024  EC73  F0DE         	call	_FLASH_ReadWord	;wreg free
 14303  01C028  C204  F20B         	movff	?_FLASH_ReadWord,?_getUserID
 14304  01C02C  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 14305  01C030  0012               	return		;funcret
 14306  01C032                     __end_of_getUserID:
 14307                           	opt callstack 0
 14308                           
 14309 ;; *************** function _getDeviceIDString *****************
 14310 ;; Defined at:
 14311 ;;		line 34 in file "device_IDs.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  inputDevID      2   13[BANK2 ] unsigned int 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;		None
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  2   13[BANK2 ] PTR inline unsigned char
 14318 ;; Registers used:
 14319 ;;		wreg, status,2, status,0
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14325 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14327 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14328 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14329 ;;Total ram usage:        4 bytes
 14330 ;; Hardware stack levels used:    1
 14331 ;; Hardware stack levels required when called:   11
 14332 ;; This function calls:
 14333 ;;		Nothing
 14334 ;; This function is called by:
 14335 ;;		_ringBufferLUT
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           	psect	text14
 14340  01ACFA                     __ptext14:
 14341                           	opt callstack 0
 14342  01ACFA                     _getDeviceIDString:
 14343                           	opt callstack 17
 14344                           
 14345                           ;device_IDs.c: 38: switch (inputDevID) {
 14346                           
 14347                           ;incstack = 0
 14348  01ACFA  D023               	goto	l20083
 14349  01ACFC                     l20039:
 14350                           
 14351                           ; BSR set to: 2
 14352                           ;device_IDs.c: 41: return "PIC18F67K40";
 14353  01ACFC  0EBC               	movlw	low STR_43
 14354  01ACFE  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14355  01AD00  0EFD               	movlw	high STR_43
 14356  01AD02  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14357  01AD04  0012               	return	
 14358  01AD06                     l20045:
 14359                           
 14360                           ; BSR set to: 2
 14361                           ;device_IDs.c: 45: return "PIC18LF67K40";
 14362  01AD06  0E5B               	movlw	low STR_44
 14363  01AD08  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14364  01AD0A  0EFD               	movlw	high STR_44
 14365  01AD0C  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14366  01AD0E  0012               	return	
 14367  01AD10                     l20051:
 14368                           
 14369                           ; BSR set to: 2
 14370                           ;device_IDs.c: 49: return "PIC18F27K40";
 14371  01AD10  0EA4               	movlw	low STR_45
 14372  01AD12  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14373  01AD14  0EFD               	movlw	high STR_45
 14374  01AD16  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14375  01AD18  0012               	return	
 14376  01AD1A                     l20057:
 14377                           
 14378                           ; BSR set to: 2
 14379                           ;device_IDs.c: 53: return "PIC18F47K40";
 14380  01AD1A  0EB0               	movlw	low STR_46
 14381  01AD1C  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14382  01AD1E  0EFD               	movlw	high STR_46
 14383  01AD20  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14384  01AD22  0012               	return	
 14385  01AD24                     l20063:
 14386                           
 14387                           ; BSR set to: 2
 14388                           ;device_IDs.c: 57: return "PIC18LF27K40";
 14389  01AD24  0E41               	movlw	low STR_47
 14390  01AD26  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14391  01AD28  0EFD               	movlw	high STR_47
 14392  01AD2A  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14393  01AD2C  0012               	return	
 14394  01AD2E                     l20069:
 14395                           
 14396                           ; BSR set to: 2
 14397                           ;device_IDs.c: 61: return "PIC18LF47K40";
 14398  01AD2E  0E4E               	movlw	low STR_48
 14399  01AD30  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14400  01AD32  0EFD               	movlw	high STR_48
 14401  01AD34  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14402  01AD36  0012               	return	
 14403  01AD38                     l20075:
 14404                           
 14405                           ; BSR set to: 2
 14406                           ;device_IDs.c: 65: return "Undefined";
 14407  01AD38  0EB2               	movlw	low STR_22
 14408  01AD3A  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14409  01AD3C  0EFE               	movlw	high STR_22
 14410  01AD3E  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14411  01AD40  0012               	return	
 14412  01AD42                     l20083:
 14413  01AD42  C20D  F20F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 14414  01AD46  C20E  F210         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 14415                           
 14416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 14417                           ; Switch size 1, requested type "simple"
 14418                           ; Number of cases is 3, Range of values is 105 to 107
 14419                           ; switch strategies available:
 14420                           ; Name         Instructions Cycles
 14421                           ; simple_byte           10     6 (average)
 14422                           ;	Chosen strategy is simple_byte
 14423  01AD4A  0102               	movlb	2	; () banked
 14424  01AD4C  5110               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 14425  01AD4E  0A69               	xorlw	105	; case 105
 14426  01AD50  B4D8               	btfsc	status,2,c
 14427  01AD52  D007               	goto	l22795
 14428  01AD54  0A03               	xorlw	3	; case 106
 14429  01AD56  B4D8               	btfsc	status,2,c
 14430  01AD58  D00F               	goto	l22797
 14431  01AD5A  0A01               	xorlw	1	; case 107
 14432  01AD5C  B4D8               	btfsc	status,2,c
 14433  01AD5E  D014               	goto	l22799
 14434  01AD60  D7EB               	goto	l20075
 14435  01AD62                     l22795:
 14436                           
 14437                           ; BSR set to: 2
 14438                           ; Switch size 1, requested type "simple"
 14439                           ; Number of cases is 3, Range of values is 0 to 224
 14440                           ; switch strategies available:
 14441                           ; Name         Instructions Cycles
 14442                           ; simple_byte           10     6 (average)
 14443                           ;	Chosen strategy is simple_byte
 14444  01AD62  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14445  01AD64  0A00               	xorlw	0	; case 0
 14446  01AD66  B4D8               	btfsc	status,2,c
 14447  01AD68  D7D8               	goto	l20057
 14448  01AD6A  0A60               	xorlw	96	; case 96
 14449  01AD6C  B4D8               	btfsc	status,2,c
 14450  01AD6E  D7D0               	goto	l20051
 14451  01AD70  0A80               	xorlw	128	; case 224
 14452  01AD72  B4D8               	btfsc	status,2,c
 14453  01AD74  D7DC               	goto	l20069
 14454  01AD76  D7E0               	goto	l20075
 14455  01AD78                     l22797:
 14456                           
 14457                           ; BSR set to: 2
 14458                           ; Switch size 1, requested type "simple"
 14459                           ; Number of cases is 2, Range of values is 64 to 192
 14460                           ; switch strategies available:
 14461                           ; Name         Instructions Cycles
 14462                           ; simple_byte            7     4 (average)
 14463                           ;	Chosen strategy is simple_byte
 14464  01AD78  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14465  01AD7A  0A40               	xorlw	64	; case 64
 14466  01AD7C  B4D8               	btfsc	status,2,c
 14467  01AD7E  D7D2               	goto	l20063
 14468  01AD80  0A80               	xorlw	128	; case 192
 14469  01AD82  B4D8               	btfsc	status,2,c
 14470  01AD84  D7BB               	goto	l20039
 14471  01AD86  D7D8               	goto	l20075
 14472  01AD88                     l22799:
 14473                           
 14474                           ; BSR set to: 2
 14475                           ; Switch size 1, requested type "simple"
 14476                           ; Number of cases is 1, Range of values is 32 to 32
 14477                           ; switch strategies available:
 14478                           ; Name         Instructions Cycles
 14479                           ; simple_byte            4     3 (average)
 14480                           ;	Chosen strategy is simple_byte
 14481  01AD88  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14482  01AD8A  0A20               	xorlw	32	; case 32
 14483  01AD8C  B4D8               	btfsc	status,2,c
 14484  01AD8E  D7BB               	goto	l20045
 14485  01AD90  D7D3               	goto	l20075
 14486  01AD92                     __end_of_getDeviceIDString:
 14487                           	opt callstack 0
 14488                           
 14489 ;; *************** function _getCauseOfResetString *****************
 14490 ;; Defined at:
 14491 ;;		line 87 in file "cause_of_reset.c"
 14492 ;; Parameters:    Size  Location     Type
 14493 ;;  r               1    wreg     enum E9577
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;  r               1    2[BANK2 ] enum E9577
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  2    0[BANK2 ] PTR inline unsigned char
 14498 ;; Registers used:
 14499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14505 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14506 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14508 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;Total ram usage:        3 bytes
 14510 ;; Hardware stack levels used:    1
 14511 ;; Hardware stack levels required when called:   11
 14512 ;; This function calls:
 14513 ;;		Nothing
 14514 ;; This function is called by:
 14515 ;;		_main
 14516 ;;		_ringBufferLUT
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text15
 14521  01C0CC                     __ptext15:
 14522                           	opt callstack 0
 14523  01C0CC                     _getCauseOfResetString:
 14524                           	opt callstack 17
 14525                           
 14526                           ; BSR set to: 2
 14527                           ;incstack = 0
 14528                           ;getCauseOfResetString@r stored from wreg
 14529  01C0CC  0102               	movlb	2	; () banked
 14530  01C0CE  6F02               	movwf	getCauseOfResetString@r& (0+255),b
 14531                           
 14532                           ;cause_of_reset.c: 90: static char *strings[] = {;cause_of_reset.c: 91: "Undefined Reset
      +                          ",;cause_of_reset.c: 92: "Power On Reset",;cause_of_reset.c: 93: "Brown Out Reset",;caus
      +                          e_of_reset.c: 94: "Master Clear Reset",;cause_of_reset.c: 95: "Watch Dog Timer Violation
      +                           Reset",;cause_of_reset.c: 96: "Windowed Watch Dog Timer Violation Reset",;cause_of_rese
      +                          t.c: 97: "RESET Instruction Executed",;cause_of_reset.c: 98: "Stack Overflow Reset",;cau
      +                          se_of_reset.c: 99: "Stack Underflow Reset",;cause_of_reset.c: 100: };;cause_of_reset.c: 
      +                          103: if (r <= 8) {
 14533  01C0D0  0E09               	movlw	9
 14534  01C0D2  0102               	movlb	2	; () banked
 14535  01C0D4  6102               	cpfslt	getCauseOfResetString@r& (0+255),b
 14536  01C0D6  D00D               	goto	l19967
 14537                           
 14538                           ; BSR set to: 2
 14539                           ;cause_of_reset.c: 105: return strings[r];
 14540  01C0D8  5102               	movf	getCauseOfResetString@r& (0+255),w,b
 14541  01C0DA  0D02               	mullw	2
 14542  01C0DC  0EA9               	movlw	low getCauseOfResetString@strings
 14543  01C0DE  24F3               	addwf	prodl,w,c
 14544  01C0E0  6ED9               	movwf	fsr2l,c
 14545  01C0E2  0E01               	movlw	high getCauseOfResetString@strings
 14546  01C0E4  20F4               	addwfc	prodh,w,c
 14547  01C0E6  6EDA               	movwf	fsr2h,c
 14548  01C0E8  CFDE F200          	movff	postinc2,?_getCauseOfResetString
 14549  01C0EC  CFDD F201          	movff	postdec2,?_getCauseOfResetString+1
 14550  01C0F0  0012               	return	
 14551  01C0F2                     l19967:
 14552                           
 14553                           ; BSR set to: 2
 14554                           ;cause_of_reset.c: 109: else {;cause_of_reset.c: 111: return "Undefined Reset";
 14555  01C0F2  0E9A               	movlw	low STR_23
 14556  01C0F4  6F00               	movwf	?_getCauseOfResetString& (0+255),b
 14557  01C0F6  0EFB               	movlw	high STR_23
 14558  01C0F8  6F01               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 14559                           
 14560                           ; BSR set to: 2
 14561  01C0FA  0012               	return		;funcret
 14562  01C0FC                     __end_of_getCauseOfResetString:
 14563                           	opt callstack 0
 14564                           
 14565 ;; *************** function _clearUARTErrors *****************
 14566 ;; Defined at:
 14567 ;;		line 85 in file "error_handling.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;		None
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1    wreg      void 
 14574 ;; Registers used:
 14575 ;;		wreg, status,2, status,0, cstack
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14585 ;;Total ram usage:        0 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:   13
 14588 ;; This function calls:
 14589 ;;		_updateErrorLEDs
 14590 ;; This function is called by:
 14591 ;;		_ringBufferLUT
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text16
 14596  01C848                     __ptext16:
 14597                           	opt callstack 0
 14598  01C848                     _clearUARTErrors:
 14599                           	opt callstack 15
 14600                           
 14601                           ;error_handling.c: 88: error_handler.USB_UART_COMM_error_flag = 0;
 14602                           
 14603                           ; BSR set to: 2
 14604                           ;incstack = 0
 14605  01C848  0E00               	movlw	0
 14606  01C84A  0100               	movlb	0	; () banked
 14607  01C84C  6FC0               	movwf	(_error_handler+7)& (0+255),b
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;error_handling.c: 90: updateErrorLEDs();
 14611  01C84E  ECA4  F0DD         	call	_updateErrorLEDs	;wreg free
 14612  01C852  0012               	return		;funcret
 14613  01C854                     __end_of_clearUARTErrors:
 14614                           	opt callstack 0
 14615                           
 14616 ;; *************** function _clearI2CErrors *****************
 14617 ;; Defined at:
 14618 ;;		line 95 in file "error_handling.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		wreg, status,2, status,0, cstack
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;Total ram usage:        0 bytes
 14637 ;; Hardware stack levels used:    1
 14638 ;; Hardware stack levels required when called:   13
 14639 ;; This function calls:
 14640 ;;		_updateErrorLEDs
 14641 ;; This function is called by:
 14642 ;;		_ringBufferLUT
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           	psect	text17
 14647  01C52E                     __ptext17:
 14648                           	opt callstack 0
 14649  01C52E                     _clearI2CErrors:
 14650                           	opt callstack 15
 14651                           
 14652                           ;error_handling.c: 97: error_handler.I2C_Ambient_Temp_Sense_error_flag = 0;
 14653                           
 14654                           ;incstack = 0
 14655  01C52E  0E00               	movlw	0
 14656  01C530  0100               	movlb	0	; () banked
 14657  01C532  6FBF               	movwf	(_error_handler+6)& (0+255),b
 14658                           
 14659                           ;error_handling.c: 98: error_handler.I2C_General_error_flag = 0;
 14660  01C534  0E00               	movlw	0
 14661  01C536  6FBB               	movwf	(_error_handler+2)& (0+255),b
 14662                           
 14663                           ;error_handling.c: 99: error_handler.I2C_OLED_error_flag = 0;
 14664  01C538  0E00               	movlw	0
 14665  01C53A  6FBC               	movwf	(_error_handler+3)& (0+255),b
 14666                           
 14667                           ;error_handling.c: 100: error_handler.I2C_POS5_Temp_Sense_error_flag = 0;
 14668  01C53C  0E00               	movlw	0
 14669  01C53E  6FBE               	movwf	(_error_handler+5)& (0+255),b
 14670                           
 14671                           ;error_handling.c: 101: error_handler.I2C_QI_Temp_Sense_error_flag = 0;
 14672  01C540  0E00               	movlw	0
 14673  01C542  6FBD               	movwf	(_error_handler+4)& (0+255),b
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;error_handling.c: 103: updateErrorLEDs();
 14677  01C544  ECA4  F0DD         	call	_updateErrorLEDs	;wreg free
 14678  01C548  0012               	return		;funcret
 14679  01C54A                     __end_of_clearI2CErrors:
 14680                           	opt callstack 0
 14681                           
 14682 ;; *************** function _clearADCErrors *****************
 14683 ;; Defined at:
 14684 ;;		line 74 in file "error_handling.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;		None
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;		None
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  1    wreg      void 
 14691 ;; Registers used:
 14692 ;;		wreg, status,2, status,0, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14702 ;;Total ram usage:        0 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:   13
 14705 ;; This function calls:
 14706 ;;		_updateErrorLEDs
 14707 ;; This function is called by:
 14708 ;;		_ringBufferLUT
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text18
 14713  01C73A                     __ptext18:
 14714                           	opt callstack 0
 14715  01C73A                     _clearADCErrors:
 14716                           	opt callstack 15
 14717                           
 14718                           ;error_handling.c: 77: error_handler.FVR_ADC_error_flag = 0;
 14719                           
 14720                           ;incstack = 0
 14721  01C73A  0E00               	movlw	0
 14722  01C73C  0100               	movlb	0	; () banked
 14723  01C73E  6FB9               	movwf	_error_handler& (0+255),b
 14724                           
 14725                           ;error_handling.c: 78: error_handler.ADC_general_error_flag = 0;
 14726  01C740  0E00               	movlw	0
 14727  01C742  6FBA               	movwf	(_error_handler+1)& (0+255),b
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;error_handling.c: 80: updateErrorLEDs();
 14731  01C744  ECA4  F0DD         	call	_updateErrorLEDs	;wreg free
 14732  01C748  0012               	return		;funcret
 14733  01C74A                     __end_of_clearADCErrors:
 14734                           	opt callstack 0
 14735                           
 14736 ;; *************** function _updateErrorLEDs *****************
 14737 ;; Defined at:
 14738 ;;		line 60 in file "error_handling.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;		None
 14741 ;; Auto vars:     Size  Location     Type
 14742 ;;		None
 14743 ;; Return value:  Size  Location     Type
 14744 ;;                  1    wreg      void 
 14745 ;; Registers used:
 14746 ;;		wreg, status,2, status,0, cstack
 14747 ;; Tracked objects:
 14748 ;;		On entry : 0/0
 14749 ;;		On exit  : 0/0
 14750 ;;		Unchanged: 0/0
 14751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14754 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14755 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14756 ;;Total ram usage:        1 bytes
 14757 ;; Hardware stack levels used:    1
 14758 ;; Hardware stack levels required when called:   12
 14759 ;; This function calls:
 14760 ;;		_getADCError
 14761 ;;		_getI2CError
 14762 ;;		_getUARTError
 14763 ;; This function is called by:
 14764 ;;		_main
 14765 ;;		_clearADCErrors
 14766 ;;		_clearUARTErrors
 14767 ;;		_clearI2CErrors
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text19
 14772  01BB48                     __ptext19:
 14773                           	opt callstack 0
 14774  01BB48                     _updateErrorLEDs:
 14775                           	opt callstack 18
 14776                           
 14777                           ;error_handling.c: 63: LATBbits.LATB7 = getADCError();
 14778                           
 14779                           ;incstack = 0
 14780  01BB48  EC1D  F0E3         	call	_getADCError	;wreg free
 14781  01BB4C  0102               	movlb	2	; () banked
 14782  01BB4E  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14783  01BB50  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14784  01BB52  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14785  01BB54  5084               	movf	3972,w,c	;volatile
 14786  01BB56  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14787  01BB58  0B7F               	andlw	-129
 14788  01BB5A  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14789  01BB5C  6E84               	movwf	3972,c	;volatile
 14790                           
 14791                           ;error_handling.c: 66: LATCbits.LATC5 = getI2CError();
 14792  01BB5E  EC48  F0E1         	call	_getI2CError	;wreg free
 14793  01BB62  0102               	movlb	2	; () banked
 14794  01BB64  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14795  01BB66  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14796  01BB68  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14797  01BB6A  5085               	movf	3973,w,c	;volatile
 14798  01BB6C  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14799  01BB6E  0BDF               	andlw	-33
 14800  01BB70  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14801  01BB72  6E85               	movwf	3973,c	;volatile
 14802                           
 14803                           ;error_handling.c: 69: LATCbits.LATC6 = getUARTError();
 14804  01BB74  EC59  F0E4         	call	_getUARTError	;wreg free
 14805  01BB78  0102               	movlb	2	; () banked
 14806  01BB7A  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14807  01BB7C  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14808  01BB7E  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14809  01BB80  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14810  01BB82  5085               	movf	3973,w,c	;volatile
 14811  01BB84  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14812  01BB86  0BBF               	andlw	-65
 14813  01BB88  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14814  01BB8A  6E85               	movwf	3973,c	;volatile
 14815                           
 14816                           ; BSR set to: 2
 14817  01BB8C  0012               	return		;funcret
 14818  01BB8E                     __end_of_updateErrorLEDs:
 14819                           	opt callstack 0
 14820                           
 14821 ;; *************** function _getUARTError *****************
 14822 ;; Defined at:
 14823 ;;		line 31 in file "error_handling.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;		None
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;		None
 14828 ;; Return value:  Size  Location     Type
 14829 ;;                  1    wreg      unsigned char 
 14830 ;; Registers used:
 14831 ;;		wreg, status,2
 14832 ;; Tracked objects:
 14833 ;;		On entry : 0/0
 14834 ;;		On exit  : 0/0
 14835 ;;		Unchanged: 0/0
 14836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;Total ram usage:        0 bytes
 14842 ;; Hardware stack levels used:    1
 14843 ;; Hardware stack levels required when called:   11
 14844 ;; This function calls:
 14845 ;;		Nothing
 14846 ;; This function is called by:
 14847 ;;		_updateErrorLEDs
 14848 ;;		_printErrorHandlerStatus
 14849 ;; This function uses a non-reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text20
 14853  01C8B2                     __ptext20:
 14854                           	opt callstack 0
 14855  01C8B2                     _getUARTError:
 14856                           	opt callstack 18
 14857                           
 14858                           ;error_handling.c: 33: return error_handler.USB_UART_COMM_error_flag;
 14859                           
 14860                           ; BSR set to: 2
 14861                           ;incstack = 0
 14862  01C8B2  0100               	movlb	0	; () banked
 14863  01C8B4  51C0               	movf	(_error_handler+7)& (0+255),w,b
 14864                           
 14865                           ; BSR set to: 0
 14866  01C8B6  0012               	return		;funcret
 14867  01C8B8                     __end_of_getUARTError:
 14868                           	opt callstack 0
 14869                           
 14870 ;; *************** function _getI2CError *****************
 14871 ;; Defined at:
 14872 ;;		line 38 in file "error_handling.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;		None
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1    wreg      unsigned char 
 14879 ;; Registers used:
 14880 ;;		wreg, status,2
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14890 ;;Total ram usage:        0 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; Hardware stack levels required when called:   11
 14893 ;; This function calls:
 14894 ;;		Nothing
 14895 ;; This function is called by:
 14896 ;;		_updateErrorLEDs
 14897 ;;		_printErrorHandlerStatus
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text21
 14902  01C290                     __ptext21:
 14903                           	opt callstack 0
 14904  01C290                     _getI2CError:
 14905                           	opt callstack 18
 14906                           
 14907                           ;error_handling.c: 41: if ( error_handler.I2C_General_error_flag ||;error_handling.c: 42
      +                          : error_handler.I2C_Ambient_Temp_Sense_error_flag ||;error_handling.c: 43: error_handler
      +                          .I2C_OLED_error_flag ||;error_handling.c: 44: error_handler.I2C_POS5_Temp_Sense_error_fl
      +                          ag ||;error_handling.c: 45: error_handler.I2C_QI_Temp_Sense_error_flag ) {
 14908                           
 14909                           ; BSR set to: 0
 14910                           ;incstack = 0
 14911  01C290  0100               	movlb	0	; () banked
 14912  01C292  51BB               	movf	(_error_handler+2)& (0+255),w,b
 14913  01C294  A4D8               	btfss	status,2,c
 14914  01C296  D00C               	goto	u23290
 14915                           
 14916                           ; BSR set to: 0
 14917  01C298  51BF               	movf	(_error_handler+6)& (0+255),w,b
 14918  01C29A  A4D8               	btfss	status,2,c
 14919  01C29C  D009               	goto	u23290
 14920                           
 14921                           ; BSR set to: 0
 14922  01C29E  51BC               	movf	(_error_handler+3)& (0+255),w,b
 14923  01C2A0  A4D8               	btfss	status,2,c
 14924  01C2A2  D006               	goto	u23290
 14925                           
 14926                           ; BSR set to: 0
 14927  01C2A4  51BE               	movf	(_error_handler+5)& (0+255),w,b
 14928  01C2A6  A4D8               	btfss	status,2,c
 14929  01C2A8  D003               	goto	u23290
 14930                           
 14931                           ; BSR set to: 0
 14932  01C2AA  51BD               	movf	(_error_handler+4)& (0+255),w,b
 14933  01C2AC  B4D8               	btfsc	status,2,c
 14934  01C2AE  D002               	goto	l18587
 14935  01C2B0                     u23290:
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;error_handling.c: 47: return 1;
 14939  01C2B0  0E01               	movlw	1
 14940  01C2B2  0012               	return	
 14941  01C2B4                     l18587:
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;error_handling.c: 51: else {;error_handling.c: 53: return 0;
 14945  01C2B4  0E00               	movlw	0
 14946                           
 14947                           ; BSR set to: 0
 14948  01C2B6  0012               	return		;funcret
 14949  01C2B8                     __end_of_getI2CError:
 14950                           	opt callstack 0
 14951                           
 14952 ;; *************** function _getADCError *****************
 14953 ;; Defined at:
 14954 ;;		line 12 in file "error_handling.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;		None
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;		None
 14959 ;; Return value:  Size  Location     Type
 14960 ;;                  1    wreg      unsigned char 
 14961 ;; Registers used:
 14962 ;;		wreg, status,2
 14963 ;; Tracked objects:
 14964 ;;		On entry : 0/0
 14965 ;;		On exit  : 0/0
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14972 ;;Total ram usage:        0 bytes
 14973 ;; Hardware stack levels used:    1
 14974 ;; Hardware stack levels required when called:   11
 14975 ;; This function calls:
 14976 ;;		Nothing
 14977 ;; This function is called by:
 14978 ;;		_updateErrorLEDs
 14979 ;;		_printErrorHandlerStatus
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text22
 14984  01C63A                     __ptext22:
 14985                           	opt callstack 0
 14986  01C63A                     _getADCError:
 14987                           	opt callstack 18
 14988                           
 14989                           ;error_handling.c: 15: if ( error_handler.ADC_general_error_flag ||;error_handling.c: 16
      +                          : error_handler.FVR_ADC_error_flag ) {
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;incstack = 0
 14993  01C63A  0100               	movlb	0	; () banked
 14994  01C63C  51BA               	movf	(_error_handler+1)& (0+255),w,b
 14995  01C63E  A4D8               	btfss	status,2,c
 14996  01C640  D003               	goto	u23240
 14997                           
 14998                           ; BSR set to: 0
 14999  01C642  51B9               	movf	_error_handler& (0+255),w,b
 15000  01C644  B4D8               	btfsc	status,2,c
 15001  01C646  D002               	goto	l18563
 15002  01C648                     u23240:
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;error_handling.c: 18: return 1;
 15006  01C648  0E01               	movlw	1
 15007  01C64A  0012               	return	
 15008  01C64C                     l18563:
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;error_handling.c: 22: else {;error_handling.c: 24: return 0;
 15012  01C64C  0E00               	movlw	0
 15013                           
 15014                           ; BSR set to: 0
 15015  01C64E  0012               	return		;funcret
 15016  01C650                     __end_of_getADCError:
 15017                           	opt callstack 0
 15018                           
 15019 ;; *************** function _EUSART2_Read *****************
 15020 ;; Defined at:
 15021 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 15022 ;; Parameters:    Size  Location     Type
 15023 ;;		None
 15024 ;; Auto vars:     Size  Location     Type
 15025 ;;  readValue       1    0[BANK2 ] unsigned char 
 15026 ;; Return value:  Size  Location     Type
 15027 ;;                  1    wreg      unsigned char 
 15028 ;; Registers used:
 15029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : 0/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15038 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;Total ram usage:        1 bytes
 15040 ;; Hardware stack levels used:    1
 15041 ;; Hardware stack levels required when called:   11
 15042 ;; This function calls:
 15043 ;;		Nothing
 15044 ;; This function is called by:
 15045 ;;		_terminal_ringBufferPull
 15046 ;;		_getch
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text23
 15051  01BDAA                     __ptext23:
 15052                           	opt callstack 0
 15053  01BDAA                     _EUSART2_Read:
 15054                           	opt callstack 18
 15055                           
 15056                           ;eusart2.c: 136: while(0 == eusart2RxCount)
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;incstack = 0
 15060  01BDAA  D001               	goto	l20787
 15061  01BDAC                     l115:
 15062                           
 15063                           ; BSR set to: 1
 15064  01BDAC  0004               	clrwdt		;# 
 15065  01BDAE                     l20787:
 15066  01BDAE  0101               	movlb	1	; () banked
 15067  01BDB0  5197               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 15068  01BDB2  B4D8               	btfsc	status,2,c
 15069  01BDB4  D7FB               	goto	l115
 15070                           
 15071                           ; BSR set to: 1
 15072                           ;eusart2.c: 139: };eusart2.c: 141: readValue = eusart2RxBuffer[eusart2RxTail++];
 15073  01BDB6  0E80               	movlw	low _eusart2RxBuffer
 15074  01BDB8  2598               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 15075  01BDBA  6ED9               	movwf	fsr2l,c
 15076  01BDBC  6ADA               	clrf	fsr2h,c
 15077  01BDBE  0E04               	movlw	high _eusart2RxBuffer
 15078  01BDC0  22DA               	addwfc	fsr2h,f,c
 15079  01BDC2  50DF               	movf	indf2,w,c
 15080  01BDC4  0102               	movlb	2	; () banked
 15081  01BDC6  6F00               	movwf	EUSART2_Read@readValue& (0+255),b
 15082                           
 15083                           ; BSR set to: 2
 15084  01BDC8  0101               	movlb	1	; () banked
 15085  01BDCA  2B98               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 15086                           
 15087                           ; BSR set to: 1
 15088                           ;eusart2.c: 142: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 15089  01BDCC  0E3F               	movlw	63
 15090  01BDCE  6598               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 15091  01BDD0  D002               	goto	l20797
 15092                           
 15093                           ; BSR set to: 1
 15094                           ;eusart2.c: 143: {;eusart2.c: 144: eusart2RxTail = 0;
 15095  01BDD2  0E00               	movlw	0
 15096  01BDD4  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 15097  01BDD6                     l20797:
 15098                           
 15099                           ; BSR set to: 1
 15100                           ;eusart2.c: 145: };eusart2.c: 146: PIE3bits.RC2IE = 0;
 15101  01BDD6  010E               	movlb	14	; () banked
 15102  01BDD8  9FC5               	bcf	197,7,b	;volatile
 15103                           
 15104                           ; BSR set to: 14
 15105                           ;eusart2.c: 147: eusart2RxCount--;
 15106  01BDDA  0101               	movlb	1	; () banked
 15107  01BDDC  0797               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 15108                           
 15109                           ; BSR set to: 1
 15110                           ;eusart2.c: 148: PIE3bits.RC2IE = 1;
 15111  01BDDE  010E               	movlb	14	; () banked
 15112  01BDE0  8FC5               	bsf	197,7,b	;volatile
 15113                           
 15114                           ; BSR set to: 14
 15115                           ;eusart2.c: 150: return readValue;
 15116  01BDE2  0102               	movlb	2	; () banked
 15117  01BDE4  5100               	movf	EUSART2_Read@readValue& (0+255),w,b
 15118                           
 15119                           ; BSR set to: 2
 15120  01BDE6  0012               	return		;funcret
 15121  01BDE8                     __end_of_EUSART2_Read:
 15122                           	opt callstack 0
 15123                           
 15124 ;; *************** function _terminalSetCursorHome *****************
 15125 ;; Defined at:
 15126 ;;		line 17 in file "terminal_control.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;		None
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;		None
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      void 
 15133 ;; Registers used:
 15134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15144 ;;Total ram usage:        0 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:   15
 15147 ;; This function calls:
 15148 ;;		_printf
 15149 ;; This function is called by:
 15150 ;;		_main
 15151 ;;		_terminalPrintTestMessage
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155                           	psect	text24
 15156  01C74A                     __ptext24:
 15157                           	opt callstack 0
 15158  01C74A                     _terminalSetCursorHome:
 15159                           	opt callstack 15
 15160                           
 15161                           ;terminal_control.c: 18: printf("\033[H");
 15162                           
 15163                           ; BSR set to: 2
 15164                           ;incstack = 0
 15165  01C74A  0EBB               	movlw	low STR_193
 15166  01C74C  0102               	movlb	2	; () banked
 15167  01C74E  6FA9               	movwf	printf@f& (0+255),b
 15168  01C750  0EFF               	movlw	high STR_193
 15169  01C752  6FAA               	movwf	(printf@f+1)& (0+255),b
 15170  01C754  EC32  F0DF         	call	_printf	;wreg free
 15171  01C758  0012               	return		;funcret
 15172  01C75A                     __end_of_terminalSetCursorHome:
 15173                           	opt callstack 0
 15174                           
 15175 ;; *************** function _printf *****************
 15176 ;; Defined at:
 15177 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;  f               2  169[BANK2 ] PTR const unsigned char 
 15180 ;;		 -> STR_355(60), STR_354(24), STR_353(24), STR_352(24), 
 15181 ;;		 -> STR_351(27), STR_350(20), STR_349(35), STR_348(34), 
 15182 ;;		 -> STR_347(37), STR_346(34), STR_345(36), STR_344(35), 
 15183 ;;		 -> STR_343(33), STR_342(35), STR_341(20), STR_340(23), 
 15184 ;;		 -> STR_339(20), STR_338(22), STR_337(21), STR_336(19), 
 15185 ;;		 -> STR_335(21), STR_334(27), STR_333(18), STR_332(11), 
 15186 ;;		 -> terminalTextAttributes@print_string(16), STR_302(4), STR_301(4), STR_300(4), 
 15187 ;;		 -> STR_299(4), STR_298(5), STR_290(47), STR_289(99), 
 15188 ;;		 -> STR_288(65), STR_287(37), STR_286(58), STR_285(59), 
 15189 ;;		 -> STR_284(58), STR_283(30), STR_282(71), STR_281(48), 
 15190 ;;		 -> STR_280(67), STR_279(45), STR_278(39), STR_277(8), 
 15191 ;;		 -> STR_276(69), STR_275(8), STR_274(67), STR_273(53), 
 15192 ;;		 -> STR_272(66), STR_271(62), STR_270(23), STR_269(62), 
 15193 ;;		 -> STR_268(55), STR_267(26), STR_266(51), STR_265(47), 
 15194 ;;		 -> STR_264(23), STR_263(8), STR_262(54), STR_261(58), 
 15195 ;;		 -> STR_260(66), STR_259(43), STR_258(32), STR_257(64), 
 15196 ;;		 -> STR_256(30), STR_255(31), STR_254(63), STR_253(33), 
 15197 ;;		 -> STR_252(35), STR_251(37), STR_250(40), STR_249(28), 
 15198 ;;		 -> STR_248(46), STR_247(31), STR_246(52), STR_245(14), 
 15199 ;;		 -> STR_244(28), STR_243(50), STR_242(29), STR_241(36), 
 15200 ;;		 -> STR_240(45), STR_239(88), STR_238(37), STR_237(3), 
 15201 ;;		 -> STR_236(30), STR_235(46), STR_234(39), STR_233(62), 
 15202 ;;		 -> STR_232(57), STR_231(653), STR_230(22), STR_229(3), 
 15203 ;;		 -> STR_227(29), STR_225(3), STR_224(47), STR_223(3), 
 15204 ;;		 -> STR_220(24), STR_218(23), STR_216(23), STR_214(3), 
 15205 ;;		 -> STR_213(3), STR_212(54), STR_211(3), STR_210(56), 
 15206 ;;		 -> STR_209(3), STR_208(60), STR_207(61), STR_206(3), 
 15207 ;;		 -> STR_205(62), STR_204(3), STR_203(50), STR_202(3), 
 15208 ;;		 -> STR_201(45), STR_200(3), STR_198(54), STR_196(4), 
 15209 ;;		 -> STR_195(5), STR_193(4), STR_192(5), STR_12(34), 
 15210 ;;		 -> STR_11(29), STR_10(47), STR_9(30), STR_8(46), 
 15211 ;;		 -> STR_7(39), STR_6(62), STR_5(57), STR_4(39), 
 15212 ;;		 -> STR_3(44), STR_2(52), STR_1(4), 
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  pb              5  179[BANK2 ] struct __prbuf
 15215 ;;  ap              2  177[BANK2 ] PTR void [1]
 15216 ;;		 -> ?_sprintf(2), ?_printf(2), 
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  2  169[BANK2 ] int 
 15219 ;; Registers used:
 15220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15226 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15227 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15229 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;Total ram usage:       15 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:   14
 15233 ;; This function calls:
 15234 ;;		__doprnt
 15235 ;; This function is called by:
 15236 ;;		_main
 15237 ;;		_ringBufferLUT
 15238 ;;		_printErrorHandlerStatus
 15239 ;;		_printCurrentMeasurements
 15240 ;;		_terminalClearScreen
 15241 ;;		_terminalSetCursorHome
 15242 ;;		_terminalTextAttributes
 15243 ;;		_terminalTextAttributesReset
 15244 ;;		_terminalClearLine
 15245 ;;		_terminalSaveCursor
 15246 ;;		_terminalReturnCursor
 15247 ;;		_terminalPrintTestMessage
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           	psect	text25
 15252  01BE64                     __ptext25:
 15253                           	opt callstack 0
 15254  01BE64                     _printf:
 15255                           	opt callstack 13
 15256                           
 15257                           ;incstack = 0
 15258  01BE64  0E00               	movlw	0
 15259  01BE66  0102               	movlb	2	; () banked
 15260  01BE68  6FB3               	movwf	printf@pb& (0+255),b
 15261  01BE6A  0E00               	movlw	0
 15262  01BE6C  6FB4               	movwf	(printf@pb+1)& (0+255),b
 15263  01BE6E  0E92               	movlw	low _putch
 15264  01BE70  6FB5               	movwf	(printf@pb+2)& (0+255),b
 15265  01BE72  0EC6               	movlw	high _putch
 15266  01BE74  6FB6               	movwf	(printf@pb+3)& (0+255),b
 15267  01BE76  0E01               	movlw	low (_putch shr (0+16))
 15268  01BE78  6FB7               	movwf	(printf@pb+4)& (0+255),b
 15269  01BE7A  0EAB               	movlw	low (?_printf+2)
 15270  01BE7C  6FB1               	movwf	printf@ap& (0+255),b
 15271  01BE7E  0E02               	movlw	high (?_printf+2)
 15272  01BE80  6FB2               	movwf	(printf@ap+1)& (0+255),b
 15273                           
 15274                           ; BSR set to: 2
 15275                           ;	Return value of _printf is never used
 15276  01BE82  0EB3               	movlw	low printf@pb
 15277  01BE84  6F54               	movwf	__doprnt@pb& (0+255),b
 15278  01BE86  0E02               	movlw	high printf@pb
 15279  01BE88  6F55               	movwf	(__doprnt@pb+1)& (0+255),b
 15280  01BE8A  C2A9  F256         	movff	printf@f,__doprnt@f
 15281  01BE8E  C2AA  F257         	movff	printf@f+1,__doprnt@f+1
 15282  01BE92  0EB1               	movlw	low printf@ap
 15283  01BE94  6F58               	movwf	__doprnt@ap& (0+255),b
 15284  01BE96  0E02               	movlw	high printf@ap
 15285  01BE98  6F59               	movwf	(__doprnt@ap+1)& (0+255),b
 15286  01BE9A  EC00  F080         	call	__doprnt	;wreg free
 15287  01BE9E  0012               	return		;funcret
 15288  01BEA0                     __end_of_printf:
 15289                           	opt callstack 0
 15290                           
 15291 ;; *************** function _getCauseOfReset *****************
 15292 ;; Defined at:
 15293 ;;		line 11 in file "cause_of_reset.c"
 15294 ;; Parameters:    Size  Location     Type
 15295 ;;		None
 15296 ;; Auto vars:     Size  Location     Type
 15297 ;;  return_reset    1    0[BANK2 ] enum E9577
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  1    wreg      enum E10205
 15300 ;; Registers used:
 15301 ;;		wreg, status,2
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15308 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;Total ram usage:        1 bytes
 15312 ;; Hardware stack levels used:    1
 15313 ;; Hardware stack levels required when called:   11
 15314 ;; This function calls:
 15315 ;;		Nothing
 15316 ;; This function is called by:
 15317 ;;		_main
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text26
 15322  01B644                     __ptext26:
 15323                           	opt callstack 0
 15324  01B644                     _getCauseOfReset:
 15325                           	opt callstack 19
 15326                           
 15327                           ;cause_of_reset.c: 13: reset_t return_reset_cause;;cause_of_reset.c: 18: if (PCON0bits.S
      +                          TKOVF == 1) {
 15328                           
 15329                           ;incstack = 0
 15330  01B644  AED7               	btfss	4055,7,c	;volatile
 15331  01B646  D002               	goto	l1633
 15332                           
 15333                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 15334  01B648  0E07               	movlw	7
 15335  01B64A  D01D               	goto	L2
 15336  01B64C                     l1633:
 15337                           
 15338                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 15339  01B64C  ACD7               	btfss	4055,6,c	;volatile
 15340  01B64E  D002               	goto	l1635
 15341                           
 15342                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 15343  01B650  0E08               	movlw	8
 15344  01B652  D019               	goto	L2
 15345  01B654                     l1635:
 15346                           
 15347                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 15348  01B654  BAD7               	btfsc	4055,5,c	;volatile
 15349  01B656  D002               	goto	l1637
 15350                           
 15351                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 15352  01B658  0E05               	movlw	5
 15353  01B65A  D015               	goto	L2
 15354  01B65C                     l1637:
 15355                           
 15356                           ;cause_of_reset.c: 36: else if (PCON0bits.nRWDT == 0) {
 15357  01B65C  B8D7               	btfsc	4055,4,c	;volatile
 15358  01B65E  D002               	goto	l1639
 15359                           
 15360                           ;cause_of_reset.c: 38: return_reset_cause = Watch_Dog_Timer_Reset;
 15361  01B660  0E04               	movlw	4
 15362  01B662  D011               	goto	L2
 15363  01B664                     l1639:
 15364                           
 15365                           ;cause_of_reset.c: 42: else if (PCON0bits.nRMCLR == 0) {
 15366  01B664  B6D7               	btfsc	4055,3,c	;volatile
 15367  01B666  D002               	goto	l1641
 15368                           
 15369                           ;cause_of_reset.c: 44: return_reset_cause = Master_Clear_Reset;
 15370  01B668  0E03               	movlw	3
 15371  01B66A  D00D               	goto	L2
 15372  01B66C                     l1641:
 15373                           
 15374                           ;cause_of_reset.c: 48: else if (PCON0bits.nRI == 0) {
 15375  01B66C  B4D7               	btfsc	4055,2,c	;volatile
 15376  01B66E  D002               	goto	l1643
 15377                           
 15378                           ;cause_of_reset.c: 50: return_reset_cause = RESET_Instruction_Executed;
 15379  01B670  0E06               	movlw	6
 15380  01B672  D009               	goto	L2
 15381  01B674                     l1643:
 15382                           
 15383                           ;cause_of_reset.c: 54: else if (PCON0bits.nPOR == 0) {
 15384  01B674  B2D7               	btfsc	4055,1,c	;volatile
 15385  01B676  D002               	goto	l1645
 15386                           
 15387                           ;cause_of_reset.c: 56: return_reset_cause = Power_On_Reset;
 15388  01B678  0E01               	movlw	1
 15389  01B67A  D005               	goto	L2
 15390  01B67C                     l1645:
 15391                           
 15392                           ;cause_of_reset.c: 60: else if (PCON0bits.nBOR == 0) {
 15393  01B67C  B0D7               	btfsc	4055,0,c	;volatile
 15394  01B67E  D002               	goto	l21701
 15395                           
 15396                           ;cause_of_reset.c: 62: return_reset_cause = Brown_Out_Reset;
 15397  01B680  0E02               	movlw	2
 15398  01B682  D001               	goto	L2
 15399  01B684                     l21701:
 15400                           
 15401                           ;cause_of_reset.c: 66: else {;cause_of_reset.c: 68: return_reset_cause = Undefined_Reset
      +                          ;
 15402  01B684  0E00               	movlw	0
 15403  01B686                     L2:
 15404  01B686  0102               	movlb	2	; () banked
 15405  01B688  6F00               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 15406                           
 15407                           ; BSR set to: 2
 15408                           ;cause_of_reset.c: 70: };cause_of_reset.c: 73: PCON0bits.STKOVF = 0;
 15409  01B68A  9ED7               	bcf	4055,7,c	;volatile
 15410                           
 15411                           ; BSR set to: 2
 15412                           ;cause_of_reset.c: 74: PCON0bits.STKUNF = 0;
 15413  01B68C  9CD7               	bcf	4055,6,c	;volatile
 15414                           
 15415                           ; BSR set to: 2
 15416                           ;cause_of_reset.c: 75: PCON0bits.nWDTWV = 1;
 15417  01B68E  8AD7               	bsf	4055,5,c	;volatile
 15418                           
 15419                           ; BSR set to: 2
 15420                           ;cause_of_reset.c: 76: PCON0bits.nRWDT = 1;
 15421  01B690  88D7               	bsf	4055,4,c	;volatile
 15422                           
 15423                           ; BSR set to: 2
 15424                           ;cause_of_reset.c: 77: PCON0bits.nRMCLR = 1;
 15425  01B692  86D7               	bsf	4055,3,c	;volatile
 15426                           
 15427                           ; BSR set to: 2
 15428                           ;cause_of_reset.c: 78: PCON0bits.nRI = 1;
 15429  01B694  84D7               	bsf	4055,2,c	;volatile
 15430                           
 15431                           ; BSR set to: 2
 15432                           ;cause_of_reset.c: 79: PCON0bits.nPOR = 1;
 15433  01B696  82D7               	bsf	4055,1,c	;volatile
 15434                           
 15435                           ; BSR set to: 2
 15436                           ;cause_of_reset.c: 80: PCON0bits.nBOR = 1;
 15437  01B698  80D7               	bsf	4055,0,c	;volatile
 15438                           
 15439                           ;cause_of_reset.c: 82: return return_reset_cause;
 15440  01B69A  5100               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 15441                           
 15442                           ; BSR set to: 2
 15443  01B69C  0012               	return		;funcret
 15444  01B69E                     __end_of_getCauseOfReset:
 15445                           	opt callstack 0
 15446                           
 15447 ;; *************** function _freqMeasStartCaptures *****************
 15448 ;; Defined at:
 15449 ;;		line 5 in file "freq_meas.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;		None
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;		None
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg, status,2
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15467 ;;Total ram usage:        0 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:   11
 15470 ;; This function calls:
 15471 ;;		Nothing
 15472 ;; This function is called by:
 15473 ;;		_main
 15474 ;; This function uses a non-reentrant model
 15475 ;;
 15476                           
 15477                           	psect	text27
 15478  01C878                     __ptext27:
 15479                           	opt callstack 0
 15480  01C878                     _freqMeasStartCaptures:
 15481                           	opt callstack 19
 15482                           
 15483                           ;freq_meas.c: 8: CCP2CONbits.EN = 1;
 15484                           
 15485                           ; BSR set to: 2
 15486                           ;incstack = 0
 15487  01C878  8EA8               	bsf	4008,7,c	;volatile
 15488                           
 15489                           ;freq_meas.c: 11: freq_meas_start_flag = 0;
 15490  01C87A  0E00               	movlw	0
 15491  01C87C  0102               	movlb	2	; () banked
 15492  01C87E  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 15493                           
 15494                           ; BSR set to: 2
 15495  01C880  0012               	return		;funcret
 15496  01C882                     __end_of_freqMeasStartCaptures:
 15497                           	opt callstack 0
 15498                           
 15499 ;; *************** function _TMR5_WriteTimer *****************
 15500 ;; Defined at:
 15501 ;;		line 120 in file "mcc_generated_files/tmr5.c"
 15502 ;; Parameters:    Size  Location     Type
 15503 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15504 ;; Auto vars:     Size  Location     Type
 15505 ;;		None
 15506 ;; Return value:  Size  Location     Type
 15507 ;;                  1    wreg      void 
 15508 ;; Registers used:
 15509 ;;		wreg, status,2
 15510 ;; Tracked objects:
 15511 ;;		On entry : 0/0
 15512 ;;		On exit  : 0/0
 15513 ;;		Unchanged: 0/0
 15514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15515 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15518 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15519 ;;Total ram usage:        2 bytes
 15520 ;; Hardware stack levels used:    1
 15521 ;; Hardware stack levels required when called:   11
 15522 ;; This function calls:
 15523 ;;		Nothing
 15524 ;; This function is called by:
 15525 ;;		_main
 15526 ;;		_TMR5_Reload
 15527 ;; This function uses a non-reentrant model
 15528 ;;
 15529                           
 15530                           	psect	text28
 15531  01C430                     __ptext28:
 15532                           	opt callstack 0
 15533  01C430                     _TMR5_WriteTimer:
 15534                           	opt callstack 19
 15535                           
 15536                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
 15537                           
 15538                           ; BSR set to: 2
 15539                           ;incstack = 0
 15540  01C430  A4C3               	btfss	4035,2,c	;volatile
 15541  01C432  D008               	goto	l21675
 15542                           
 15543                           ;tmr5.c: 123: {;tmr5.c: 125: T5CONbits.TMR5ON = 0;
 15544  01C434  90C3               	bcf	4035,0,c	;volatile
 15545                           
 15546                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
 15547  01C436  0102               	movlb	2	; () banked
 15548  01C438  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15549  01C43A  6EC2               	movwf	4034,c	;volatile
 15550                           
 15551                           ; BSR set to: 2
 15552                           ;tmr5.c: 129: TMR5L = timerVal;
 15553  01C43C  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15554                           
 15555                           ; BSR set to: 2
 15556                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
 15557  01C440  80C3               	bsf	4035,0,c	;volatile
 15558                           
 15559                           ;tmr5.c: 133: }
 15560  01C442  0012               	return	
 15561  01C444                     l21675:
 15562                           
 15563                           ;tmr5.c: 134: else;tmr5.c: 135: {;tmr5.c: 137: TMR5H = (timerVal >> 8);
 15564  01C444  0102               	movlb	2	; () banked
 15565  01C446  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15566  01C448  6EC2               	movwf	4034,c	;volatile
 15567                           
 15568                           ; BSR set to: 2
 15569                           ;tmr5.c: 138: TMR5L = timerVal;
 15570  01C44A  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15571                           
 15572                           ; BSR set to: 2
 15573  01C44E  0012               	return		;funcret
 15574  01C450                     __end_of_TMR5_WriteTimer:
 15575                           	opt callstack 0
 15576                           
 15577 ;; *************** function _TMR5_StopTimer *****************
 15578 ;; Defined at:
 15579 ;;		line 98 in file "mcc_generated_files/tmr5.c"
 15580 ;; Parameters:    Size  Location     Type
 15581 ;;		None
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;		None
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  1    wreg      void 
 15586 ;; Registers used:
 15587 ;;		None
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15597 ;;Total ram usage:        0 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:   11
 15600 ;; This function calls:
 15601 ;;		Nothing
 15602 ;; This function is called by:
 15603 ;;		_main
 15604 ;; This function uses a non-reentrant model
 15605 ;;
 15606                           
 15607                           	psect	text29
 15608  01C8CA                     __ptext29:
 15609                           	opt callstack 0
 15610  01C8CA                     _TMR5_StopTimer:
 15611                           	opt callstack 19
 15612                           
 15613                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
 15614                           
 15615                           ; BSR set to: 2
 15616                           ;incstack = 0
 15617  01C8CA  90C3               	bcf	4035,0,c	;volatile
 15618  01C8CC  0012               	return		;funcret
 15619  01C8CE                     __end_of_TMR5_StopTimer:
 15620                           	opt callstack 0
 15621                           
 15622 ;; *************** function _TMR3_StopTimer *****************
 15623 ;; Defined at:
 15624 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;		None
 15627 ;; Auto vars:     Size  Location     Type
 15628 ;;		None
 15629 ;; Return value:  Size  Location     Type
 15630 ;;                  1    wreg      void 
 15631 ;; Registers used:
 15632 ;;		None
 15633 ;; Tracked objects:
 15634 ;;		On entry : 0/0
 15635 ;;		On exit  : 0/0
 15636 ;;		Unchanged: 0/0
 15637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;Total ram usage:        0 bytes
 15643 ;; Hardware stack levels used:    1
 15644 ;; Hardware stack levels required when called:   11
 15645 ;; This function calls:
 15646 ;;		Nothing
 15647 ;; This function is called by:
 15648 ;;		_main
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text30
 15653  01C8CE                     __ptext30:
 15654                           	opt callstack 0
 15655  01C8CE                     _TMR3_StopTimer:
 15656                           	opt callstack 19
 15657                           
 15658                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 15659                           
 15660                           ;incstack = 0
 15661  01C8CE  90C9               	bcf	4041,0,c	;volatile
 15662  01C8D0  0012               	return		;funcret
 15663  01C8D2                     __end_of_TMR3_StopTimer:
 15664                           	opt callstack 0
 15665                           
 15666 ;; *************** function _TMR3_Reload *****************
 15667 ;; Defined at:
 15668 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;		None
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      void 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;Total ram usage:        0 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:   12
 15689 ;; This function calls:
 15690 ;;		_TMR3_WriteTimer
 15691 ;; This function is called by:
 15692 ;;		_main
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text31
 15697  01C75A                     __ptext31:
 15698                           	opt callstack 0
 15699  01C75A                     _TMR3_Reload:
 15700                           	opt callstack 18
 15701                           
 15702                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 15703                           
 15704                           ;incstack = 0
 15705  01C75A  C18D  F200         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15706  01C75E  C18E  F201         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15707  01C762  EC28  F0E2         	call	_TMR3_WriteTimer	;wreg free
 15708  01C766  0012               	return		;funcret
 15709  01C768                     __end_of_TMR3_Reload:
 15710                           	opt callstack 0
 15711                           
 15712 ;; *************** function _TMR3_WriteTimer *****************
 15713 ;; Defined at:
 15714 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15717 ;; Auto vars:     Size  Location     Type
 15718 ;;		None
 15719 ;; Return value:  Size  Location     Type
 15720 ;;                  1    wreg      void 
 15721 ;; Registers used:
 15722 ;;		wreg, status,2
 15723 ;; Tracked objects:
 15724 ;;		On entry : 0/0
 15725 ;;		On exit  : 0/0
 15726 ;;		Unchanged: 0/0
 15727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15728 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15731 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15732 ;;Total ram usage:        2 bytes
 15733 ;; Hardware stack levels used:    1
 15734 ;; Hardware stack levels required when called:   11
 15735 ;; This function calls:
 15736 ;;		Nothing
 15737 ;; This function is called by:
 15738 ;;		_TMR3_Reload
 15739 ;; This function uses a non-reentrant model
 15740 ;;
 15741                           
 15742                           	psect	text32
 15743  01C450                     __ptext32:
 15744                           	opt callstack 0
 15745  01C450                     _TMR3_WriteTimer:
 15746                           	opt callstack 18
 15747                           
 15748                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15749                           
 15750                           ;incstack = 0
 15751  01C450  A4C9               	btfss	4041,2,c	;volatile
 15752  01C452  D008               	goto	l20951
 15753                           
 15754                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15755  01C454  90C9               	bcf	4041,0,c	;volatile
 15756                           
 15757                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15758  01C456  0102               	movlb	2	; () banked
 15759  01C458  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15760  01C45A  6EC8               	movwf	4040,c	;volatile
 15761                           
 15762                           ; BSR set to: 2
 15763                           ;tmr3.c: 136: TMR3L = timerVal;
 15764  01C45C  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15765                           
 15766                           ; BSR set to: 2
 15767                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15768  01C460  80C9               	bsf	4041,0,c	;volatile
 15769                           
 15770                           ;tmr3.c: 140: }
 15771  01C462  0012               	return	
 15772  01C464                     l20951:
 15773                           
 15774                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15775  01C464  0102               	movlb	2	; () banked
 15776  01C466  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15777  01C468  6EC8               	movwf	4040,c	;volatile
 15778                           
 15779                           ; BSR set to: 2
 15780                           ;tmr3.c: 145: TMR3L = timerVal;
 15781  01C46A  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15782                           
 15783                           ; BSR set to: 2
 15784  01C46E  0012               	return		;funcret
 15785  01C470                     __end_of_TMR3_WriteTimer:
 15786                           	opt callstack 0
 15787                           
 15788 ;; *************** function _TMR1_StopTimer *****************
 15789 ;; Defined at:
 15790 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;		None
 15793 ;; Auto vars:     Size  Location     Type
 15794 ;;		None
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  1    wreg      void 
 15797 ;; Registers used:
 15798 ;;		None
 15799 ;; Tracked objects:
 15800 ;;		On entry : 0/0
 15801 ;;		On exit  : 0/0
 15802 ;;		Unchanged: 0/0
 15803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;Total ram usage:        0 bytes
 15809 ;; Hardware stack levels used:    1
 15810 ;; Hardware stack levels required when called:   11
 15811 ;; This function calls:
 15812 ;;		Nothing
 15813 ;; This function is called by:
 15814 ;;		_main
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text33
 15819  01C8D2                     __ptext33:
 15820                           	opt callstack 0
 15821  01C8D2                     _TMR1_StopTimer:
 15822                           	opt callstack 19
 15823                           
 15824                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 15825                           
 15826                           ; BSR set to: 2
 15827                           ;incstack = 0
 15828  01C8D2  90CF               	bcf	4047,0,c	;volatile
 15829  01C8D4  0012               	return		;funcret
 15830  01C8D6                     __end_of_TMR1_StopTimer:
 15831                           	opt callstack 0
 15832                           
 15833 ;; *************** function _TMR1_Reload *****************
 15834 ;; Defined at:
 15835 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;		None
 15838 ;; Auto vars:     Size  Location     Type
 15839 ;;		None
 15840 ;; Return value:  Size  Location     Type
 15841 ;;                  1    wreg      void 
 15842 ;; Registers used:
 15843 ;;		wreg, status,2, cstack
 15844 ;; Tracked objects:
 15845 ;;		On entry : 0/0
 15846 ;;		On exit  : 0/0
 15847 ;;		Unchanged: 0/0
 15848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;Total ram usage:        0 bytes
 15854 ;; Hardware stack levels used:    1
 15855 ;; Hardware stack levels required when called:   12
 15856 ;; This function calls:
 15857 ;;		_TMR1_WriteTimer
 15858 ;; This function is called by:
 15859 ;;		_main
 15860 ;; This function uses a non-reentrant model
 15861 ;;
 15862                           
 15863                           	psect	text34
 15864  01C768                     __ptext34:
 15865                           	opt callstack 0
 15866  01C768                     _TMR1_Reload:
 15867                           	opt callstack 18
 15868                           
 15869                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 15870                           
 15871                           ;incstack = 0
 15872  01C768  C189  F200         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15873  01C76C  C18A  F201         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15874  01C770  EC38  F0E2         	call	_TMR1_WriteTimer	;wreg free
 15875  01C774  0012               	return		;funcret
 15876  01C776                     __end_of_TMR1_Reload:
 15877                           	opt callstack 0
 15878                           
 15879 ;; *************** function _TMR1_WriteTimer *****************
 15880 ;; Defined at:
 15881 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      void 
 15888 ;; Registers used:
 15889 ;;		wreg, status,2
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15895 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15898 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15899 ;;Total ram usage:        2 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:   11
 15902 ;; This function calls:
 15903 ;;		Nothing
 15904 ;; This function is called by:
 15905 ;;		_TMR1_Reload
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           
 15909                           	psect	text35
 15910  01C470                     __ptext35:
 15911                           	opt callstack 0
 15912  01C470                     _TMR1_WriteTimer:
 15913                           	opt callstack 18
 15914                           
 15915                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15916                           
 15917                           ;incstack = 0
 15918  01C470  A4CF               	btfss	4047,2,c	;volatile
 15919  01C472  D008               	goto	l20987
 15920                           
 15921                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15922  01C474  90CF               	bcf	4047,0,c	;volatile
 15923                           
 15924                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15925  01C476  0102               	movlb	2	; () banked
 15926  01C478  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15927  01C47A  6ECE               	movwf	4046,c	;volatile
 15928                           
 15929                           ; BSR set to: 2
 15930                           ;tmr1.c: 136: TMR1L = timerVal;
 15931  01C47C  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15932                           
 15933                           ; BSR set to: 2
 15934                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15935  01C480  80CF               	bsf	4047,0,c	;volatile
 15936                           
 15937                           ;tmr1.c: 140: }
 15938  01C482  0012               	return	
 15939  01C484                     l20987:
 15940                           
 15941                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15942  01C484  0102               	movlb	2	; () banked
 15943  01C486  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15944  01C488  6ECE               	movwf	4046,c	;volatile
 15945                           
 15946                           ; BSR set to: 2
 15947                           ;tmr1.c: 145: TMR1L = timerVal;
 15948  01C48A  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15949                           
 15950                           ; BSR set to: 2
 15951  01C48E  0012               	return		;funcret
 15952  01C490                     __end_of_TMR1_WriteTimer:
 15953                           	opt callstack 0
 15954                           
 15955 ;; *************** function _SYSTEM_Initialize *****************
 15956 ;; Defined at:
 15957 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;		None
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;		None
 15962 ;; Return value:  Size  Location     Type
 15963 ;;                  1    wreg      void 
 15964 ;; Registers used:
 15965 ;;		wreg, status,2, status,0, cstack
 15966 ;; Tracked objects:
 15967 ;;		On entry : 0/0
 15968 ;;		On exit  : 0/0
 15969 ;;		Unchanged: 0/0
 15970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15975 ;;Total ram usage:        0 bytes
 15976 ;; Hardware stack levels used:    1
 15977 ;; Hardware stack levels required when called:   13
 15978 ;; This function calls:
 15979 ;;		_ADCC_Initialize
 15980 ;;		_CCP2_Initialize
 15981 ;;		_EUSART2_Initialize
 15982 ;;		_EXT_INT_Initialize
 15983 ;;		_FVR_Initialize
 15984 ;;		_I2C2_Initialize
 15985 ;;		_INTERRUPT_Initialize
 15986 ;;		_OSCILLATOR_Initialize
 15987 ;;		_PIN_MANAGER_Initialize
 15988 ;;		_PMD_Initialize
 15989 ;;		_TMR0_Initialize
 15990 ;;		_TMR1_Initialize
 15991 ;;		_TMR2_Initialize
 15992 ;;		_TMR3_Initialize
 15993 ;;		_TMR5_Initialize
 15994 ;; This function is called by:
 15995 ;;		_main
 15996 ;; This function uses a non-reentrant model
 15997 ;;
 15998                           
 15999                           	psect	text36
 16000  01BDE8                     __ptext36:
 16001                           	opt callstack 0
 16002  01BDE8                     _SYSTEM_Initialize:
 16003                           	opt callstack 17
 16004                           
 16005                           ;mcc.c: 52: INTERRUPT_Initialize();
 16006                           
 16007                           ; BSR set to: 2
 16008                           ;incstack = 0
 16009  01BDE8  EC48  F0E2         	call	_INTERRUPT_Initialize	;wreg free
 16010                           
 16011                           ;mcc.c: 53: PMD_Initialize();
 16012  01BDEC  ECA5  F0E2         	call	_PMD_Initialize	;wreg free
 16013                           
 16014                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 16015  01BDF0  EC2D  F0D6         	call	_PIN_MANAGER_Initialize	;wreg free
 16016                           
 16017                           ;mcc.c: 55: OSCILLATOR_Initialize();
 16018  01BDF4  EC11  F0E3         	call	_OSCILLATOR_Initialize	;wreg free
 16019                           
 16020                           ;mcc.c: 56: I2C2_Initialize();
 16021  01BDF8  ECE4  F0DF         	call	_I2C2_Initialize	;wreg free
 16022                           
 16023                           ;mcc.c: 57: FVR_Initialize();
 16024  01BDFC  EC2A  F0E4         	call	_FVR_Initialize	;wreg free
 16025                           
 16026                           ;mcc.c: 58: ADCC_Initialize();
 16027  01BE00  EC67  F0DA         	call	_ADCC_Initialize	;wreg free
 16028                           
 16029                           ;mcc.c: 59: TMR2_Initialize();
 16030  01BE04  EC4D  F0E0         	call	_TMR2_Initialize	;wreg free
 16031                           
 16032                           ;mcc.c: 60: EXT_INT_Initialize();
 16033  01BE08  ECC8  F0DF         	call	_EXT_INT_Initialize	;wreg free
 16034                           
 16035                           ;mcc.c: 61: TMR0_Initialize();
 16036  01BE0C  ECF4  F0E0         	call	_TMR0_Initialize	;wreg free
 16037                           
 16038                           ;mcc.c: 62: CCP2_Initialize();
 16039  01BE10  ECF6  F0E1         	call	_CCP2_Initialize	;wreg free
 16040                           
 16041                           ;mcc.c: 63: TMR3_Initialize();
 16042  01BE14  EC74  F0DC         	call	_TMR3_Initialize	;wreg free
 16043                           
 16044                           ;mcc.c: 64: TMR5_Initialize();
 16045  01BE18  EC50  F0DF         	call	_TMR5_Initialize	;wreg free
 16046                           
 16047                           ;mcc.c: 65: TMR1_Initialize();
 16048  01BE1C  EC9C  F0DC         	call	_TMR1_Initialize	;wreg free
 16049                           
 16050                           ;mcc.c: 66: EUSART2_Initialize();
 16051  01BE20  ECF0  F0D8         	call	_EUSART2_Initialize	;wreg free
 16052  01BE24  0012               	return		;funcret
 16053  01BE26                     __end_of_SYSTEM_Initialize:
 16054                           	opt callstack 0
 16055                           
 16056 ;; *************** function _TMR5_Initialize *****************
 16057 ;; Defined at:
 16058 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 16059 ;; Parameters:    Size  Location     Type
 16060 ;;		None
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;		None
 16063 ;; Return value:  Size  Location     Type
 16064 ;;                  1    wreg      void 
 16065 ;; Registers used:
 16066 ;;		wreg, status,2, status,0
 16067 ;; Tracked objects:
 16068 ;;		On entry : 0/0
 16069 ;;		On exit  : 0/0
 16070 ;;		Unchanged: 0/0
 16071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16074 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16075 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;Total ram usage:        2 bytes
 16077 ;; Hardware stack levels used:    1
 16078 ;; Hardware stack levels required when called:   11
 16079 ;; This function calls:
 16080 ;;		Nothing
 16081 ;; This function is called by:
 16082 ;;		_SYSTEM_Initialize
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086                           	psect	text37
 16087  01BEA0                     __ptext37:
 16088                           	opt callstack 0
 16089  01BEA0                     _TMR5_Initialize:
 16090                           	opt callstack 18
 16091                           
 16092                           ;tmr5.c: 68: T5GCON = 0x00;
 16093                           
 16094                           ;incstack = 0
 16095  01BEA0  0E00               	movlw	0
 16096  01BEA2  6EC4               	movwf	4036,c	;volatile
 16097                           
 16098                           ;tmr5.c: 71: T5GATE = 0x00;
 16099  01BEA4  0E00               	movlw	0
 16100  01BEA6  6EC5               	movwf	4037,c	;volatile
 16101                           
 16102                           ;tmr5.c: 74: T5CLK = 0x01;
 16103  01BEA8  0E01               	movlw	1
 16104  01BEAA  6EC6               	movwf	4038,c	;volatile
 16105                           
 16106                           ;tmr5.c: 77: TMR5H = 0x00;
 16107  01BEAC  0E00               	movlw	0
 16108  01BEAE  6EC2               	movwf	4034,c	;volatile
 16109                           
 16110                           ;tmr5.c: 80: TMR5L = 0x00;
 16111  01BEB0  0E00               	movlw	0
 16112  01BEB2  6EC1               	movwf	4033,c	;volatile
 16113                           
 16114                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 16115  01BEB4  50C1               	movf	4033,w,c	;volatile
 16116  01BEB6  CFC2 F200          	movff	4034,??_TMR5_Initialize	;volatile
 16117  01BEBA  0102               	movlb	2	; () banked
 16118  01BEBC  6B01               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 16119  01BEBE  C200  F201         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 16120  01BEC2  6B00               	clrf	??_TMR5_Initialize& (0+255),b
 16121  01BEC4  1100               	iorwf	??_TMR5_Initialize& (0+255),w,b
 16122  01BEC6  0101               	movlb	1	; () banked
 16123  01BEC8  6F8B               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 16124  01BECA  0102               	movlb	2	; () banked
 16125  01BECC  5101               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 16126  01BECE  0101               	movlb	1	; () banked
 16127  01BED0  6F8C               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 16128                           
 16129                           ; BSR set to: 1
 16130                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 16131  01BED2  010E               	movlb	14	; () banked
 16132  01BED4  99CE               	bcf	206,4,b	;volatile
 16133                           
 16134                           ; BSR set to: 14
 16135                           ;tmr5.c: 89: T5CON = 0x03;
 16136  01BED6  0E03               	movlw	3
 16137  01BED8  6EC3               	movwf	4035,c	;volatile
 16138                           
 16139                           ; BSR set to: 14
 16140  01BEDA  0012               	return		;funcret
 16141  01BEDC                     __end_of_TMR5_Initialize:
 16142                           	opt callstack 0
 16143                           
 16144 ;; *************** function _TMR3_Initialize *****************
 16145 ;; Defined at:
 16146 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;		None
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;		None
 16151 ;; Return value:  Size  Location     Type
 16152 ;;                  1    wreg      void 
 16153 ;; Registers used:
 16154 ;;		wreg, status,2, status,0, cstack
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/0
 16157 ;;		On exit  : 0/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16162 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16163 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16164 ;;Total ram usage:        2 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; Hardware stack levels required when called:   12
 16167 ;; This function calls:
 16168 ;;		_TMR3_SetInterruptHandler
 16169 ;; This function is called by:
 16170 ;;		_SYSTEM_Initialize
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text38
 16175  01B8E8                     __ptext38:
 16176                           	opt callstack 0
 16177  01B8E8                     _TMR3_Initialize:
 16178                           	opt callstack 17
 16179                           
 16180                           ;tmr3.c: 69: T3GCON = 0x00;
 16181                           
 16182                           ; BSR set to: 14
 16183                           ;incstack = 0
 16184  01B8E8  0E00               	movlw	0
 16185  01B8EA  6ECA               	movwf	4042,c	;volatile
 16186                           
 16187                           ;tmr3.c: 72: T3GATE = 0x00;
 16188  01B8EC  0E00               	movlw	0
 16189  01B8EE  6ECB               	movwf	4043,c	;volatile
 16190                           
 16191                           ;tmr3.c: 75: T3CLK = 0x04;
 16192  01B8F0  0E04               	movlw	4
 16193  01B8F2  6ECC               	movwf	4044,c	;volatile
 16194                           
 16195                           ;tmr3.c: 78: TMR3H = 0xCF;
 16196  01B8F4  0ECF               	movlw	207
 16197  01B8F6  6EC8               	movwf	4040,c	;volatile
 16198                           
 16199                           ;tmr3.c: 81: TMR3L = 0x90;
 16200  01B8F8  0E90               	movlw	144
 16201  01B8FA  6EC7               	movwf	4039,c	;volatile
 16202                           
 16203                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 16204  01B8FC  50C7               	movf	4039,w,c	;volatile
 16205  01B8FE  CFC8 F203          	movff	4040,??_TMR3_Initialize	;volatile
 16206  01B902  0102               	movlb	2	; () banked
 16207  01B904  6B04               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 16208  01B906  C203  F204         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 16209  01B90A  6B03               	clrf	??_TMR3_Initialize& (0+255),b
 16210  01B90C  1103               	iorwf	??_TMR3_Initialize& (0+255),w,b
 16211  01B90E  0101               	movlb	1	; () banked
 16212  01B910  6F8D               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 16213  01B912  0102               	movlb	2	; () banked
 16214  01B914  5104               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 16215  01B916  0101               	movlb	1	; () banked
 16216  01B918  6F8E               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 16217                           
 16218                           ; BSR set to: 1
 16219                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 16220  01B91A  010E               	movlb	14	; () banked
 16221  01B91C  95CE               	bcf	206,2,b	;volatile
 16222                           
 16223                           ; BSR set to: 14
 16224                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 16225  01B91E  85C6               	bsf	198,2,b	;volatile
 16226                           
 16227                           ; BSR set to: 14
 16228                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 16229  01B920  0EF8               	movlw	low _TMR3_DefaultInterruptHandler
 16230  01B922  0102               	movlb	2	; () banked
 16231  01B924  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 16232  01B926  0EC8               	movlw	high _TMR3_DefaultInterruptHandler
 16233  01B928  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16234  01B92A  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 16235  01B92C  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16236  01B92E  ECBB  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
 16237                           
 16238                           ;tmr3.c: 96: T3CON = 0x11;
 16239  01B932  0E11               	movlw	17
 16240  01B934  6EC9               	movwf	4041,c	;volatile
 16241  01B936  0012               	return		;funcret
 16242  01B938                     __end_of_TMR3_Initialize:
 16243                           	opt callstack 0
 16244                           
 16245 ;; *************** function _TMR3_SetInterruptHandler *****************
 16246 ;; Defined at:
 16247 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16250 ;;		 -> QIIdleChargedTimerHandler(1), TMR3_DefaultInterruptHandler(1), 
 16251 ;; Auto vars:     Size  Location     Type
 16252 ;;		None
 16253 ;; Return value:  Size  Location     Type
 16254 ;;                  1    wreg      void 
 16255 ;; Registers used:
 16256 ;;		wreg, status,2, status,0
 16257 ;; Tracked objects:
 16258 ;;		On entry : 0/0
 16259 ;;		On exit  : 0/0
 16260 ;;		Unchanged: 0/0
 16261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16262 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16265 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16266 ;;Total ram usage:        3 bytes
 16267 ;; Hardware stack levels used:    1
 16268 ;; Hardware stack levels required when called:   11
 16269 ;; This function calls:
 16270 ;;		Nothing
 16271 ;; This function is called by:
 16272 ;;		_TMR3_Initialize
 16273 ;;		_main
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text39
 16278  01C776                     __ptext39:
 16279                           	opt callstack 0
 16280  01C776                     _TMR3_SetInterruptHandler:
 16281                           	opt callstack 19
 16282                           
 16283                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 16284                           
 16285                           ;incstack = 0
 16286  01C776  C200  F171         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 16287  01C77A  C201  F172         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 16288  01C77E  C202  F173         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
 16289  01C782  0012               	return		;funcret
 16290  01C784                     __end_of_TMR3_SetInterruptHandler:
 16291                           	opt callstack 0
 16292                           
 16293 ;; *************** function _TMR2_Initialize *****************
 16294 ;; Defined at:
 16295 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 16296 ;; Parameters:    Size  Location     Type
 16297 ;;		None
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;		None
 16300 ;; Return value:  Size  Location     Type
 16301 ;;                  1    wreg      void 
 16302 ;; Registers used:
 16303 ;;		wreg, status,2, status,0, cstack
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16313 ;;Total ram usage:        0 bytes
 16314 ;; Hardware stack levels used:    1
 16315 ;; Hardware stack levels required when called:   12
 16316 ;; This function calls:
 16317 ;;		_TMR2_SetInterruptHandler
 16318 ;; This function is called by:
 16319 ;;		_SYSTEM_Initialize
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text40
 16324  01C09A                     __ptext40:
 16325                           	opt callstack 0
 16326  01C09A                     _TMR2_Initialize:
 16327                           	opt callstack 17
 16328                           
 16329                           ;tmr2.c: 69: T2CLKCON = 0x04;
 16330                           
 16331                           ;incstack = 0
 16332  01C09A  0E04               	movlw	4
 16333  01C09C  6EBF               	movwf	4031,c	;volatile
 16334                           
 16335                           ;tmr2.c: 72: T2HLT = 0xA0;
 16336  01C09E  0EA0               	movlw	160
 16337  01C0A0  6EBE               	movwf	4030,c	;volatile
 16338                           
 16339                           ;tmr2.c: 75: T2RST = 0x00;
 16340  01C0A2  0E00               	movlw	0
 16341  01C0A4  6EC0               	movwf	4032,c	;volatile
 16342                           
 16343                           ;tmr2.c: 78: T2PR = 0x00;
 16344  01C0A6  0E00               	movlw	0
 16345  01C0A8  6EBC               	movwf	4028,c	;volatile
 16346                           
 16347                           ;tmr2.c: 81: T2TMR = 0x00;
 16348  01C0AA  0E00               	movlw	0
 16349  01C0AC  6EBB               	movwf	4027,c	;volatile
 16350                           
 16351                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 16352  01C0AE  010E               	movlb	14	; () banked
 16353  01C0B0  93CE               	bcf	206,1,b	;volatile
 16354                           
 16355                           ; BSR set to: 14
 16356                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 16357  01C0B2  83C6               	bsf	198,1,b	;volatile
 16358                           
 16359                           ; BSR set to: 14
 16360                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 16361  01C0B4  0EFA               	movlw	low _TMR2_DefaultInterruptHandler
 16362  01C0B6  0102               	movlb	2	; () banked
 16363  01C0B8  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 16364  01C0BA  0EC8               	movlw	high _TMR2_DefaultInterruptHandler
 16365  01C0BC  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16366  01C0BE  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 16367  01C0C0  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16368  01C0C2  ECC2  F0E3         	call	_TMR2_SetInterruptHandler	;wreg free
 16369                           
 16370                           ;tmr2.c: 93: T2CON = 0xDF;
 16371  01C0C6  0EDF               	movlw	223
 16372  01C0C8  6EBD               	movwf	4029,c	;volatile
 16373  01C0CA  0012               	return		;funcret
 16374  01C0CC                     __end_of_TMR2_Initialize:
 16375                           	opt callstack 0
 16376                           
 16377 ;; *************** function _TMR2_SetInterruptHandler *****************
 16378 ;; Defined at:
 16379 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 16380 ;; Parameters:    Size  Location     Type
 16381 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16382 ;;		 -> ADC_acquisitionTimerHandler(1), TMR2_DefaultInterruptHandler(1), 
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		wreg, status,2, status,0
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16394 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16397 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16398 ;;Total ram usage:        3 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; Hardware stack levels required when called:   11
 16401 ;; This function calls:
 16402 ;;		Nothing
 16403 ;; This function is called by:
 16404 ;;		_TMR2_Initialize
 16405 ;;		_main
 16406 ;; This function uses a non-reentrant model
 16407 ;;
 16408                           
 16409                           	psect	text41
 16410  01C784                     __ptext41:
 16411                           	opt callstack 0
 16412  01C784                     _TMR2_SetInterruptHandler:
 16413                           	opt callstack 19
 16414                           
 16415                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 16416                           
 16417                           ;incstack = 0
 16418  01C784  C200  F174         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 16419  01C788  C201  F175         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 16420  01C78C  C202  F176         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 16421  01C790  0012               	return		;funcret
 16422  01C792                     __end_of_TMR2_SetInterruptHandler:
 16423                           	opt callstack 0
 16424                           
 16425 ;; *************** function _TMR1_Initialize *****************
 16426 ;; Defined at:
 16427 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;		None
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;		None
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, cstack
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16443 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16444 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16445 ;;Total ram usage:        2 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:   12
 16448 ;; This function calls:
 16449 ;;		_TMR1_SetInterruptHandler
 16450 ;; This function is called by:
 16451 ;;		_SYSTEM_Initialize
 16452 ;; This function uses a non-reentrant model
 16453 ;;
 16454                           
 16455                           	psect	text42
 16456  01B938                     __ptext42:
 16457                           	opt callstack 0
 16458  01B938                     _TMR1_Initialize:
 16459                           	opt callstack 17
 16460                           
 16461                           ;tmr1.c: 69: T1GCON = 0x00;
 16462                           
 16463                           ;incstack = 0
 16464  01B938  0E00               	movlw	0
 16465  01B93A  6ED0               	movwf	4048,c	;volatile
 16466                           
 16467                           ;tmr1.c: 72: T1GATE = 0x00;
 16468  01B93C  0E00               	movlw	0
 16469  01B93E  6ED1               	movwf	4049,c	;volatile
 16470                           
 16471                           ;tmr1.c: 75: T1CLK = 0x04;
 16472  01B940  0E04               	movlw	4
 16473  01B942  6ED2               	movwf	4050,c	;volatile
 16474                           
 16475                           ;tmr1.c: 78: TMR1H = 0xED;
 16476  01B944  0EED               	movlw	237
 16477  01B946  6ECE               	movwf	4046,c	;volatile
 16478                           
 16479                           ;tmr1.c: 81: TMR1L = 0xD6;
 16480  01B948  0ED6               	movlw	214
 16481  01B94A  6ECD               	movwf	4045,c	;volatile
 16482                           
 16483                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16484  01B94C  50CD               	movf	4045,w,c	;volatile
 16485  01B94E  CFCE F203          	movff	4046,??_TMR1_Initialize	;volatile
 16486  01B952  0102               	movlb	2	; () banked
 16487  01B954  6B04               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 16488  01B956  C203  F204         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16489  01B95A  6B03               	clrf	??_TMR1_Initialize& (0+255),b
 16490  01B95C  1103               	iorwf	??_TMR1_Initialize& (0+255),w,b
 16491  01B95E  0101               	movlb	1	; () banked
 16492  01B960  6F89               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16493  01B962  0102               	movlb	2	; () banked
 16494  01B964  5104               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16495  01B966  0101               	movlb	1	; () banked
 16496  01B968  6F8A               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16497                           
 16498                           ; BSR set to: 1
 16499                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 16500  01B96A  010E               	movlb	14	; () banked
 16501  01B96C  91CE               	bcf	206,0,b	;volatile
 16502                           
 16503                           ; BSR set to: 14
 16504                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 16505  01B96E  81C6               	bsf	198,0,b	;volatile
 16506                           
 16507                           ; BSR set to: 14
 16508                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 16509  01B970  0EFC               	movlw	low _TMR1_DefaultInterruptHandler
 16510  01B972  0102               	movlb	2	; () banked
 16511  01B974  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 16512  01B976  0EC8               	movlw	high _TMR1_DefaultInterruptHandler
 16513  01B978  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16514  01B97A  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 16515  01B97C  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16516  01B97E  ECC9  F0E3         	call	_TMR1_SetInterruptHandler	;wreg free
 16517                           
 16518                           ;tmr1.c: 96: T1CON = 0x11;
 16519  01B982  0E11               	movlw	17
 16520  01B984  6ECF               	movwf	4047,c	;volatile
 16521  01B986  0012               	return		;funcret
 16522  01B988                     __end_of_TMR1_Initialize:
 16523                           	opt callstack 0
 16524                           
 16525 ;; *************** function _TMR1_SetInterruptHandler *****************
 16526 ;; Defined at:
 16527 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16528 ;; Parameters:    Size  Location     Type
 16529 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16530 ;;		 -> QIErrorTimerHandler(1), TMR1_DefaultInterruptHandler(1), 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;		None
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  1    wreg      void 
 16535 ;; Registers used:
 16536 ;;		wreg, status,2, status,0
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16542 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16545 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16546 ;;Total ram usage:        3 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:   11
 16549 ;; This function calls:
 16550 ;;		Nothing
 16551 ;; This function is called by:
 16552 ;;		_TMR1_Initialize
 16553 ;;		_main
 16554 ;; This function uses a non-reentrant model
 16555 ;;
 16556                           
 16557                           	psect	text43
 16558  01C792                     __ptext43:
 16559                           	opt callstack 0
 16560  01C792                     _TMR1_SetInterruptHandler:
 16561                           	opt callstack 19
 16562                           
 16563                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 16564                           
 16565                           ;incstack = 0
 16566  01C792  C200  F16E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 16567  01C796  C201  F16F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 16568  01C79A  C202  F170         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 16569  01C79E  0012               	return		;funcret
 16570  01C7A0                     __end_of_TMR1_SetInterruptHandler:
 16571                           	opt callstack 0
 16572                           
 16573 ;; *************** function _TMR0_Initialize *****************
 16574 ;; Defined at:
 16575 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;		None
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;		None
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      void 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0, cstack
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;Total ram usage:        0 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:   12
 16596 ;; This function calls:
 16597 ;;		_TMR0_SetInterruptHandler
 16598 ;; This function is called by:
 16599 ;;		_SYSTEM_Initialize
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text44
 16604  01C1E8                     __ptext44:
 16605                           	opt callstack 0
 16606  01C1E8                     _TMR0_Initialize:
 16607                           	opt callstack 17
 16608                           
 16609                           ;tmr0.c: 66: T0CON1 = 0x6F;
 16610                           
 16611                           ;incstack = 0
 16612  01C1E8  0E6F               	movlw	111
 16613  01C1EA  6ED6               	movwf	4054,c	;volatile
 16614                           
 16615                           ;tmr0.c: 69: TMR0H = 0x79;
 16616  01C1EC  0E79               	movlw	121
 16617  01C1EE  6ED4               	movwf	4052,c	;volatile
 16618                           
 16619                           ;tmr0.c: 72: TMR0L = 0x00;
 16620  01C1F0  0E00               	movlw	0
 16621  01C1F2  6ED3               	movwf	4051,c	;volatile
 16622                           
 16623                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 16624  01C1F4  010E               	movlb	14	; () banked
 16625  01C1F6  9BCA               	bcf	202,5,b	;volatile
 16626                           
 16627                           ; BSR set to: 14
 16628                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 16629  01C1F8  8BC2               	bsf	194,5,b	;volatile
 16630                           
 16631                           ; BSR set to: 14
 16632                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 16633  01C1FA  0EFE               	movlw	low _TMR0_DefaultInterruptHandler
 16634  01C1FC  0102               	movlb	2	; () banked
 16635  01C1FE  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 16636  01C200  0EC8               	movlw	high _TMR0_DefaultInterruptHandler
 16637  01C202  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16638  01C204  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 16639  01C206  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16640  01C208  ECD0  F0E3         	call	_TMR0_SetInterruptHandler	;wreg free
 16641                           
 16642                           ;tmr0.c: 84: T0CON0 = 0x8F;
 16643  01C20C  0E8F               	movlw	143
 16644  01C20E  6ED5               	movwf	4053,c	;volatile
 16645  01C210  0012               	return		;funcret
 16646  01C212                     __end_of_TMR0_Initialize:
 16647                           	opt callstack 0
 16648                           
 16649 ;; *************** function _TMR0_SetInterruptHandler *****************
 16650 ;; Defined at:
 16651 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16652 ;; Parameters:    Size  Location     Type
 16653 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16654 ;;		 -> heartbeatTimerHandler(1), TMR0_DefaultInterruptHandler(1), 
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;		None
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      void 
 16659 ;; Registers used:
 16660 ;;		wreg, status,2, status,0
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16666 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16669 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16670 ;;Total ram usage:        3 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:   11
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_TMR0_Initialize
 16677 ;;		_main
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text45
 16682  01C7A0                     __ptext45:
 16683                           	opt callstack 0
 16684  01C7A0                     _TMR0_SetInterruptHandler:
 16685                           	opt callstack 19
 16686                           
 16687                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
 16688                           
 16689                           ;incstack = 0
 16690  01C7A0  C200  F0C9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 16691  01C7A4  C201  F0CA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 16692  01C7A8  C202  F0CB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 16693  01C7AC  0012               	return		;funcret
 16694  01C7AE                     __end_of_TMR0_SetInterruptHandler:
 16695                           	opt callstack 0
 16696                           
 16697 ;; *************** function _PMD_Initialize *****************
 16698 ;; Defined at:
 16699 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;		None
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;		None
 16704 ;; Return value:  Size  Location     Type
 16705 ;;                  1    wreg      void 
 16706 ;; Registers used:
 16707 ;;		wreg, status,2
 16708 ;; Tracked objects:
 16709 ;;		On entry : 0/0
 16710 ;;		On exit  : 0/0
 16711 ;;		Unchanged: 0/0
 16712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16717 ;;Total ram usage:        0 bytes
 16718 ;; Hardware stack levels used:    1
 16719 ;; Hardware stack levels required when called:   11
 16720 ;; This function calls:
 16721 ;;		Nothing
 16722 ;; This function is called by:
 16723 ;;		_SYSTEM_Initialize
 16724 ;; This function uses a non-reentrant model
 16725 ;;
 16726                           
 16727                           	psect	text46
 16728  01C54A                     __ptext46:
 16729                           	opt callstack 0
 16730  01C54A                     _PMD_Initialize:
 16731                           	opt callstack 18
 16732                           
 16733                           ;mcc.c: 86: PMD0 = 0x00;
 16734                           
 16735                           ;incstack = 0
 16736  01C54A  0E00               	movlw	0
 16737  01C54C  010E               	movlb	14	; () banked
 16738  01C54E  6FE1               	movwf	225,b	;volatile
 16739                           
 16740                           ;mcc.c: 88: PMD1 = 0x00;
 16741  01C550  0E00               	movlw	0
 16742  01C552  6FE2               	movwf	226,b	;volatile
 16743                           
 16744                           ;mcc.c: 90: PMD2 = 0x00;
 16745  01C554  0E00               	movlw	0
 16746  01C556  6FE3               	movwf	227,b	;volatile
 16747                           
 16748                           ;mcc.c: 92: PMD3 = 0x00;
 16749  01C558  0E00               	movlw	0
 16750  01C55A  6FE4               	movwf	228,b	;volatile
 16751                           
 16752                           ;mcc.c: 94: PMD4 = 0x00;
 16753  01C55C  0E00               	movlw	0
 16754  01C55E  6FE5               	movwf	229,b	;volatile
 16755                           
 16756                           ;mcc.c: 96: PMD5 = 0x00;
 16757  01C560  0E00               	movlw	0
 16758  01C562  6FE6               	movwf	230,b	;volatile
 16759                           
 16760                           ; BSR set to: 14
 16761  01C564  0012               	return		;funcret
 16762  01C566                     __end_of_PMD_Initialize:
 16763                           	opt callstack 0
 16764                           
 16765 ;; *************** function _PIN_MANAGER_Initialize *****************
 16766 ;; Defined at:
 16767 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;		None
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;		None
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      void 
 16774 ;; Registers used:
 16775 ;;		wreg, status,2, status,0, cstack
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;Total ram usage:        0 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; Hardware stack levels required when called:   12
 16788 ;; This function calls:
 16789 ;;		_IOCBF2_SetInterruptHandler
 16790 ;;		_IOCBF3_SetInterruptHandler
 16791 ;; This function is called by:
 16792 ;;		_SYSTEM_Initialize
 16793 ;; This function uses a non-reentrant model
 16794 ;;
 16795                           
 16796                           	psect	text47
 16797  01AC5A                     __ptext47:
 16798                           	opt callstack 0
 16799  01AC5A                     _PIN_MANAGER_Initialize:
 16800                           	opt callstack 17
 16801                           
 16802                           ;pin_manager.c: 65: LATA = 0x00;
 16803                           
 16804                           ; BSR set to: 14
 16805                           ;incstack = 0
 16806  01AC5A  0E00               	movlw	0
 16807  01AC5C  6E83               	movwf	3971,c	;volatile
 16808                           
 16809                           ;pin_manager.c: 66: LATB = 0x00;
 16810  01AC5E  0E00               	movlw	0
 16811  01AC60  6E84               	movwf	3972,c	;volatile
 16812                           
 16813                           ;pin_manager.c: 67: LATC = 0x00;
 16814  01AC62  0E00               	movlw	0
 16815  01AC64  6E85               	movwf	3973,c	;volatile
 16816                           
 16817                           ;pin_manager.c: 72: TRISA = 0xFF;
 16818  01AC66  6888               	setf	3976,c	;volatile
 16819                           
 16820                           ;pin_manager.c: 73: TRISB = 0x3F;
 16821  01AC68  0E3F               	movlw	63
 16822  01AC6A  6E89               	movwf	3977,c	;volatile
 16823                           
 16824                           ;pin_manager.c: 74: TRISC = 0x08;
 16825  01AC6C  0E08               	movlw	8
 16826  01AC6E  6E8A               	movwf	3978,c	;volatile
 16827                           
 16828                           ;pin_manager.c: 79: ANSELC = 0x00;
 16829  01AC70  0E00               	movlw	0
 16830  01AC72  010F               	movlb	15	; () banked
 16831  01AC74  6F21               	movwf	33,b	;volatile
 16832                           
 16833                           ;pin_manager.c: 80: ANSELB = 0x00;
 16834  01AC76  0E00               	movlw	0
 16835  01AC78  6F19               	movwf	25,b	;volatile
 16836                           
 16837                           ;pin_manager.c: 81: ANSELA = 0x3F;
 16838  01AC7A  0E3F               	movlw	63
 16839  01AC7C  6F11               	movwf	17,b	;volatile
 16840                           
 16841                           ;pin_manager.c: 86: WPUE = 0x00;
 16842  01AC7E  0E00               	movlw	0
 16843  01AC80  6F2D               	movwf	45,b	;volatile
 16844                           
 16845                           ;pin_manager.c: 87: WPUB = 0x00;
 16846  01AC82  0E00               	movlw	0
 16847  01AC84  6F18               	movwf	24,b	;volatile
 16848                           
 16849                           ;pin_manager.c: 88: WPUA = 0x00;
 16850  01AC86  0E00               	movlw	0
 16851  01AC88  6F10               	movwf	16,b	;volatile
 16852                           
 16853                           ;pin_manager.c: 89: WPUC = 0x00;
 16854  01AC8A  0E00               	movlw	0
 16855  01AC8C  6F20               	movwf	32,b	;volatile
 16856                           
 16857                           ;pin_manager.c: 94: ODCONA = 0x00;
 16858  01AC8E  0E00               	movlw	0
 16859  01AC90  6F0F               	movwf	15,b	;volatile
 16860                           
 16861                           ;pin_manager.c: 95: ODCONB = 0x00;
 16862  01AC92  0E00               	movlw	0
 16863  01AC94  6F17               	movwf	23,b	;volatile
 16864                           
 16865                           ;pin_manager.c: 96: ODCONC = 0x00;
 16866  01AC96  0E00               	movlw	0
 16867  01AC98  6F1F               	movwf	31,b	;volatile
 16868                           
 16869                           ; BSR set to: 15
 16870                           ;pin_manager.c: 101: SLRCONA = 0xFF;
 16871  01AC9A  690E               	setf	14,b	;volatile
 16872                           
 16873                           ; BSR set to: 15
 16874                           ;pin_manager.c: 102: SLRCONB = 0xFF;
 16875  01AC9C  6916               	setf	22,b	;volatile
 16876                           
 16877                           ; BSR set to: 15
 16878                           ;pin_manager.c: 103: SLRCONC = 0xFF;
 16879  01AC9E  691E               	setf	30,b	;volatile
 16880                           
 16881                           ; BSR set to: 15
 16882                           ;pin_manager.c: 110: IOCBFbits.IOCBF2 = 0;
 16883  01ACA0  9512               	bcf	18,2,b	;volatile
 16884                           
 16885                           ; BSR set to: 15
 16886                           ;pin_manager.c: 112: IOCBFbits.IOCBF3 = 0;
 16887  01ACA2  9712               	bcf	18,3,b	;volatile
 16888                           
 16889                           ; BSR set to: 15
 16890                           ;pin_manager.c: 114: IOCBNbits.IOCBN2 = 1;
 16891  01ACA4  8513               	bsf	19,2,b	;volatile
 16892                           
 16893                           ; BSR set to: 15
 16894                           ;pin_manager.c: 116: IOCBNbits.IOCBN3 = 1;
 16895  01ACA6  8713               	bsf	19,3,b	;volatile
 16896                           
 16897                           ; BSR set to: 15
 16898                           ;pin_manager.c: 118: IOCBPbits.IOCBP2 = 1;
 16899  01ACA8  8514               	bsf	20,2,b	;volatile
 16900                           
 16901                           ; BSR set to: 15
 16902                           ;pin_manager.c: 120: IOCBPbits.IOCBP3 = 1;
 16903  01ACAA  8714               	bsf	20,3,b	;volatile
 16904                           
 16905                           ; BSR set to: 15
 16906                           ;pin_manager.c: 125: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 16907  01ACAC  0E02               	movlw	low _IOCBF2_DefaultInterruptHandler
 16908  01ACAE  0102               	movlb	2	; () banked
 16909  01ACB0  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 16910  01ACB2  0EC9               	movlw	high _IOCBF2_DefaultInterruptHandler
 16911  01ACB4  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16912  01ACB6  0E01               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 16913  01ACB8  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16914  01ACBA  ECDE  F0E3         	call	_IOCBF2_SetInterruptHandler	;wreg free
 16915                           
 16916                           ;pin_manager.c: 126: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 16917  01ACBE  0E00               	movlw	low _IOCBF3_DefaultInterruptHandler
 16918  01ACC0  0102               	movlb	2	; () banked
 16919  01ACC2  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 16920  01ACC4  0EC9               	movlw	high _IOCBF3_DefaultInterruptHandler
 16921  01ACC6  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16922  01ACC8  0E01               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 16923  01ACCA  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16924  01ACCC  ECD7  F0E3         	call	_IOCBF3_SetInterruptHandler	;wreg free
 16925                           
 16926                           ;pin_manager.c: 129: PIE0bits.IOCIE = 1;
 16927  01ACD0  010E               	movlb	14	; () banked
 16928  01ACD2  89C2               	bsf	194,4,b	;volatile
 16929                           
 16930                           ;pin_manager.c: 132: CCP2PPS = 0x09;
 16931  01ACD4  0E09               	movlw	9
 16932  01ACD6  6FB0               	movwf	176,b	;volatile
 16933                           
 16934                           ;pin_manager.c: 133: SSP2DATPPS = 0x0C;
 16935  01ACD8  0E0C               	movlw	12
 16936  01ACDA  6F90               	movwf	144,b	;volatile
 16937                           
 16938                           ;pin_manager.c: 134: RB5PPS = 0x11;
 16939  01ACDC  0E11               	movlw	17
 16940  01ACDE  6FF4               	movwf	244,b	;volatile
 16941                           
 16942                           ;pin_manager.c: 135: RC4PPS = 0x0B;
 16943  01ACE0  0E0B               	movlw	11
 16944  01ACE2  6FFB               	movwf	251,b	;volatile
 16945                           
 16946                           ;pin_manager.c: 136: RB4PPS = 0x12;
 16947  01ACE4  0E12               	movlw	18
 16948  01ACE6  6FF3               	movwf	243,b	;volatile
 16949                           
 16950                           ;pin_manager.c: 137: INT2PPS = 0x06;
 16951  01ACE8  0E06               	movlw	6
 16952  01ACEA  6FA3               	movwf	163,b	;volatile
 16953                           
 16954                           ;pin_manager.c: 138: INT1PPS = 0x07;
 16955  01ACEC  0E07               	movlw	7
 16956  01ACEE  6FA2               	movwf	162,b	;volatile
 16957                           
 16958                           ;pin_manager.c: 139: RX2PPS = 0x13;
 16959  01ACF0  0E13               	movlw	19
 16960  01ACF2  6F8D               	movwf	141,b	;volatile
 16961                           
 16962                           ;pin_manager.c: 140: SSP2CLKPPS = 0x0D;
 16963  01ACF4  0E0D               	movlw	13
 16964  01ACF6  6F8F               	movwf	143,b	;volatile
 16965                           
 16966                           ; BSR set to: 14
 16967  01ACF8  0012               	return		;funcret
 16968  01ACFA                     __end_of_PIN_MANAGER_Initialize:
 16969                           	opt callstack 0
 16970                           
 16971 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 16972 ;; Defined at:
 16973 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16976 ;;		 -> QIChargeIOCHandler(1), IOCBF3_DefaultInterruptHandler(1), 
 16977 ;; Auto vars:     Size  Location     Type
 16978 ;;		None
 16979 ;; Return value:  Size  Location     Type
 16980 ;;                  1    wreg      void 
 16981 ;; Registers used:
 16982 ;;		wreg, status,2, status,0
 16983 ;; Tracked objects:
 16984 ;;		On entry : 0/0
 16985 ;;		On exit  : 0/0
 16986 ;;		Unchanged: 0/0
 16987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16988 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;Total ram usage:        3 bytes
 16993 ;; Hardware stack levels used:    1
 16994 ;; Hardware stack levels required when called:   11
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		_PIN_MANAGER_Initialize
 16999 ;;		_main
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           	psect	text48
 17004  01C7AE                     __ptext48:
 17005                           	opt callstack 0
 17006  01C7AE                     _IOCBF3_SetInterruptHandler:
 17007                           	opt callstack 17
 17008                           
 17009                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 17010                           
 17011                           ; BSR set to: 14
 17012                           ;incstack = 0
 17013  01C7AE  C200  F177         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 17014  01C7B2  C201  F178         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 17015  01C7B6  C202  F179         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 17016  01C7BA  0012               	return		;funcret
 17017  01C7BC                     __end_of_IOCBF3_SetInterruptHandler:
 17018                           	opt callstack 0
 17019                           
 17020 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 17021 ;; Defined at:
 17022 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17025 ;;		 -> QIIdleIOCHandler(1), IOCBF2_DefaultInterruptHandler(1), 
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;		None
 17028 ;; Return value:  Size  Location     Type
 17029 ;;                  1    wreg      void 
 17030 ;; Registers used:
 17031 ;;		wreg, status,2, status,0
 17032 ;; Tracked objects:
 17033 ;;		On entry : 0/0
 17034 ;;		On exit  : 0/0
 17035 ;;		Unchanged: 0/0
 17036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17037 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17040 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17041 ;;Total ram usage:        3 bytes
 17042 ;; Hardware stack levels used:    1
 17043 ;; Hardware stack levels required when called:   11
 17044 ;; This function calls:
 17045 ;;		Nothing
 17046 ;; This function is called by:
 17047 ;;		_PIN_MANAGER_Initialize
 17048 ;;		_main
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           	psect	text49
 17053  01C7BC                     __ptext49:
 17054                           	opt callstack 0
 17055  01C7BC                     _IOCBF2_SetInterruptHandler:
 17056                           	opt callstack 17
 17057                           
 17058                           ;pin_manager.c: 176: IOCBF2_InterruptHandler = InterruptHandler;
 17059                           
 17060                           ;incstack = 0
 17061  01C7BC  C200  F17A         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 17062  01C7C0  C201  F17B         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 17063  01C7C4  C202  F17C         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 17064  01C7C8  0012               	return		;funcret
 17065  01C7CA                     __end_of_IOCBF2_SetInterruptHandler:
 17066                           	opt callstack 0
 17067                           
 17068 ;; *************** function _OSCILLATOR_Initialize *****************
 17069 ;; Defined at:
 17070 ;;		line 69 in file "mcc_generated_files/mcc.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;		None
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;		None
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  1    wreg      void 
 17077 ;; Registers used:
 17078 ;;		wreg, status,2
 17079 ;; Tracked objects:
 17080 ;;		On entry : 0/0
 17081 ;;		On exit  : 0/0
 17082 ;;		Unchanged: 0/0
 17083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17088 ;;Total ram usage:        0 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:   11
 17091 ;; This function calls:
 17092 ;;		Nothing
 17093 ;; This function is called by:
 17094 ;;		_SYSTEM_Initialize
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           	psect	text50
 17099  01C622                     __ptext50:
 17100                           	opt callstack 0
 17101  01C622                     _OSCILLATOR_Initialize:
 17102                           	opt callstack 18
 17103                           
 17104                           ;mcc.c: 72: OSCCON1 = 0x60;
 17105                           
 17106                           ;incstack = 0
 17107  01C622  0E60               	movlw	96
 17108  01C624  010E               	movlb	14	; () banked
 17109  01C626  6FD8               	movwf	216,b	;volatile
 17110                           
 17111                           ;mcc.c: 74: OSCCON3 = 0x00;
 17112  01C628  0E00               	movlw	0
 17113  01C62A  6FDA               	movwf	218,b	;volatile
 17114                           
 17115                           ;mcc.c: 76: OSCEN = 0x00;
 17116  01C62C  0E00               	movlw	0
 17117  01C62E  6FDC               	movwf	220,b	;volatile
 17118                           
 17119                           ;mcc.c: 78: OSCFRQ = 0x08;
 17120  01C630  0E08               	movlw	8
 17121  01C632  6FDE               	movwf	222,b	;volatile
 17122                           
 17123                           ;mcc.c: 80: OSCTUNE = 0x00;
 17124  01C634  0E00               	movlw	0
 17125  01C636  6FDD               	movwf	221,b	;volatile
 17126                           
 17127                           ; BSR set to: 14
 17128  01C638  0012               	return		;funcret
 17129  01C63A                     __end_of_OSCILLATOR_Initialize:
 17130                           	opt callstack 0
 17131                           
 17132 ;; *************** function _INTERRUPT_Initialize *****************
 17133 ;; Defined at:
 17134 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17135 ;; Parameters:    Size  Location     Type
 17136 ;;		None
 17137 ;; Auto vars:     Size  Location     Type
 17138 ;;		None
 17139 ;; Return value:  Size  Location     Type
 17140 ;;                  1    wreg      void 
 17141 ;; Registers used:
 17142 ;;		None
 17143 ;; Tracked objects:
 17144 ;;		On entry : 0/0
 17145 ;;		On exit  : 0/0
 17146 ;;		Unchanged: 0/0
 17147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17152 ;;Total ram usage:        0 bytes
 17153 ;; Hardware stack levels used:    1
 17154 ;; Hardware stack levels required when called:   11
 17155 ;; This function calls:
 17156 ;;		Nothing
 17157 ;; This function is called by:
 17158 ;;		_SYSTEM_Initialize
 17159 ;; This function uses a non-reentrant model
 17160 ;;
 17161                           
 17162                           	psect	text51
 17163  01C490                     __ptext51:
 17164                           	opt callstack 0
 17165  01C490                     _INTERRUPT_Initialize:
 17166                           	opt callstack 18
 17167                           
 17168                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 17169                           
 17170                           ; BSR set to: 14
 17171                           ;incstack = 0
 17172  01C490  8AF2               	bsf	4082,5,c	;volatile
 17173                           
 17174                           ;interrupt_manager.c: 60: IPR4bits.TMR1IP = 1;
 17175  01C492  010E               	movlb	14	; () banked
 17176  01C494  81BE               	bsf	190,0,b	;volatile
 17177                           
 17178                           ;interrupt_manager.c: 63: IPR0bits.INT2IP = 1;
 17179  01C496  85BA               	bsf	186,2,b	;volatile
 17180                           
 17181                           ;interrupt_manager.c: 66: IPR0bits.TMR0IP = 1;
 17182  01C498  8BBA               	bsf	186,5,b	;volatile
 17183                           
 17184                           ;interrupt_manager.c: 69: IPR3bits.RC2IP = 1;
 17185  01C49A  8FBD               	bsf	189,7,b	;volatile
 17186                           
 17187                           ;interrupt_manager.c: 72: IPR1bits.ADTIP = 1;
 17188  01C49C  83BB               	bsf	187,1,b	;volatile
 17189                           
 17190                           ;interrupt_manager.c: 75: IPR0bits.IOCIP = 1;
 17191  01C49E  89BA               	bsf	186,4,b	;volatile
 17192                           
 17193                           ;interrupt_manager.c: 78: IPR3bits.TX2IP = 1;
 17194  01C4A0  8DBD               	bsf	189,6,b	;volatile
 17195                           
 17196                           ;interrupt_manager.c: 81: IPR0bits.INT1IP = 1;
 17197  01C4A2  83BA               	bsf	186,1,b	;volatile
 17198                           
 17199                           ;interrupt_manager.c: 85: IPR4bits.TMR2IP = 0;
 17200  01C4A4  93BE               	bcf	190,1,b	;volatile
 17201                           
 17202                           ;interrupt_manager.c: 88: IPR3bits.BCL2IP = 0;
 17203  01C4A6  97BD               	bcf	189,3,b	;volatile
 17204                           
 17205                           ;interrupt_manager.c: 91: IPR3bits.SSP2IP = 0;
 17206  01C4A8  95BD               	bcf	189,2,b	;volatile
 17207                           
 17208                           ;interrupt_manager.c: 94: IPR4bits.TMR3IP = 0;
 17209  01C4AA  95BE               	bcf	190,2,b	;volatile
 17210                           
 17211                           ;interrupt_manager.c: 97: IPR6bits.CCP2IP = 0;
 17212  01C4AC  93C0               	bcf	192,1,b	;volatile
 17213                           
 17214                           ; BSR set to: 14
 17215  01C4AE  0012               	return		;funcret
 17216  01C4B0                     __end_of_INTERRUPT_Initialize:
 17217                           	opt callstack 0
 17218                           
 17219 ;; *************** function _I2C2_Initialize *****************
 17220 ;; Defined at:
 17221 ;;		line 199 in file "mcc_generated_files/i2c2.c"
 17222 ;; Parameters:    Size  Location     Type
 17223 ;;		None
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;		None
 17226 ;; Return value:  Size  Location     Type
 17227 ;;                  1    wreg      void 
 17228 ;; Registers used:
 17229 ;;		wreg, status,2, status,0
 17230 ;; Tracked objects:
 17231 ;;		On entry : 0/0
 17232 ;;		On exit  : 0/0
 17233 ;;		Unchanged: 0/0
 17234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17239 ;;Total ram usage:        0 bytes
 17240 ;; Hardware stack levels used:    1
 17241 ;; Hardware stack levels required when called:   11
 17242 ;; This function calls:
 17243 ;;		Nothing
 17244 ;; This function is called by:
 17245 ;;		_SYSTEM_Initialize
 17246 ;; This function uses a non-reentrant model
 17247 ;;
 17248                           
 17249                           	psect	text52
 17250  01BFC8                     __ptext52:
 17251                           	opt callstack 0
 17252  01BFC8                     _I2C2_Initialize:
 17253                           	opt callstack 18
 17254                           
 17255                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
 17256                           
 17257                           ; BSR set to: 14
 17258                           ;incstack = 0
 17259  01BFC8  0EA3               	movlw	low _i2c2_tr_queue
 17260  01BFCA  0101               	movlb	1	; () banked
 17261  01BFCC  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 17262  01BFCE  0E01               	movlw	high _i2c2_tr_queue
 17263  01BFD0  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 17264                           
 17265                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
 17266  01BFD2  0EA3               	movlw	low _i2c2_tr_queue
 17267  01BFD4  6F61               	movwf	_i2c2_object& (0+255),b
 17268  01BFD6  0E01               	movlw	high _i2c2_tr_queue
 17269  01BFD8  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 17270                           
 17271                           ; BSR set to: 1
 17272                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
 17273  01BFDA  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 17274                           
 17275                           ; BSR set to: 1
 17276                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
 17277  01BFDC  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 17278                           
 17279                           ; BSR set to: 1
 17280                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
 17281  01BFDE  0E00               	movlw	0
 17282  01BFE0  6F67               	movwf	(_i2c2_object+6)& (0+255),b
 17283                           
 17284                           ; BSR set to: 1
 17285                           ;i2c2.c: 209: SSP2STAT = 0x00;
 17286  01BFE2  0E00               	movlw	0
 17287  01BFE4  010E               	movlb	14	; () banked
 17288  01BFE6  6F95               	movwf	149,b	;volatile
 17289                           
 17290                           ; BSR set to: 14
 17291                           ;i2c2.c: 211: SSP2CON1 = 0x28;
 17292  01BFE8  0E28               	movlw	40
 17293  01BFEA  6F96               	movwf	150,b	;volatile
 17294                           
 17295                           ; BSR set to: 14
 17296                           ;i2c2.c: 213: SSP2CON3 = 0x00;
 17297  01BFEC  0E00               	movlw	0
 17298  01BFEE  6F98               	movwf	152,b	;volatile
 17299                           
 17300                           ; BSR set to: 14
 17301                           ;i2c2.c: 215: SSP2ADD = 0x27;
 17302  01BFF0  0E27               	movlw	39
 17303  01BFF2  6F93               	movwf	147,b	;volatile
 17304                           
 17305                           ; BSR set to: 14
 17306                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
 17307  01BFF4  95CD               	bcf	205,2,b	;volatile
 17308                           
 17309                           ; BSR set to: 14
 17310                           ;i2c2.c: 219: PIR3bits.BCL2IF = 0;
 17311  01BFF6  97CD               	bcf	205,3,b	;volatile
 17312                           
 17313                           ; BSR set to: 14
 17314                           ;i2c2.c: 222: PIE3bits.SSP2IE = 1;
 17315  01BFF8  85C5               	bsf	197,2,b	;volatile
 17316                           
 17317                           ; BSR set to: 14
 17318                           ;i2c2.c: 223: PIE3bits.BCL2IE = 1;
 17319  01BFFA  87C5               	bsf	197,3,b	;volatile
 17320                           
 17321                           ; BSR set to: 14
 17322  01BFFC  0012               	return		;funcret
 17323  01BFFE                     __end_of_I2C2_Initialize:
 17324                           	opt callstack 0
 17325                           
 17326 ;; *************** function _FVR_Initialize *****************
 17327 ;; Defined at:
 17328 ;;		line 58 in file "mcc_generated_files/fvr.c"
 17329 ;; Parameters:    Size  Location     Type
 17330 ;;		None
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;		None
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  1    wreg      void 
 17335 ;; Registers used:
 17336 ;;		wreg, status,2
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17346 ;;Total ram usage:        0 bytes
 17347 ;; Hardware stack levels used:    1
 17348 ;; Hardware stack levels required when called:   11
 17349 ;; This function calls:
 17350 ;;		Nothing
 17351 ;; This function is called by:
 17352 ;;		_SYSTEM_Initialize
 17353 ;; This function uses a non-reentrant model
 17354 ;;
 17355                           
 17356                           	psect	text53
 17357  01C854                     __ptext53:
 17358                           	opt callstack 0
 17359  01C854                     _FVR_Initialize:
 17360                           	opt callstack 18
 17361                           
 17362                           ;fvr.c: 61: FVRCON = 0xB3;
 17363                           
 17364                           ; BSR set to: 14
 17365                           ;incstack = 0
 17366  01C854  0EB3               	movlw	179
 17367  01C856  010F               	movlb	15	; () banked
 17368  01C858  6F31               	movwf	49,b	;volatile
 17369                           
 17370                           ; BSR set to: 15
 17371                           ;fvr.c: 62: FVRCONbits.TSRNG = 1;
 17372  01C85A  8931               	bsf	49,4,b	;volatile
 17373                           
 17374                           ; BSR set to: 15
 17375                           ;fvr.c: 63: FVRCONbits.TSEN = 1;
 17376  01C85C  8B31               	bsf	49,5,b	;volatile
 17377                           
 17378                           ; BSR set to: 15
 17379  01C85E  0012               	return		;funcret
 17380  01C860                     __end_of_FVR_Initialize:
 17381                           	opt callstack 0
 17382                           
 17383 ;; *************** function _EXT_INT_Initialize *****************
 17384 ;; Defined at:
 17385 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;		None
 17388 ;; Auto vars:     Size  Location     Type
 17389 ;;		None
 17390 ;; Return value:  Size  Location     Type
 17391 ;;                  1    wreg      void 
 17392 ;; Registers used:
 17393 ;;		wreg, status,2, status,0, cstack
 17394 ;; Tracked objects:
 17395 ;;		On entry : 0/0
 17396 ;;		On exit  : 0/0
 17397 ;;		Unchanged: 0/0
 17398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;Total ram usage:        0 bytes
 17404 ;; Hardware stack levels used:    1
 17405 ;; Hardware stack levels required when called:   12
 17406 ;; This function calls:
 17407 ;;		_INT1_SetInterruptHandler
 17408 ;;		_INT2_SetInterruptHandler
 17409 ;; This function is called by:
 17410 ;;		_SYSTEM_Initialize
 17411 ;; This function uses a non-reentrant model
 17412 ;;
 17413                           
 17414                           	psect	text54
 17415  01BF90                     __ptext54:
 17416                           	opt callstack 0
 17417  01BF90                     _EXT_INT_Initialize:
 17418                           	opt callstack 17
 17419                           
 17420                           ;ext_int.c: 91: (PIR0bits.INT1IF = 0);
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;incstack = 0
 17424  01BF90  010E               	movlb	14	; () banked
 17425  01BF92  93CA               	bcf	202,1,b	;volatile
 17426                           
 17427                           ;ext_int.c: 92: (INTCONbits.INT1EDG = 1);
 17428  01BF94  82F2               	bsf	4082,1,c	;volatile
 17429                           
 17430                           ; BSR set to: 14
 17431                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 17432  01BF96  0E06               	movlw	low _INT1_DefaultInterruptHandler
 17433  01BF98  0102               	movlb	2	; () banked
 17434  01BF9A  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 17435  01BF9C  0EC9               	movlw	high _INT1_DefaultInterruptHandler
 17436  01BF9E  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17437  01BFA0  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 17438  01BFA2  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17439  01BFA4  ECEC  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
 17440                           
 17441                           ;ext_int.c: 95: (PIE0bits.INT1IE = 1);
 17442  01BFA8  010E               	movlb	14	; () banked
 17443  01BFAA  83C2               	bsf	194,1,b	;volatile
 17444                           
 17445                           ; BSR set to: 14
 17446                           ;ext_int.c: 100: (PIR0bits.INT2IF = 0);
 17447  01BFAC  95CA               	bcf	202,2,b	;volatile
 17448                           
 17449                           ; BSR set to: 14
 17450                           ;ext_int.c: 101: (INTCONbits.INT2EDG = 1);
 17451  01BFAE  84F2               	bsf	4082,2,c	;volatile
 17452                           
 17453                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 17454  01BFB0  0E04               	movlw	low _INT2_DefaultInterruptHandler
 17455  01BFB2  0102               	movlb	2	; () banked
 17456  01BFB4  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 17457  01BFB6  0EC9               	movlw	high _INT2_DefaultInterruptHandler
 17458  01BFB8  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17459  01BFBA  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 17460  01BFBC  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17461  01BFBE  ECE5  F0E3         	call	_INT2_SetInterruptHandler	;wreg free
 17462                           
 17463                           ;ext_int.c: 104: (PIE0bits.INT2IE = 1);
 17464  01BFC2  010E               	movlb	14	; () banked
 17465  01BFC4  85C2               	bsf	194,2,b	;volatile
 17466                           
 17467                           ; BSR set to: 14
 17468  01BFC6  0012               	return		;funcret
 17469  01BFC8                     __end_of_EXT_INT_Initialize:
 17470                           	opt callstack 0
 17471                           
 17472 ;; *************** function _INT2_SetInterruptHandler *****************
 17473 ;; Defined at:
 17474 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17477 ;;		 -> rightCapTouchHandler(1), INT2_DefaultInterruptHandler(1), 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      void 
 17482 ;; Registers used:
 17483 ;;		wreg, status,2, status,0
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17489 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;Total ram usage:        3 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:   11
 17496 ;; This function calls:
 17497 ;;		Nothing
 17498 ;; This function is called by:
 17499 ;;		_EXT_INT_Initialize
 17500 ;;		_main
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text55
 17505  01C7CA                     __ptext55:
 17506                           	opt callstack 0
 17507  01C7CA                     _INT2_SetInterruptHandler:
 17508                           	opt callstack 17
 17509                           
 17510                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 17511                           
 17512                           ; BSR set to: 14
 17513                           ;incstack = 0
 17514  01C7CA  C200  F183         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 17515  01C7CE  C201  F184         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 17516  01C7D2  C202  F185         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 17517  01C7D6  0012               	return		;funcret
 17518  01C7D8                     __end_of_INT2_SetInterruptHandler:
 17519                           	opt callstack 0
 17520                           
 17521 ;; *************** function _INT1_SetInterruptHandler *****************
 17522 ;; Defined at:
 17523 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17526 ;;		 -> leftCapTouchHandler(1), INT1_DefaultInterruptHandler(1), 
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;		None
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  1    wreg      void 
 17531 ;; Registers used:
 17532 ;;		wreg, status,2, status,0
 17533 ;; Tracked objects:
 17534 ;;		On entry : 0/0
 17535 ;;		On exit  : 0/0
 17536 ;;		Unchanged: 0/0
 17537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17538 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17542 ;;Total ram usage:        3 bytes
 17543 ;; Hardware stack levels used:    1
 17544 ;; Hardware stack levels required when called:   11
 17545 ;; This function calls:
 17546 ;;		Nothing
 17547 ;; This function is called by:
 17548 ;;		_EXT_INT_Initialize
 17549 ;;		_main
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text56
 17554  01C7D8                     __ptext56:
 17555                           	opt callstack 0
 17556  01C7D8                     _INT1_SetInterruptHandler:
 17557                           	opt callstack 17
 17558                           
 17559                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 17560                           
 17561                           ;incstack = 0
 17562  01C7D8  C200  F186         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 17563  01C7DC  C201  F187         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 17564  01C7E0  C202  F188         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 17565  01C7E4  0012               	return		;funcret
 17566  01C7E6                     __end_of_INT1_SetInterruptHandler:
 17567                           	opt callstack 0
 17568                           
 17569 ;; *************** function _EUSART2_Initialize *****************
 17570 ;; Defined at:
 17571 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 17572 ;; Parameters:    Size  Location     Type
 17573 ;;		None
 17574 ;; Auto vars:     Size  Location     Type
 17575 ;;		None
 17576 ;; Return value:  Size  Location     Type
 17577 ;;                  1    wreg      void 
 17578 ;; Registers used:
 17579 ;;		wreg, status,2, status,0, cstack
 17580 ;; Tracked objects:
 17581 ;;		On entry : 0/0
 17582 ;;		On exit  : 0/0
 17583 ;;		Unchanged: 0/0
 17584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17589 ;;Total ram usage:        0 bytes
 17590 ;; Hardware stack levels used:    1
 17591 ;; Hardware stack levels required when called:   12
 17592 ;; This function calls:
 17593 ;;		_EUSART2_SetRxInterruptHandler
 17594 ;;		_EUSART2_SetTxInterruptHandler
 17595 ;; This function is called by:
 17596 ;;		_SYSTEM_Initialize
 17597 ;; This function uses a non-reentrant model
 17598 ;;
 17599                           
 17600                           	psect	text57
 17601  01B1E0                     __ptext57:
 17602                           	opt callstack 0
 17603  01B1E0                     _EUSART2_Initialize:
 17604                           	opt callstack 17
 17605                           
 17606                           ;eusart2.c: 82: PIE3bits.RC2IE = 0;
 17607                           
 17608                           ;incstack = 0
 17609  01B1E0  010E               	movlb	14	; () banked
 17610  01B1E2  9FC5               	bcf	197,7,b	;volatile
 17611                           
 17612                           ; BSR set to: 14
 17613                           ;eusart2.c: 83: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 17614  01B1E4  0E14               	movlw	low _EUSART2_Receive_ISR
 17615  01B1E6  0102               	movlb	2	; () banked
 17616  01B1E8  6F00               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 17617  01B1EA  0EAB               	movlw	high _EUSART2_Receive_ISR
 17618  01B1EC  6F01               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 17619  01B1EE  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 17620  01B1F0  6F02               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 17621  01B1F2  ECFA  F0E3         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 17622                           
 17623                           ;eusart2.c: 84: PIE3bits.TX2IE = 0;
 17624  01B1F6  010E               	movlb	14	; () banked
 17625  01B1F8  9DC5               	bcf	197,6,b	;volatile
 17626                           
 17627                           ;eusart2.c: 85: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 17628  01B1FA  0ED4               	movlw	low _EUSART2_Transmit_ISR
 17629  01B1FC  0102               	movlb	2	; () banked
 17630  01B1FE  6F00               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 17631  01B200  0EBB               	movlw	high _EUSART2_Transmit_ISR
 17632  01B202  6F01               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 17633  01B204  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 17634  01B206  6F02               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 17635  01B208  ECF3  F0E3         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 17636                           
 17637                           ;eusart2.c: 89: BAUD2CON = 0x08;
 17638  01B20C  0E08               	movlw	8
 17639  01B20E  010E               	movlb	14	; () banked
 17640  01B210  6F9F               	movwf	159,b	;volatile
 17641                           
 17642                           ; BSR set to: 14
 17643                           ;eusart2.c: 92: RC2STA = 0x90;
 17644  01B212  0E90               	movlw	144
 17645  01B214  6F9D               	movwf	157,b	;volatile
 17646                           
 17647                           ; BSR set to: 14
 17648                           ;eusart2.c: 95: TX2STA = 0x24;
 17649  01B216  0E24               	movlw	36
 17650  01B218  6F9E               	movwf	158,b	;volatile
 17651                           
 17652                           ; BSR set to: 14
 17653                           ;eusart2.c: 98: SP2BRGL = 0x8A;
 17654  01B21A  0E8A               	movlw	138
 17655  01B21C  6F9B               	movwf	155,b	;volatile
 17656                           
 17657                           ; BSR set to: 14
 17658                           ;eusart2.c: 101: SP2BRGH = 0x00;
 17659  01B21E  0E00               	movlw	0
 17660  01B220  6F9C               	movwf	156,b	;volatile
 17661                           
 17662                           ; BSR set to: 14
 17663                           ;eusart2.c: 105: eusart2TxHead = 0;
 17664  01B222  0E00               	movlw	0
 17665  01B224  0101               	movlb	1	; () banked
 17666  01B226  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 17667  01B228  0E00               	movlw	0
 17668  01B22A  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17669                           
 17670                           ; BSR set to: 1
 17671                           ;eusart2.c: 106: eusart2TxTail = 0;
 17672  01B22C  0E00               	movlw	0
 17673  01B22E  6F92               	movwf	(_eusart2TxTail+1)& (0+255),b	;volatile
 17674  01B230  0E00               	movlw	0
 17675  01B232  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17676                           
 17677                           ; BSR set to: 1
 17678                           ;eusart2.c: 107: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 17679  01B234  0E04               	movlw	4
 17680  01B236  6F90               	movwf	(_eusart2TxBufferRemaining+1)& (0+255),b	;volatile
 17681  01B238  0E00               	movlw	0
 17682  01B23A  6F8F               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17683                           
 17684                           ; BSR set to: 1
 17685                           ;eusart2.c: 109: eusart2RxHead = 0;
 17686  01B23C  0E00               	movlw	0
 17687  01B23E  0100               	movlb	0	; () banked
 17688  01B240  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;eusart2.c: 110: eusart2RxTail = 0;
 17692  01B242  0E00               	movlw	0
 17693  01B244  0101               	movlb	1	; () banked
 17694  01B246  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 17695                           
 17696                           ; BSR set to: 1
 17697                           ;eusart2.c: 111: eusart2RxCount = 0;
 17698  01B248  0E00               	movlw	0
 17699  01B24A  6F97               	movwf	_eusart2RxCount& (0+255),b	;volatile
 17700                           
 17701                           ; BSR set to: 1
 17702                           ;eusart2.c: 114: PIE3bits.RC2IE = 1;
 17703  01B24C  010E               	movlb	14	; () banked
 17704  01B24E  8FC5               	bsf	197,7,b	;volatile
 17705                           
 17706                           ; BSR set to: 14
 17707  01B250  0012               	return		;funcret
 17708  01B252                     __end_of_EUSART2_Initialize:
 17709                           	opt callstack 0
 17710                           
 17711 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17712 ;; Defined at:
 17713 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17716 ;;		 -> EUSART2_Transmit_ISR(1), 
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;		None
 17719 ;; Return value:  Size  Location     Type
 17720 ;;                  1    wreg      void 
 17721 ;; Registers used:
 17722 ;;		wreg, status,2, status,0
 17723 ;; Tracked objects:
 17724 ;;		On entry : 0/0
 17725 ;;		On exit  : 0/0
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17728 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17731 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17732 ;;Total ram usage:        3 bytes
 17733 ;; Hardware stack levels used:    1
 17734 ;; Hardware stack levels required when called:   11
 17735 ;; This function calls:
 17736 ;;		Nothing
 17737 ;; This function is called by:
 17738 ;;		_EUSART2_Initialize
 17739 ;; This function uses a non-reentrant model
 17740 ;;
 17741                           
 17742                           	psect	text58
 17743  01C7E6                     __ptext58:
 17744                           	opt callstack 0
 17745  01C7E6                     _EUSART2_SetTxInterruptHandler:
 17746                           	opt callstack 17
 17747                           
 17748                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 17749                           
 17750                           ; BSR set to: 14
 17751                           ;incstack = 0
 17752  01C7E6  C200  F180         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 17753  01C7EA  C201  F181         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 17754  01C7EE  C202  F182         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 17755  01C7F2  0012               	return		;funcret
 17756  01C7F4                     __end_of_EUSART2_SetTxInterruptHandler:
 17757                           	opt callstack 0
 17758                           
 17759 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17760 ;; Defined at:
 17761 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17764 ;;		 -> EUSART2_Receive_ISR(1), 
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  1    wreg      void 
 17769 ;; Registers used:
 17770 ;;		wreg, status,2, status,0
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17776 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17779 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17780 ;;Total ram usage:        3 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:   11
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		_EUSART2_Initialize
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text59
 17791  01C7F4                     __ptext59:
 17792                           	opt callstack 0
 17793  01C7F4                     _EUSART2_SetRxInterruptHandler:
 17794                           	opt callstack 17
 17795                           
 17796                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 17797                           
 17798                           ;incstack = 0
 17799  01C7F4  C200  F17D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 17800  01C7F8  C201  F17E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 17801  01C7FC  C202  F17F         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 17802  01C800  0012               	return		;funcret
 17803  01C802                     __end_of_EUSART2_SetRxInterruptHandler:
 17804                           	opt callstack 0
 17805                           
 17806 ;; *************** function _CCP2_Initialize *****************
 17807 ;; Defined at:
 17808 ;;		line 61 in file "mcc_generated_files/ccp2.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;		None
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;		None
 17813 ;; Return value:  Size  Location     Type
 17814 ;;                  1    wreg      void 
 17815 ;; Registers used:
 17816 ;;		wreg, status,2
 17817 ;; Tracked objects:
 17818 ;;		On entry : 0/0
 17819 ;;		On exit  : 0/0
 17820 ;;		Unchanged: 0/0
 17821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;Total ram usage:        0 bytes
 17827 ;; Hardware stack levels used:    1
 17828 ;; Hardware stack levels required when called:   11
 17829 ;; This function calls:
 17830 ;;		Nothing
 17831 ;; This function is called by:
 17832 ;;		_SYSTEM_Initialize
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	text60
 17837  01C3EC                     __ptext60:
 17838                           	opt callstack 0
 17839  01C3EC                     _CCP2_Initialize:
 17840                           	opt callstack 18
 17841                           
 17842                           ;ccp2.c: 66: CCP2CON = 0x87;
 17843                           
 17844                           ;incstack = 0
 17845  01C3EC  0E87               	movlw	135
 17846  01C3EE  6EA8               	movwf	4008,c	;volatile
 17847                           
 17848                           ;ccp2.c: 69: CCP2CAP = 0x00;
 17849  01C3F0  0E00               	movlw	0
 17850  01C3F2  6EA9               	movwf	4009,c	;volatile
 17851                           
 17852                           ;ccp2.c: 72: CCPR2H = 0x00;
 17853  01C3F4  0E00               	movlw	0
 17854  01C3F6  6EA7               	movwf	4007,c	;volatile
 17855                           
 17856                           ;ccp2.c: 75: CCPR2L = 0x00;
 17857  01C3F8  0E00               	movlw	0
 17858  01C3FA  6EA6               	movwf	4006,c	;volatile
 17859                           
 17860                           ;ccp2.c: 78: CCPTMRSbits.C2TSEL = 0x3;
 17861  01C3FC  0E0C               	movlw	12
 17862  01C3FE  12AE               	iorwf	4014,f,c	;volatile
 17863                           
 17864                           ;ccp2.c: 81: PIR6bits.CCP2IF = 0;
 17865  01C400  010E               	movlb	14	; () banked
 17866  01C402  93D0               	bcf	208,1,b	;volatile
 17867                           
 17868                           ; BSR set to: 14
 17869                           ;ccp2.c: 84: PIE6bits.CCP2IE = 1;
 17870  01C404  83C8               	bsf	200,1,b	;volatile
 17871                           
 17872                           ;ccp2.c: 86: QI_current_edge = qi_period_rising_1;
 17873  01C406  0E00               	movlw	0
 17874  01C408  0101               	movlb	1	; () banked
 17875  01C40A  6F96               	movwf	_QI_current_edge& (0+255),b
 17876                           
 17877                           ; BSR set to: 1
 17878  01C40C  0012               	return		;funcret
 17879  01C40E                     __end_of_CCP2_Initialize:
 17880                           	opt callstack 0
 17881                           
 17882 ;; *************** function _ADCC_Initialize *****************
 17883 ;; Defined at:
 17884 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17885 ;; Parameters:    Size  Location     Type
 17886 ;;		None
 17887 ;; Auto vars:     Size  Location     Type
 17888 ;;		None
 17889 ;; Return value:  Size  Location     Type
 17890 ;;                  1    wreg      void 
 17891 ;; Registers used:
 17892 ;;		wreg, status,2, status,0, cstack
 17893 ;; Tracked objects:
 17894 ;;		On entry : 0/0
 17895 ;;		On exit  : 0/0
 17896 ;;		Unchanged: 0/0
 17897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17902 ;;Total ram usage:        0 bytes
 17903 ;; Hardware stack levels used:    1
 17904 ;; Hardware stack levels required when called:   12
 17905 ;; This function calls:
 17906 ;;		_ADCC_SetADTIInterruptHandler
 17907 ;; This function is called by:
 17908 ;;		_SYSTEM_Initialize
 17909 ;; This function uses a non-reentrant model
 17910 ;;
 17911                           
 17912                           	psect	text61
 17913  01B4CE                     __ptext61:
 17914                           	opt callstack 0
 17915  01B4CE                     _ADCC_Initialize:
 17916                           	opt callstack 17
 17917                           
 17918                           ;adcc.c: 67: ADLTHL = 0x00;
 17919                           
 17920                           ; BSR set to: 1
 17921                           ;incstack = 0
 17922  01B4CE  0E00               	movlw	0
 17923  01B4D0  6E6A               	movwf	3946,c	;volatile
 17924                           
 17925                           ;adcc.c: 69: ADLTHH = 0x00;
 17926  01B4D2  0E00               	movlw	0
 17927  01B4D4  6E6B               	movwf	3947,c	;volatile
 17928                           
 17929                           ;adcc.c: 71: ADUTHL = 0x00;
 17930  01B4D6  0E00               	movlw	0
 17931  01B4D8  6E6C               	movwf	3948,c	;volatile
 17932                           
 17933                           ;adcc.c: 73: ADUTHH = 0x00;
 17934  01B4DA  0E00               	movlw	0
 17935  01B4DC  6E6D               	movwf	3949,c	;volatile
 17936                           
 17937                           ;adcc.c: 75: ADSTPTL = 0x00;
 17938  01B4DE  0E00               	movlw	0
 17939  01B4E0  6E68               	movwf	3944,c	;volatile
 17940                           
 17941                           ;adcc.c: 77: ADSTPTH = 0x00;
 17942  01B4E2  0E00               	movlw	0
 17943  01B4E4  6E69               	movwf	3945,c	;volatile
 17944                           
 17945                           ;adcc.c: 79: ADRPT = 0xFF;
 17946  01B4E6  6866               	setf	3942,c	;volatile
 17947                           
 17948                           ;adcc.c: 81: ADPCH = 0x00;
 17949  01B4E8  0E00               	movlw	0
 17950  01B4EA  010F               	movlb	15	; () banked
 17951  01B4EC  6F5F               	movwf	95,b	;volatile
 17952                           
 17953                           ;adcc.c: 83: ADCAP = 0x00;
 17954  01B4EE  0E00               	movlw	0
 17955  01B4F0  6F5D               	movwf	93,b	;volatile
 17956                           
 17957                           ;adcc.c: 85: ADCON1 = 0x00;
 17958  01B4F2  0E00               	movlw	0
 17959  01B4F4  6F59               	movwf	89,b	;volatile
 17960                           
 17961                           ;adcc.c: 87: ADCON2 = 0x04;
 17962  01B4F6  0E04               	movlw	4
 17963  01B4F8  6F5A               	movwf	90,b	;volatile
 17964                           
 17965                           ;adcc.c: 89: ADCON3 = 0x5F;
 17966  01B4FA  0E5F               	movlw	95
 17967  01B4FC  6F5B               	movwf	91,b	;volatile
 17968                           
 17969                           ;adcc.c: 91: ADSTAT = 0x00;
 17970  01B4FE  0E00               	movlw	0
 17971  01B500  6E65               	movwf	3941,c	;volatile
 17972                           
 17973                           ;adcc.c: 93: ADREF = 0x12;
 17974  01B502  0E12               	movlw	18
 17975  01B504  6F58               	movwf	88,b	;volatile
 17976                           
 17977                           ;adcc.c: 95: ADACT = 0x00;
 17978  01B506  0E00               	movlw	0
 17979  01B508  6F56               	movwf	86,b	;volatile
 17980                           
 17981                           ;adcc.c: 97: ADCLK = 0x1F;
 17982  01B50A  0E1F               	movlw	31
 17983  01B50C  6F57               	movwf	87,b	;volatile
 17984                           
 17985                           ;adcc.c: 99: ADCON0 = 0xC4;
 17986  01B50E  0EC4               	movlw	196
 17987  01B510  6E60               	movwf	3936,c	;volatile
 17988                           
 17989                           ; BSR set to: 15
 17990                           ;adcc.c: 101: ADACQ = 0xFF;
 17991  01B512  695C               	setf	92,b	;volatile
 17992                           
 17993                           ; BSR set to: 15
 17994                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 17995  01B514  010E               	movlb	14	; () banked
 17996  01B516  93CB               	bcf	203,1,b	;volatile
 17997                           
 17998                           ; BSR set to: 14
 17999                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 18000  01B518  83C3               	bsf	195,1,b	;volatile
 18001                           
 18002                           ; BSR set to: 14
 18003                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 18004  01B51A  0E08               	movlw	low _ADCC_DefaultInterruptHandler
 18005  01B51C  0102               	movlb	2	; () banked
 18006  01B51E  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 18007  01B520  0EC9               	movlw	high _ADCC_DefaultInterruptHandler
 18008  01B522  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 18009  01B524  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 18010  01B526  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 18011  01B528  EC01  F0E4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 18012  01B52C  0012               	return		;funcret
 18013  01B52E                     __end_of_ADCC_Initialize:
 18014                           	opt callstack 0
 18015                           
 18016 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 18017 ;; Defined at:
 18018 ;;		line 307 in file "mcc_generated_files/adcc.c"
 18019 ;; Parameters:    Size  Location     Type
 18020 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 18021 ;;		 -> ADC_PostProcessingHandler(1), ADCC_DefaultInterruptHandler(1), 
 18022 ;; Auto vars:     Size  Location     Type
 18023 ;;		None
 18024 ;; Return value:  Size  Location     Type
 18025 ;;                  1    wreg      void 
 18026 ;; Registers used:
 18027 ;;		wreg, status,2, status,0
 18028 ;; Tracked objects:
 18029 ;;		On entry : 0/0
 18030 ;;		On exit  : 0/0
 18031 ;;		Unchanged: 0/0
 18032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18033 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18036 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18037 ;;Total ram usage:        3 bytes
 18038 ;; Hardware stack levels used:    1
 18039 ;; Hardware stack levels required when called:   11
 18040 ;; This function calls:
 18041 ;;		Nothing
 18042 ;; This function is called by:
 18043 ;;		_ADCC_Initialize
 18044 ;;		_main
 18045 ;; This function uses a non-reentrant model
 18046 ;;
 18047                           
 18048                           	psect	text62
 18049  01C802                     __ptext62:
 18050                           	opt callstack 0
 18051  01C802                     _ADCC_SetADTIInterruptHandler:
 18052                           	opt callstack 17
 18053                           
 18054                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 18055                           
 18056                           ;incstack = 0
 18057  01C802  C200  F0CC         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 18058  01C806  C201  F0CD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 18059  01C80A  C202  F0CE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 18060  01C80E  0012               	return		;funcret
 18061  01C810                     __end_of_ADCC_SetADTIInterruptHandler:
 18062                           	opt callstack 0
 18063                           
 18064 ;; *************** function _OLED_updateHandler *****************
 18065 ;; Defined at:
 18066 ;;		line 324 in file "oled.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;		None
 18069 ;; Auto vars:     Size  Location     Type
 18070 ;;  rev_id_str     17   17[BANK3 ] unsigned char [17]
 18071 ;;  dev_id_str     17    0[BANK3 ] unsigned char [17]
 18072 ;; Return value:  Size  Location     Type
 18073 ;;                  1    wreg      void 
 18074 ;; Registers used:
 18075 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18076 ;; Tracked objects:
 18077 ;;		On entry : 0/0
 18078 ;;		On exit  : 0/0
 18079 ;;		Unchanged: 0/0
 18080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18082 ;;      Locals:         0       0       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 18083 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Totals:         0       0       0       2      36       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;Total ram usage:       38 bytes
 18086 ;; Hardware stack levels used:    1
 18087 ;; Hardware stack levels required when called:   17
 18088 ;; This function calls:
 18089 ;;		_OLED_UpdateFromRAMBuffer
 18090 ;;		_floatToEngineeringFormat
 18091 ;;		_getCauseOfResetStringSmall
 18092 ;;		_getDaysFromOnTime
 18093 ;;		_getDeviceID
 18094 ;;		_getHoursFromOnTime
 18095 ;;		_getMajorRevisionID
 18096 ;;		_getMinorRevisionID
 18097 ;;		_getMinutesFromOnTime
 18098 ;;		_getNXQChargeStateStringCaps
 18099 ;;		_getSecondsFromOnTime
 18100 ;;		_getYearsFromOnTime
 18101 ;;		_sprintf
 18102 ;;		_strcpy
 18103 ;; This function is called by:
 18104 ;;		_main
 18105 ;; This function uses a non-reentrant model
 18106 ;;
 18107                           
 18108                           	psect	text63
 18109  012E3C                     __ptext63:
 18110                           	opt callstack 0
 18111  012E3C                     _OLED_updateHandler:
 18112                           	opt callstack 13
 18113                           
 18114                           ;oled.c: 326: switch (OLED_Frame) {
 18115                           
 18116                           ;incstack = 0
 18117  012E3C  EFDA  F09F         	goto	l22239
 18118  012E40                     l21749:
 18119                           
 18120                           ; BSR set to: 2
 18121                           ;oled.c: 330: OLED_update_flag = 0;
 18122  012E40  0E00               	movlw	0
 18123  012E42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18124                           
 18125                           ; BSR set to: 2
 18126                           ;oled.c: 333: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 18127  012E44  0E00               	movlw	low _OLED_RAM_Buffer
 18128  012E46  6F03               	movwf	strcpy@to& (0+255),b
 18129  012E48  0E03               	movlw	high _OLED_RAM_Buffer
 18130  012E4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18131  012E4C  0E3F               	movlw	low STR_62
 18132  012E4E  6F05               	movwf	strcpy@from& (0+255),b
 18133  012E50  0EFC               	movlw	high STR_62
 18134  012E52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18135  012E54  EC14  F0DD         	call	_strcpy	;wreg free
 18136                           
 18137                           ;oled.c: 334: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 18138  012E58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18139  012E5A  0102               	movlb	2	; () banked
 18140  012E5C  6F03               	movwf	strcpy@to& (0+255),b
 18141  012E5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18142  012E60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18143  012E62  0E7A               	movlw	low STR_63
 18144  012E64  6F05               	movwf	strcpy@from& (0+255),b
 18145  012E66  0EFB               	movlw	high STR_63
 18146  012E68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18147  012E6A  EC14  F0DD         	call	_strcpy	;wreg free
 18148                           
 18149                           ;oled.c: 335: strcpy(OLED_RAM_Buffer.line2, "Cause of Reset:");
 18150  012E6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18151  012E70  0102               	movlb	2	; () banked
 18152  012E72  6F03               	movwf	strcpy@to& (0+255),b
 18153  012E74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18154  012E76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18155  012E78  0E6A               	movlw	low STR_64
 18156  012E7A  6F05               	movwf	strcpy@from& (0+255),b
 18157  012E7C  0EFB               	movlw	high STR_64
 18158  012E7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18159  012E80  EC14  F0DD         	call	_strcpy	;wreg free
 18160                           
 18161                           ;oled.c: 336: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 18162  012E84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18163  012E86  0102               	movlb	2	; () banked
 18164  012E88  6F03               	movwf	strcpy@to& (0+255),b
 18165  012E8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18166  012E8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18167  012E8E  51FF               	movf	_reset_cause& (0+255),w,b
 18168  012E90  EC96  F0E0         	call	_getCauseOfResetStringSmall
 18169  012E94  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 18170  012E98  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 18171  012E9C  EC14  F0DD         	call	_strcpy	;wreg free
 18172                           
 18173                           ;oled.c: 337: OLED_UpdateFromRAMBuffer();
 18174  012EA0  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18175                           
 18176                           ;oled.c: 338: OLED_Frame = OLED_Boot_Frame_2;
 18177  012EA4  0E01               	movlw	1
 18178  012EA6                     L3:
 18179  012EA6  0102               	movlb	2	; () banked
 18180  012EA8  6FD7               	movwf	_OLED_Frame& (0+255),b
 18181                           
 18182                           ; BSR set to: 2
 18183                           ;oled.c: 339: OLED_update_time = 3;
 18184  012EAA  0E03               	movlw	3
 18185  012EAC  0100               	movlb	0	; () banked
 18186  012EAE  6FFB               	movwf	_OLED_update_time& (0+255),b
 18187                           
 18188                           ;oled.c: 341: break;
 18189  012EB0  0012               	return	
 18190  012EB2                     l21765:
 18191                           
 18192                           ; BSR set to: 2
 18193                           ;oled.c: 345: OLED_update_flag = 0;
 18194  012EB2  0E00               	movlw	0
 18195  012EB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18196                           
 18197                           ; BSR set to: 2
 18198                           ;oled.c: 349: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 18199  012EB6  0E00               	movlw	low _OLED_RAM_Buffer
 18200  012EB8  6F03               	movwf	strcpy@to& (0+255),b
 18201  012EBA  0E03               	movlw	high _OLED_RAM_Buffer
 18202  012EBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18203  012EBE  0EDE               	movlw	low STR_65
 18204  012EC0  6F05               	movwf	strcpy@from& (0+255),b
 18205  012EC2  0EFD               	movlw	high STR_65
 18206  012EC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18207  012EC6  EC14  F0DD         	call	_strcpy	;wreg free
 18208                           
 18209                           ;oled.c: 350: char dev_id_str[17];;oled.c: 351: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 18210  012ECA  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 18211  012ECC  0102               	movlb	2	; () banked
 18212  012ECE  6F8C               	movwf	sprintf@wh& (0+255),b
 18213  012ED0  0E03               	movlw	high OLED_updateHandler@dev_id_str
 18214  012ED2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18215  012ED4  0E9F               	movlw	low STR_66
 18216  012ED6  6F8E               	movwf	sprintf@f& (0+255),b
 18217  012ED8  0EFF               	movlw	high STR_66
 18218  012EDA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18219  012EDC  EC58  F0E2         	call	_getDeviceID	;wreg free
 18220  012EE0  C20B  F290         	movff	?_getDeviceID,?_sprintf+4
 18221  012EE4  C20C  F291         	movff	?_getDeviceID+1,?_sprintf+5
 18222  012EE8  EC38  F0DD         	call	_sprintf	;wreg free
 18223                           
 18224                           ;oled.c: 352: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 18225  012EEC  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18226  012EEE  0102               	movlb	2	; () banked
 18227  012EF0  6F03               	movwf	strcpy@to& (0+255),b
 18228  012EF2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18229  012EF4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18230  012EF6  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 18231  012EF8  6F05               	movwf	strcpy@from& (0+255),b
 18232  012EFA  0E03               	movlw	high OLED_updateHandler@dev_id_str
 18233  012EFC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18234  012EFE  EC14  F0DD         	call	_strcpy	;wreg free
 18235                           
 18236                           ;oled.c: 355: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 18237  012F02  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18238  012F04  0102               	movlb	2	; () banked
 18239  012F06  6F03               	movwf	strcpy@to& (0+255),b
 18240  012F08  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18241  012F0A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18242  012F0C  0ED9               	movlw	low STR_67
 18243  012F0E  6F05               	movwf	strcpy@from& (0+255),b
 18244  012F10  0EFC               	movlw	high STR_67
 18245  012F12  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18246  012F14  EC14  F0DD         	call	_strcpy	;wreg free
 18247                           
 18248                           ;oled.c: 356: char rev_id_str[17];;oled.c: 357: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 18249  012F18  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18250  012F1A  0102               	movlb	2	; () banked
 18251  012F1C  6F8C               	movwf	sprintf@wh& (0+255),b
 18252  012F1E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18253  012F20  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18254  012F22  0E71               	movlw	low STR_68
 18255  012F24  6F8E               	movwf	sprintf@f& (0+255),b
 18256  012F26  0EFF               	movlw	high STR_68
 18257  012F28  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18258  012F2A  EC6E  F0DF         	call	_getMajorRevisionID	;wreg free
 18259  012F2E  0102               	movlb	2	; () banked
 18260  012F30  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 18261  012F32  0E41               	movlw	65
 18262  012F34  25A9               	addwf	??_OLED_updateHandler& (0+255),w,b
 18263  012F36  6F90               	movwf	(?_sprintf+4)& (0+255),b
 18264  012F38  6B91               	clrf	(?_sprintf+5)& (0+255),b
 18265  012F3A  0E00               	movlw	0
 18266  012F3C  2391               	addwfc	(?_sprintf+5)& (0+255),f,b
 18267  012F3E  ECAC  F0E1         	call	_getMinorRevisionID	;wreg free
 18268  012F42  0102               	movlb	2	; () banked
 18269  012F44  6FAA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 18270  012F46  51AA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 18271  012F48  6F92               	movwf	(?_sprintf+6)& (0+255),b
 18272  012F4A  6B93               	clrf	(?_sprintf+7)& (0+255),b
 18273  012F4C  EC38  F0DD         	call	_sprintf	;wreg free
 18274                           
 18275                           ;oled.c: 358: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 18276  012F50  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18277  012F52  0102               	movlb	2	; () banked
 18278  012F54  6F03               	movwf	strcpy@to& (0+255),b
 18279  012F56  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18280  012F58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18281  012F5A  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18282  012F5C  6F05               	movwf	strcpy@from& (0+255),b
 18283  012F5E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18284  012F60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18285  012F62  EC14  F0DD         	call	_strcpy	;wreg free
 18286                           
 18287                           ;oled.c: 360: OLED_UpdateFromRAMBuffer();
 18288  012F66  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18289                           
 18290                           ;oled.c: 361: OLED_Frame = OLED_Boot_Frame_3;
 18291  012F6A  0E02               	movlw	2
 18292  012F6C  D79C               	goto	L3
 18293  012F6E                     l21785:
 18294                           
 18295                           ; BSR set to: 2
 18296                           ;oled.c: 368: OLED_update_flag = 0;
 18297  012F6E  0E00               	movlw	0
 18298  012F70  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18299                           
 18300                           ; BSR set to: 2
 18301                           ;oled.c: 370: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 18302  012F72  0E00               	movlw	low _OLED_RAM_Buffer
 18303  012F74  6F03               	movwf	strcpy@to& (0+255),b
 18304  012F76  0E03               	movlw	high _OLED_RAM_Buffer
 18305  012F78  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18306  012F7A  0E5A               	movlw	low STR_69
 18307  012F7C  6F05               	movwf	strcpy@from& (0+255),b
 18308  012F7E  0EFB               	movlw	high STR_69
 18309  012F80  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18310  012F82  EC14  F0DD         	call	_strcpy	;wreg free
 18311                           
 18312                           ;oled.c: 371: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 18313  012F86  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18314  012F88  0102               	movlb	2	; () banked
 18315  012F8A  6F03               	movwf	strcpy@to& (0+255),b
 18316  012F8C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18317  012F8E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18318  012F90  0E6C               	movlw	low STR_70
 18319  012F92  6F05               	movwf	strcpy@from& (0+255),b
 18320  012F94  0EFE               	movlw	high STR_70
 18321  012F96  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18322  012F98  EC14  F0DD         	call	_strcpy	;wreg free
 18323                           
 18324                           ;oled.c: 372: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 18325  012F9C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18326  012F9E  0102               	movlb	2	; () banked
 18327  012FA0  6F03               	movwf	strcpy@to& (0+255),b
 18328  012FA2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18329  012FA4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18330  012FA6  0E8A               	movlw	low STR_71
 18331  012FA8  6F05               	movwf	strcpy@from& (0+255),b
 18332  012FAA  0EFB               	movlw	high STR_71
 18333  012FAC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18334  012FAE  EC14  F0DD         	call	_strcpy	;wreg free
 18335                           
 18336                           ;oled.c: 373: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 18337  012FB2  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18338  012FB4  0102               	movlb	2	; () banked
 18339  012FB6  6F03               	movwf	strcpy@to& (0+255),b
 18340  012FB8  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18341  012FBA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18342  012FBC  0EF6               	movlw	low STR_72
 18343  012FBE  6F05               	movwf	strcpy@from& (0+255),b
 18344  012FC0  0EFB               	movlw	high STR_72
 18345  012FC2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18346  012FC4  EC14  F0DD         	call	_strcpy	;wreg free
 18347                           
 18348                           ;oled.c: 375: OLED_UpdateFromRAMBuffer();
 18349  012FC8  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18350                           
 18351                           ;oled.c: 376: OLED_Frame = OLED_Boot_Frame_4;
 18352  012FCC  0E03               	movlw	3
 18353  012FCE  D76B               	goto	L3
 18354  012FD0                     l21801:
 18355                           
 18356                           ; BSR set to: 2
 18357                           ;oled.c: 383: OLED_update_flag = 0;
 18358  012FD0  0E00               	movlw	0
 18359  012FD2  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18360                           
 18361                           ; BSR set to: 2
 18362                           ;oled.c: 385: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 18363  012FD4  0E00               	movlw	low _OLED_RAM_Buffer
 18364  012FD6  6F03               	movwf	strcpy@to& (0+255),b
 18365  012FD8  0E03               	movlw	high _OLED_RAM_Buffer
 18366  012FDA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18367  012FDC  0EA1               	movlw	low STR_73
 18368  012FDE  6F05               	movwf	strcpy@from& (0+255),b
 18369  012FE0  0EFC               	movlw	high STR_73
 18370  012FE2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18371  012FE4  EC14  F0DD         	call	_strcpy	;wreg free
 18372                           
 18373                           ;oled.c: 386: strcpy(OLED_RAM_Buffer.line1, "QI Enabled");
 18374  012FE8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18375  012FEA  0102               	movlb	2	; () banked
 18376  012FEC  6F03               	movwf	strcpy@to& (0+255),b
 18377  012FEE  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18378  012FF0  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18379  012FF2  0EE9               	movlw	low STR_74
 18380  012FF4  6F05               	movwf	strcpy@from& (0+255),b
 18381  012FF6  0EFD               	movlw	high STR_74
 18382  012FF8  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18383  012FFA  EC14  F0DD         	call	_strcpy	;wreg free
 18384                           
 18385                           ;oled.c: 387: strcpy(OLED_RAM_Buffer.line2, "More Settings");
 18386  012FFE  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18387  013000  0102               	movlb	2	; () banked
 18388  013002  6F03               	movwf	strcpy@to& (0+255),b
 18389  013004  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18390  013006  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18391  013008  0EAF               	movlw	low STR_75
 18392  01300A  6F05               	movwf	strcpy@from& (0+255),b
 18393  01300C  0EFC               	movlw	high STR_75
 18394  01300E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18395  013010  EC14  F0DD         	call	_strcpy	;wreg free
 18396                           
 18397                           ;oled.c: 388: strcpy(OLED_RAM_Buffer.line3, "via USB, 'Help'");
 18398  013014  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18399  013016  0102               	movlb	2	; () banked
 18400  013018  6F03               	movwf	strcpy@to& (0+255),b
 18401  01301A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18402  01301C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18403  01301E  0E4A               	movlw	low STR_76
 18404  013020  6F05               	movwf	strcpy@from& (0+255),b
 18405  013022  0EFB               	movlw	high STR_76
 18406  013024  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18407  013026  EC14  F0DD         	call	_strcpy	;wreg free
 18408                           
 18409                           ;oled.c: 390: OLED_UpdateFromRAMBuffer();
 18410  01302A  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18411                           
 18412                           ;oled.c: 391: OLED_Frame = OLED_Charge_Status;
 18413  01302E  0E04               	movlw	4
 18414  013030  D73A               	goto	L3
 18415  013032                     l21817:
 18416                           
 18417                           ; BSR set to: 2
 18418                           ;oled.c: 398: OLED_update_flag = 0;
 18419  013032  0E00               	movlw	0
 18420  013034  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18421                           
 18422                           ; BSR set to: 2
 18423                           ;oled.c: 400: strcpy(OLED_RAM_Buffer.line0, "Charge Status:");
 18424  013036  0E00               	movlw	low _OLED_RAM_Buffer
 18425  013038  6F03               	movwf	strcpy@to& (0+255),b
 18426  01303A  0E03               	movlw	high _OLED_RAM_Buffer
 18427  01303C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18428  01303E  0ED8               	movlw	low STR_77
 18429  013040  6F05               	movwf	strcpy@from& (0+255),b
 18430  013042  0EFB               	movlw	high STR_77
 18431  013044  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18432  013046  EC14  F0DD         	call	_strcpy	;wreg free
 18433                           
 18434                           ;oled.c: 401: strcpy(OLED_RAM_Buffer.line1, " ");
 18435  01304A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18436  01304C  0102               	movlb	2	; () banked
 18437  01304E  6F03               	movwf	strcpy@to& (0+255),b
 18438  013050  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18439  013052  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18440  013054  0EA2               	movlw	low (STR_56+10)
 18441  013056  6F05               	movwf	strcpy@from& (0+255),b
 18442  013058  0EFD               	movlw	high (STR_56+10)
 18443  01305A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18444  01305C  EC14  F0DD         	call	_strcpy	;wreg free
 18445                           
 18446                           ;oled.c: 402: strcpy(OLED_RAM_Buffer.line2, getNXQChargeStateStringCaps());
 18447  013060  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18448  013062  0102               	movlb	2	; () banked
 18449  013064  6F03               	movwf	strcpy@to& (0+255),b
 18450  013066  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18451  013068  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18452  01306A  ECF4  F0DA         	call	_getNXQChargeStateStringCaps	;wreg free
 18453  01306E  C200  F205         	movff	?_getNXQChargeStateStringCaps,strcpy@from
 18454  013072  C201  F206         	movff	?_getNXQChargeStateStringCaps+1,strcpy@from+1
 18455  013076  EC14  F0DD         	call	_strcpy	;wreg free
 18456                           
 18457                           ;oled.c: 403: strcpy(OLED_RAM_Buffer.line3, " ");
 18458  01307A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18459  01307C  0102               	movlb	2	; () banked
 18460  01307E  6F03               	movwf	strcpy@to& (0+255),b
 18461  013080  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18462  013082  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18463  013084  0EA2               	movlw	low (STR_56+10)
 18464  013086  6F05               	movwf	strcpy@from& (0+255),b
 18465  013088  0EFD               	movlw	high (STR_56+10)
 18466  01308A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18467  01308C  EC14  F0DD         	call	_strcpy	;wreg free
 18468                           
 18469                           ;oled.c: 405: OLED_UpdateFromRAMBuffer();
 18470  013090  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18471                           
 18472                           ;oled.c: 406: OLED_Frame = OLED_Charge_Status;
 18473  013094  0E04               	movlw	4
 18474  013096                     L4:
 18475  013096  0102               	movlb	2	; () banked
 18476  013098  6FD7               	movwf	_OLED_Frame& (0+255),b
 18477                           
 18478                           ; BSR set to: 2
 18479                           ;oled.c: 407: OLED_update_time = 1;
 18480  01309A  0E01               	movlw	1
 18481  01309C  0100               	movlb	0	; () banked
 18482  01309E  6FFB               	movwf	_OLED_update_time& (0+255),b
 18483                           
 18484                           ;oled.c: 409: break;
 18485  0130A0  0012               	return	
 18486  0130A2                     l21833:
 18487                           
 18488                           ; BSR set to: 2
 18489                           ;oled.c: 413: OLED_update_flag = 0;
 18490  0130A2  0E00               	movlw	0
 18491  0130A4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18492                           
 18493                           ; BSR set to: 2
 18494                           ;oled.c: 415: strcpy(OLED_RAM_Buffer.line0, "+12V Voltage:");
 18495  0130A6  0E00               	movlw	low _OLED_RAM_Buffer
 18496  0130A8  6F03               	movwf	strcpy@to& (0+255),b
 18497  0130AA  0E03               	movlw	high _OLED_RAM_Buffer
 18498  0130AC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18499  0130AE  0E4D               	movlw	low STR_80
 18500  0130B0  6F05               	movwf	strcpy@from& (0+255),b
 18501  0130B2  0EFC               	movlw	high STR_80
 18502  0130B4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18503  0130B6  EC14  F0DD         	call	_strcpy	;wreg free
 18504                           
 18505                           ;oled.c: 416: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos12_adc_result);
 18506  0130BA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18507  0130BC  0102               	movlb	2	; () banked
 18508  0130BE  6F8C               	movwf	sprintf@wh& (0+255),b
 18509  0130C0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18510  0130C2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18511  0130C4  0E52               	movlw	low STR_81
 18512  0130C6  6F8E               	movwf	sprintf@f& (0+255),b
 18513  0130C8  0EFF               	movlw	high STR_81
 18514  0130CA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18515  0130CC  C0E9  F290         	movff	_adc_results+12,?_sprintf+4
 18516  0130D0  C0EA  F291         	movff	_adc_results+13,?_sprintf+5
 18517  0130D4  C0EB  F292         	movff	_adc_results+14,?_sprintf+6
 18518  0130D8  C0EC  F293         	movff	_adc_results+15,?_sprintf+7
 18519  0130DC  EC38  F0DD         	call	_sprintf	;wreg free
 18520                           
 18521                           ;oled.c: 417: strcpy(OLED_RAM_Buffer.line2, " ");
 18522  0130E0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18523  0130E2  0102               	movlb	2	; () banked
 18524  0130E4  6F03               	movwf	strcpy@to& (0+255),b
 18525  0130E6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18526  0130E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18527  0130EA  0EA2               	movlw	low (STR_56+10)
 18528  0130EC  6F05               	movwf	strcpy@from& (0+255),b
 18529  0130EE  0EFD               	movlw	high (STR_56+10)
 18530  0130F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18531  0130F2  EC14  F0DD         	call	_strcpy	;wreg free
 18532                           
 18533                           ;oled.c: 418: strcpy(OLED_RAM_Buffer.line3, " ");
 18534  0130F6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18535  0130F8  0102               	movlb	2	; () banked
 18536  0130FA  6F03               	movwf	strcpy@to& (0+255),b
 18537  0130FC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18538  0130FE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18539  013100  0EA2               	movlw	low (STR_56+10)
 18540  013102  6F05               	movwf	strcpy@from& (0+255),b
 18541  013104  0EFD               	movlw	high (STR_56+10)
 18542  013106  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18543  013108  EC14  F0DD         	call	_strcpy	;wreg free
 18544                           
 18545                           ;oled.c: 420: OLED_UpdateFromRAMBuffer();
 18546  01310C  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18547                           
 18548                           ;oled.c: 421: OLED_Frame = OLED_POS12_Voltage;
 18549  013110  0E05               	movlw	5
 18550  013112  D7C1               	goto	L4
 18551  013114                     l21849:
 18552                           
 18553                           ; BSR set to: 2
 18554                           ;oled.c: 428: OLED_update_flag = 0;
 18555  013114  0E00               	movlw	0
 18556  013116  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18557                           
 18558                           ; BSR set to: 2
 18559                           ;oled.c: 430: strcpy(OLED_RAM_Buffer.line0, "+5V Voltage:");
 18560  013118  0E00               	movlw	low _OLED_RAM_Buffer
 18561  01311A  6F03               	movwf	strcpy@to& (0+255),b
 18562  01311C  0E03               	movlw	high _OLED_RAM_Buffer
 18563  01311E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18564  013120  0EE6               	movlw	low STR_84
 18565  013122  6F05               	movwf	strcpy@from& (0+255),b
 18566  013124  0EFC               	movlw	high STR_84
 18567  013126  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18568  013128  EC14  F0DD         	call	_strcpy	;wreg free
 18569                           
 18570                           ;oled.c: 431: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos5_adc_result);
 18571  01312C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18572  01312E  0102               	movlb	2	; () banked
 18573  013130  6F8C               	movwf	sprintf@wh& (0+255),b
 18574  013132  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18575  013134  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18576  013136  0E52               	movlw	low STR_81
 18577  013138  6F8E               	movwf	sprintf@f& (0+255),b
 18578  01313A  0EFF               	movlw	high STR_81
 18579  01313C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18580  01313E  C0E5  F290         	movff	_adc_results+8,?_sprintf+4
 18581  013142  C0E6  F291         	movff	_adc_results+9,?_sprintf+5
 18582  013146  C0E7  F292         	movff	_adc_results+10,?_sprintf+6
 18583  01314A  C0E8  F293         	movff	_adc_results+11,?_sprintf+7
 18584  01314E  EC38  F0DD         	call	_sprintf	;wreg free
 18585                           
 18586                           ;oled.c: 432: strcpy(OLED_RAM_Buffer.line2, " ");
 18587  013152  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18588  013154  0102               	movlb	2	; () banked
 18589  013156  6F03               	movwf	strcpy@to& (0+255),b
 18590  013158  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18591  01315A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18592  01315C  0EA2               	movlw	low (STR_56+10)
 18593  01315E  6F05               	movwf	strcpy@from& (0+255),b
 18594  013160  0EFD               	movlw	high (STR_56+10)
 18595  013162  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18596  013164  EC14  F0DD         	call	_strcpy	;wreg free
 18597                           
 18598                           ;oled.c: 433: strcpy(OLED_RAM_Buffer.line3, " ");
 18599  013168  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18600  01316A  0102               	movlb	2	; () banked
 18601  01316C  6F03               	movwf	strcpy@to& (0+255),b
 18602  01316E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18603  013170  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18604  013172  0EA2               	movlw	low (STR_56+10)
 18605  013174  6F05               	movwf	strcpy@from& (0+255),b
 18606  013176  0EFD               	movlw	high (STR_56+10)
 18607  013178  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18608  01317A  EC14  F0DD         	call	_strcpy	;wreg free
 18609                           
 18610                           ;oled.c: 435: OLED_UpdateFromRAMBuffer();
 18611  01317E  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18612                           
 18613                           ;oled.c: 436: OLED_Frame = OLED_POS5_Voltage;
 18614  013182  0E06               	movlw	6
 18615  013184  D788               	goto	L4
 18616  013186                     l21865:
 18617                           
 18618                           ; BSR set to: 2
 18619                           ;oled.c: 443: OLED_update_flag = 0;
 18620  013186  0E00               	movlw	0
 18621  013188  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18622                           
 18623                           ; BSR set to: 2
 18624                           ;oled.c: 445: strcpy(OLED_RAM_Buffer.line0, "+12V Current:");
 18625  01318A  0E00               	movlw	low _OLED_RAM_Buffer
 18626  01318C  6F03               	movwf	strcpy@to& (0+255),b
 18627  01318E  0E03               	movlw	high _OLED_RAM_Buffer
 18628  013190  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18629  013192  0E93               	movlw	low STR_88
 18630  013194  6F05               	movwf	strcpy@from& (0+255),b
 18631  013196  0EFC               	movlw	high STR_88
 18632  013198  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18633  01319A  EC14  F0DD         	call	_strcpy	;wreg free
 18634                           
 18635                           ;oled.c: 446: sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.pos12_isns_adc_resul
      +                          t);
 18636  01319E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18637  0131A0  0102               	movlb	2	; () banked
 18638  0131A2  6F8C               	movwf	sprintf@wh& (0+255),b
 18639  0131A4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18640  0131A6  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18641  0131A8  0E42               	movlw	low STR_89
 18642  0131AA  6F8E               	movwf	sprintf@f& (0+255),b
 18643  0131AC  0EFF               	movlw	high STR_89
 18644  0131AE  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18645  0131B0  C0ED  F290         	movff	_adc_results+16,?_sprintf+4
 18646  0131B4  C0EE  F291         	movff	_adc_results+17,?_sprintf+5
 18647  0131B8  C0EF  F292         	movff	_adc_results+18,?_sprintf+6
 18648  0131BC  C0F0  F293         	movff	_adc_results+19,?_sprintf+7
 18649  0131C0  EC38  F0DD         	call	_sprintf	;wreg free
 18650                           
 18651                           ;oled.c: 447: strcpy(OLED_RAM_Buffer.line2, " ");
 18652  0131C4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18653  0131C6  0102               	movlb	2	; () banked
 18654  0131C8  6F03               	movwf	strcpy@to& (0+255),b
 18655  0131CA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18656  0131CC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18657  0131CE  0EA2               	movlw	low (STR_56+10)
 18658  0131D0  6F05               	movwf	strcpy@from& (0+255),b
 18659  0131D2  0EFD               	movlw	high (STR_56+10)
 18660  0131D4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18661  0131D6  EC14  F0DD         	call	_strcpy	;wreg free
 18662                           
 18663                           ;oled.c: 448: strcpy(OLED_RAM_Buffer.line3, " ");
 18664  0131DA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18665  0131DC  0102               	movlb	2	; () banked
 18666  0131DE  6F03               	movwf	strcpy@to& (0+255),b
 18667  0131E0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18668  0131E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18669  0131E4  0EA2               	movlw	low (STR_56+10)
 18670  0131E6  6F05               	movwf	strcpy@from& (0+255),b
 18671  0131E8  0EFD               	movlw	high (STR_56+10)
 18672  0131EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18673  0131EC  EC14  F0DD         	call	_strcpy	;wreg free
 18674                           
 18675                           ;oled.c: 450: OLED_UpdateFromRAMBuffer();
 18676  0131F0  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18677                           
 18678                           ;oled.c: 451: OLED_Frame = OLED_POS12_Current;
 18679  0131F4  0E07               	movlw	7
 18680  0131F6  D74F               	goto	L4
 18681  0131F8                     l21881:
 18682                           
 18683                           ; BSR set to: 2
 18684                           ;oled.c: 458: OLED_update_flag = 0;
 18685  0131F8  0E00               	movlw	0
 18686  0131FA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18687                           
 18688                           ; BSR set to: 2
 18689                           ;oled.c: 460: strcpy(OLED_RAM_Buffer.line0, "QI Current:");
 18690  0131FC  0E00               	movlw	low _OLED_RAM_Buffer
 18691  0131FE  6F03               	movwf	strcpy@to& (0+255),b
 18692  013200  0E03               	movlw	high _OLED_RAM_Buffer
 18693  013202  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18694  013204  0E80               	movlw	low STR_92
 18695  013206  6F05               	movwf	strcpy@from& (0+255),b
 18696  013208  0EFD               	movlw	high STR_92
 18697  01320A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18698  01320C  EC14  F0DD         	call	_strcpy	;wreg free
 18699                           
 18700                           ;oled.c: 461: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18701  013210  0102               	movlb	2	; () banked
 18702  013212  51D2               	movf	_QI_charge_time& (0+255),w,b
 18703  013214  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18704  013216  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18705  013218  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18706  01321A  A4D8               	btfss	status,2,c
 18707  01321C  D00B               	goto	l21889
 18708                           
 18709                           ; BSR set to: 2
 18710  01321E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18711  013220  6F03               	movwf	strcpy@to& (0+255),b
 18712  013222  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18713  013224  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18714  013226  0E1A               	movlw	low STR_93
 18715  013228  6F05               	movwf	strcpy@from& (0+255),b
 18716  01322A  0EFD               	movlw	high STR_93
 18717  01322C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18718  01322E  EC14  F0DD         	call	_strcpy	;wreg free
 18719  013232  D012               	goto	l21891
 18720  013234                     l21889:
 18721                           
 18722                           ; BSR set to: 2
 18723                           ;oled.c: 462: else sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.qi_isns_adc_res
      +                          ult);
 18724  013234  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18725  013236  6F8C               	movwf	sprintf@wh& (0+255),b
 18726  013238  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18727  01323A  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18728  01323C  0E42               	movlw	low STR_89
 18729  01323E  6F8E               	movwf	sprintf@f& (0+255),b
 18730  013240  0EFF               	movlw	high STR_89
 18731  013242  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18732  013244  C0F1  F290         	movff	_adc_results+20,?_sprintf+4
 18733  013248  C0F2  F291         	movff	_adc_results+21,?_sprintf+5
 18734  01324C  C0F3  F292         	movff	_adc_results+22,?_sprintf+6
 18735  013250  C0F4  F293         	movff	_adc_results+23,?_sprintf+7
 18736  013254  EC38  F0DD         	call	_sprintf	;wreg free
 18737  013258                     l21891:
 18738                           
 18739                           ;oled.c: 463: strcpy(OLED_RAM_Buffer.line2, " ");
 18740  013258  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18741  01325A  0102               	movlb	2	; () banked
 18742  01325C  6F03               	movwf	strcpy@to& (0+255),b
 18743  01325E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18744  013260  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18745  013262  0EA2               	movlw	low (STR_56+10)
 18746  013264  6F05               	movwf	strcpy@from& (0+255),b
 18747  013266  0EFD               	movlw	high (STR_56+10)
 18748  013268  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18749  01326A  EC14  F0DD         	call	_strcpy	;wreg free
 18750                           
 18751                           ;oled.c: 464: strcpy(OLED_RAM_Buffer.line3, " ");
 18752  01326E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18753  013270  0102               	movlb	2	; () banked
 18754  013272  6F03               	movwf	strcpy@to& (0+255),b
 18755  013274  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18756  013276  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18757  013278  0EA2               	movlw	low (STR_56+10)
 18758  01327A  6F05               	movwf	strcpy@from& (0+255),b
 18759  01327C  0EFD               	movlw	high (STR_56+10)
 18760  01327E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18761  013280  EC14  F0DD         	call	_strcpy	;wreg free
 18762                           
 18763                           ;oled.c: 466: OLED_UpdateFromRAMBuffer();
 18764  013284  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18765                           
 18766                           ;oled.c: 467: OLED_Frame = OLED_QI_Current;
 18767  013288  0E08               	movlw	8
 18768  01328A  D705               	goto	L4
 18769  01328C                     l21901:
 18770                           
 18771                           ; BSR set to: 2
 18772                           ;oled.c: 474: OLED_update_flag = 0;
 18773  01328C  0E00               	movlw	0
 18774  01328E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18775                           
 18776                           ; BSR set to: 2
 18777                           ;oled.c: 476: strcpy(OLED_RAM_Buffer.line0, "Input Power:");
 18778  013290  0E00               	movlw	low _OLED_RAM_Buffer
 18779  013292  6F03               	movwf	strcpy@to& (0+255),b
 18780  013294  0E03               	movlw	high _OLED_RAM_Buffer
 18781  013296  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18782  013298  0E0D               	movlw	low STR_97
 18783  01329A  6F05               	movwf	strcpy@from& (0+255),b
 18784  01329C  0EFD               	movlw	high STR_97
 18785  01329E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18786  0132A0  EC14  F0DD         	call	_strcpy	;wreg free
 18787                           
 18788                           ;oled.c: 477: sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.input_power);
 18789  0132A4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18790  0132A6  0102               	movlb	2	; () banked
 18791  0132A8  6F8C               	movwf	sprintf@wh& (0+255),b
 18792  0132AA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18793  0132AC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18794  0132AE  0E5A               	movlw	low STR_98
 18795  0132B0  6F8E               	movwf	sprintf@f& (0+255),b
 18796  0132B2  0EFF               	movlw	high STR_98
 18797  0132B4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18798  0132B6  C2BE  F290         	movff	_adc_calculations,?_sprintf+4
 18799  0132BA  C2BF  F291         	movff	_adc_calculations+1,?_sprintf+5
 18800  0132BE  C2C0  F292         	movff	_adc_calculations+2,?_sprintf+6
 18801  0132C2  C2C1  F293         	movff	_adc_calculations+3,?_sprintf+7
 18802  0132C6  EC38  F0DD         	call	_sprintf	;wreg free
 18803                           
 18804                           ;oled.c: 478: strcpy(OLED_RAM_Buffer.line2, " ");
 18805  0132CA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18806  0132CC  0102               	movlb	2	; () banked
 18807  0132CE  6F03               	movwf	strcpy@to& (0+255),b
 18808  0132D0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18809  0132D2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18810  0132D4  0EA2               	movlw	low (STR_56+10)
 18811  0132D6  6F05               	movwf	strcpy@from& (0+255),b
 18812  0132D8  0EFD               	movlw	high (STR_56+10)
 18813  0132DA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18814  0132DC  EC14  F0DD         	call	_strcpy	;wreg free
 18815                           
 18816                           ;oled.c: 479: strcpy(OLED_RAM_Buffer.line3, " ");
 18817  0132E0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18818  0132E2  0102               	movlb	2	; () banked
 18819  0132E4  6F03               	movwf	strcpy@to& (0+255),b
 18820  0132E6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18821  0132E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18822  0132EA  0EA2               	movlw	low (STR_56+10)
 18823  0132EC  6F05               	movwf	strcpy@from& (0+255),b
 18824  0132EE  0EFD               	movlw	high (STR_56+10)
 18825  0132F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18826  0132F2  EC14  F0DD         	call	_strcpy	;wreg free
 18827                           
 18828                           ;oled.c: 481: OLED_UpdateFromRAMBuffer();
 18829  0132F6  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18830                           
 18831                           ;oled.c: 482: OLED_Frame = OLED_Input_Power;
 18832  0132FA  0E09               	movlw	9
 18833  0132FC  D6CC               	goto	L4
 18834  0132FE                     l21917:
 18835                           
 18836                           ; BSR set to: 2
 18837                           ;oled.c: 489: OLED_update_flag = 0;
 18838  0132FE  0E00               	movlw	0
 18839  013300  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18840                           
 18841                           ; BSR set to: 2
 18842                           ;oled.c: 491: strcpy(OLED_RAM_Buffer.line0, "Output Power:");
 18843  013302  0E00               	movlw	low _OLED_RAM_Buffer
 18844  013304  6F03               	movwf	strcpy@to& (0+255),b
 18845  013306  0E03               	movlw	high _OLED_RAM_Buffer
 18846  013308  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18847  01330A  0E85               	movlw	low STR_101
 18848  01330C  6F05               	movwf	strcpy@from& (0+255),b
 18849  01330E  0EFC               	movlw	high STR_101
 18850  013310  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18851  013312  EC14  F0DD         	call	_strcpy	;wreg free
 18852                           
 18853                           ;oled.c: 492: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18854  013316  0102               	movlb	2	; () banked
 18855  013318  51D2               	movf	_QI_charge_time& (0+255),w,b
 18856  01331A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18857  01331C  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18858  01331E  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18859  013320  A4D8               	btfss	status,2,c
 18860  013322  D00B               	goto	l21925
 18861                           
 18862                           ; BSR set to: 2
 18863  013324  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18864  013326  6F03               	movwf	strcpy@to& (0+255),b
 18865  013328  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18866  01332A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18867  01332C  0E1A               	movlw	low STR_93
 18868  01332E  6F05               	movwf	strcpy@from& (0+255),b
 18869  013330  0EFD               	movlw	high STR_93
 18870  013332  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18871  013334  EC14  F0DD         	call	_strcpy	;wreg free
 18872  013338  D012               	goto	l21927
 18873  01333A                     l21925:
 18874                           
 18875                           ; BSR set to: 2
 18876                           ;oled.c: 493: else sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.output_pow
      +                          er);
 18877  01333A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18878  01333C  6F8C               	movwf	sprintf@wh& (0+255),b
 18879  01333E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18880  013340  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18881  013342  0E5A               	movlw	low STR_98
 18882  013344  6F8E               	movwf	sprintf@f& (0+255),b
 18883  013346  0EFF               	movlw	high STR_98
 18884  013348  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18885  01334A  C2C2  F290         	movff	_adc_calculations+4,?_sprintf+4
 18886  01334E  C2C3  F291         	movff	_adc_calculations+5,?_sprintf+5
 18887  013352  C2C4  F292         	movff	_adc_calculations+6,?_sprintf+6
 18888  013356  C2C5  F293         	movff	_adc_calculations+7,?_sprintf+7
 18889  01335A  EC38  F0DD         	call	_sprintf	;wreg free
 18890  01335E                     l21927:
 18891                           
 18892                           ;oled.c: 494: strcpy(OLED_RAM_Buffer.line2, " ");
 18893  01335E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18894  013360  0102               	movlb	2	; () banked
 18895  013362  6F03               	movwf	strcpy@to& (0+255),b
 18896  013364  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18897  013366  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18898  013368  0EA2               	movlw	low (STR_56+10)
 18899  01336A  6F05               	movwf	strcpy@from& (0+255),b
 18900  01336C  0EFD               	movlw	high (STR_56+10)
 18901  01336E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18902  013370  EC14  F0DD         	call	_strcpy	;wreg free
 18903                           
 18904                           ;oled.c: 495: strcpy(OLED_RAM_Buffer.line3, " ");
 18905  013374  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18906  013376  0102               	movlb	2	; () banked
 18907  013378  6F03               	movwf	strcpy@to& (0+255),b
 18908  01337A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18909  01337C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18910  01337E  0EA2               	movlw	low (STR_56+10)
 18911  013380  6F05               	movwf	strcpy@from& (0+255),b
 18912  013382  0EFD               	movlw	high (STR_56+10)
 18913  013384  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18914  013386  EC14  F0DD         	call	_strcpy	;wreg free
 18915                           
 18916                           ;oled.c: 497: OLED_UpdateFromRAMBuffer();
 18917  01338A  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18918                           
 18919                           ;oled.c: 498: OLED_Frame = OLED_Output_Power;
 18920  01338E  0E0A               	movlw	10
 18921  013390  D682               	goto	L4
 18922  013392                     l21937:
 18923                           
 18924                           ; BSR set to: 2
 18925                           ;oled.c: 505: OLED_update_flag = 0;
 18926  013392  0E00               	movlw	0
 18927  013394  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18928                           
 18929                           ; BSR set to: 2
 18930                           ;oled.c: 507: strcpy(OLED_RAM_Buffer.line0, "Efficiency:");
 18931  013396  0E00               	movlw	low _OLED_RAM_Buffer
 18932  013398  6F03               	movwf	strcpy@to& (0+255),b
 18933  01339A  0E03               	movlw	high _OLED_RAM_Buffer
 18934  01339C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18935  01339E  0E8C               	movlw	low STR_106
 18936  0133A0  6F05               	movwf	strcpy@from& (0+255),b
 18937  0133A2  0EFD               	movlw	high STR_106
 18938  0133A4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18939  0133A6  EC14  F0DD         	call	_strcpy	;wreg free
 18940                           
 18941                           ;oled.c: 508: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18942  0133AA  0102               	movlb	2	; () banked
 18943  0133AC  51D2               	movf	_QI_charge_time& (0+255),w,b
 18944  0133AE  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18945  0133B0  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18946  0133B2  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18947  0133B4  A4D8               	btfss	status,2,c
 18948  0133B6  D00B               	goto	l21945
 18949                           
 18950                           ; BSR set to: 2
 18951  0133B8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18952  0133BA  6F03               	movwf	strcpy@to& (0+255),b
 18953  0133BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18954  0133BE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18955  0133C0  0E1A               	movlw	low STR_93
 18956  0133C2  6F05               	movwf	strcpy@from& (0+255),b
 18957  0133C4  0EFD               	movlw	high STR_93
 18958  0133C6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18959  0133C8  EC14  F0DD         	call	_strcpy	;wreg free
 18960  0133CC  D012               	goto	l21947
 18961  0133CE                     l21945:
 18962                           
 18963                           ; BSR set to: 2
 18964                           ;oled.c: 509: else sprintf(OLED_RAM_Buffer.line1, "%+.3f %%", adc_calculations.efficienc
      +                          y);
 18965  0133CE  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18966  0133D0  6F8C               	movwf	sprintf@wh& (0+255),b
 18967  0133D2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18968  0133D4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18969  0133D6  0EF3               	movlw	low STR_108
 18970  0133D8  6F8E               	movwf	sprintf@f& (0+255),b
 18971  0133DA  0EFE               	movlw	high STR_108
 18972  0133DC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18973  0133DE  C2C6  F290         	movff	_adc_calculations+8,?_sprintf+4
 18974  0133E2  C2C7  F291         	movff	_adc_calculations+9,?_sprintf+5
 18975  0133E6  C2C8  F292         	movff	_adc_calculations+10,?_sprintf+6
 18976  0133EA  C2C9  F293         	movff	_adc_calculations+11,?_sprintf+7
 18977  0133EE  EC38  F0DD         	call	_sprintf	;wreg free
 18978  0133F2                     l21947:
 18979                           
 18980                           ;oled.c: 510: strcpy(OLED_RAM_Buffer.line2, " ");
 18981  0133F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18982  0133F4  0102               	movlb	2	; () banked
 18983  0133F6  6F03               	movwf	strcpy@to& (0+255),b
 18984  0133F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18985  0133FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18986  0133FC  0EA2               	movlw	low (STR_56+10)
 18987  0133FE  6F05               	movwf	strcpy@from& (0+255),b
 18988  013400  0EFD               	movlw	high (STR_56+10)
 18989  013402  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18990  013404  EC14  F0DD         	call	_strcpy	;wreg free
 18991                           
 18992                           ;oled.c: 511: strcpy(OLED_RAM_Buffer.line3, " ");
 18993  013408  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18994  01340A  0102               	movlb	2	; () banked
 18995  01340C  6F03               	movwf	strcpy@to& (0+255),b
 18996  01340E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18997  013410  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18998  013412  0EA2               	movlw	low (STR_56+10)
 18999  013414  6F05               	movwf	strcpy@from& (0+255),b
 19000  013416  0EFD               	movlw	high (STR_56+10)
 19001  013418  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19002  01341A  EC14  F0DD         	call	_strcpy	;wreg free
 19003                           
 19004                           ;oled.c: 513: OLED_UpdateFromRAMBuffer();
 19005  01341E  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19006                           
 19007                           ;oled.c: 514: OLED_Frame = OLED_Efficiency;
 19008  013422  0E0B               	movlw	11
 19009  013424  D638               	goto	L4
 19010  013426                     l21957:
 19011                           
 19012                           ; BSR set to: 2
 19013                           ;oled.c: 521: OLED_update_flag = 0;
 19014  013426  0E00               	movlw	0
 19015  013428  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19016                           
 19017                           ; BSR set to: 2
 19018                           ;oled.c: 523: strcpy(OLED_RAM_Buffer.line0, "QI Temp:");
 19019  01342A  0E00               	movlw	low _OLED_RAM_Buffer
 19020  01342C  6F03               	movwf	strcpy@to& (0+255),b
 19021  01342E  0E03               	movlw	high _OLED_RAM_Buffer
 19022  013430  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19023  013432  0EFC               	movlw	low STR_111
 19024  013434  6F05               	movwf	strcpy@from& (0+255),b
 19025  013436  0EFE               	movlw	high STR_111
 19026  013438  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19027  01343A  EC14  F0DD         	call	_strcpy	;wreg free
 19028                           
 19029                           ;oled.c: 524: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.QI_temp_result
      +                          );
 19030  01343E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19031  013440  0102               	movlb	2	; () banked
 19032  013442  6F8C               	movwf	sprintf@wh& (0+255),b
 19033  013444  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19034  013446  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19035  013448  0E4A               	movlw	low STR_112
 19036  01344A  6F8E               	movwf	sprintf@f& (0+255),b
 19037  01344C  0EFF               	movlw	high STR_112
 19038  01344E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19039  013450  C2DB  F290         	movff	_LM73_temp_results,?_sprintf+4
 19040  013454  C2DC  F291         	movff	_LM73_temp_results+1,?_sprintf+5
 19041  013458  C2DD  F292         	movff	_LM73_temp_results+2,?_sprintf+6
 19042  01345C  C2DE  F293         	movff	_LM73_temp_results+3,?_sprintf+7
 19043  013460  EC38  F0DD         	call	_sprintf	;wreg free
 19044                           
 19045                           ;oled.c: 525: strcpy(OLED_RAM_Buffer.line2, " ");
 19046  013464  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19047  013466  0102               	movlb	2	; () banked
 19048  013468  6F03               	movwf	strcpy@to& (0+255),b
 19049  01346A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19050  01346C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19051  01346E  0EA2               	movlw	low (STR_56+10)
 19052  013470  6F05               	movwf	strcpy@from& (0+255),b
 19053  013472  0EFD               	movlw	high (STR_56+10)
 19054  013474  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19055  013476  EC14  F0DD         	call	_strcpy	;wreg free
 19056                           
 19057                           ;oled.c: 526: strcpy(OLED_RAM_Buffer.line3, " ");
 19058  01347A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19059  01347C  0102               	movlb	2	; () banked
 19060  01347E  6F03               	movwf	strcpy@to& (0+255),b
 19061  013480  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19062  013482  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19063  013484  0EA2               	movlw	low (STR_56+10)
 19064  013486  6F05               	movwf	strcpy@from& (0+255),b
 19065  013488  0EFD               	movlw	high (STR_56+10)
 19066  01348A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19067  01348C  EC14  F0DD         	call	_strcpy	;wreg free
 19068                           
 19069                           ;oled.c: 528: OLED_UpdateFromRAMBuffer();
 19070  013490  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19071                           
 19072                           ;oled.c: 529: OLED_Frame = OLED_QI_Temp;
 19073  013494  0E0F               	movlw	15
 19074  013496  D5FF               	goto	L4
 19075  013498                     l21973:
 19076                           
 19077                           ; BSR set to: 2
 19078                           ;oled.c: 536: OLED_update_flag = 0;
 19079  013498  0E00               	movlw	0
 19080  01349A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19081                           
 19082                           ; BSR set to: 2
 19083                           ;oled.c: 538: strcpy(OLED_RAM_Buffer.line0, "+5V Temp:");
 19084  01349C  0E00               	movlw	low _OLED_RAM_Buffer
 19085  01349E  6F03               	movwf	strcpy@to& (0+255),b
 19086  0134A0  0E03               	movlw	high _OLED_RAM_Buffer
 19087  0134A2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19088  0134A4  0E62               	movlw	low STR_115
 19089  0134A6  6F05               	movwf	strcpy@from& (0+255),b
 19090  0134A8  0EFE               	movlw	high STR_115
 19091  0134AA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19092  0134AC  EC14  F0DD         	call	_strcpy	;wreg free
 19093                           
 19094                           ;oled.c: 539: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.POS5_temp_resu
      +                          lt);
 19095  0134B0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19096  0134B2  0102               	movlb	2	; () banked
 19097  0134B4  6F8C               	movwf	sprintf@wh& (0+255),b
 19098  0134B6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19099  0134B8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19100  0134BA  0E4A               	movlw	low STR_112
 19101  0134BC  6F8E               	movwf	sprintf@f& (0+255),b
 19102  0134BE  0EFF               	movlw	high STR_112
 19103  0134C0  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19104  0134C2  C2DF  F290         	movff	_LM73_temp_results+4,?_sprintf+4
 19105  0134C6  C2E0  F291         	movff	_LM73_temp_results+5,?_sprintf+5
 19106  0134CA  C2E1  F292         	movff	_LM73_temp_results+6,?_sprintf+6
 19107  0134CE  C2E2  F293         	movff	_LM73_temp_results+7,?_sprintf+7
 19108  0134D2  EC38  F0DD         	call	_sprintf	;wreg free
 19109                           
 19110                           ;oled.c: 540: strcpy(OLED_RAM_Buffer.line2, " ");
 19111  0134D6  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19112  0134D8  0102               	movlb	2	; () banked
 19113  0134DA  6F03               	movwf	strcpy@to& (0+255),b
 19114  0134DC  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19115  0134DE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19116  0134E0  0EA2               	movlw	low (STR_56+10)
 19117  0134E2  6F05               	movwf	strcpy@from& (0+255),b
 19118  0134E4  0EFD               	movlw	high (STR_56+10)
 19119  0134E6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19120  0134E8  EC14  F0DD         	call	_strcpy	;wreg free
 19121                           
 19122                           ;oled.c: 541: strcpy(OLED_RAM_Buffer.line3, " ");
 19123  0134EC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19124  0134EE  0102               	movlb	2	; () banked
 19125  0134F0  6F03               	movwf	strcpy@to& (0+255),b
 19126  0134F2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19127  0134F4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19128  0134F6  0EA2               	movlw	low (STR_56+10)
 19129  0134F8  6F05               	movwf	strcpy@from& (0+255),b
 19130  0134FA  0EFD               	movlw	high (STR_56+10)
 19131  0134FC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19132  0134FE  EC14  F0DD         	call	_strcpy	;wreg free
 19133                           
 19134                           ;oled.c: 543: OLED_UpdateFromRAMBuffer();
 19135  013502  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19136                           
 19137                           ;oled.c: 544: OLED_Frame = OLED_POS5_Temp;
 19138  013506  0E10               	movlw	16
 19139  013508  D5C6               	goto	L4
 19140  01350A                     l21989:
 19141                           
 19142                           ; BSR set to: 2
 19143                           ;oled.c: 551: OLED_update_flag = 0;
 19144  01350A  0E00               	movlw	0
 19145  01350C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19146                           
 19147                           ; BSR set to: 2
 19148                           ;oled.c: 553: strcpy(OLED_RAM_Buffer.line0, "Ambient Temp:");
 19149  01350E  0E00               	movlw	low _OLED_RAM_Buffer
 19150  013510  6F03               	movwf	strcpy@to& (0+255),b
 19151  013512  0E03               	movlw	high _OLED_RAM_Buffer
 19152  013514  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19153  013516  0E69               	movlw	low STR_119
 19154  013518  6F05               	movwf	strcpy@from& (0+255),b
 19155  01351A  0EFC               	movlw	high STR_119
 19156  01351C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19157  01351E  EC14  F0DD         	call	_strcpy	;wreg free
 19158                           
 19159                           ;oled.c: 554: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.Ambient_temp_r
      +                          esult);
 19160  013522  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19161  013524  0102               	movlb	2	; () banked
 19162  013526  6F8C               	movwf	sprintf@wh& (0+255),b
 19163  013528  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19164  01352A  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19165  01352C  0E4A               	movlw	low STR_112
 19166  01352E  6F8E               	movwf	sprintf@f& (0+255),b
 19167  013530  0EFF               	movlw	high STR_112
 19168  013532  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19169  013534  C2E3  F290         	movff	_LM73_temp_results+8,?_sprintf+4
 19170  013538  C2E4  F291         	movff	_LM73_temp_results+9,?_sprintf+5
 19171  01353C  C2E5  F292         	movff	_LM73_temp_results+10,?_sprintf+6
 19172  013540  C2E6  F293         	movff	_LM73_temp_results+11,?_sprintf+7
 19173  013544  EC38  F0DD         	call	_sprintf	;wreg free
 19174                           
 19175                           ;oled.c: 555: strcpy(OLED_RAM_Buffer.line2, " ");
 19176  013548  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19177  01354A  0102               	movlb	2	; () banked
 19178  01354C  6F03               	movwf	strcpy@to& (0+255),b
 19179  01354E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19180  013550  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19181  013552  0EA2               	movlw	low (STR_56+10)
 19182  013554  6F05               	movwf	strcpy@from& (0+255),b
 19183  013556  0EFD               	movlw	high (STR_56+10)
 19184  013558  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19185  01355A  EC14  F0DD         	call	_strcpy	;wreg free
 19186                           
 19187                           ;oled.c: 556: strcpy(OLED_RAM_Buffer.line3, " ");
 19188  01355E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19189  013560  0102               	movlb	2	; () banked
 19190  013562  6F03               	movwf	strcpy@to& (0+255),b
 19191  013564  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19192  013566  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19193  013568  0EA2               	movlw	low (STR_56+10)
 19194  01356A  6F05               	movwf	strcpy@from& (0+255),b
 19195  01356C  0EFD               	movlw	high (STR_56+10)
 19196  01356E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19197  013570  EC14  F0DD         	call	_strcpy	;wreg free
 19198                           
 19199                           ;oled.c: 558: OLED_UpdateFromRAMBuffer();
 19200  013574  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19201                           
 19202                           ;oled.c: 559: OLED_Frame = OLED_Ambient_Temp;
 19203  013578  0E11               	movlw	17
 19204  01357A  D58D               	goto	L4
 19205  01357C                     l22005:
 19206                           
 19207                           ; BSR set to: 2
 19208                           ;oled.c: 566: OLED_update_flag = 0;
 19209  01357C  0E00               	movlw	0
 19210  01357E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19211                           
 19212                           ; BSR set to: 2
 19213                           ;oled.c: 568: strcpy(OLED_RAM_Buffer.line0, "Micro Temp:");
 19214  013580  0E00               	movlw	low _OLED_RAM_Buffer
 19215  013582  6F03               	movwf	strcpy@to& (0+255),b
 19216  013584  0E03               	movlw	high _OLED_RAM_Buffer
 19217  013586  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19218  013588  0E74               	movlw	low STR_123
 19219  01358A  6F05               	movwf	strcpy@from& (0+255),b
 19220  01358C  0EFD               	movlw	high STR_123
 19221  01358E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19222  013590  EC14  F0DD         	call	_strcpy	;wreg free
 19223                           
 19224                           ;oled.c: 569: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", adc_results.die_temp_adc_result)
      +                          ;
 19225  013594  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19226  013596  0102               	movlb	2	; () banked
 19227  013598  6F8C               	movwf	sprintf@wh& (0+255),b
 19228  01359A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19229  01359C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19230  01359E  0E4A               	movlw	low STR_112
 19231  0135A0  6F8E               	movwf	sprintf@f& (0+255),b
 19232  0135A2  0EFF               	movlw	high STR_112
 19233  0135A4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19234  0135A6  C0F5  F290         	movff	_adc_results+24,?_sprintf+4
 19235  0135AA  C0F6  F291         	movff	_adc_results+25,?_sprintf+5
 19236  0135AE  C0F7  F292         	movff	_adc_results+26,?_sprintf+6
 19237  0135B2  C0F8  F293         	movff	_adc_results+27,?_sprintf+7
 19238  0135B6  EC38  F0DD         	call	_sprintf	;wreg free
 19239                           
 19240                           ;oled.c: 570: strcpy(OLED_RAM_Buffer.line2, " ");
 19241  0135BA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19242  0135BC  0102               	movlb	2	; () banked
 19243  0135BE  6F03               	movwf	strcpy@to& (0+255),b
 19244  0135C0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19245  0135C2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19246  0135C4  0EA2               	movlw	low (STR_56+10)
 19247  0135C6  6F05               	movwf	strcpy@from& (0+255),b
 19248  0135C8  0EFD               	movlw	high (STR_56+10)
 19249  0135CA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19250  0135CC  EC14  F0DD         	call	_strcpy	;wreg free
 19251                           
 19252                           ;oled.c: 571: strcpy(OLED_RAM_Buffer.line3, " ");
 19253  0135D0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19254  0135D2  0102               	movlb	2	; () banked
 19255  0135D4  6F03               	movwf	strcpy@to& (0+255),b
 19256  0135D6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19257  0135D8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19258  0135DA  0EA2               	movlw	low (STR_56+10)
 19259  0135DC  6F05               	movwf	strcpy@from& (0+255),b
 19260  0135DE  0EFD               	movlw	high (STR_56+10)
 19261  0135E0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19262  0135E2  EC14  F0DD         	call	_strcpy	;wreg free
 19263                           
 19264                           ;oled.c: 573: OLED_UpdateFromRAMBuffer();
 19265  0135E6  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19266                           
 19267                           ;oled.c: 574: OLED_Frame = OLED_Micro_Temp;
 19268  0135EA  0E12               	movlw	18
 19269  0135EC  D554               	goto	L4
 19270  0135EE                     l22021:
 19271                           
 19272                           ; BSR set to: 2
 19273                           ;oled.c: 581: OLED_update_flag = 0;
 19274  0135EE  0E00               	movlw	0
 19275  0135F0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19276                           
 19277                           ; BSR set to: 2
 19278                           ;oled.c: 583: strcpy(OLED_RAM_Buffer.line0, "+5V Sw. Freq:");
 19279  0135F2  0E00               	movlw	low _OLED_RAM_Buffer
 19280  0135F4  6F03               	movwf	strcpy@to& (0+255),b
 19281  0135F6  0E03               	movlw	high _OLED_RAM_Buffer
 19282  0135F8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19283  0135FA  0E77               	movlw	low STR_127
 19284  0135FC  6F05               	movwf	strcpy@from& (0+255),b
 19285  0135FE  0EFC               	movlw	high STR_127
 19286  013600  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19287  013602  EC14  F0DD         	call	_strcpy	;wreg free
 19288                           
 19289                           ;oled.c: 584: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19290  013606  0101               	movlb	1	; () banked
 19291  013608  5195               	movf	_nxq_charge_state& (0+255),w,b
 19292  01360A  B4D8               	btfsc	status,2,c
 19293  01360C  D004               	goto	u27850
 19294                           
 19295                           ; BSR set to: 1
 19296  01360E  0E03               	movlw	3
 19297  013610  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 19298  013612  A4D8               	btfss	status,2,c
 19299  013614  D00C               	goto	l22031
 19300  013616                     u27850:
 19301                           
 19302                           ; BSR set to: 1
 19303  013616  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19304  013618  0102               	movlb	2	; () banked
 19305  01361A  6F03               	movwf	strcpy@to& (0+255),b
 19306  01361C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19307  01361E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19308  013620  0EF4               	movlw	low STR_128
 19309  013622  6F05               	movwf	strcpy@from& (0+255),b
 19310  013624  0EFD               	movlw	high STR_128
 19311  013626  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19312  013628  EC14  F0DD         	call	_strcpy	;wreg free
 19313  01362C  D00B               	goto	l2042
 19314  01362E                     l22031:
 19315                           
 19316                           ; BSR set to: 1
 19317                           ;oled.c: 585: else strcpy(OLED_RAM_Buffer.line1, "+2.5 MHz");
 19318  01362E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19319  013630  0102               	movlb	2	; () banked
 19320  013632  6F03               	movwf	strcpy@to& (0+255),b
 19321  013634  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19322  013636  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19323  013638  0E17               	movlw	low STR_129
 19324  01363A  6F05               	movwf	strcpy@from& (0+255),b
 19325  01363C  0EFF               	movlw	high STR_129
 19326  01363E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19327  013640  EC14  F0DD         	call	_strcpy	;wreg free
 19328  013644                     l2042:
 19329                           
 19330                           ;oled.c: 586: strcpy(OLED_RAM_Buffer.line2, " ");
 19331  013644  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19332  013646  0102               	movlb	2	; () banked
 19333  013648  6F03               	movwf	strcpy@to& (0+255),b
 19334  01364A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19335  01364C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19336  01364E  0EA2               	movlw	low (STR_56+10)
 19337  013650  6F05               	movwf	strcpy@from& (0+255),b
 19338  013652  0EFD               	movlw	high (STR_56+10)
 19339  013654  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19340  013656  EC14  F0DD         	call	_strcpy	;wreg free
 19341                           
 19342                           ;oled.c: 587: strcpy(OLED_RAM_Buffer.line3, " ");
 19343  01365A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19344  01365C  0102               	movlb	2	; () banked
 19345  01365E  6F03               	movwf	strcpy@to& (0+255),b
 19346  013660  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19347  013662  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19348  013664  0EA2               	movlw	low (STR_56+10)
 19349  013666  6F05               	movwf	strcpy@from& (0+255),b
 19350  013668  0EFD               	movlw	high (STR_56+10)
 19351  01366A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19352  01366C  EC14  F0DD         	call	_strcpy	;wreg free
 19353                           
 19354                           ;oled.c: 589: OLED_UpdateFromRAMBuffer();
 19355  013670  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19356                           
 19357                           ;oled.c: 590: OLED_Frame = OLED_POS5_FSW;
 19358  013674  0E13               	movlw	19
 19359  013676  D50F               	goto	L4
 19360  013678                     l22039:
 19361                           
 19362                           ; BSR set to: 2
 19363                           ;oled.c: 597: OLED_update_flag = 0;
 19364  013678  0E00               	movlw	0
 19365  01367A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19366                           
 19367                           ; BSR set to: 2
 19368                           ;oled.c: 599: strcpy(OLED_RAM_Buffer.line0, "QI Sw. Freq:");
 19369  01367C  0E00               	movlw	low _OLED_RAM_Buffer
 19370  01367E  6F03               	movwf	strcpy@to& (0+255),b
 19371  013680  0E03               	movlw	high _OLED_RAM_Buffer
 19372  013682  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19373  013684  0E00               	movlw	low STR_132
 19374  013686  6F05               	movwf	strcpy@from& (0+255),b
 19375  013688  0EFD               	movlw	high STR_132
 19376  01368A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19377  01368C  EC14  F0DD         	call	_strcpy	;wreg free
 19378                           
 19379                           ;oled.c: 600: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19380  013690  0101               	movlb	1	; () banked
 19381  013692  5195               	movf	_nxq_charge_state& (0+255),w,b
 19382  013694  B4D8               	btfsc	status,2,c
 19383  013696  D004               	goto	u27870
 19384                           
 19385                           ; BSR set to: 1
 19386  013698  0E03               	movlw	3
 19387  01369A  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 19388  01369C  A4D8               	btfss	status,2,c
 19389  01369E  D00C               	goto	l22049
 19390  0136A0                     u27870:
 19391                           
 19392                           ; BSR set to: 1
 19393  0136A0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19394  0136A2  0102               	movlb	2	; () banked
 19395  0136A4  6F03               	movwf	strcpy@to& (0+255),b
 19396  0136A6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19397  0136A8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19398  0136AA  0EF4               	movlw	low STR_128
 19399  0136AC  6F05               	movwf	strcpy@from& (0+255),b
 19400  0136AE  0EFD               	movlw	high STR_128
 19401  0136B0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19402  0136B2  EC14  F0DD         	call	_strcpy	;wreg free
 19403  0136B6  D01D               	goto	l22051
 19404  0136B8                     l22049:
 19405                           
 19406                           ; BSR set to: 1
 19407                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19408  0136B8  C168  F29F         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 19409  0136BC  C169  F2A0         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 19410  0136C0  C16A  F2A1         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 19411  0136C4  C16B  F2A2         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 19412  0136C8  ECCE  F0B1         	call	_floatToEngineeringFormat	;wreg free
 19413  0136CC  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6035
 19414  0136D0  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6035+1
 19415                           
 19416                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19417  0136D4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19418  0136D6  0102               	movlb	2	; () banked
 19419  0136D8  6F8C               	movwf	sprintf@wh& (0+255),b
 19420  0136DA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19421  0136DC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19422  0136DE  0EA4               	movlw	low STR_134
 19423  0136E0  6F8E               	movwf	sprintf@f& (0+255),b
 19424  0136E2  0EFF               	movlw	high STR_134
 19425  0136E4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19426  0136E6  C3F3  F290         	movff	_OLED_updateHandler$6035,?_sprintf+4
 19427  0136EA  C3F4  F291         	movff	_OLED_updateHandler$6035+1,?_sprintf+5
 19428  0136EE  EC38  F0DD         	call	_sprintf	;wreg free
 19429  0136F2                     l22051:
 19430                           
 19431                           ;oled.c: 602: strcpy(OLED_RAM_Buffer.line2, " ");
 19432  0136F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19433  0136F4  0102               	movlb	2	; () banked
 19434  0136F6  6F03               	movwf	strcpy@to& (0+255),b
 19435  0136F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19436  0136FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19437  0136FC  0EA2               	movlw	low (STR_56+10)
 19438  0136FE  6F05               	movwf	strcpy@from& (0+255),b
 19439  013700  0EFD               	movlw	high (STR_56+10)
 19440  013702  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19441  013704  EC14  F0DD         	call	_strcpy	;wreg free
 19442                           
 19443                           ;oled.c: 603: strcpy(OLED_RAM_Buffer.line3, " ");
 19444  013708  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19445  01370A  0102               	movlb	2	; () banked
 19446  01370C  6F03               	movwf	strcpy@to& (0+255),b
 19447  01370E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19448  013710  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19449  013712  0EA2               	movlw	low (STR_56+10)
 19450  013714  6F05               	movwf	strcpy@from& (0+255),b
 19451  013716  0EFD               	movlw	high (STR_56+10)
 19452  013718  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19453  01371A  EC14  F0DD         	call	_strcpy	;wreg free
 19454                           
 19455                           ;oled.c: 605: OLED_UpdateFromRAMBuffer();
 19456  01371E  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19457                           
 19458                           ;oled.c: 606: OLED_Frame = OLED_QI_FSW;
 19459  013722  0E14               	movlw	20
 19460  013724  D4B8               	goto	L4
 19461  013726                     l22061:
 19462                           
 19463                           ; BSR set to: 2
 19464                           ;oled.c: 614: OLED_update_flag = 0;
 19465  013726  0E00               	movlw	0
 19466  013728  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19467                           
 19468                           ; BSR set to: 2
 19469                           ;oled.c: 616: strcpy(OLED_RAM_Buffer.line0, "Dev. On Time:");
 19470  01372A  0E00               	movlw	low _OLED_RAM_Buffer
 19471  01372C  6F03               	movwf	strcpy@to& (0+255),b
 19472  01372E  0E03               	movlw	high _OLED_RAM_Buffer
 19473  013730  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19474  013732  0E5B               	movlw	low STR_137
 19475  013734  6F05               	movwf	strcpy@from& (0+255),b
 19476  013736  0EFC               	movlw	high STR_137
 19477  013738  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19478  01373A  EC14  F0DD         	call	_strcpy	;wreg free
 19479                           
 19480                           ;oled.c: 619: if (device_on_time >= 31536000) {
 19481  01373E  0E80               	movlw	128
 19482  013740  0100               	movlb	0	; () banked
 19483  013742  5DC5               	subwf	_device_on_time& (0+255),w,b
 19484  013744  0E33               	movlw	51
 19485  013746  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19486  013748  0EE1               	movlw	225
 19487  01374A  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19488  01374C  0E01               	movlw	1
 19489  01374E  59C8               	subwfb	(_device_on_time+3)& (0+255),w,b
 19490  013750  A0D8               	btfss	status,0,c
 19491  013752  D04F               	goto	l22069
 19492                           
 19493                           ; BSR set to: 0
 19494                           ;oled.c: 621: sprintf(OLED_RAM_Buffer.line1, "%u years", getYearsFromOnTime(device_on_ti
      +                          me));
 19495  013754  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19496  013756  0102               	movlb	2	; () banked
 19497  013758  6F8C               	movwf	sprintf@wh& (0+255),b
 19498  01375A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19499  01375C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19500  01375E  0E05               	movlw	low STR_138
 19501  013760  6F8E               	movwf	sprintf@f& (0+255),b
 19502  013762  0EFF               	movlw	high STR_138
 19503  013764  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19504  013766  C0C5  F20D         	movff	_device_on_time,getYearsFromOnTime@input_seconds
 19505  01376A  C0C6  F20E         	movff	_device_on_time+1,getYearsFromOnTime@input_seconds+1
 19506  01376E  C0C7  F20F         	movff	_device_on_time+2,getYearsFromOnTime@input_seconds+2
 19507  013772  C0C8  F210         	movff	_device_on_time+3,getYearsFromOnTime@input_seconds+3
 19508  013776  EC7E  F0E0         	call	_getYearsFromOnTime	;wreg free
 19509  01377A  0102               	movlb	2	; () banked
 19510  01377C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19511  01377E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19512  013780  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19513  013782  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19514  013784  EC38  F0DD         	call	_sprintf	;wreg free
 19515                           
 19516                           ;oled.c: 622: sprintf(OLED_RAM_Buffer.line2, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19517  013788  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19518  01378A  0102               	movlb	2	; () banked
 19519  01378C  6F8C               	movwf	sprintf@wh& (0+255),b
 19520  01378E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19521  013790  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19522  013792  0E62               	movlw	low STR_139
 19523  013794  6F8E               	movwf	sprintf@f& (0+255),b
 19524  013796  0EFF               	movlw	high STR_139
 19525  013798  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19526  01379A  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19527  01379E  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19528  0137A2  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19529  0137A6  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19530  0137AA  EC15  F0D7         	call	_getDaysFromOnTime	;wreg free
 19531  0137AE  0102               	movlb	2	; () banked
 19532  0137B0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19533  0137B2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19534  0137B4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19535  0137B6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19536  0137B8  EC38  F0DD         	call	_sprintf	;wreg free
 19537                           
 19538                           ;oled.c: 623: sprintf(OLED_RAM_Buffer.line3, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19539  0137BC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19540  0137BE  0102               	movlb	2	; () banked
 19541  0137C0  6F8C               	movwf	sprintf@wh& (0+255),b
 19542  0137C2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19543  0137C4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19544  0137C6  0E0E               	movlw	low STR_140
 19545  0137C8  6F8E               	movwf	sprintf@f& (0+255),b
 19546  0137CA  0EFF               	movlw	high STR_140
 19547  0137CC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19548  0137CE  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19549  0137D2  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19550  0137D6  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19551  0137DA  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19552  0137DE  EC99  F0D1         	call	_getHoursFromOnTime	;wreg free
 19553  0137E2  0102               	movlb	2	; () banked
 19554  0137E4  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19555  0137E6  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19556  0137E8  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19557  0137EA  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19558  0137EC  EC38  F0DD         	call	_sprintf	;wreg free
 19559                           
 19560                           ;oled.c: 626: }
 19561  0137F0  D129               	goto	l22089
 19562  0137F2                     l22069:
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;oled.c: 629: else if (device_on_time >= 86400) {
 19566  0137F2  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19567  0137F4  E108               	bnz	u27890
 19568  0137F6  0E80               	movlw	128
 19569  0137F8  5DC5               	subwf	_device_on_time& (0+255),w,b
 19570  0137FA  0E51               	movlw	81
 19571  0137FC  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19572  0137FE  0E01               	movlw	1
 19573  013800  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19574  013802  A0D8               	btfss	status,0,c
 19575  013804  D04F               	goto	l22073
 19576  013806                     u27890:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;oled.c: 631: sprintf(OLED_RAM_Buffer.line1, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19580  013806  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19581  013808  0102               	movlb	2	; () banked
 19582  01380A  6F8C               	movwf	sprintf@wh& (0+255),b
 19583  01380C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19584  01380E  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19585  013810  0E62               	movlw	low STR_139
 19586  013812  6F8E               	movwf	sprintf@f& (0+255),b
 19587  013814  0EFF               	movlw	high STR_139
 19588  013816  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19589  013818  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19590  01381C  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19591  013820  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19592  013824  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19593  013828  EC15  F0D7         	call	_getDaysFromOnTime	;wreg free
 19594  01382C  0102               	movlb	2	; () banked
 19595  01382E  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19596  013830  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19597  013832  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19598  013834  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19599  013836  EC38  F0DD         	call	_sprintf	;wreg free
 19600                           
 19601                           ;oled.c: 632: sprintf(OLED_RAM_Buffer.line2, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19602  01383A  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19603  01383C  0102               	movlb	2	; () banked
 19604  01383E  6F8C               	movwf	sprintf@wh& (0+255),b
 19605  013840  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19606  013842  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19607  013844  0E0E               	movlw	low STR_140
 19608  013846  6F8E               	movwf	sprintf@f& (0+255),b
 19609  013848  0EFF               	movlw	high STR_140
 19610  01384A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19611  01384C  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19612  013850  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19613  013854  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19614  013858  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19615  01385C  EC99  F0D1         	call	_getHoursFromOnTime	;wreg free
 19616  013860  0102               	movlb	2	; () banked
 19617  013862  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19618  013864  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19619  013866  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19620  013868  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19621  01386A  EC38  F0DD         	call	_sprintf	;wreg free
 19622                           
 19623                           ;oled.c: 633: sprintf(OLED_RAM_Buffer.line3, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19624  01386E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19625  013870  0102               	movlb	2	; () banked
 19626  013872  6F8C               	movwf	sprintf@wh& (0+255),b
 19627  013874  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19628  013876  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19629  013878  0E0A               	movlw	low STR_143
 19630  01387A  6F8E               	movwf	sprintf@f& (0+255),b
 19631  01387C  0EFE               	movlw	high STR_143
 19632  01387E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19633  013880  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19634  013884  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19635  013888  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19636  01388C  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19637  013890  EC0E  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19638  013894  0102               	movlb	2	; () banked
 19639  013896  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19640  013898  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19641  01389A  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19642  01389C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19643  01389E  EC38  F0DD         	call	_sprintf	;wreg free
 19644                           
 19645                           ;oled.c: 635: }
 19646  0138A2  D0D0               	goto	l22089
 19647  0138A4                     l22073:
 19648                           
 19649                           ; BSR set to: 0
 19650                           ;oled.c: 638: else if (device_on_time >= 3600) {
 19651  0138A4  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19652  0138A6  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19653  0138A8  E106               	bnz	u27900
 19654  0138AA  0E10               	movlw	16
 19655  0138AC  5DC5               	subwf	_device_on_time& (0+255),w,b
 19656  0138AE  0E0E               	movlw	14
 19657  0138B0  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19658  0138B2  A0D8               	btfss	status,0,c
 19659  0138B4  D04F               	goto	l22077
 19660  0138B6                     u27900:
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;oled.c: 640: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19664  0138B6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19665  0138B8  0102               	movlb	2	; () banked
 19666  0138BA  6F8C               	movwf	sprintf@wh& (0+255),b
 19667  0138BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19668  0138BE  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19669  0138C0  0E0E               	movlw	low STR_140
 19670  0138C2  6F8E               	movwf	sprintf@f& (0+255),b
 19671  0138C4  0EFF               	movlw	high STR_140
 19672  0138C6  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19673  0138C8  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19674  0138CC  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19675  0138D0  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19676  0138D4  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19677  0138D8  EC99  F0D1         	call	_getHoursFromOnTime	;wreg free
 19678  0138DC  0102               	movlb	2	; () banked
 19679  0138DE  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19680  0138E0  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19681  0138E2  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19682  0138E4  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19683  0138E6  EC38  F0DD         	call	_sprintf	;wreg free
 19684                           
 19685                           ;oled.c: 641: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19686  0138EA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19687  0138EC  0102               	movlb	2	; () banked
 19688  0138EE  6F8C               	movwf	sprintf@wh& (0+255),b
 19689  0138F0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19690  0138F2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19691  0138F4  0E0A               	movlw	low STR_143
 19692  0138F6  6F8E               	movwf	sprintf@f& (0+255),b
 19693  0138F8  0EFE               	movlw	high STR_143
 19694  0138FA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19695  0138FC  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19696  013900  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19697  013904  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19698  013908  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19699  01390C  EC0E  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19700  013910  0102               	movlb	2	; () banked
 19701  013912  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19702  013914  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19703  013916  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19704  013918  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19705  01391A  EC38  F0DD         	call	_sprintf	;wreg free
 19706                           
 19707                           ;oled.c: 642: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19708  01391E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19709  013920  0102               	movlb	2	; () banked
 19710  013922  6F8C               	movwf	sprintf@wh& (0+255),b
 19711  013924  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19712  013926  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19713  013928  0EFF               	movlw	low STR_146
 19714  01392A  6F8E               	movwf	sprintf@f& (0+255),b
 19715  01392C  0EFD               	movlw	high STR_146
 19716  01392E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19717  013930  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19718  013934  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19719  013938  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19720  01393C  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19721  013940  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19722  013944  0102               	movlb	2	; () banked
 19723  013946  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19724  013948  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19725  01394A  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19726  01394C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19727  01394E  EC38  F0DD         	call	_sprintf	;wreg free
 19728                           
 19729                           ;oled.c: 644: }
 19730  013952  D078               	goto	l22089
 19731  013954                     l22077:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;oled.c: 647: else if (device_on_time >= 60) {
 19735  013954  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19736  013956  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19737  013958  11C6               	iorwf	(_device_on_time+1)& (0+255),w,b
 19738  01395A  E104               	bnz	u27910
 19739  01395C  0E3C               	movlw	60
 19740  01395E  5DC5               	subwf	_device_on_time& (0+255),w,b
 19741  013960  A0D8               	btfss	status,0,c
 19742  013962  D040               	goto	l22083
 19743  013964                     u27910:
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;oled.c: 649: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19747  013964  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19748  013966  0102               	movlb	2	; () banked
 19749  013968  6F8C               	movwf	sprintf@wh& (0+255),b
 19750  01396A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19751  01396C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19752  01396E  0E0A               	movlw	low STR_143
 19753  013970  6F8E               	movwf	sprintf@f& (0+255),b
 19754  013972  0EFE               	movlw	high STR_143
 19755  013974  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19756  013976  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19757  01397A  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19758  01397E  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19759  013982  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19760  013986  EC0E  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19761  01398A  0102               	movlb	2	; () banked
 19762  01398C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19763  01398E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19764  013990  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19765  013992  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19766  013994  EC38  F0DD         	call	_sprintf	;wreg free
 19767                           
 19768                           ;oled.c: 650: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19769  013998  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19770  01399A  0102               	movlb	2	; () banked
 19771  01399C  6F8C               	movwf	sprintf@wh& (0+255),b
 19772  01399E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19773  0139A0  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19774  0139A2  0EFF               	movlw	low STR_146
 19775  0139A4  6F8E               	movwf	sprintf@f& (0+255),b
 19776  0139A6  0EFD               	movlw	high STR_146
 19777  0139A8  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19778  0139AA  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19779  0139AE  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19780  0139B2  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19781  0139B6  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19782  0139BA  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19783  0139BE  0102               	movlb	2	; () banked
 19784  0139C0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19785  0139C2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19786  0139C4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19787  0139C6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19788  0139C8  EC38  F0DD         	call	_sprintf	;wreg free
 19789                           
 19790                           ;oled.c: 651: strcpy(OLED_RAM_Buffer.line3, " ");
 19791  0139CC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19792  0139CE  0102               	movlb	2	; () banked
 19793  0139D0  6F03               	movwf	strcpy@to& (0+255),b
 19794  0139D2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19795  0139D4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19796  0139D6  0EA2               	movlw	low (STR_56+10)
 19797  0139D8  6F05               	movwf	strcpy@from& (0+255),b
 19798  0139DA  0EFD               	movlw	high (STR_56+10)
 19799  0139DC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19800  0139DE  EC14  F0DD         	call	_strcpy	;wreg free
 19801                           
 19802                           ;oled.c: 653: }
 19803  0139E2  D030               	goto	l22089
 19804  0139E4                     l22083:
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;oled.c: 656: else {;oled.c: 658: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(device_on_time));
 19808  0139E4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19809  0139E6  0102               	movlb	2	; () banked
 19810  0139E8  6F8C               	movwf	sprintf@wh& (0+255),b
 19811  0139EA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19812  0139EC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19813  0139EE  0EFF               	movlw	low STR_146
 19814  0139F0  6F8E               	movwf	sprintf@f& (0+255),b
 19815  0139F2  0EFD               	movlw	high STR_146
 19816  0139F4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19817  0139F6  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19818  0139FA  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19819  0139FE  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19820  013A02  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19821  013A06  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19822  013A0A  0102               	movlb	2	; () banked
 19823  013A0C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19824  013A0E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19825  013A10  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19826  013A12  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19827  013A14  EC38  F0DD         	call	_sprintf	;wreg free
 19828                           
 19829                           ;oled.c: 659: strcpy(OLED_RAM_Buffer.line2, " ");
 19830  013A18  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19831  013A1A  0102               	movlb	2	; () banked
 19832  013A1C  6F03               	movwf	strcpy@to& (0+255),b
 19833  013A1E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19834  013A20  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19835  013A22  0EA2               	movlw	low (STR_56+10)
 19836  013A24  6F05               	movwf	strcpy@from& (0+255),b
 19837  013A26  0EFD               	movlw	high (STR_56+10)
 19838  013A28  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19839  013A2A  EC14  F0DD         	call	_strcpy	;wreg free
 19840                           
 19841                           ;oled.c: 660: strcpy(OLED_RAM_Buffer.line3, " ");
 19842  013A2E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19843  013A30  0102               	movlb	2	; () banked
 19844  013A32  6F03               	movwf	strcpy@to& (0+255),b
 19845  013A34  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19846  013A36  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19847  013A38  0EA2               	movlw	low (STR_56+10)
 19848  013A3A  6F05               	movwf	strcpy@from& (0+255),b
 19849  013A3C  0EFD               	movlw	high (STR_56+10)
 19850  013A3E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19851  013A40  EC14  F0DD         	call	_strcpy	;wreg free
 19852  013A44                     l22089:
 19853                           
 19854                           ;oled.c: 662: };oled.c: 665: OLED_UpdateFromRAMBuffer();
 19855  013A44  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19856                           
 19857                           ;oled.c: 666: OLED_Frame = OLED_Dev_On_Time;
 19858  013A48  0E15               	movlw	21
 19859  013A4A  EF4B  F098         	goto	L4
 19860  013A4E                     l22095:
 19861                           
 19862                           ; BSR set to: 2
 19863                           ;oled.c: 673: OLED_update_flag = 0;
 19864  013A4E  0E00               	movlw	0
 19865  013A50  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19866                           
 19867                           ; BSR set to: 2
 19868                           ;oled.c: 675: strcpy(OLED_RAM_Buffer.line0, "Charge Time:");
 19869  013A52  0E00               	movlw	low _OLED_RAM_Buffer
 19870  013A54  6F03               	movwf	strcpy@to& (0+255),b
 19871  013A56  0E03               	movlw	high _OLED_RAM_Buffer
 19872  013A58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19873  013A5A  0EF3               	movlw	low STR_153
 19874  013A5C  6F05               	movwf	strcpy@from& (0+255),b
 19875  013A5E  0EFC               	movlw	high STR_153
 19876  013A60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19877  013A62  EC14  F0DD         	call	_strcpy	;wreg free
 19878                           
 19879                           ;oled.c: 678: if (QI_charge_time >= 3600) {
 19880  013A66  0102               	movlb	2	; () banked
 19881  013A68  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19882  013A6A  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19883  013A6C  E106               	bnz	u27920
 19884  013A6E  0E10               	movlw	16
 19885  013A70  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19886  013A72  0E0E               	movlw	14
 19887  013A74  59D3               	subwfb	(_QI_charge_time+1)& (0+255),w,b
 19888  013A76  A0D8               	btfss	status,0,c
 19889  013A78  D04E               	goto	l22103
 19890  013A7A                     u27920:
 19891                           
 19892                           ; BSR set to: 2
 19893                           ;oled.c: 680: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(QI_charge_ti
      +                          me));
 19894  013A7A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19895  013A7C  6F8C               	movwf	sprintf@wh& (0+255),b
 19896  013A7E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19897  013A80  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19898  013A82  0E0E               	movlw	low STR_140
 19899  013A84  6F8E               	movwf	sprintf@f& (0+255),b
 19900  013A86  0EFF               	movlw	high STR_140
 19901  013A88  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19902  013A8A  C2D2  F20D         	movff	_QI_charge_time,getHoursFromOnTime@input_seconds
 19903  013A8E  C2D3  F20E         	movff	_QI_charge_time+1,getHoursFromOnTime@input_seconds+1
 19904  013A92  C2D4  F20F         	movff	_QI_charge_time+2,getHoursFromOnTime@input_seconds+2
 19905  013A96  C2D5  F210         	movff	_QI_charge_time+3,getHoursFromOnTime@input_seconds+3
 19906  013A9A  EC99  F0D1         	call	_getHoursFromOnTime	;wreg free
 19907  013A9E  0102               	movlb	2	; () banked
 19908  013AA0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19909  013AA2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19910  013AA4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19911  013AA6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19912  013AA8  EC38  F0DD         	call	_sprintf	;wreg free
 19913                           
 19914                           ;oled.c: 681: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19915  013AAC  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19916  013AAE  0102               	movlb	2	; () banked
 19917  013AB0  6F8C               	movwf	sprintf@wh& (0+255),b
 19918  013AB2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19919  013AB4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19920  013AB6  0E0A               	movlw	low STR_143
 19921  013AB8  6F8E               	movwf	sprintf@f& (0+255),b
 19922  013ABA  0EFE               	movlw	high STR_143
 19923  013ABC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19924  013ABE  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19925  013AC2  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19926  013AC6  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19927  013ACA  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19928  013ACE  EC0E  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19929  013AD2  0102               	movlb	2	; () banked
 19930  013AD4  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19931  013AD6  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19932  013AD8  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19933  013ADA  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19934  013ADC  EC38  F0DD         	call	_sprintf	;wreg free
 19935                           
 19936                           ;oled.c: 682: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19937  013AE0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19938  013AE2  0102               	movlb	2	; () banked
 19939  013AE4  6F8C               	movwf	sprintf@wh& (0+255),b
 19940  013AE6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19941  013AE8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19942  013AEA  0EFF               	movlw	low STR_146
 19943  013AEC  6F8E               	movwf	sprintf@f& (0+255),b
 19944  013AEE  0EFD               	movlw	high STR_146
 19945  013AF0  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19946  013AF2  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19947  013AF6  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19948  013AFA  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19949  013AFE  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19950  013B02  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19951  013B06  0102               	movlb	2	; () banked
 19952  013B08  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19953  013B0A  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19954  013B0C  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19955  013B0E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19956  013B10  EC38  F0DD         	call	_sprintf	;wreg free
 19957                           
 19958                           ;oled.c: 684: }
 19959  013B14  D09D               	goto	l22119
 19960  013B16                     l22103:
 19961                           
 19962                           ; BSR set to: 2
 19963                           ;oled.c: 687: else if (QI_charge_time >= 60) {
 19964  013B16  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19965  013B18  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19966  013B1A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19967  013B1C  E104               	bnz	u27930
 19968  013B1E  0E3C               	movlw	60
 19969  013B20  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19970  013B22  A0D8               	btfss	status,0,c
 19971  013B24  D03F               	goto	l22109
 19972  013B26                     u27930:
 19973                           
 19974                           ; BSR set to: 2
 19975                           ;oled.c: 689: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19976  013B26  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19977  013B28  6F8C               	movwf	sprintf@wh& (0+255),b
 19978  013B2A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19979  013B2C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19980  013B2E  0E0A               	movlw	low STR_143
 19981  013B30  6F8E               	movwf	sprintf@f& (0+255),b
 19982  013B32  0EFE               	movlw	high STR_143
 19983  013B34  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19984  013B36  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19985  013B3A  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19986  013B3E  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19987  013B42  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19988  013B46  EC0E  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19989  013B4A  0102               	movlb	2	; () banked
 19990  013B4C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19991  013B4E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19992  013B50  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19993  013B52  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19994  013B54  EC38  F0DD         	call	_sprintf	;wreg free
 19995                           
 19996                           ;oled.c: 690: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19997  013B58  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19998  013B5A  0102               	movlb	2	; () banked
 19999  013B5C  6F8C               	movwf	sprintf@wh& (0+255),b
 20000  013B5E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20001  013B60  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20002  013B62  0EFF               	movlw	low STR_146
 20003  013B64  6F8E               	movwf	sprintf@f& (0+255),b
 20004  013B66  0EFD               	movlw	high STR_146
 20005  013B68  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20006  013B6A  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 20007  013B6E  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 20008  013B72  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 20009  013B76  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 20010  013B7A  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 20011  013B7E  0102               	movlb	2	; () banked
 20012  013B80  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 20013  013B82  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 20014  013B84  6F90               	movwf	(?_sprintf+4)& (0+255),b
 20015  013B86  6B91               	clrf	(?_sprintf+5)& (0+255),b
 20016  013B88  EC38  F0DD         	call	_sprintf	;wreg free
 20017                           
 20018                           ;oled.c: 691: strcpy(OLED_RAM_Buffer.line3, " ");
 20019  013B8C  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20020  013B8E  0102               	movlb	2	; () banked
 20021  013B90  6F03               	movwf	strcpy@to& (0+255),b
 20022  013B92  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20023  013B94  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20024  013B96  0EA2               	movlw	low (STR_56+10)
 20025  013B98  6F05               	movwf	strcpy@from& (0+255),b
 20026  013B9A  0EFD               	movlw	high (STR_56+10)
 20027  013B9C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20028  013B9E  EC14  F0DD         	call	_strcpy	;wreg free
 20029                           
 20030                           ;oled.c: 693: }
 20031  013BA2  D056               	goto	l22119
 20032  013BA4                     l22109:
 20033                           
 20034                           ; BSR set to: 2
 20035                           ;oled.c: 695: else if (QI_charge_time == 0) {
 20036  013BA4  51D2               	movf	_QI_charge_time& (0+255),w,b
 20037  013BA6  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20038  013BA8  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20039  013BAA  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20040  013BAC  A4D8               	btfss	status,2,c
 20041  013BAE  D021               	goto	l22113
 20042                           
 20043                           ; BSR set to: 2
 20044                           ;oled.c: 697: strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20045  013BB0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20046  013BB2  6F03               	movwf	strcpy@to& (0+255),b
 20047  013BB4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20048  013BB6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20049  013BB8  0E1A               	movlw	low STR_93
 20050  013BBA  6F05               	movwf	strcpy@from& (0+255),b
 20051  013BBC  0EFD               	movlw	high STR_93
 20052  013BBE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20053  013BC0  EC14  F0DD         	call	_strcpy	;wreg free
 20054                           
 20055                           ;oled.c: 698: strcpy(OLED_RAM_Buffer.line2, " ");
 20056  013BC4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20057  013BC6  0102               	movlb	2	; () banked
 20058  013BC8  6F03               	movwf	strcpy@to& (0+255),b
 20059  013BCA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20060  013BCC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20061  013BCE  0EA2               	movlw	low (STR_56+10)
 20062  013BD0  6F05               	movwf	strcpy@from& (0+255),b
 20063  013BD2  0EFD               	movlw	high (STR_56+10)
 20064  013BD4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20065  013BD6  EC14  F0DD         	call	_strcpy	;wreg free
 20066                           
 20067                           ;oled.c: 699: strcpy(OLED_RAM_Buffer.line3, " ");
 20068  013BDA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20069  013BDC  0102               	movlb	2	; () banked
 20070  013BDE  6F03               	movwf	strcpy@to& (0+255),b
 20071  013BE0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20072  013BE2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20073  013BE4  0EA2               	movlw	low (STR_56+10)
 20074  013BE6  6F05               	movwf	strcpy@from& (0+255),b
 20075  013BE8  0EFD               	movlw	high (STR_56+10)
 20076  013BEA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20077  013BEC  EC14  F0DD         	call	_strcpy	;wreg free
 20078                           
 20079                           ;oled.c: 701: }
 20080  013BF0  D02F               	goto	l22119
 20081  013BF2                     l22113:
 20082                           
 20083                           ; BSR set to: 2
 20084                           ;oled.c: 704: else {;oled.c: 706: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(QI_charge_time));
 20085  013BF2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20086  013BF4  6F8C               	movwf	sprintf@wh& (0+255),b
 20087  013BF6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20088  013BF8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20089  013BFA  0EFF               	movlw	low STR_146
 20090  013BFC  6F8E               	movwf	sprintf@f& (0+255),b
 20091  013BFE  0EFD               	movlw	high STR_146
 20092  013C00  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20093  013C02  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 20094  013C06  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 20095  013C0A  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 20096  013C0E  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 20097  013C12  ECA2  F0CA         	call	_getSecondsFromOnTime	;wreg free
 20098  013C16  0102               	movlb	2	; () banked
 20099  013C18  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 20100  013C1A  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 20101  013C1C  6F90               	movwf	(?_sprintf+4)& (0+255),b
 20102  013C1E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 20103  013C20  EC38  F0DD         	call	_sprintf	;wreg free
 20104                           
 20105                           ;oled.c: 707: strcpy(OLED_RAM_Buffer.line2, " ");
 20106  013C24  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20107  013C26  0102               	movlb	2	; () banked
 20108  013C28  6F03               	movwf	strcpy@to& (0+255),b
 20109  013C2A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20110  013C2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20111  013C2E  0EA2               	movlw	low (STR_56+10)
 20112  013C30  6F05               	movwf	strcpy@from& (0+255),b
 20113  013C32  0EFD               	movlw	high (STR_56+10)
 20114  013C34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20115  013C36  EC14  F0DD         	call	_strcpy	;wreg free
 20116                           
 20117                           ;oled.c: 708: strcpy(OLED_RAM_Buffer.line3, " ");
 20118  013C3A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20119  013C3C  0102               	movlb	2	; () banked
 20120  013C3E  6F03               	movwf	strcpy@to& (0+255),b
 20121  013C40  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20122  013C42  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20123  013C44  0EA2               	movlw	low (STR_56+10)
 20124  013C46  6F05               	movwf	strcpy@from& (0+255),b
 20125  013C48  0EFD               	movlw	high (STR_56+10)
 20126  013C4A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20127  013C4C  EC14  F0DD         	call	_strcpy	;wreg free
 20128  013C50                     l22119:
 20129                           
 20130                           ;oled.c: 710: };oled.c: 712: OLED_UpdateFromRAMBuffer();
 20131  013C50  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20132                           
 20133                           ;oled.c: 713: OLED_Frame = OLED_Charge_Time;
 20134  013C54  0E0C               	movlw	12
 20135  013C56  EF4B  F098         	goto	L4
 20136  013C5A                     l22125:
 20137                           
 20138                           ; BSR set to: 2
 20139                           ;oled.c: 720: OLED_update_flag = 0;
 20140  013C5A  0E00               	movlw	0
 20141  013C5C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20142                           
 20143                           ; BSR set to: 2
 20144                           ;oled.c: 722: strcpy(OLED_RAM_Buffer.line0, "Output Charge:");
 20145  013C5E  0E00               	movlw	low _OLED_RAM_Buffer
 20146  013C60  6F03               	movwf	strcpy@to& (0+255),b
 20147  013C62  0E03               	movlw	high _OLED_RAM_Buffer
 20148  013C64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20149  013C66  0EC9               	movlw	low STR_166
 20150  013C68  6F05               	movwf	strcpy@from& (0+255),b
 20151  013C6A  0EFB               	movlw	high STR_166
 20152  013C6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20153  013C6E  EC14  F0DD         	call	_strcpy	;wreg free
 20154                           
 20155                           ;oled.c: 723: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20156  013C72  0102               	movlb	2	; () banked
 20157  013C74  51D2               	movf	_QI_charge_time& (0+255),w,b
 20158  013C76  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20159  013C78  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20160  013C7A  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20161  013C7C  A4D8               	btfss	status,2,c
 20162  013C7E  D00B               	goto	l22133
 20163                           
 20164                           ; BSR set to: 2
 20165  013C80  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20166  013C82  6F03               	movwf	strcpy@to& (0+255),b
 20167  013C84  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20168  013C86  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20169  013C88  0E1A               	movlw	low STR_93
 20170  013C8A  6F05               	movwf	strcpy@from& (0+255),b
 20171  013C8C  0EFD               	movlw	high STR_93
 20172  013C8E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20173  013C90  EC14  F0DD         	call	_strcpy	;wreg free
 20174  013C94  D01D               	goto	l22135
 20175  013C96                     l22133:
 20176                           
 20177                           ; BSR set to: 2
 20178                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 20179  013C96  C2CA  F29F         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 20180  013C9A  C2CB  F2A0         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 20181  013C9E  C2CC  F2A1         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 20182  013CA2  C2CD  F2A2         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 20183  013CA6  ECCE  F0B1         	call	_floatToEngineeringFormat	;wreg free
 20184  013CAA  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6035
 20185  013CAE  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6035+1
 20186                           
 20187                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 20188  013CB2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20189  013CB4  0102               	movlb	2	; () banked
 20190  013CB6  6F8C               	movwf	sprintf@wh& (0+255),b
 20191  013CB8  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20192  013CBA  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20193  013CBC  0EBF               	movlw	low STR_168
 20194  013CBE  6F8E               	movwf	sprintf@f& (0+255),b
 20195  013CC0  0EFF               	movlw	high STR_168
 20196  013CC2  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20197  013CC4  C3F3  F290         	movff	_OLED_updateHandler$6035,?_sprintf+4
 20198  013CC8  C3F4  F291         	movff	_OLED_updateHandler$6035+1,?_sprintf+5
 20199  013CCC  EC38  F0DD         	call	_sprintf	;wreg free
 20200  013CD0                     l22135:
 20201                           
 20202                           ;oled.c: 725: strcpy(OLED_RAM_Buffer.line2, " ");
 20203  013CD0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20204  013CD2  0102               	movlb	2	; () banked
 20205  013CD4  6F03               	movwf	strcpy@to& (0+255),b
 20206  013CD6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20207  013CD8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20208  013CDA  0EA2               	movlw	low (STR_56+10)
 20209  013CDC  6F05               	movwf	strcpy@from& (0+255),b
 20210  013CDE  0EFD               	movlw	high (STR_56+10)
 20211  013CE0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20212  013CE2  EC14  F0DD         	call	_strcpy	;wreg free
 20213                           
 20214                           ;oled.c: 726: strcpy(OLED_RAM_Buffer.line3, " ");
 20215  013CE6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20216  013CE8  0102               	movlb	2	; () banked
 20217  013CEA  6F03               	movwf	strcpy@to& (0+255),b
 20218  013CEC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20219  013CEE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20220  013CF0  0EA2               	movlw	low (STR_56+10)
 20221  013CF2  6F05               	movwf	strcpy@from& (0+255),b
 20222  013CF4  0EFD               	movlw	high (STR_56+10)
 20223  013CF6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20224  013CF8  EC14  F0DD         	call	_strcpy	;wreg free
 20225                           
 20226                           ;oled.c: 728: OLED_UpdateFromRAMBuffer();
 20227  013CFC  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20228                           
 20229                           ;oled.c: 729: OLED_Frame = OLED_Load_Charge;
 20230  013D00  0E0D               	movlw	13
 20231  013D02  EF4B  F098         	goto	L4
 20232  013D06                     l22145:
 20233                           
 20234                           ; BSR set to: 2
 20235                           ;oled.c: 736: OLED_update_flag = 0;
 20236  013D06  0E00               	movlw	0
 20237  013D08  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20238                           
 20239                           ; BSR set to: 2
 20240                           ;oled.c: 738: strcpy(OLED_RAM_Buffer.line0, "Output Energy:");
 20241  013D0A  0E00               	movlw	low _OLED_RAM_Buffer
 20242  013D0C  6F03               	movwf	strcpy@to& (0+255),b
 20243  013D0E  0E03               	movlw	high _OLED_RAM_Buffer
 20244  013D10  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20245  013D12  0EE7               	movlw	low STR_171
 20246  013D14  6F05               	movwf	strcpy@from& (0+255),b
 20247  013D16  0EFB               	movlw	high STR_171
 20248  013D18  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20249  013D1A  EC14  F0DD         	call	_strcpy	;wreg free
 20250                           
 20251                           ;oled.c: 739: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20252  013D1E  0102               	movlb	2	; () banked
 20253  013D20  51D2               	movf	_QI_charge_time& (0+255),w,b
 20254  013D22  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20255  013D24  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20256  013D26  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20257  013D28  A4D8               	btfss	status,2,c
 20258  013D2A  D00B               	goto	l22153
 20259                           
 20260                           ; BSR set to: 2
 20261  013D2C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20262  013D2E  6F03               	movwf	strcpy@to& (0+255),b
 20263  013D30  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20264  013D32  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20265  013D34  0E1A               	movlw	low STR_93
 20266  013D36  6F05               	movwf	strcpy@from& (0+255),b
 20267  013D38  0EFD               	movlw	high STR_93
 20268  013D3A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20269  013D3C  EC14  F0DD         	call	_strcpy	;wreg free
 20270  013D40  D01D               	goto	l22155
 20271  013D42                     l22153:
 20272                           
 20273                           ; BSR set to: 2
 20274                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20275  013D42  C2CE  F29F         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 20276  013D46  C2CF  F2A0         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 20277  013D4A  C2D0  F2A1         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 20278  013D4E  C2D1  F2A2         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 20279  013D52  ECCE  F0B1         	call	_floatToEngineeringFormat	;wreg free
 20280  013D56  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6035
 20281  013D5A  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6035+1
 20282                           
 20283                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20284  013D5E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20285  013D60  0102               	movlb	2	; () banked
 20286  013D62  6F8C               	movwf	sprintf@wh& (0+255),b
 20287  013D64  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20288  013D66  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20289  013D68  0EC3               	movlw	low STR_173
 20290  013D6A  6F8E               	movwf	sprintf@f& (0+255),b
 20291  013D6C  0EFF               	movlw	high STR_173
 20292  013D6E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20293  013D70  C3F3  F290         	movff	_OLED_updateHandler$6035,?_sprintf+4
 20294  013D74  C3F4  F291         	movff	_OLED_updateHandler$6035+1,?_sprintf+5
 20295  013D78  EC38  F0DD         	call	_sprintf	;wreg free
 20296  013D7C                     l22155:
 20297                           
 20298                           ;oled.c: 741: strcpy(OLED_RAM_Buffer.line2, " ");
 20299  013D7C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20300  013D7E  0102               	movlb	2	; () banked
 20301  013D80  6F03               	movwf	strcpy@to& (0+255),b
 20302  013D82  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20303  013D84  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20304  013D86  0EA2               	movlw	low (STR_56+10)
 20305  013D88  6F05               	movwf	strcpy@from& (0+255),b
 20306  013D8A  0EFD               	movlw	high (STR_56+10)
 20307  013D8C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20308  013D8E  EC14  F0DD         	call	_strcpy	;wreg free
 20309                           
 20310                           ;oled.c: 742: strcpy(OLED_RAM_Buffer.line3, " ");
 20311  013D92  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20312  013D94  0102               	movlb	2	; () banked
 20313  013D96  6F03               	movwf	strcpy@to& (0+255),b
 20314  013D98  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20315  013D9A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20316  013D9C  0EA2               	movlw	low (STR_56+10)
 20317  013D9E  6F05               	movwf	strcpy@from& (0+255),b
 20318  013DA0  0EFD               	movlw	high (STR_56+10)
 20319  013DA2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20320  013DA4  EC14  F0DD         	call	_strcpy	;wreg free
 20321                           
 20322                           ;oled.c: 744: OLED_UpdateFromRAMBuffer();
 20323  013DA8  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20324                           
 20325                           ;oled.c: 745: OLED_Frame = OLED_Load_Energy;
 20326  013DAC  0E0E               	movlw	14
 20327  013DAE  EF4B  F098         	goto	L4
 20328  013DB2                     l22165:
 20329                           
 20330                           ; BSR set to: 2
 20331                           ;oled.c: 752: OLED_update_flag = 0;
 20332  013DB2  0E00               	movlw	0
 20333  013DB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20334                           
 20335                           ; BSR set to: 2
 20336                           ;oled.c: 754: strcpy(OLED_RAM_Buffer.line0, "Cause of Reset:");
 20337  013DB6  0E00               	movlw	low _OLED_RAM_Buffer
 20338  013DB8  6F03               	movwf	strcpy@to& (0+255),b
 20339  013DBA  0E03               	movlw	high _OLED_RAM_Buffer
 20340  013DBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20341  013DBE  0E6A               	movlw	low STR_64
 20342  013DC0  6F05               	movwf	strcpy@from& (0+255),b
 20343  013DC2  0EFB               	movlw	high STR_64
 20344  013DC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20345  013DC6  EC14  F0DD         	call	_strcpy	;wreg free
 20346                           
 20347                           ;oled.c: 755: strcpy(OLED_RAM_Buffer.line1, " ");
 20348  013DCA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20349  013DCC  0102               	movlb	2	; () banked
 20350  013DCE  6F03               	movwf	strcpy@to& (0+255),b
 20351  013DD0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20352  013DD2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20353  013DD4  0EA2               	movlw	low (STR_56+10)
 20354  013DD6  6F05               	movwf	strcpy@from& (0+255),b
 20355  013DD8  0EFD               	movlw	high (STR_56+10)
 20356  013DDA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20357  013DDC  EC14  F0DD         	call	_strcpy	;wreg free
 20358                           
 20359                           ;oled.c: 756: strcpy(OLED_RAM_Buffer.line2, getCauseOfResetStringSmall(reset_cause));
 20360  013DE0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20361  013DE2  0102               	movlb	2	; () banked
 20362  013DE4  6F03               	movwf	strcpy@to& (0+255),b
 20363  013DE6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20364  013DE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20365  013DEA  51FF               	movf	_reset_cause& (0+255),w,b
 20366  013DEC  EC96  F0E0         	call	_getCauseOfResetStringSmall
 20367  013DF0  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 20368  013DF4  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 20369  013DF8  EC14  F0DD         	call	_strcpy	;wreg free
 20370                           
 20371                           ;oled.c: 757: strcpy(OLED_RAM_Buffer.line3, " ");
 20372  013DFC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20373  013DFE  0102               	movlb	2	; () banked
 20374  013E00  6F03               	movwf	strcpy@to& (0+255),b
 20375  013E02  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20376  013E04  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20377  013E06  0EA2               	movlw	low (STR_56+10)
 20378  013E08  6F05               	movwf	strcpy@from& (0+255),b
 20379  013E0A  0EFD               	movlw	high (STR_56+10)
 20380  013E0C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20381  013E0E  EC14  F0DD         	call	_strcpy	;wreg free
 20382                           
 20383                           ;oled.c: 759: OLED_UpdateFromRAMBuffer();
 20384  013E12  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20385                           
 20386                           ;oled.c: 760: OLED_Frame = OLED_Cause_Of_Reset;
 20387  013E16  0E16               	movlw	22
 20388  013E18                     L5:
 20389  013E18  0102               	movlb	2	; () banked
 20390  013E1A  6FD7               	movwf	_OLED_Frame& (0+255),b
 20391                           
 20392                           ; BSR set to: 2
 20393                           ;oled.c: 761: OLED_update_time = 255;
 20394  013E1C  0100               	movlb	0	; () banked
 20395  013E1E  69FB               	setf	_OLED_update_time& (0+255),b
 20396                           
 20397                           ;oled.c: 763: break;
 20398  013E20  0012               	return	
 20399  013E22                     l22181:
 20400                           
 20401                           ; BSR set to: 2
 20402                           ;oled.c: 767: OLED_update_flag = 0;
 20403  013E22  0E00               	movlw	0
 20404  013E24  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20405                           
 20406                           ; BSR set to: 2
 20407                           ;oled.c: 771: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 20408  013E26  0E00               	movlw	low _OLED_RAM_Buffer
 20409  013E28  6F03               	movwf	strcpy@to& (0+255),b
 20410  013E2A  0E03               	movlw	high _OLED_RAM_Buffer
 20411  013E2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20412  013E2E  0EDE               	movlw	low STR_65
 20413  013E30  6F05               	movwf	strcpy@from& (0+255),b
 20414  013E32  0EFD               	movlw	high STR_65
 20415  013E34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20416  013E36  EC14  F0DD         	call	_strcpy	;wreg free
 20417                           
 20418                           ;oled.c: 772: char dev_id_str[17];;oled.c: 773: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 20419  013E3A  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20420  013E3C  0102               	movlb	2	; () banked
 20421  013E3E  6F8C               	movwf	sprintf@wh& (0+255),b
 20422  013E40  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20423  013E42  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20424  013E44  0E9F               	movlw	low STR_66
 20425  013E46  6F8E               	movwf	sprintf@f& (0+255),b
 20426  013E48  0EFF               	movlw	high STR_66
 20427  013E4A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20428  013E4C  EC58  F0E2         	call	_getDeviceID	;wreg free
 20429  013E50  C20B  F290         	movff	?_getDeviceID,?_sprintf+4
 20430  013E54  C20C  F291         	movff	?_getDeviceID+1,?_sprintf+5
 20431  013E58  EC38  F0DD         	call	_sprintf	;wreg free
 20432                           
 20433                           ;oled.c: 774: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 20434  013E5C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20435  013E5E  0102               	movlb	2	; () banked
 20436  013E60  6F03               	movwf	strcpy@to& (0+255),b
 20437  013E62  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20438  013E64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20439  013E66  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20440  013E68  6F05               	movwf	strcpy@from& (0+255),b
 20441  013E6A  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20442  013E6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20443  013E6E  EC14  F0DD         	call	_strcpy	;wreg free
 20444                           
 20445                           ;oled.c: 777: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 20446  013E72  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20447  013E74  0102               	movlb	2	; () banked
 20448  013E76  6F03               	movwf	strcpy@to& (0+255),b
 20449  013E78  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20450  013E7A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20451  013E7C  0ED9               	movlw	low STR_67
 20452  013E7E  6F05               	movwf	strcpy@from& (0+255),b
 20453  013E80  0EFC               	movlw	high STR_67
 20454  013E82  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20455  013E84  EC14  F0DD         	call	_strcpy	;wreg free
 20456                           
 20457                           ;oled.c: 778: char rev_id_str[17];;oled.c: 779: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 20458  013E88  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20459  013E8A  0102               	movlb	2	; () banked
 20460  013E8C  6F8C               	movwf	sprintf@wh& (0+255),b
 20461  013E8E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20462  013E90  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20463  013E92  0E71               	movlw	low STR_68
 20464  013E94  6F8E               	movwf	sprintf@f& (0+255),b
 20465  013E96  0EFF               	movlw	high STR_68
 20466  013E98  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20467  013E9A  EC6E  F0DF         	call	_getMajorRevisionID	;wreg free
 20468  013E9E  0102               	movlb	2	; () banked
 20469  013EA0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 20470  013EA2  0E41               	movlw	65
 20471  013EA4  25A9               	addwf	??_OLED_updateHandler& (0+255),w,b
 20472  013EA6  6F90               	movwf	(?_sprintf+4)& (0+255),b
 20473  013EA8  6B91               	clrf	(?_sprintf+5)& (0+255),b
 20474  013EAA  0E00               	movlw	0
 20475  013EAC  2391               	addwfc	(?_sprintf+5)& (0+255),f,b
 20476  013EAE  ECAC  F0E1         	call	_getMinorRevisionID	;wreg free
 20477  013EB2  0102               	movlb	2	; () banked
 20478  013EB4  6FAA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 20479  013EB6  51AA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 20480  013EB8  6F92               	movwf	(?_sprintf+6)& (0+255),b
 20481  013EBA  6B93               	clrf	(?_sprintf+7)& (0+255),b
 20482  013EBC  EC38  F0DD         	call	_sprintf	;wreg free
 20483                           
 20484                           ;oled.c: 780: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 20485  013EC0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20486  013EC2  0102               	movlb	2	; () banked
 20487  013EC4  6F03               	movwf	strcpy@to& (0+255),b
 20488  013EC6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20489  013EC8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20490  013ECA  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20491  013ECC  6F05               	movwf	strcpy@from& (0+255),b
 20492  013ECE  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20493  013ED0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20494  013ED2  EC14  F0DD         	call	_strcpy	;wreg free
 20495                           
 20496                           ;oled.c: 782: OLED_UpdateFromRAMBuffer();
 20497  013ED6  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20498                           
 20499                           ;oled.c: 783: OLED_Frame = OLED_Dev_Rev_ID;
 20500  013EDA  0E17               	movlw	23
 20501  013EDC  D79D               	goto	L5
 20502  013EDE                     l22201:
 20503                           
 20504                           ; BSR set to: 2
 20505                           ;oled.c: 790: OLED_update_flag = 0;
 20506  013EDE  0E00               	movlw	0
 20507  013EE0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20508                           
 20509                           ; BSR set to: 2
 20510                           ;oled.c: 792: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 20511  013EE2  0E00               	movlw	low _OLED_RAM_Buffer
 20512  013EE4  6F03               	movwf	strcpy@to& (0+255),b
 20513  013EE6  0E03               	movlw	high _OLED_RAM_Buffer
 20514  013EE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20515  013EEA  0E5A               	movlw	low STR_69
 20516  013EEC  6F05               	movwf	strcpy@from& (0+255),b
 20517  013EEE  0EFB               	movlw	high STR_69
 20518  013EF0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20519  013EF2  EC14  F0DD         	call	_strcpy	;wreg free
 20520                           
 20521                           ;oled.c: 793: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 20522  013EF6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20523  013EF8  0102               	movlb	2	; () banked
 20524  013EFA  6F03               	movwf	strcpy@to& (0+255),b
 20525  013EFC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20526  013EFE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20527  013F00  0E6C               	movlw	low STR_70
 20528  013F02  6F05               	movwf	strcpy@from& (0+255),b
 20529  013F04  0EFE               	movlw	high STR_70
 20530  013F06  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20531  013F08  EC14  F0DD         	call	_strcpy	;wreg free
 20532                           
 20533                           ;oled.c: 794: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 20534  013F0C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20535  013F0E  0102               	movlb	2	; () banked
 20536  013F10  6F03               	movwf	strcpy@to& (0+255),b
 20537  013F12  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20538  013F14  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20539  013F16  0E8A               	movlw	low STR_71
 20540  013F18  6F05               	movwf	strcpy@from& (0+255),b
 20541  013F1A  0EFB               	movlw	high STR_71
 20542  013F1C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20543  013F1E  EC14  F0DD         	call	_strcpy	;wreg free
 20544                           
 20545                           ;oled.c: 795: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 20546  013F22  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20547  013F24  0102               	movlb	2	; () banked
 20548  013F26  6F03               	movwf	strcpy@to& (0+255),b
 20549  013F28  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20550  013F2A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20551  013F2C  0EF6               	movlw	low STR_72
 20552  013F2E  6F05               	movwf	strcpy@from& (0+255),b
 20553  013F30  0EFB               	movlw	high STR_72
 20554  013F32  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20555  013F34  EC14  F0DD         	call	_strcpy	;wreg free
 20556                           
 20557                           ;oled.c: 797: OLED_UpdateFromRAMBuffer();
 20558  013F38  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20559                           
 20560                           ;oled.c: 798: OLED_Frame = OLED_COM_PORT_SET;
 20561  013F3C  0E18               	movlw	24
 20562  013F3E  D76C               	goto	L5
 20563  013F40                     l22217:
 20564                           
 20565                           ; BSR set to: 2
 20566                           ;oled.c: 805: OLED_update_flag = 0;
 20567  013F40  0E00               	movlw	0
 20568  013F42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20569                           
 20570                           ; BSR set to: 2
 20571                           ;oled.c: 807: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 20572  013F44  0E00               	movlw	low _OLED_RAM_Buffer
 20573  013F46  6F03               	movwf	strcpy@to& (0+255),b
 20574  013F48  0E03               	movlw	high _OLED_RAM_Buffer
 20575  013F4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20576  013F4C  0E3F               	movlw	low STR_62
 20577  013F4E  6F05               	movwf	strcpy@from& (0+255),b
 20578  013F50  0EFC               	movlw	high STR_62
 20579  013F52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20580  013F54  EC14  F0DD         	call	_strcpy	;wreg free
 20581                           
 20582                           ;oled.c: 808: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 20583  013F58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20584  013F5A  0102               	movlb	2	; () banked
 20585  013F5C  6F03               	movwf	strcpy@to& (0+255),b
 20586  013F5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20587  013F60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20588  013F62  0E7A               	movlw	low STR_63
 20589  013F64  6F05               	movwf	strcpy@from& (0+255),b
 20590  013F66  0EFB               	movlw	high STR_63
 20591  013F68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20592  013F6A  EC14  F0DD         	call	_strcpy	;wreg free
 20593                           
 20594                           ;oled.c: 809: strcpy(OLED_RAM_Buffer.line2, "Drew Maatman");
 20595  013F6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20596  013F70  0102               	movlb	2	; () banked
 20597  013F72  6F03               	movwf	strcpy@to& (0+255),b
 20598  013F74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20599  013F76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20600  013F78  0E27               	movlw	low STR_189
 20601  013F7A  6F05               	movwf	strcpy@from& (0+255),b
 20602  013F7C  0EFD               	movlw	high STR_189
 20603  013F7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20604  013F80  EC14  F0DD         	call	_strcpy	;wreg free
 20605                           
 20606                           ;oled.c: 810: strcpy(OLED_RAM_Buffer.line3, "Spring 2019");
 20607  013F84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20608  013F86  0102               	movlb	2	; () banked
 20609  013F88  6F03               	movwf	strcpy@to& (0+255),b
 20610  013F8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20611  013F8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20612  013F8E  0E68               	movlw	low STR_190
 20613  013F90  6F05               	movwf	strcpy@from& (0+255),b
 20614  013F92  0EFD               	movlw	high STR_190
 20615  013F94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20616  013F96  EC14  F0DD         	call	_strcpy	;wreg free
 20617                           
 20618                           ;oled.c: 812: OLED_UpdateFromRAMBuffer();
 20619  013F9A  EC9A  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20620                           
 20621                           ;oled.c: 813: OLED_Frame = OLED_TITLE_FRAME;
 20622  013F9E  0E19               	movlw	25
 20623  013FA0  D73B               	goto	L5
 20624  013FA2                     l22233:
 20625                           
 20626                           ; BSR set to: 2
 20627                           ;oled.c: 820: OLED_update_flag = 0;
 20628  013FA2  0E00               	movlw	0
 20629  013FA4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20630                           
 20631                           ;oled.c: 822: break;
 20632  013FA6  0012               	return	
 20633  013FA8                     l22235:
 20634                           
 20635                           ; BSR set to: 2
 20636                           ;oled.c: 826: OLED_update_flag = 0;
 20637  013FA8  0E00               	movlw	0
 20638  013FAA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20639                           
 20640                           ;oled.c: 828: error_handler.I2C_OLED_error_flag = 1;
 20641  013FAC  0E01               	movlw	1
 20642  013FAE  0100               	movlb	0	; () banked
 20643  013FB0  6FBC               	movwf	(_error_handler+3)& (0+255),b
 20644                           
 20645                           ;oled.c: 829: break;
 20646  013FB2  0012               	return	
 20647  013FB4                     l22239:
 20648  013FB4  0102               	movlb	2	; () banked
 20649  013FB6  51D7               	movf	_OLED_Frame& (0+255),w,b
 20650                           
 20651                           ; Switch size 1, requested type "simple"
 20652                           ; Number of cases is 27, Range of values is 0 to 26
 20653                           ; switch strategies available:
 20654                           ; Name         Instructions Cycles
 20655                           ; simple_byte           82    42 (average)
 20656                           ;	Chosen strategy is simple_byte
 20657  013FB8  0A00               	xorlw	0	; case 0
 20658  013FBA  B4D8               	btfsc	status,2,c
 20659  013FBC  EF20  F097         	goto	l21749
 20660  013FC0  0A01               	xorlw	1	; case 1
 20661  013FC2  B4D8               	btfsc	status,2,c
 20662  013FC4  EF59  F097         	goto	l21765
 20663  013FC8  0A03               	xorlw	3	; case 2
 20664  013FCA  B4D8               	btfsc	status,2,c
 20665  013FCC  EFB7  F097         	goto	l21785
 20666  013FD0  0A01               	xorlw	1	; case 3
 20667  013FD2  B4D8               	btfsc	status,2,c
 20668  013FD4  EFE8  F097         	goto	l21801
 20669  013FD8  0A07               	xorlw	7	; case 4
 20670  013FDA  B4D8               	btfsc	status,2,c
 20671  013FDC  EF19  F098         	goto	l21817
 20672  013FE0  0A01               	xorlw	1	; case 5
 20673  013FE2  B4D8               	btfsc	status,2,c
 20674  013FE4  EF51  F098         	goto	l21833
 20675  013FE8  0A03               	xorlw	3	; case 6
 20676  013FEA  B4D8               	btfsc	status,2,c
 20677  013FEC  EF8A  F098         	goto	l21849
 20678  013FF0  0A01               	xorlw	1	; case 7
 20679  013FF2  B4D8               	btfsc	status,2,c
 20680  013FF4  EFC3  F098         	goto	l21865
 20681  013FF8  0A0F               	xorlw	15	; case 8
 20682  013FFA  B4D8               	btfsc	status,2,c
 20683  013FFC  EFFC  F098         	goto	l21881
 20684  014000  0A01               	xorlw	1	; case 9
 20685  014002  B4D8               	btfsc	status,2,c
 20686  014004  EF46  F099         	goto	l21901
 20687  014008  0A03               	xorlw	3	; case 10
 20688  01400A  B4D8               	btfsc	status,2,c
 20689  01400C  EF7F  F099         	goto	l21917
 20690  014010  0A01               	xorlw	1	; case 11
 20691  014012  B4D8               	btfsc	status,2,c
 20692  014014  EFC9  F099         	goto	l21937
 20693  014018  0A07               	xorlw	7	; case 12
 20694  01401A  B4D8               	btfsc	status,2,c
 20695  01401C  D518               	goto	l22095
 20696  01401E  0A01               	xorlw	1	; case 13
 20697  014020  B4D8               	btfsc	status,2,c
 20698  014022  D61B               	goto	l22125
 20699  014024  0A03               	xorlw	3	; case 14
 20700  014026  B4D8               	btfsc	status,2,c
 20701  014028  D66E               	goto	l22145
 20702  01402A  0A01               	xorlw	1	; case 15
 20703  01402C  B4D8               	btfsc	status,2,c
 20704  01402E  EF13  F09A         	goto	l21957
 20705  014032  0A1F               	xorlw	31	; case 16
 20706  014034  B4D8               	btfsc	status,2,c
 20707  014036  EF4C  F09A         	goto	l21973
 20708  01403A  0A01               	xorlw	1	; case 17
 20709  01403C  B4D8               	btfsc	status,2,c
 20710  01403E  EF85  F09A         	goto	l21989
 20711  014042  0A03               	xorlw	3	; case 18
 20712  014044  B4D8               	btfsc	status,2,c
 20713  014046  EFBE  F09A         	goto	l22005
 20714  01404A  0A01               	xorlw	1	; case 19
 20715  01404C  B4D8               	btfsc	status,2,c
 20716  01404E  EFF7  F09A         	goto	l22021
 20717  014052  0A07               	xorlw	7	; case 20
 20718  014054  B4D8               	btfsc	status,2,c
 20719  014056  EF3C  F09B         	goto	l22039
 20720  01405A  0A01               	xorlw	1	; case 21
 20721  01405C  B4D8               	btfsc	status,2,c
 20722  01405E  EF93  F09B         	goto	l22061
 20723  014062  0A03               	xorlw	3	; case 22
 20724  014064  B4D8               	btfsc	status,2,c
 20725  014066  D6A5               	goto	l22165
 20726  014068  0A01               	xorlw	1	; case 23
 20727  01406A  B4D8               	btfsc	status,2,c
 20728  01406C  D6DA               	goto	l22181
 20729  01406E  0A0F               	xorlw	15	; case 24
 20730  014070  B4D8               	btfsc	status,2,c
 20731  014072  D735               	goto	l22201
 20732  014074  0A01               	xorlw	1	; case 25
 20733  014076  B4D8               	btfsc	status,2,c
 20734  014078  D763               	goto	l22217
 20735  01407A  0A03               	xorlw	3	; case 26
 20736  01407C  B4D8               	btfsc	status,2,c
 20737  01407E  D791               	goto	l22233
 20738  014080  D793               	goto	l22235
 20739  014082                     __end_of_OLED_updateHandler:
 20740                           	opt callstack 0
 20741                           
 20742 ;; *************** function _strcpy *****************
 20743 ;; Defined at:
 20744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
 20745 ;; Parameters:    Size  Location     Type
 20746 ;;  to              2    3[BANK2 ] PTR unsigned char 
 20747 ;;		 -> OLED_RAM_Buffer(68), 
 20748 ;;  from            2    5[BANK2 ] PTR const unsigned char 
 20749 ;;		 -> STR_190(12), STR_189(13), STR_188(16), STR_187(14), 
 20750 ;;		 -> STR_186(15), STR_185(16), STR_184(10), STR_183(16), 
 20751 ;;		 -> STR_181(13), STR_179(11), STR_178(2), STR_177(2), 
 20752 ;;		 -> STR_176(16), STR_175(2), STR_174(2), STR_172(13), 
 20753 ;;		 -> STR_171(15), STR_170(2), STR_169(2), STR_167(13), 
 20754 ;;		 -> STR_166(15), STR_165(2), STR_164(2), STR_162(2), 
 20755 ;;		 -> STR_161(2), STR_160(13), STR_159(2), STR_153(13), 
 20756 ;;		 -> STR_152(2), STR_151(2), STR_149(2), STR_137(14), 
 20757 ;;		 -> STR_136(2), STR_135(2), STR_133(11), STR_132(13), 
 20758 ;;		 -> STR_131(2), STR_130(2), STR_129(9), STR_128(11), 
 20759 ;;		 -> STR_127(14), STR_126(2), STR_125(2), STR_123(12), 
 20760 ;;		 -> STR_122(2), STR_121(2), STR_119(14), STR_118(2), 
 20761 ;;		 -> STR_117(2), STR_115(10), STR_114(2), STR_113(2), 
 20762 ;;		 -> STR_111(9), STR_110(2), STR_109(2), STR_107(13), 
 20763 ;;		 -> STR_106(12), STR_105(2), STR_104(2), STR_102(13), 
 20764 ;;		 -> STR_101(14), STR_100(2), STR_99(2), STR_97(13), 
 20765 ;;		 -> STR_96(2), STR_95(2), STR_93(13), STR_92(12), 
 20766 ;;		 -> STR_91(2), STR_90(2), STR_88(14), STR_87(2), 
 20767 ;;		 -> STR_86(2), STR_84(13), STR_83(2), STR_82(2), 
 20768 ;;		 -> STR_80(14), STR_79(2), STR_78(2), STR_77(15), 
 20769 ;;		 -> STR_76(16), STR_75(14), STR_74(11), STR_73(14), 
 20770 ;;		 -> STR_72(15), STR_71(16), STR_70(10), STR_69(16), 
 20771 ;;		 -> OLED_updateHandler@rev_id_str(17), STR_67(13), OLED_updateHandler@dev_id_str(17), STR_65(11), 
 20772 ;;		 -> STR_64(16), STR_63(16), STR_62(14), STR_42(10), 
 20773 ;;		 -> STR_41(11), STR_40(11), STR_39(15), STR_38(11), 
 20774 ;;		 -> STR_37(10), STR_36(11), STR_35(10), STR_34(10), 
 20775 ;;		 -> STR_33(10), STR_22(10), STR_21(6), STR_20(14), 
 20776 ;;		 -> STR_19(9), STR_18(5), 
 20777 ;; Auto vars:     Size  Location     Type
 20778 ;;  cp              2    7[BANK2 ] PTR unsigned char 
 20779 ;;		 -> OLED_RAM_Buffer(68), 
 20780 ;; Return value:  Size  Location     Type
 20781 ;;                  2    3[BANK2 ] PTR unsigned char 
 20782 ;; Registers used:
 20783 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20784 ;; Tracked objects:
 20785 ;;		On entry : 0/0
 20786 ;;		On exit  : 0/0
 20787 ;;		Unchanged: 0/0
 20788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20789 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20790 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20792 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20793 ;;Total ram usage:        6 bytes
 20794 ;; Hardware stack levels used:    1
 20795 ;; Hardware stack levels required when called:   11
 20796 ;; This function calls:
 20797 ;;		Nothing
 20798 ;; This function is called by:
 20799 ;;		_OLED_updateHandler
 20800 ;; This function uses a non-reentrant model
 20801 ;;
 20802                           
 20803                           	psect	text64
 20804  01BA28                     __ptext64:
 20805                           	opt callstack 0
 20806  01BA28                     _strcpy:
 20807                           	opt callstack 18
 20808                           
 20809                           ;incstack = 0
 20810  01BA28  C203  F207         	movff	strcpy@to,strcpy@cp
 20811  01BA2C  C204  F208         	movff	strcpy@to+1,strcpy@cp+1
 20812  01BA30  D005               	goto	l21337
 20813  01BA32                     l21335:
 20814  01BA32  0102               	movlb	2	; () banked
 20815  01BA34  4B07               	infsnz	strcpy@cp& (0+255),f,b
 20816  01BA36  2B08               	incf	(strcpy@cp+1)& (0+255),f,b
 20817  01BA38  4B05               	infsnz	strcpy@from& (0+255),f,b
 20818  01BA3A  2B06               	incf	(strcpy@from+1)& (0+255),f,b
 20819  01BA3C                     l21337:
 20820  01BA3C  C205  FFF6         	movff	strcpy@from,tblptrl
 20821  01BA40  C206  FFF7         	movff	strcpy@from+1,tblptrh
 20822  01BA44  0E00               	movlw	low (__mediumconst shr (0+16))
 20823  01BA46  6EF8               	movwf	tblptru,c
 20824  01BA48  C207  FFD9         	movff	strcpy@cp,fsr2l
 20825  01BA4C  C208  FFDA         	movff	strcpy@cp+1,fsr2h
 20826  01BA50  0E0E               	movlw	(high __ramtop+-1)
 20827  01BA52  64F7               	cpfsgt	tblptrh,c
 20828  01BA54  D003               	bra	u27317
 20829  01BA56  0008               	tblrd		*
 20830  01BA58  50F5               	movf	tablat,w,c
 20831  01BA5A  D005               	bra	u27310
 20832  01BA5C                     u27317:
 20833  01BA5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20834  01BA60  CFF7 FFEA          	movff	tblptrh,fsr0h
 20835  01BA64  50EF               	movf	indf0,w,c
 20836  01BA66                     u27310:
 20837  01BA66  6EDF               	movwf	indf2,c
 20838  01BA68  50DF               	movf	indf2,w,c
 20839  01BA6A  B4D8               	btfsc	status,2,c
 20840  01BA6C  0012               	return	
 20841  01BA6E  D7E1               	goto	l21335
 20842  01BA70                     __end_of_strcpy:
 20843                           	opt callstack 0
 20844                           
 20845 ;; *************** function _getYearsFromOnTime *****************
 20846 ;; Defined at:
 20847 ;;		line 180 in file "heartbeat_timer.c"
 20848 ;; Parameters:    Size  Location     Type
 20849 ;;  input_second    4   13[BANK2 ] unsigned long 
 20850 ;; Auto vars:     Size  Location     Type
 20851 ;;  years           1   17[BANK2 ] unsigned char 
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1    wreg      unsigned char 
 20854 ;; Registers used:
 20855 ;;		wreg, status,2, status,0, cstack
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/0
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20861 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20862 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20864 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20865 ;;Total ram usage:        5 bytes
 20866 ;; Hardware stack levels used:    1
 20867 ;; Hardware stack levels required when called:   12
 20868 ;; This function calls:
 20869 ;;		___lldiv
 20870 ;; This function is called by:
 20871 ;;		_OLED_updateHandler
 20872 ;; This function uses a non-reentrant model
 20873 ;;
 20874                           
 20875                           	psect	text65
 20876  01C0FC                     __ptext65:
 20877                           	opt callstack 0
 20878  01C0FC                     _getYearsFromOnTime:
 20879                           	opt callstack 17
 20880                           
 20881                           ;heartbeat_timer.c: 182: uint8_t years;;heartbeat_timer.c: 183: return years = input_sec
      +                          onds / (60 * 60 * 24 * 365);
 20882                           
 20883                           ;incstack = 0
 20884  01C0FC  C20D  F200         	movff	getYearsFromOnTime@input_seconds,___lldiv@dividend
 20885  01C100  C20E  F201         	movff	getYearsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20886  01C104  C20F  F202         	movff	getYearsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20887  01C108  C210  F203         	movff	getYearsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20888  01C10C  0E80               	movlw	128
 20889  01C10E  0102               	movlb	2	; () banked
 20890  01C110  6F04               	movwf	___lldiv@divisor& (0+255),b
 20891  01C112  0E33               	movlw	51
 20892  01C114  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20893  01C116  0E00               	movlw	0
 20894  01C118  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20895  01C11A  0E00               	movlw	0
 20896  01C11C  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20897  01C11E  EC2B  F0D8         	call	___lldiv	;wreg free
 20898  01C122  0102               	movlb	2	; () banked
 20899  01C124  5100               	movf	?___lldiv& (0+255),w,b
 20900  01C126  6F11               	movwf	getYearsFromOnTime@years& (0+255),b
 20901  01C128  5111               	movf	getYearsFromOnTime@years& (0+255),w,b
 20902                           
 20903                           ; BSR set to: 2
 20904  01C12A  0012               	return		;funcret
 20905  01C12C                     __end_of_getYearsFromOnTime:
 20906                           	opt callstack 0
 20907                           
 20908 ;; *************** function _getSecondsFromOnTime *****************
 20909 ;; Defined at:
 20910 ;;		line 224 in file "heartbeat_timer.c"
 20911 ;; Parameters:    Size  Location     Type
 20912 ;;  input_second    4   13[BANK2 ] unsigned long 
 20913 ;; Auto vars:     Size  Location     Type
 20914 ;;  minutes         1   25[BANK2 ] unsigned char 
 20915 ;;  hours           1   24[BANK2 ] unsigned char 
 20916 ;;  days            1   23[BANK2 ] unsigned char 
 20917 ;;  years           1   22[BANK2 ] unsigned char 
 20918 ;;  seconds         1   21[BANK2 ] unsigned char 
 20919 ;; Return value:  Size  Location     Type
 20920 ;;                  1    wreg      unsigned char 
 20921 ;; Registers used:
 20922 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20923 ;; Tracked objects:
 20924 ;;		On entry : 0/0
 20925 ;;		On exit  : 0/0
 20926 ;;		Unchanged: 0/0
 20927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20928 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20930 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20931 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;Total ram usage:       13 bytes
 20933 ;; Hardware stack levels used:    1
 20934 ;; Hardware stack levels required when called:   12
 20935 ;; This function calls:
 20936 ;;		___lldiv
 20937 ;;		___wmul
 20938 ;; This function is called by:
 20939 ;;		_OLED_updateHandler
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text66
 20944  019544                     __ptext66:
 20945                           	opt callstack 0
 20946  019544                     _getSecondsFromOnTime:
 20947                           	opt callstack 17
 20948                           
 20949                           ;heartbeat_timer.c: 226: uint8_t years, days, hours, minutes, seconds;;heartbeat_timer.c
      +                          : 227: years = input_seconds / (60 * 60 * 24 * 365);
 20950                           
 20951                           ; BSR set to: 2
 20952                           ;incstack = 0
 20953  019544  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20954  019548  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20955  01954C  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20956  019550  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20957  019554  0E80               	movlw	128
 20958  019556  0102               	movlb	2	; () banked
 20959  019558  6F04               	movwf	___lldiv@divisor& (0+255),b
 20960  01955A  0E33               	movlw	51
 20961  01955C  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20962  01955E  0E00               	movlw	0
 20963  019560  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20964  019562  0E00               	movlw	0
 20965  019564  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20966  019566  EC2B  F0D8         	call	___lldiv	;wreg free
 20967  01956A  0102               	movlb	2	; () banked
 20968  01956C  5100               	movf	?___lldiv& (0+255),w,b
 20969  01956E  6F16               	movwf	getSecondsFromOnTime@years& (0+255),b
 20970                           
 20971                           ; BSR set to: 2
 20972                           ;heartbeat_timer.c: 228: input_seconds -= years * (60 * 60 * 24 * 365);
 20973  019570  C216  F200         	movff	getSecondsFromOnTime@years,___wmul@multiplier
 20974  019574  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20975  019576  0E33               	movlw	51
 20976  019578  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20977  01957A  0E80               	movlw	128
 20978  01957C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20979  01957E  EC5C  F0E1         	call	___wmul	;wreg free
 20980  019582  0102               	movlb	2	; () banked
 20981  019584  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20982  019588  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20983  01958C  0E00               	movlw	0
 20984  01958E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20985  019590  0EFF               	movlw	255
 20986  019592  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20987  019594  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20988  019596  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20989  019598  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20990  01959A  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20991  01959C  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20992  01959E  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20993  0195A0  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20994  0195A2  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20995  0195A4  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20996                           
 20997                           ; BSR set to: 2
 20998                           ;heartbeat_timer.c: 229: days = input_seconds / (60 * 60 * 24);
 20999  0195A6  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 21000  0195AA  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 21001  0195AE  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 21002  0195B2  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 21003  0195B6  0E80               	movlw	128
 21004  0195B8  6F04               	movwf	___lldiv@divisor& (0+255),b
 21005  0195BA  0E51               	movlw	81
 21006  0195BC  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21007  0195BE  0E00               	movlw	0
 21008  0195C0  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21009  0195C2  0E00               	movlw	0
 21010  0195C4  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21011  0195C6  EC2B  F0D8         	call	___lldiv	;wreg free
 21012  0195CA  0102               	movlb	2	; () banked
 21013  0195CC  5100               	movf	?___lldiv& (0+255),w,b
 21014  0195CE  6F17               	movwf	getSecondsFromOnTime@days& (0+255),b
 21015                           
 21016                           ;heartbeat_timer.c: 230: input_seconds -= days * (60 * 60 * 24);
 21017  0195D0  C217  F200         	movff	getSecondsFromOnTime@days,___wmul@multiplier
 21018  0195D4  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21019  0195D6  0E51               	movlw	81
 21020  0195D8  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21021  0195DA  0E80               	movlw	128
 21022  0195DC  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21023  0195DE  EC5C  F0E1         	call	___wmul	;wreg free
 21024  0195E2  0102               	movlb	2	; () banked
 21025  0195E4  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 21026  0195E8  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 21027  0195EC  0E00               	movlw	0
 21028  0195EE  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 21029  0195F0  0EFF               	movlw	255
 21030  0195F2  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 21031  0195F4  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 21032  0195F6  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 21033  0195F8  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 21034  0195FA  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 21035  0195FC  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 21036  0195FE  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 21037  019600  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 21038  019602  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 21039  019604  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 21040                           
 21041                           ; BSR set to: 2
 21042                           ;heartbeat_timer.c: 231: hours = input_seconds / (60 * 60);
 21043  019606  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 21044  01960A  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 21045  01960E  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 21046  019612  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 21047  019616  0E10               	movlw	16
 21048  019618  6F04               	movwf	___lldiv@divisor& (0+255),b
 21049  01961A  0E0E               	movlw	14
 21050  01961C  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21051  01961E  0E00               	movlw	0
 21052  019620  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21053  019622  0E00               	movlw	0
 21054  019624  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21055  019626  EC2B  F0D8         	call	___lldiv	;wreg free
 21056  01962A  0102               	movlb	2	; () banked
 21057  01962C  5100               	movf	?___lldiv& (0+255),w,b
 21058  01962E  6F18               	movwf	getSecondsFromOnTime@hours& (0+255),b
 21059                           
 21060                           ; BSR set to: 2
 21061                           ;heartbeat_timer.c: 232: input_seconds -= hours * (60 * 60);
 21062  019630  C218  F200         	movff	getSecondsFromOnTime@hours,___wmul@multiplier
 21063  019634  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21064  019636  0E0E               	movlw	14
 21065  019638  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21066  01963A  0E10               	movlw	16
 21067  01963C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21068  01963E  EC5C  F0E1         	call	___wmul	;wreg free
 21069  019642  0102               	movlb	2	; () banked
 21070  019644  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 21071  019648  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 21072  01964C  0E00               	movlw	0
 21073  01964E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 21074  019650  0EFF               	movlw	255
 21075  019652  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 21076  019654  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 21077  019656  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 21078  019658  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 21079  01965A  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 21080  01965C  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 21081  01965E  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 21082  019660  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 21083  019662  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 21084  019664  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 21085                           
 21086                           ;heartbeat_timer.c: 233: minutes = input_seconds / 60;
 21087  019666  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 21088  01966A  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 21089  01966E  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 21090  019672  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 21091  019676  0E3C               	movlw	60
 21092  019678  6F04               	movwf	___lldiv@divisor& (0+255),b
 21093  01967A  0E00               	movlw	0
 21094  01967C  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21095  01967E  0E00               	movlw	0
 21096  019680  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21097  019682  0E00               	movlw	0
 21098  019684  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21099  019686  EC2B  F0D8         	call	___lldiv	;wreg free
 21100  01968A  0102               	movlb	2	; () banked
 21101  01968C  5100               	movf	?___lldiv& (0+255),w,b
 21102  01968E  6F19               	movwf	getSecondsFromOnTime@minutes& (0+255),b
 21103                           
 21104                           ; BSR set to: 2
 21105                           ;heartbeat_timer.c: 234: input_seconds -= minutes * 60;
 21106  019690  5119               	movf	getSecondsFromOnTime@minutes& (0+255),w,b
 21107  019692  0D3C               	mullw	60
 21108  019694  CFF3 F211          	movff	prodl,??_getSecondsFromOnTime
 21109  019698  CFF4 F212          	movff	prodh,??_getSecondsFromOnTime+1
 21110  01969C  0E00               	movlw	0
 21111  01969E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 21112  0196A0  0EFF               	movlw	255
 21113  0196A2  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 21114  0196A4  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 21115  0196A6  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 21116  0196A8  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 21117  0196AA  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 21118  0196AC  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 21119  0196AE  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 21120  0196B0  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 21121  0196B2  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 21122  0196B4  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 21123                           
 21124                           ; BSR set to: 2
 21125                           ;heartbeat_timer.c: 235: return seconds = input_seconds;
 21126  0196B6  C20D  F215         	movff	getSecondsFromOnTime@input_seconds,getSecondsFromOnTime@seconds
 21127  0196BA  5115               	movf	getSecondsFromOnTime@seconds& (0+255),w,b
 21128                           
 21129                           ; BSR set to: 2
 21130  0196BC  0012               	return		;funcret
 21131  0196BE                     __end_of_getSecondsFromOnTime:
 21132                           	opt callstack 0
 21133                           
 21134 ;; *************** function _getNXQChargeStateStringCaps *****************
 21135 ;; Defined at:
 21136 ;;		line 38 in file "NXQ_charge_state.c"
 21137 ;; Parameters:    Size  Location     Type
 21138 ;;		None
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;		None
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  2    0[BANK2 ] PTR unsigned char 
 21143 ;; Registers used:
 21144 ;;		wreg, status,2, status,0
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21150 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21153 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21154 ;;Total ram usage:        2 bytes
 21155 ;; Hardware stack levels used:    1
 21156 ;; Hardware stack levels required when called:   11
 21157 ;; This function calls:
 21158 ;;		Nothing
 21159 ;; This function is called by:
 21160 ;;		_OLED_updateHandler
 21161 ;; This function uses a non-reentrant model
 21162 ;;
 21163                           
 21164                           	psect	text67
 21165  01B5E8                     __ptext67:
 21166                           	opt callstack 0
 21167  01B5E8                     _getNXQChargeStateStringCaps:
 21168                           	opt callstack 18
 21169                           
 21170                           ;NXQ_charge_state.c: 40: switch (nxq_charge_state) {
 21171                           
 21172                           ; BSR set to: 2
 21173                           ;incstack = 0
 21174  01B5E8  D01E               	goto	l21069
 21175  01B5EA                     l21037:
 21176                           
 21177                           ; BSR set to: 1
 21178                           ;NXQ_charge_state.c: 43: return "Idle";
 21179  01B5EA  0EA9               	movlw	low STR_18
 21180  01B5EC  0102               	movlb	2	; () banked
 21181  01B5EE  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21182  01B5F0  0EFF               	movlw	high STR_18
 21183  01B5F2  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21184  01B5F4  0012               	return	
 21185  01B5F6                     l21043:
 21186                           
 21187                           ; BSR set to: 1
 21188                           ;NXQ_charge_state.c: 47: return "Charging";
 21189  01B5F6  0E1E               	movlw	low (STR_93+4)
 21190  01B5F8  0102               	movlb	2	; () banked
 21191  01B5FA  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21192  01B5FC  0EFD               	movlw	high (STR_93+4)
 21193  01B5FE  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21194  01B600  0012               	return	
 21195  01B602                     l21049:
 21196                           
 21197                           ; BSR set to: 1
 21198                           ;NXQ_charge_state.c: 51: return "Fully Charged";
 21199  01B602  0EBD               	movlw	low STR_20
 21200  01B604  0102               	movlb	2	; () banked
 21201  01B606  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21202  01B608  0EFC               	movlw	high STR_20
 21203  01B60A  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21204  01B60C  0012               	return	
 21205  01B60E                     l21055:
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;NXQ_charge_state.c: 55: return "Error";
 21209  01B60E  0E84               	movlw	low STR_21
 21210  01B610  0102               	movlb	2	; () banked
 21211  01B612  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21212  01B614  0EFF               	movlw	high STR_21
 21213  01B616  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21214  01B618  0012               	return	
 21215  01B61A                     l21061:
 21216                           
 21217                           ; BSR set to: 1
 21218                           ;NXQ_charge_state.c: 59: return "Undefined";
 21219  01B61A  0EB2               	movlw	low STR_22
 21220  01B61C  0102               	movlb	2	; () banked
 21221  01B61E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21222  01B620  0EFE               	movlw	high STR_22
 21223  01B622  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21224  01B624  0012               	return	
 21225  01B626                     l21069:
 21226  01B626  0101               	movlb	1	; () banked
 21227  01B628  5195               	movf	_nxq_charge_state& (0+255),w,b
 21228                           
 21229                           ; Switch size 1, requested type "simple"
 21230                           ; Number of cases is 4, Range of values is 0 to 3
 21231                           ; switch strategies available:
 21232                           ; Name         Instructions Cycles
 21233                           ; simple_byte           13     7 (average)
 21234                           ;	Chosen strategy is simple_byte
 21235  01B62A  0A00               	xorlw	0	; case 0
 21236  01B62C  B4D8               	btfsc	status,2,c
 21237  01B62E  D7DD               	goto	l21037
 21238  01B630  0A01               	xorlw	1	; case 1
 21239  01B632  B4D8               	btfsc	status,2,c
 21240  01B634  D7E0               	goto	l21043
 21241  01B636  0A03               	xorlw	3	; case 2
 21242  01B638  B4D8               	btfsc	status,2,c
 21243  01B63A  D7E3               	goto	l21049
 21244  01B63C  0A01               	xorlw	1	; case 3
 21245  01B63E  B4D8               	btfsc	status,2,c
 21246  01B640  D7E6               	goto	l21055
 21247  01B642  D7EB               	goto	l21061
 21248  01B644                     __end_of_getNXQChargeStateStringCaps:
 21249                           	opt callstack 0
 21250                           
 21251 ;; *************** function _getMinutesFromOnTime *****************
 21252 ;; Defined at:
 21253 ;;		line 210 in file "heartbeat_timer.c"
 21254 ;; Parameters:    Size  Location     Type
 21255 ;;  input_second    4   13[BANK2 ] unsigned long 
 21256 ;; Auto vars:     Size  Location     Type
 21257 ;;  hours           1   24[BANK2 ] unsigned char 
 21258 ;;  days            1   23[BANK2 ] unsigned char 
 21259 ;;  years           1   22[BANK2 ] unsigned char 
 21260 ;;  minutes         1   21[BANK2 ] unsigned char 
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  1    wreg      unsigned char 
 21263 ;; Registers used:
 21264 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21270 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21271 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21272 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21273 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;Total ram usage:       12 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:   12
 21277 ;; This function calls:
 21278 ;;		___lldiv
 21279 ;;		___wmul
 21280 ;; This function is called by:
 21281 ;;		_OLED_updateHandler
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           	psect	text68
 21286  01981C                     __ptext68:
 21287                           	opt callstack 0
 21288  01981C                     _getMinutesFromOnTime:
 21289                           	opt callstack 17
 21290                           
 21291                           ;heartbeat_timer.c: 212: uint8_t years, days, hours, minutes;;heartbeat_timer.c: 213: ye
      +                          ars = input_seconds / (60 * 60 * 24 * 365);
 21292                           
 21293                           ; BSR set to: 2
 21294                           ;incstack = 0
 21295  01981C  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21296  019820  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21297  019824  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21298  019828  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21299  01982C  0E80               	movlw	128
 21300  01982E  0102               	movlb	2	; () banked
 21301  019830  6F04               	movwf	___lldiv@divisor& (0+255),b
 21302  019832  0E33               	movlw	51
 21303  019834  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21304  019836  0E00               	movlw	0
 21305  019838  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21306  01983A  0E00               	movlw	0
 21307  01983C  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21308  01983E  EC2B  F0D8         	call	___lldiv	;wreg free
 21309  019842  0102               	movlb	2	; () banked
 21310  019844  5100               	movf	?___lldiv& (0+255),w,b
 21311  019846  6F16               	movwf	getMinutesFromOnTime@years& (0+255),b
 21312                           
 21313                           ; BSR set to: 2
 21314                           ;heartbeat_timer.c: 214: input_seconds -= years * (60 * 60 * 24 * 365);
 21315  019848  C216  F200         	movff	getMinutesFromOnTime@years,___wmul@multiplier
 21316  01984C  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21317  01984E  0E33               	movlw	51
 21318  019850  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21319  019852  0E80               	movlw	128
 21320  019854  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21321  019856  EC5C  F0E1         	call	___wmul	;wreg free
 21322  01985A  0102               	movlb	2	; () banked
 21323  01985C  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21324  019860  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21325  019864  0E00               	movlw	0
 21326  019866  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21327  019868  0EFF               	movlw	255
 21328  01986A  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21329  01986C  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21330  01986E  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21331  019870  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21332  019872  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21333  019874  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21334  019876  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21335  019878  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21336  01987A  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21337  01987C  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21338                           
 21339                           ; BSR set to: 2
 21340                           ;heartbeat_timer.c: 215: days = input_seconds / (60 * 60 * 24);
 21341  01987E  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21342  019882  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21343  019886  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21344  01988A  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21345  01988E  0E80               	movlw	128
 21346  019890  6F04               	movwf	___lldiv@divisor& (0+255),b
 21347  019892  0E51               	movlw	81
 21348  019894  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21349  019896  0E00               	movlw	0
 21350  019898  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21351  01989A  0E00               	movlw	0
 21352  01989C  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21353  01989E  EC2B  F0D8         	call	___lldiv	;wreg free
 21354  0198A2  0102               	movlb	2	; () banked
 21355  0198A4  5100               	movf	?___lldiv& (0+255),w,b
 21356  0198A6  6F17               	movwf	getMinutesFromOnTime@days& (0+255),b
 21357                           
 21358                           ;heartbeat_timer.c: 216: input_seconds -= days * (60 * 60 * 24);
 21359  0198A8  C217  F200         	movff	getMinutesFromOnTime@days,___wmul@multiplier
 21360  0198AC  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21361  0198AE  0E51               	movlw	81
 21362  0198B0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21363  0198B2  0E80               	movlw	128
 21364  0198B4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21365  0198B6  EC5C  F0E1         	call	___wmul	;wreg free
 21366  0198BA  0102               	movlb	2	; () banked
 21367  0198BC  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21368  0198C0  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21369  0198C4  0E00               	movlw	0
 21370  0198C6  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21371  0198C8  0EFF               	movlw	255
 21372  0198CA  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21373  0198CC  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21374  0198CE  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21375  0198D0  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21376  0198D2  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21377  0198D4  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21378  0198D6  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21379  0198D8  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21380  0198DA  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21381  0198DC  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21382                           
 21383                           ; BSR set to: 2
 21384                           ;heartbeat_timer.c: 217: hours = input_seconds / (60 * 60);
 21385  0198DE  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21386  0198E2  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21387  0198E6  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21388  0198EA  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21389  0198EE  0E10               	movlw	16
 21390  0198F0  6F04               	movwf	___lldiv@divisor& (0+255),b
 21391  0198F2  0E0E               	movlw	14
 21392  0198F4  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21393  0198F6  0E00               	movlw	0
 21394  0198F8  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21395  0198FA  0E00               	movlw	0
 21396  0198FC  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21397  0198FE  EC2B  F0D8         	call	___lldiv	;wreg free
 21398  019902  0102               	movlb	2	; () banked
 21399  019904  5100               	movf	?___lldiv& (0+255),w,b
 21400  019906  6F18               	movwf	getMinutesFromOnTime@hours& (0+255),b
 21401                           
 21402                           ; BSR set to: 2
 21403                           ;heartbeat_timer.c: 218: input_seconds -= hours * (60 * 60);
 21404  019908  C218  F200         	movff	getMinutesFromOnTime@hours,___wmul@multiplier
 21405  01990C  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21406  01990E  0E0E               	movlw	14
 21407  019910  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21408  019912  0E10               	movlw	16
 21409  019914  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21410  019916  EC5C  F0E1         	call	___wmul	;wreg free
 21411  01991A  0102               	movlb	2	; () banked
 21412  01991C  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21413  019920  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21414  019924  0E00               	movlw	0
 21415  019926  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21416  019928  0EFF               	movlw	255
 21417  01992A  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21418  01992C  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21419  01992E  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21420  019930  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21421  019932  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21422  019934  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21423  019936  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21424  019938  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21425  01993A  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21426  01993C  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21427                           
 21428                           ;heartbeat_timer.c: 219: return minutes = input_seconds / 60;
 21429  01993E  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21430  019942  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21431  019946  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21432  01994A  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21433  01994E  0E3C               	movlw	60
 21434  019950  6F04               	movwf	___lldiv@divisor& (0+255),b
 21435  019952  0E00               	movlw	0
 21436  019954  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21437  019956  0E00               	movlw	0
 21438  019958  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21439  01995A  0E00               	movlw	0
 21440  01995C  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21441  01995E  EC2B  F0D8         	call	___lldiv	;wreg free
 21442  019962  0102               	movlb	2	; () banked
 21443  019964  5100               	movf	?___lldiv& (0+255),w,b
 21444  019966  6F15               	movwf	getMinutesFromOnTime@minutes& (0+255),b
 21445  019968  5115               	movf	getMinutesFromOnTime@minutes& (0+255),w,b
 21446                           
 21447                           ; BSR set to: 2
 21448  01996A  0012               	return		;funcret
 21449  01996C                     __end_of_getMinutesFromOnTime:
 21450                           	opt callstack 0
 21451                           
 21452 ;; *************** function _getMinorRevisionID *****************
 21453 ;; Defined at:
 21454 ;;		line 23 in file "device_IDs.c"
 21455 ;; Parameters:    Size  Location     Type
 21456 ;;		None
 21457 ;; Auto vars:     Size  Location     Type
 21458 ;;  REVID_RAW       2   11[BANK2 ] unsigned int 
 21459 ;; Return value:  Size  Location     Type
 21460 ;;                  1    wreg      unsigned char 
 21461 ;; Registers used:
 21462 ;;		wreg, status,2, status,0, cstack
 21463 ;; Tracked objects:
 21464 ;;		On entry : 0/0
 21465 ;;		On exit  : 0/0
 21466 ;;		Unchanged: 0/0
 21467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21469 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21471 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21472 ;;Total ram usage:        2 bytes
 21473 ;; Hardware stack levels used:    1
 21474 ;; Hardware stack levels required when called:   13
 21475 ;; This function calls:
 21476 ;;		_FLASH_ReadWord
 21477 ;; This function is called by:
 21478 ;;		_OLED_updateHandler
 21479 ;;		_ringBufferLUT
 21480 ;; This function uses a non-reentrant model
 21481 ;;
 21482                           
 21483                           	psect	text69
 21484  01C358                     __ptext69:
 21485                           	opt callstack 0
 21486  01C358                     _getMinorRevisionID:
 21487                           	opt callstack 15
 21488                           
 21489                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21490                           
 21491                           ; BSR set to: 2
 21492                           ;incstack = 0
 21493  01C358  0EFC               	movlw	252
 21494  01C35A  0102               	movlb	2	; () banked
 21495  01C35C  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21496  01C35E  0EFF               	movlw	255
 21497  01C360  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21498  01C362  0E3F               	movlw	63
 21499  01C364  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21500  01C366  0E00               	movlw	0
 21501  01C368  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21502  01C36A  EC73  F0DE         	call	_FLASH_ReadWord	;wreg free
 21503  01C36E  C204  F20B         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21504  01C372  C205  F20C         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21505                           
 21506                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21507  01C376  0102               	movlb	2	; () banked
 21508  01C378  510B               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21509  01C37A  0B1F               	andlw	31
 21510                           
 21511                           ; BSR set to: 2
 21512  01C37C  0012               	return		;funcret
 21513  01C37E                     __end_of_getMinorRevisionID:
 21514                           	opt callstack 0
 21515                           
 21516 ;; *************** function _getMajorRevisionID *****************
 21517 ;; Defined at:
 21518 ;;		line 12 in file "device_IDs.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;		None
 21521 ;; Auto vars:     Size  Location     Type
 21522 ;;  REVID_RAW       2   14[BANK2 ] unsigned int 
 21523 ;; Return value:  Size  Location     Type
 21524 ;;                  1    wreg      unsigned char 
 21525 ;; Registers used:
 21526 ;;		wreg, status,2, status,0, cstack
 21527 ;; Tracked objects:
 21528 ;;		On entry : 0/0
 21529 ;;		On exit  : 0/0
 21530 ;;		Unchanged: 0/0
 21531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21533 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21534 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21535 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21536 ;;Total ram usage:        5 bytes
 21537 ;; Hardware stack levels used:    1
 21538 ;; Hardware stack levels required when called:   13
 21539 ;; This function calls:
 21540 ;;		_FLASH_ReadWord
 21541 ;; This function is called by:
 21542 ;;		_OLED_updateHandler
 21543 ;;		_ringBufferLUT
 21544 ;; This function uses a non-reentrant model
 21545 ;;
 21546                           
 21547                           	psect	text70
 21548  01BEDC                     __ptext70:
 21549                           	opt callstack 0
 21550  01BEDC                     _getMajorRevisionID:
 21551                           	opt callstack 15
 21552                           
 21553                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21554                           
 21555                           ; BSR set to: 2
 21556                           ;incstack = 0
 21557  01BEDC  0EFC               	movlw	252
 21558  01BEDE  0102               	movlb	2	; () banked
 21559  01BEE0  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21560  01BEE2  0EFF               	movlw	255
 21561  01BEE4  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21562  01BEE6  0E3F               	movlw	63
 21563  01BEE8  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21564  01BEEA  0E00               	movlw	0
 21565  01BEEC  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21566  01BEEE  EC73  F0DE         	call	_FLASH_ReadWord	;wreg free
 21567  01BEF2  C204  F20E         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21568  01BEF6  C205  F20F         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21569                           
 21570                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21571  01BEFA  C20E  F20B         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21572  01BEFE  C20F  F20C         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21573  01BF02  0E06               	movlw	6
 21574  01BF04  0102               	movlb	2	; () banked
 21575  01BF06  6F0D               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21576  01BF08                     u25465:
 21577  01BF08  90D8               	bcf	status,0,c
 21578  01BF0A  330C               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21579  01BF0C  330B               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21580  01BF0E  2F0D               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21581  01BF10  D7FB               	goto	u25465
 21582  01BF12  510B               	movf	??_getMajorRevisionID& (0+255),w,b
 21583  01BF14  0B1F               	andlw	31
 21584                           
 21585                           ; BSR set to: 2
 21586  01BF16  0012               	return		;funcret
 21587  01BF18                     __end_of_getMajorRevisionID:
 21588                           	opt callstack 0
 21589                           
 21590 ;; *************** function _getHoursFromOnTime *****************
 21591 ;; Defined at:
 21592 ;;		line 198 in file "heartbeat_timer.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;  input_second    4   13[BANK2 ] unsigned long 
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;  days            1   23[BANK2 ] unsigned char 
 21597 ;;  years           1   22[BANK2 ] unsigned char 
 21598 ;;  hours           1   21[BANK2 ] unsigned char 
 21599 ;; Return value:  Size  Location     Type
 21600 ;;                  1    wreg      unsigned char 
 21601 ;; Registers used:
 21602 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21603 ;; Tracked objects:
 21604 ;;		On entry : 0/0
 21605 ;;		On exit  : 0/0
 21606 ;;		Unchanged: 0/0
 21607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21608 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21609 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21610 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21611 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21612 ;;Total ram usage:       11 bytes
 21613 ;; Hardware stack levels used:    1
 21614 ;; Hardware stack levels required when called:   12
 21615 ;; This function calls:
 21616 ;;		___lldiv
 21617 ;;		___wmul
 21618 ;; This function is called by:
 21619 ;;		_OLED_updateHandler
 21620 ;; This function uses a non-reentrant model
 21621 ;;
 21622                           
 21623                           	psect	text71
 21624  01A332                     __ptext71:
 21625                           	opt callstack 0
 21626  01A332                     _getHoursFromOnTime:
 21627                           	opt callstack 17
 21628                           
 21629                           ;heartbeat_timer.c: 200: uint8_t years, days, hours;;heartbeat_timer.c: 201: years = inp
      +                          ut_seconds / (60 * 60 * 24 * 365);
 21630                           
 21631                           ; BSR set to: 2
 21632                           ;incstack = 0
 21633  01A332  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21634  01A336  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21635  01A33A  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21636  01A33E  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21637  01A342  0E80               	movlw	128
 21638  01A344  0102               	movlb	2	; () banked
 21639  01A346  6F04               	movwf	___lldiv@divisor& (0+255),b
 21640  01A348  0E33               	movlw	51
 21641  01A34A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21642  01A34C  0E00               	movlw	0
 21643  01A34E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21644  01A350  0E00               	movlw	0
 21645  01A352  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21646  01A354  EC2B  F0D8         	call	___lldiv	;wreg free
 21647  01A358  0102               	movlb	2	; () banked
 21648  01A35A  5100               	movf	?___lldiv& (0+255),w,b
 21649  01A35C  6F16               	movwf	getHoursFromOnTime@years& (0+255),b
 21650                           
 21651                           ; BSR set to: 2
 21652                           ;heartbeat_timer.c: 202: input_seconds -= years * (60 * 60 * 24 * 365);
 21653  01A35E  C216  F200         	movff	getHoursFromOnTime@years,___wmul@multiplier
 21654  01A362  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21655  01A364  0E33               	movlw	51
 21656  01A366  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21657  01A368  0E80               	movlw	128
 21658  01A36A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21659  01A36C  EC5C  F0E1         	call	___wmul	;wreg free
 21660  01A370  0102               	movlb	2	; () banked
 21661  01A372  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21662  01A376  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21663  01A37A  0E00               	movlw	0
 21664  01A37C  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21665  01A37E  0EFF               	movlw	255
 21666  01A380  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21667  01A382  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21668  01A384  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21669  01A386  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21670  01A388  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21671  01A38A  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21672  01A38C  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21673  01A38E  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21674  01A390  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21675  01A392  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21676                           
 21677                           ; BSR set to: 2
 21678                           ;heartbeat_timer.c: 203: days = input_seconds / (60 * 60 * 24);
 21679  01A394  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21680  01A398  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21681  01A39C  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21682  01A3A0  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21683  01A3A4  0E80               	movlw	128
 21684  01A3A6  6F04               	movwf	___lldiv@divisor& (0+255),b
 21685  01A3A8  0E51               	movlw	81
 21686  01A3AA  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21687  01A3AC  0E00               	movlw	0
 21688  01A3AE  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21689  01A3B0  0E00               	movlw	0
 21690  01A3B2  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21691  01A3B4  EC2B  F0D8         	call	___lldiv	;wreg free
 21692  01A3B8  0102               	movlb	2	; () banked
 21693  01A3BA  5100               	movf	?___lldiv& (0+255),w,b
 21694  01A3BC  6F17               	movwf	getHoursFromOnTime@days& (0+255),b
 21695                           
 21696                           ;heartbeat_timer.c: 204: input_seconds -= days * (60 * 60 * 24);
 21697  01A3BE  C217  F200         	movff	getHoursFromOnTime@days,___wmul@multiplier
 21698  01A3C2  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21699  01A3C4  0E51               	movlw	81
 21700  01A3C6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21701  01A3C8  0E80               	movlw	128
 21702  01A3CA  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21703  01A3CC  EC5C  F0E1         	call	___wmul	;wreg free
 21704  01A3D0  0102               	movlb	2	; () banked
 21705  01A3D2  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21706  01A3D6  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21707  01A3DA  0E00               	movlw	0
 21708  01A3DC  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21709  01A3DE  0EFF               	movlw	255
 21710  01A3E0  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21711  01A3E2  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21712  01A3E4  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21713  01A3E6  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21714  01A3E8  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21715  01A3EA  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21716  01A3EC  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21717  01A3EE  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21718  01A3F0  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21719  01A3F2  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21720                           
 21721                           ; BSR set to: 2
 21722                           ;heartbeat_timer.c: 205: return hours = input_seconds / (60 * 60);
 21723  01A3F4  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21724  01A3F8  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21725  01A3FC  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21726  01A400  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21727  01A404  0E10               	movlw	16
 21728  01A406  6F04               	movwf	___lldiv@divisor& (0+255),b
 21729  01A408  0E0E               	movlw	14
 21730  01A40A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21731  01A40C  0E00               	movlw	0
 21732  01A40E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21733  01A410  0E00               	movlw	0
 21734  01A412  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21735  01A414  EC2B  F0D8         	call	___lldiv	;wreg free
 21736  01A418  0102               	movlb	2	; () banked
 21737  01A41A  5100               	movf	?___lldiv& (0+255),w,b
 21738  01A41C  6F15               	movwf	getHoursFromOnTime@hours& (0+255),b
 21739  01A41E  5115               	movf	getHoursFromOnTime@hours& (0+255),w,b
 21740                           
 21741                           ; BSR set to: 2
 21742  01A420  0012               	return		;funcret
 21743  01A422                     __end_of_getHoursFromOnTime:
 21744                           	opt callstack 0
 21745                           
 21746 ;; *************** function _getDeviceID *****************
 21747 ;; Defined at:
 21748 ;;		line 4 in file "device_IDs.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;		None
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;		None
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  2   11[BANK2 ] unsigned int 
 21755 ;; Registers used:
 21756 ;;		wreg, status,2, status,0, cstack
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21762 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21765 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21766 ;;Total ram usage:        2 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; Hardware stack levels required when called:   13
 21769 ;; This function calls:
 21770 ;;		_FLASH_ReadWord
 21771 ;; This function is called by:
 21772 ;;		_OLED_updateHandler
 21773 ;;		_ringBufferLUT
 21774 ;; This function uses a non-reentrant model
 21775 ;;
 21776                           
 21777                           	psect	text72
 21778  01C4B0                     __ptext72:
 21779                           	opt callstack 0
 21780  01C4B0                     _getDeviceID:
 21781                           	opt callstack 15
 21782                           
 21783                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21784                           
 21785                           ; BSR set to: 2
 21786                           ;incstack = 0
 21787  01C4B0  0EFE               	movlw	254
 21788  01C4B2  0102               	movlb	2	; () banked
 21789  01C4B4  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21790  01C4B6  0EFF               	movlw	255
 21791  01C4B8  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21792  01C4BA  0E3F               	movlw	63
 21793  01C4BC  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21794  01C4BE  0E00               	movlw	0
 21795  01C4C0  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21796  01C4C2  EC73  F0DE         	call	_FLASH_ReadWord	;wreg free
 21797  01C4C6  C204  F20B         	movff	?_FLASH_ReadWord,?_getDeviceID
 21798  01C4CA  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21799  01C4CE  0012               	return		;funcret
 21800  01C4D0                     __end_of_getDeviceID:
 21801                           	opt callstack 0
 21802                           
 21803 ;; *************** function _FLASH_ReadWord *****************
 21804 ;; Defined at:
 21805 ;;		line 71 in file "mcc_generated_files/memory.c"
 21806 ;; Parameters:    Size  Location     Type
 21807 ;;  flashAddr       4    4[BANK2 ] unsigned long 
 21808 ;; Auto vars:     Size  Location     Type
 21809 ;;		None
 21810 ;; Return value:  Size  Location     Type
 21811 ;;                  2    4[BANK2 ] unsigned int 
 21812 ;; Registers used:
 21813 ;;		wreg, status,2, status,0, cstack
 21814 ;; Tracked objects:
 21815 ;;		On entry : 0/0
 21816 ;;		On exit  : 0/0
 21817 ;;		Unchanged: 0/0
 21818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21819 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21821 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21822 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21823 ;;Total ram usage:        7 bytes
 21824 ;; Hardware stack levels used:    1
 21825 ;; Hardware stack levels required when called:   12
 21826 ;; This function calls:
 21827 ;;		_FLASH_ReadByte
 21828 ;; This function is called by:
 21829 ;;		_getDeviceID
 21830 ;;		_getMajorRevisionID
 21831 ;;		_getMinorRevisionID
 21832 ;;		_getUserID
 21833 ;; This function uses a non-reentrant model
 21834 ;;
 21835                           
 21836                           	psect	text73
 21837  01BCE6                     __ptext73:
 21838                           	opt callstack 0
 21839  01BCE6                     _FLASH_ReadWord:
 21840                           	opt callstack 15
 21841                           
 21842                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21843                           
 21844                           ;incstack = 0
 21845  01BCE6  C204  F200         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21846  01BCEA  C205  F201         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21847  01BCEE  C206  F202         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21848  01BCF2  C207  F203         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21849  01BCF6  ECDD  F0E2         	call	_FLASH_ReadByte	;wreg free
 21850  01BCFA  0102               	movlb	2	; () banked
 21851  01BCFC  6F08               	movwf	??_FLASH_ReadWord& (0+255),b
 21852  01BCFE  0E01               	movlw	1
 21853  01BD00  2504               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21854  01BD02  6F00               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21855  01BD04  0E00               	movlw	0
 21856  01BD06  2105               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21857  01BD08  6F01               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21858  01BD0A  0E00               	movlw	0
 21859  01BD0C  2106               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21860  01BD0E  6F02               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21861  01BD10  0E00               	movlw	0
 21862  01BD12  2107               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21863  01BD14  6F03               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21864  01BD16  ECDD  F0E2         	call	_FLASH_ReadByte	;wreg free
 21865  01BD1A  0102               	movlb	2	; () banked
 21866  01BD1C  6F09               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21867  01BD1E  5108               	movf	??_FLASH_ReadWord& (0+255),w,b
 21868  01BD20  6F04               	movwf	?_FLASH_ReadWord& (0+255),b
 21869  01BD22  C209  F205         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21870                           
 21871                           ; BSR set to: 2
 21872  01BD26  0012               	return		;funcret
 21873  01BD28                     __end_of_FLASH_ReadWord:
 21874                           	opt callstack 0
 21875                           
 21876 ;; *************** function _FLASH_ReadByte *****************
 21877 ;; Defined at:
 21878 ;;		line 59 in file "mcc_generated_files/memory.c"
 21879 ;; Parameters:    Size  Location     Type
 21880 ;;  flashAddr       4    0[BANK2 ] unsigned long 
 21881 ;; Auto vars:     Size  Location     Type
 21882 ;;		None
 21883 ;; Return value:  Size  Location     Type
 21884 ;;                  1    wreg      unsigned char 
 21885 ;; Registers used:
 21886 ;;		wreg, status,2
 21887 ;; Tracked objects:
 21888 ;;		On entry : 0/0
 21889 ;;		On exit  : 0/0
 21890 ;;		Unchanged: 0/0
 21891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21892 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21895 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21896 ;;Total ram usage:        4 bytes
 21897 ;; Hardware stack levels used:    1
 21898 ;; Hardware stack levels required when called:   11
 21899 ;; This function calls:
 21900 ;;		Nothing
 21901 ;; This function is called by:
 21902 ;;		_FLASH_ReadWord
 21903 ;;		_FLASH_WriteByte
 21904 ;; This function uses a non-reentrant model
 21905 ;;
 21906                           
 21907                           	psect	text74
 21908  01C5BA                     __ptext74:
 21909                           	opt callstack 0
 21910  01C5BA                     _FLASH_ReadByte:
 21911                           	opt callstack 15
 21912                           
 21913                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21914                           
 21915                           ; BSR set to: 2
 21916                           ;incstack = 0
 21917  01C5BA  5081               	movf	3969,w,c	;volsfr
 21918  01C5BC  0B3F               	andlw	-193
 21919  01C5BE  0980               	iorlw	128
 21920  01C5C0  6E81               	movwf	3969,c	;volsfr
 21921                           
 21922                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21923  01C5C2  C202  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21924                           
 21925                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21926  01C5C6  C201  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21927                           
 21928                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21929  01C5CA  C200  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21930  01C5CE  0008               	tblrd		*	;# 
 21931                           
 21932                           ;memory.c: 68: return (TABLAT);
 21933  01C5D0  50F5               	movf	tablat,w,c	;volatile
 21934  01C5D2  0012               	return		;funcret
 21935  01C5D4                     __end_of_FLASH_ReadByte:
 21936                           	opt callstack 0
 21937                           
 21938 ;; *************** function _getDaysFromOnTime *****************
 21939 ;; Defined at:
 21940 ;;		line 188 in file "heartbeat_timer.c"
 21941 ;; Parameters:    Size  Location     Type
 21942 ;;  input_second    4   13[BANK2 ] unsigned long 
 21943 ;; Auto vars:     Size  Location     Type
 21944 ;;  years           1   22[BANK2 ] unsigned char 
 21945 ;;  days            1   21[BANK2 ] unsigned char 
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      unsigned char 
 21948 ;; Registers used:
 21949 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21955 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21956 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21957 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21958 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21959 ;;Total ram usage:       10 bytes
 21960 ;; Hardware stack levels used:    1
 21961 ;; Hardware stack levels required when called:   12
 21962 ;; This function calls:
 21963 ;;		___lldiv
 21964 ;;		___wmul
 21965 ;; This function is called by:
 21966 ;;		_OLED_updateHandler
 21967 ;; This function uses a non-reentrant model
 21968 ;;
 21969                           
 21970                           	psect	text75
 21971  01AE2A                     __ptext75:
 21972                           	opt callstack 0
 21973  01AE2A                     _getDaysFromOnTime:
 21974                           	opt callstack 17
 21975                           
 21976                           ;heartbeat_timer.c: 190: uint8_t years, days;;heartbeat_timer.c: 191: years = input_seco
      +                          nds / (60 * 60 * 24 * 365);
 21977                           
 21978                           ;incstack = 0
 21979  01AE2A  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21980  01AE2E  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21981  01AE32  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21982  01AE36  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21983  01AE3A  0E80               	movlw	128
 21984  01AE3C  0102               	movlb	2	; () banked
 21985  01AE3E  6F04               	movwf	___lldiv@divisor& (0+255),b
 21986  01AE40  0E33               	movlw	51
 21987  01AE42  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21988  01AE44  0E00               	movlw	0
 21989  01AE46  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21990  01AE48  0E00               	movlw	0
 21991  01AE4A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21992  01AE4C  EC2B  F0D8         	call	___lldiv	;wreg free
 21993  01AE50  0102               	movlb	2	; () banked
 21994  01AE52  5100               	movf	?___lldiv& (0+255),w,b
 21995  01AE54  6F16               	movwf	getDaysFromOnTime@years& (0+255),b
 21996                           
 21997                           ; BSR set to: 2
 21998                           ;heartbeat_timer.c: 192: input_seconds -= years * (60 * 60 * 24 * 365);
 21999  01AE56  C216  F200         	movff	getDaysFromOnTime@years,___wmul@multiplier
 22000  01AE5A  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 22001  01AE5C  0E33               	movlw	51
 22002  01AE5E  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22003  01AE60  0E80               	movlw	128
 22004  01AE62  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22005  01AE64  EC5C  F0E1         	call	___wmul	;wreg free
 22006  01AE68  0102               	movlb	2	; () banked
 22007  01AE6A  C200  F211         	movff	?___wmul,??_getDaysFromOnTime
 22008  01AE6E  C201  F212         	movff	?___wmul+1,??_getDaysFromOnTime+1
 22009  01AE72  0E00               	movlw	0
 22010  01AE74  BF12               	btfsc	(??_getDaysFromOnTime+1)& (0+255),7,b
 22011  01AE76  0EFF               	movlw	255
 22012  01AE78  6F13               	movwf	(??_getDaysFromOnTime+2)& (0+255),b
 22013  01AE7A  6F14               	movwf	(??_getDaysFromOnTime+3)& (0+255),b
 22014  01AE7C  5111               	movf	??_getDaysFromOnTime& (0+255),w,b
 22015  01AE7E  5F0D               	subwf	getDaysFromOnTime@input_seconds& (0+255),f,b
 22016  01AE80  5112               	movf	(??_getDaysFromOnTime+1)& (0+255),w,b
 22017  01AE82  5B0E               	subwfb	(getDaysFromOnTime@input_seconds+1)& (0+255),f,b
 22018  01AE84  5113               	movf	(??_getDaysFromOnTime+2)& (0+255),w,b
 22019  01AE86  5B0F               	subwfb	(getDaysFromOnTime@input_seconds+2)& (0+255),f,b
 22020  01AE88  5114               	movf	(??_getDaysFromOnTime+3)& (0+255),w,b
 22021  01AE8A  5B10               	subwfb	(getDaysFromOnTime@input_seconds+3)& (0+255),f,b
 22022                           
 22023                           ; BSR set to: 2
 22024                           ;heartbeat_timer.c: 193: return days = input_seconds / (60 * 60 * 24);
 22025  01AE8C  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 22026  01AE90  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 22027  01AE94  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 22028  01AE98  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 22029  01AE9C  0E80               	movlw	128
 22030  01AE9E  6F04               	movwf	___lldiv@divisor& (0+255),b
 22031  01AEA0  0E51               	movlw	81
 22032  01AEA2  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 22033  01AEA4  0E00               	movlw	0
 22034  01AEA6  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 22035  01AEA8  0E00               	movlw	0
 22036  01AEAA  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 22037  01AEAC  EC2B  F0D8         	call	___lldiv	;wreg free
 22038  01AEB0  0102               	movlb	2	; () banked
 22039  01AEB2  5100               	movf	?___lldiv& (0+255),w,b
 22040  01AEB4  6F15               	movwf	getDaysFromOnTime@days& (0+255),b
 22041  01AEB6  5115               	movf	getDaysFromOnTime@days& (0+255),w,b
 22042                           
 22043                           ; BSR set to: 2
 22044  01AEB8  0012               	return		;funcret
 22045  01AEBA                     __end_of_getDaysFromOnTime:
 22046                           	opt callstack 0
 22047                           
 22048 ;; *************** function _getCauseOfResetStringSmall *****************
 22049 ;; Defined at:
 22050 ;;		line 118 in file "cause_of_reset.c"
 22051 ;; Parameters:    Size  Location     Type
 22052 ;;  r               1    wreg     enum E9577
 22053 ;; Auto vars:     Size  Location     Type
 22054 ;;  r               1    2[BANK2 ] enum E9577
 22055 ;; Return value:  Size  Location     Type
 22056 ;;                  2    0[BANK2 ] PTR inline unsigned char
 22057 ;; Registers used:
 22058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22059 ;; Tracked objects:
 22060 ;;		On entry : 0/0
 22061 ;;		On exit  : 0/0
 22062 ;;		Unchanged: 0/0
 22063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22064 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22065 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22067 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22068 ;;Total ram usage:        3 bytes
 22069 ;; Hardware stack levels used:    1
 22070 ;; Hardware stack levels required when called:   11
 22071 ;; This function calls:
 22072 ;;		Nothing
 22073 ;; This function is called by:
 22074 ;;		_OLED_updateHandler
 22075 ;; This function uses a non-reentrant model
 22076 ;;
 22077                           
 22078                           	psect	text76
 22079  01C12C                     __ptext76:
 22080                           	opt callstack 0
 22081  01C12C                     _getCauseOfResetStringSmall:
 22082                           	opt callstack 18
 22083                           
 22084                           ; BSR set to: 2
 22085                           ;incstack = 0
 22086                           ;getCauseOfResetStringSmall@r stored from wreg
 22087  01C12C  0102               	movlb	2	; () banked
 22088  01C12E  6F02               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 22089                           
 22090                           ;cause_of_reset.c: 121: static char *strings[] = {;cause_of_reset.c: 122: "Undefined",;c
      +                          ause_of_reset.c: 123: "POR Reset",;cause_of_reset.c: 124: "BOR Reset",;cause_of_reset.c:
      +                           125: "MCLR Reset",;cause_of_reset.c: 126: "WDT Reset",;cause_of_reset.c: 127: "WWDT Res
      +                          et",;cause_of_reset.c: 128: "RESET Executed",;cause_of_reset.c: 129: "STOF Reset",;cause
      +                          _of_reset.c: 130: "STUF Reset",;cause_of_reset.c: 131: };;cause_of_reset.c: 134: if (r <
      +                          = 8) {
 22091  01C130  0E09               	movlw	9
 22092  01C132  0102               	movlb	2	; () banked
 22093  01C134  6102               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 22094  01C136  D00D               	goto	l21189
 22095                           
 22096                           ; BSR set to: 2
 22097                           ;cause_of_reset.c: 136: return strings[r];
 22098  01C138  5102               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 22099  01C13A  0D02               	mullw	2
 22100  01C13C  0EED               	movlw	low getCauseOfResetStringSmall@strings
 22101  01C13E  24F3               	addwf	prodl,w,c
 22102  01C140  6ED9               	movwf	fsr2l,c
 22103  01C142  0E02               	movlw	high getCauseOfResetStringSmall@strings
 22104  01C144  20F4               	addwfc	prodh,w,c
 22105  01C146  6EDA               	movwf	fsr2h,c
 22106  01C148  CFDE F200          	movff	postinc2,?_getCauseOfResetStringSmall
 22107  01C14C  CFDD F201          	movff	postdec2,?_getCauseOfResetStringSmall+1
 22108  01C150  0012               	return	
 22109  01C152                     l21189:
 22110                           
 22111                           ; BSR set to: 2
 22112                           ;cause_of_reset.c: 140: else {;cause_of_reset.c: 142: return "Undefined";
 22113  01C152  0EB2               	movlw	low STR_22
 22114  01C154  6F00               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 22115  01C156  0EFE               	movlw	high STR_22
 22116  01C158  6F01               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 22117                           
 22118                           ; BSR set to: 2
 22119  01C15A  0012               	return		;funcret
 22120  01C15C                     __end_of_getCauseOfResetStringSmall:
 22121                           	opt callstack 0
 22122                           
 22123 ;; *************** function _floatToEngineeringFormat *****************
 22124 ;; Defined at:
 22125 ;;		line 409 in file "ring_buffer_LUT.c"
 22126 ;; Parameters:    Size  Location     Type
 22127 ;;  input_value     4  159[BANK2 ] float 
 22128 ;; Auto vars:     Size  Location     Type
 22129 ;;  mag             4  163[BANK2 ] float 
 22130 ;;  res             2  167[BANK2 ] PTR unsigned char 
 22131 ;;		 -> floatToEngineeringFormat@result(20), 
 22132 ;; Return value:  Size  Location     Type
 22133 ;;                  2  159[BANK2 ] PTR unsigned char 
 22134 ;; Registers used:
 22135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22136 ;; Tracked objects:
 22137 ;;		On entry : 0/0
 22138 ;;		On exit  : 0/0
 22139 ;;		Unchanged: 0/0
 22140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22141 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22142 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22144 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22145 ;;Total ram usage:       10 bytes
 22146 ;; Hardware stack levels used:    1
 22147 ;; Hardware stack levels required when called:   15
 22148 ;; This function calls:
 22149 ;;		___fldiv
 22150 ;;		___fleq
 22151 ;;		___flge
 22152 ;;		___fltol
 22153 ;;		___xxtofl
 22154 ;;		_abs
 22155 ;;		_sprintf
 22156 ;; This function is called by:
 22157 ;;		_OLED_updateHandler
 22158 ;;		_printCurrentMeasurements
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text77
 22163  01639C                     __ptext77:
 22164                           	opt callstack 0
 22165  01639C                     _floatToEngineeringFormat:
 22166                           	opt callstack 12
 22167                           
 22168                           ;ring_buffer_LUT.c: 411: static unsigned char result[20];;ring_buffer_LUT.c: 412: unsign
      +                          ed char *res = result;
 22169                           
 22170                           ; BSR set to: 2
 22171                           ;incstack = 0
 22172  01639C  0EAC               	movlw	low floatToEngineeringFormat@result
 22173  01639E  0102               	movlb	2	; () banked
 22174  0163A0  6FA7               	movwf	floatToEngineeringFormat@res& (0+255),b
 22175  0163A2  0E03               	movlw	high floatToEngineeringFormat@result
 22176  0163A4  6FA8               	movwf	(floatToEngineeringFormat@res+1)& (0+255),b
 22177                           
 22178                           ; BSR set to: 2
 22179                           ;ring_buffer_LUT.c: 416: float mag = abs(input_value);
 22180  0163A6  C29F  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22181  0163AA  C2A0  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22182  0163AE  C2A1  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22183  0163B2  C2A2  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22184  0163B6  EC1D  F0D4         	call	___fltol	;wreg free
 22185  0163BA  C230  F23A         	movff	?___fltol,abs@a
 22186  0163BE  C231  F23B         	movff	?___fltol+1,abs@a+1
 22187  0163C2  EC09  F0E1         	call	_abs	;wreg free
 22188  0163C6  0102               	movlb	2	; () banked
 22189  0163C8  C23A  F23E         	movff	?_abs,___xxtofl@val
 22190  0163CC  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22191  0163D0  0E00               	movlw	0
 22192  0163D2  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22193  0163D4  0EFF               	movlw	-1
 22194  0163D6  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22195  0163D8  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22196  0163DA  0E01               	movlw	1
 22197  0163DC  ECB6  F0CC         	call	___xxtofl
 22198  0163E0  C23E  F2A3         	movff	?___xxtofl,floatToEngineeringFormat@mag
 22199  0163E4  C23F  F2A4         	movff	?___xxtofl+1,floatToEngineeringFormat@mag+1
 22200  0163E8  C240  F2A5         	movff	?___xxtofl+2,floatToEngineeringFormat@mag+2
 22201  0163EC  C241  F2A6         	movff	?___xxtofl+3,floatToEngineeringFormat@mag+3
 22202                           
 22203                           ;ring_buffer_LUT.c: 418: if (mag >= 1000000.0) sprintf(res, "+%0.3f M", input_value / 10
      +                          00000.0);
 22204  0163F0  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22205  0163F4  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22206  0163F8  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22207  0163FC  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22208  016400  0E00               	movlw	0
 22209  016402  0102               	movlb	2	; () banked
 22210  016404  6F04               	movwf	___flge@ff2& (0+255),b
 22211  016406  0E24               	movlw	36
 22212  016408  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22213  01640A  0E74               	movlw	116
 22214  01640C  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22215  01640E  0E49               	movlw	73
 22216  016410  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22217  016412  EC85  F0D2         	call	___flge	;wreg free
 22218  016416  0102               	movlb	2	; () banked
 22219  016418  A0D8               	btfss	status,0,c
 22220  01641A  D025               	goto	l19527
 22221                           
 22222                           ; BSR set to: 2
 22223  01641C  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22224  016420  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22225  016424  0EC6               	movlw	low STR_291
 22226  016426  6F8E               	movwf	sprintf@f& (0+255),b
 22227  016428  0EFE               	movlw	high STR_291
 22228  01642A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22229  01642C  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22230  016430  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22231  016434  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22232  016438  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22233  01643C  0E00               	movlw	0
 22234  01643E  6F04               	movwf	___fldiv@a& (0+255),b
 22235  016440  0E24               	movlw	36
 22236  016442  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22237  016444  0E74               	movlw	116
 22238  016446  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22239  016448  0E49               	movlw	73
 22240  01644A  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22241  01644C  EC2B  F0C1         	call	___fldiv	;wreg free
 22242  016450  C200  F290         	movff	?___fldiv,?_sprintf+4
 22243  016454  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22244  016458  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22245  01645C  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22246  016460  EC38  F0DD         	call	_sprintf	;wreg free
 22247  016464  D141               	goto	l2257
 22248  016466                     l19527:
 22249                           
 22250                           ; BSR set to: 2
 22251                           ;ring_buffer_LUT.c: 419: else if (mag >= 1000.0) sprintf(res, "+%0.3f k", input_value/ 1
      +                          000.0);
 22252  016466  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22253  01646A  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22254  01646E  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22255  016472  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22256  016476  0E00               	movlw	0
 22257  016478  6F04               	movwf	___flge@ff2& (0+255),b
 22258  01647A  0E00               	movlw	0
 22259  01647C  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22260  01647E  0E7A               	movlw	122
 22261  016480  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22262  016482  0E44               	movlw	68
 22263  016484  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22264  016486  EC85  F0D2         	call	___flge	;wreg free
 22265  01648A  0102               	movlb	2	; () banked
 22266  01648C  A0D8               	btfss	status,0,c
 22267  01648E  D025               	goto	l19531
 22268                           
 22269                           ; BSR set to: 2
 22270  016490  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22271  016494  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22272  016498  0ECF               	movlw	low STR_292
 22273  01649A  6F8E               	movwf	sprintf@f& (0+255),b
 22274  01649C  0EFE               	movlw	high STR_292
 22275  01649E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22276  0164A0  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22277  0164A4  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22278  0164A8  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22279  0164AC  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22280  0164B0  0E00               	movlw	0
 22281  0164B2  6F04               	movwf	___fldiv@a& (0+255),b
 22282  0164B4  0E00               	movlw	0
 22283  0164B6  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22284  0164B8  0E7A               	movlw	122
 22285  0164BA  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22286  0164BC  0E44               	movlw	68
 22287  0164BE  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22288  0164C0  EC2B  F0C1         	call	___fldiv	;wreg free
 22289  0164C4  C200  F290         	movff	?___fldiv,?_sprintf+4
 22290  0164C8  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22291  0164CC  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22292  0164D0  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22293  0164D4  EC38  F0DD         	call	_sprintf	;wreg free
 22294  0164D8  D107               	goto	l2257
 22295  0164DA                     l19531:
 22296                           
 22297                           ; BSR set to: 2
 22298                           ;ring_buffer_LUT.c: 420: else if (mag >= 1.0) sprintf(res, "+%0.3f ", input_value / 1.0)
      +                          ;
 22299  0164DA  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22300  0164DE  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22301  0164E2  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22302  0164E6  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22303  0164EA  0E00               	movlw	0
 22304  0164EC  6F04               	movwf	___flge@ff2& (0+255),b
 22305  0164EE  0E00               	movlw	0
 22306  0164F0  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22307  0164F2  0E80               	movlw	128
 22308  0164F4  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22309  0164F6  0E3F               	movlw	63
 22310  0164F8  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22311  0164FA  EC85  F0D2         	call	___flge	;wreg free
 22312  0164FE  0102               	movlb	2	; () banked
 22313  016500  A0D8               	btfss	status,0,c
 22314  016502  D025               	goto	l19535
 22315                           
 22316                           ; BSR set to: 2
 22317  016504  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22318  016508  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22319  01650C  0E3A               	movlw	low STR_293
 22320  01650E  6F8E               	movwf	sprintf@f& (0+255),b
 22321  016510  0EFF               	movlw	high STR_293
 22322  016512  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22323  016514  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22324  016518  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22325  01651C  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22326  016520  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22327  016524  0E00               	movlw	0
 22328  016526  6F04               	movwf	___fldiv@a& (0+255),b
 22329  016528  0E00               	movlw	0
 22330  01652A  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22331  01652C  0E80               	movlw	128
 22332  01652E  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22333  016530  0E3F               	movlw	63
 22334  016532  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22335  016534  EC2B  F0C1         	call	___fldiv	;wreg free
 22336  016538  C200  F290         	movff	?___fldiv,?_sprintf+4
 22337  01653C  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22338  016540  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22339  016544  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22340  016548  EC38  F0DD         	call	_sprintf	;wreg free
 22341  01654C  D0CD               	goto	l2257
 22342  01654E                     l19535:
 22343                           
 22344                           ; BSR set to: 2
 22345                           ;ring_buffer_LUT.c: 421: else if (mag >= 0.0001) sprintf(res, "+%0.3f m", input_value / 
      +                          0.001);
 22346  01654E  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22347  016552  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22348  016556  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22349  01655A  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22350  01655E  0E17               	movlw	23
 22351  016560  6F04               	movwf	___flge@ff2& (0+255),b
 22352  016562  0EB7               	movlw	183
 22353  016564  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22354  016566  0ED1               	movlw	209
 22355  016568  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22356  01656A  0E38               	movlw	56
 22357  01656C  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22358  01656E  EC85  F0D2         	call	___flge	;wreg free
 22359  016572  0102               	movlb	2	; () banked
 22360  016574  A0D8               	btfss	status,0,c
 22361  016576  D025               	goto	l19539
 22362                           
 22363                           ; BSR set to: 2
 22364  016578  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22365  01657C  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22366  016580  0ED8               	movlw	low STR_294
 22367  016582  6F8E               	movwf	sprintf@f& (0+255),b
 22368  016584  0EFE               	movlw	high STR_294
 22369  016586  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22370  016588  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22371  01658C  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22372  016590  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22373  016594  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22374  016598  0E6F               	movlw	111
 22375  01659A  6F04               	movwf	___fldiv@a& (0+255),b
 22376  01659C  0E12               	movlw	18
 22377  01659E  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22378  0165A0  0E83               	movlw	131
 22379  0165A2  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22380  0165A4  0E3A               	movlw	58
 22381  0165A6  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22382  0165A8  EC2B  F0C1         	call	___fldiv	;wreg free
 22383  0165AC  C200  F290         	movff	?___fldiv,?_sprintf+4
 22384  0165B0  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22385  0165B4  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22386  0165B8  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22387  0165BC  EC38  F0DD         	call	_sprintf	;wreg free
 22388  0165C0  D093               	goto	l2257
 22389  0165C2                     l19539:
 22390                           
 22391                           ; BSR set to: 2
 22392                           ;ring_buffer_LUT.c: 422: else if (mag >= 0.0000001) sprintf(res, "+%0.3f u", input_value
      +                           / 0.000001);
 22393  0165C2  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22394  0165C6  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22395  0165CA  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22396  0165CE  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22397  0165D2  0E95               	movlw	149
 22398  0165D4  6F04               	movwf	___flge@ff2& (0+255),b
 22399  0165D6  0EBF               	movlw	191
 22400  0165D8  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22401  0165DA  0ED6               	movlw	214
 22402  0165DC  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22403  0165DE  0E33               	movlw	51
 22404  0165E0  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22405  0165E2  EC85  F0D2         	call	___flge	;wreg free
 22406  0165E6  0102               	movlb	2	; () banked
 22407  0165E8  A0D8               	btfss	status,0,c
 22408  0165EA  D025               	goto	l19543
 22409                           
 22410                           ; BSR set to: 2
 22411  0165EC  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22412  0165F0  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22413  0165F4  0EEA               	movlw	low STR_295
 22414  0165F6  6F8E               	movwf	sprintf@f& (0+255),b
 22415  0165F8  0EFE               	movlw	high STR_295
 22416  0165FA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22417  0165FC  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22418  016600  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22419  016604  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22420  016608  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22421  01660C  0EBD               	movlw	189
 22422  01660E  6F04               	movwf	___fldiv@a& (0+255),b
 22423  016610  0E37               	movlw	55
 22424  016612  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22425  016614  0E86               	movlw	134
 22426  016616  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22427  016618  0E35               	movlw	53
 22428  01661A  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22429  01661C  EC2B  F0C1         	call	___fldiv	;wreg free
 22430  016620  C200  F290         	movff	?___fldiv,?_sprintf+4
 22431  016624  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22432  016628  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22433  01662C  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22434  016630  EC38  F0DD         	call	_sprintf	;wreg free
 22435  016634  D059               	goto	l2257
 22436  016636                     l19543:
 22437                           
 22438                           ; BSR set to: 2
 22439                           ;ring_buffer_LUT.c: 423: else if (mag >= 0.0000000001) sprintf(res, "+%0.3f n", input_va
      +                          lue / 0.000000001);
 22440  016636  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22441  01663A  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22442  01663E  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22443  016642  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22444  016646  0EFF               	movlw	255
 22445  016648  6F04               	movwf	___flge@ff2& (0+255),b
 22446  01664A  0EE6               	movlw	230
 22447  01664C  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22448  01664E  0EDB               	movlw	219
 22449  016650  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22450  016652  0E2E               	movlw	46
 22451  016654  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22452  016656  EC85  F0D2         	call	___flge	;wreg free
 22453  01665A  0102               	movlb	2	; () banked
 22454  01665C  A0D8               	btfss	status,0,c
 22455  01665E  D025               	goto	l19547
 22456                           
 22457                           ; BSR set to: 2
 22458  016660  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22459  016664  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22460  016668  0EE1               	movlw	low STR_296
 22461  01666A  6F8E               	movwf	sprintf@f& (0+255),b
 22462  01666C  0EFE               	movlw	high STR_296
 22463  01666E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22464  016670  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22465  016674  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22466  016678  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22467  01667C  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22468  016680  0E5F               	movlw	95
 22469  016682  6F04               	movwf	___fldiv@a& (0+255),b
 22470  016684  0E70               	movlw	112
 22471  016686  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22472  016688  0E89               	movlw	137
 22473  01668A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22474  01668C  0E30               	movlw	48
 22475  01668E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22476  016690  EC2B  F0C1         	call	___fldiv	;wreg free
 22477  016694  C200  F290         	movff	?___fldiv,?_sprintf+4
 22478  016698  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22479  01669C  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22480  0166A0  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22481  0166A4  EC38  F0DD         	call	_sprintf	;wreg free
 22482  0166A8  D01F               	goto	l2257
 22483  0166AA                     l19547:
 22484                           
 22485                           ; BSR set to: 2
 22486                           ;ring_buffer_LUT.c: 424: else if (input_value == 0.0) sprintf(res, "0.0 ");
 22487  0166AA  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fleq@ff1
 22488  0166AE  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fleq@ff1+1
 22489  0166B2  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fleq@ff1+2
 22490  0166B6  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fleq@ff1+3
 22491  0166BA  0E00               	movlw	0
 22492  0166BC  6F04               	movwf	___fleq@ff2& (0+255),b
 22493  0166BE  0E00               	movlw	0
 22494  0166C0  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 22495  0166C2  0E00               	movlw	0
 22496  0166C4  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 22497  0166C6  0E00               	movlw	0
 22498  0166C8  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 22499  0166CA  EC5D  F0D7         	call	___fleq	;wreg free
 22500  0166CE  0102               	movlb	2	; () banked
 22501  0166D0  A0D8               	btfss	status,0,c
 22502  0166D2  D00A               	goto	l2257
 22503                           
 22504                           ; BSR set to: 2
 22505  0166D4  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22506  0166D8  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22507  0166DC  0E90               	movlw	low STR_297
 22508  0166DE  6F8E               	movwf	sprintf@f& (0+255),b
 22509  0166E0  0EFF               	movlw	high STR_297
 22510  0166E2  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22511  0166E4  EC38  F0DD         	call	_sprintf	;wreg free
 22512  0166E8                     l2257:
 22513                           
 22514                           ;ring_buffer_LUT.c: 426: return result;
 22515                           
 22516                           ; BSR set to: 2
 22517  0166E8  0EAC               	movlw	low floatToEngineeringFormat@result
 22518  0166EA  0102               	movlb	2	; () banked
 22519  0166EC  6F9F               	movwf	?_floatToEngineeringFormat& (0+255),b
 22520  0166EE  0E03               	movlw	high floatToEngineeringFormat@result
 22521  0166F0  6FA0               	movwf	(?_floatToEngineeringFormat+1)& (0+255),b
 22522                           
 22523                           ; BSR set to: 2
 22524  0166F2  0012               	return		;funcret
 22525  0166F4                     __end_of_floatToEngineeringFormat:
 22526                           	opt callstack 0
 22527                           
 22528 ;; *************** function _sprintf *****************
 22529 ;; Defined at:
 22530 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
 22531 ;; Parameters:    Size  Location     Type
 22532 ;;  wh              2  140[BANK2 ] PTR unsigned char 
 22533 ;;		 -> ftoa@buf(17), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_
      +str(17), 
 22534 ;;		 -> OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), 
 22535 ;;  f               2  142[BANK2 ] PTR const unsigned char 
 22536 ;;		 -> STR_358(11), STR_297(5), STR_296(9), STR_295(9), 
 22537 ;;		 -> STR_294(9), STR_293(8), STR_292(9), STR_291(9), 
 22538 ;;		 -> STR_182(7), STR_180(5), STR_173(4), STR_168(4), 
 22539 ;;		 -> STR_163(11), STR_158(11), STR_157(11), STR_156(11), 
 22540 ;;		 -> STR_155(11), STR_154(9), STR_150(11), STR_148(11), 
 22541 ;;		 -> STR_147(11), STR_146(11), STR_145(11), STR_144(9), 
 22542 ;;		 -> STR_143(11), STR_142(9), STR_141(8), STR_140(9), 
 22543 ;;		 -> STR_139(8), STR_138(9), STR_134(5), STR_124(8), 
 22544 ;;		 -> STR_120(8), STR_116(8), STR_112(8), STR_108(9), 
 22545 ;;		 -> STR_103(8), STR_98(8), STR_94(8), STR_89(8), 
 22546 ;;		 -> STR_85(8), STR_81(8), STR_68(7), STR_66(5), 
 22547 ;;		 -> STR_59(11), STR_58(10), STR_57(13), STR_56(12), 
 22548 ;;		 -> STR_55(11), STR_54(10), STR_53(10), STR_52(9), 
 22549 ;;		 -> STR_51(11), STR_50(10), 
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;  pb              5  154[BANK2 ] struct __prbuf
 22552 ;;  ap              2  152[BANK2 ] PTR void [1]
 22553 ;;		 -> ?_sprintf(2), ?_printf(2), 
 22554 ;; Return value:  Size  Location     Type
 22555 ;;                  2  140[BANK2 ] int 
 22556 ;; Registers used:
 22557 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22558 ;; Tracked objects:
 22559 ;;		On entry : 0/0
 22560 ;;		On exit  : 0/0
 22561 ;;		Unchanged: 0/0
 22562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22563 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22566 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22567 ;;Total ram usage:       19 bytes
 22568 ;; Hardware stack levels used:    1
 22569 ;; Hardware stack levels required when called:   14
 22570 ;; This function calls:
 22571 ;;		__doprnt
 22572 ;; This function is called by:
 22573 ;;		_getStringSecondsAsTime
 22574 ;;		_OLED_updateHandler
 22575 ;;		_floatToEngineeringFormat
 22576 ;;		_ftoa
 22577 ;; This function uses a non-reentrant model
 22578 ;;
 22579                           
 22580                           	psect	text78
 22581  01BA70                     __ptext78:
 22582                           	opt callstack 0
 22583  01BA70                     _sprintf:
 22584                           	opt callstack 12
 22585                           
 22586                           ; BSR set to: 2
 22587                           ;incstack = 0
 22588  01BA70  C28C  F29A         	movff	sprintf@wh,sprintf@pb
 22589  01BA74  C28D  F29B         	movff	sprintf@wh+1,sprintf@pb+1
 22590  01BA78  0E00               	movlw	0
 22591  01BA7A  0102               	movlb	2	; () banked
 22592  01BA7C  6F9C               	movwf	(sprintf@pb+2)& (0+255),b
 22593  01BA7E  0E00               	movlw	0
 22594  01BA80  6F9D               	movwf	(sprintf@pb+3)& (0+255),b
 22595  01BA82  0E00               	movlw	0
 22596  01BA84  6F9E               	movwf	(sprintf@pb+4)& (0+255),b
 22597  01BA86  0E90               	movlw	low (?_sprintf+4)
 22598  01BA88  6F98               	movwf	sprintf@ap& (0+255),b
 22599  01BA8A  0E02               	movlw	high (?_sprintf+4)
 22600  01BA8C  6F99               	movwf	(sprintf@ap+1)& (0+255),b
 22601                           
 22602                           ; BSR set to: 2
 22603  01BA8E  0E9A               	movlw	low sprintf@pb
 22604  01BA90  6F54               	movwf	__doprnt@pb& (0+255),b
 22605  01BA92  0E02               	movlw	high sprintf@pb
 22606  01BA94  6F55               	movwf	(__doprnt@pb+1)& (0+255),b
 22607  01BA96  C28E  F256         	movff	sprintf@f,__doprnt@f
 22608  01BA9A  C28F  F257         	movff	sprintf@f+1,__doprnt@f+1
 22609  01BA9E  0E98               	movlw	low sprintf@ap
 22610  01BAA0  6F58               	movwf	__doprnt@ap& (0+255),b
 22611  01BAA2  0E02               	movlw	high sprintf@ap
 22612  01BAA4  6F59               	movwf	(__doprnt@ap+1)& (0+255),b
 22613  01BAA6  EC00  F080         	call	__doprnt	;wreg free
 22614  01BAAA  C29A  FFD9         	movff	sprintf@pb,fsr2l
 22615  01BAAE  C29B  FFDA         	movff	sprintf@pb+1,fsr2h
 22616  01BAB2  0E00               	movlw	0
 22617  01BAB4  6EDF               	movwf	indf2,c
 22618  01BAB6  0012               	return		;funcret
 22619  01BAB8                     __end_of_sprintf:
 22620                           	opt callstack 0
 22621                           
 22622 ;; *************** function __doprnt *****************
 22623 ;; Defined at:
 22624 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;  pb              2   84[BANK2 ] PTR struct __prbuf
 22627 ;;		 -> sprintf@pb(5), printf@pb(5), 
 22628 ;;  f               2   86[BANK2 ] PTR const unsigned char 
 22629 ;;		 -> STR_358(11), STR_355(60), STR_354(24), STR_353(24), 
 22630 ;;		 -> STR_352(24), STR_351(27), STR_350(20), STR_349(35), 
 22631 ;;		 -> STR_348(34), STR_347(37), STR_346(34), STR_345(36), 
 22632 ;;		 -> STR_344(35), STR_343(33), STR_342(35), STR_341(20), 
 22633 ;;		 -> STR_340(23), STR_339(20), STR_338(22), STR_337(21), 
 22634 ;;		 -> STR_336(19), STR_335(21), STR_334(27), STR_333(18), 
 22635 ;;		 -> STR_332(11), terminalTextAttributes@print_string(16), STR_302(4), STR_301(4), 
 22636 ;;		 -> STR_300(4), STR_299(4), STR_298(5), STR_297(5), 
 22637 ;;		 -> STR_296(9), STR_295(9), STR_294(9), STR_293(8), 
 22638 ;;		 -> STR_292(9), STR_291(9), STR_290(47), STR_289(99), 
 22639 ;;		 -> STR_288(65), STR_287(37), STR_286(58), STR_285(59), 
 22640 ;;		 -> STR_284(58), STR_283(30), STR_282(71), STR_281(48), 
 22641 ;;		 -> STR_280(67), STR_279(45), STR_278(39), STR_277(8), 
 22642 ;;		 -> STR_276(69), STR_275(8), STR_274(67), STR_273(53), 
 22643 ;;		 -> STR_272(66), STR_271(62), STR_270(23), STR_269(62), 
 22644 ;;		 -> STR_268(55), STR_267(26), STR_266(51), STR_265(47), 
 22645 ;;		 -> STR_264(23), STR_263(8), STR_262(54), STR_261(58), 
 22646 ;;		 -> STR_260(66), STR_259(43), STR_258(32), STR_257(64), 
 22647 ;;		 -> STR_256(30), STR_255(31), STR_254(63), STR_253(33), 
 22648 ;;		 -> STR_252(35), STR_251(37), STR_250(40), STR_249(28), 
 22649 ;;		 -> STR_248(46), STR_247(31), STR_246(52), STR_245(14), 
 22650 ;;		 -> STR_244(28), STR_243(50), STR_242(29), STR_241(36), 
 22651 ;;		 -> STR_240(45), STR_239(88), STR_238(37), STR_237(3), 
 22652 ;;		 -> STR_236(30), STR_235(46), STR_234(39), STR_233(62), 
 22653 ;;		 -> STR_232(57), STR_231(653), STR_230(22), STR_229(3), 
 22654 ;;		 -> STR_227(29), STR_225(3), STR_224(47), STR_223(3), 
 22655 ;;		 -> STR_220(24), STR_218(23), STR_216(23), STR_214(3), 
 22656 ;;		 -> STR_213(3), STR_212(54), STR_211(3), STR_210(56), 
 22657 ;;		 -> STR_209(3), STR_208(60), STR_207(61), STR_206(3), 
 22658 ;;		 -> STR_205(62), STR_204(3), STR_203(50), STR_202(3), 
 22659 ;;		 -> STR_201(45), STR_200(3), STR_198(54), STR_196(4), 
 22660 ;;		 -> STR_195(5), STR_193(4), STR_192(5), STR_182(7), 
 22661 ;;		 -> STR_180(5), STR_173(4), STR_168(4), STR_163(11), 
 22662 ;;		 -> STR_158(11), STR_157(11), STR_156(11), STR_155(11), 
 22663 ;;		 -> STR_154(9), STR_150(11), STR_148(11), STR_147(11), 
 22664 ;;		 -> STR_146(11), STR_145(11), STR_144(9), STR_143(11), 
 22665 ;;		 -> STR_142(9), STR_141(8), STR_140(9), STR_139(8), 
 22666 ;;		 -> STR_138(9), STR_134(5), STR_124(8), STR_120(8), 
 22667 ;;		 -> STR_116(8), STR_112(8), STR_108(9), STR_103(8), 
 22668 ;;		 -> STR_98(8), STR_94(8), STR_89(8), STR_85(8), 
 22669 ;;		 -> STR_81(8), STR_68(7), STR_66(5), STR_59(11), 
 22670 ;;		 -> STR_58(10), STR_57(13), STR_56(12), STR_55(11), 
 22671 ;;		 -> STR_54(10), STR_53(10), STR_52(9), STR_51(11), 
 22672 ;;		 -> STR_50(10), STR_12(34), STR_11(29), STR_10(47), 
 22673 ;;		 -> STR_9(30), STR_8(46), STR_7(39), STR_6(62), 
 22674 ;;		 -> STR_5(57), STR_4(39), STR_3(44), STR_2(52), 
 22675 ;;		 -> STR_1(4), 
 22676 ;;  ap              2   88[BANK2 ] PTR PTR void 
 22677 ;;		 -> sprintf@ap(2), printf@ap(2), 
 22678 ;; Auto vars:     Size  Location     Type
 22679 ;;  idx             1   98[BANK2 ] unsigned char 
 22680 ;;  val             4  129[BANK2 ] unsigned long 
 22681 ;;  fval            4  125[BANK2 ] unsigned long 
 22682 ;;  tmpval          4  121[BANK2 ] struct .
 22683 ;;  flag            2  137[BANK2 ] unsigned short 
 22684 ;;  prec            2  135[BANK2 ] int 
 22685 ;;  width           2  133[BANK2 ] int 
 22686 ;;  eexp            2  119[BANK2 ] int 
 22687 ;;  len             2  117[BANK2 ] unsigned int 
 22688 ;;  cp              2  115[BANK2 ] PTR const unsigned char 
 22689 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_356(7), 
 22690 ;;		 -> _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(1
      +7), 
 22691 ;;		 -> OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@
      +return_string(40), 
 22692 ;;		 -> STR_49(10), STR_48(13), STR_47(13), STR_46(12), 
 22693 ;;		 -> STR_45(12), STR_44(13), STR_43(12), STR_32(16), 
 22694 ;;		 -> STR_31(22), STR_30(21), STR_29(27), STR_28(41), 
 22695 ;;		 -> STR_27(32), STR_26(19), STR_25(16), STR_24(15), 
 22696 ;;		 -> STR_23(16), STR_17(10), STR_16(6), STR_15(14), 
 22697 ;;		 -> STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), 
 22698 ;;		 -> LM73Convert@QI_Conv(2), NULL(0), 
 22699 ;;  c               1  139[BANK2 ] unsigned char 
 22700 ;;  d               1    0        unsigned char 
 22701 ;; Return value:  Size  Location     Type
 22702 ;;                  2   84[BANK2 ] int 
 22703 ;; Registers used:
 22704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22705 ;; Tracked objects:
 22706 ;;		On entry : 0/0
 22707 ;;		On exit  : 0/0
 22708 ;;		Unchanged: 0/0
 22709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22710 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22711 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22712 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22713 ;;      Totals:         0       0       0      56       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;Total ram usage:       56 bytes
 22715 ;; Hardware stack levels used:    1
 22716 ;; Hardware stack levels required when called:   13
 22717 ;; This function calls:
 22718 ;;		Absolute function
 22719 ;;		___awdiv
 22720 ;;		___fladd
 22721 ;;		___fleq
 22722 ;;		___flge
 22723 ;;		___flmul
 22724 ;;		___flneg
 22725 ;;		___flsub
 22726 ;;		___fltol
 22727 ;;		___lldiv
 22728 ;;		___llmod
 22729 ;;		___wmul
 22730 ;;		___xxtofl
 22731 ;;		__div_to_l_
 22732 ;;		__tdiv_to_l_
 22733 ;;		_fround
 22734 ;;		_isdigit
 22735 ;;		_putch
 22736 ;;		_scale
 22737 ;; This function is called by:
 22738 ;;		_printf
 22739 ;;		_sprintf
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text79
 22744  010000                     __ptext79:
 22745                           	opt callstack 0
 22746  010000                     __doprnt:
 22747                           	opt callstack 13
 22748                           
 22749                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 22750                           
 22751                           ;incstack = 0
 22752  010000  EF6F  F08B         	goto	u23190
 22753  010004                     l17979:
 22754                           
 22755                           ; BSR set to: 2
 22756                           ;doprnt.c: 550: if(c != '%')
 22757  010004  0E25               	movlw	37
 22758  010006  198B               	xorwf	__doprnt@c& (0+255),w,b
 22759  010008  B4D8               	btfsc	status,2,c
 22760  01000A  D036               	goto	l17989
 22761                           
 22762                           ; BSR set to: 2
 22763  01000C  EE20 F002          	lfsr	2,2
 22764  010010  5154               	movf	__doprnt@pb& (0+255),w,b
 22765  010012  26D9               	addwf	fsr2l,f,c
 22766  010014  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 22767  010016  22DA               	addwfc	fsr2h,f,c
 22768  010018  50DE               	movf	postinc2,w,c
 22769  01001A  10DE               	iorwf	postinc2,w,c
 22770  01001C  10DE               	iorwf	postinc2,w,c
 22771  01001E  B4D8               	btfsc	status,2,c
 22772  010020  D014               	goto	l17985
 22773                           
 22774                           ; BSR set to: 2
 22775  010022  EE20 F002          	lfsr	2,2
 22776  010026  5154               	movf	__doprnt@pb& (0+255),w,b
 22777  010028  26D9               	addwf	fsr2l,f,c
 22778  01002A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 22779  01002C  22DA               	addwfc	fsr2h,f,c
 22780  01002E  D802               	call	u21918
 22781  010030  EF6F  F08B         	goto	u23190
 22782  010034                     u21918:
 22783  010034  0005               	push	
 22784  010036  6EFA               	movwf	pclath,c
 22785  010038  50DE               	movf	postinc2,w,c
 22786  01003A  6EFD               	movwf	tosl,c
 22787  01003C  50DE               	movf	postinc2,w,c
 22788  01003E  6EFE               	movwf	tosh,c
 22789  010040  50DE               	movf	postinc2,w,c
 22790  010042  6EFF               	movwf	tosu,c
 22791  010044  50FA               	movf	pclath,w,c
 22792  010046  518B               	movf	__doprnt@c& (0+255),w,b
 22793  010048  0012               	return		;indir
 22794  01004A                     l17985:
 22795                           
 22796                           ; BSR set to: 2
 22797  01004A  C254  FFD9         	movff	__doprnt@pb,fsr2l
 22798  01004E  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 22799  010052  CFDE F25A          	movff	postinc2,??__doprnt
 22800  010056  CFDD F25B          	movff	postdec2,??__doprnt+1
 22801  01005A  C25A  FFD9         	movff	??__doprnt,fsr2l
 22802  01005E  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 22803  010062  C28B  FFDF         	movff	__doprnt@c,indf2
 22804                           
 22805                           ; BSR set to: 2
 22806  010066  C254  FFD9         	movff	__doprnt@pb,fsr2l
 22807  01006A  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 22808  01006E  2ADE               	incf	postinc2,f,c
 22809  010070  0E00               	movlw	0
 22810  010072  22DD               	addwfc	postdec2,f,c
 22811  010074  EF6F  F08B         	goto	u23190
 22812  010078                     l17989:
 22813                           
 22814                           ; BSR set to: 2
 22815                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 22816  010078  0E00               	movlw	0
 22817  01007A  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 22818  01007C  0E00               	movlw	0
 22819  01007E  6F85               	movwf	__doprnt@width& (0+255),b
 22820                           
 22821                           ;doprnt.c: 560: flag = 0;
 22822  010080  0E00               	movlw	0
 22823  010082  6F8A               	movwf	(__doprnt@flag+1)& (0+255),b
 22824  010084  0E00               	movlw	0
 22825  010086  6F89               	movwf	__doprnt@flag& (0+255),b
 22826  010088  D00A               	goto	l17999
 22827  01008A                     l17991:
 22828                           
 22829                           ;doprnt.c: 573: flag |= 0x01;
 22830  01008A  0102               	movlb	2	; () banked
 22831  01008C  8189               	bsf	__doprnt@flag& (0+255),0,b
 22832  01008E  D005               	goto	L6
 22833  010090                     l17993:
 22834                           
 22835                           ;doprnt.c: 580: flag |= 0x02;
 22836  010090  0102               	movlb	2	; () banked
 22837  010092  8389               	bsf	__doprnt@flag& (0+255),1,b
 22838  010094  D002               	goto	L6
 22839  010096                     l17995:
 22840                           
 22841                           ;doprnt.c: 592: flag |= 0x04;
 22842  010096  0102               	movlb	2	; () banked
 22843  010098  8589               	bsf	__doprnt@flag& (0+255),2,b
 22844  01009A                     L6:
 22845                           
 22846                           ;doprnt.c: 593: f++;
 22847  01009A  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22848  01009C  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22849  01009E                     l17999:
 22850                           
 22851                           ; BSR set to: 2
 22852  01009E  C256  FFF6         	movff	__doprnt@f,tblptrl
 22853  0100A2  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22854  0100A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22855  0100A8  6EF8               	movwf	tblptru,c
 22856  0100AA  0E0E               	movlw	(high __ramtop+-1)
 22857  0100AC  64F7               	cpfsgt	tblptrh,c
 22858  0100AE  D003               	bra	u21927
 22859  0100B0  0008               	tblrd		*
 22860  0100B2  50F5               	movf	tablat,w,c
 22861  0100B4  D005               	bra	u21920
 22862  0100B6                     u21927:
 22863  0100B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22864  0100BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22865  0100BE  50EF               	movf	indf0,w,c
 22866  0100C0                     u21920:
 22867                           
 22868                           ; Switch size 1, requested type "simple"
 22869                           ; Number of cases is 3, Range of values is 32 to 48
 22870                           ; switch strategies available:
 22871                           ; Name         Instructions Cycles
 22872                           ; simple_byte           10     6 (average)
 22873                           ;	Chosen strategy is simple_byte
 22874  0100C0  0A20               	xorlw	32	; case 32
 22875  0100C2  B4D8               	btfsc	status,2,c
 22876  0100C4  D7E2               	goto	l17991
 22877  0100C6  0A0B               	xorlw	11	; case 43
 22878  0100C8  B4D8               	btfsc	status,2,c
 22879  0100CA  D7E2               	goto	l17993
 22880  0100CC  0A1B               	xorlw	27	; case 48
 22881  0100CE  B4D8               	btfsc	status,2,c
 22882  0100D0  D7E2               	goto	l17995
 22883                           
 22884                           ;doprnt.c: 601: if(flag & 0x02)
 22885  0100D2  0102               	movlb	2	; () banked
 22886  0100D4  B389               	btfsc	__doprnt@flag& (0+255),1,b
 22887                           
 22888                           ; BSR set to: 2
 22889                           ;doprnt.c: 602: flag &= ~0x01;
 22890  0100D6  9189               	bcf	__doprnt@flag& (0+255),0,b
 22891                           
 22892                           ; BSR set to: 2
 22893                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 22894  0100D8  C256  FFF6         	movff	__doprnt@f,tblptrl
 22895  0100DC  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22896  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 22897  0100E2  6EF8               	movwf	tblptru,c
 22898  0100E4  0E0E               	movlw	(high __ramtop+-1)
 22899  0100E6  64F7               	cpfsgt	tblptrh,c
 22900  0100E8  D003               	bra	u21947
 22901  0100EA  0008               	tblrd		*
 22902  0100EC  50F5               	movf	tablat,w,c
 22903  0100EE  D005               	bra	u21940
 22904  0100F0                     u21947:
 22905  0100F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22906  0100F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22907  0100F8  50EF               	movf	indf0,w,c
 22908  0100FA                     u21940:
 22909  0100FA  EC07  F0E2         	call	_isdigit
 22910  0100FE  A0D8               	btfss	status,0,c
 22911  010100  D04C               	goto	u21980
 22912                           
 22913                           ;doprnt.c: 610: width = 0;
 22914  010102  0E00               	movlw	0
 22915  010104  0102               	movlb	2	; () banked
 22916  010106  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 22917  010108  0E00               	movlw	0
 22918  01010A  6F85               	movwf	__doprnt@width& (0+255),b
 22919  01010C                     l18007:
 22920                           
 22921                           ;doprnt.c: 612: width *= 10;
 22922  01010C  C285  F200         	movff	__doprnt@width,___wmul@multiplier
 22923  010110  C286  F201         	movff	__doprnt@width+1,___wmul@multiplier+1
 22924  010114  0E00               	movlw	0
 22925  010116  0102               	movlb	2	; () banked
 22926  010118  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22927  01011A  0E0A               	movlw	10
 22928  01011C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22929  01011E  EC5C  F0E1         	call	___wmul	;wreg free
 22930  010122  C200  F285         	movff	?___wmul,__doprnt@width
 22931  010126  C201  F286         	movff	?___wmul+1,__doprnt@width+1
 22932                           
 22933                           ;doprnt.c: 613: width += *f++ - '0';
 22934  01012A  0ED0               	movlw	208
 22935  01012C  0102               	movlb	2	; () banked
 22936  01012E  6F5A               	movwf	??__doprnt& (0+255),b
 22937  010130  0EFF               	movlw	255
 22938  010132  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 22939  010134  C256  FFF6         	movff	__doprnt@f,tblptrl
 22940  010138  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22941  01013C  0E00               	movlw	low (__mediumconst shr (0+16))
 22942  01013E  6EF8               	movwf	tblptru,c
 22943  010140  0E0E               	movlw	(high __ramtop+-1)
 22944  010142  64F7               	cpfsgt	tblptrh,c
 22945  010144  D003               	bra	u21967
 22946  010146  0008               	tblrd		*
 22947  010148  50F5               	movf	tablat,w,c
 22948  01014A  D005               	bra	u21960
 22949  01014C                     u21967:
 22950  01014C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22951  010150  CFF7 FFEA          	movff	tblptrh,fsr0h
 22952  010154  50EF               	movf	indf0,w,c
 22953  010156                     u21960:
 22954  010156  0102               	movlb	2	; () banked
 22955  010158  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 22956  01015A  6B5D               	clrf	(??__doprnt+3)& (0+255),b
 22957  01015C  515A               	movf	??__doprnt& (0+255),w,b
 22958  01015E  275C               	addwf	(??__doprnt+2)& (0+255),f,b
 22959  010160  515B               	movf	(??__doprnt+1)& (0+255),w,b
 22960  010162  235D               	addwfc	(??__doprnt+3)& (0+255),f,b
 22961  010164  515C               	movf	(??__doprnt+2)& (0+255),w,b
 22962  010166  2785               	addwf	__doprnt@width& (0+255),f,b
 22963  010168  515D               	movf	(??__doprnt+3)& (0+255),w,b
 22964  01016A  2386               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22965                           
 22966                           ; BSR set to: 2
 22967  01016C  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22968  01016E  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22969                           
 22970                           ; BSR set to: 2
 22971                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 22972  010170  C256  FFF6         	movff	__doprnt@f,tblptrl
 22973  010174  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22974  010178  0E00               	movlw	low (__mediumconst shr (0+16))
 22975  01017A  6EF8               	movwf	tblptru,c
 22976  01017C  0E0E               	movlw	(high __ramtop+-1)
 22977  01017E  64F7               	cpfsgt	tblptrh,c
 22978  010180  D003               	bra	u21977
 22979  010182  0008               	tblrd		*
 22980  010184  50F5               	movf	tablat,w,c
 22981  010186  D005               	bra	u21970
 22982  010188                     u21977:
 22983  010188  CFF6 FFE9          	movff	tblptrl,fsr0l
 22984  01018C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22985  010190  50EF               	movf	indf0,w,c
 22986  010192                     u21970:
 22987  010192  EC07  F0E2         	call	_isdigit
 22988  010196  B0D8               	btfsc	status,0,c
 22989  010198  D7B9               	goto	l18007
 22990  01019A                     u21980:
 22991                           
 22992                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 22993  01019A  C256  FFF6         	movff	__doprnt@f,tblptrl
 22994  01019E  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22995  0101A2  0E00               	movlw	low (__mediumconst shr (0+16))
 22996  0101A4  6EF8               	movwf	tblptru,c
 22997  0101A6  0E0E               	movlw	(high __ramtop+-1)
 22998  0101A8  64F7               	cpfsgt	tblptrh,c
 22999  0101AA  D003               	bra	u21997
 23000  0101AC  0008               	tblrd		*
 23001  0101AE  50F5               	movf	tablat,w,c
 23002  0101B0  D005               	bra	u21990
 23003  0101B2                     u21997:
 23004  0101B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23005  0101B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23006  0101BA  50EF               	movf	indf0,w,c
 23007  0101BC                     u21990:
 23008  0101BC  0A2E               	xorlw	46
 23009  0101BE  A4D8               	btfss	status,2,c
 23010  0101C0  D049               	goto	l18027
 23011                           
 23012                           ;doprnt.c: 624: flag |= 0x4000;
 23013  0101C2  0102               	movlb	2	; () banked
 23014  0101C4  8D8A               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23015                           
 23016                           ;doprnt.c: 625: f++;
 23017  0101C6  4B56               	infsnz	__doprnt@f& (0+255),f,b
 23018  0101C8  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 23019                           
 23020                           ; BSR set to: 2
 23021                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 23022  0101CA  0E00               	movlw	0
 23023  0101CC  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 23024  0101CE  0E00               	movlw	0
 23025  0101D0  6F87               	movwf	__doprnt@prec& (0+255),b
 23026                           
 23027                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 23028  0101D2  D02A               	goto	l18025
 23029  0101D4                     l18021:
 23030                           
 23031                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 23032  0101D4  C287  F200         	movff	__doprnt@prec,___wmul@multiplier
 23033  0101D8  C288  F201         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23034  0101DC  0E00               	movlw	0
 23035  0101DE  0102               	movlb	2	; () banked
 23036  0101E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23037  0101E2  0E0A               	movlw	10
 23038  0101E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23039  0101E6  EC5C  F0E1         	call	___wmul	;wreg free
 23040  0101EA  C256  FFF6         	movff	__doprnt@f,tblptrl
 23041  0101EE  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 23042  0101F2  0E00               	movlw	low (__mediumconst shr (0+16))
 23043  0101F4  6EF8               	movwf	tblptru,c
 23044  0101F6  0E0E               	movlw	(high __ramtop+-1)
 23045  0101F8  64F7               	cpfsgt	tblptrh,c
 23046  0101FA  D003               	bra	u22017
 23047  0101FC  0008               	tblrd		*
 23048  0101FE  50F5               	movf	tablat,w,c
 23049  010200  D005               	bra	u22010
 23050  010202                     u22017:
 23051  010202  CFF6 FFE9          	movff	tblptrl,fsr0l
 23052  010206  CFF7 FFEA          	movff	tblptrh,fsr0h
 23053  01020A  50EF               	movf	indf0,w,c
 23054  01020C                     u22010:
 23055  01020C  0102               	movlb	2	; () banked
 23056  01020E  6F5A               	movwf	??__doprnt& (0+255),b
 23057  010210  515A               	movf	??__doprnt& (0+255),w,b
 23058  010212  2700               	addwf	?___wmul& (0+255),f,b
 23059  010214  0E00               	movlw	0
 23060  010216  2301               	addwfc	(?___wmul+1)& (0+255),f,b
 23061  010218  0ED0               	movlw	208
 23062  01021A  2500               	addwf	?___wmul& (0+255),w,b
 23063  01021C  6F87               	movwf	__doprnt@prec& (0+255),b
 23064  01021E  0EFF               	movlw	255
 23065  010220  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 23066  010222  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 23067                           
 23068                           ; BSR set to: 2
 23069  010224  4B56               	infsnz	__doprnt@f& (0+255),f,b
 23070  010226  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 23071  010228                     l18025:
 23072                           
 23073                           ; BSR set to: 2
 23074  010228  C256  FFF6         	movff	__doprnt@f,tblptrl
 23075  01022C  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 23076  010230  0E00               	movlw	low (__mediumconst shr (0+16))
 23077  010232  6EF8               	movwf	tblptru,c
 23078  010234  0E0E               	movlw	(high __ramtop+-1)
 23079  010236  64F7               	cpfsgt	tblptrh,c
 23080  010238  D003               	bra	u22027
 23081  01023A  0008               	tblrd		*
 23082  01023C  50F5               	movf	tablat,w,c
 23083  01023E  D005               	bra	u22020
 23084  010240                     u22027:
 23085  010240  CFF6 FFE9          	movff	tblptrl,fsr0l
 23086  010244  CFF7 FFEA          	movff	tblptrh,fsr0h
 23087  010248  50EF               	movf	indf0,w,c
 23088  01024A                     u22020:
 23089  01024A  EC07  F0E2         	call	_isdigit
 23090  01024E  A0D8               	btfss	status,0,c
 23091  010250  D12A               	goto	l18095
 23092  010252  D7C0               	goto	l18021
 23093  010254                     l18027:
 23094                           
 23095                           ;doprnt.c: 645: prec = 0;
 23096  010254  0E00               	movlw	0
 23097  010256  0102               	movlb	2	; () banked
 23098  010258  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 23099  01025A  0E00               	movlw	0
 23100  01025C  6F87               	movwf	__doprnt@prec& (0+255),b
 23101                           
 23102                           ; BSR set to: 2
 23103                           ;doprnt.c: 647: flag |= 0x1000;
 23104  01025E  898A               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23105  010260  D122               	goto	l18095
 23106  010262                     l18031:
 23107                           
 23108                           ; BSR set to: 2
 23109                           ;doprnt.c: 662: flag |= 0x10;
 23110  010262  8989               	bsf	__doprnt@flag& (0+255),4,b
 23111                           
 23112                           ;doprnt.c: 663: goto loop;
 23113  010264  D120               	goto	l18095
 23114  010266                     l18033:
 23115                           
 23116                           ; BSR set to: 2
 23117                           ;doprnt.c: 682: flag |= 0x400;
 23118  010266  858A               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23119                           
 23120                           ;doprnt.c: 683: break;
 23121  010268  D159               	goto	l18097
 23122  01026A                     l18035:
 23123                           
 23124                           ; BSR set to: 2
 23125                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 23126  01026A  8F89               	bsf	__doprnt@flag& (0+255),7,b
 23127                           
 23128                           ;doprnt.c: 742: break;
 23129  01026C  D157               	goto	l18097
 23130  01026E                     l18037:
 23131                           
 23132                           ; BSR set to: 2
 23133                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23134  01026E  C258  FFD9         	movff	__doprnt@ap,fsr2l
 23135  010272  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 23136  010276  CFDF F25A          	movff	indf2,??__doprnt
 23137  01027A  0E02               	movlw	2
 23138  01027C  26DE               	addwf	postinc2,f,c
 23139  01027E  CFDF F25B          	movff	indf2,??__doprnt+1
 23140  010282  0E00               	movlw	0
 23141  010284  22DD               	addwfc	postdec2,f,c
 23142  010286  C25A  FFD9         	movff	??__doprnt,fsr2l
 23143  01028A  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23144  01028E  CFDE F273          	movff	postinc2,__doprnt@cp
 23145  010292  CFDD F274          	movff	postdec2,__doprnt@cp+1
 23146                           
 23147                           ; BSR set to: 2
 23148                           ;doprnt.c: 759: if(!cp)
 23149  010296  5173               	movf	__doprnt@cp& (0+255),w,b
 23150  010298  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 23151  01029A  A4D8               	btfss	status,2,c
 23152  01029C  D004               	goto	l18043
 23153                           
 23154                           ; BSR set to: 2
 23155                           ;doprnt.c: 760: cp = "(null)";
 23156  01029E  0E6A               	movlw	low STR_356
 23157  0102A0  6F73               	movwf	__doprnt@cp& (0+255),b
 23158  0102A2  0EFF               	movlw	high STR_356
 23159  0102A4  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
 23160  0102A6                     l18043:
 23161                           
 23162                           ; BSR set to: 2
 23163                           ;doprnt.c: 764: len = 0;
 23164  0102A6  0E00               	movlw	0
 23165  0102A8  6F76               	movwf	(__doprnt@len+1)& (0+255),b
 23166  0102AA  0E00               	movlw	0
 23167  0102AC  6F75               	movwf	__doprnt@len& (0+255),b
 23168                           
 23169                           ;doprnt.c: 765: while(cp[len])
 23170  0102AE  D003               	goto	l18047
 23171  0102B0                     l18045:
 23172                           
 23173                           ;doprnt.c: 766: len++;
 23174  0102B0  0102               	movlb	2	; () banked
 23175  0102B2  4B75               	infsnz	__doprnt@len& (0+255),f,b
 23176  0102B4  2B76               	incf	(__doprnt@len+1)& (0+255),f,b
 23177  0102B6                     l18047:
 23178                           
 23179                           ; BSR set to: 2
 23180  0102B6  5175               	movf	__doprnt@len& (0+255),w,b
 23181  0102B8  2573               	addwf	__doprnt@cp& (0+255),w,b
 23182  0102BA  6F5A               	movwf	??__doprnt& (0+255),b
 23183  0102BC  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 23184  0102BE  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 23185  0102C0  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23186  0102C2  C25A  FFF6         	movff	??__doprnt,tblptrl
 23187  0102C6  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 23188  0102CA  0E00               	movlw	low (__mediumconst shr (0+16))
 23189  0102CC  6EF8               	movwf	tblptru,c
 23190  0102CE  0E0E               	movlw	(high __ramtop+-1)
 23191  0102D0  64F7               	cpfsgt	tblptrh,c
 23192  0102D2  D003               	bra	u22057
 23193  0102D4  0008               	tblrd		*
 23194  0102D6  50F5               	movf	tablat,w,c
 23195  0102D8  D005               	bra	u22050
 23196  0102DA                     u22057:
 23197  0102DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 23198  0102DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 23199  0102E2  50EF               	movf	indf0,w,c
 23200  0102E4                     u22050:
 23201  0102E4  0900               	iorlw	0
 23202  0102E6  A4D8               	btfss	status,2,c
 23203  0102E8  D7E3               	goto	l18045
 23204  0102EA                     u22060:
 23205                           
 23206                           ;doprnt.c: 772: if(prec && prec < len)
 23207  0102EA  0102               	movlb	2	; () banked
 23208  0102EC  5187               	movf	__doprnt@prec& (0+255),w,b
 23209  0102EE  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23210  0102F0  B4D8               	btfsc	status,2,c
 23211  0102F2  D00A               	goto	l18055
 23212                           
 23213                           ; BSR set to: 2
 23214  0102F4  5175               	movf	__doprnt@len& (0+255),w,b
 23215  0102F6  5D87               	subwf	__doprnt@prec& (0+255),w,b
 23216  0102F8  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 23217  0102FA  5988               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 23218  0102FC  B0D8               	btfsc	status,0,c
 23219  0102FE  D004               	goto	l18055
 23220                           
 23221                           ; BSR set to: 2
 23222                           ;doprnt.c: 773: len = prec;
 23223  010300  C287  F275         	movff	__doprnt@prec,__doprnt@len
 23224  010304  C288  F276         	movff	__doprnt@prec+1,__doprnt@len+1
 23225  010308                     l18055:
 23226                           
 23227                           ; BSR set to: 2
 23228                           ;doprnt.c: 776: if(width > len)
 23229  010308  5185               	movf	__doprnt@width& (0+255),w,b
 23230  01030A  5D75               	subwf	__doprnt@len& (0+255),w,b
 23231  01030C  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 23232  01030E  5976               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23233  010310  B0D8               	btfsc	status,0,c
 23234  010312  D005               	goto	l18059
 23235                           
 23236                           ; BSR set to: 2
 23237                           ;doprnt.c: 777: width -= len;
 23238  010314  5175               	movf	__doprnt@len& (0+255),w,b
 23239  010316  5F85               	subwf	__doprnt@width& (0+255),f,b
 23240  010318  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 23241  01031A  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23242  01031C  D038               	goto	l18069
 23243  01031E                     l18059:
 23244                           
 23245                           ; BSR set to: 2
 23246                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 23247  01031E  0E00               	movlw	0
 23248  010320  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 23249  010322  0E00               	movlw	0
 23250  010324  6F85               	movwf	__doprnt@width& (0+255),b
 23251  010326  D033               	goto	l18069
 23252  010328                     l18061:
 23253                           
 23254                           ; BSR set to: 2
 23255  010328  EE20 F002          	lfsr	2,2
 23256  01032C  5154               	movf	__doprnt@pb& (0+255),w,b
 23257  01032E  26D9               	addwf	fsr2l,f,c
 23258  010330  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23259  010332  22DA               	addwfc	fsr2h,f,c
 23260  010334  50DE               	movf	postinc2,w,c
 23261  010336  10DE               	iorwf	postinc2,w,c
 23262  010338  10DE               	iorwf	postinc2,w,c
 23263  01033A  B4D8               	btfsc	status,2,c
 23264  01033C  D013               	goto	l18065
 23265                           
 23266                           ; BSR set to: 2
 23267  01033E  EE20 F002          	lfsr	2,2
 23268  010342  5154               	movf	__doprnt@pb& (0+255),w,b
 23269  010344  26D9               	addwf	fsr2l,f,c
 23270  010346  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23271  010348  22DA               	addwfc	fsr2h,f,c
 23272  01034A  D801               	call	u22118
 23273  01034C  D020               	goto	l18069
 23274  01034E                     u22118:
 23275  01034E  0005               	push	
 23276  010350  6EFA               	movwf	pclath,c
 23277  010352  50DE               	movf	postinc2,w,c
 23278  010354  6EFD               	movwf	tosl,c
 23279  010356  50DE               	movf	postinc2,w,c
 23280  010358  6EFE               	movwf	tosh,c
 23281  01035A  50DE               	movf	postinc2,w,c
 23282  01035C  6EFF               	movwf	tosu,c
 23283  01035E  50FA               	movf	pclath,w,c
 23284  010360  0E20               	movlw	32
 23285  010362  0012               	return		;indir
 23286  010364                     l18065:
 23287                           
 23288                           ; BSR set to: 2
 23289  010364  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23290  010368  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23291  01036C  CFDE F25A          	movff	postinc2,??__doprnt
 23292  010370  CFDD F25B          	movff	postdec2,??__doprnt+1
 23293  010374  C25A  FFD9         	movff	??__doprnt,fsr2l
 23294  010378  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23295  01037C  0E20               	movlw	32
 23296  01037E  6EDF               	movwf	indf2,c
 23297                           
 23298                           ; BSR set to: 2
 23299  010380  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23300  010384  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23301  010388  2ADE               	incf	postinc2,f,c
 23302  01038A  0E00               	movlw	0
 23303  01038C  22DD               	addwfc	postdec2,f,c
 23304  01038E                     l18069:
 23305  01038E  0102               	movlb	2	; () banked
 23306  010390  0785               	decf	__doprnt@width& (0+255),f,b
 23307  010392  A0D8               	btfss	status,0,c
 23308  010394  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 23309  010396  2985               	incf	__doprnt@width& (0+255),w,b
 23310  010398  E1C7               	bnz	l18061
 23311  01039A  2986               	incf	(__doprnt@width+1)& (0+255),w,b
 23312  01039C  B4D8               	btfsc	status,2,c
 23313  01039E  D05B               	goto	l18083
 23314  0103A0  D7C3               	goto	l18061
 23315  0103A2                     l18071:
 23316                           
 23317                           ; BSR set to: 2
 23318  0103A2  EE20 F002          	lfsr	2,2
 23319  0103A6  5154               	movf	__doprnt@pb& (0+255),w,b
 23320  0103A8  26D9               	addwf	fsr2l,f,c
 23321  0103AA  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23322  0103AC  22DA               	addwfc	fsr2h,f,c
 23323  0103AE  50DE               	movf	postinc2,w,c
 23324  0103B0  10DE               	iorwf	postinc2,w,c
 23325  0103B2  10DE               	iorwf	postinc2,w,c
 23326  0103B4  B4D8               	btfsc	status,2,c
 23327  0103B6  D027               	goto	l18077
 23328                           
 23329                           ; BSR set to: 2
 23330  0103B8  EE20 F002          	lfsr	2,2
 23331  0103BC  5154               	movf	__doprnt@pb& (0+255),w,b
 23332  0103BE  26D9               	addwf	fsr2l,f,c
 23333  0103C0  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23334  0103C2  22DA               	addwfc	fsr2h,f,c
 23335  0103C4  D801               	call	u22148
 23336  0103C6  D01B               	goto	u22149
 23337  0103C8                     u22148:
 23338  0103C8  0005               	push	
 23339  0103CA  6EFA               	movwf	pclath,c
 23340  0103CC  50DE               	movf	postinc2,w,c
 23341  0103CE  6EFD               	movwf	tosl,c
 23342  0103D0  50DE               	movf	postinc2,w,c
 23343  0103D2  6EFE               	movwf	tosh,c
 23344  0103D4  50DE               	movf	postinc2,w,c
 23345  0103D6  6EFF               	movwf	tosu,c
 23346  0103D8  50FA               	movf	pclath,w,c
 23347  0103DA  C273  FFF6         	movff	__doprnt@cp,tblptrl
 23348  0103DE  C274  FFF7         	movff	__doprnt@cp+1,tblptrh
 23349  0103E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23350  0103E4  6EF8               	movwf	tblptru,c
 23351  0103E6  0E0E               	movlw	(high __ramtop+-1)
 23352  0103E8  64F7               	cpfsgt	tblptrh,c
 23353  0103EA  D003               	bra	u22157
 23354  0103EC  0008               	tblrd		*
 23355  0103EE  50F5               	movf	tablat,w,c
 23356  0103F0  D005               	bra	u22150
 23357  0103F2                     u22157:
 23358  0103F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23359  0103F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23360  0103FA  50EF               	movf	indf0,w,c
 23361  0103FC                     u22150:
 23362  0103FC  0012               	return		;indir
 23363  0103FE                     u22149:
 23364  0103FE  0102               	movlb	2	; () banked
 23365  010400  4B73               	infsnz	__doprnt@cp& (0+255),f,b
 23366  010402  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
 23367  010404  D028               	goto	l18083
 23368  010406                     l18077:
 23369                           
 23370                           ; BSR set to: 2
 23371  010406  C273  FFF6         	movff	__doprnt@cp,tblptrl
 23372  01040A  C274  FFF7         	movff	__doprnt@cp+1,tblptrh
 23373  01040E  0E00               	movlw	low (__mediumconst shr (0+16))
 23374  010410  6EF8               	movwf	tblptru,c
 23375  010412  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23376  010416  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23377  01041A  CFDE F25A          	movff	postinc2,??__doprnt
 23378  01041E  CFDD F25B          	movff	postdec2,??__doprnt+1
 23379  010422  C25A  FFD9         	movff	??__doprnt,fsr2l
 23380  010426  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23381  01042A  0E0E               	movlw	(high __ramtop+-1)
 23382  01042C  64F7               	cpfsgt	tblptrh,c
 23383  01042E  D003               	bra	u22167
 23384  010430  0008               	tblrd		*
 23385  010432  50F5               	movf	tablat,w,c
 23386  010434  D005               	bra	u22160
 23387  010436                     u22167:
 23388  010436  CFF6 FFE9          	movff	tblptrl,fsr0l
 23389  01043A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23390  01043E  50EF               	movf	indf0,w,c
 23391  010440                     u22160:
 23392  010440  6EDF               	movwf	indf2,c
 23393  010442  0102               	movlb	2	; () banked
 23394  010444  4B73               	infsnz	__doprnt@cp& (0+255),f,b
 23395  010446  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
 23396                           
 23397                           ; BSR set to: 2
 23398  010448  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23399  01044C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23400  010450  2ADE               	incf	postinc2,f,c
 23401  010452  0E00               	movlw	0
 23402  010454  22DD               	addwfc	postdec2,f,c
 23403  010456                     l18083:
 23404                           
 23405                           ; BSR set to: 2
 23406  010456  0775               	decf	__doprnt@len& (0+255),f,b
 23407  010458  A0D8               	btfss	status,0,c
 23408  01045A  0776               	decf	(__doprnt@len+1)& (0+255),f,b
 23409  01045C  2975               	incf	__doprnt@len& (0+255),w,b
 23410  01045E  E1A1               	bnz	l18071
 23411  010460  2976               	incf	(__doprnt@len+1)& (0+255),w,b
 23412  010462  B4D8               	btfsc	status,2,c
 23413  010464  EF6F  F08B         	goto	u23190
 23414  010468  D79C               	goto	l18071
 23415  01046A                     l18085:
 23416                           
 23417                           ; BSR set to: 2
 23418                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23419  01046A  C258  FFD9         	movff	__doprnt@ap,fsr2l
 23420  01046E  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 23421  010472  CFDF F25A          	movff	indf2,??__doprnt
 23422  010476  0E02               	movlw	2
 23423  010478  26DE               	addwf	postinc2,f,c
 23424  01047A  CFDF F25B          	movff	indf2,??__doprnt+1
 23425  01047E  0E00               	movlw	0
 23426  010480  22DD               	addwfc	postdec2,f,c
 23427  010482  C25A  FFD9         	movff	??__doprnt,fsr2l
 23428  010486  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23429  01048A  50DF               	movf	indf2,w,c
 23430  01048C  6F8B               	movwf	__doprnt@c& (0+255),b
 23431  01048E                     l18087:
 23432                           
 23433                           ; BSR set to: 2
 23434                           ;doprnt.c: 824: cp = (char *)&c;
 23435  01048E  0E8B               	movlw	low __doprnt@c
 23436  010490  6F73               	movwf	__doprnt@cp& (0+255),b
 23437  010492  0E02               	movlw	high __doprnt@c
 23438  010494  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
 23439                           
 23440                           ; BSR set to: 2
 23441                           ;doprnt.c: 825: len = 1;
 23442  010496  0E00               	movlw	0
 23443  010498  6F76               	movwf	(__doprnt@len+1)& (0+255),b
 23444  01049A  0E01               	movlw	1
 23445  01049C  6F75               	movwf	__doprnt@len& (0+255),b
 23446                           
 23447                           ;doprnt.c: 826: goto dostring;
 23448  01049E  D725               	goto	u22060
 23449  0104A0                     l18091:
 23450                           
 23451                           ; BSR set to: 2
 23452                           ;doprnt.c: 837: flag |= 0xC0;
 23453  0104A0  0EC0               	movlw	192
 23454  0104A2  1389               	iorwf	__doprnt@flag& (0+255),f,b
 23455                           
 23456                           ;doprnt.c: 838: break;
 23457  0104A4  D03B               	goto	l18097
 23458  0104A6                     l18095:
 23459  0104A6  0102               	movlb	2	; () banked
 23460  0104A8  5156               	movf	__doprnt@f& (0+255),w,b
 23461  0104AA  6F5A               	movwf	??__doprnt& (0+255),b
 23462  0104AC  5157               	movf	(__doprnt@f+1)& (0+255),w,b
 23463  0104AE  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23464  0104B0  4B56               	infsnz	__doprnt@f& (0+255),f,b
 23465  0104B2  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 23466  0104B4  C25A  FFF6         	movff	??__doprnt,tblptrl
 23467  0104B8  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 23468  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
 23469  0104BE  6EF8               	movwf	tblptru,c
 23470  0104C0  0E0E               	movlw	(high __ramtop+-1)
 23471  0104C2  64F7               	cpfsgt	tblptrh,c
 23472  0104C4  D003               	bra	u22187
 23473  0104C6  0008               	tblrd		*
 23474  0104C8  50F5               	movf	tablat,w,c
 23475  0104CA  D005               	bra	u22180
 23476  0104CC                     u22187:
 23477  0104CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23478  0104D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23479  0104D4  50EF               	movf	indf0,w,c
 23480  0104D6                     u22180:
 23481  0104D6  0102               	movlb	2	; () banked
 23482  0104D8  6F8B               	movwf	__doprnt@c& (0+255),b
 23483  0104DA  518B               	movf	__doprnt@c& (0+255),w,b
 23484                           
 23485                           ; Switch size 1, requested type "simple"
 23486                           ; Number of cases is 10, Range of values is 0 to 120
 23487                           ; switch strategies available:
 23488                           ; Name         Instructions Cycles
 23489                           ; simple_byte           31    16 (average)
 23490                           ;	Chosen strategy is simple_byte
 23491  0104DC  0A00               	xorlw	0	; case 0
 23492  0104DE  B4D8               	btfsc	status,2,c
 23493  0104E0  EF8D  F08B         	goto	u23210
 23494  0104E4  0A58               	xorlw	88	; case 88
 23495  0104E6  B4D8               	btfsc	status,2,c
 23496  0104E8  D6C0               	goto	l18035
 23497  0104EA  0A3B               	xorlw	59	; case 99
 23498  0104EC  B4D8               	btfsc	status,2,c
 23499  0104EE  D7BD               	goto	l18085
 23500  0104F0  0A07               	xorlw	7	; case 100
 23501  0104F2  B4D8               	btfsc	status,2,c
 23502  0104F4  D013               	goto	l18097
 23503  0104F6  0A02               	xorlw	2	; case 102
 23504  0104F8  B4D8               	btfsc	status,2,c
 23505  0104FA  D6B5               	goto	l18033
 23506  0104FC  0A0F               	xorlw	15	; case 105
 23507  0104FE  B4D8               	btfsc	status,2,c
 23508  010500  D00D               	goto	l18097
 23509  010502  0A05               	xorlw	5	; case 108
 23510  010504  B4D8               	btfsc	status,2,c
 23511  010506  D6AD               	goto	l18031
 23512  010508  0A1F               	xorlw	31	; case 115
 23513  01050A  B4D8               	btfsc	status,2,c
 23514  01050C  D6B0               	goto	l18037
 23515  01050E  0A06               	xorlw	6	; case 117
 23516  010510  B4D8               	btfsc	status,2,c
 23517  010512  D7C6               	goto	l18091
 23518  010514  0A0D               	xorlw	13	; case 120
 23519  010516  B4D8               	btfsc	status,2,c
 23520  010518  D6A8               	goto	l18035
 23521  01051A  D7B9               	goto	l18087
 23522  01051C                     l18097:
 23523                           
 23524                           ; BSR set to: 2
 23525                           ;doprnt.c: 844: if(flag & (0x700)) {
 23526  01051C  0E07               	movlw	7
 23527  01051E  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23528  010520  B4D8               	btfsc	status,2,c
 23529  010522  EF0F  F088         	goto	l18341
 23530                           
 23531                           ; BSR set to: 2
 23532                           ;doprnt.c: 846: if(flag & 0x1000)
 23533  010526  A98A               	btfss	(__doprnt@flag+1)& (0+255),4,b
 23534  010528  D004               	goto	l18103
 23535                           
 23536                           ; BSR set to: 2
 23537                           ;doprnt.c: 848: prec = 6;
 23538  01052A  0E00               	movlw	0
 23539  01052C  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 23540  01052E  0E06               	movlw	6
 23541  010530  6F87               	movwf	__doprnt@prec& (0+255),b
 23542  010532                     l18103:
 23543                           
 23544                           ; BSR set to: 2
 23545                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 23546  010532  C258  FFD9         	movff	__doprnt@ap,fsr2l
 23547  010536  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 23548  01053A  CFDF F25A          	movff	indf2,??__doprnt
 23549  01053E  0E04               	movlw	4
 23550  010540  26DE               	addwf	postinc2,f,c
 23551  010542  CFDF F25B          	movff	indf2,??__doprnt+1
 23552  010546  0E00               	movlw	0
 23553  010548  22DD               	addwfc	postdec2,f,c
 23554  01054A  C25A  FFD9         	movff	??__doprnt,fsr2l
 23555  01054E  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23556  010552  CFDE F27D          	movff	postinc2,__doprnt@fval
 23557  010556  CFDE F27E          	movff	postinc2,__doprnt@fval+1
 23558  01055A  CFDE F27F          	movff	postinc2,__doprnt@fval+2
 23559  01055E  CFDE F280          	movff	postinc2,__doprnt@fval+3
 23560                           
 23561                           ; BSR set to: 2
 23562                           ;doprnt.c: 850: if(fval < 0.0) {
 23563  010562  AF80               	btfss	(__doprnt@fval+3)& (0+255),7,b
 23564  010564  D015               	goto	l18111
 23565                           
 23566                           ; BSR set to: 2
 23567                           ;doprnt.c: 851: fval = -fval;
 23568  010566  C27D  F200         	movff	__doprnt@fval,___flneg@f1
 23569  01056A  C27E  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 23570  01056E  C27F  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 23571  010572  C280  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 23572  010576  ECAE  F0E0         	call	___flneg
 23573  01057A  C200  F27D         	movff	?___flneg,__doprnt@fval
 23574  01057E  C201  F27E         	movff	?___flneg+1,__doprnt@fval+1
 23575  010582  C202  F27F         	movff	?___flneg+2,__doprnt@fval+2
 23576  010586  C203  F280         	movff	?___flneg+3,__doprnt@fval+3
 23577                           
 23578                           ;doprnt.c: 852: flag |= 0x03;
 23579  01058A  0E03               	movlw	3
 23580  01058C  0102               	movlb	2	; () banked
 23581  01058E  1389               	iorwf	__doprnt@flag& (0+255),f,b
 23582  010590                     l18111:
 23583                           
 23584                           ; BSR set to: 2
 23585                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 23586  010590  0E00               	movlw	0
 23587  010592  6F78               	movwf	(__doprnt@eexp+1)& (0+255),b
 23588  010594  0E00               	movlw	0
 23589  010596  6F77               	movwf	__doprnt@eexp& (0+255),b
 23590                           
 23591                           ; BSR set to: 2
 23592                           ;doprnt.c: 855: if( fval!=0) {
 23593  010598  C27D  F200         	movff	__doprnt@fval,___fleq@ff1
 23594  01059C  C27E  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23595  0105A0  C27F  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23596  0105A4  C280  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23597  0105A8  0E00               	movlw	0
 23598  0105AA  6F04               	movwf	___fleq@ff2& (0+255),b
 23599  0105AC  0E00               	movlw	0
 23600  0105AE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23601  0105B0  0E00               	movlw	0
 23602  0105B2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23603  0105B4  0E00               	movlw	0
 23604  0105B6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23605  0105B8  EC5D  F0D7         	call	___fleq	;wreg free
 23606  0105BC  0102               	movlb	2	; () banked
 23607  0105BE  B0D8               	btfsc	status,0,c
 23608  0105C0  D084               	goto	l18139
 23609                           
 23610                           ; BSR set to: 2
 23611                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 23612  0105C2  357F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 23613  0105C4  3580               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 23614  0105C6  0F82               	addlw	130
 23615  0105C8  6F77               	movwf	__doprnt@eexp& (0+255),b
 23616  0105CA  6B78               	clrf	(__doprnt@eexp+1)& (0+255),b
 23617  0105CC  0EFF               	movlw	255
 23618  0105CE  2378               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23619                           
 23620                           ; BSR set to: 2
 23621                           ;doprnt.c: 857: eexp--;
 23622  0105D0  0777               	decf	__doprnt@eexp& (0+255),f,b
 23623  0105D2  A0D8               	btfss	status,0,c
 23624  0105D4  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23625                           
 23626                           ; BSR set to: 2
 23627                           ;doprnt.c: 858: eexp *= 3;
 23628  0105D6  C277  F200         	movff	__doprnt@eexp,___wmul@multiplier
 23629  0105DA  C278  F201         	movff	__doprnt@eexp+1,___wmul@multiplier+1
 23630  0105DE  0E00               	movlw	0
 23631  0105E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23632  0105E2  0E03               	movlw	3
 23633  0105E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23634  0105E6  EC5C  F0E1         	call	___wmul	;wreg free
 23635  0105EA  C200  F277         	movff	?___wmul,__doprnt@eexp
 23636  0105EE  C201  F278         	movff	?___wmul+1,__doprnt@eexp+1
 23637                           
 23638                           ;doprnt.c: 859: eexp /= 10;
 23639  0105F2  C277  F206         	movff	__doprnt@eexp,___awdiv@dividend
 23640  0105F6  C278  F207         	movff	__doprnt@eexp+1,___awdiv@dividend+1
 23641  0105FA  0E00               	movlw	0
 23642  0105FC  0102               	movlb	2	; () banked
 23643  0105FE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23644  010600  0E0A               	movlw	10
 23645  010602  6F08               	movwf	___awdiv@divisor& (0+255),b
 23646  010604  ECE8  F0D7         	call	___awdiv	;wreg free
 23647  010608  C206  F277         	movff	?___awdiv,__doprnt@eexp
 23648  01060C  C207  F278         	movff	?___awdiv+1,__doprnt@eexp+1
 23649                           
 23650                           ;doprnt.c: 860: if(eexp < 0)
 23651  010610  0102               	movlb	2	; () banked
 23652  010612  AF78               	btfss	(__doprnt@eexp+1)& (0+255),7,b
 23653  010614  D003               	goto	l18127
 23654                           
 23655                           ; BSR set to: 2
 23656                           ;doprnt.c: 861: eexp--;
 23657  010616  0777               	decf	__doprnt@eexp& (0+255),f,b
 23658  010618  A0D8               	btfss	status,0,c
 23659  01061A  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23660  01061C                     l18127:
 23661                           
 23662                           ; BSR set to: 2
 23663                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 23664  01061C  5177               	movf	__doprnt@eexp& (0+255),w,b
 23665  01061E  0800               	sublw	0
 23666  010620  EC22  F0AA         	call	_scale
 23667  010624  C227  F279         	movff	?_scale,__doprnt@tmpval
 23668  010628  C228  F27A         	movff	?_scale+1,__doprnt@tmpval+1
 23669  01062C  C229  F27B         	movff	?_scale+2,__doprnt@tmpval+2
 23670  010630  C22A  F27C         	movff	?_scale+3,__doprnt@tmpval+3
 23671                           
 23672                           ;doprnt.c: 866: tmpval.integ *= fval;
 23673  010634  C279  F20E         	movff	__doprnt@tmpval,___flmul@b
 23674  010638  C27A  F20F         	movff	__doprnt@tmpval+1,___flmul@b+1
 23675  01063C  C27B  F210         	movff	__doprnt@tmpval+2,___flmul@b+2
 23676  010640  C27C  F211         	movff	__doprnt@tmpval+3,___flmul@b+3
 23677  010644  C27D  F212         	movff	__doprnt@fval,___flmul@a
 23678  010648  C27E  F213         	movff	__doprnt@fval+1,___flmul@a+1
 23679  01064C  C27F  F214         	movff	__doprnt@fval+2,___flmul@a+2
 23680  010650  C280  F215         	movff	__doprnt@fval+3,___flmul@a+3
 23681  010654  EC7A  F0B3         	call	___flmul	;wreg free
 23682  010658  C20E  F279         	movff	?___flmul,__doprnt@tmpval
 23683  01065C  C20F  F27A         	movff	?___flmul+1,__doprnt@tmpval+1
 23684  010660  C210  F27B         	movff	?___flmul+2,__doprnt@tmpval+2
 23685  010664  C211  F27C         	movff	?___flmul+3,__doprnt@tmpval+3
 23686                           
 23687                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 23688  010668  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23689  01066C  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23690  010670  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23691  010674  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23692  010678  0E00               	movlw	0
 23693  01067A  0102               	movlb	2	; () banked
 23694  01067C  6F04               	movwf	___flge@ff2& (0+255),b
 23695  01067E  0E00               	movlw	0
 23696  010680  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23697  010682  0E80               	movlw	128
 23698  010684  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23699  010686  0E3F               	movlw	63
 23700  010688  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23701  01068A  EC85  F0D2         	call	___flge	;wreg free
 23702  01068E  0102               	movlb	2	; () banked
 23703  010690  B0D8               	btfsc	status,0,c
 23704  010692  D004               	goto	l18135
 23705                           
 23706                           ; BSR set to: 2
 23707                           ;doprnt.c: 868: eexp--;
 23708  010694  0777               	decf	__doprnt@eexp& (0+255),f,b
 23709  010696  A0D8               	btfss	status,0,c
 23710  010698  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23711  01069A  D017               	goto	l18139
 23712  01069C                     l18135:
 23713                           
 23714                           ; BSR set to: 2
 23715                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 23716  01069C  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23717  0106A0  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23718  0106A4  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23719  0106A8  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23720  0106AC  0E00               	movlw	0
 23721  0106AE  6F04               	movwf	___flge@ff2& (0+255),b
 23722  0106B0  0E00               	movlw	0
 23723  0106B2  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23724  0106B4  0E20               	movlw	32
 23725  0106B6  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23726  0106B8  0E41               	movlw	65
 23727  0106BA  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23728  0106BC  EC85  F0D2         	call	___flge	;wreg free
 23729  0106C0  0102               	movlb	2	; () banked
 23730  0106C2  A0D8               	btfss	status,0,c
 23731  0106C4  D002               	goto	l18139
 23732                           
 23733                           ; BSR set to: 2
 23734                           ;doprnt.c: 870: eexp++;
 23735  0106C6  4B77               	infsnz	__doprnt@eexp& (0+255),f,b
 23736  0106C8  2B78               	incf	(__doprnt@eexp+1)& (0+255),f,b
 23737  0106CA                     l18139:
 23738                           
 23739                           ; BSR set to: 2
 23740                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 23741  0106CA  BF88               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 23742  0106CC  D006               	goto	u22260
 23743  0106CE  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 23744  0106D0  E121               	bnz	l18143
 23745  0106D2  0E0D               	movlw	13
 23746  0106D4  5D87               	subwf	__doprnt@prec& (0+255),w,b
 23747  0106D6  B0D8               	btfsc	status,0,c
 23748  0106D8  D01D               	goto	l18143
 23749  0106DA                     u22260:
 23750                           
 23751                           ; BSR set to: 2
 23752                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 23753  0106DA  C27D  F234         	movff	__doprnt@fval,___fladd@b
 23754  0106DE  C27E  F235         	movff	__doprnt@fval+1,___fladd@b+1
 23755  0106E2  C27F  F236         	movff	__doprnt@fval+2,___fladd@b+2
 23756  0106E6  C280  F237         	movff	__doprnt@fval+3,___fladd@b+3
 23757  0106EA  5187               	movf	__doprnt@prec& (0+255),w,b
 23758  0106EC  EC73  F0BE         	call	_fround
 23759  0106F0  C227  F238         	movff	?_fround,___fladd@a
 23760  0106F4  C228  F239         	movff	?_fround+1,___fladd@a+1
 23761  0106F8  C229  F23A         	movff	?_fround+2,___fladd@a+2
 23762  0106FC  C22A  F23B         	movff	?_fround+3,___fladd@a+3
 23763  010700  EC77  F0B8         	call	___fladd	;wreg free
 23764  010704  C234  F27D         	movff	?___fladd,__doprnt@fval
 23765  010708  C235  F27E         	movff	?___fladd+1,__doprnt@fval+1
 23766  01070C  C236  F27F         	movff	?___fladd+2,__doprnt@fval+2
 23767  010710  C237  F280         	movff	?___fladd+3,__doprnt@fval+3
 23768  010714                     l18143:
 23769                           
 23770                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 23771  010714  0102               	movlb	2	; () banked
 23772  010716  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23773  010718  D006               	goto	u22270
 23774  01071A  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23775  01071C  E131               	bnz	l18151
 23776  01071E  0E0A               	movlw	10
 23777  010720  5D77               	subwf	__doprnt@eexp& (0+255),w,b
 23778  010722  B0D8               	btfsc	status,0,c
 23779  010724  D02D               	goto	u22300
 23780  010726                     u22270:
 23781                           
 23782                           ; BSR set to: 2
 23783  010726  C27D  F200         	movff	__doprnt@fval,___fleq@ff1
 23784  01072A  C27E  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23785  01072E  C27F  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23786  010732  C280  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23787  010736  0E00               	movlw	0
 23788  010738  6F04               	movwf	___fleq@ff2& (0+255),b
 23789  01073A  0E00               	movlw	0
 23790  01073C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23791  01073E  0E00               	movlw	0
 23792  010740  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23793  010742  0E00               	movlw	0
 23794  010744  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23795  010746  EC5D  F0D7         	call	___fleq	;wreg free
 23796  01074A  0102               	movlb	2	; () banked
 23797  01074C  B0D8               	btfsc	status,0,c
 23798  01074E  D062               	goto	l18165
 23799                           
 23800                           ; BSR set to: 2
 23801  010750  C27D  F230         	movff	__doprnt@fval,___fltol@f1
 23802  010754  C27E  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23803  010758  C27F  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23804  01075C  C280  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23805  010760  EC1D  F0D4         	call	___fltol	;wreg free
 23806  010764  0102               	movlb	2	; () banked
 23807  010766  5130               	movf	?___fltol& (0+255),w,b
 23808  010768  1131               	iorwf	(?___fltol+1)& (0+255),w,b
 23809  01076A  1132               	iorwf	(?___fltol+2)& (0+255),w,b
 23810  01076C  1133               	iorwf	(?___fltol+3)& (0+255),w,b
 23811  01076E  B4D8               	btfsc	status,2,c
 23812                           
 23813                           ; BSR set to: 2
 23814  010770  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23815  010772  D050               	goto	l18165
 23816  010774  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23817  010776  E104               	bnz	u22300
 23818  010778  0E02               	movlw	2
 23819  01077A  5D77               	subwf	__doprnt@eexp& (0+255),w,b
 23820  01077C  A0D8               	btfss	status,0,c
 23821  01077E  D04A               	goto	l18165
 23822  010780                     u22300:
 23823  010780                     l18151:
 23824                           
 23825                           ; BSR set to: 2
 23826                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 23827  010780  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23828  010784  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23829  010788  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23830  01078C  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23831  010790  0E5F               	movlw	95
 23832  010792  6F04               	movwf	___flge@ff2& (0+255),b
 23833  010794  0E70               	movlw	112
 23834  010796  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23835  010798  0E89               	movlw	137
 23836  01079A  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23837  01079C  0E40               	movlw	64
 23838  01079E  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23839  0107A0  EC85  F0D2         	call	___flge	;wreg free
 23840  0107A4  0102               	movlb	2	; () banked
 23841  0107A6  B0D8               	btfsc	status,0,c
 23842  0107A8  D002               	goto	l18155
 23843                           
 23844                           ; BSR set to: 2
 23845                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 23846  0107AA  0EF7               	movlw	247
 23847  0107AC  D001               	goto	L7
 23848  0107AE                     l18155:
 23849                           
 23850                           ; BSR set to: 2
 23851                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 23852  0107AE  0EF8               	movlw	248
 23853  0107B0                     L7:
 23854  0107B0  2777               	addwf	__doprnt@eexp& (0+255),f,b
 23855  0107B2  0EFF               	movlw	255
 23856  0107B4  2378               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23857                           
 23858                           ; BSR set to: 2
 23859                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 23860  0107B6  5177               	movf	__doprnt@eexp& (0+255),w,b
 23861  0107B8  EC22  F0AA         	call	_scale
 23862  0107BC  C227  F279         	movff	?_scale,__doprnt@tmpval
 23863  0107C0  C228  F27A         	movff	?_scale+1,__doprnt@tmpval+1
 23864  0107C4  C229  F27B         	movff	?_scale+2,__doprnt@tmpval+2
 23865  0107C8  C22A  F27C         	movff	?_scale+3,__doprnt@tmpval+3
 23866  0107CC  C27D  F200         	movff	__doprnt@fval,__div_to_l_@f1
 23867  0107D0  C27E  F201         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 23868  0107D4  C27F  F202         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 23869  0107D8  C280  F203         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 23870  0107DC  C279  F204         	movff	__doprnt@tmpval,__div_to_l_@f2
 23871  0107E0  C27A  F205         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 23872  0107E4  C27B  F206         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 23873  0107E8  C27C  F207         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 23874  0107EC  EC2A  F0D0         	call	__div_to_l_	;wreg free
 23875  0107F0  C200  F281         	movff	?__div_to_l_,__doprnt@val
 23876  0107F4  C201  F282         	movff	?__div_to_l_+1,__doprnt@val+1
 23877  0107F8  C202  F283         	movff	?__div_to_l_+2,__doprnt@val+2
 23878  0107FC  C203  F284         	movff	?__div_to_l_+3,__doprnt@val+3
 23879                           
 23880                           ;doprnt.c: 1148: fval = 0.0;
 23881  010800  0E00               	movlw	0
 23882  010802  0102               	movlb	2	; () banked
 23883  010804  6F7D               	movwf	__doprnt@fval& (0+255),b
 23884  010806  0E00               	movlw	0
 23885  010808  6F7E               	movwf	(__doprnt@fval+1)& (0+255),b
 23886  01080A  0E00               	movlw	0
 23887  01080C  6F7F               	movwf	(__doprnt@fval+2)& (0+255),b
 23888  01080E  0E00               	movlw	0
 23889  010810  6F80               	movwf	(__doprnt@fval+3)& (0+255),b
 23890                           
 23891                           ;doprnt.c: 1149: } else {
 23892  010812  D03C               	goto	l18169
 23893  010814                     l18165:
 23894                           
 23895                           ; BSR set to: 2
 23896                           ;doprnt.c: 1150: val = (unsigned long)fval;
 23897  010814  C27D  F230         	movff	__doprnt@fval,___fltol@f1
 23898  010818  C27E  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23899  01081C  C27F  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23900  010820  C280  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23901  010824  EC1D  F0D4         	call	___fltol	;wreg free
 23902  010828  C230  F281         	movff	?___fltol,__doprnt@val
 23903  01082C  C231  F282         	movff	?___fltol+1,__doprnt@val+1
 23904  010830  C232  F283         	movff	?___fltol+2,__doprnt@val+2
 23905  010834  C233  F284         	movff	?___fltol+3,__doprnt@val+3
 23906                           
 23907                           ;doprnt.c: 1151: fval -= (double)val;
 23908  010838  C27D  F24C         	movff	__doprnt@fval,___flsub@b
 23909  01083C  C27E  F24D         	movff	__doprnt@fval+1,___flsub@b+1
 23910  010840  C27F  F24E         	movff	__doprnt@fval+2,___flsub@b+2
 23911  010844  C280  F24F         	movff	__doprnt@fval+3,___flsub@b+3
 23912  010848  C281  F23E         	movff	__doprnt@val,___xxtofl@val
 23913  01084C  C282  F23F         	movff	__doprnt@val+1,___xxtofl@val+1
 23914  010850  C283  F240         	movff	__doprnt@val+2,___xxtofl@val+2
 23915  010854  C284  F241         	movff	__doprnt@val+3,___xxtofl@val+3
 23916  010858  0E00               	movlw	0
 23917  01085A  ECB6  F0CC         	call	___xxtofl
 23918  01085E  C23E  F250         	movff	?___xxtofl,___flsub@a
 23919  010862  C23F  F251         	movff	?___xxtofl+1,___flsub@a+1
 23920  010866  C240  F252         	movff	?___xxtofl+2,___flsub@a+2
 23921  01086A  C241  F253         	movff	?___xxtofl+3,___flsub@a+3
 23922  01086E  EC5C  F0DD         	call	___flsub	;wreg free
 23923  010872  C24C  F27D         	movff	?___flsub,__doprnt@fval
 23924  010876  C24D  F27E         	movff	?___flsub+1,__doprnt@fval+1
 23925  01087A  C24E  F27F         	movff	?___flsub+2,__doprnt@fval+2
 23926  01087E  C24F  F280         	movff	?___flsub+3,__doprnt@fval+3
 23927                           
 23928                           ;doprnt.c: 1152: eexp = 0;
 23929  010882  0E00               	movlw	0
 23930  010884  0102               	movlb	2	; () banked
 23931  010886  6F78               	movwf	(__doprnt@eexp+1)& (0+255),b
 23932  010888  0E00               	movlw	0
 23933  01088A  6F77               	movwf	__doprnt@eexp& (0+255),b
 23934  01088C                     l18169:
 23935                           
 23936                           ; BSR set to: 2
 23937                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 23938  01088C  0E01               	movlw	1
 23939  01088E  6F8B               	movwf	__doprnt@c& (0+255),b
 23940  010890                     l18171:
 23941                           
 23942                           ; BSR set to: 2
 23943  010890  0E0A               	movlw	10
 23944  010892  198B               	xorwf	__doprnt@c& (0+255),w,b
 23945  010894  B4D8               	btfsc	status,2,c
 23946  010896  D01B               	goto	l18183
 23947                           
 23948                           ; BSR set to: 2
 23949                           ;doprnt.c: 1156: if(val < dpowers[c])
 23950  010898  518B               	movf	__doprnt@c& (0+255),w,b
 23951  01089A  0D04               	mullw	4
 23952  01089C  0EAF               	movlw	low _dpowers
 23953  01089E  24F3               	addwf	prodl,w,c
 23954  0108A0  6EF6               	movwf	tblptrl,c
 23955  0108A2  0EE7               	movlw	high _dpowers
 23956  0108A4  20F4               	addwfc	prodh,w,c
 23957  0108A6  6EF7               	movwf	tblptrh,c
 23958  0108A8                     	if	1	;There are 3 active tblptr bytes
 23959  0108A8  6AF8               	clrf	tblptru,c
 23960  0108AA  0E00               	movlw	low (__mediumconst shr (0+16))
 23961  0108AC  22F8               	addwfc	tblptru,f,c
 23962  0108AE                     	endif
 23963  0108AE  0009               	tblrd		*+
 23964  0108B0  50F5               	movf	tablat,w,c
 23965  0108B2  5D81               	subwf	__doprnt@val& (0+255),w,b
 23966  0108B4  0009               	tblrd		*+
 23967  0108B6  50F5               	movf	tablat,w,c
 23968  0108B8  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 23969  0108BA  0009               	tblrd		*+
 23970  0108BC  50F5               	movf	tablat,w,c
 23971  0108BE  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 23972  0108C0  0009               	tblrd		*+
 23973  0108C2  50F5               	movf	tablat,w,c
 23974  0108C4  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 23975  0108C6  A0D8               	btfss	status,0,c
 23976  0108C8  D002               	goto	l18183
 23977                           
 23978                           ; BSR set to: 2
 23979  0108CA  2B8B               	incf	__doprnt@c& (0+255),f,b
 23980  0108CC  D7E1               	goto	l18171
 23981  0108CE                     l18183:
 23982                           
 23983                           ; BSR set to: 2
 23984                           ;doprnt.c: 1161: width -= prec + c + eexp;
 23985  0108CE  518B               	movf	__doprnt@c& (0+255),w,b
 23986  0108D0  2587               	addwf	__doprnt@prec& (0+255),w,b
 23987  0108D2  6F5A               	movwf	??__doprnt& (0+255),b
 23988  0108D4  0E00               	movlw	0
 23989  0108D6  2188               	addwfc	(__doprnt@prec+1)& (0+255),w,b
 23990  0108D8  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23991  0108DA  5177               	movf	__doprnt@eexp& (0+255),w,b
 23992  0108DC  275A               	addwf	??__doprnt& (0+255),f,b
 23993  0108DE  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23994  0108E0  235B               	addwfc	(??__doprnt+1)& (0+255),f,b
 23995  0108E2  515A               	movf	??__doprnt& (0+255),w,b
 23996  0108E4  5F85               	subwf	__doprnt@width& (0+255),f,b
 23997  0108E6  515B               	movf	(??__doprnt+1)& (0+255),w,b
 23998  0108E8  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23999                           
 24000                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 24001  0108EA  5187               	movf	__doprnt@prec& (0+255),w,b
 24002  0108EC  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24003  0108EE  B4D8               	btfsc	status,2,c
 24004  0108F0  D003               	goto	l18187
 24005                           
 24006                           ; BSR set to: 2
 24007                           ;doprnt.c: 1167: width--;
 24008  0108F2  0785               	decf	__doprnt@width& (0+255),f,b
 24009  0108F4  A0D8               	btfss	status,0,c
 24010  0108F6  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24011  0108F8                     l18187:
 24012                           
 24013                           ; BSR set to: 2
 24014                           ;doprnt.c: 1168: if(flag & 0x03)
 24015  0108F8  0E03               	movlw	3
 24016  0108FA  1589               	andwf	__doprnt@flag& (0+255),w,b
 24017  0108FC  6F5A               	movwf	??__doprnt& (0+255),b
 24018  0108FE  0E00               	movlw	0
 24019  010900  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24020  010902  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 24021  010904  515A               	movf	??__doprnt& (0+255),w,b
 24022  010906  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 24023  010908  B4D8               	btfsc	status,2,c
 24024  01090A  D003               	goto	l18191
 24025                           
 24026                           ; BSR set to: 2
 24027                           ;doprnt.c: 1169: width--;
 24028  01090C  0785               	decf	__doprnt@width& (0+255),f,b
 24029  01090E  A0D8               	btfss	status,0,c
 24030  010910  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24031  010912                     l18191:
 24032                           
 24033                           ; BSR set to: 2
 24034                           ;doprnt.c: 1172: if(flag & 0x04) {
 24035  010912  A589               	btfss	__doprnt@flag& (0+255),2,b
 24036  010914  D0F0               	goto	l18243
 24037                           
 24038                           ; BSR set to: 2
 24039                           ;doprnt.c: 1174: if(flag & 0x02)
 24040  010916  A389               	btfss	__doprnt@flag& (0+255),1,b
 24041  010918  D041               	goto	l2498
 24042                           
 24043                           ; BSR set to: 2
 24044  01091A  EE20 F002          	lfsr	2,2
 24045  01091E  5154               	movf	__doprnt@pb& (0+255),w,b
 24046  010920  26D9               	addwf	fsr2l,f,c
 24047  010922  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24048  010924  22DA               	addwfc	fsr2h,f,c
 24049  010926  50DE               	movf	postinc2,w,c
 24050  010928  10DE               	iorwf	postinc2,w,c
 24051  01092A  10DE               	iorwf	postinc2,w,c
 24052  01092C  B4D8               	btfsc	status,2,c
 24053  01092E  D01D               	goto	l2500
 24054                           
 24055                           ; BSR set to: 2
 24056  010930  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24057  010932  D004               	goto	l18201
 24058                           
 24059                           ; BSR set to: 2
 24060  010934  0E00               	movlw	0
 24061  010936  6F64               	movwf	(__doprnt$4981+1)& (0+255),b
 24062  010938  0E2B               	movlw	43
 24063  01093A  D003               	goto	L8
 24064  01093C                     l18201:
 24065                           
 24066                           ; BSR set to: 2
 24067  01093C  0E00               	movlw	0
 24068  01093E  6F64               	movwf	(__doprnt$4981+1)& (0+255),b
 24069  010940  0E2D               	movlw	45
 24070  010942                     L8:
 24071  010942  6F63               	movwf	__doprnt$4981& (0+255),b
 24072                           
 24073                           ; BSR set to: 2
 24074  010944  EE20 F002          	lfsr	2,2
 24075  010948  5154               	movf	__doprnt@pb& (0+255),w,b
 24076  01094A  26D9               	addwf	fsr2l,f,c
 24077  01094C  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24078  01094E  22DA               	addwfc	fsr2h,f,c
 24079  010950  D801               	call	u22408
 24080  010952  D091               	goto	l18231
 24081  010954                     u22408:
 24082  010954  0005               	push	
 24083  010956  6EFA               	movwf	pclath,c
 24084  010958  50DE               	movf	postinc2,w,c
 24085  01095A  6EFD               	movwf	tosl,c
 24086  01095C  50DE               	movf	postinc2,w,c
 24087  01095E  6EFE               	movwf	tosh,c
 24088  010960  50DE               	movf	postinc2,w,c
 24089  010962  6EFF               	movwf	tosu,c
 24090  010964  50FA               	movf	pclath,w,c
 24091  010966  5163               	movf	__doprnt$4981& (0+255),w,b
 24092  010968  0012               	return		;indir
 24093  01096A                     l2500:
 24094                           
 24095                           ; BSR set to: 2
 24096  01096A  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24097  01096C  D004               	goto	l18207
 24098                           
 24099                           ; BSR set to: 2
 24100  01096E  0E00               	movlw	0
 24101  010970  6F66               	movwf	(__doprnt$4982+1)& (0+255),b
 24102  010972  0E2B               	movlw	43
 24103  010974  D003               	goto	L9
 24104  010976                     l18207:
 24105                           
 24106                           ; BSR set to: 2
 24107  010976  0E00               	movlw	0
 24108  010978  6F66               	movwf	(__doprnt$4982+1)& (0+255),b
 24109  01097A  0E2D               	movlw	45
 24110  01097C                     L9:
 24111  01097C  6F65               	movwf	__doprnt$4982& (0+255),b
 24112                           
 24113                           ; BSR set to: 2
 24114  01097E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24115  010982  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24116  010986  CFDE F25A          	movff	postinc2,??__doprnt
 24117  01098A  CFDD F25B          	movff	postdec2,??__doprnt+1
 24118  01098E  C25A  FFD9         	movff	??__doprnt,fsr2l
 24119  010992  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24120  010996  C265  FFDF         	movff	__doprnt$4982,indf2
 24121  01099A  D02E               	goto	l18219
 24122  01099C                     l2498:
 24123                           
 24124                           ; BSR set to: 2
 24125                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 24126  01099C  A189               	btfss	__doprnt@flag& (0+255),0,b
 24127  01099E  D06B               	goto	l18231
 24128                           
 24129                           ; BSR set to: 2
 24130  0109A0  EE20 F002          	lfsr	2,2
 24131  0109A4  5154               	movf	__doprnt@pb& (0+255),w,b
 24132  0109A6  26D9               	addwf	fsr2l,f,c
 24133  0109A8  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24134  0109AA  22DA               	addwfc	fsr2h,f,c
 24135  0109AC  50DE               	movf	postinc2,w,c
 24136  0109AE  10DE               	iorwf	postinc2,w,c
 24137  0109B0  10DE               	iorwf	postinc2,w,c
 24138  0109B2  B4D8               	btfsc	status,2,c
 24139  0109B4  D013               	goto	l18217
 24140                           
 24141                           ; BSR set to: 2
 24142  0109B6  EE20 F002          	lfsr	2,2
 24143  0109BA  5154               	movf	__doprnt@pb& (0+255),w,b
 24144  0109BC  26D9               	addwf	fsr2l,f,c
 24145  0109BE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24146  0109C0  22DA               	addwfc	fsr2h,f,c
 24147  0109C2  D801               	call	u22448
 24148  0109C4  D058               	goto	l18231
 24149  0109C6                     u22448:
 24150  0109C6  0005               	push	
 24151  0109C8  6EFA               	movwf	pclath,c
 24152  0109CA  50DE               	movf	postinc2,w,c
 24153  0109CC  6EFD               	movwf	tosl,c
 24154  0109CE  50DE               	movf	postinc2,w,c
 24155  0109D0  6EFE               	movwf	tosh,c
 24156  0109D2  50DE               	movf	postinc2,w,c
 24157  0109D4  6EFF               	movwf	tosu,c
 24158  0109D6  50FA               	movf	pclath,w,c
 24159  0109D8  0E20               	movlw	32
 24160  0109DA  0012               	return		;indir
 24161  0109DC                     l18217:
 24162                           
 24163                           ; BSR set to: 2
 24164  0109DC  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24165  0109E0  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24166  0109E4  CFDE F25A          	movff	postinc2,??__doprnt
 24167  0109E8  CFDD F25B          	movff	postdec2,??__doprnt+1
 24168  0109EC  C25A  FFD9         	movff	??__doprnt,fsr2l
 24169  0109F0  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24170  0109F4  0E20               	movlw	32
 24171  0109F6  6EDF               	movwf	indf2,c
 24172  0109F8                     l18219:
 24173                           
 24174                           ; BSR set to: 2
 24175  0109F8  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24176  0109FC  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24177  010A00  2ADE               	incf	postinc2,f,c
 24178  010A02  0E00               	movlw	0
 24179  010A04  22DD               	addwfc	postdec2,f,c
 24180  010A06  D037               	goto	l18231
 24181  010A08                     l18221:
 24182                           
 24183                           ; BSR set to: 2
 24184  010A08  EE20 F002          	lfsr	2,2
 24185  010A0C  5154               	movf	__doprnt@pb& (0+255),w,b
 24186  010A0E  26D9               	addwf	fsr2l,f,c
 24187  010A10  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24188  010A12  22DA               	addwfc	fsr2h,f,c
 24189  010A14  50DE               	movf	postinc2,w,c
 24190  010A16  10DE               	iorwf	postinc2,w,c
 24191  010A18  10DE               	iorwf	postinc2,w,c
 24192  010A1A  B4D8               	btfsc	status,2,c
 24193  010A1C  D013               	goto	l18225
 24194                           
 24195                           ; BSR set to: 2
 24196  010A1E  EE20 F002          	lfsr	2,2
 24197  010A22  5154               	movf	__doprnt@pb& (0+255),w,b
 24198  010A24  26D9               	addwf	fsr2l,f,c
 24199  010A26  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24200  010A28  22DA               	addwfc	fsr2h,f,c
 24201  010A2A  D801               	call	u22468
 24202  010A2C  D020               	goto	l18229
 24203  010A2E                     u22468:
 24204  010A2E  0005               	push	
 24205  010A30  6EFA               	movwf	pclath,c
 24206  010A32  50DE               	movf	postinc2,w,c
 24207  010A34  6EFD               	movwf	tosl,c
 24208  010A36  50DE               	movf	postinc2,w,c
 24209  010A38  6EFE               	movwf	tosh,c
 24210  010A3A  50DE               	movf	postinc2,w,c
 24211  010A3C  6EFF               	movwf	tosu,c
 24212  010A3E  50FA               	movf	pclath,w,c
 24213  010A40  0E30               	movlw	48
 24214  010A42  0012               	return		;indir
 24215  010A44                     l18225:
 24216                           
 24217                           ; BSR set to: 2
 24218  010A44  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24219  010A48  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24220  010A4C  CFDE F25A          	movff	postinc2,??__doprnt
 24221  010A50  CFDD F25B          	movff	postdec2,??__doprnt+1
 24222  010A54  C25A  FFD9         	movff	??__doprnt,fsr2l
 24223  010A58  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24224  010A5C  0E30               	movlw	48
 24225  010A5E  6EDF               	movwf	indf2,c
 24226                           
 24227                           ; BSR set to: 2
 24228  010A60  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24229  010A64  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24230  010A68  2ADE               	incf	postinc2,f,c
 24231  010A6A  0E00               	movlw	0
 24232  010A6C  22DD               	addwfc	postdec2,f,c
 24233  010A6E                     l18229:
 24234                           
 24235                           ;doprnt.c: 1189: width--;
 24236  010A6E  0102               	movlb	2	; () banked
 24237  010A70  0785               	decf	__doprnt@width& (0+255),f,b
 24238  010A72  A0D8               	btfss	status,0,c
 24239  010A74  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24240  010A76                     l18231:
 24241  010A76  0102               	movlb	2	; () banked
 24242  010A78  BF86               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24243  010A7A  D12F               	goto	l18281
 24244  010A7C  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 24245  010A7E  E1C4               	bnz	l18221
 24246  010A80  0585               	decf	__doprnt@width& (0+255),w,b
 24247  010A82  A0D8               	btfss	status,0,c
 24248  010A84  D12A               	goto	l18281
 24249  010A86  D7C0               	goto	l18221
 24250  010A88                     l18233:
 24251                           
 24252                           ; BSR set to: 2
 24253  010A88  EE20 F002          	lfsr	2,2
 24254  010A8C  5154               	movf	__doprnt@pb& (0+255),w,b
 24255  010A8E  26D9               	addwf	fsr2l,f,c
 24256  010A90  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24257  010A92  22DA               	addwfc	fsr2h,f,c
 24258  010A94  50DE               	movf	postinc2,w,c
 24259  010A96  10DE               	iorwf	postinc2,w,c
 24260  010A98  10DE               	iorwf	postinc2,w,c
 24261  010A9A  B4D8               	btfsc	status,2,c
 24262  010A9C  D013               	goto	l18237
 24263                           
 24264                           ; BSR set to: 2
 24265  010A9E  EE20 F002          	lfsr	2,2
 24266  010AA2  5154               	movf	__doprnt@pb& (0+255),w,b
 24267  010AA4  26D9               	addwf	fsr2l,f,c
 24268  010AA6  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24269  010AA8  22DA               	addwfc	fsr2h,f,c
 24270  010AAA  D801               	call	u22498
 24271  010AAC  D020               	goto	l18241
 24272  010AAE                     u22498:
 24273  010AAE  0005               	push	
 24274  010AB0  6EFA               	movwf	pclath,c
 24275  010AB2  50DE               	movf	postinc2,w,c
 24276  010AB4  6EFD               	movwf	tosl,c
 24277  010AB6  50DE               	movf	postinc2,w,c
 24278  010AB8  6EFE               	movwf	tosh,c
 24279  010ABA  50DE               	movf	postinc2,w,c
 24280  010ABC  6EFF               	movwf	tosu,c
 24281  010ABE  50FA               	movf	pclath,w,c
 24282  010AC0  0E20               	movlw	32
 24283  010AC2  0012               	return		;indir
 24284  010AC4                     l18237:
 24285                           
 24286                           ; BSR set to: 2
 24287  010AC4  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24288  010AC8  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24289  010ACC  CFDE F25A          	movff	postinc2,??__doprnt
 24290  010AD0  CFDD F25B          	movff	postdec2,??__doprnt+1
 24291  010AD4  C25A  FFD9         	movff	??__doprnt,fsr2l
 24292  010AD8  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24293  010ADC  0E20               	movlw	32
 24294  010ADE  6EDF               	movwf	indf2,c
 24295                           
 24296                           ; BSR set to: 2
 24297  010AE0  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24298  010AE4  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24299  010AE8  2ADE               	incf	postinc2,f,c
 24300  010AEA  0E00               	movlw	0
 24301  010AEC  22DD               	addwfc	postdec2,f,c
 24302  010AEE                     l18241:
 24303                           
 24304                           ;doprnt.c: 1201: width--;
 24305  010AEE  0102               	movlb	2	; () banked
 24306  010AF0  0785               	decf	__doprnt@width& (0+255),f,b
 24307  010AF2  A0D8               	btfss	status,0,c
 24308  010AF4  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24309  010AF6                     l18243:
 24310                           
 24311                           ; BSR set to: 2
 24312  010AF6  BF86               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24313  010AF8  D005               	goto	u22500
 24314  010AFA  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 24315  010AFC  E1C5               	bnz	l18233
 24316  010AFE  0585               	decf	__doprnt@width& (0+255),w,b
 24317  010B00  B0D8               	btfsc	status,0,c
 24318  010B02  D7C2               	goto	l18233
 24319  010B04                     u22500:
 24320                           
 24321                           ; BSR set to: 2
 24322                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 24323  010B04  A389               	btfss	__doprnt@flag& (0+255),1,b
 24324  010B06  D041               	goto	l2532
 24325                           
 24326                           ; BSR set to: 2
 24327  010B08  EE20 F002          	lfsr	2,2
 24328  010B0C  5154               	movf	__doprnt@pb& (0+255),w,b
 24329  010B0E  26D9               	addwf	fsr2l,f,c
 24330  010B10  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24331  010B12  22DA               	addwfc	fsr2h,f,c
 24332  010B14  50DE               	movf	postinc2,w,c
 24333  010B16  10DE               	iorwf	postinc2,w,c
 24334  010B18  10DE               	iorwf	postinc2,w,c
 24335  010B1A  B4D8               	btfsc	status,2,c
 24336  010B1C  D01D               	goto	l2534
 24337                           
 24338                           ; BSR set to: 2
 24339  010B1E  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24340  010B20  D004               	goto	l18251
 24341                           
 24342                           ; BSR set to: 2
 24343  010B22  0E00               	movlw	0
 24344  010B24  6F68               	movwf	(__doprnt$4983+1)& (0+255),b
 24345  010B26  0E2B               	movlw	43
 24346  010B28  D003               	goto	L10
 24347  010B2A                     l18251:
 24348                           
 24349                           ; BSR set to: 2
 24350  010B2A  0E00               	movlw	0
 24351  010B2C  6F68               	movwf	(__doprnt$4983+1)& (0+255),b
 24352  010B2E  0E2D               	movlw	45
 24353  010B30                     L10:
 24354  010B30  6F67               	movwf	__doprnt$4983& (0+255),b
 24355                           
 24356                           ; BSR set to: 2
 24357  010B32  EE20 F002          	lfsr	2,2
 24358  010B36  5154               	movf	__doprnt@pb& (0+255),w,b
 24359  010B38  26D9               	addwf	fsr2l,f,c
 24360  010B3A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24361  010B3C  22DA               	addwfc	fsr2h,f,c
 24362  010B3E  D801               	call	u22548
 24363  010B40  D0CC               	goto	l18281
 24364  010B42                     u22548:
 24365  010B42  0005               	push	
 24366  010B44  6EFA               	movwf	pclath,c
 24367  010B46  50DE               	movf	postinc2,w,c
 24368  010B48  6EFD               	movwf	tosl,c
 24369  010B4A  50DE               	movf	postinc2,w,c
 24370  010B4C  6EFE               	movwf	tosh,c
 24371  010B4E  50DE               	movf	postinc2,w,c
 24372  010B50  6EFF               	movwf	tosu,c
 24373  010B52  50FA               	movf	pclath,w,c
 24374  010B54  5167               	movf	__doprnt$4983& (0+255),w,b
 24375  010B56  0012               	return		;indir
 24376  010B58                     l2534:
 24377                           
 24378                           ; BSR set to: 2
 24379  010B58  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24380  010B5A  D004               	goto	l18257
 24381                           
 24382                           ; BSR set to: 2
 24383  010B5C  0E00               	movlw	0
 24384  010B5E  6F6A               	movwf	(__doprnt$4984+1)& (0+255),b
 24385  010B60  0E2B               	movlw	43
 24386  010B62  D003               	goto	L11
 24387  010B64                     l18257:
 24388                           
 24389                           ; BSR set to: 2
 24390  010B64  0E00               	movlw	0
 24391  010B66  6F6A               	movwf	(__doprnt$4984+1)& (0+255),b
 24392  010B68  0E2D               	movlw	45
 24393  010B6A                     L11:
 24394  010B6A  6F69               	movwf	__doprnt$4984& (0+255),b
 24395                           
 24396                           ; BSR set to: 2
 24397  010B6C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24398  010B70  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24399  010B74  CFDE F25A          	movff	postinc2,??__doprnt
 24400  010B78  CFDD F25B          	movff	postdec2,??__doprnt+1
 24401  010B7C  C25A  FFD9         	movff	??__doprnt,fsr2l
 24402  010B80  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24403  010B84  C269  FFDF         	movff	__doprnt$4984,indf2
 24404  010B88  D0A1               	goto	L12
 24405  010B8A                     l2532:
 24406                           
 24407                           ; BSR set to: 2
 24408                           ;doprnt.c: 1211: else if(flag & 0x01)
 24409  010B8A  A189               	btfss	__doprnt@flag& (0+255),0,b
 24410  010B8C  D0A6               	goto	l18281
 24411                           
 24412                           ; BSR set to: 2
 24413  010B8E  EE20 F002          	lfsr	2,2
 24414  010B92  5154               	movf	__doprnt@pb& (0+255),w,b
 24415  010B94  26D9               	addwf	fsr2l,f,c
 24416  010B96  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24417  010B98  22DA               	addwfc	fsr2h,f,c
 24418  010B9A  50DE               	movf	postinc2,w,c
 24419  010B9C  10DE               	iorwf	postinc2,w,c
 24420  010B9E  10DE               	iorwf	postinc2,w,c
 24421  010BA0  B4D8               	btfsc	status,2,c
 24422  010BA2  D013               	goto	l18267
 24423                           
 24424                           ; BSR set to: 2
 24425  010BA4  EE20 F002          	lfsr	2,2
 24426  010BA8  5154               	movf	__doprnt@pb& (0+255),w,b
 24427  010BAA  26D9               	addwf	fsr2l,f,c
 24428  010BAC  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24429  010BAE  22DA               	addwfc	fsr2h,f,c
 24430  010BB0  D801               	call	u22588
 24431  010BB2  D093               	goto	l18281
 24432  010BB4                     u22588:
 24433  010BB4  0005               	push	
 24434  010BB6  6EFA               	movwf	pclath,c
 24435  010BB8  50DE               	movf	postinc2,w,c
 24436  010BBA  6EFD               	movwf	tosl,c
 24437  010BBC  50DE               	movf	postinc2,w,c
 24438  010BBE  6EFE               	movwf	tosh,c
 24439  010BC0  50DE               	movf	postinc2,w,c
 24440  010BC2  6EFF               	movwf	tosu,c
 24441  010BC4  50FA               	movf	pclath,w,c
 24442  010BC6  0E20               	movlw	32
 24443  010BC8  0012               	return		;indir
 24444  010BCA                     l18267:
 24445                           
 24446                           ; BSR set to: 2
 24447  010BCA  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24448  010BCE  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24449  010BD2  CFDE F25A          	movff	postinc2,??__doprnt
 24450  010BD6  CFDD F25B          	movff	postdec2,??__doprnt+1
 24451  010BDA  C25A  FFD9         	movff	??__doprnt,fsr2l
 24452  010BDE  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24453  010BE2  0E20               	movlw	32
 24454  010BE4  D072               	goto	L58
 24455  010BE6                     l18271:
 24456                           
 24457                           ; BSR set to: 2
 24458                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 24459  010BE6  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 24460  010BEA  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24461  010BEE  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24462  010BF2  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24463  010BF6  518B               	movf	__doprnt@c& (0+255),w,b
 24464  010BF8  0D04               	mullw	4
 24465  010BFA  0EAF               	movlw	low _dpowers
 24466  010BFC  24F3               	addwf	prodl,w,c
 24467  010BFE  6EF6               	movwf	tblptrl,c
 24468  010C00  0EE7               	movlw	high _dpowers
 24469  010C02  20F4               	addwfc	prodh,w,c
 24470  010C04  6EF7               	movwf	tblptrh,c
 24471  010C06                     	if	1	;There are 3 active tblptr bytes
 24472  010C06  6AF8               	clrf	tblptru,c
 24473  010C08  0E00               	movlw	low (__mediumconst shr (0+16))
 24474  010C0A  22F8               	addwfc	tblptru,f,c
 24475  010C0C                     	endif
 24476  010C0C  0009               	tblrd		*+
 24477  010C0E  CFF5 F204          	movff	tablat,___lldiv@divisor
 24478  010C12  0009               	tblrd		*+
 24479  010C14  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24480  010C18  0009               	tblrd		*+
 24481  010C1A  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24482  010C1E  000A               	tblrd		*-
 24483  010C20  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24484  010C24  EC2B  F0D8         	call	___lldiv
 24485  010C28  C200  F279         	movff	?___lldiv,__doprnt@tmpval
 24486  010C2C  C201  F27A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24487  010C30  C202  F27B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24488  010C34  C203  F27C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24489                           
 24490                           ;doprnt.c: 1221: tmpval.vd %= 10;
 24491  010C38  C279  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24492  010C3C  C27A  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24493  010C40  C27B  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24494  010C44  C27C  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24495  010C48  0E0A               	movlw	10
 24496  010C4A  0102               	movlb	2	; () banked
 24497  010C4C  6F11               	movwf	___llmod@divisor& (0+255),b
 24498  010C4E  0E00               	movlw	0
 24499  010C50  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24500  010C52  0E00               	movlw	0
 24501  010C54  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24502  010C56  0E00               	movlw	0
 24503  010C58  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24504  010C5A  EC9A  F0D9         	call	___llmod	;wreg free
 24505  010C5E  C20D  F279         	movff	?___llmod,__doprnt@tmpval
 24506  010C62  C20E  F27A         	movff	?___llmod+1,__doprnt@tmpval+1
 24507  010C66  C20F  F27B         	movff	?___llmod+2,__doprnt@tmpval+2
 24508  010C6A  C210  F27C         	movff	?___llmod+3,__doprnt@tmpval+3
 24509  010C6E  0102               	movlb	2	; () banked
 24510  010C70  EE20 F002          	lfsr	2,2
 24511  010C74  5154               	movf	__doprnt@pb& (0+255),w,b
 24512  010C76  26D9               	addwf	fsr2l,f,c
 24513  010C78  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24514  010C7A  22DA               	addwfc	fsr2h,f,c
 24515  010C7C  50DE               	movf	postinc2,w,c
 24516  010C7E  10DE               	iorwf	postinc2,w,c
 24517  010C80  10DE               	iorwf	postinc2,w,c
 24518  010C82  B4D8               	btfsc	status,2,c
 24519  010C84  D014               	goto	l18279
 24520                           
 24521                           ; BSR set to: 2
 24522  010C86  EE20 F002          	lfsr	2,2
 24523  010C8A  5154               	movf	__doprnt@pb& (0+255),w,b
 24524  010C8C  26D9               	addwf	fsr2l,f,c
 24525  010C8E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24526  010C90  22DA               	addwfc	fsr2h,f,c
 24527  010C92  D801               	call	u22608
 24528  010C94  D022               	goto	l18281
 24529  010C96                     u22608:
 24530  010C96  0005               	push	
 24531  010C98  6EFA               	movwf	pclath,c
 24532  010C9A  50DE               	movf	postinc2,w,c
 24533  010C9C  6EFD               	movwf	tosl,c
 24534  010C9E  50DE               	movf	postinc2,w,c
 24535  010CA0  6EFE               	movwf	tosh,c
 24536  010CA2  50DE               	movf	postinc2,w,c
 24537  010CA4  6EFF               	movwf	tosu,c
 24538  010CA6  50FA               	movf	pclath,w,c
 24539  010CA8  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24540  010CAA  0F30               	addlw	48
 24541  010CAC  0012               	return		;indir
 24542  010CAE                     l18279:
 24543                           
 24544                           ; BSR set to: 2
 24545  010CAE  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24546  010CB0  0F30               	addlw	48
 24547  010CB2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24548  010CB6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24549  010CBA  CFDE F25A          	movff	postinc2,??__doprnt
 24550  010CBE  CFDD F25B          	movff	postdec2,??__doprnt+1
 24551  010CC2  C25A  FFD9         	movff	??__doprnt,fsr2l
 24552  010CC6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24553  010CCA                     L58:
 24554  010CCA  6EDF               	movwf	indf2,c
 24555  010CCC                     L12:
 24556  010CCC  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24557  010CD0  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24558  010CD4  2ADE               	incf	postinc2,f,c
 24559  010CD6  0E00               	movlw	0
 24560  010CD8  22DD               	addwfc	postdec2,f,c
 24561  010CDA                     l18281:
 24562  010CDA  0102               	movlb	2	; () banked
 24563  010CDC  078B               	decf	__doprnt@c& (0+255),f,b
 24564  010CDE  298B               	incf	__doprnt@c& (0+255),w,b
 24565  010CE0  B4D8               	btfsc	status,2,c
 24566  010CE2  D038               	goto	l18293
 24567  010CE4  D780               	goto	l18271
 24568  010CE6                     l18283:
 24569                           
 24570                           ; BSR set to: 2
 24571  010CE6  EE20 F002          	lfsr	2,2
 24572  010CEA  5154               	movf	__doprnt@pb& (0+255),w,b
 24573  010CEC  26D9               	addwf	fsr2l,f,c
 24574  010CEE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24575  010CF0  22DA               	addwfc	fsr2h,f,c
 24576  010CF2  50DE               	movf	postinc2,w,c
 24577  010CF4  10DE               	iorwf	postinc2,w,c
 24578  010CF6  10DE               	iorwf	postinc2,w,c
 24579  010CF8  B4D8               	btfsc	status,2,c
 24580  010CFA  D013               	goto	l18287
 24581                           
 24582                           ; BSR set to: 2
 24583  010CFC  EE20 F002          	lfsr	2,2
 24584  010D00  5154               	movf	__doprnt@pb& (0+255),w,b
 24585  010D02  26D9               	addwf	fsr2l,f,c
 24586  010D04  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24587  010D06  22DA               	addwfc	fsr2h,f,c
 24588  010D08  D801               	call	u22638
 24589  010D0A  D020               	goto	l18291
 24590  010D0C                     u22638:
 24591  010D0C  0005               	push	
 24592  010D0E  6EFA               	movwf	pclath,c
 24593  010D10  50DE               	movf	postinc2,w,c
 24594  010D12  6EFD               	movwf	tosl,c
 24595  010D14  50DE               	movf	postinc2,w,c
 24596  010D16  6EFE               	movwf	tosh,c
 24597  010D18  50DE               	movf	postinc2,w,c
 24598  010D1A  6EFF               	movwf	tosu,c
 24599  010D1C  50FA               	movf	pclath,w,c
 24600  010D1E  0E30               	movlw	48
 24601  010D20  0012               	return		;indir
 24602  010D22                     l18287:
 24603                           
 24604                           ; BSR set to: 2
 24605  010D22  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24606  010D26  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24607  010D2A  CFDE F25A          	movff	postinc2,??__doprnt
 24608  010D2E  CFDD F25B          	movff	postdec2,??__doprnt+1
 24609  010D32  C25A  FFD9         	movff	??__doprnt,fsr2l
 24610  010D36  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24611  010D3A  0E30               	movlw	48
 24612  010D3C  6EDF               	movwf	indf2,c
 24613                           
 24614                           ; BSR set to: 2
 24615  010D3E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24616  010D42  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24617  010D46  2ADE               	incf	postinc2,f,c
 24618  010D48  0E00               	movlw	0
 24619  010D4A  22DD               	addwfc	postdec2,f,c
 24620  010D4C                     l18291:
 24621                           
 24622                           ;doprnt.c: 1228: eexp--;
 24623  010D4C  0102               	movlb	2	; () banked
 24624  010D4E  0777               	decf	__doprnt@eexp& (0+255),f,b
 24625  010D50  A0D8               	btfss	status,0,c
 24626  010D52  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 24627  010D54                     l18293:
 24628                           
 24629                           ; BSR set to: 2
 24630  010D54  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 24631  010D56  D005               	goto	u22640
 24632  010D58  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 24633  010D5A  E1C5               	bnz	l18283
 24634  010D5C  0577               	decf	__doprnt@eexp& (0+255),w,b
 24635  010D5E  B0D8               	btfsc	status,0,c
 24636  010D60  D7C2               	goto	l18283
 24637  010D62                     u22640:
 24638                           
 24639                           ; BSR set to: 2
 24640                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 24641  010D62  BF88               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24642  010D64  D009               	goto	l2565
 24643  010D66  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 24644  010D68  E104               	bnz	u22650
 24645  010D6A  0E09               	movlw	9
 24646  010D6C  5D87               	subwf	__doprnt@prec& (0+255),w,b
 24647  010D6E  A0D8               	btfss	status,0,c
 24648  010D70  D003               	goto	l2565
 24649  010D72                     u22650:
 24650                           
 24651                           ; BSR set to: 2
 24652                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24653  010D72  0E08               	movlw	8
 24654  010D74  6F8B               	movwf	__doprnt@c& (0+255),b
 24655  010D76  D002               	goto	l18299
 24656  010D78                     l2565:
 24657                           
 24658                           ; BSR set to: 2
 24659                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 24660  010D78  C287  F28B         	movff	__doprnt@prec,__doprnt@c
 24661  010D7C                     l18299:
 24662                           
 24663                           ; BSR set to: 2
 24664                           ;doprnt.c: 1234: prec -= (int)c;
 24665  010D7C  518B               	movf	__doprnt@c& (0+255),w,b
 24666  010D7E  5F87               	subwf	__doprnt@prec& (0+255),f,b
 24667  010D80  0E00               	movlw	0
 24668  010D82  5B88               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 24669                           
 24670                           ; BSR set to: 2
 24671                           ;doprnt.c: 1238: if(c)
 24672  010D84  518B               	movf	__doprnt@c& (0+255),w,b
 24673  010D86  B4D8               	btfsc	status,2,c
 24674  010D88  D033               	goto	l18311
 24675                           
 24676                           ; BSR set to: 2
 24677  010D8A  EE20 F002          	lfsr	2,2
 24678  010D8E  5154               	movf	__doprnt@pb& (0+255),w,b
 24679  010D90  26D9               	addwf	fsr2l,f,c
 24680  010D92  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24681  010D94  22DA               	addwfc	fsr2h,f,c
 24682  010D96  50DE               	movf	postinc2,w,c
 24683  010D98  10DE               	iorwf	postinc2,w,c
 24684  010D9A  10DE               	iorwf	postinc2,w,c
 24685  010D9C  B4D8               	btfsc	status,2,c
 24686  010D9E  D013               	goto	l18307
 24687                           
 24688                           ; BSR set to: 2
 24689  010DA0  EE20 F002          	lfsr	2,2
 24690  010DA4  5154               	movf	__doprnt@pb& (0+255),w,b
 24691  010DA6  26D9               	addwf	fsr2l,f,c
 24692  010DA8  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24693  010DAA  22DA               	addwfc	fsr2h,f,c
 24694  010DAC  D801               	call	u22688
 24695  010DAE  D020               	goto	l18311
 24696  010DB0                     u22688:
 24697  010DB0  0005               	push	
 24698  010DB2  6EFA               	movwf	pclath,c
 24699  010DB4  50DE               	movf	postinc2,w,c
 24700  010DB6  6EFD               	movwf	tosl,c
 24701  010DB8  50DE               	movf	postinc2,w,c
 24702  010DBA  6EFE               	movwf	tosh,c
 24703  010DBC  50DE               	movf	postinc2,w,c
 24704  010DBE  6EFF               	movwf	tosu,c
 24705  010DC0  50FA               	movf	pclath,w,c
 24706  010DC2  0E2E               	movlw	46
 24707  010DC4  0012               	return		;indir
 24708  010DC6                     l18307:
 24709                           
 24710                           ; BSR set to: 2
 24711  010DC6  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24712  010DCA  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24713  010DCE  CFDE F25A          	movff	postinc2,??__doprnt
 24714  010DD2  CFDD F25B          	movff	postdec2,??__doprnt+1
 24715  010DD6  C25A  FFD9         	movff	??__doprnt,fsr2l
 24716  010DDA  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24717  010DDE  0E2E               	movlw	46
 24718  010DE0  6EDF               	movwf	indf2,c
 24719                           
 24720                           ; BSR set to: 2
 24721  010DE2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24722  010DE6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24723  010DEA  2ADE               	incf	postinc2,f,c
 24724  010DEC  0E00               	movlw	0
 24725  010DEE  22DD               	addwfc	postdec2,f,c
 24726  010DF0                     l18311:
 24727                           
 24728                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24729  010DF0  0102               	movlb	2	; () banked
 24730  010DF2  518B               	movf	__doprnt@c& (0+255),w,b
 24731  010DF4  EC22  F0AA         	call	_scale
 24732  010DF8  C227  F25E         	movff	?_scale,__doprnt$6039
 24733  010DFC  C228  F25F         	movff	?_scale+1,__doprnt$6039+1
 24734  010E00  C229  F260         	movff	?_scale+2,__doprnt$6039+2
 24735  010E04  C22A  F261         	movff	?_scale+3,__doprnt$6039+3
 24736                           
 24737                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24738  010E08  C27D  F212         	movff	__doprnt@fval,___flmul@a
 24739  010E0C  C27E  F213         	movff	__doprnt@fval+1,___flmul@a+1
 24740  010E10  C27F  F214         	movff	__doprnt@fval+2,___flmul@a+2
 24741  010E14  C280  F215         	movff	__doprnt@fval+3,___flmul@a+3
 24742  010E18  C25E  F20E         	movff	__doprnt$6039,___flmul@b
 24743  010E1C  C25F  F20F         	movff	__doprnt$6039+1,___flmul@b+1
 24744  010E20  C260  F210         	movff	__doprnt$6039+2,___flmul@b+2
 24745  010E24  C261  F211         	movff	__doprnt$6039+3,___flmul@b+3
 24746  010E28  EC7A  F0B3         	call	___flmul	;wreg free
 24747  010E2C  C20E  F230         	movff	?___flmul,___fltol@f1
 24748  010E30  C20F  F231         	movff	?___flmul+1,___fltol@f1+1
 24749  010E34  C210  F232         	movff	?___flmul+2,___fltol@f1+2
 24750  010E38  C211  F233         	movff	?___flmul+3,___fltol@f1+3
 24751  010E3C  EC1D  F0D4         	call	___fltol	;wreg free
 24752  010E40  C230  F281         	movff	?___fltol,__doprnt@val
 24753  010E44  C231  F282         	movff	?___fltol+1,__doprnt@val+1
 24754  010E48  C232  F283         	movff	?___fltol+2,__doprnt@val+2
 24755  010E4C  C233  F284         	movff	?___fltol+3,__doprnt@val+3
 24756                           
 24757                           ;doprnt.c: 1247: while(c--) {
 24758  010E50  D0A4               	goto	l18327
 24759  010E52                     l18315:
 24760                           
 24761                           ; BSR set to: 2
 24762                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 24763  010E52  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 24764  010E56  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24765  010E5A  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24766  010E5E  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24767  010E62  518B               	movf	__doprnt@c& (0+255),w,b
 24768  010E64  0D04               	mullw	4
 24769  010E66  0EAF               	movlw	low _dpowers
 24770  010E68  24F3               	addwf	prodl,w,c
 24771  010E6A  6EF6               	movwf	tblptrl,c
 24772  010E6C  0EE7               	movlw	high _dpowers
 24773  010E6E  20F4               	addwfc	prodh,w,c
 24774  010E70  6EF7               	movwf	tblptrh,c
 24775  010E72                     	if	1	;There are 3 active tblptr bytes
 24776  010E72  6AF8               	clrf	tblptru,c
 24777  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
 24778  010E76  22F8               	addwfc	tblptru,f,c
 24779  010E78                     	endif
 24780  010E78  0009               	tblrd		*+
 24781  010E7A  CFF5 F204          	movff	tablat,___lldiv@divisor
 24782  010E7E  0009               	tblrd		*+
 24783  010E80  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24784  010E84  0009               	tblrd		*+
 24785  010E86  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24786  010E8A  000A               	tblrd		*-
 24787  010E8C  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24788  010E90  EC2B  F0D8         	call	___lldiv	;wreg free
 24789  010E94  C200  F279         	movff	?___lldiv,__doprnt@tmpval
 24790  010E98  C201  F27A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24791  010E9C  C202  F27B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24792  010EA0  C203  F27C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24793                           
 24794                           ;doprnt.c: 1249: tmpval.vd %= 10;
 24795  010EA4  C279  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24796  010EA8  C27A  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24797  010EAC  C27B  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24798  010EB0  C27C  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24799  010EB4  0E0A               	movlw	10
 24800  010EB6  0102               	movlb	2	; () banked
 24801  010EB8  6F11               	movwf	___llmod@divisor& (0+255),b
 24802  010EBA  0E00               	movlw	0
 24803  010EBC  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24804  010EBE  0E00               	movlw	0
 24805  010EC0  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24806  010EC2  0E00               	movlw	0
 24807  010EC4  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24808  010EC6  EC9A  F0D9         	call	___llmod	;wreg free
 24809  010ECA  C20D  F279         	movff	?___llmod,__doprnt@tmpval
 24810  010ECE  C20E  F27A         	movff	?___llmod+1,__doprnt@tmpval+1
 24811  010ED2  C20F  F27B         	movff	?___llmod+2,__doprnt@tmpval+2
 24812  010ED6  C210  F27C         	movff	?___llmod+3,__doprnt@tmpval+3
 24813  010EDA  0102               	movlb	2	; () banked
 24814  010EDC  EE20 F002          	lfsr	2,2
 24815  010EE0  5154               	movf	__doprnt@pb& (0+255),w,b
 24816  010EE2  26D9               	addwf	fsr2l,f,c
 24817  010EE4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24818  010EE6  22DA               	addwfc	fsr2h,f,c
 24819  010EE8  50DE               	movf	postinc2,w,c
 24820  010EEA  10DE               	iorwf	postinc2,w,c
 24821  010EEC  10DE               	iorwf	postinc2,w,c
 24822  010EEE  B4D8               	btfsc	status,2,c
 24823  010EF0  D014               	goto	l18323
 24824                           
 24825                           ; BSR set to: 2
 24826  010EF2  EE20 F002          	lfsr	2,2
 24827  010EF6  5154               	movf	__doprnt@pb& (0+255),w,b
 24828  010EF8  26D9               	addwf	fsr2l,f,c
 24829  010EFA  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24830  010EFC  22DA               	addwfc	fsr2h,f,c
 24831  010EFE  D801               	call	u22708
 24832  010F00  D022               	goto	l18325
 24833  010F02                     u22708:
 24834  010F02  0005               	push	
 24835  010F04  6EFA               	movwf	pclath,c
 24836  010F06  50DE               	movf	postinc2,w,c
 24837  010F08  6EFD               	movwf	tosl,c
 24838  010F0A  50DE               	movf	postinc2,w,c
 24839  010F0C  6EFE               	movwf	tosh,c
 24840  010F0E  50DE               	movf	postinc2,w,c
 24841  010F10  6EFF               	movwf	tosu,c
 24842  010F12  50FA               	movf	pclath,w,c
 24843  010F14  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24844  010F16  0F30               	addlw	48
 24845  010F18  0012               	return		;indir
 24846  010F1A                     l18323:
 24847                           
 24848                           ; BSR set to: 2
 24849  010F1A  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24850  010F1C  0F30               	addlw	48
 24851  010F1E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24852  010F22  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24853  010F26  CFDE F25A          	movff	postinc2,??__doprnt
 24854  010F2A  CFDD F25B          	movff	postdec2,??__doprnt+1
 24855  010F2E  C25A  FFD9         	movff	??__doprnt,fsr2l
 24856  010F32  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24857  010F36  6EDF               	movwf	indf2,c
 24858  010F38  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24859  010F3C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24860  010F40  2ADE               	incf	postinc2,f,c
 24861  010F42  0E00               	movlw	0
 24862  010F44  22DD               	addwfc	postdec2,f,c
 24863  010F46                     l18325:
 24864                           
 24865                           ;doprnt.c: 1251: val %= dpowers[c];
 24866  010F46  C281  F20D         	movff	__doprnt@val,___llmod@dividend
 24867  010F4A  C282  F20E         	movff	__doprnt@val+1,___llmod@dividend+1
 24868  010F4E  C283  F20F         	movff	__doprnt@val+2,___llmod@dividend+2
 24869  010F52  C284  F210         	movff	__doprnt@val+3,___llmod@dividend+3
 24870  010F56  0102               	movlb	2	; () banked
 24871  010F58  518B               	movf	__doprnt@c& (0+255),w,b
 24872  010F5A  0D04               	mullw	4
 24873  010F5C  0EAF               	movlw	low _dpowers
 24874  010F5E  24F3               	addwf	prodl,w,c
 24875  010F60  6EF6               	movwf	tblptrl,c
 24876  010F62  0EE7               	movlw	high _dpowers
 24877  010F64  20F4               	addwfc	prodh,w,c
 24878  010F66  6EF7               	movwf	tblptrh,c
 24879  010F68                     	if	1	;There are 3 active tblptr bytes
 24880  010F68  6AF8               	clrf	tblptru,c
 24881  010F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 24882  010F6C  22F8               	addwfc	tblptru,f,c
 24883  010F6E                     	endif
 24884  010F6E  0009               	tblrd		*+
 24885  010F70  CFF5 F211          	movff	tablat,___llmod@divisor
 24886  010F74  0009               	tblrd		*+
 24887  010F76  CFF5 F212          	movff	tablat,___llmod@divisor+1
 24888  010F7A  0009               	tblrd		*+
 24889  010F7C  CFF5 F213          	movff	tablat,___llmod@divisor+2
 24890  010F80  000A               	tblrd		*-
 24891  010F82  CFF5 F214          	movff	tablat,___llmod@divisor+3
 24892  010F86  EC9A  F0D9         	call	___llmod
 24893  010F8A  C20D  F281         	movff	?___llmod,__doprnt@val
 24894  010F8E  C20E  F282         	movff	?___llmod+1,__doprnt@val+1
 24895  010F92  C20F  F283         	movff	?___llmod+2,__doprnt@val+2
 24896  010F96  C210  F284         	movff	?___llmod+3,__doprnt@val+3
 24897  010F9A                     l18327:
 24898  010F9A  0102               	movlb	2	; () banked
 24899  010F9C  078B               	decf	__doprnt@c& (0+255),f,b
 24900  010F9E  298B               	incf	__doprnt@c& (0+255),w,b
 24901  010FA0  B4D8               	btfsc	status,2,c
 24902  010FA2  D038               	goto	l18339
 24903  010FA4  D756               	goto	l18315
 24904  010FA6                     l18329:
 24905                           
 24906                           ; BSR set to: 2
 24907  010FA6  EE20 F002          	lfsr	2,2
 24908  010FAA  5154               	movf	__doprnt@pb& (0+255),w,b
 24909  010FAC  26D9               	addwf	fsr2l,f,c
 24910  010FAE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24911  010FB0  22DA               	addwfc	fsr2h,f,c
 24912  010FB2  50DE               	movf	postinc2,w,c
 24913  010FB4  10DE               	iorwf	postinc2,w,c
 24914  010FB6  10DE               	iorwf	postinc2,w,c
 24915  010FB8  B4D8               	btfsc	status,2,c
 24916  010FBA  D013               	goto	l18333
 24917                           
 24918                           ; BSR set to: 2
 24919  010FBC  EE20 F002          	lfsr	2,2
 24920  010FC0  5154               	movf	__doprnt@pb& (0+255),w,b
 24921  010FC2  26D9               	addwf	fsr2l,f,c
 24922  010FC4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24923  010FC6  22DA               	addwfc	fsr2h,f,c
 24924  010FC8  D801               	call	u22738
 24925  010FCA  D020               	goto	l18337
 24926  010FCC                     u22738:
 24927  010FCC  0005               	push	
 24928  010FCE  6EFA               	movwf	pclath,c
 24929  010FD0  50DE               	movf	postinc2,w,c
 24930  010FD2  6EFD               	movwf	tosl,c
 24931  010FD4  50DE               	movf	postinc2,w,c
 24932  010FD6  6EFE               	movwf	tosh,c
 24933  010FD8  50DE               	movf	postinc2,w,c
 24934  010FDA  6EFF               	movwf	tosu,c
 24935  010FDC  50FA               	movf	pclath,w,c
 24936  010FDE  0E30               	movlw	48
 24937  010FE0  0012               	return		;indir
 24938  010FE2                     l18333:
 24939                           
 24940                           ; BSR set to: 2
 24941  010FE2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24942  010FE6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24943  010FEA  CFDE F25A          	movff	postinc2,??__doprnt
 24944  010FEE  CFDD F25B          	movff	postdec2,??__doprnt+1
 24945  010FF2  C25A  FFD9         	movff	??__doprnt,fsr2l
 24946  010FF6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24947  010FFA  0E30               	movlw	48
 24948  010FFC  6EDF               	movwf	indf2,c
 24949                           
 24950                           ; BSR set to: 2
 24951  010FFE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24952  011002  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24953  011006  2ADE               	incf	postinc2,f,c
 24954  011008  0E00               	movlw	0
 24955  01100A  22DD               	addwfc	postdec2,f,c
 24956  01100C                     l18337:
 24957                           
 24958                           ;doprnt.c: 1256: prec--;
 24959  01100C  0102               	movlb	2	; () banked
 24960  01100E  0787               	decf	__doprnt@prec& (0+255),f,b
 24961  011010  A0D8               	btfss	status,0,c
 24962  011012  0788               	decf	(__doprnt@prec+1)& (0+255),f,b
 24963  011014                     l18339:
 24964                           
 24965                           ; BSR set to: 2
 24966  011014  5187               	movf	__doprnt@prec& (0+255),w,b
 24967  011016  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24968  011018  B4D8               	btfsc	status,2,c
 24969  01101A  D361               	goto	u23190
 24970  01101C  D7C4               	goto	l18329
 24971  01101E                     l18341:
 24972                           
 24973                           ; BSR set to: 2
 24974                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 24975  01101E  0EC0               	movlw	192
 24976  011020  1589               	andwf	__doprnt@flag& (0+255),w,b
 24977  011022  6F5A               	movwf	??__doprnt& (0+255),b
 24978  011024  0E00               	movlw	0
 24979  011026  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24980  011028  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 24981  01102A  515A               	movf	??__doprnt& (0+255),w,b
 24982  01102C  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 24983  01102E  A4D8               	btfss	status,2,c
 24984  011030  D041               	goto	l2586
 24985                           
 24986                           ; BSR set to: 2
 24987                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 24988  011032  A989               	btfss	__doprnt@flag& (0+255),4,b
 24989  011034  D019               	goto	l18347
 24990                           
 24991                           ; BSR set to: 2
 24992                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 24993  011036  C258  FFD9         	movff	__doprnt@ap,fsr2l
 24994  01103A  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 24995  01103E  CFDF F25A          	movff	indf2,??__doprnt
 24996  011042  0E04               	movlw	4
 24997  011044  26DE               	addwf	postinc2,f,c
 24998  011046  CFDF F25B          	movff	indf2,??__doprnt+1
 24999  01104A  0E00               	movlw	0
 25000  01104C  22DD               	addwfc	postdec2,f,c
 25001  01104E  C25A  FFD9         	movff	??__doprnt,fsr2l
 25002  011052  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25003  011056  CFDE F281          	movff	postinc2,__doprnt@val
 25004  01105A  CFDE F282          	movff	postinc2,__doprnt@val+1
 25005  01105E  CFDE F283          	movff	postinc2,__doprnt@val+2
 25006  011062  CFDE F284          	movff	postinc2,__doprnt@val+3
 25007  011066  D019               	goto	l18349
 25008  011068                     l18347:
 25009                           
 25010                           ; BSR set to: 2
 25011                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 25012  011068  C258  FFD9         	movff	__doprnt@ap,fsr2l
 25013  01106C  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 25014  011070  CFDF F25A          	movff	indf2,??__doprnt
 25015  011074  0E02               	movlw	2
 25016  011076  26DE               	addwf	postinc2,f,c
 25017  011078  CFDF F25B          	movff	indf2,??__doprnt+1
 25018  01107C  0E00               	movlw	0
 25019  01107E  22DD               	addwfc	postdec2,f,c
 25020  011080  C25A  FFD9         	movff	??__doprnt,fsr2l
 25021  011084  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25022  011088  CFDE F281          	movff	postinc2,__doprnt@val
 25023  01108C  CFDD F282          	movff	postdec2,__doprnt@val+1
 25024  011090  0E00               	movlw	0
 25025  011092  BF82               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25026  011094  0EFF               	movlw	-1
 25027  011096  6F83               	movwf	(__doprnt@val+2)& (0+255),b
 25028  011098  6F84               	movwf	(__doprnt@val+3)& (0+255),b
 25029  01109A                     l18349:
 25030                           
 25031                           ; BSR set to: 2
 25032                           ;doprnt.c: 1280: if((long)val < 0) {
 25033  01109A  AF84               	btfss	(__doprnt@val+3)& (0+255),7,b
 25034  01109C  D040               	goto	l18359
 25035                           
 25036                           ; BSR set to: 2
 25037                           ;doprnt.c: 1281: flag |= 0x03;
 25038  01109E  0E03               	movlw	3
 25039  0110A0  1389               	iorwf	__doprnt@flag& (0+255),f,b
 25040                           
 25041                           ; BSR set to: 2
 25042                           ;doprnt.c: 1282: val = -val;
 25043  0110A2  1F84               	comf	(__doprnt@val+3)& (0+255),f,b
 25044  0110A4  1F83               	comf	(__doprnt@val+2)& (0+255),f,b
 25045  0110A6  1F82               	comf	(__doprnt@val+1)& (0+255),f,b
 25046  0110A8  6D81               	negf	__doprnt@val& (0+255),b
 25047  0110AA  0E00               	movlw	0
 25048  0110AC  2382               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25049  0110AE  2383               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25050  0110B0  2384               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25051  0110B2  D035               	goto	l18359
 25052  0110B4                     l2586:
 25053                           
 25054                           ; BSR set to: 2
 25055                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 25056  0110B4  A989               	btfss	__doprnt@flag& (0+255),4,b
 25057  0110B6  D019               	goto	l18357
 25058                           
 25059                           ; BSR set to: 2
 25060                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25061  0110B8  C258  FFD9         	movff	__doprnt@ap,fsr2l
 25062  0110BC  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 25063  0110C0  CFDF F25A          	movff	indf2,??__doprnt
 25064  0110C4  0E04               	movlw	4
 25065  0110C6  26DE               	addwf	postinc2,f,c
 25066  0110C8  CFDF F25B          	movff	indf2,??__doprnt+1
 25067  0110CC  0E00               	movlw	0
 25068  0110CE  22DD               	addwfc	postdec2,f,c
 25069  0110D0  C25A  FFD9         	movff	??__doprnt,fsr2l
 25070  0110D4  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25071  0110D8  CFDE F281          	movff	postinc2,__doprnt@val
 25072  0110DC  CFDE F282          	movff	postinc2,__doprnt@val+1
 25073  0110E0  CFDE F283          	movff	postinc2,__doprnt@val+2
 25074  0110E4  CFDE F284          	movff	postinc2,__doprnt@val+3
 25075  0110E8  D01A               	goto	l18359
 25076  0110EA                     l18357:
 25077                           
 25078                           ; BSR set to: 2
 25079                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 25080  0110EA  C258  FFD9         	movff	__doprnt@ap,fsr2l
 25081  0110EE  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 25082  0110F2  CFDF F25A          	movff	indf2,??__doprnt
 25083  0110F6  0E02               	movlw	2
 25084  0110F8  26DE               	addwf	postinc2,f,c
 25085  0110FA  CFDF F25B          	movff	indf2,??__doprnt+1
 25086  0110FE  0E00               	movlw	0
 25087  011100  22DD               	addwfc	postdec2,f,c
 25088  011102  C25A  FFD9         	movff	??__doprnt,fsr2l
 25089  011106  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25090  01110A  CFDE F25C          	movff	postinc2,??__doprnt+2
 25091  01110E  CFDD F25D          	movff	postdec2,??__doprnt+3
 25092  011112  C25C  F281         	movff	??__doprnt+2,__doprnt@val
 25093  011116  C25D  F282         	movff	??__doprnt+3,__doprnt@val+1
 25094  01111A  6B83               	clrf	(__doprnt@val+2)& (0+255),b
 25095  01111C  6B84               	clrf	(__doprnt@val+3)& (0+255),b
 25096  01111E                     l18359:
 25097                           
 25098                           ; BSR set to: 2
 25099                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 25100  01111E  5187               	movf	__doprnt@prec& (0+255),w,b
 25101  011120  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25102  011122  A4D8               	btfss	status,2,c
 25103  011124  D04B               	goto	l18395
 25104                           
 25105                           ; BSR set to: 2
 25106  011126  5181               	movf	__doprnt@val& (0+255),w,b
 25107  011128  1182               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25108  01112A  1183               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25109  01112C  1184               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25110  01112E  A4D8               	btfss	status,2,c
 25111  011130  D045               	goto	l18395
 25112                           
 25113                           ; BSR set to: 2
 25114                           ;doprnt.c: 1310: prec++;
 25115  011132  4B87               	infsnz	__doprnt@prec& (0+255),f,b
 25116  011134  2B88               	incf	(__doprnt@prec+1)& (0+255),f,b
 25117  011136  D042               	goto	l18395
 25118  011138                     l18365:
 25119                           
 25120                           ; BSR set to: 2
 25121                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 25122  011138  0E01               	movlw	1
 25123  01113A  6F8B               	movwf	__doprnt@c& (0+255),b
 25124  01113C                     l18367:
 25125                           
 25126                           ; BSR set to: 2
 25127  01113C  0E0A               	movlw	10
 25128  01113E  198B               	xorwf	__doprnt@c& (0+255),w,b
 25129  011140  B4D8               	btfsc	status,2,c
 25130  011142  D047               	goto	l18397
 25131                           
 25132                           ; BSR set to: 2
 25133                           ;doprnt.c: 1325: if(val < dpowers[c])
 25134  011144  518B               	movf	__doprnt@c& (0+255),w,b
 25135  011146  0D04               	mullw	4
 25136  011148  0EAF               	movlw	low _dpowers
 25137  01114A  24F3               	addwf	prodl,w,c
 25138  01114C  6EF6               	movwf	tblptrl,c
 25139  01114E  0EE7               	movlw	high _dpowers
 25140  011150  20F4               	addwfc	prodh,w,c
 25141  011152  6EF7               	movwf	tblptrh,c
 25142  011154                     	if	1	;There are 3 active tblptr bytes
 25143  011154  6AF8               	clrf	tblptru,c
 25144  011156  0E00               	movlw	low (__mediumconst shr (0+16))
 25145  011158  22F8               	addwfc	tblptru,f,c
 25146  01115A                     	endif
 25147  01115A  0009               	tblrd		*+
 25148  01115C  50F5               	movf	tablat,w,c
 25149  01115E  5D81               	subwf	__doprnt@val& (0+255),w,b
 25150  011160  0009               	tblrd		*+
 25151  011162  50F5               	movf	tablat,w,c
 25152  011164  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25153  011166  0009               	tblrd		*+
 25154  011168  50F5               	movf	tablat,w,c
 25155  01116A  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25156  01116C  0009               	tblrd		*+
 25157  01116E  50F5               	movf	tablat,w,c
 25158  011170  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25159  011172  A0D8               	btfss	status,0,c
 25160  011174  D02E               	goto	l18397
 25161                           
 25162                           ; BSR set to: 2
 25163  011176  2B8B               	incf	__doprnt@c& (0+255),f,b
 25164  011178  D7E1               	goto	l18367
 25165  01117A                     l18379:
 25166                           
 25167                           ; BSR set to: 2
 25168                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25169  01117A  0E01               	movlw	1
 25170  01117C  6F8B               	movwf	__doprnt@c& (0+255),b
 25171  01117E                     l18381:
 25172                           
 25173                           ; BSR set to: 2
 25174  01117E  0E08               	movlw	8
 25175  011180  198B               	xorwf	__doprnt@c& (0+255),w,b
 25176  011182  B4D8               	btfsc	status,2,c
 25177  011184  D026               	goto	l18397
 25178                           
 25179                           ; BSR set to: 2
 25180                           ;doprnt.c: 1336: if(val < hexpowers[c])
 25181  011186  518B               	movf	__doprnt@c& (0+255),w,b
 25182  011188  0D04               	mullw	4
 25183  01118A  0E8F               	movlw	low _hexpowers
 25184  01118C  24F3               	addwf	prodl,w,c
 25185  01118E  6EF6               	movwf	tblptrl,c
 25186  011190  0EE4               	movlw	high _hexpowers
 25187  011192  20F4               	addwfc	prodh,w,c
 25188  011194  6EF7               	movwf	tblptrh,c
 25189  011196                     	if	1	;There are 3 active tblptr bytes
 25190  011196  6AF8               	clrf	tblptru,c
 25191  011198  0E00               	movlw	low (__mediumconst shr (0+16))
 25192  01119A  22F8               	addwfc	tblptru,f,c
 25193  01119C                     	endif
 25194  01119C  0009               	tblrd		*+
 25195  01119E  50F5               	movf	tablat,w,c
 25196  0111A0  5D81               	subwf	__doprnt@val& (0+255),w,b
 25197  0111A2  0009               	tblrd		*+
 25198  0111A4  50F5               	movf	tablat,w,c
 25199  0111A6  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25200  0111A8  0009               	tblrd		*+
 25201  0111AA  50F5               	movf	tablat,w,c
 25202  0111AC  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25203  0111AE  0009               	tblrd		*+
 25204  0111B0  50F5               	movf	tablat,w,c
 25205  0111B2  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25206  0111B4  A0D8               	btfss	status,0,c
 25207  0111B6  D00D               	goto	l18397
 25208                           
 25209                           ; BSR set to: 2
 25210  0111B8  2B8B               	incf	__doprnt@c& (0+255),f,b
 25211  0111BA  D7E1               	goto	l18381
 25212  0111BC                     l18395:
 25213                           
 25214                           ; BSR set to: 2
 25215  0111BC  5189               	movf	__doprnt@flag& (0+255),w,b
 25216  0111BE  0BC0               	andlw	192
 25217                           
 25218                           ; Switch size 1, requested type "simple"
 25219                           ; Number of cases is 3, Range of values is 0 to 192
 25220                           ; switch strategies available:
 25221                           ; Name         Instructions Cycles
 25222                           ; simple_byte           10     6 (average)
 25223                           ;	Chosen strategy is simple_byte
 25224  0111C0  0A00               	xorlw	0	; case 0
 25225  0111C2  B4D8               	btfsc	status,2,c
 25226  0111C4  D7B9               	goto	l18365
 25227  0111C6  0A80               	xorlw	128	; case 128
 25228  0111C8  B4D8               	btfsc	status,2,c
 25229  0111CA  D7D7               	goto	l18379
 25230  0111CC  0A40               	xorlw	64	; case 192
 25231  0111CE  B4D8               	btfsc	status,2,c
 25232  0111D0  D7B3               	goto	l18365
 25233  0111D2                     l18397:
 25234                           
 25235                           ; BSR set to: 2
 25236                           ;doprnt.c: 1358: if(c < prec)
 25237  0111D2  518B               	movf	__doprnt@c& (0+255),w,b
 25238  0111D4  6F5A               	movwf	??__doprnt& (0+255),b
 25239  0111D6  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25240  0111D8  5187               	movf	__doprnt@prec& (0+255),w,b
 25241  0111DA  5D5A               	subwf	??__doprnt& (0+255),w,b
 25242  0111DC  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25243  0111DE  0A80               	xorlw	128
 25244  0111E0  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25245  0111E2  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25246  0111E4  0A80               	xorlw	128
 25247  0111E6  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25248  0111E8  B0D8               	btfsc	status,0,c
 25249  0111EA  D003               	goto	l18401
 25250                           
 25251                           ; BSR set to: 2
 25252                           ;doprnt.c: 1359: c = prec;
 25253  0111EC  C287  F28B         	movff	__doprnt@prec,__doprnt@c
 25254  0111F0  D010               	goto	l18405
 25255  0111F2                     l18401:
 25256                           
 25257                           ; BSR set to: 2
 25258                           ;doprnt.c: 1360: else if(prec < c)
 25259  0111F2  518B               	movf	__doprnt@c& (0+255),w,b
 25260  0111F4  6F5A               	movwf	??__doprnt& (0+255),b
 25261  0111F6  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25262  0111F8  515A               	movf	??__doprnt& (0+255),w,b
 25263  0111FA  5D87               	subwf	__doprnt@prec& (0+255),w,b
 25264  0111FC  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25265  0111FE  0A80               	xorlw	128
 25266  011200  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25267  011202  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25268  011204  0A80               	xorlw	128
 25269  011206  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25270  011208  B0D8               	btfsc	status,0,c
 25271  01120A  D003               	goto	l18405
 25272                           
 25273                           ; BSR set to: 2
 25274                           ;doprnt.c: 1361: prec = c;
 25275  01120C  C28B  F287         	movff	__doprnt@c,__doprnt@prec
 25276  011210  6B88               	clrf	(__doprnt@prec+1)& (0+255),b
 25277  011212                     l18405:
 25278                           
 25279                           ; BSR set to: 2
 25280                           ;doprnt.c: 1364: if(width && flag & 0x03)
 25281  011212  5185               	movf	__doprnt@width& (0+255),w,b
 25282  011214  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25283  011216  B4D8               	btfsc	status,2,c
 25284  011218  D00D               	goto	l18411
 25285                           
 25286                           ; BSR set to: 2
 25287  01121A  0E03               	movlw	3
 25288  01121C  1589               	andwf	__doprnt@flag& (0+255),w,b
 25289  01121E  6F5A               	movwf	??__doprnt& (0+255),b
 25290  011220  0E00               	movlw	0
 25291  011222  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25292  011224  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 25293  011226  515A               	movf	??__doprnt& (0+255),w,b
 25294  011228  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 25295  01122A  B4D8               	btfsc	status,2,c
 25296  01122C  D003               	goto	l18411
 25297                           
 25298                           ; BSR set to: 2
 25299                           ;doprnt.c: 1365: width--;
 25300  01122E  0785               	decf	__doprnt@width& (0+255),f,b
 25301  011230  A0D8               	btfss	status,0,c
 25302  011232  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25303  011234                     l18411:
 25304                           
 25305                           ; BSR set to: 2
 25306                           ;doprnt.c: 1367: if(flag & 0x4000) {
 25307  011234  AD8A               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25308  011236  D013               	goto	l18419
 25309                           
 25310                           ; BSR set to: 2
 25311                           ;doprnt.c: 1368: if(width > prec)
 25312  011238  5185               	movf	__doprnt@width& (0+255),w,b
 25313  01123A  5D87               	subwf	__doprnt@prec& (0+255),w,b
 25314  01123C  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25315  01123E  0A80               	xorlw	128
 25316  011240  6F5A               	movwf	??__doprnt& (0+255),b
 25317  011242  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 25318  011244  0A80               	xorlw	128
 25319  011246  595A               	subwfb	??__doprnt& (0+255),w,b
 25320  011248  B0D8               	btfsc	status,0,c
 25321  01124A  D005               	goto	l18417
 25322                           
 25323                           ; BSR set to: 2
 25324                           ;doprnt.c: 1369: width -= prec;
 25325  01124C  5187               	movf	__doprnt@prec& (0+255),w,b
 25326  01124E  5F85               	subwf	__doprnt@width& (0+255),f,b
 25327  011250  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25328  011252  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25329  011254  D004               	goto	l18419
 25330  011256                     l18417:
 25331                           
 25332                           ; BSR set to: 2
 25333                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 25334  011256  0E00               	movlw	0
 25335  011258  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 25336  01125A  0E00               	movlw	0
 25337  01125C  6F85               	movwf	__doprnt@width& (0+255),b
 25338  01125E                     l18419:
 25339                           
 25340                           ; BSR set to: 2
 25341                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 25342  01125E  518B               	movf	__doprnt@c& (0+255),w,b
 25343  011260  6F5A               	movwf	??__doprnt& (0+255),b
 25344  011262  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25345  011264  5185               	movf	__doprnt@width& (0+255),w,b
 25346  011266  5D5A               	subwf	??__doprnt& (0+255),w,b
 25347  011268  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25348  01126A  0A80               	xorlw	128
 25349  01126C  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25350  01126E  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 25351  011270  0A80               	xorlw	128
 25352  011272  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25353  011274  B0D8               	btfsc	status,0,c
 25354  011276  D005               	goto	l18423
 25355                           
 25356                           ; BSR set to: 2
 25357                           ;doprnt.c: 1401: width -= c;
 25358  011278  518B               	movf	__doprnt@c& (0+255),w,b
 25359  01127A  5F85               	subwf	__doprnt@width& (0+255),f,b
 25360  01127C  0E00               	movlw	0
 25361  01127E  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25362  011280  D004               	goto	l18425
 25363  011282                     l18423:
 25364                           
 25365                           ; BSR set to: 2
 25366                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 25367  011282  0E00               	movlw	0
 25368  011284  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 25369  011286  0E00               	movlw	0
 25370  011288  6F85               	movwf	__doprnt@width& (0+255),b
 25371  01128A                     l18425:
 25372                           
 25373                           ; BSR set to: 2
 25374                           ;doprnt.c: 1406: if(flag & 0x04) {
 25375  01128A  A589               	btfss	__doprnt@flag& (0+255),2,b
 25376  01128C  D0B5               	goto	l18467
 25377                           
 25378                           ; BSR set to: 2
 25379                           ;doprnt.c: 1408: if(flag & 0x02)
 25380  01128E  A389               	btfss	__doprnt@flag& (0+255),1,b
 25381  011290  D041               	goto	l2615
 25382                           
 25383                           ; BSR set to: 2
 25384  011292  EE20 F002          	lfsr	2,2
 25385  011296  5154               	movf	__doprnt@pb& (0+255),w,b
 25386  011298  26D9               	addwf	fsr2l,f,c
 25387  01129A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25388  01129C  22DA               	addwfc	fsr2h,f,c
 25389  01129E  50DE               	movf	postinc2,w,c
 25390  0112A0  10DE               	iorwf	postinc2,w,c
 25391  0112A2  10DE               	iorwf	postinc2,w,c
 25392  0112A4  B4D8               	btfsc	status,2,c
 25393  0112A6  D01D               	goto	l2617
 25394                           
 25395                           ; BSR set to: 2
 25396  0112A8  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25397  0112AA  D004               	goto	l18435
 25398                           
 25399                           ; BSR set to: 2
 25400  0112AC  0E00               	movlw	0
 25401  0112AE  6F6C               	movwf	(__doprnt$4985+1)& (0+255),b
 25402  0112B0  0E2B               	movlw	43
 25403  0112B2  D003               	goto	L13
 25404  0112B4                     l18435:
 25405                           
 25406                           ; BSR set to: 2
 25407  0112B4  0E00               	movlw	0
 25408  0112B6  6F6C               	movwf	(__doprnt$4985+1)& (0+255),b
 25409  0112B8  0E2D               	movlw	45
 25410  0112BA                     L13:
 25411  0112BA  6F6B               	movwf	__doprnt$4985& (0+255),b
 25412                           
 25413                           ; BSR set to: 2
 25414  0112BC  EE20 F002          	lfsr	2,2
 25415  0112C0  5154               	movf	__doprnt@pb& (0+255),w,b
 25416  0112C2  26D9               	addwf	fsr2l,f,c
 25417  0112C4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25418  0112C6  22DA               	addwfc	fsr2h,f,c
 25419  0112C8  D801               	call	u22968
 25420  0112CA  D059               	goto	l18455
 25421  0112CC                     u22968:
 25422  0112CC  0005               	push	
 25423  0112CE  6EFA               	movwf	pclath,c
 25424  0112D0  50DE               	movf	postinc2,w,c
 25425  0112D2  6EFD               	movwf	tosl,c
 25426  0112D4  50DE               	movf	postinc2,w,c
 25427  0112D6  6EFE               	movwf	tosh,c
 25428  0112D8  50DE               	movf	postinc2,w,c
 25429  0112DA  6EFF               	movwf	tosu,c
 25430  0112DC  50FA               	movf	pclath,w,c
 25431  0112DE  516B               	movf	__doprnt$4985& (0+255),w,b
 25432  0112E0  0012               	return		;indir
 25433  0112E2                     l2617:
 25434                           
 25435                           ; BSR set to: 2
 25436  0112E2  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25437  0112E4  D004               	goto	l18441
 25438                           
 25439                           ; BSR set to: 2
 25440  0112E6  0E00               	movlw	0
 25441  0112E8  6F6E               	movwf	(__doprnt$4986+1)& (0+255),b
 25442  0112EA  0E2B               	movlw	43
 25443  0112EC  D003               	goto	L14
 25444  0112EE                     l18441:
 25445                           
 25446                           ; BSR set to: 2
 25447  0112EE  0E00               	movlw	0
 25448  0112F0  6F6E               	movwf	(__doprnt$4986+1)& (0+255),b
 25449  0112F2  0E2D               	movlw	45
 25450  0112F4                     L14:
 25451  0112F4  6F6D               	movwf	__doprnt$4986& (0+255),b
 25452                           
 25453                           ; BSR set to: 2
 25454  0112F6  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25455  0112FA  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25456  0112FE  CFDE F25A          	movff	postinc2,??__doprnt
 25457  011302  CFDD F25B          	movff	postdec2,??__doprnt+1
 25458  011306  C25A  FFD9         	movff	??__doprnt,fsr2l
 25459  01130A  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25460  01130E  C26D  FFDF         	movff	__doprnt$4986,indf2
 25461  011312  D02E               	goto	l18453
 25462  011314                     l2615:
 25463                           
 25464                           ; BSR set to: 2
 25465                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 25466  011314  A189               	btfss	__doprnt@flag& (0+255),0,b
 25467  011316  D033               	goto	l18455
 25468                           
 25469                           ; BSR set to: 2
 25470  011318  EE20 F002          	lfsr	2,2
 25471  01131C  5154               	movf	__doprnt@pb& (0+255),w,b
 25472  01131E  26D9               	addwf	fsr2l,f,c
 25473  011320  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25474  011322  22DA               	addwfc	fsr2h,f,c
 25475  011324  50DE               	movf	postinc2,w,c
 25476  011326  10DE               	iorwf	postinc2,w,c
 25477  011328  10DE               	iorwf	postinc2,w,c
 25478  01132A  B4D8               	btfsc	status,2,c
 25479  01132C  D013               	goto	l18451
 25480                           
 25481                           ; BSR set to: 2
 25482  01132E  EE20 F002          	lfsr	2,2
 25483  011332  5154               	movf	__doprnt@pb& (0+255),w,b
 25484  011334  26D9               	addwf	fsr2l,f,c
 25485  011336  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25486  011338  22DA               	addwfc	fsr2h,f,c
 25487  01133A  D801               	call	u23008
 25488  01133C  D020               	goto	l18455
 25489  01133E                     u23008:
 25490  01133E  0005               	push	
 25491  011340  6EFA               	movwf	pclath,c
 25492  011342  50DE               	movf	postinc2,w,c
 25493  011344  6EFD               	movwf	tosl,c
 25494  011346  50DE               	movf	postinc2,w,c
 25495  011348  6EFE               	movwf	tosh,c
 25496  01134A  50DE               	movf	postinc2,w,c
 25497  01134C  6EFF               	movwf	tosu,c
 25498  01134E  50FA               	movf	pclath,w,c
 25499  011350  0E20               	movlw	32
 25500  011352  0012               	return		;indir
 25501  011354                     l18451:
 25502                           
 25503                           ; BSR set to: 2
 25504  011354  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25505  011358  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25506  01135C  CFDE F25A          	movff	postinc2,??__doprnt
 25507  011360  CFDD F25B          	movff	postdec2,??__doprnt+1
 25508  011364  C25A  FFD9         	movff	??__doprnt,fsr2l
 25509  011368  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25510  01136C  0E20               	movlw	32
 25511  01136E  6EDF               	movwf	indf2,c
 25512  011370                     l18453:
 25513                           
 25514                           ; BSR set to: 2
 25515  011370  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25516  011374  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25517  011378  2ADE               	incf	postinc2,f,c
 25518  01137A  0E00               	movlw	0
 25519  01137C  22DD               	addwfc	postdec2,f,c
 25520  01137E                     l18455:
 25521                           
 25522                           ;doprnt.c: 1434: if(width)
 25523  01137E  0102               	movlb	2	; () banked
 25524  011380  5185               	movf	__doprnt@width& (0+255),w,b
 25525  011382  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25526  011384  B4D8               	btfsc	status,2,c
 25527  011386  D1A2               	goto	l18523
 25528                           
 25529                           ; BSR set to: 2
 25530  011388  EE20 F002          	lfsr	2,2
 25531  01138C  5154               	movf	__doprnt@pb& (0+255),w,b
 25532  01138E  26D9               	addwf	fsr2l,f,c
 25533  011390  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25534  011392  22DA               	addwfc	fsr2h,f,c
 25535  011394  50DE               	movf	postinc2,w,c
 25536  011396  10DE               	iorwf	postinc2,w,c
 25537  011398  10DE               	iorwf	postinc2,w,c
 25538  01139A  B4D8               	btfsc	status,2,c
 25539  01139C  D013               	goto	l18461
 25540                           
 25541                           ; BSR set to: 2
 25542  01139E  EE20 F002          	lfsr	2,2
 25543  0113A2  5154               	movf	__doprnt@pb& (0+255),w,b
 25544  0113A4  26D9               	addwf	fsr2l,f,c
 25545  0113A6  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25546  0113A8  22DA               	addwfc	fsr2h,f,c
 25547  0113AA  D801               	call	u23038
 25548  0113AC  D020               	goto	l18465
 25549  0113AE                     u23038:
 25550  0113AE  0005               	push	
 25551  0113B0  6EFA               	movwf	pclath,c
 25552  0113B2  50DE               	movf	postinc2,w,c
 25553  0113B4  6EFD               	movwf	tosl,c
 25554  0113B6  50DE               	movf	postinc2,w,c
 25555  0113B8  6EFE               	movwf	tosh,c
 25556  0113BA  50DE               	movf	postinc2,w,c
 25557  0113BC  6EFF               	movwf	tosu,c
 25558  0113BE  50FA               	movf	pclath,w,c
 25559  0113C0  0E30               	movlw	48
 25560  0113C2  0012               	return		;indir
 25561  0113C4                     l18461:
 25562                           
 25563                           ; BSR set to: 2
 25564  0113C4  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25565  0113C8  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25566  0113CC  CFDE F25A          	movff	postinc2,??__doprnt
 25567  0113D0  CFDD F25B          	movff	postdec2,??__doprnt+1
 25568  0113D4  C25A  FFD9         	movff	??__doprnt,fsr2l
 25569  0113D8  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25570  0113DC  0E30               	movlw	48
 25571  0113DE  6EDF               	movwf	indf2,c
 25572                           
 25573                           ; BSR set to: 2
 25574  0113E0  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25575  0113E4  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25576  0113E8  2ADE               	incf	postinc2,f,c
 25577  0113EA  0E00               	movlw	0
 25578  0113EC  22DD               	addwfc	postdec2,f,c
 25579  0113EE                     l18465:
 25580                           
 25581                           ;doprnt.c: 1437: while(--width);
 25582  0113EE  0102               	movlb	2	; () banked
 25583  0113F0  0785               	decf	__doprnt@width& (0+255),f,b
 25584  0113F2  A0D8               	btfss	status,0,c
 25585  0113F4  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25586  0113F6  D7C4               	goto	L57
 25587  0113F8                     l18467:
 25588                           
 25589                           ; BSR set to: 2
 25590                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 25591  0113F8  5185               	movf	__doprnt@width& (0+255),w,b
 25592  0113FA  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25593  0113FC  B4D8               	btfsc	status,2,c
 25594  0113FE  D03B               	goto	u23080
 25595  011400                     u23050:
 25596                           
 25597                           ; BSR set to: 2
 25598  011400  EE20 F002          	lfsr	2,2
 25599  011404  5154               	movf	__doprnt@pb& (0+255),w,b
 25600  011406  26D9               	addwf	fsr2l,f,c
 25601  011408  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25602  01140A  22DA               	addwfc	fsr2h,f,c
 25603  01140C  50DE               	movf	postinc2,w,c
 25604  01140E  10DE               	iorwf	postinc2,w,c
 25605  011410  10DE               	iorwf	postinc2,w,c
 25606  011412  B4D8               	btfsc	status,2,c
 25607  011414  D013               	goto	l18473
 25608                           
 25609                           ; BSR set to: 2
 25610  011416  EE20 F002          	lfsr	2,2
 25611  01141A  5154               	movf	__doprnt@pb& (0+255),w,b
 25612  01141C  26D9               	addwf	fsr2l,f,c
 25613  01141E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25614  011420  22DA               	addwfc	fsr2h,f,c
 25615  011422  D801               	call	u23078
 25616  011424  D020               	goto	l18477
 25617  011426                     u23078:
 25618  011426  0005               	push	
 25619  011428  6EFA               	movwf	pclath,c
 25620  01142A  50DE               	movf	postinc2,w,c
 25621  01142C  6EFD               	movwf	tosl,c
 25622  01142E  50DE               	movf	postinc2,w,c
 25623  011430  6EFE               	movwf	tosh,c
 25624  011432  50DE               	movf	postinc2,w,c
 25625  011434  6EFF               	movwf	tosu,c
 25626  011436  50FA               	movf	pclath,w,c
 25627  011438  0E20               	movlw	32
 25628  01143A  0012               	return		;indir
 25629  01143C                     l18473:
 25630                           
 25631                           ; BSR set to: 2
 25632  01143C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25633  011440  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25634  011444  CFDE F25A          	movff	postinc2,??__doprnt
 25635  011448  CFDD F25B          	movff	postdec2,??__doprnt+1
 25636  01144C  C25A  FFD9         	movff	??__doprnt,fsr2l
 25637  011450  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25638  011454  0E20               	movlw	32
 25639  011456  6EDF               	movwf	indf2,c
 25640                           
 25641                           ; BSR set to: 2
 25642  011458  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25643  01145C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25644  011460  2ADE               	incf	postinc2,f,c
 25645  011462  0E00               	movlw	0
 25646  011464  22DD               	addwfc	postdec2,f,c
 25647  011466                     l18477:
 25648                           
 25649                           ;doprnt.c: 1450: while(--width);
 25650  011466  0102               	movlb	2	; () banked
 25651  011468  0785               	decf	__doprnt@width& (0+255),f,b
 25652  01146A  A0D8               	btfss	status,0,c
 25653  01146C  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25654  01146E  5185               	movf	__doprnt@width& (0+255),w,b
 25655  011470  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25656  011472  A4D8               	btfss	status,2,c
 25657  011474  D7C5               	goto	u23050
 25658  011476                     u23080:
 25659                           
 25660                           ; BSR set to: 2
 25661                           ;doprnt.c: 1453: if(flag & 0x02)
 25662  011476  A389               	btfss	__doprnt@flag& (0+255),1,b
 25663  011478  D041               	goto	l2649
 25664                           
 25665                           ; BSR set to: 2
 25666  01147A  EE20 F002          	lfsr	2,2
 25667  01147E  5154               	movf	__doprnt@pb& (0+255),w,b
 25668  011480  26D9               	addwf	fsr2l,f,c
 25669  011482  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25670  011484  22DA               	addwfc	fsr2h,f,c
 25671  011486  50DE               	movf	postinc2,w,c
 25672  011488  10DE               	iorwf	postinc2,w,c
 25673  01148A  10DE               	iorwf	postinc2,w,c
 25674  01148C  B4D8               	btfsc	status,2,c
 25675  01148E  D01D               	goto	l2651
 25676                           
 25677                           ; BSR set to: 2
 25678  011490  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25679  011492  D004               	goto	l18485
 25680                           
 25681                           ; BSR set to: 2
 25682  011494  0E00               	movlw	0
 25683  011496  6F70               	movwf	(__doprnt$4987+1)& (0+255),b
 25684  011498  0E2B               	movlw	43
 25685  01149A  D003               	goto	L15
 25686  01149C                     l18485:
 25687                           
 25688                           ; BSR set to: 2
 25689  01149C  0E00               	movlw	0
 25690  01149E  6F70               	movwf	(__doprnt$4987+1)& (0+255),b
 25691  0114A0  0E2D               	movlw	45
 25692  0114A2                     L15:
 25693  0114A2  6F6F               	movwf	__doprnt$4987& (0+255),b
 25694                           
 25695                           ; BSR set to: 2
 25696  0114A4  EE20 F002          	lfsr	2,2
 25697  0114A8  5154               	movf	__doprnt@pb& (0+255),w,b
 25698  0114AA  26D9               	addwf	fsr2l,f,c
 25699  0114AC  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25700  0114AE  22DA               	addwfc	fsr2h,f,c
 25701  0114B0  D801               	call	u23128
 25702  0114B2  D10C               	goto	l18523
 25703  0114B4                     u23128:
 25704  0114B4  0005               	push	
 25705  0114B6  6EFA               	movwf	pclath,c
 25706  0114B8  50DE               	movf	postinc2,w,c
 25707  0114BA  6EFD               	movwf	tosl,c
 25708  0114BC  50DE               	movf	postinc2,w,c
 25709  0114BE  6EFE               	movwf	tosh,c
 25710  0114C0  50DE               	movf	postinc2,w,c
 25711  0114C2  6EFF               	movwf	tosu,c
 25712  0114C4  50FA               	movf	pclath,w,c
 25713  0114C6  516F               	movf	__doprnt$4987& (0+255),w,b
 25714  0114C8  0012               	return		;indir
 25715  0114CA                     l2651:
 25716                           
 25717                           ; BSR set to: 2
 25718  0114CA  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25719  0114CC  D004               	goto	l18491
 25720                           
 25721                           ; BSR set to: 2
 25722  0114CE  0E00               	movlw	0
 25723  0114D0  6F72               	movwf	(__doprnt$4988+1)& (0+255),b
 25724  0114D2  0E2B               	movlw	43
 25725  0114D4  D003               	goto	L16
 25726  0114D6                     l18491:
 25727                           
 25728                           ; BSR set to: 2
 25729  0114D6  0E00               	movlw	0
 25730  0114D8  6F72               	movwf	(__doprnt$4988+1)& (0+255),b
 25731  0114DA  0E2D               	movlw	45
 25732  0114DC                     L16:
 25733  0114DC  6F71               	movwf	__doprnt$4988& (0+255),b
 25734                           
 25735                           ; BSR set to: 2
 25736  0114DE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25737  0114E2  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25738  0114E6  CFDE F25A          	movff	postinc2,??__doprnt
 25739  0114EA  CFDD F25B          	movff	postdec2,??__doprnt+1
 25740  0114EE  C25A  FFD9         	movff	??__doprnt,fsr2l
 25741  0114F2  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25742  0114F6  C271  FFDF         	movff	__doprnt$4988,indf2
 25743  0114FA  D0E1               	goto	l18521
 25744  0114FC                     l2649:
 25745                           
 25746                           ; BSR set to: 2
 25747                           ;doprnt.c: 1462: else if(flag & 0x01)
 25748  0114FC  A189               	btfss	__doprnt@flag& (0+255),0,b
 25749  0114FE  D0E6               	goto	l18523
 25750                           
 25751                           ; BSR set to: 2
 25752  011500  EE20 F002          	lfsr	2,2
 25753  011504  5154               	movf	__doprnt@pb& (0+255),w,b
 25754  011506  26D9               	addwf	fsr2l,f,c
 25755  011508  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25756  01150A  22DA               	addwfc	fsr2h,f,c
 25757  01150C  50DE               	movf	postinc2,w,c
 25758  01150E  10DE               	iorwf	postinc2,w,c
 25759  011510  10DE               	iorwf	postinc2,w,c
 25760  011512  B4D8               	btfsc	status,2,c
 25761  011514  D013               	goto	l18501
 25762                           
 25763                           ; BSR set to: 2
 25764  011516  EE20 F002          	lfsr	2,2
 25765  01151A  5154               	movf	__doprnt@pb& (0+255),w,b
 25766  01151C  26D9               	addwf	fsr2l,f,c
 25767  01151E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25768  011520  22DA               	addwfc	fsr2h,f,c
 25769  011522  D801               	call	u23168
 25770  011524  D0D3               	goto	l18523
 25771  011526                     u23168:
 25772  011526  0005               	push	
 25773  011528  6EFA               	movwf	pclath,c
 25774  01152A  50DE               	movf	postinc2,w,c
 25775  01152C  6EFD               	movwf	tosl,c
 25776  01152E  50DE               	movf	postinc2,w,c
 25777  011530  6EFE               	movwf	tosh,c
 25778  011532  50DE               	movf	postinc2,w,c
 25779  011534  6EFF               	movwf	tosu,c
 25780  011536  50FA               	movf	pclath,w,c
 25781  011538  0E20               	movlw	32
 25782  01153A  0012               	return		;indir
 25783  01153C                     l18501:
 25784                           
 25785                           ; BSR set to: 2
 25786  01153C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25787  011540  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25788  011544  CFDE F25A          	movff	postinc2,??__doprnt
 25789  011548  CFDD F25B          	movff	postdec2,??__doprnt+1
 25790  01154C  C25A  FFD9         	movff	??__doprnt,fsr2l
 25791  011550  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25792  011554  0E20               	movlw	32
 25793  011556  6EDF               	movwf	indf2,c
 25794  011558  D0B2               	goto	l18521
 25795  01155A                     l18505:
 25796                           
 25797                           ; BSR set to: 2
 25798                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 25799  01155A  C287  F25A         	movff	__doprnt@prec,??__doprnt
 25800  01155E  C288  F25B         	movff	__doprnt@prec+1,??__doprnt+1
 25801  011562  90D8               	bcf	status,0,c
 25802  011564  375A               	rlcf	??__doprnt& (0+255),f,b
 25803  011566  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25804  011568  90D8               	bcf	status,0,c
 25805  01156A  375A               	rlcf	??__doprnt& (0+255),f,b
 25806  01156C  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25807  01156E  0EAF               	movlw	low _dpowers
 25808  011570  255A               	addwf	??__doprnt& (0+255),w,b
 25809  011572  6EF6               	movwf	tblptrl,c
 25810  011574  0EE7               	movlw	high _dpowers
 25811  011576  215B               	addwfc	(??__doprnt+1)& (0+255),w,b
 25812  011578  6EF7               	movwf	tblptrh,c
 25813  01157A                     	if	1	;There are 3 active tblptr bytes
 25814  01157A  6AF8               	clrf	tblptru,c
 25815  01157C  0E00               	movlw	low (__mediumconst shr (0+16))
 25816  01157E  22F8               	addwfc	tblptru,f,c
 25817  011580                     	endif
 25818  011580  0009               	tblrd		*+
 25819  011582  CFF5 F204          	movff	tablat,___lldiv@divisor
 25820  011586  0009               	tblrd		*+
 25821  011588  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25822  01158C  0009               	tblrd		*+
 25823  01158E  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25824  011592  000A               	tblrd		*-
 25825  011594  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25826  011598  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 25827  01159C  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25828  0115A0  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25829  0115A4  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25830  0115A8  EC2B  F0D8         	call	___lldiv
 25831  0115AC  C200  F20D         	movff	?___lldiv,___llmod@dividend
 25832  0115B0  C201  F20E         	movff	?___lldiv+1,___llmod@dividend+1
 25833  0115B4  C202  F20F         	movff	?___lldiv+2,___llmod@dividend+2
 25834  0115B8  C203  F210         	movff	?___lldiv+3,___llmod@dividend+3
 25835  0115BC  0E0A               	movlw	10
 25836  0115BE  0102               	movlb	2	; () banked
 25837  0115C0  6F11               	movwf	___llmod@divisor& (0+255),b
 25838  0115C2  0E00               	movlw	0
 25839  0115C4  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 25840  0115C6  0E00               	movlw	0
 25841  0115C8  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 25842  0115CA  0E00               	movlw	0
 25843  0115CC  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 25844  0115CE  EC9A  F0D9         	call	___llmod	;wreg free
 25845  0115D2  0102               	movlb	2	; () banked
 25846  0115D4  510D               	movf	?___llmod& (0+255),w,b
 25847  0115D6  0F30               	addlw	48
 25848  0115D8  6F8B               	movwf	__doprnt@c& (0+255),b
 25849                           
 25850                           ;doprnt.c: 1510: break;
 25851  0115DA  D045               	goto	l18515
 25852  0115DC                     l18507:
 25853                           
 25854                           ; BSR set to: 2
 25855                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25856  0115DC  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 25857  0115E0  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25858  0115E4  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25859  0115E8  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25860  0115EC  C287  F25A         	movff	__doprnt@prec,??__doprnt
 25861  0115F0  C288  F25B         	movff	__doprnt@prec+1,??__doprnt+1
 25862  0115F4  90D8               	bcf	status,0,c
 25863  0115F6  375A               	rlcf	??__doprnt& (0+255),f,b
 25864  0115F8  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25865  0115FA  90D8               	bcf	status,0,c
 25866  0115FC  375A               	rlcf	??__doprnt& (0+255),f,b
 25867  0115FE  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25868  011600  0E8F               	movlw	low _hexpowers
 25869  011602  255A               	addwf	??__doprnt& (0+255),w,b
 25870  011604  6EF6               	movwf	tblptrl,c
 25871  011606  0EE4               	movlw	high _hexpowers
 25872  011608  215B               	addwfc	(??__doprnt+1)& (0+255),w,b
 25873  01160A  6EF7               	movwf	tblptrh,c
 25874  01160C                     	if	1	;There are 3 active tblptr bytes
 25875  01160C  6AF8               	clrf	tblptru,c
 25876  01160E  0E00               	movlw	low (__mediumconst shr (0+16))
 25877  011610  22F8               	addwfc	tblptru,f,c
 25878  011612                     	endif
 25879  011612  0009               	tblrd		*+
 25880  011614  CFF5 F204          	movff	tablat,___lldiv@divisor
 25881  011618  0009               	tblrd		*+
 25882  01161A  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25883  01161E  0009               	tblrd		*+
 25884  011620  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25885  011624  000A               	tblrd		*-
 25886  011626  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25887  01162A  EC2B  F0D8         	call	___lldiv	;wreg free
 25888  01162E  0102               	movlb	2	; () banked
 25889  011630  5100               	movf	?___lldiv& (0+255),w,b
 25890  011632  0B0F               	andlw	15
 25891  011634  6F62               	movwf	__doprnt@idx& (0+255),b
 25892                           
 25893                           ; BSR set to: 2
 25894                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 25895  011636  0E17               	movlw	low STR_357
 25896  011638  2562               	addwf	__doprnt@idx& (0+255),w,b
 25897  01163A  6EF6               	movwf	tblptrl,c
 25898  01163C  6AF7               	clrf	tblptrh,c
 25899  01163E  0EFB               	movlw	high STR_357
 25900  011640  22F7               	addwfc	tblptrh,f,c
 25901  011642                     	if	1	;There are 3 active tblptr bytes
 25902  011642  6AF8               	clrf	tblptru,c
 25903  011644  0E00               	movlw	low (__mediumconst shr (0+16))
 25904  011646  22F8               	addwfc	tblptru,f,c
 25905  011648                     	endif
 25906  011648  0008               	tblrd		*
 25907  01164A  CFF5 F28B          	movff	tablat,__doprnt@c
 25908                           
 25909                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 25910  01164E  D00B               	goto	l18515
 25911  011650                     l18513:
 25912                           
 25913                           ; BSR set to: 2
 25914  011650  5189               	movf	__doprnt@flag& (0+255),w,b
 25915  011652  0BC0               	andlw	192
 25916                           
 25917                           ; Switch size 1, requested type "simple"
 25918                           ; Number of cases is 3, Range of values is 0 to 192
 25919                           ; switch strategies available:
 25920                           ; Name         Instructions Cycles
 25921                           ; simple_byte           10     6 (average)
 25922                           ;	Chosen strategy is simple_byte
 25923  011654  0A00               	xorlw	0	; case 0
 25924  011656  B4D8               	btfsc	status,2,c
 25925  011658  D780               	goto	l18505
 25926  01165A  0A80               	xorlw	128	; case 128
 25927  01165C  B4D8               	btfsc	status,2,c
 25928  01165E  D7BE               	goto	l18507
 25929  011660  0A40               	xorlw	64	; case 192
 25930  011662  B4D8               	btfsc	status,2,c
 25931  011664  D77A               	goto	l18505
 25932  011666                     l18515:
 25933                           
 25934                           ; BSR set to: 2
 25935  011666  EE20 F002          	lfsr	2,2
 25936  01166A  5154               	movf	__doprnt@pb& (0+255),w,b
 25937  01166C  26D9               	addwf	fsr2l,f,c
 25938  01166E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25939  011670  22DA               	addwfc	fsr2h,f,c
 25940  011672  50DE               	movf	postinc2,w,c
 25941  011674  10DE               	iorwf	postinc2,w,c
 25942  011676  10DE               	iorwf	postinc2,w,c
 25943  011678  B4D8               	btfsc	status,2,c
 25944  01167A  D013               	goto	l18519
 25945                           
 25946                           ; BSR set to: 2
 25947  01167C  EE20 F002          	lfsr	2,2
 25948  011680  5154               	movf	__doprnt@pb& (0+255),w,b
 25949  011682  26D9               	addwf	fsr2l,f,c
 25950  011684  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25951  011686  22DA               	addwfc	fsr2h,f,c
 25952  011688  D801               	call	u23188
 25953  01168A  D020               	goto	l18523
 25954  01168C                     u23188:
 25955  01168C  0005               	push	
 25956  01168E  6EFA               	movwf	pclath,c
 25957  011690  50DE               	movf	postinc2,w,c
 25958  011692  6EFD               	movwf	tosl,c
 25959  011694  50DE               	movf	postinc2,w,c
 25960  011696  6EFE               	movwf	tosh,c
 25961  011698  50DE               	movf	postinc2,w,c
 25962  01169A  6EFF               	movwf	tosu,c
 25963  01169C  50FA               	movf	pclath,w,c
 25964  01169E  518B               	movf	__doprnt@c& (0+255),w,b
 25965  0116A0  0012               	return		;indir
 25966  0116A2                     l18519:
 25967                           
 25968                           ; BSR set to: 2
 25969  0116A2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25970  0116A6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25971  0116AA  CFDE F25A          	movff	postinc2,??__doprnt
 25972  0116AE  CFDD F25B          	movff	postdec2,??__doprnt+1
 25973  0116B2  C25A  FFD9         	movff	??__doprnt,fsr2l
 25974  0116B6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25975  0116BA  C28B  FFDF         	movff	__doprnt@c,indf2
 25976  0116BE                     l18521:
 25977                           
 25978                           ; BSR set to: 2
 25979  0116BE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25980  0116C2  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25981  0116C6  2ADE               	incf	postinc2,f,c
 25982  0116C8  0E00               	movlw	0
 25983  0116CA  22DD               	addwfc	postdec2,f,c
 25984  0116CC                     l18523:
 25985  0116CC  0102               	movlb	2	; () banked
 25986  0116CE  0787               	decf	__doprnt@prec& (0+255),f,b
 25987  0116D0  A0D8               	btfss	status,0,c
 25988  0116D2  0788               	decf	(__doprnt@prec+1)& (0+255),f,b
 25989  0116D4  2987               	incf	__doprnt@prec& (0+255),w,b
 25990  0116D6  E1BC               	bnz	l18513
 25991  0116D8  2988               	incf	(__doprnt@prec+1)& (0+255),w,b
 25992  0116DA  A4D8               	btfss	status,2,c
 25993  0116DC  D7B9               	goto	l18513
 25994  0116DE                     u23190:
 25995  0116DE  0102               	movlb	2	; () banked
 25996  0116E0  5156               	movf	__doprnt@f& (0+255),w,b
 25997  0116E2  6F5A               	movwf	??__doprnt& (0+255),b
 25998  0116E4  5157               	movf	(__doprnt@f+1)& (0+255),w,b
 25999  0116E6  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 26000  0116E8  4B56               	infsnz	__doprnt@f& (0+255),f,b
 26001  0116EA  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 26002  0116EC  C25A  FFF6         	movff	??__doprnt,tblptrl
 26003  0116F0  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 26004  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 26005  0116F6  6EF8               	movwf	tblptru,c
 26006  0116F8  0E0E               	movlw	(high __ramtop+-1)
 26007  0116FA  64F7               	cpfsgt	tblptrh,c
 26008  0116FC  D003               	bra	u23207
 26009  0116FE  0008               	tblrd		*
 26010  011700  50F5               	movf	tablat,w,c
 26011  011702  D005               	bra	u23200
 26012  011704                     u23207:
 26013  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 26014  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 26015  01170C  50EF               	movf	indf0,w,c
 26016  01170E                     u23200:
 26017  01170E  0102               	movlb	2	; () banked
 26018  011710  6F8B               	movwf	__doprnt@c& (0+255),b
 26019  011712  518B               	movf	__doprnt@c& (0+255),w,b
 26020  011714  A4D8               	btfss	status,2,c
 26021  011716  EF02  F080         	goto	l17979
 26022  01171A                     u23210:
 26023                           
 26024                           ; BSR set to: 2
 26025                           ;doprnt.c: 1559: return 0;
 26026  01171A  0E00               	movlw	0
 26027  01171C  6F55               	movwf	(?__doprnt+1)& (0+255),b
 26028  01171E  0E00               	movlw	0
 26029  011720  6F54               	movwf	?__doprnt& (0+255),b
 26030                           
 26031                           ; BSR set to: 2
 26032  011722  0012               	return		;funcret
 26033  011724                     __end_of__doprnt:
 26034                           	opt callstack 0
 26035                           
 26036 ;; *************** function _scale *****************
 26037 ;; Defined at:
 26038 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 26039 ;; Parameters:    Size  Location     Type
 26040 ;;  scl             1    wreg     char 
 26041 ;; Auto vars:     Size  Location     Type
 26042 ;;  scl             1   47[BANK2 ] char 
 26043 ;; Return value:  Size  Location     Type
 26044 ;;                  4   39[BANK2 ] char 
 26045 ;; Registers used:
 26046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26047 ;; Tracked objects:
 26048 ;;		On entry : 0/0
 26049 ;;		On exit  : 0/0
 26050 ;;		Unchanged: 0/0
 26051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26052 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26053 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26055 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26056 ;;Total ram usage:        9 bytes
 26057 ;; Hardware stack levels used:    1
 26058 ;; Hardware stack levels required when called:   12
 26059 ;; This function calls:
 26060 ;;		___awdiv
 26061 ;;		___awmod
 26062 ;;		___flmul
 26063 ;; This function is called by:
 26064 ;;		__doprnt
 26065 ;; This function uses a non-reentrant model
 26066 ;;
 26067                           
 26068                           	psect	text80
 26069  015444                     __ptext80:
 26070                           	opt callstack 0
 26071  015444                     _scale:
 26072                           	opt callstack 13
 26073                           
 26074                           ; BSR set to: 2
 26075                           ;incstack = 0
 26076                           ;scale@scl stored from wreg
 26077  015444  0102               	movlb	2	; () banked
 26078  015446  6F2F               	movwf	scale@scl& (0+255),b
 26079                           
 26080                           ;doprnt.c: 436: if(scl < 0) {
 26081  015448  0102               	movlb	2	; () banked
 26082  01544A  AF2F               	btfss	scale@scl& (0+255),7,b
 26083  01544C  D10B               	goto	l17611
 26084                           
 26085                           ; BSR set to: 2
 26086                           ;doprnt.c: 437: scl = -scl;
 26087  01544E  6D2F               	negf	scale@scl& (0+255),b
 26088                           
 26089                           ;doprnt.c: 438: if(scl>=110)
 26090  015450  512F               	movf	scale@scl& (0+255),w,b
 26091  015452  0A80               	xorlw	128
 26092  015454  0F12               	addlw	-238
 26093  015456  A0D8               	btfss	status,0,c
 26094  015458  D095               	goto	l17601
 26095                           
 26096                           ; BSR set to: 2
 26097                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 26098  01545A  0E00               	movlw	0
 26099  01545C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26100  01545E  0E0A               	movlw	10
 26101  015460  6F08               	movwf	___awdiv@divisor& (0+255),b
 26102  015462  0E00               	movlw	0
 26103  015464  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26104  015466  0E64               	movlw	100
 26105  015468  6F02               	movwf	___awmod@divisor& (0+255),b
 26106  01546A  512F               	movf	scale@scl& (0+255),w,b
 26107  01546C  6F00               	movwf	___awmod@dividend& (0+255),b
 26108  01546E  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26109  015470  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26110  015472  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26111  015474  EC29  F0D9         	call	___awmod
 26112  015478  C200  F206         	movff	?___awmod,___awdiv@dividend
 26113  01547C  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26114  015480  ECE8  F0D7         	call	___awdiv	;wreg free
 26115  015484  0E09               	movlw	9
 26116  015486  0102               	movlb	2	; () banked
 26117  015488  2706               	addwf	?___awdiv& (0+255),f,b
 26118  01548A  5106               	movf	?___awdiv& (0+255),w,b
 26119  01548C  0D04               	mullw	4
 26120  01548E  0E5B               	movlw	low __npowers_
 26121  015490  24F3               	addwf	prodl,w,c
 26122  015492  6EF6               	movwf	tblptrl,c
 26123  015494  0EE4               	movlw	high __npowers_
 26124  015496  20F4               	addwfc	prodh,w,c
 26125  015498  6EF7               	movwf	tblptrh,c
 26126  01549A                     	if	1	;There are 3 active tblptr bytes
 26127  01549A  6AF8               	clrf	tblptru,c
 26128  01549C  0E00               	movlw	low (__mediumconst shr (0+16))
 26129  01549E  22F8               	addwfc	tblptru,f,c
 26130  0154A0                     	endif
 26131  0154A0  0009               	tblrd		*+
 26132  0154A2  CFF5 F212          	movff	tablat,___flmul@a
 26133  0154A6  0009               	tblrd		*+
 26134  0154A8  CFF5 F213          	movff	tablat,___flmul@a+1
 26135  0154AC  0009               	tblrd		*+
 26136  0154AE  CFF5 F214          	movff	tablat,___flmul@a+2
 26137  0154B2  000A               	tblrd		*-
 26138  0154B4  CFF5 F215          	movff	tablat,___flmul@a+3
 26139  0154B8  0E00               	movlw	0
 26140  0154BA  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26141  0154BC  0E64               	movlw	100
 26142  0154BE  6F08               	movwf	___awdiv@divisor& (0+255),b
 26143  0154C0  512F               	movf	scale@scl& (0+255),w,b
 26144  0154C2  6F06               	movwf	___awdiv@dividend& (0+255),b
 26145  0154C4  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26146  0154C6  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26147  0154C8  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26148  0154CA  ECE8  F0D7         	call	___awdiv	;wreg free
 26149  0154CE  0E12               	movlw	18
 26150  0154D0  0102               	movlb	2	; () banked
 26151  0154D2  2706               	addwf	?___awdiv& (0+255),f,b
 26152  0154D4  5106               	movf	?___awdiv& (0+255),w,b
 26153  0154D6  0D04               	mullw	4
 26154  0154D8  0E5B               	movlw	low __npowers_
 26155  0154DA  24F3               	addwf	prodl,w,c
 26156  0154DC  6EF6               	movwf	tblptrl,c
 26157  0154DE  0EE4               	movlw	high __npowers_
 26158  0154E0  20F4               	addwfc	prodh,w,c
 26159  0154E2  6EF7               	movwf	tblptrh,c
 26160  0154E4                     	if	1	;There are 3 active tblptr bytes
 26161  0154E4  6AF8               	clrf	tblptru,c
 26162  0154E6  0E00               	movlw	low (__mediumconst shr (0+16))
 26163  0154E8  22F8               	addwfc	tblptru,f,c
 26164  0154EA                     	endif
 26165  0154EA  0009               	tblrd		*+
 26166  0154EC  CFF5 F20E          	movff	tablat,___flmul@b
 26167  0154F0  0009               	tblrd		*+
 26168  0154F2  CFF5 F20F          	movff	tablat,___flmul@b+1
 26169  0154F6  0009               	tblrd		*+
 26170  0154F8  CFF5 F210          	movff	tablat,___flmul@b+2
 26171  0154FC  000A               	tblrd		*-
 26172  0154FE  CFF5 F211          	movff	tablat,___flmul@b+3
 26173  015502  EC7A  F0B3         	call	___flmul	;wreg free
 26174  015506  C20E  F22B         	movff	?___flmul,_scale$6038
 26175  01550A  C20F  F22C         	movff	?___flmul+1,_scale$6038+1
 26176  01550E  C210  F22D         	movff	?___flmul+2,_scale$6038+2
 26177  015512  C211  F22E         	movff	?___flmul+3,_scale$6038+3
 26178                           
 26179                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 26180  015516  C22B  F20E         	movff	_scale$6038,___flmul@b
 26181  01551A  C22C  F20F         	movff	_scale$6038+1,___flmul@b+1
 26182  01551E  C22D  F210         	movff	_scale$6038+2,___flmul@b+2
 26183  015522  C22E  F211         	movff	_scale$6038+3,___flmul@b+3
 26184  015526  0E00               	movlw	0
 26185  015528  0102               	movlb	2	; () banked
 26186  01552A  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26187  01552C  0E0A               	movlw	10
 26188  01552E  6F02               	movwf	___awmod@divisor& (0+255),b
 26189  015530  512F               	movf	scale@scl& (0+255),w,b
 26190  015532  6F00               	movwf	___awmod@dividend& (0+255),b
 26191  015534  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26192  015536  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26193  015538  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26194  01553A  EC29  F0D9         	call	___awmod	;wreg free
 26195  01553E  0102               	movlb	2	; () banked
 26196  015540  5100               	movf	?___awmod& (0+255),w,b
 26197  015542  0D04               	mullw	4
 26198  015544  0E5B               	movlw	low __npowers_
 26199  015546  24F3               	addwf	prodl,w,c
 26200  015548  6EF6               	movwf	tblptrl,c
 26201  01554A  0EE4               	movlw	high __npowers_
 26202  01554C  20F4               	addwfc	prodh,w,c
 26203  01554E  6EF7               	movwf	tblptrh,c
 26204  015550                     	if	1	;There are 3 active tblptr bytes
 26205  015550  6AF8               	clrf	tblptru,c
 26206  015552  0E00               	movlw	low (__mediumconst shr (0+16))
 26207  015554  22F8               	addwfc	tblptru,f,c
 26208  015556                     	endif
 26209  015556  0009               	tblrd		*+
 26210  015558  CFF5 F212          	movff	tablat,___flmul@a
 26211  01555C  0009               	tblrd		*+
 26212  01555E  CFF5 F213          	movff	tablat,___flmul@a+1
 26213  015562  0009               	tblrd		*+
 26214  015564  CFF5 F214          	movff	tablat,___flmul@a+2
 26215  015568  000A               	tblrd		*-
 26216  01556A  CFF5 F215          	movff	tablat,___flmul@a+3
 26217  01556E  EC7A  F0B3         	call	___flmul	;wreg free
 26218  015572  C20E  F227         	movff	?___flmul,?_scale
 26219  015576  C20F  F228         	movff	?___flmul+1,?_scale+1
 26220  01557A  C210  F229         	movff	?___flmul+2,?_scale+2
 26221  01557E  C211  F22A         	movff	?___flmul+3,?_scale+3
 26222  015582  0012               	return	
 26223  015584                     l17601:
 26224                           
 26225                           ; BSR set to: 2
 26226                           ;doprnt.c: 440: else if(scl > 10)
 26227  015584  512F               	movf	scale@scl& (0+255),w,b
 26228  015586  0A80               	xorlw	128
 26229  015588  0F75               	addlw	-139
 26230  01558A  A0D8               	btfss	status,0,c
 26231  01558C  D053               	goto	l17607
 26232                           
 26233                           ; BSR set to: 2
 26234                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 26235  01558E  0E00               	movlw	0
 26236  015590  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26237  015592  0E0A               	movlw	10
 26238  015594  6F08               	movwf	___awdiv@divisor& (0+255),b
 26239  015596  512F               	movf	scale@scl& (0+255),w,b
 26240  015598  6F06               	movwf	___awdiv@dividend& (0+255),b
 26241  01559A  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26242  01559C  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26243  01559E  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26244  0155A0  ECE8  F0D7         	call	___awdiv	;wreg free
 26245  0155A4  0E09               	movlw	9
 26246  0155A6  0102               	movlb	2	; () banked
 26247  0155A8  2706               	addwf	?___awdiv& (0+255),f,b
 26248  0155AA  5106               	movf	?___awdiv& (0+255),w,b
 26249  0155AC  0D04               	mullw	4
 26250  0155AE  0E5B               	movlw	low __npowers_
 26251  0155B0  24F3               	addwf	prodl,w,c
 26252  0155B2  6EF6               	movwf	tblptrl,c
 26253  0155B4  0EE4               	movlw	high __npowers_
 26254  0155B6  20F4               	addwfc	prodh,w,c
 26255  0155B8  6EF7               	movwf	tblptrh,c
 26256  0155BA                     	if	1	;There are 3 active tblptr bytes
 26257  0155BA  6AF8               	clrf	tblptru,c
 26258  0155BC  0E00               	movlw	low (__mediumconst shr (0+16))
 26259  0155BE  22F8               	addwfc	tblptru,f,c
 26260  0155C0                     	endif
 26261  0155C0  0009               	tblrd		*+
 26262  0155C2  CFF5 F20E          	movff	tablat,___flmul@b
 26263  0155C6  0009               	tblrd		*+
 26264  0155C8  CFF5 F20F          	movff	tablat,___flmul@b+1
 26265  0155CC  0009               	tblrd		*+
 26266  0155CE  CFF5 F210          	movff	tablat,___flmul@b+2
 26267  0155D2  000A               	tblrd		*-
 26268  0155D4  CFF5 F211          	movff	tablat,___flmul@b+3
 26269  0155D8  0E00               	movlw	0
 26270  0155DA  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26271  0155DC  0E0A               	movlw	10
 26272  0155DE  6F02               	movwf	___awmod@divisor& (0+255),b
 26273  0155E0  512F               	movf	scale@scl& (0+255),w,b
 26274  0155E2  6F00               	movwf	___awmod@dividend& (0+255),b
 26275  0155E4  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26276  0155E6  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26277  0155E8  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26278  0155EA  EC29  F0D9         	call	___awmod	;wreg free
 26279  0155EE  0102               	movlb	2	; () banked
 26280  0155F0  5100               	movf	?___awmod& (0+255),w,b
 26281  0155F2  0D04               	mullw	4
 26282  0155F4  0E5B               	movlw	low __npowers_
 26283  0155F6  24F3               	addwf	prodl,w,c
 26284  0155F8  6EF6               	movwf	tblptrl,c
 26285  0155FA  0EE4               	movlw	high __npowers_
 26286  0155FC  20F4               	addwfc	prodh,w,c
 26287  0155FE  6EF7               	movwf	tblptrh,c
 26288  015600                     	if	1	;There are 3 active tblptr bytes
 26289  015600  6AF8               	clrf	tblptru,c
 26290  015602  0E00               	movlw	low (__mediumconst shr (0+16))
 26291  015604  22F8               	addwfc	tblptru,f,c
 26292  015606                     	endif
 26293  015606  0009               	tblrd		*+
 26294  015608  CFF5 F212          	movff	tablat,___flmul@a
 26295  01560C  0009               	tblrd		*+
 26296  01560E  CFF5 F213          	movff	tablat,___flmul@a+1
 26297  015612  0009               	tblrd		*+
 26298  015614  CFF5 F214          	movff	tablat,___flmul@a+2
 26299  015618  000A               	tblrd		*-
 26300  01561A  CFF5 F215          	movff	tablat,___flmul@a+3
 26301  01561E  EC7A  F0B3         	call	___flmul	;wreg free
 26302  015622  C20E  F227         	movff	?___flmul,?_scale
 26303  015626  C20F  F228         	movff	?___flmul+1,?_scale+1
 26304  01562A  C210  F229         	movff	?___flmul+2,?_scale+2
 26305  01562E  C211  F22A         	movff	?___flmul+3,?_scale+3
 26306  015632  0012               	return	
 26307  015634                     l17607:
 26308                           
 26309                           ; BSR set to: 2
 26310                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 26311  015634  512F               	movf	scale@scl& (0+255),w,b
 26312  015636  0D04               	mullw	4
 26313  015638  0E5B               	movlw	low __npowers_
 26314  01563A  24F3               	addwf	prodl,w,c
 26315  01563C  6EF6               	movwf	tblptrl,c
 26316  01563E  0EE4               	movlw	high __npowers_
 26317  015640  20F4               	addwfc	prodh,w,c
 26318  015642  6EF7               	movwf	tblptrh,c
 26319  015644                     	if	1	;There are 3 active tblptr bytes
 26320  015644  6AF8               	clrf	tblptru,c
 26321  015646  0E00               	movlw	low (__mediumconst shr (0+16))
 26322  015648  22F8               	addwfc	tblptru,f,c
 26323  01564A                     	endif
 26324  01564A  0009               	tblrd		*+
 26325  01564C  CFF5 F227          	movff	tablat,?_scale
 26326  015650  0009               	tblrd		*+
 26327  015652  CFF5 F228          	movff	tablat,?_scale+1
 26328  015656  0009               	tblrd		*+
 26329  015658  CFF5 F229          	movff	tablat,?_scale+2
 26330  01565C  000A               	tblrd		*-
 26331  01565E  CFF5 F22A          	movff	tablat,?_scale+3
 26332  015662  0012               	return	
 26333  015664                     l17611:
 26334                           
 26335                           ; BSR set to: 2
 26336                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 26337  015664  512F               	movf	scale@scl& (0+255),w,b
 26338  015666  0A80               	xorlw	128
 26339  015668  0F12               	addlw	-238
 26340  01566A  A0D8               	btfss	status,0,c
 26341  01566C  D095               	goto	l17619
 26342                           
 26343                           ; BSR set to: 2
 26344                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26345  01566E  0E00               	movlw	0
 26346  015670  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26347  015672  0E0A               	movlw	10
 26348  015674  6F08               	movwf	___awdiv@divisor& (0+255),b
 26349  015676  0E00               	movlw	0
 26350  015678  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26351  01567A  0E64               	movlw	100
 26352  01567C  6F02               	movwf	___awmod@divisor& (0+255),b
 26353  01567E  512F               	movf	scale@scl& (0+255),w,b
 26354  015680  6F00               	movwf	___awmod@dividend& (0+255),b
 26355  015682  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26356  015684  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26357  015686  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26358  015688  EC29  F0D9         	call	___awmod	;wreg free
 26359  01568C  C200  F206         	movff	?___awmod,___awdiv@dividend
 26360  015690  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26361  015694  ECE8  F0D7         	call	___awdiv	;wreg free
 26362  015698  0E09               	movlw	9
 26363  01569A  0102               	movlb	2	; () banked
 26364  01569C  2706               	addwf	?___awdiv& (0+255),f,b
 26365  01569E  5106               	movf	?___awdiv& (0+255),w,b
 26366  0156A0  0D04               	mullw	4
 26367  0156A2  0E27               	movlw	low __powers_
 26368  0156A4  24F3               	addwf	prodl,w,c
 26369  0156A6  6EF6               	movwf	tblptrl,c
 26370  0156A8  0EE4               	movlw	high __powers_
 26371  0156AA  20F4               	addwfc	prodh,w,c
 26372  0156AC  6EF7               	movwf	tblptrh,c
 26373  0156AE                     	if	1	;There are 3 active tblptr bytes
 26374  0156AE  6AF8               	clrf	tblptru,c
 26375  0156B0  0E00               	movlw	low (__mediumconst shr (0+16))
 26376  0156B2  22F8               	addwfc	tblptru,f,c
 26377  0156B4                     	endif
 26378  0156B4  0009               	tblrd		*+
 26379  0156B6  CFF5 F212          	movff	tablat,___flmul@a
 26380  0156BA  0009               	tblrd		*+
 26381  0156BC  CFF5 F213          	movff	tablat,___flmul@a+1
 26382  0156C0  0009               	tblrd		*+
 26383  0156C2  CFF5 F214          	movff	tablat,___flmul@a+2
 26384  0156C6  000A               	tblrd		*-
 26385  0156C8  CFF5 F215          	movff	tablat,___flmul@a+3
 26386  0156CC  0E00               	movlw	0
 26387  0156CE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26388  0156D0  0E64               	movlw	100
 26389  0156D2  6F08               	movwf	___awdiv@divisor& (0+255),b
 26390  0156D4  512F               	movf	scale@scl& (0+255),w,b
 26391  0156D6  6F06               	movwf	___awdiv@dividend& (0+255),b
 26392  0156D8  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26393  0156DA  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26394  0156DC  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26395  0156DE  ECE8  F0D7         	call	___awdiv	;wreg free
 26396  0156E2  0E12               	movlw	18
 26397  0156E4  0102               	movlb	2	; () banked
 26398  0156E6  2706               	addwf	?___awdiv& (0+255),f,b
 26399  0156E8  5106               	movf	?___awdiv& (0+255),w,b
 26400  0156EA  0D04               	mullw	4
 26401  0156EC  0E27               	movlw	low __powers_
 26402  0156EE  24F3               	addwf	prodl,w,c
 26403  0156F0  6EF6               	movwf	tblptrl,c
 26404  0156F2  0EE4               	movlw	high __powers_
 26405  0156F4  20F4               	addwfc	prodh,w,c
 26406  0156F6  6EF7               	movwf	tblptrh,c
 26407  0156F8                     	if	1	;There are 3 active tblptr bytes
 26408  0156F8  6AF8               	clrf	tblptru,c
 26409  0156FA  0E00               	movlw	low (__mediumconst shr (0+16))
 26410  0156FC  22F8               	addwfc	tblptru,f,c
 26411  0156FE                     	endif
 26412  0156FE  0009               	tblrd		*+
 26413  015700  CFF5 F20E          	movff	tablat,___flmul@b
 26414  015704  0009               	tblrd		*+
 26415  015706  CFF5 F20F          	movff	tablat,___flmul@b+1
 26416  01570A  0009               	tblrd		*+
 26417  01570C  CFF5 F210          	movff	tablat,___flmul@b+2
 26418  015710  000A               	tblrd		*-
 26419  015712  CFF5 F211          	movff	tablat,___flmul@b+3
 26420  015716  EC7A  F0B3         	call	___flmul	;wreg free
 26421  01571A  C20E  F22B         	movff	?___flmul,_scale$6038
 26422  01571E  C20F  F22C         	movff	?___flmul+1,_scale$6038+1
 26423  015722  C210  F22D         	movff	?___flmul+2,_scale$6038+2
 26424  015726  C211  F22E         	movff	?___flmul+3,_scale$6038+3
 26425                           
 26426                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26427  01572A  C22B  F20E         	movff	_scale$6038,___flmul@b
 26428  01572E  C22C  F20F         	movff	_scale$6038+1,___flmul@b+1
 26429  015732  C22D  F210         	movff	_scale$6038+2,___flmul@b+2
 26430  015736  C22E  F211         	movff	_scale$6038+3,___flmul@b+3
 26431  01573A  0E00               	movlw	0
 26432  01573C  0102               	movlb	2	; () banked
 26433  01573E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26434  015740  0E0A               	movlw	10
 26435  015742  6F02               	movwf	___awmod@divisor& (0+255),b
 26436  015744  512F               	movf	scale@scl& (0+255),w,b
 26437  015746  6F00               	movwf	___awmod@dividend& (0+255),b
 26438  015748  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26439  01574A  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26440  01574C  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26441  01574E  EC29  F0D9         	call	___awmod	;wreg free
 26442  015752  0102               	movlb	2	; () banked
 26443  015754  5100               	movf	?___awmod& (0+255),w,b
 26444  015756  0D04               	mullw	4
 26445  015758  0E27               	movlw	low __powers_
 26446  01575A  24F3               	addwf	prodl,w,c
 26447  01575C  6EF6               	movwf	tblptrl,c
 26448  01575E  0EE4               	movlw	high __powers_
 26449  015760  20F4               	addwfc	prodh,w,c
 26450  015762  6EF7               	movwf	tblptrh,c
 26451  015764                     	if	1	;There are 3 active tblptr bytes
 26452  015764  6AF8               	clrf	tblptru,c
 26453  015766  0E00               	movlw	low (__mediumconst shr (0+16))
 26454  015768  22F8               	addwfc	tblptru,f,c
 26455  01576A                     	endif
 26456  01576A  0009               	tblrd		*+
 26457  01576C  CFF5 F212          	movff	tablat,___flmul@a
 26458  015770  0009               	tblrd		*+
 26459  015772  CFF5 F213          	movff	tablat,___flmul@a+1
 26460  015776  0009               	tblrd		*+
 26461  015778  CFF5 F214          	movff	tablat,___flmul@a+2
 26462  01577C  000A               	tblrd		*-
 26463  01577E  CFF5 F215          	movff	tablat,___flmul@a+3
 26464  015782  EC7A  F0B3         	call	___flmul	;wreg free
 26465  015786  C20E  F227         	movff	?___flmul,?_scale
 26466  01578A  C20F  F228         	movff	?___flmul+1,?_scale+1
 26467  01578E  C210  F229         	movff	?___flmul+2,?_scale+2
 26468  015792  C211  F22A         	movff	?___flmul+3,?_scale+3
 26469  015796  0012               	return	
 26470  015798                     l17619:
 26471                           
 26472                           ; BSR set to: 2
 26473                           ;doprnt.c: 446: else if(scl > 10)
 26474  015798  512F               	movf	scale@scl& (0+255),w,b
 26475  01579A  0A80               	xorlw	128
 26476  01579C  0F75               	addlw	-139
 26477  01579E  A0D8               	btfss	status,0,c
 26478  0157A0  D053               	goto	l17625
 26479                           
 26480                           ; BSR set to: 2
 26481                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 26482  0157A2  0E00               	movlw	0
 26483  0157A4  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26484  0157A6  0E0A               	movlw	10
 26485  0157A8  6F08               	movwf	___awdiv@divisor& (0+255),b
 26486  0157AA  512F               	movf	scale@scl& (0+255),w,b
 26487  0157AC  6F06               	movwf	___awdiv@dividend& (0+255),b
 26488  0157AE  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26489  0157B0  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26490  0157B2  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26491  0157B4  ECE8  F0D7         	call	___awdiv	;wreg free
 26492  0157B8  0E09               	movlw	9
 26493  0157BA  0102               	movlb	2	; () banked
 26494  0157BC  2706               	addwf	?___awdiv& (0+255),f,b
 26495  0157BE  5106               	movf	?___awdiv& (0+255),w,b
 26496  0157C0  0D04               	mullw	4
 26497  0157C2  0E27               	movlw	low __powers_
 26498  0157C4  24F3               	addwf	prodl,w,c
 26499  0157C6  6EF6               	movwf	tblptrl,c
 26500  0157C8  0EE4               	movlw	high __powers_
 26501  0157CA  20F4               	addwfc	prodh,w,c
 26502  0157CC  6EF7               	movwf	tblptrh,c
 26503  0157CE                     	if	1	;There are 3 active tblptr bytes
 26504  0157CE  6AF8               	clrf	tblptru,c
 26505  0157D0  0E00               	movlw	low (__mediumconst shr (0+16))
 26506  0157D2  22F8               	addwfc	tblptru,f,c
 26507  0157D4                     	endif
 26508  0157D4  0009               	tblrd		*+
 26509  0157D6  CFF5 F20E          	movff	tablat,___flmul@b
 26510  0157DA  0009               	tblrd		*+
 26511  0157DC  CFF5 F20F          	movff	tablat,___flmul@b+1
 26512  0157E0  0009               	tblrd		*+
 26513  0157E2  CFF5 F210          	movff	tablat,___flmul@b+2
 26514  0157E6  000A               	tblrd		*-
 26515  0157E8  CFF5 F211          	movff	tablat,___flmul@b+3
 26516  0157EC  0E00               	movlw	0
 26517  0157EE  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26518  0157F0  0E0A               	movlw	10
 26519  0157F2  6F02               	movwf	___awmod@divisor& (0+255),b
 26520  0157F4  512F               	movf	scale@scl& (0+255),w,b
 26521  0157F6  6F00               	movwf	___awmod@dividend& (0+255),b
 26522  0157F8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26523  0157FA  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26524  0157FC  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26525  0157FE  EC29  F0D9         	call	___awmod	;wreg free
 26526  015802  0102               	movlb	2	; () banked
 26527  015804  5100               	movf	?___awmod& (0+255),w,b
 26528  015806  0D04               	mullw	4
 26529  015808  0E27               	movlw	low __powers_
 26530  01580A  24F3               	addwf	prodl,w,c
 26531  01580C  6EF6               	movwf	tblptrl,c
 26532  01580E  0EE4               	movlw	high __powers_
 26533  015810  20F4               	addwfc	prodh,w,c
 26534  015812  6EF7               	movwf	tblptrh,c
 26535  015814                     	if	1	;There are 3 active tblptr bytes
 26536  015814  6AF8               	clrf	tblptru,c
 26537  015816  0E00               	movlw	low (__mediumconst shr (0+16))
 26538  015818  22F8               	addwfc	tblptru,f,c
 26539  01581A                     	endif
 26540  01581A  0009               	tblrd		*+
 26541  01581C  CFF5 F212          	movff	tablat,___flmul@a
 26542  015820  0009               	tblrd		*+
 26543  015822  CFF5 F213          	movff	tablat,___flmul@a+1
 26544  015826  0009               	tblrd		*+
 26545  015828  CFF5 F214          	movff	tablat,___flmul@a+2
 26546  01582C  000A               	tblrd		*-
 26547  01582E  CFF5 F215          	movff	tablat,___flmul@a+3
 26548  015832  EC7A  F0B3         	call	___flmul	;wreg free
 26549  015836  C20E  F227         	movff	?___flmul,?_scale
 26550  01583A  C20F  F228         	movff	?___flmul+1,?_scale+1
 26551  01583E  C210  F229         	movff	?___flmul+2,?_scale+2
 26552  015842  C211  F22A         	movff	?___flmul+3,?_scale+3
 26553  015846  0012               	return	
 26554  015848                     l17625:
 26555                           
 26556                           ; BSR set to: 2
 26557                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 26558  015848  512F               	movf	scale@scl& (0+255),w,b
 26559  01584A  0D04               	mullw	4
 26560  01584C  0E27               	movlw	low __powers_
 26561  01584E  24F3               	addwf	prodl,w,c
 26562  015850  6EF6               	movwf	tblptrl,c
 26563  015852  0EE4               	movlw	high __powers_
 26564  015854  20F4               	addwfc	prodh,w,c
 26565  015856  6EF7               	movwf	tblptrh,c
 26566  015858                     	if	1	;There are 3 active tblptr bytes
 26567  015858  6AF8               	clrf	tblptru,c
 26568  01585A  0E00               	movlw	low (__mediumconst shr (0+16))
 26569  01585C  22F8               	addwfc	tblptru,f,c
 26570  01585E                     	endif
 26571  01585E  0009               	tblrd		*+
 26572  015860  CFF5 F227          	movff	tablat,?_scale
 26573  015864  0009               	tblrd		*+
 26574  015866  CFF5 F228          	movff	tablat,?_scale+1
 26575  01586A  0009               	tblrd		*+
 26576  01586C  CFF5 F229          	movff	tablat,?_scale+2
 26577  015870  000A               	tblrd		*-
 26578  015872  CFF5 F22A          	movff	tablat,?_scale+3
 26579  015876  0012               	return		;funcret
 26580  015878                     __end_of_scale:
 26581                           	opt callstack 0
 26582                           
 26583 ;; *************** function ___awmod *****************
 26584 ;; Defined at:
 26585 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 26586 ;; Parameters:    Size  Location     Type
 26587 ;;  dividend        2    0[BANK2 ] int 
 26588 ;;  divisor         2    2[BANK2 ] int 
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;  sign            1    5[BANK2 ] unsigned char 
 26591 ;;  counter         1    4[BANK2 ] unsigned char 
 26592 ;; Return value:  Size  Location     Type
 26593 ;;                  2    0[BANK2 ] int 
 26594 ;; Registers used:
 26595 ;;		wreg, status,2, status,0
 26596 ;; Tracked objects:
 26597 ;;		On entry : 0/0
 26598 ;;		On exit  : 0/0
 26599 ;;		Unchanged: 0/0
 26600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26601 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26602 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26604 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26605 ;;Total ram usage:        6 bytes
 26606 ;; Hardware stack levels used:    1
 26607 ;; Hardware stack levels required when called:   11
 26608 ;; This function calls:
 26609 ;;		Nothing
 26610 ;; This function is called by:
 26611 ;;		_scale
 26612 ;; This function uses a non-reentrant model
 26613 ;;
 26614                           
 26615                           	psect	text81
 26616  01B252                     __ptext81:
 26617                           	opt callstack 0
 26618  01B252                     ___awmod:
 26619                           	opt callstack 13
 26620                           
 26621                           ;incstack = 0
 26622  01B252  0E00               	movlw	0
 26623  01B254  0102               	movlb	2	; () banked
 26624  01B256  6F05               	movwf	___awmod@sign& (0+255),b
 26625                           
 26626                           ; BSR set to: 2
 26627  01B258  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26628  01B25A  D006               	goto	l17501
 26629                           
 26630                           ; BSR set to: 2
 26631  01B25C  6D00               	negf	___awmod@dividend& (0+255),b
 26632  01B25E  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26633  01B260  B0D8               	btfsc	status,0,c
 26634  01B262  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26635                           
 26636                           ; BSR set to: 2
 26637  01B264  0E01               	movlw	1
 26638  01B266  6F05               	movwf	___awmod@sign& (0+255),b
 26639  01B268                     l17501:
 26640                           
 26641                           ; BSR set to: 2
 26642  01B268  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26643  01B26A  D004               	goto	l17505
 26644                           
 26645                           ; BSR set to: 2
 26646  01B26C  6D02               	negf	___awmod@divisor& (0+255),b
 26647  01B26E  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 26648  01B270  B0D8               	btfsc	status,0,c
 26649  01B272  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 26650  01B274                     l17505:
 26651                           
 26652                           ; BSR set to: 2
 26653  01B274  5102               	movf	___awmod@divisor& (0+255),w,b
 26654  01B276  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26655  01B278  B4D8               	btfsc	status,2,c
 26656  01B27A  D018               	goto	l17521
 26657                           
 26658                           ; BSR set to: 2
 26659  01B27C  0E01               	movlw	1
 26660  01B27E  6F04               	movwf	___awmod@counter& (0+255),b
 26661  01B280  D004               	goto	l17511
 26662  01B282                     l17509:
 26663                           
 26664                           ; BSR set to: 2
 26665  01B282  90D8               	bcf	status,0,c
 26666  01B284  3702               	rlcf	___awmod@divisor& (0+255),f,b
 26667  01B286  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26668  01B288  2B04               	incf	___awmod@counter& (0+255),f,b
 26669  01B28A                     l17511:
 26670                           
 26671                           ; BSR set to: 2
 26672  01B28A  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26673  01B28C  D7FA               	goto	l17509
 26674  01B28E                     u21180:
 26675                           
 26676                           ; BSR set to: 2
 26677  01B28E  5102               	movf	___awmod@divisor& (0+255),w,b
 26678  01B290  5D00               	subwf	___awmod@dividend& (0+255),w,b
 26679  01B292  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26680  01B294  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26681  01B296  A0D8               	btfss	status,0,c
 26682  01B298  D004               	goto	l17517
 26683                           
 26684                           ; BSR set to: 2
 26685  01B29A  5102               	movf	___awmod@divisor& (0+255),w,b
 26686  01B29C  5F00               	subwf	___awmod@dividend& (0+255),f,b
 26687  01B29E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26688  01B2A0  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26689  01B2A2                     l17517:
 26690                           
 26691                           ; BSR set to: 2
 26692  01B2A2  90D8               	bcf	status,0,c
 26693  01B2A4  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26694  01B2A6  3302               	rrcf	___awmod@divisor& (0+255),f,b
 26695                           
 26696                           ; BSR set to: 2
 26697  01B2A8  2F04               	decfsz	___awmod@counter& (0+255),f,b
 26698  01B2AA  D7F1               	goto	u21180
 26699  01B2AC                     l17521:
 26700                           
 26701                           ; BSR set to: 2
 26702  01B2AC  5105               	movf	___awmod@sign& (0+255),w,b
 26703  01B2AE  B4D8               	btfsc	status,2,c
 26704  01B2B0  D004               	goto	l17525
 26705                           
 26706                           ; BSR set to: 2
 26707  01B2B2  6D00               	negf	___awmod@dividend& (0+255),b
 26708  01B2B4  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26709  01B2B6  B0D8               	btfsc	status,0,c
 26710  01B2B8  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26711  01B2BA                     l17525:
 26712                           
 26713                           ; BSR set to: 2
 26714  01B2BA  C200  F200         	movff	___awmod@dividend,?___awmod
 26715  01B2BE  C201  F201         	movff	___awmod@dividend+1,?___awmod+1
 26716                           
 26717                           ; BSR set to: 2
 26718  01B2C2  0012               	return		;funcret
 26719  01B2C4                     __end_of___awmod:
 26720                           	opt callstack 0
 26721                           
 26722 ;; *************** function ___awdiv *****************
 26723 ;; Defined at:
 26724 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;  dividend        2    6[BANK2 ] int 
 26727 ;;  divisor         2    8[BANK2 ] int 
 26728 ;; Auto vars:     Size  Location     Type
 26729 ;;  quotient        2   12[BANK2 ] int 
 26730 ;;  sign            1   11[BANK2 ] unsigned char 
 26731 ;;  counter         1   10[BANK2 ] unsigned char 
 26732 ;; Return value:  Size  Location     Type
 26733 ;;                  2    6[BANK2 ] int 
 26734 ;; Registers used:
 26735 ;;		wreg, status,2, status,0
 26736 ;; Tracked objects:
 26737 ;;		On entry : 0/0
 26738 ;;		On exit  : 0/0
 26739 ;;		Unchanged: 0/0
 26740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26741 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26742 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26744 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26745 ;;Total ram usage:        8 bytes
 26746 ;; Hardware stack levels used:    1
 26747 ;; Hardware stack levels required when called:   11
 26748 ;; This function calls:
 26749 ;;		Nothing
 26750 ;; This function is called by:
 26751 ;;		_scale
 26752 ;;		__doprnt
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text82
 26757  01AFD0                     __ptext82:
 26758                           	opt callstack 0
 26759  01AFD0                     ___awdiv:
 26760                           	opt callstack 13
 26761                           
 26762                           ; BSR set to: 2
 26763                           ;incstack = 0
 26764  01AFD0  0E00               	movlw	0
 26765  01AFD2  0102               	movlb	2	; () banked
 26766  01AFD4  6F0B               	movwf	___awdiv@sign& (0+255),b
 26767                           
 26768                           ; BSR set to: 2
 26769  01AFD6  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26770  01AFD8  D006               	goto	l17457
 26771                           
 26772                           ; BSR set to: 2
 26773  01AFDA  6D08               	negf	___awdiv@divisor& (0+255),b
 26774  01AFDC  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26775  01AFDE  B0D8               	btfsc	status,0,c
 26776  01AFE0  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26777                           
 26778                           ; BSR set to: 2
 26779  01AFE2  0E01               	movlw	1
 26780  01AFE4  6F0B               	movwf	___awdiv@sign& (0+255),b
 26781  01AFE6                     l17457:
 26782                           
 26783                           ; BSR set to: 2
 26784  01AFE6  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26785  01AFE8  D006               	goto	l17463
 26786                           
 26787                           ; BSR set to: 2
 26788  01AFEA  6D06               	negf	___awdiv@dividend& (0+255),b
 26789  01AFEC  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26790  01AFEE  B0D8               	btfsc	status,0,c
 26791  01AFF0  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26792                           
 26793                           ; BSR set to: 2
 26794  01AFF2  0E01               	movlw	1
 26795  01AFF4  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 26796  01AFF6                     l17463:
 26797                           
 26798                           ; BSR set to: 2
 26799  01AFF6  0E00               	movlw	0
 26800  01AFF8  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 26801  01AFFA  0E00               	movlw	0
 26802  01AFFC  6F0C               	movwf	___awdiv@quotient& (0+255),b
 26803                           
 26804                           ; BSR set to: 2
 26805  01AFFE  5108               	movf	___awdiv@divisor& (0+255),w,b
 26806  01B000  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26807  01B002  B4D8               	btfsc	status,2,c
 26808  01B004  D01C               	goto	l17485
 26809                           
 26810                           ; BSR set to: 2
 26811  01B006  0E01               	movlw	1
 26812  01B008  6F0A               	movwf	___awdiv@counter& (0+255),b
 26813  01B00A  D004               	goto	l17471
 26814  01B00C                     l17469:
 26815                           
 26816                           ; BSR set to: 2
 26817  01B00C  90D8               	bcf	status,0,c
 26818  01B00E  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 26819  01B010  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26820  01B012  2B0A               	incf	___awdiv@counter& (0+255),f,b
 26821  01B014                     l17471:
 26822                           
 26823                           ; BSR set to: 2
 26824  01B014  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26825  01B016  D7FA               	goto	l17469
 26826  01B018                     u21120:
 26827                           
 26828                           ; BSR set to: 2
 26829  01B018  90D8               	bcf	status,0,c
 26830  01B01A  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 26831  01B01C  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26832                           
 26833                           ; BSR set to: 2
 26834  01B01E  5108               	movf	___awdiv@divisor& (0+255),w,b
 26835  01B020  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 26836  01B022  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26837  01B024  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26838  01B026  A0D8               	btfss	status,0,c
 26839  01B028  D005               	goto	l17481
 26840                           
 26841                           ; BSR set to: 2
 26842  01B02A  5108               	movf	___awdiv@divisor& (0+255),w,b
 26843  01B02C  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 26844  01B02E  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26845  01B030  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26846                           
 26847                           ; BSR set to: 2
 26848  01B032  810C               	bsf	___awdiv@quotient& (0+255),0,b
 26849  01B034                     l17481:
 26850                           
 26851                           ; BSR set to: 2
 26852  01B034  90D8               	bcf	status,0,c
 26853  01B036  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26854  01B038  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 26855                           
 26856                           ; BSR set to: 2
 26857  01B03A  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 26858  01B03C  D7ED               	goto	u21120
 26859  01B03E                     l17485:
 26860                           
 26861                           ; BSR set to: 2
 26862  01B03E  510B               	movf	___awdiv@sign& (0+255),w,b
 26863  01B040  B4D8               	btfsc	status,2,c
 26864  01B042  D004               	goto	l17489
 26865                           
 26866                           ; BSR set to: 2
 26867  01B044  6D0C               	negf	___awdiv@quotient& (0+255),b
 26868  01B046  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26869  01B048  B0D8               	btfsc	status,0,c
 26870  01B04A  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26871  01B04C                     l17489:
 26872                           
 26873                           ; BSR set to: 2
 26874  01B04C  C20C  F206         	movff	___awdiv@quotient,?___awdiv
 26875  01B050  C20D  F207         	movff	___awdiv@quotient+1,?___awdiv+1
 26876                           
 26877                           ; BSR set to: 2
 26878  01B054  0012               	return		;funcret
 26879  01B056                     __end_of___awdiv:
 26880                           	opt callstack 0
 26881                           
 26882 ;; *************** function _putch *****************
 26883 ;; Defined at:
 26884 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 26885 ;; Parameters:    Size  Location     Type
 26886 ;;  txData          1    wreg     unsigned char 
 26887 ;; Auto vars:     Size  Location     Type
 26888 ;;  txData          1    1[BANK2 ] unsigned char 
 26889 ;; Return value:  Size  Location     Type
 26890 ;;                  1    wreg      void 
 26891 ;; Registers used:
 26892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26893 ;; Tracked objects:
 26894 ;;		On entry : 0/0
 26895 ;;		On exit  : 0/0
 26896 ;;		Unchanged: 0/0
 26897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26899 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26901 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26902 ;;Total ram usage:        1 bytes
 26903 ;; Hardware stack levels used:    1
 26904 ;; Hardware stack levels required when called:   12
 26905 ;; This function calls:
 26906 ;;		_EUSART2_Write
 26907 ;; This function is called by:
 26908 ;;		_printf
 26909 ;;		__doprnt
 26910 ;;		i2__doprnt
 26911 ;; This function uses a non-reentrant model
 26912 ;;
 26913                           
 26914                           	psect	text83
 26915  01C692                     __ptext83:
 26916                           	opt callstack 0
 26917  01C692                     _putch:
 26918                           	opt callstack 0
 26919                           
 26920                           ; BSR set to: 2
 26921                           ;Skip over the trampoline to the duplicate function for level 2
 26922  01C692  B25F               	btfsc	btemp,1,c
 26923  01C694  EF50  F0E4         	goto	i2_putch
 26924  01C698                     _putch$intlevel0:
 26925                           	opt callstack 13
 26926                           
 26927                           ;incstack = 0
 26928                           ;putch@txData stored from wreg
 26929  01C698  0102               	movlb	2	; () banked
 26930  01C69A  6F01               	movwf	putch@txData& (0+255),b
 26931                           
 26932                           ;eusart2.c: 184: EUSART2_Write(txData);
 26933  01C69C  0102               	movlb	2	; () banked
 26934  01C69E  5101               	movf	putch@txData& (0+255),w,b
 26935  01C6A0  EC7B  F0DB         	call	_EUSART2_Write
 26936  01C6A4  0012               	return		;funcret
 26937  01C6A6                     __end_of_putch:
 26938                           	opt callstack 0
 26939                           
 26940 ;; *************** function _EUSART2_Write *****************
 26941 ;; Defined at:
 26942 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 26943 ;; Parameters:    Size  Location     Type
 26944 ;;  txData          1    wreg     unsigned char 
 26945 ;; Auto vars:     Size  Location     Type
 26946 ;;  txData          1    0[BANK2 ] unsigned char 
 26947 ;; Return value:  Size  Location     Type
 26948 ;;                  1    wreg      void 
 26949 ;; Registers used:
 26950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26951 ;; Tracked objects:
 26952 ;;		On entry : 0/0
 26953 ;;		On exit  : 0/0
 26954 ;;		Unchanged: 0/0
 26955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26957 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26959 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26960 ;;Total ram usage:        1 bytes
 26961 ;; Hardware stack levels used:    1
 26962 ;; Hardware stack levels required when called:   11
 26963 ;; This function calls:
 26964 ;;		Nothing
 26965 ;; This function is called by:
 26966 ;;		_putch
 26967 ;; This function uses a non-reentrant model
 26968 ;;
 26969                           
 26970                           	psect	text84
 26971  01B6F6                     __ptext84:
 26972                           	opt callstack 0
 26973  01B6F6                     _EUSART2_Write:
 26974                           	opt callstack 13
 26975                           
 26976                           ;incstack = 0
 26977                           ;EUSART2_Write@txData stored from wreg
 26978  01B6F6  0102               	movlb	2	; () banked
 26979  01B6F8  6F00               	movwf	EUSART2_Write@txData& (0+255),b
 26980                           
 26981                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 26982  01B6FA  D001               	goto	l17101
 26983  01B6FC                     l122:
 26984                           
 26985                           ; BSR set to: 1
 26986  01B6FC  0004               	clrwdt		;# 
 26987  01B6FE                     l17101:
 26988  01B6FE  0101               	movlb	1	; () banked
 26989  01B700  518F               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26990  01B702  1190               	iorwf	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 26991  01B704  B4D8               	btfsc	status,2,c
 26992  01B706  D7FA               	goto	l122
 26993                           
 26994                           ; BSR set to: 1
 26995                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 26996  01B708  010E               	movlb	14	; () banked
 26997  01B70A  BDC5               	btfsc	197,6,b	;volatile
 26998  01B70C  D003               	goto	l124
 26999                           
 27000                           ; BSR set to: 14
 27001                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 27002  01B70E  C200  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 27003                           
 27004                           ;eusart2.c: 163: }
 27005  01B712  D019               	goto	l17115
 27006  01B714                     l124:
 27007                           
 27008                           ; BSR set to: 14
 27009                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 27010  01B714  9DC5               	bcf	197,6,b	;volatile
 27011                           
 27012                           ; BSR set to: 14
 27013                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 27014  01B716  0EC8               	movlw	low _eusart2TxBuffer
 27015  01B718  0101               	movlb	1	; () banked
 27016  01B71A  2593               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 27017  01B71C  6ED9               	movwf	fsr2l,c
 27018  01B71E  0E04               	movlw	high _eusart2TxBuffer
 27019  01B720  2194               	addwfc	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 27020  01B722  6EDA               	movwf	fsr2h,c
 27021  01B724  C200  FFDF         	movff	EUSART2_Write@txData,indf2
 27022                           
 27023                           ; BSR set to: 1
 27024  01B728  4B93               	infsnz	_eusart2TxHead& (0+255),f,b	;volatile
 27025  01B72A  2B94               	incf	(_eusart2TxHead+1)& (0+255),f,b	;volatile
 27026                           
 27027                           ; BSR set to: 1
 27028                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27029  01B72C  0E00               	movlw	0
 27030  01B72E  5D93               	subwf	_eusart2TxHead& (0+255),w,b	;volatile
 27031  01B730  0E04               	movlw	4
 27032  01B732  5994               	subwfb	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 27033  01B734  A0D8               	btfss	status,0,c
 27034  01B736  D004               	goto	l17113
 27035                           
 27036                           ; BSR set to: 1
 27037                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 27038  01B738  0E00               	movlw	0
 27039  01B73A  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 27040  01B73C  0E00               	movlw	0
 27041  01B73E  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27042  01B740                     l17113:
 27043                           
 27044                           ; BSR set to: 1
 27045                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 27046  01B740  078F               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27047  01B742  A0D8               	btfss	status,0,c
 27048  01B744  0790               	decf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 27049  01B746                     l17115:
 27050                           
 27051                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 27052  01B746  010E               	movlb	14	; () banked
 27053  01B748  8DC5               	bsf	197,6,b	;volatile
 27054                           
 27055                           ; BSR set to: 14
 27056  01B74A  0012               	return		;funcret
 27057  01B74C                     __end_of_EUSART2_Write:
 27058                           	opt callstack 0
 27059                           
 27060 ;; *************** function _isdigit *****************
 27061 ;; Defined at:
 27062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 27063 ;; Parameters:    Size  Location     Type
 27064 ;;  c               1    wreg     unsigned char 
 27065 ;; Auto vars:     Size  Location     Type
 27066 ;;  c               1    2[BANK2 ] unsigned char 
 27067 ;; Return value:  Size  Location     Type
 27068 ;;		None               void
 27069 ;; Registers used:
 27070 ;;		wreg, status,2, status,0
 27071 ;; Tracked objects:
 27072 ;;		On entry : 0/0
 27073 ;;		On exit  : 0/0
 27074 ;;		Unchanged: 0/0
 27075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27077 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27078 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27079 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27080 ;;Total ram usage:        3 bytes
 27081 ;; Hardware stack levels used:    1
 27082 ;; Hardware stack levels required when called:   11
 27083 ;; This function calls:
 27084 ;;		Nothing
 27085 ;; This function is called by:
 27086 ;;		__doprnt
 27087 ;; This function uses a non-reentrant model
 27088 ;;
 27089                           
 27090                           	psect	text85
 27091  01C40E                     __ptext85:
 27092                           	opt callstack 0
 27093  01C40E                     _isdigit:
 27094                           	opt callstack 14
 27095                           
 27096                           ; BSR set to: 14
 27097                           ;incstack = 0
 27098                           ;isdigit@c stored from wreg
 27099  01C40E  0102               	movlb	2	; () banked
 27100  01C410  6F02               	movwf	isdigit@c& (0+255),b
 27101  01C412  0E00               	movlw	0
 27102  01C414  0102               	movlb	2	; () banked
 27103  01C416  6F01               	movwf	_isdigit$5455& (0+255),b
 27104                           
 27105                           ; BSR set to: 2
 27106  01C418  0E3A               	movlw	58
 27107  01C41A  6102               	cpfslt	isdigit@c& (0+255),b
 27108  01C41C  D005               	goto	l17637
 27109                           
 27110                           ; BSR set to: 2
 27111  01C41E  0E2F               	movlw	47
 27112  01C420  6502               	cpfsgt	isdigit@c& (0+255),b
 27113  01C422  D002               	goto	l17637
 27114                           
 27115                           ; BSR set to: 2
 27116  01C424  0E01               	movlw	1
 27117  01C426  6F01               	movwf	_isdigit$5455& (0+255),b
 27118  01C428                     l17637:
 27119                           
 27120                           ; BSR set to: 2
 27121  01C428  C201  F200         	movff	_isdigit$5455,??_isdigit
 27122  01C42C  3100               	rrcf	??_isdigit& (0+255),w,b
 27123                           
 27124                           ; BSR set to: 2
 27125  01C42E  0012               	return		;funcret
 27126  01C430                     __end_of_isdigit:
 27127                           	opt callstack 0
 27128                           
 27129 ;; *************** function _fround *****************
 27130 ;; Defined at:
 27131 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 27132 ;; Parameters:    Size  Location     Type
 27133 ;;  prec            1    wreg     unsigned char 
 27134 ;; Auto vars:     Size  Location     Type
 27135 ;;  prec            1   51[BANK2 ] unsigned char 
 27136 ;; Return value:  Size  Location     Type
 27137 ;;                  4   39[BANK2 ] unsigned char 
 27138 ;; Registers used:
 27139 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27140 ;; Tracked objects:
 27141 ;;		On entry : 0/0
 27142 ;;		On exit  : 0/0
 27143 ;;		Unchanged: 0/0
 27144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27145 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27146 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27148 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27149 ;;Total ram usage:       13 bytes
 27150 ;; Hardware stack levels used:    1
 27151 ;; Hardware stack levels required when called:   12
 27152 ;; This function calls:
 27153 ;;		___flmul
 27154 ;;		___lwdiv
 27155 ;;		___lwmod
 27156 ;; This function is called by:
 27157 ;;		__doprnt
 27158 ;; This function uses a non-reentrant model
 27159 ;;
 27160                           
 27161                           	psect	text86
 27162  017CE6                     __ptext86:
 27163                           	opt callstack 0
 27164  017CE6                     _fround:
 27165                           	opt callstack 13
 27166                           
 27167                           ; BSR set to: 2
 27168                           ;incstack = 0
 27169                           ;fround@prec stored from wreg
 27170  017CE6  0102               	movlb	2	; () banked
 27171  017CE8  6F33               	movwf	fround@prec& (0+255),b
 27172                           
 27173                           ;doprnt.c: 421: if(prec>=110)
 27174  017CEA  0E6D               	movlw	109
 27175  017CEC  0102               	movlb	2	; () banked
 27176  017CEE  6533               	cpfsgt	fround@prec& (0+255),b
 27177  017CF0  D0BA               	goto	l17581
 27178                           
 27179                           ; BSR set to: 2
 27180                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27181  017CF2  0E00               	movlw	0
 27182  017CF4  6F12               	movwf	___flmul@a& (0+255),b
 27183  017CF6  0E00               	movlw	0
 27184  017CF8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27185  017CFA  0E00               	movlw	0
 27186  017CFC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27187  017CFE  0E3F               	movlw	63
 27188  017D00  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27189  017D02  0E00               	movlw	0
 27190  017D04  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27191  017D06  0E64               	movlw	100
 27192  017D08  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27193  017D0A  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27194  017D0E  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27195  017D10  ECA6  F0DB         	call	___lwdiv	;wreg free
 27196  017D14  0102               	movlb	2	; () banked
 27197  017D16  90D8               	bcf	status,0,c
 27198  017D18  3705               	rlcf	?___lwdiv& (0+255),f,b
 27199  017D1A  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27200  017D1C  90D8               	bcf	status,0,c
 27201  017D1E  3705               	rlcf	?___lwdiv& (0+255),f,b
 27202  017D20  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27203  017D22  0E48               	movlw	72
 27204  017D24  2705               	addwf	?___lwdiv& (0+255),f,b
 27205  017D26  0E00               	movlw	0
 27206  017D28  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27207  017D2A  0E5B               	movlw	low __npowers_
 27208  017D2C  2505               	addwf	?___lwdiv& (0+255),w,b
 27209  017D2E  6EF6               	movwf	tblptrl,c
 27210  017D30  0EE4               	movlw	high __npowers_
 27211  017D32  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27212  017D34  6EF7               	movwf	tblptrh,c
 27213  017D36                     	if	1	;There are 3 active tblptr bytes
 27214  017D36  6AF8               	clrf	tblptru,c
 27215  017D38  0E00               	movlw	low (__mediumconst shr (0+16))
 27216  017D3A  22F8               	addwfc	tblptru,f,c
 27217  017D3C                     	endif
 27218  017D3C  0009               	tblrd		*+
 27219  017D3E  CFF5 F20E          	movff	tablat,___flmul@b
 27220  017D42  0009               	tblrd		*+
 27221  017D44  CFF5 F20F          	movff	tablat,___flmul@b+1
 27222  017D48  0009               	tblrd		*+
 27223  017D4A  CFF5 F210          	movff	tablat,___flmul@b+2
 27224  017D4E  000A               	tblrd		*-
 27225  017D50  CFF5 F211          	movff	tablat,___flmul@b+3
 27226  017D54  EC7A  F0B3         	call	___flmul	;wreg free
 27227  017D58  C20E  F22F         	movff	?___flmul,_fround$6036
 27228  017D5C  C20F  F230         	movff	?___flmul+1,_fround$6036+1
 27229  017D60  C210  F231         	movff	?___flmul+2,_fround$6036+2
 27230  017D64  C211  F232         	movff	?___flmul+3,_fround$6036+3
 27231                           
 27232                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27233  017D68  0E00               	movlw	0
 27234  017D6A  0102               	movlb	2	; () banked
 27235  017D6C  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27236  017D6E  0E0A               	movlw	10
 27237  017D70  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27238  017D72  0E00               	movlw	0
 27239  017D74  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27240  017D76  0E64               	movlw	100
 27241  017D78  6F02               	movwf	___lwmod@divisor& (0+255),b
 27242  017D7A  C233  F200         	movff	fround@prec,___lwmod@dividend
 27243  017D7E  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27244  017D80  EC0D  F0DE         	call	___lwmod	;wreg free
 27245  017D84  C200  F205         	movff	?___lwmod,___lwdiv@dividend
 27246  017D88  C201  F206         	movff	?___lwmod+1,___lwdiv@dividend+1
 27247  017D8C  ECA6  F0DB         	call	___lwdiv	;wreg free
 27248  017D90  0102               	movlb	2	; () banked
 27249  017D92  90D8               	bcf	status,0,c
 27250  017D94  3705               	rlcf	?___lwdiv& (0+255),f,b
 27251  017D96  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27252  017D98  90D8               	bcf	status,0,c
 27253  017D9A  3705               	rlcf	?___lwdiv& (0+255),f,b
 27254  017D9C  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27255  017D9E  0E24               	movlw	36
 27256  017DA0  2705               	addwf	?___lwdiv& (0+255),f,b
 27257  017DA2  0E00               	movlw	0
 27258  017DA4  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27259  017DA6  0E5B               	movlw	low __npowers_
 27260  017DA8  2505               	addwf	?___lwdiv& (0+255),w,b
 27261  017DAA  6EF6               	movwf	tblptrl,c
 27262  017DAC  0EE4               	movlw	high __npowers_
 27263  017DAE  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27264  017DB0  6EF7               	movwf	tblptrh,c
 27265  017DB2                     	if	1	;There are 3 active tblptr bytes
 27266  017DB2  6AF8               	clrf	tblptru,c
 27267  017DB4  0E00               	movlw	low (__mediumconst shr (0+16))
 27268  017DB6  22F8               	addwfc	tblptru,f,c
 27269  017DB8                     	endif
 27270  017DB8  0009               	tblrd		*+
 27271  017DBA  CFF5 F212          	movff	tablat,___flmul@a
 27272  017DBE  0009               	tblrd		*+
 27273  017DC0  CFF5 F213          	movff	tablat,___flmul@a+1
 27274  017DC4  0009               	tblrd		*+
 27275  017DC6  CFF5 F214          	movff	tablat,___flmul@a+2
 27276  017DCA  000A               	tblrd		*-
 27277  017DCC  CFF5 F215          	movff	tablat,___flmul@a+3
 27278  017DD0  C22F  F20E         	movff	_fround$6036,___flmul@b
 27279  017DD4  C230  F20F         	movff	_fround$6036+1,___flmul@b+1
 27280  017DD8  C231  F210         	movff	_fround$6036+2,___flmul@b+2
 27281  017DDC  C232  F211         	movff	_fround$6036+3,___flmul@b+3
 27282  017DE0  EC7A  F0B3         	call	___flmul	;wreg free
 27283  017DE4  C20E  F22B         	movff	?___flmul,_fround$6037
 27284  017DE8  C20F  F22C         	movff	?___flmul+1,_fround$6037+1
 27285  017DEC  C210  F22D         	movff	?___flmul+2,_fround$6037+2
 27286  017DF0  C211  F22E         	movff	?___flmul+3,_fround$6037+3
 27287                           
 27288                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27289  017DF4  C22B  F20E         	movff	_fround$6037,___flmul@b
 27290  017DF8  C22C  F20F         	movff	_fround$6037+1,___flmul@b+1
 27291  017DFC  C22D  F210         	movff	_fround$6037+2,___flmul@b+2
 27292  017E00  C22E  F211         	movff	_fround$6037+3,___flmul@b+3
 27293  017E04  0E00               	movlw	0
 27294  017E06  0102               	movlb	2	; () banked
 27295  017E08  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27296  017E0A  0E0A               	movlw	10
 27297  017E0C  6F02               	movwf	___lwmod@divisor& (0+255),b
 27298  017E0E  C233  F200         	movff	fround@prec,___lwmod@dividend
 27299  017E12  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27300  017E14  EC0D  F0DE         	call	___lwmod	;wreg free
 27301  017E18  0102               	movlb	2	; () banked
 27302  017E1A  90D8               	bcf	status,0,c
 27303  017E1C  3700               	rlcf	?___lwmod& (0+255),f,b
 27304  017E1E  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27305  017E20  90D8               	bcf	status,0,c
 27306  017E22  3700               	rlcf	?___lwmod& (0+255),f,b
 27307  017E24  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27308  017E26  0E5B               	movlw	low __npowers_
 27309  017E28  2500               	addwf	?___lwmod& (0+255),w,b
 27310  017E2A  6EF6               	movwf	tblptrl,c
 27311  017E2C  0EE4               	movlw	high __npowers_
 27312  017E2E  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27313  017E30  6EF7               	movwf	tblptrh,c
 27314  017E32                     	if	1	;There are 3 active tblptr bytes
 27315  017E32  6AF8               	clrf	tblptru,c
 27316  017E34  0E00               	movlw	low (__mediumconst shr (0+16))
 27317  017E36  22F8               	addwfc	tblptru,f,c
 27318  017E38                     	endif
 27319  017E38  0009               	tblrd		*+
 27320  017E3A  CFF5 F212          	movff	tablat,___flmul@a
 27321  017E3E  0009               	tblrd		*+
 27322  017E40  CFF5 F213          	movff	tablat,___flmul@a+1
 27323  017E44  0009               	tblrd		*+
 27324  017E46  CFF5 F214          	movff	tablat,___flmul@a+2
 27325  017E4A  000A               	tblrd		*-
 27326  017E4C  CFF5 F215          	movff	tablat,___flmul@a+3
 27327  017E50  EC7A  F0B3         	call	___flmul	;wreg free
 27328  017E54  C20E  F227         	movff	?___flmul,?_fround
 27329  017E58  C20F  F228         	movff	?___flmul+1,?_fround+1
 27330  017E5C  C210  F229         	movff	?___flmul+2,?_fround+2
 27331  017E60  C211  F22A         	movff	?___flmul+3,?_fround+3
 27332  017E64  0012               	return	
 27333  017E66                     l17581:
 27334                           
 27335                           ; BSR set to: 2
 27336                           ;doprnt.c: 423: else if(prec > 10)
 27337  017E66  0E0A               	movlw	10
 27338  017E68  6533               	cpfsgt	fround@prec& (0+255),b
 27339  017E6A  D074               	goto	l17587
 27340                           
 27341                           ; BSR set to: 2
 27342                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27343  017E6C  0E00               	movlw	0
 27344  017E6E  6F12               	movwf	___flmul@a& (0+255),b
 27345  017E70  0E00               	movlw	0
 27346  017E72  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27347  017E74  0E00               	movlw	0
 27348  017E76  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27349  017E78  0E3F               	movlw	63
 27350  017E7A  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27351  017E7C  0E00               	movlw	0
 27352  017E7E  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27353  017E80  0E0A               	movlw	10
 27354  017E82  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27355  017E84  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27356  017E88  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27357  017E8A  ECA6  F0DB         	call	___lwdiv	;wreg free
 27358  017E8E  0102               	movlb	2	; () banked
 27359  017E90  90D8               	bcf	status,0,c
 27360  017E92  3705               	rlcf	?___lwdiv& (0+255),f,b
 27361  017E94  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27362  017E96  90D8               	bcf	status,0,c
 27363  017E98  3705               	rlcf	?___lwdiv& (0+255),f,b
 27364  017E9A  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27365  017E9C  0E24               	movlw	36
 27366  017E9E  2705               	addwf	?___lwdiv& (0+255),f,b
 27367  017EA0  0E00               	movlw	0
 27368  017EA2  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27369  017EA4  0E5B               	movlw	low __npowers_
 27370  017EA6  2505               	addwf	?___lwdiv& (0+255),w,b
 27371  017EA8  6EF6               	movwf	tblptrl,c
 27372  017EAA  0EE4               	movlw	high __npowers_
 27373  017EAC  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27374  017EAE  6EF7               	movwf	tblptrh,c
 27375  017EB0                     	if	1	;There are 3 active tblptr bytes
 27376  017EB0  6AF8               	clrf	tblptru,c
 27377  017EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 27378  017EB4  22F8               	addwfc	tblptru,f,c
 27379  017EB6                     	endif
 27380  017EB6  0009               	tblrd		*+
 27381  017EB8  CFF5 F20E          	movff	tablat,___flmul@b
 27382  017EBC  0009               	tblrd		*+
 27383  017EBE  CFF5 F20F          	movff	tablat,___flmul@b+1
 27384  017EC2  0009               	tblrd		*+
 27385  017EC4  CFF5 F210          	movff	tablat,___flmul@b+2
 27386  017EC8  000A               	tblrd		*-
 27387  017ECA  CFF5 F211          	movff	tablat,___flmul@b+3
 27388  017ECE  EC7A  F0B3         	call	___flmul	;wreg free
 27389  017ED2  C20E  F22F         	movff	?___flmul,_fround$6036
 27390  017ED6  C20F  F230         	movff	?___flmul+1,_fround$6036+1
 27391  017EDA  C210  F231         	movff	?___flmul+2,_fround$6036+2
 27392  017EDE  C211  F232         	movff	?___flmul+3,_fround$6036+3
 27393                           
 27394                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27395  017EE2  C22F  F20E         	movff	_fround$6036,___flmul@b
 27396  017EE6  C230  F20F         	movff	_fround$6036+1,___flmul@b+1
 27397  017EEA  C231  F210         	movff	_fround$6036+2,___flmul@b+2
 27398  017EEE  C232  F211         	movff	_fround$6036+3,___flmul@b+3
 27399  017EF2  0E00               	movlw	0
 27400  017EF4  0102               	movlb	2	; () banked
 27401  017EF6  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27402  017EF8  0E0A               	movlw	10
 27403  017EFA  6F02               	movwf	___lwmod@divisor& (0+255),b
 27404  017EFC  C233  F200         	movff	fround@prec,___lwmod@dividend
 27405  017F00  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27406  017F02  EC0D  F0DE         	call	___lwmod	;wreg free
 27407  017F06  0102               	movlb	2	; () banked
 27408  017F08  90D8               	bcf	status,0,c
 27409  017F0A  3700               	rlcf	?___lwmod& (0+255),f,b
 27410  017F0C  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27411  017F0E  90D8               	bcf	status,0,c
 27412  017F10  3700               	rlcf	?___lwmod& (0+255),f,b
 27413  017F12  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27414  017F14  0E5B               	movlw	low __npowers_
 27415  017F16  2500               	addwf	?___lwmod& (0+255),w,b
 27416  017F18  6EF6               	movwf	tblptrl,c
 27417  017F1A  0EE4               	movlw	high __npowers_
 27418  017F1C  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27419  017F1E  6EF7               	movwf	tblptrh,c
 27420  017F20                     	if	1	;There are 3 active tblptr bytes
 27421  017F20  6AF8               	clrf	tblptru,c
 27422  017F22  0E00               	movlw	low (__mediumconst shr (0+16))
 27423  017F24  22F8               	addwfc	tblptru,f,c
 27424  017F26                     	endif
 27425  017F26  0009               	tblrd		*+
 27426  017F28  CFF5 F212          	movff	tablat,___flmul@a
 27427  017F2C  0009               	tblrd		*+
 27428  017F2E  CFF5 F213          	movff	tablat,___flmul@a+1
 27429  017F32  0009               	tblrd		*+
 27430  017F34  CFF5 F214          	movff	tablat,___flmul@a+2
 27431  017F38  000A               	tblrd		*-
 27432  017F3A  CFF5 F215          	movff	tablat,___flmul@a+3
 27433  017F3E  EC7A  F0B3         	call	___flmul	;wreg free
 27434  017F42  C20E  F227         	movff	?___flmul,?_fround
 27435  017F46  C20F  F228         	movff	?___flmul+1,?_fround+1
 27436  017F4A  C210  F229         	movff	?___flmul+2,?_fround+2
 27437  017F4E  C211  F22A         	movff	?___flmul+3,?_fround+3
 27438  017F52  0012               	return	
 27439  017F54                     l17587:
 27440                           
 27441                           ; BSR set to: 2
 27442                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 27443  017F54  5133               	movf	fround@prec& (0+255),w,b
 27444  017F56  0D04               	mullw	4
 27445  017F58  0E5B               	movlw	low __npowers_
 27446  017F5A  24F3               	addwf	prodl,w,c
 27447  017F5C  6EF6               	movwf	tblptrl,c
 27448  017F5E  0EE4               	movlw	high __npowers_
 27449  017F60  20F4               	addwfc	prodh,w,c
 27450  017F62  6EF7               	movwf	tblptrh,c
 27451  017F64                     	if	1	;There are 3 active tblptr bytes
 27452  017F64  6AF8               	clrf	tblptru,c
 27453  017F66  0E00               	movlw	low (__mediumconst shr (0+16))
 27454  017F68  22F8               	addwfc	tblptru,f,c
 27455  017F6A                     	endif
 27456  017F6A  0009               	tblrd		*+
 27457  017F6C  CFF5 F20E          	movff	tablat,___flmul@b
 27458  017F70  0009               	tblrd		*+
 27459  017F72  CFF5 F20F          	movff	tablat,___flmul@b+1
 27460  017F76  0009               	tblrd		*+
 27461  017F78  CFF5 F210          	movff	tablat,___flmul@b+2
 27462  017F7C  000A               	tblrd		*-
 27463  017F7E  CFF5 F211          	movff	tablat,___flmul@b+3
 27464  017F82  0E00               	movlw	0
 27465  017F84  6F12               	movwf	___flmul@a& (0+255),b
 27466  017F86  0E00               	movlw	0
 27467  017F88  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27468  017F8A  0E00               	movlw	0
 27469  017F8C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27470  017F8E  0E3F               	movlw	63
 27471  017F90  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27472  017F92  EC7A  F0B3         	call	___flmul	;wreg free
 27473  017F96  C20E  F227         	movff	?___flmul,?_fround
 27474  017F9A  C20F  F228         	movff	?___flmul+1,?_fround+1
 27475  017F9E  C210  F229         	movff	?___flmul+2,?_fround+2
 27476  017FA2  C211  F22A         	movff	?___flmul+3,?_fround+3
 27477  017FA6  0012               	return		;funcret
 27478  017FA8                     __end_of_fround:
 27479                           	opt callstack 0
 27480                           
 27481 ;; *************** function ___lwmod *****************
 27482 ;; Defined at:
 27483 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 27484 ;; Parameters:    Size  Location     Type
 27485 ;;  dividend        2    0[BANK2 ] unsigned int 
 27486 ;;  divisor         2    2[BANK2 ] unsigned int 
 27487 ;; Auto vars:     Size  Location     Type
 27488 ;;  counter         1    4[BANK2 ] unsigned char 
 27489 ;; Return value:  Size  Location     Type
 27490 ;;                  2    0[BANK2 ] unsigned int 
 27491 ;; Registers used:
 27492 ;;		wreg, status,2, status,0
 27493 ;; Tracked objects:
 27494 ;;		On entry : 0/0
 27495 ;;		On exit  : 0/0
 27496 ;;		Unchanged: 0/0
 27497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27498 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27499 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27501 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27502 ;;Total ram usage:        5 bytes
 27503 ;; Hardware stack levels used:    1
 27504 ;; Hardware stack levels required when called:   11
 27505 ;; This function calls:
 27506 ;;		Nothing
 27507 ;; This function is called by:
 27508 ;;		_fround
 27509 ;; This function uses a non-reentrant model
 27510 ;;
 27511                           
 27512                           	psect	text87
 27513  01BC1A                     __ptext87:
 27514                           	opt callstack 0
 27515  01BC1A                     ___lwmod:
 27516                           	opt callstack 13
 27517                           
 27518                           ;incstack = 0
 27519  01BC1A  0102               	movlb	2	; () banked
 27520  01BC1C  5102               	movf	___lwmod@divisor& (0+255),w,b
 27521  01BC1E  1103               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27522  01BC20  B4D8               	btfsc	status,2,c
 27523  01BC22  D018               	goto	l3207
 27524                           
 27525                           ; BSR set to: 2
 27526  01BC24  0E01               	movlw	1
 27527  01BC26  6F04               	movwf	___lwmod@counter& (0+255),b
 27528  01BC28  D004               	goto	l17557
 27529  01BC2A                     l17555:
 27530                           
 27531                           ; BSR set to: 2
 27532  01BC2A  90D8               	bcf	status,0,c
 27533  01BC2C  3702               	rlcf	___lwmod@divisor& (0+255),f,b
 27534  01BC2E  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27535  01BC30  2B04               	incf	___lwmod@counter& (0+255),f,b
 27536  01BC32                     l17557:
 27537                           
 27538                           ; BSR set to: 2
 27539  01BC32  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27540  01BC34  D7FA               	goto	l17555
 27541  01BC36                     u21250:
 27542                           
 27543                           ; BSR set to: 2
 27544  01BC36  5102               	movf	___lwmod@divisor& (0+255),w,b
 27545  01BC38  5D00               	subwf	___lwmod@dividend& (0+255),w,b
 27546  01BC3A  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27547  01BC3C  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27548  01BC3E  A0D8               	btfss	status,0,c
 27549  01BC40  D004               	goto	l17563
 27550                           
 27551                           ; BSR set to: 2
 27552  01BC42  5102               	movf	___lwmod@divisor& (0+255),w,b
 27553  01BC44  5F00               	subwf	___lwmod@dividend& (0+255),f,b
 27554  01BC46  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27555  01BC48  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27556  01BC4A                     l17563:
 27557                           
 27558                           ; BSR set to: 2
 27559  01BC4A  90D8               	bcf	status,0,c
 27560  01BC4C  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27561  01BC4E  3302               	rrcf	___lwmod@divisor& (0+255),f,b
 27562                           
 27563                           ; BSR set to: 2
 27564  01BC50  2F04               	decfsz	___lwmod@counter& (0+255),f,b
 27565  01BC52  D7F1               	goto	u21250
 27566  01BC54                     l3207:
 27567                           
 27568                           ; BSR set to: 2
 27569  01BC54  C200  F200         	movff	___lwmod@dividend,?___lwmod
 27570  01BC58  C201  F201         	movff	___lwmod@dividend+1,?___lwmod+1
 27571                           
 27572                           ; BSR set to: 2
 27573  01BC5C  0012               	return		;funcret
 27574  01BC5E                     __end_of___lwmod:
 27575                           	opt callstack 0
 27576                           
 27577 ;; *************** function ___lwdiv *****************
 27578 ;; Defined at:
 27579 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 27580 ;; Parameters:    Size  Location     Type
 27581 ;;  dividend        2    5[BANK2 ] unsigned int 
 27582 ;;  divisor         2    7[BANK2 ] unsigned int 
 27583 ;; Auto vars:     Size  Location     Type
 27584 ;;  quotient        2   10[BANK2 ] unsigned int 
 27585 ;;  counter         1    9[BANK2 ] unsigned char 
 27586 ;; Return value:  Size  Location     Type
 27587 ;;                  2    5[BANK2 ] unsigned int 
 27588 ;; Registers used:
 27589 ;;		wreg, status,2, status,0
 27590 ;; Tracked objects:
 27591 ;;		On entry : 0/0
 27592 ;;		On exit  : 0/0
 27593 ;;		Unchanged: 0/0
 27594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27595 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27596 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27598 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27599 ;;Total ram usage:        7 bytes
 27600 ;; Hardware stack levels used:    1
 27601 ;; Hardware stack levels required when called:   11
 27602 ;; This function calls:
 27603 ;;		Nothing
 27604 ;; This function is called by:
 27605 ;;		_fround
 27606 ;; This function uses a non-reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text88
 27610  01B74C                     __ptext88:
 27611                           	opt callstack 0
 27612  01B74C                     ___lwdiv:
 27613                           	opt callstack 13
 27614                           
 27615                           ; BSR set to: 2
 27616                           ;incstack = 0
 27617  01B74C  0E00               	movlw	0
 27618  01B74E  0102               	movlb	2	; () banked
 27619  01B750  6F0B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27620  01B752  0E00               	movlw	0
 27621  01B754  6F0A               	movwf	___lwdiv@quotient& (0+255),b
 27622                           
 27623                           ; BSR set to: 2
 27624  01B756  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27625  01B758  1108               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27626  01B75A  B4D8               	btfsc	status,2,c
 27627  01B75C  D01C               	goto	l3197
 27628                           
 27629                           ; BSR set to: 2
 27630  01B75E  0E01               	movlw	1
 27631  01B760  6F09               	movwf	___lwdiv@counter& (0+255),b
 27632  01B762  D004               	goto	l17537
 27633  01B764                     l17535:
 27634                           
 27635                           ; BSR set to: 2
 27636  01B764  90D8               	bcf	status,0,c
 27637  01B766  3707               	rlcf	___lwdiv@divisor& (0+255),f,b
 27638  01B768  3708               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27639  01B76A  2B09               	incf	___lwdiv@counter& (0+255),f,b
 27640  01B76C                     l17537:
 27641                           
 27642                           ; BSR set to: 2
 27643  01B76C  AF08               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27644  01B76E  D7FA               	goto	l17535
 27645  01B770                     u21220:
 27646                           
 27647                           ; BSR set to: 2
 27648  01B770  90D8               	bcf	status,0,c
 27649  01B772  370A               	rlcf	___lwdiv@quotient& (0+255),f,b
 27650  01B774  370B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27651                           
 27652                           ; BSR set to: 2
 27653  01B776  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27654  01B778  5D05               	subwf	___lwdiv@dividend& (0+255),w,b
 27655  01B77A  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27656  01B77C  5906               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27657  01B77E  A0D8               	btfss	status,0,c
 27658  01B780  D005               	goto	l17547
 27659                           
 27660                           ; BSR set to: 2
 27661  01B782  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27662  01B784  5F05               	subwf	___lwdiv@dividend& (0+255),f,b
 27663  01B786  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27664  01B788  5B06               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27665                           
 27666                           ; BSR set to: 2
 27667  01B78A  810A               	bsf	___lwdiv@quotient& (0+255),0,b
 27668  01B78C                     l17547:
 27669                           
 27670                           ; BSR set to: 2
 27671  01B78C  90D8               	bcf	status,0,c
 27672  01B78E  3308               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27673  01B790  3307               	rrcf	___lwdiv@divisor& (0+255),f,b
 27674                           
 27675                           ; BSR set to: 2
 27676  01B792  2F09               	decfsz	___lwdiv@counter& (0+255),f,b
 27677  01B794  D7ED               	goto	u21220
 27678  01B796                     l3197:
 27679                           
 27680                           ; BSR set to: 2
 27681  01B796  C20A  F205         	movff	___lwdiv@quotient,?___lwdiv
 27682  01B79A  C20B  F206         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27683                           
 27684                           ; BSR set to: 2
 27685  01B79E  0012               	return		;funcret
 27686  01B7A0                     __end_of___lwdiv:
 27687                           	opt callstack 0
 27688                           
 27689 ;; *************** function __tdiv_to_l_ *****************
 27690 ;; Defined at:
 27691 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 27692 ;; Parameters:    Size  Location     Type
 27693 ;;  f1              4    0[BANK2 ] float 
 27694 ;;  f2              4    4[BANK2 ] float 
 27695 ;; Auto vars:     Size  Location     Type
 27696 ;;  quot            4   11[BANK2 ] unsigned long 
 27697 ;;  exp1            1   16[BANK2 ] unsigned char 
 27698 ;;  cntr            1   15[BANK2 ] unsigned char 
 27699 ;; Return value:  Size  Location     Type
 27700 ;;                  4    0[BANK2 ] unsigned long 
 27701 ;; Registers used:
 27702 ;;		wreg, status,2, status,0
 27703 ;; Tracked objects:
 27704 ;;		On entry : 0/0
 27705 ;;		On exit  : 0/0
 27706 ;;		Unchanged: 0/0
 27707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27708 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27709 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27710 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27711 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27712 ;;Total ram usage:       17 bytes
 27713 ;; Hardware stack levels used:    1
 27714 ;; Hardware stack levels required when called:   11
 27715 ;; This function calls:
 27716 ;;		Nothing
 27717 ;; This function is called by:
 27718 ;;		__doprnt
 27719 ;; This function uses a non-reentrant model
 27720 ;;
 27721                           
 27722                           	psect	text89
 27723  019E56                     __ptext89:
 27724                           	opt callstack 0
 27725  019E56                     __tdiv_to_l_:
 27726                           	opt callstack 14
 27727                           
 27728                           ; BSR set to: 2
 27729                           ;incstack = 0
 27730  019E56  C202  F208         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 27731  019E5A  0102               	movlb	2	; () banked
 27732  019E5C  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27733  019E5E  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27734  019E60  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27735  019E62  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27736  019E64  E301               	bnc	u21371
 27737  019E66  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27738  019E68                     u21371:
 27739  019E68  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27740  019E6A  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
 27741  019E6C  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27742  019E6E  A4D8               	btfss	status,2,c
 27743  019E70  D009               	goto	l17647
 27744  019E72                     u21380:
 27745                           
 27746                           ; BSR set to: 2
 27747  019E72  0E00               	movlw	0
 27748  019E74  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 27749  019E76  0E00               	movlw	0
 27750  019E78  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 27751  019E7A  0E00               	movlw	0
 27752  019E7C  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 27753  019E7E  0E00               	movlw	0
 27754  019E80  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 27755  019E82  0012               	return	
 27756  019E84                     l17647:
 27757                           
 27758                           ; BSR set to: 2
 27759  019E84  C206  F208         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 27760  019E88  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27761  019E8A  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27762  019E8C  3505               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27763  019E8E  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27764  019E90  E301               	bnc	u21391
 27765  019E92  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27766  019E94                     u21391:
 27767  019E94  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27768  019E96  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27769  019E98  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27770  019E9A  B4D8               	btfsc	status,2,c
 27771  019E9C  D7EA               	goto	u21380
 27772                           
 27773                           ; BSR set to: 2
 27774  019E9E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 27775                           
 27776                           ; BSR set to: 2
 27777  019EA0  0EFF               	movlw	255
 27778  019EA2  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 27779  019EA4  0EFF               	movlw	255
 27780  019EA6  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27781  019EA8  0E00               	movlw	0
 27782  019EAA  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27783  019EAC  8F05               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 27784                           
 27785                           ; BSR set to: 2
 27786  019EAE  0EFF               	movlw	255
 27787  019EB0  1704               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 27788  019EB2  0EFF               	movlw	255
 27789  019EB4  1705               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 27790  019EB6  0E00               	movlw	0
 27791  019EB8  1706               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 27792                           
 27793                           ; BSR set to: 2
 27794  019EBA  0E00               	movlw	0
 27795  019EBC  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
 27796  019EBE  0E00               	movlw	0
 27797  019EC0  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 27798  019EC2  0E00               	movlw	0
 27799  019EC4  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 27800  019EC6  0E00               	movlw	0
 27801  019EC8  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 27802                           
 27803                           ; BSR set to: 2
 27804  019ECA  0E7F               	movlw	127
 27805  019ECC  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27806                           
 27807                           ; BSR set to: 2
 27808  019ECE  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27809  019ED0  0F98               	addlw	152
 27810  019ED2  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27811                           
 27812                           ; BSR set to: 2
 27813  019ED4  0E18               	movlw	24
 27814  019ED6  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27815  019ED8                     l3049:
 27816                           
 27817                           ; BSR set to: 2
 27818  019ED8  90D8               	bcf	status,0,c
 27819  019EDA  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27820  019EDC  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27821  019EDE  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27822  019EE0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27823                           
 27824                           ; BSR set to: 2
 27825  019EE2  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27826  019EE4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 27827  019EE6  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27828  019EE8  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27829  019EEA  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27830  019EEC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 27831  019EEE  A0D8               	btfss	status,0,c
 27832  019EF0  D007               	goto	l3050
 27833                           
 27834                           ; BSR set to: 2
 27835  019EF2  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27836  019EF4  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 27837  019EF6  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27838  019EF8  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27839  019EFA  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27840  019EFC  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27841                           
 27842                           ; BSR set to: 2
 27843  019EFE  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 27844  019F00                     l3050:
 27845                           
 27846                           ; BSR set to: 2
 27847  019F00  90D8               	bcf	status,0,c
 27848  019F02  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 27849  019F04  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27850  019F06  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27851                           
 27852                           ; BSR set to: 2
 27853  019F08  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 27854  019F0A  D7E6               	goto	l3049
 27855                           
 27856                           ; BSR set to: 2
 27857  019F0C  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 27858  019F0E  D00D               	goto	l17687
 27859                           
 27860                           ; BSR set to: 2
 27861  019F10  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27862  019F12  0A80               	xorlw	128
 27863  019F14  0F97               	addlw	151
 27864  019F16  A0D8               	btfss	status,0,c
 27865  019F18  D7AC               	goto	u21380
 27866  019F1A                     l17683:
 27867                           
 27868                           ; BSR set to: 2
 27869  019F1A  90D8               	bcf	status,0,c
 27870  019F1C  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27871  019F1E  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27872  019F20  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27873  019F22  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 27874                           
 27875                           ; BSR set to: 2
 27876  019F24  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 27877  019F26  D7F9               	goto	l17683
 27878  019F28  D00D               	goto	u21450
 27879  019F2A                     l17687:
 27880                           
 27881                           ; BSR set to: 2
 27882  019F2A  0E17               	movlw	23
 27883  019F2C  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 27884  019F2E  D007               	goto	l17695
 27885  019F30  D7A0               	goto	u21380
 27886  019F32                     l17693:
 27887                           
 27888                           ; BSR set to: 2
 27889  019F32  90D8               	bcf	status,0,c
 27890  019F34  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27891  019F36  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27892  019F38  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27893  019F3A  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27894  019F3C  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 27895  019F3E                     l17695:
 27896                           
 27897                           ; BSR set to: 2
 27898  019F3E  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27899  019F40  A4D8               	btfss	status,2,c
 27900  019F42  D7F7               	goto	l17693
 27901  019F44                     u21450:
 27902                           
 27903                           ; BSR set to: 2
 27904  019F44  C20B  F200         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 27905  019F48  C20C  F201         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 27906  019F4C  C20D  F202         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 27907  019F50  C20E  F203         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 27908                           
 27909                           ; BSR set to: 2
 27910  019F54  0012               	return		;funcret
 27911  019F56                     __end_of__tdiv_to_l_:
 27912                           	opt callstack 0
 27913                           
 27914 ;; *************** function __div_to_l_ *****************
 27915 ;; Defined at:
 27916 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 27917 ;; Parameters:    Size  Location     Type
 27918 ;;  f1              4    0[BANK2 ] unsigned long 
 27919 ;;  f2              4    4[BANK2 ] unsigned long 
 27920 ;; Auto vars:     Size  Location     Type
 27921 ;;  quot            4    8[BANK2 ] unsigned long 
 27922 ;;  exp1            1   13[BANK2 ] unsigned char 
 27923 ;;  cntr            1   12[BANK2 ] unsigned char 
 27924 ;; Return value:  Size  Location     Type
 27925 ;;                  4    0[BANK2 ] unsigned long 
 27926 ;; Registers used:
 27927 ;;		wreg, status,2, status,0
 27928 ;; Tracked objects:
 27929 ;;		On entry : 0/0
 27930 ;;		On exit  : 0/0
 27931 ;;		Unchanged: 0/0
 27932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27933 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27934 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27936 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27937 ;;Total ram usage:       14 bytes
 27938 ;; Hardware stack levels used:    1
 27939 ;; Hardware stack levels required when called:   11
 27940 ;; This function calls:
 27941 ;;		Nothing
 27942 ;; This function is called by:
 27943 ;;		__doprnt
 27944 ;; This function uses a non-reentrant model
 27945 ;;
 27946                           
 27947                           	psect	text90
 27948  01A054                     __ptext90:
 27949                           	opt callstack 0
 27950  01A054                     __div_to_l_:
 27951                           	opt callstack 14
 27952                           
 27953                           ; BSR set to: 2
 27954                           ;incstack = 0
 27955  01A054  0102               	movlb	2	; () banked
 27956  01A056  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 27957  01A058  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 27958  01A05A  6F0D               	movwf	__div_to_l_@exp1& (0+255),b
 27959  01A05C  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27960  01A05E  A4D8               	btfss	status,2,c
 27961  01A060  D009               	goto	l17703
 27962  01A062                     u21460:
 27963                           
 27964                           ; BSR set to: 2
 27965  01A062  0E00               	movlw	0
 27966  01A064  6F00               	movwf	?__div_to_l_& (0+255),b
 27967  01A066  0E00               	movlw	0
 27968  01A068  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 27969  01A06A  0E00               	movlw	0
 27970  01A06C  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 27971  01A06E  0E00               	movlw	0
 27972  01A070  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 27973  01A072  0012               	return	
 27974  01A074                     l17703:
 27975                           
 27976                           ; BSR set to: 2
 27977  01A074  3506               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 27978  01A076  3507               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 27979  01A078  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 27980  01A07A  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 27981  01A07C  B4D8               	btfsc	status,2,c
 27982  01A07E  D7F1               	goto	u21460
 27983                           
 27984                           ; BSR set to: 2
 27985  01A080  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 27986                           
 27987                           ; BSR set to: 2
 27988  01A082  0EFF               	movlw	255
 27989  01A084  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 27990  01A086  0EFF               	movlw	255
 27991  01A088  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 27992  01A08A  0EFF               	movlw	255
 27993  01A08C  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 27994  01A08E  0E00               	movlw	0
 27995  01A090  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 27996                           
 27997                           ; BSR set to: 2
 27998  01A092  8F06               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 27999  01A094  0EFF               	movlw	255
 28000  01A096  1704               	andwf	__div_to_l_@f2& (0+255),f,b
 28001  01A098  0EFF               	movlw	255
 28002  01A09A  1705               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 28003  01A09C  0EFF               	movlw	255
 28004  01A09E  1706               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 28005  01A0A0  0E00               	movlw	0
 28006  01A0A2  1707               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 28007                           
 28008                           ; BSR set to: 2
 28009  01A0A4  0E00               	movlw	0
 28010  01A0A6  6F08               	movwf	__div_to_l_@quot& (0+255),b
 28011  01A0A8  0E00               	movlw	0
 28012  01A0AA  6F09               	movwf	(__div_to_l_@quot+1)& (0+255),b
 28013  01A0AC  0E00               	movlw	0
 28014  01A0AE  6F0A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 28015  01A0B0  0E00               	movlw	0
 28016  01A0B2  6F0B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 28017                           
 28018                           ; BSR set to: 2
 28019  01A0B4  0E7F               	movlw	127
 28020  01A0B6  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 28021                           
 28022                           ; BSR set to: 2
 28023  01A0B8  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 28024  01A0BA  0FA0               	addlw	160
 28025  01A0BC  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 28026                           
 28027                           ; BSR set to: 2
 28028  01A0BE  0E20               	movlw	32
 28029  01A0C0  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 28030  01A0C2                     l17723:
 28031                           
 28032                           ; BSR set to: 2
 28033  01A0C2  90D8               	bcf	status,0,c
 28034  01A0C4  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 28035  01A0C6  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 28036  01A0C8  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 28037  01A0CA  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 28038                           
 28039                           ; BSR set to: 2
 28040  01A0CC  5104               	movf	__div_to_l_@f2& (0+255),w,b
 28041  01A0CE  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 28042  01A0D0  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28043  01A0D2  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 28044  01A0D4  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28045  01A0D6  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 28046  01A0D8  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28047  01A0DA  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 28048  01A0DC  A0D8               	btfss	status,0,c
 28049  01A0DE  D009               	goto	l17731
 28050                           
 28051                           ; BSR set to: 2
 28052  01A0E0  5104               	movf	__div_to_l_@f2& (0+255),w,b
 28053  01A0E2  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 28054  01A0E4  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28055  01A0E6  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 28056  01A0E8  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28057  01A0EA  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 28058  01A0EC  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28059  01A0EE  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 28060                           
 28061                           ; BSR set to: 2
 28062  01A0F0  8108               	bsf	__div_to_l_@quot& (0+255),0,b
 28063  01A0F2                     l17731:
 28064                           
 28065                           ; BSR set to: 2
 28066  01A0F2  90D8               	bcf	status,0,c
 28067  01A0F4  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 28068  01A0F6  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 28069  01A0F8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 28070  01A0FA  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 28071                           
 28072                           ; BSR set to: 2
 28073  01A0FC  2F0C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 28074  01A0FE  D7E1               	goto	l17723
 28075                           
 28076                           ; BSR set to: 2
 28077  01A100  AF0D               	btfss	__div_to_l_@exp1& (0+255),7,b
 28078  01A102  D00D               	goto	l17747
 28079                           
 28080                           ; BSR set to: 2
 28081  01A104  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 28082  01A106  0A80               	xorlw	128
 28083  01A108  0F9F               	addlw	159
 28084  01A10A  A0D8               	btfss	status,0,c
 28085  01A10C  D7AA               	goto	u21460
 28086  01A10E                     l17743:
 28087                           
 28088                           ; BSR set to: 2
 28089  01A10E  90D8               	bcf	status,0,c
 28090  01A110  330B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 28091  01A112  330A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 28092  01A114  3309               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 28093  01A116  3308               	rrcf	__div_to_l_@quot& (0+255),f,b
 28094                           
 28095                           ; BSR set to: 2
 28096  01A118  3F0D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 28097  01A11A  D7F9               	goto	l17743
 28098  01A11C  D00D               	goto	u21520
 28099  01A11E                     l17747:
 28100                           
 28101                           ; BSR set to: 2
 28102  01A11E  0E1F               	movlw	31
 28103  01A120  650D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 28104  01A122  D007               	goto	l17755
 28105  01A124  D79E               	goto	u21460
 28106  01A126                     l17753:
 28107                           
 28108                           ; BSR set to: 2
 28109  01A126  90D8               	bcf	status,0,c
 28110  01A128  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 28111  01A12A  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 28112  01A12C  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 28113  01A12E  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 28114  01A130  070D               	decf	__div_to_l_@exp1& (0+255),f,b
 28115  01A132                     l17755:
 28116                           
 28117                           ; BSR set to: 2
 28118  01A132  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 28119  01A134  A4D8               	btfss	status,2,c
 28120  01A136  D7F7               	goto	l17753
 28121  01A138                     u21520:
 28122                           
 28123                           ; BSR set to: 2
 28124  01A138  C208  F200         	movff	__div_to_l_@quot,?__div_to_l_
 28125  01A13C  C209  F201         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 28126  01A140  C20A  F202         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 28127  01A144  C20B  F203         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 28128                           
 28129                           ; BSR set to: 2
 28130  01A148  0012               	return		;funcret
 28131  01A14A                     __end_of__div_to_l_:
 28132                           	opt callstack 0
 28133                           
 28134 ;; *************** function ___wmul *****************
 28135 ;; Defined at:
 28136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 28137 ;; Parameters:    Size  Location     Type
 28138 ;;  multiplier      2    0[BANK2 ] unsigned int 
 28139 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 28140 ;; Auto vars:     Size  Location     Type
 28141 ;;  product         2    4[BANK2 ] unsigned int 
 28142 ;; Return value:  Size  Location     Type
 28143 ;;                  2    0[BANK2 ] unsigned int 
 28144 ;; Registers used:
 28145 ;;		wreg, status,2, status,0, prodl, prodh
 28146 ;; Tracked objects:
 28147 ;;		On entry : 0/0
 28148 ;;		On exit  : 0/0
 28149 ;;		Unchanged: 0/0
 28150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28151 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28152 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28154 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28155 ;;Total ram usage:        6 bytes
 28156 ;; Hardware stack levels used:    1
 28157 ;; Hardware stack levels required when called:   11
 28158 ;; This function calls:
 28159 ;;		Nothing
 28160 ;; This function is called by:
 28161 ;;		_getStringSecondsAsTime
 28162 ;;		_getDaysFromOnTime
 28163 ;;		_getHoursFromOnTime
 28164 ;;		_getMinutesFromOnTime
 28165 ;;		_getSecondsFromOnTime
 28166 ;;		__doprnt
 28167 ;; This function uses a non-reentrant model
 28168 ;;
 28169                           
 28170                           	psect	text91
 28171  01C2B8                     __ptext91:
 28172                           	opt callstack 0
 28173  01C2B8                     ___wmul:
 28174                           	opt callstack 14
 28175                           
 28176                           ; BSR set to: 2
 28177                           ;incstack = 0
 28178  01C2B8  0102               	movlb	2	; () banked
 28179  01C2BA  5100               	movf	___wmul@multiplier& (0+255),w,b
 28180  01C2BC  0302               	mulwf	___wmul@multiplicand& (0+255),b
 28181  01C2BE  CFF3 F204          	movff	prodl,___wmul@product
 28182  01C2C2  CFF4 F205          	movff	prodh,___wmul@product+1
 28183  01C2C6  5100               	movf	___wmul@multiplier& (0+255),w,b
 28184  01C2C8  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28185  01C2CA  50F3               	movf	prodl,w,c
 28186  01C2CC  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 28187  01C2CE  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28188  01C2D0  0302               	mulwf	___wmul@multiplicand& (0+255),b
 28189  01C2D2  50F3               	movf	prodl,w,c
 28190  01C2D4  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 28191                           
 28192                           ; BSR set to: 2
 28193  01C2D6  C204  F200         	movff	___wmul@product,?___wmul
 28194  01C2DA  C205  F201         	movff	___wmul@product+1,?___wmul+1
 28195                           
 28196                           ; BSR set to: 2
 28197  01C2DE  0012               	return		;funcret
 28198  01C2E0                     __end_of___wmul:
 28199                           	opt callstack 0
 28200                           
 28201 ;; *************** function ___llmod *****************
 28202 ;; Defined at:
 28203 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 28204 ;; Parameters:    Size  Location     Type
 28205 ;;  dividend        4   13[BANK2 ] unsigned long 
 28206 ;;  divisor         4   17[BANK2 ] unsigned long 
 28207 ;; Auto vars:     Size  Location     Type
 28208 ;;  counter         1   21[BANK2 ] unsigned char 
 28209 ;; Return value:  Size  Location     Type
 28210 ;;                  4   13[BANK2 ] unsigned long 
 28211 ;; Registers used:
 28212 ;;		wreg, status,2, status,0
 28213 ;; Tracked objects:
 28214 ;;		On entry : 0/0
 28215 ;;		On exit  : 0/0
 28216 ;;		Unchanged: 0/0
 28217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28218 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28219 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28221 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28222 ;;Total ram usage:        9 bytes
 28223 ;; Hardware stack levels used:    1
 28224 ;; Hardware stack levels required when called:   11
 28225 ;; This function calls:
 28226 ;;		Nothing
 28227 ;; This function is called by:
 28228 ;;		__doprnt
 28229 ;; This function uses a non-reentrant model
 28230 ;;
 28231                           
 28232                           	psect	text92
 28233  01B334                     __ptext92:
 28234                           	opt callstack 0
 28235  01B334                     ___llmod:
 28236                           	opt callstack 14
 28237                           
 28238                           ; BSR set to: 2
 28239                           ;incstack = 0
 28240  01B334  0102               	movlb	2	; () banked
 28241  01B336  5111               	movf	___llmod@divisor& (0+255),w,b
 28242  01B338  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 28243  01B33A  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 28244  01B33C  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 28245  01B33E  B4D8               	btfsc	status,2,c
 28246  01B340  D024               	goto	l3126
 28247                           
 28248                           ; BSR set to: 2
 28249  01B342  0E01               	movlw	1
 28250  01B344  6F15               	movwf	___llmod@counter& (0+255),b
 28251  01B346  D006               	goto	l17887
 28252  01B348                     l17885:
 28253                           
 28254                           ; BSR set to: 2
 28255  01B348  90D8               	bcf	status,0,c
 28256  01B34A  3711               	rlcf	___llmod@divisor& (0+255),f,b
 28257  01B34C  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 28258  01B34E  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 28259  01B350  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 28260  01B352  2B15               	incf	___llmod@counter& (0+255),f,b
 28261  01B354                     l17887:
 28262                           
 28263                           ; BSR set to: 2
 28264  01B354  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
 28265  01B356  D7F8               	goto	l17885
 28266  01B358                     u21730:
 28267                           
 28268                           ; BSR set to: 2
 28269  01B358  5111               	movf	___llmod@divisor& (0+255),w,b
 28270  01B35A  5D0D               	subwf	___llmod@dividend& (0+255),w,b
 28271  01B35C  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28272  01B35E  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 28273  01B360  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28274  01B362  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 28275  01B364  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28276  01B366  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 28277  01B368  A0D8               	btfss	status,0,c
 28278  01B36A  D008               	goto	l17893
 28279                           
 28280                           ; BSR set to: 2
 28281  01B36C  5111               	movf	___llmod@divisor& (0+255),w,b
 28282  01B36E  5F0D               	subwf	___llmod@dividend& (0+255),f,b
 28283  01B370  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28284  01B372  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 28285  01B374  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28286  01B376  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 28287  01B378  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28288  01B37A  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 28289  01B37C                     l17893:
 28290                           
 28291                           ; BSR set to: 2
 28292  01B37C  90D8               	bcf	status,0,c
 28293  01B37E  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 28294  01B380  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 28295  01B382  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 28296  01B384  3311               	rrcf	___llmod@divisor& (0+255),f,b
 28297                           
 28298                           ; BSR set to: 2
 28299  01B386  2F15               	decfsz	___llmod@counter& (0+255),f,b
 28300  01B388  D7E7               	goto	u21730
 28301  01B38A                     l3126:
 28302                           
 28303                           ; BSR set to: 2
 28304  01B38A  C20D  F20D         	movff	___llmod@dividend,?___llmod
 28305  01B38E  C20E  F20E         	movff	___llmod@dividend+1,?___llmod+1
 28306  01B392  C20F  F20F         	movff	___llmod@dividend+2,?___llmod+2
 28307  01B396  C210  F210         	movff	___llmod@dividend+3,?___llmod+3
 28308                           
 28309                           ; BSR set to: 2
 28310  01B39A  0012               	return		;funcret
 28311  01B39C                     __end_of___llmod:
 28312                           	opt callstack 0
 28313                           
 28314 ;; *************** function ___lldiv *****************
 28315 ;; Defined at:
 28316 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 28317 ;; Parameters:    Size  Location     Type
 28318 ;;  dividend        4    0[BANK2 ] unsigned long 
 28319 ;;  divisor         4    4[BANK2 ] unsigned long 
 28320 ;; Auto vars:     Size  Location     Type
 28321 ;;  quotient        4    8[BANK2 ] unsigned long 
 28322 ;;  counter         1   12[BANK2 ] unsigned char 
 28323 ;; Return value:  Size  Location     Type
 28324 ;;                  4    0[BANK2 ] unsigned long 
 28325 ;; Registers used:
 28326 ;;		wreg, status,2, status,0
 28327 ;; Tracked objects:
 28328 ;;		On entry : 0/0
 28329 ;;		On exit  : 0/0
 28330 ;;		Unchanged: 0/0
 28331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28332 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28333 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28335 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28336 ;;Total ram usage:       13 bytes
 28337 ;; Hardware stack levels used:    1
 28338 ;; Hardware stack levels required when called:   11
 28339 ;; This function calls:
 28340 ;;		Nothing
 28341 ;; This function is called by:
 28342 ;;		_getStringSecondsAsTime
 28343 ;;		_getYearsFromOnTime
 28344 ;;		_getDaysFromOnTime
 28345 ;;		_getHoursFromOnTime
 28346 ;;		_getMinutesFromOnTime
 28347 ;;		_getSecondsFromOnTime
 28348 ;;		__doprnt
 28349 ;; This function uses a non-reentrant model
 28350 ;;
 28351                           
 28352                           	psect	text93
 28353  01B056                     __ptext93:
 28354                           	opt callstack 0
 28355  01B056                     ___lldiv:
 28356                           	opt callstack 14
 28357                           
 28358                           ; BSR set to: 2
 28359                           ;incstack = 0
 28360  01B056  0E00               	movlw	0
 28361  01B058  0102               	movlb	2	; () banked
 28362  01B05A  6F08               	movwf	___lldiv@quotient& (0+255),b
 28363  01B05C  0E00               	movlw	0
 28364  01B05E  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 28365  01B060  0E00               	movlw	0
 28366  01B062  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 28367  01B064  0E00               	movlw	0
 28368  01B066  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 28369                           
 28370                           ; BSR set to: 2
 28371  01B068  5104               	movf	___lldiv@divisor& (0+255),w,b
 28372  01B06A  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 28373  01B06C  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 28374  01B06E  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 28375  01B070  B4D8               	btfsc	status,2,c
 28376  01B072  D02A               	goto	l2711
 28377                           
 28378                           ; BSR set to: 2
 28379  01B074  0E01               	movlw	1
 28380  01B076  6F0C               	movwf	___lldiv@counter& (0+255),b
 28381  01B078  D006               	goto	l17771
 28382  01B07A                     l17769:
 28383                           
 28384                           ; BSR set to: 2
 28385  01B07A  90D8               	bcf	status,0,c
 28386  01B07C  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 28387  01B07E  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28388  01B080  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28389  01B082  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28390  01B084  2B0C               	incf	___lldiv@counter& (0+255),f,b
 28391  01B086                     l17771:
 28392                           
 28393                           ; BSR set to: 2
 28394  01B086  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28395  01B088  D7F8               	goto	l17769
 28396  01B08A                     u21540:
 28397                           
 28398                           ; BSR set to: 2
 28399  01B08A  90D8               	bcf	status,0,c
 28400  01B08C  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 28401  01B08E  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28402  01B090  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28403  01B092  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28404                           
 28405                           ; BSR set to: 2
 28406  01B094  5104               	movf	___lldiv@divisor& (0+255),w,b
 28407  01B096  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 28408  01B098  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28409  01B09A  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28410  01B09C  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28411  01B09E  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28412  01B0A0  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28413  01B0A2  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28414  01B0A4  A0D8               	btfss	status,0,c
 28415  01B0A6  D009               	goto	l17781
 28416                           
 28417                           ; BSR set to: 2
 28418  01B0A8  5104               	movf	___lldiv@divisor& (0+255),w,b
 28419  01B0AA  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 28420  01B0AC  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28421  01B0AE  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28422  01B0B0  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28423  01B0B2  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28424  01B0B4  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28425  01B0B6  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28426                           
 28427                           ; BSR set to: 2
 28428  01B0B8  8108               	bsf	___lldiv@quotient& (0+255),0,b
 28429  01B0BA                     l17781:
 28430                           
 28431                           ; BSR set to: 2
 28432  01B0BA  90D8               	bcf	status,0,c
 28433  01B0BC  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28434  01B0BE  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28435  01B0C0  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28436  01B0C2  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 28437                           
 28438                           ; BSR set to: 2
 28439  01B0C4  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 28440  01B0C6  D7E1               	goto	u21540
 28441  01B0C8                     l2711:
 28442                           
 28443                           ; BSR set to: 2
 28444  01B0C8  C208  F200         	movff	___lldiv@quotient,?___lldiv
 28445  01B0CC  C209  F201         	movff	___lldiv@quotient+1,?___lldiv+1
 28446  01B0D0  C20A  F202         	movff	___lldiv@quotient+2,?___lldiv+2
 28447  01B0D4  C20B  F203         	movff	___lldiv@quotient+3,?___lldiv+3
 28448                           
 28449                           ; BSR set to: 2
 28450  01B0D8  0012               	return		;funcret
 28451  01B0DA                     __end_of___lldiv:
 28452                           	opt callstack 0
 28453                           
 28454 ;; *************** function ___fltol *****************
 28455 ;; Defined at:
 28456 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 28457 ;; Parameters:    Size  Location     Type
 28458 ;;  f1              4   48[BANK2 ] unsigned long 
 28459 ;; Auto vars:     Size  Location     Type
 28460 ;;  exp1            1   57[BANK2 ] unsigned char 
 28461 ;;  sign1           1   56[BANK2 ] unsigned char 
 28462 ;; Return value:  Size  Location     Type
 28463 ;;                  4   48[BANK2 ] long 
 28464 ;; Registers used:
 28465 ;;		wreg, status,2, status,0
 28466 ;; Tracked objects:
 28467 ;;		On entry : 0/0
 28468 ;;		On exit  : 0/0
 28469 ;;		Unchanged: 0/0
 28470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28471 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28472 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28473 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28474 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28475 ;;Total ram usage:       10 bytes
 28476 ;; Hardware stack levels used:    1
 28477 ;; Hardware stack levels required when called:   11
 28478 ;; This function calls:
 28479 ;;		Nothing
 28480 ;; This function is called by:
 28481 ;;		_floatToEngineeringFormat
 28482 ;;		__doprnt
 28483 ;;		_ftoa
 28484 ;; This function uses a non-reentrant model
 28485 ;;
 28486                           
 28487                           	psect	text94
 28488  01A83A                     __ptext94:
 28489                           	opt callstack 0
 28490  01A83A                     ___fltol:
 28491                           	opt callstack 14
 28492                           
 28493                           ; BSR set to: 2
 28494                           ;incstack = 0
 28495  01A83A  0102               	movlb	2	; () banked
 28496  01A83C  3532               	rlcf	(___fltol@f1+2)& (0+255),w,b
 28497  01A83E  3533               	rlcf	(___fltol@f1+3)& (0+255),w,b
 28498  01A840  6F39               	movwf	___fltol@exp1& (0+255),b
 28499  01A842  5139               	movf	___fltol@exp1& (0+255),w,b
 28500  01A844  A4D8               	btfss	status,2,c
 28501  01A846  D009               	goto	l17843
 28502  01A848                     u21650:
 28503                           
 28504                           ; BSR set to: 2
 28505  01A848  0E00               	movlw	0
 28506  01A84A  6F30               	movwf	?___fltol& (0+255),b
 28507  01A84C  0E00               	movlw	0
 28508  01A84E  6F31               	movwf	(?___fltol+1)& (0+255),b
 28509  01A850  0E00               	movlw	0
 28510  01A852  6F32               	movwf	(?___fltol+2)& (0+255),b
 28511  01A854  0E00               	movlw	0
 28512  01A856  6F33               	movwf	(?___fltol+3)& (0+255),b
 28513  01A858  0012               	return	
 28514  01A85A                     l17843:
 28515                           
 28516                           ; BSR set to: 2
 28517  01A85A  C230  F234         	movff	___fltol@f1,??___fltol
 28518  01A85E  C231  F235         	movff	___fltol@f1+1,??___fltol+1
 28519  01A862  C232  F236         	movff	___fltol@f1+2,??___fltol+2
 28520  01A866  C233  F237         	movff	___fltol@f1+3,??___fltol+3
 28521  01A86A  0E20               	movlw	32
 28522  01A86C  D005               	goto	u21660
 28523  01A86E                     u21665:
 28524  01A86E  90D8               	bcf	status,0,c
 28525  01A870  3337               	rrcf	(??___fltol+3)& (0+255),f,b
 28526  01A872  3336               	rrcf	(??___fltol+2)& (0+255),f,b
 28527  01A874  3335               	rrcf	(??___fltol+1)& (0+255),f,b
 28528  01A876  3334               	rrcf	??___fltol& (0+255),f,b
 28529  01A878                     u21660:
 28530  01A878  2EE8               	decfsz	wreg,f,c
 28531  01A87A  D7F9               	goto	u21665
 28532  01A87C  5134               	movf	??___fltol& (0+255),w,b
 28533  01A87E  6F38               	movwf	___fltol@sign1& (0+255),b
 28534                           
 28535                           ; BSR set to: 2
 28536  01A880  8F32               	bsf	(___fltol@f1+2)& (0+255),7,b
 28537                           
 28538                           ; BSR set to: 2
 28539  01A882  0EFF               	movlw	255
 28540  01A884  1730               	andwf	___fltol@f1& (0+255),f,b
 28541  01A886  0EFF               	movlw	255
 28542  01A888  1731               	andwf	(___fltol@f1+1)& (0+255),f,b
 28543  01A88A  0EFF               	movlw	255
 28544  01A88C  1732               	andwf	(___fltol@f1+2)& (0+255),f,b
 28545  01A88E  0E00               	movlw	0
 28546  01A890  1733               	andwf	(___fltol@f1+3)& (0+255),f,b
 28547                           
 28548                           ; BSR set to: 2
 28549  01A892  0E96               	movlw	150
 28550  01A894  5F39               	subwf	___fltol@exp1& (0+255),f,b
 28551                           
 28552                           ; BSR set to: 2
 28553  01A896  AF39               	btfss	___fltol@exp1& (0+255),7,b
 28554  01A898  D00D               	goto	l17863
 28555                           
 28556                           ; BSR set to: 2
 28557  01A89A  5139               	movf	___fltol@exp1& (0+255),w,b
 28558  01A89C  0A80               	xorlw	128
 28559  01A89E  0F97               	addlw	151
 28560  01A8A0  A0D8               	btfss	status,0,c
 28561  01A8A2  D7D2               	goto	u21650
 28562  01A8A4                     l17859:
 28563                           
 28564                           ; BSR set to: 2
 28565  01A8A4  90D8               	bcf	status,0,c
 28566  01A8A6  3333               	rrcf	(___fltol@f1+3)& (0+255),f,b
 28567  01A8A8  3332               	rrcf	(___fltol@f1+2)& (0+255),f,b
 28568  01A8AA  3331               	rrcf	(___fltol@f1+1)& (0+255),f,b
 28569  01A8AC  3330               	rrcf	___fltol@f1& (0+255),f,b
 28570                           
 28571                           ; BSR set to: 2
 28572  01A8AE  3F39               	incfsz	___fltol@exp1& (0+255),f,b
 28573  01A8B0  D7F9               	goto	l17859
 28574  01A8B2  D00D               	goto	u21700
 28575  01A8B4                     l17863:
 28576                           
 28577                           ; BSR set to: 2
 28578  01A8B4  0E1F               	movlw	31
 28579  01A8B6  6539               	cpfsgt	___fltol@exp1& (0+255),b
 28580  01A8B8  D007               	goto	l17871
 28581  01A8BA  D7C6               	goto	u21650
 28582  01A8BC                     l17869:
 28583                           
 28584                           ; BSR set to: 2
 28585  01A8BC  90D8               	bcf	status,0,c
 28586  01A8BE  3730               	rlcf	___fltol@f1& (0+255),f,b
 28587  01A8C0  3731               	rlcf	(___fltol@f1+1)& (0+255),f,b
 28588  01A8C2  3732               	rlcf	(___fltol@f1+2)& (0+255),f,b
 28589  01A8C4  3733               	rlcf	(___fltol@f1+3)& (0+255),f,b
 28590  01A8C6  0739               	decf	___fltol@exp1& (0+255),f,b
 28591  01A8C8                     l17871:
 28592                           
 28593                           ; BSR set to: 2
 28594  01A8C8  5139               	movf	___fltol@exp1& (0+255),w,b
 28595  01A8CA  A4D8               	btfss	status,2,c
 28596  01A8CC  D7F7               	goto	l17869
 28597  01A8CE                     u21700:
 28598                           
 28599                           ; BSR set to: 2
 28600  01A8CE  5138               	movf	___fltol@sign1& (0+255),w,b
 28601  01A8D0  B4D8               	btfsc	status,2,c
 28602  01A8D2  D008               	goto	l17877
 28603                           
 28604                           ; BSR set to: 2
 28605  01A8D4  1F33               	comf	(___fltol@f1+3)& (0+255),f,b
 28606  01A8D6  1F32               	comf	(___fltol@f1+2)& (0+255),f,b
 28607  01A8D8  1F31               	comf	(___fltol@f1+1)& (0+255),f,b
 28608  01A8DA  6D30               	negf	___fltol@f1& (0+255),b
 28609  01A8DC  0E00               	movlw	0
 28610  01A8DE  2331               	addwfc	(___fltol@f1+1)& (0+255),f,b
 28611  01A8E0  2332               	addwfc	(___fltol@f1+2)& (0+255),f,b
 28612  01A8E2  2333               	addwfc	(___fltol@f1+3)& (0+255),f,b
 28613  01A8E4                     l17877:
 28614                           
 28615                           ; BSR set to: 2
 28616  01A8E4  C230  F230         	movff	___fltol@f1,?___fltol
 28617  01A8E8  C231  F231         	movff	___fltol@f1+1,?___fltol+1
 28618  01A8EC  C232  F232         	movff	___fltol@f1+2,?___fltol+2
 28619  01A8F0  C233  F233         	movff	___fltol@f1+3,?___fltol+3
 28620                           
 28621                           ; BSR set to: 2
 28622  01A8F4  0012               	return		;funcret
 28623  01A8F6                     __end_of___fltol:
 28624                           	opt callstack 0
 28625                           
 28626 ;; *************** function ___flsub *****************
 28627 ;; Defined at:
 28628 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28629 ;; Parameters:    Size  Location     Type
 28630 ;;  b               4   76[BANK2 ] long 
 28631 ;;  a               4   80[BANK2 ] long 
 28632 ;; Auto vars:     Size  Location     Type
 28633 ;;		None
 28634 ;; Return value:  Size  Location     Type
 28635 ;;                  4   76[BANK2 ] long 
 28636 ;; Registers used:
 28637 ;;		wreg, status,2, status,0, cstack
 28638 ;; Tracked objects:
 28639 ;;		On entry : 0/0
 28640 ;;		On exit  : 0/0
 28641 ;;		Unchanged: 0/0
 28642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28643 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28646 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28647 ;;Total ram usage:        8 bytes
 28648 ;; Hardware stack levels used:    1
 28649 ;; Hardware stack levels required when called:   12
 28650 ;; This function calls:
 28651 ;;		___fladd
 28652 ;; This function is called by:
 28653 ;;		__doprnt
 28654 ;;		_ftoa
 28655 ;; This function uses a non-reentrant model
 28656 ;;
 28657                           
 28658                           	psect	text95
 28659  01BAB8                     __ptext95:
 28660                           	opt callstack 0
 28661  01BAB8                     ___flsub:
 28662                           	opt callstack 13
 28663                           
 28664                           ; BSR set to: 2
 28665                           ;incstack = 0
 28666  01BAB8  0E00               	movlw	0
 28667  01BABA  0102               	movlb	2	; () banked
 28668  01BABC  1B50               	xorwf	___flsub@a& (0+255),f,b
 28669  01BABE  0E00               	movlw	0
 28670  01BAC0  1B51               	xorwf	(___flsub@a+1)& (0+255),f,b
 28671  01BAC2  0E00               	movlw	0
 28672  01BAC4  1B52               	xorwf	(___flsub@a+2)& (0+255),f,b
 28673  01BAC6  0E80               	movlw	128
 28674  01BAC8  1B53               	xorwf	(___flsub@a+3)& (0+255),f,b
 28675                           
 28676                           ; BSR set to: 2
 28677  01BACA  C24C  F234         	movff	___flsub@b,___fladd@b
 28678  01BACE  C24D  F235         	movff	___flsub@b+1,___fladd@b+1
 28679  01BAD2  C24E  F236         	movff	___flsub@b+2,___fladd@b+2
 28680  01BAD6  C24F  F237         	movff	___flsub@b+3,___fladd@b+3
 28681  01BADA  C250  F238         	movff	___flsub@a,___fladd@a
 28682  01BADE  C251  F239         	movff	___flsub@a+1,___fladd@a+1
 28683  01BAE2  C252  F23A         	movff	___flsub@a+2,___fladd@a+2
 28684  01BAE6  C253  F23B         	movff	___flsub@a+3,___fladd@a+3
 28685  01BAEA  EC77  F0B8         	call	___fladd	;wreg free
 28686  01BAEE  C234  F24C         	movff	?___fladd,?___flsub
 28687  01BAF2  C235  F24D         	movff	?___fladd+1,?___flsub+1
 28688  01BAF6  C236  F24E         	movff	?___fladd+2,?___flsub+2
 28689  01BAFA  C237  F24F         	movff	?___fladd+3,?___flsub+3
 28690  01BAFE  0012               	return		;funcret
 28691  01BB00                     __end_of___flsub:
 28692                           	opt callstack 0
 28693                           
 28694 ;; *************** function ___fladd *****************
 28695 ;; Defined at:
 28696 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28697 ;; Parameters:    Size  Location     Type
 28698 ;;  b               4   52[BANK2 ] long 
 28699 ;;  a               4   56[BANK2 ] long 
 28700 ;; Auto vars:     Size  Location     Type
 28701 ;;  grs             1   67[BANK2 ] unsigned char 
 28702 ;;  bexp            1   66[BANK2 ] unsigned char 
 28703 ;;  aexp            1   65[BANK2 ] unsigned char 
 28704 ;;  signs           1   64[BANK2 ] unsigned char 
 28705 ;; Return value:  Size  Location     Type
 28706 ;;                  4   52[BANK2 ] unsigned char 
 28707 ;; Registers used:
 28708 ;;		wreg, status,2, status,0
 28709 ;; Tracked objects:
 28710 ;;		On entry : 0/0
 28711 ;;		On exit  : 0/0
 28712 ;;		Unchanged: 0/0
 28713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28714 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28715 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28716 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28717 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28718 ;;Total ram usage:       16 bytes
 28719 ;; Hardware stack levels used:    1
 28720 ;; Hardware stack levels required when called:   11
 28721 ;; This function calls:
 28722 ;;		Nothing
 28723 ;; This function is called by:
 28724 ;;		__doprnt
 28725 ;;		___flsub
 28726 ;; This function uses a non-reentrant model
 28727 ;;
 28728                           
 28729                           	psect	text96
 28730  0170EE                     __ptext96:
 28731                           	opt callstack 0
 28732  0170EE                     ___fladd:
 28733                           	opt callstack 13
 28734                           
 28735                           ;incstack = 0
 28736  0170EE  0102               	movlb	2	; () banked
 28737  0170F0  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28738  0170F2  0B80               	andlw	128
 28739  0170F4  6F40               	movwf	___fladd@signs& (0+255),b
 28740  0170F6  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28741  0170F8  2537               	addwf	(___fladd@b+3)& (0+255),w,b
 28742  0170FA  6F42               	movwf	___fladd@bexp& (0+255),b
 28743                           
 28744                           ; BSR set to: 2
 28745  0170FC  BF36               	btfsc	(___fladd@b+2)& (0+255),7,b
 28746                           
 28747                           ; BSR set to: 2
 28748  0170FE  8142               	bsf	___fladd@bexp& (0+255),0,b
 28749                           
 28750                           ; BSR set to: 2
 28751  017100  5142               	movf	___fladd@bexp& (0+255),w,b
 28752  017102  B4D8               	btfsc	status,2,c
 28753  017104  D00D               	goto	l17133
 28754                           
 28755                           ; BSR set to: 2
 28756  017106  2942               	incf	___fladd@bexp& (0+255),w,b
 28757  017108  A4D8               	btfss	status,2,c
 28758  01710A  D008               	goto	l17129
 28759                           
 28760                           ; BSR set to: 2
 28761  01710C  0E00               	movlw	0
 28762  01710E  6F34               	movwf	___fladd@b& (0+255),b
 28763  017110  0E00               	movlw	0
 28764  017112  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28765  017114  0E00               	movlw	0
 28766  017116  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28767  017118  0E00               	movlw	0
 28768  01711A  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28769  01711C                     l17129:
 28770                           
 28771                           ; BSR set to: 2
 28772  01711C  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 28773  01711E  D006               	goto	L17
 28774  017120                     l17133:
 28775                           
 28776                           ; BSR set to: 2
 28777  017120  0E00               	movlw	0
 28778  017122  6F34               	movwf	___fladd@b& (0+255),b
 28779  017124  0E00               	movlw	0
 28780  017126  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28781  017128  0E00               	movlw	0
 28782  01712A  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28783  01712C                     L17:
 28784  01712C  0E00               	movlw	0
 28785  01712E  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28786                           
 28787                           ; BSR set to: 2
 28788  017130  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28789  017132  0B80               	andlw	128
 28790  017134  6F41               	movwf	___fladd@aexp& (0+255),b
 28791                           
 28792                           ; BSR set to: 2
 28793  017136  5140               	movf	___fladd@signs& (0+255),w,b
 28794  017138  1941               	xorwf	___fladd@aexp& (0+255),w,b
 28795  01713A  A4D8               	btfss	status,2,c
 28796                           
 28797                           ; BSR set to: 2
 28798  01713C  8D40               	bsf	___fladd@signs& (0+255),6,b
 28799                           
 28800                           ; BSR set to: 2
 28801  01713E  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28802  017140  253B               	addwf	(___fladd@a+3)& (0+255),w,b
 28803  017142  6F41               	movwf	___fladd@aexp& (0+255),b
 28804                           
 28805                           ; BSR set to: 2
 28806  017144  BF3A               	btfsc	(___fladd@a+2)& (0+255),7,b
 28807                           
 28808                           ; BSR set to: 2
 28809  017146  8141               	bsf	___fladd@aexp& (0+255),0,b
 28810                           
 28811                           ; BSR set to: 2
 28812  017148  5141               	movf	___fladd@aexp& (0+255),w,b
 28813  01714A  B4D8               	btfsc	status,2,c
 28814  01714C  D00D               	goto	l17157
 28815                           
 28816                           ; BSR set to: 2
 28817  01714E  2941               	incf	___fladd@aexp& (0+255),w,b
 28818  017150  A4D8               	btfss	status,2,c
 28819  017152  D008               	goto	l17153
 28820                           
 28821                           ; BSR set to: 2
 28822  017154  0E00               	movlw	0
 28823  017156  6F38               	movwf	___fladd@a& (0+255),b
 28824  017158  0E00               	movlw	0
 28825  01715A  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28826  01715C  0E00               	movlw	0
 28827  01715E  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28828  017160  0E00               	movlw	0
 28829  017162  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28830  017164                     l17153:
 28831                           
 28832                           ; BSR set to: 2
 28833  017164  8F3A               	bsf	(___fladd@a+2)& (0+255),7,b
 28834  017166  D006               	goto	L18
 28835  017168                     l17157:
 28836                           
 28837                           ; BSR set to: 2
 28838  017168  0E00               	movlw	0
 28839  01716A  6F38               	movwf	___fladd@a& (0+255),b
 28840  01716C  0E00               	movlw	0
 28841  01716E  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28842  017170  0E00               	movlw	0
 28843  017172  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28844  017174                     L18:
 28845  017174  0E00               	movlw	0
 28846  017176  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28847                           
 28848                           ; BSR set to: 2
 28849  017178  5142               	movf	___fladd@bexp& (0+255),w,b
 28850  01717A  5D41               	subwf	___fladd@aexp& (0+255),w,b
 28851  01717C  B0D8               	btfsc	status,0,c
 28852  01717E  D022               	goto	l17195
 28853                           
 28854                           ; BSR set to: 2
 28855  017180  AD40               	btfss	___fladd@signs& (0+255),6,b
 28856  017182  D002               	goto	l17165
 28857                           
 28858                           ; BSR set to: 2
 28859  017184  0E80               	movlw	128
 28860  017186  1B40               	xorwf	___fladd@signs& (0+255),f,b
 28861  017188                     l17165:
 28862                           
 28863                           ; BSR set to: 2
 28864  017188  C242  F243         	movff	___fladd@bexp,___fladd@grs
 28865                           
 28866                           ; BSR set to: 2
 28867  01718C  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28868                           
 28869                           ; BSR set to: 2
 28870  017190  C243  F241         	movff	___fladd@grs,___fladd@aexp
 28871                           
 28872                           ; BSR set to: 2
 28873  017194  C234  F243         	movff	___fladd@b,___fladd@grs
 28874                           
 28875                           ; BSR set to: 2
 28876  017198  C238  F234         	movff	___fladd@a,___fladd@b
 28877                           
 28878                           ; BSR set to: 2
 28879  01719C  C243  F238         	movff	___fladd@grs,___fladd@a
 28880                           
 28881                           ; BSR set to: 2
 28882  0171A0  C235  F243         	movff	___fladd@b+1,___fladd@grs
 28883                           
 28884                           ; BSR set to: 2
 28885  0171A4  C239  F235         	movff	___fladd@a+1,___fladd@b+1
 28886                           
 28887                           ; BSR set to: 2
 28888  0171A8  C243  F239         	movff	___fladd@grs,___fladd@a+1
 28889                           
 28890                           ; BSR set to: 2
 28891  0171AC  C236  F243         	movff	___fladd@b+2,___fladd@grs
 28892                           
 28893                           ; BSR set to: 2
 28894  0171B0  C23A  F236         	movff	___fladd@a+2,___fladd@b+2
 28895                           
 28896                           ; BSR set to: 2
 28897  0171B4  C243  F23A         	movff	___fladd@grs,___fladd@a+2
 28898                           
 28899                           ; BSR set to: 2
 28900  0171B8  C237  F243         	movff	___fladd@b+3,___fladd@grs
 28901                           
 28902                           ; BSR set to: 2
 28903  0171BC  C23B  F237         	movff	___fladd@a+3,___fladd@b+3
 28904                           
 28905                           ; BSR set to: 2
 28906  0171C0  C243  F23B         	movff	___fladd@grs,___fladd@a+3
 28907  0171C4                     l17195:
 28908                           
 28909                           ; BSR set to: 2
 28910  0171C4  0E00               	movlw	0
 28911  0171C6  6F43               	movwf	___fladd@grs& (0+255),b
 28912                           
 28913                           ; BSR set to: 2
 28914  0171C8  5142               	movf	___fladd@bexp& (0+255),w,b
 28915  0171CA  C241  F23C         	movff	___fladd@aexp,??___fladd
 28916  0171CE  6B3D               	clrf	(??___fladd+1)& (0+255),b
 28917  0171D0  5F3C               	subwf	??___fladd& (0+255),f,b
 28918  0171D2  0E00               	movlw	0
 28919  0171D4  5B3D               	subwfb	(??___fladd+1)& (0+255),f,b
 28920  0171D6  BF3D               	btfsc	(??___fladd+1)& (0+255),7,b
 28921  0171D8  D02C               	goto	l3235
 28922  0171DA  513D               	movf	(??___fladd+1)& (0+255),w,b
 28923  0171DC  E104               	bnz	u20600
 28924  0171DE  0E1A               	movlw	26
 28925  0171E0  5D3C               	subwf	??___fladd& (0+255),w,b
 28926  0171E2  A0D8               	btfss	status,0,c
 28927  0171E4  D026               	goto	l3235
 28928  0171E6                     u20600:
 28929                           
 28930                           ; BSR set to: 2
 28931  0171E6  5134               	movf	___fladd@b& (0+255),w,b
 28932  0171E8  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 28933  0171EA  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 28934  0171EC  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 28935  0171EE  B4D8               	btfsc	status,2,c
 28936  0171F0  D002               	goto	u20610
 28937  0171F2  0E01               	movlw	1
 28938  0171F4  D001               	goto	u20620
 28939  0171F6                     u20610:
 28940  0171F6  0E00               	movlw	0
 28941  0171F8                     u20620:
 28942  0171F8  6F43               	movwf	___fladd@grs& (0+255),b
 28943                           
 28944                           ; BSR set to: 2
 28945  0171FA  0E00               	movlw	0
 28946  0171FC  6F34               	movwf	___fladd@b& (0+255),b
 28947  0171FE  0E00               	movlw	0
 28948  017200  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28949  017202  0E00               	movlw	0
 28950  017204  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28951  017206  0E00               	movlw	0
 28952  017208  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28953                           
 28954                           ; BSR set to: 2
 28955  01720A  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28956  01720E  D015               	goto	u20650
 28957  017210                     l3236:
 28958                           
 28959                           ; BSR set to: 2
 28960  017210  A143               	btfss	___fladd@grs& (0+255),0,b
 28961  017212  D005               	goto	l17207
 28962                           
 28963                           ; BSR set to: 2
 28964  017214  90D8               	bcf	status,0,c
 28965  017216  3143               	rrcf	___fladd@grs& (0+255),w,b
 28966  017218  0901               	iorlw	1
 28967  01721A  6F43               	movwf	___fladd@grs& (0+255),b
 28968  01721C  D002               	goto	l17209
 28969  01721E                     l17207:
 28970                           
 28971                           ; BSR set to: 2
 28972  01721E  90D8               	bcf	status,0,c
 28973  017220  3343               	rrcf	___fladd@grs& (0+255),f,b
 28974  017222                     l17209:
 28975                           
 28976                           ; BSR set to: 2
 28977  017222  B134               	btfsc	___fladd@b& (0+255),0,b
 28978                           
 28979                           ; BSR set to: 2
 28980  017224  8F43               	bsf	___fladd@grs& (0+255),7,b
 28981                           
 28982                           ; BSR set to: 2
 28983  017226  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 28984  017228  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 28985  01722A  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 28986  01722C  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 28987  01722E  3334               	rrcf	___fladd@b& (0+255),f,b
 28988                           
 28989                           ; BSR set to: 2
 28990  017230  2B42               	incf	___fladd@bexp& (0+255),f,b
 28991  017232                     l3235:
 28992                           
 28993                           ; BSR set to: 2
 28994  017232  5141               	movf	___fladd@aexp& (0+255),w,b
 28995  017234  5D42               	subwf	___fladd@bexp& (0+255),w,b
 28996  017236  A0D8               	btfss	status,0,c
 28997  017238  D7EB               	goto	l3236
 28998  01723A                     u20650:
 28999                           
 29000                           ; BSR set to: 2
 29001  01723A  BD40               	btfsc	___fladd@signs& (0+255),6,b
 29002  01723C  D028               	goto	l17241
 29003                           
 29004                           ; BSR set to: 2
 29005  01723E  5142               	movf	___fladd@bexp& (0+255),w,b
 29006  017240  A4D8               	btfss	status,2,c
 29007  017242  D009               	goto	l17223
 29008                           
 29009                           ; BSR set to: 2
 29010  017244  0E00               	movlw	0
 29011  017246  6F34               	movwf	?___fladd& (0+255),b
 29012  017248  0E00               	movlw	0
 29013  01724A  6F35               	movwf	(?___fladd+1)& (0+255),b
 29014  01724C  0E00               	movlw	0
 29015  01724E  6F36               	movwf	(?___fladd+2)& (0+255),b
 29016  017250  0E00               	movlw	0
 29017  017252  6F37               	movwf	(?___fladd+3)& (0+255),b
 29018  017254  0012               	return	
 29019  017256                     l17223:
 29020                           
 29021                           ; BSR set to: 2
 29022  017256  5138               	movf	___fladd@a& (0+255),w,b
 29023  017258  2734               	addwf	___fladd@b& (0+255),f,b
 29024  01725A  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29025  01725C  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29026  01725E  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29027  017260  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29028  017262  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29029  017264  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29030                           
 29031                           ; BSR set to: 2
 29032  017266  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 29033  017268  D071               	goto	u20780
 29034                           
 29035                           ; BSR set to: 2
 29036  01726A  A143               	btfss	___fladd@grs& (0+255),0,b
 29037  01726C  D005               	goto	l17231
 29038                           
 29039                           ; BSR set to: 2
 29040  01726E  90D8               	bcf	status,0,c
 29041  017270  3143               	rrcf	___fladd@grs& (0+255),w,b
 29042  017272  0901               	iorlw	1
 29043  017274  6F43               	movwf	___fladd@grs& (0+255),b
 29044  017276  D002               	goto	l17233
 29045  017278                     l17231:
 29046                           
 29047                           ; BSR set to: 2
 29048  017278  90D8               	bcf	status,0,c
 29049  01727A  3343               	rrcf	___fladd@grs& (0+255),f,b
 29050  01727C                     l17233:
 29051                           
 29052                           ; BSR set to: 2
 29053  01727C  B134               	btfsc	___fladd@b& (0+255),0,b
 29054                           
 29055                           ; BSR set to: 2
 29056  01727E  8F43               	bsf	___fladd@grs& (0+255),7,b
 29057                           
 29058                           ; BSR set to: 2
 29059  017280  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 29060  017282  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 29061  017284  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 29062  017286  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 29063  017288  3334               	rrcf	___fladd@b& (0+255),f,b
 29064                           
 29065                           ; BSR set to: 2
 29066  01728A  2B42               	incf	___fladd@bexp& (0+255),f,b
 29067  01728C  D05F               	goto	u20780
 29068  01728E                     l17241:
 29069                           
 29070                           ; BSR set to: 2
 29071  01728E  5138               	movf	___fladd@a& (0+255),w,b
 29072  017290  5D34               	subwf	___fladd@b& (0+255),w,b
 29073  017292  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29074  017294  5935               	subwfb	(___fladd@b+1)& (0+255),w,b
 29075  017296  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29076  017298  5936               	subwfb	(___fladd@b+2)& (0+255),w,b
 29077  01729A  5137               	movf	(___fladd@b+3)& (0+255),w,b
 29078  01729C  0A80               	xorlw	128
 29079  01729E  6F3C               	movwf	??___fladd& (0+255),b
 29080  0172A0  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29081  0172A2  0A80               	xorlw	128
 29082  0172A4  593C               	subwfb	??___fladd& (0+255),w,b
 29083  0172A6  B0D8               	btfsc	status,0,c
 29084  0172A8  D025               	goto	l17251
 29085                           
 29086                           ; BSR set to: 2
 29087  0172AA  5134               	movf	___fladd@b& (0+255),w,b
 29088  0172AC  5D38               	subwf	___fladd@a& (0+255),w,b
 29089  0172AE  6F3C               	movwf	??___fladd& (0+255),b
 29090  0172B0  5135               	movf	(___fladd@b+1)& (0+255),w,b
 29091  0172B2  5939               	subwfb	(___fladd@a+1)& (0+255),w,b
 29092  0172B4  6F3D               	movwf	(??___fladd+1)& (0+255),b
 29093  0172B6  5136               	movf	(___fladd@b+2)& (0+255),w,b
 29094  0172B8  593A               	subwfb	(___fladd@a+2)& (0+255),w,b
 29095  0172BA  6F3E               	movwf	(??___fladd+2)& (0+255),b
 29096  0172BC  5137               	movf	(___fladd@b+3)& (0+255),w,b
 29097  0172BE  593B               	subwfb	(___fladd@a+3)& (0+255),w,b
 29098  0172C0  6F3F               	movwf	(??___fladd+3)& (0+255),b
 29099  0172C2  0EFF               	movlw	255
 29100  0172C4  253C               	addwf	??___fladd& (0+255),w,b
 29101  0172C6  6F34               	movwf	___fladd@b& (0+255),b
 29102  0172C8  0EFF               	movlw	255
 29103  0172CA  213D               	addwfc	(??___fladd+1)& (0+255),w,b
 29104  0172CC  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29105  0172CE  0EFF               	movlw	255
 29106  0172D0  213E               	addwfc	(??___fladd+2)& (0+255),w,b
 29107  0172D2  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29108  0172D4  0EFF               	movlw	255
 29109  0172D6  213F               	addwfc	(??___fladd+3)& (0+255),w,b
 29110  0172D8  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29111  0172DA  0E80               	movlw	128
 29112  0172DC  1B40               	xorwf	___fladd@signs& (0+255),f,b
 29113                           
 29114                           ; BSR set to: 2
 29115  0172DE  6D43               	negf	___fladd@grs& (0+255),b
 29116                           
 29117                           ; BSR set to: 2
 29118  0172E0  5143               	movf	___fladd@grs& (0+255),w,b
 29119  0172E2  A4D8               	btfss	status,2,c
 29120  0172E4  D00F               	goto	l3251
 29121                           
 29122                           ; BSR set to: 2
 29123  0172E6  0E01               	movlw	1
 29124  0172E8  2734               	addwf	___fladd@b& (0+255),f,b
 29125  0172EA  0E00               	movlw	0
 29126  0172EC  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29127  0172EE  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29128  0172F0  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29129  0172F2  D008               	goto	l3251
 29130  0172F4                     l17251:
 29131                           
 29132                           ; BSR set to: 2
 29133  0172F4  5138               	movf	___fladd@a& (0+255),w,b
 29134  0172F6  5F34               	subwf	___fladd@b& (0+255),f,b
 29135  0172F8  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29136  0172FA  5B35               	subwfb	(___fladd@b+1)& (0+255),f,b
 29137  0172FC  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29138  0172FE  5B36               	subwfb	(___fladd@b+2)& (0+255),f,b
 29139  017300  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29140  017302  5B37               	subwfb	(___fladd@b+3)& (0+255),f,b
 29141  017304                     l3251:
 29142                           
 29143                           ; BSR set to: 2
 29144  017304  5134               	movf	___fladd@b& (0+255),w,b
 29145  017306  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 29146  017308  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 29147  01730A  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 29148  01730C  A4D8               	btfss	status,2,c
 29149  01730E  D01C               	goto	l17275
 29150                           
 29151                           ; BSR set to: 2
 29152  017310  5143               	movf	___fladd@grs& (0+255),w,b
 29153  017312  A4D8               	btfss	status,2,c
 29154  017314  D019               	goto	l17275
 29155                           
 29156                           ; BSR set to: 2
 29157  017316  0E00               	movlw	0
 29158  017318  6F34               	movwf	?___fladd& (0+255),b
 29159  01731A  0E00               	movlw	0
 29160  01731C  6F35               	movwf	(?___fladd+1)& (0+255),b
 29161  01731E  0E00               	movlw	0
 29162  017320  6F36               	movwf	(?___fladd+2)& (0+255),b
 29163  017322  0E00               	movlw	0
 29164  017324  6F37               	movwf	(?___fladd+3)& (0+255),b
 29165  017326  0012               	return	
 29166  017328                     l17259:
 29167                           
 29168                           ; BSR set to: 2
 29169  017328  90D8               	bcf	status,0,c
 29170  01732A  3734               	rlcf	___fladd@b& (0+255),f,b
 29171  01732C  3735               	rlcf	(___fladd@b+1)& (0+255),f,b
 29172  01732E  3736               	rlcf	(___fladd@b+2)& (0+255),f,b
 29173  017330  3737               	rlcf	(___fladd@b+3)& (0+255),f,b
 29174                           
 29175                           ; BSR set to: 2
 29176  017332  BF43               	btfsc	___fladd@grs& (0+255),7,b
 29177                           
 29178                           ; BSR set to: 2
 29179  017334  8134               	bsf	___fladd@b& (0+255),0,b
 29180                           
 29181                           ; BSR set to: 2
 29182  017336  A143               	btfss	___fladd@grs& (0+255),0,b
 29183  017338  D002               	goto	l17269
 29184                           
 29185                           ; BSR set to: 2
 29186  01733A  80D8               	bsf	status,0,c
 29187  01733C  D001               	goto	L19
 29188  01733E                     l17269:
 29189                           
 29190                           ; BSR set to: 2
 29191  01733E  90D8               	bcf	status,0,c
 29192  017340                     L19:
 29193  017340  3743               	rlcf	___fladd@grs& (0+255),f,b
 29194                           
 29195                           ; BSR set to: 2
 29196  017342  5142               	movf	___fladd@bexp& (0+255),w,b
 29197  017344  A4D8               	btfss	status,2,c
 29198                           
 29199                           ; BSR set to: 2
 29200  017346  0742               	decf	___fladd@bexp& (0+255),f,b
 29201  017348                     l17275:
 29202                           
 29203                           ; BSR set to: 2
 29204  017348  AF36               	btfss	(___fladd@b+2)& (0+255),7,b
 29205  01734A  D7EE               	goto	l17259
 29206  01734C                     u20780:
 29207                           
 29208                           ; BSR set to: 2
 29209  01734C  0E00               	movlw	0
 29210  01734E  6F41               	movwf	___fladd@aexp& (0+255),b
 29211                           
 29212                           ; BSR set to: 2
 29213  017350  AF43               	btfss	___fladd@grs& (0+255),7,b
 29214  017352  D00B               	goto	l3260
 29215                           
 29216                           ; BSR set to: 2
 29217  017354  C243  F23C         	movff	___fladd@grs,??___fladd
 29218  017358  0E7F               	movlw	127
 29219  01735A  173C               	andwf	??___fladd& (0+255),f,b
 29220  01735C  B4D8               	btfsc	status,2,c
 29221  01735E  D003               	goto	l3261
 29222  017360                     u20800:
 29223                           
 29224                           ; BSR set to: 2
 29225  017360  0E01               	movlw	1
 29226  017362  6F41               	movwf	___fladd@aexp& (0+255),b
 29227  017364  D002               	goto	l3260
 29228  017366                     l3261:
 29229                           
 29230                           ; BSR set to: 2
 29231  017366  B134               	btfsc	___fladd@b& (0+255),0,b
 29232  017368  D7FB               	goto	u20800
 29233  01736A                     l3260:
 29234                           
 29235                           ; BSR set to: 2
 29236  01736A  5141               	movf	___fladd@aexp& (0+255),w,b
 29237  01736C  B4D8               	btfsc	status,2,c
 29238  01736E  D020               	goto	l17295
 29239                           
 29240                           ; BSR set to: 2
 29241  017370  0E01               	movlw	1
 29242  017372  2734               	addwf	___fladd@b& (0+255),f,b
 29243  017374  0E00               	movlw	0
 29244  017376  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29245  017378  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29246  01737A  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29247                           
 29248                           ; BSR set to: 2
 29249  01737C  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 29250  01737E  D018               	goto	l17295
 29251                           
 29252                           ; BSR set to: 2
 29253  017380  C234  F23C         	movff	___fladd@b,??___fladd
 29254  017384  C235  F23D         	movff	___fladd@b+1,??___fladd+1
 29255  017388  C236  F23E         	movff	___fladd@b+2,??___fladd+2
 29256  01738C  C237  F23F         	movff	___fladd@b+3,??___fladd+3
 29257  017390  353F               	rlcf	(??___fladd+3)& (0+255),w,b
 29258  017392  333F               	rrcf	(??___fladd+3)& (0+255),f,b
 29259  017394  333E               	rrcf	(??___fladd+2)& (0+255),f,b
 29260  017396  333D               	rrcf	(??___fladd+1)& (0+255),f,b
 29261  017398  333C               	rrcf	??___fladd& (0+255),f,b
 29262  01739A  C23C  F234         	movff	??___fladd,___fladd@b
 29263  01739E  C23D  F235         	movff	??___fladd+1,___fladd@b+1
 29264  0173A2  C23E  F236         	movff	??___fladd+2,___fladd@b+2
 29265  0173A6  C23F  F237         	movff	??___fladd+3,___fladd@b+3
 29266  0173AA  2942               	incf	___fladd@bexp& (0+255),w,b
 29267  0173AC  A4D8               	btfss	status,2,c
 29268                           
 29269                           ; BSR set to: 2
 29270  0173AE  2B42               	incf	___fladd@bexp& (0+255),f,b
 29271  0173B0                     l17295:
 29272                           
 29273                           ; BSR set to: 2
 29274  0173B0  2942               	incf	___fladd@bexp& (0+255),w,b
 29275  0173B2  B4D8               	btfsc	status,2,c
 29276  0173B4  D003               	goto	u20860
 29277                           
 29278                           ; BSR set to: 2
 29279  0173B6  5142               	movf	___fladd@bexp& (0+255),w,b
 29280  0173B8  A4D8               	btfss	status,2,c
 29281  0173BA  D00D               	goto	l17303
 29282  0173BC                     u20860:
 29283                           
 29284                           ; BSR set to: 2
 29285  0173BC  0E00               	movlw	0
 29286  0173BE  6F34               	movwf	___fladd@b& (0+255),b
 29287  0173C0  0E00               	movlw	0
 29288  0173C2  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29289  0173C4  0E00               	movlw	0
 29290  0173C6  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29291  0173C8  0E00               	movlw	0
 29292  0173CA  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29293  0173CC  5142               	movf	___fladd@bexp& (0+255),w,b
 29294  0173CE  A4D8               	btfss	status,2,c
 29295  0173D0  D002               	goto	l17303
 29296                           
 29297                           ; BSR set to: 2
 29298  0173D2  0E00               	movlw	0
 29299  0173D4  6F40               	movwf	___fladd@signs& (0+255),b
 29300  0173D6                     l17303:
 29301                           
 29302                           ; BSR set to: 2
 29303  0173D6  A142               	btfss	___fladd@bexp& (0+255),0,b
 29304  0173D8  D002               	goto	l17307
 29305                           
 29306                           ; BSR set to: 2
 29307  0173DA  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 29308  0173DC  D001               	goto	l17309
 29309  0173DE                     l17307:
 29310                           
 29311                           ; BSR set to: 2
 29312  0173DE  9F36               	bcf	(___fladd@b+2)& (0+255),7,b
 29313  0173E0                     l17309:
 29314                           
 29315                           ; BSR set to: 2
 29316  0173E0  90D8               	bcf	status,0,c
 29317  0173E2  3142               	rrcf	___fladd@bexp& (0+255),w,b
 29318  0173E4  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29319                           
 29320                           ; BSR set to: 2
 29321  0173E6  BF40               	btfsc	___fladd@signs& (0+255),7,b
 29322                           
 29323                           ; BSR set to: 2
 29324  0173E8  8F37               	bsf	(___fladd@b+3)& (0+255),7,b
 29325                           
 29326                           ; BSR set to: 2
 29327  0173EA  C234  F234         	movff	___fladd@b,?___fladd
 29328  0173EE  C235  F235         	movff	___fladd@b+1,?___fladd+1
 29329  0173F2  C236  F236         	movff	___fladd@b+2,?___fladd+2
 29330  0173F6  C237  F237         	movff	___fladd@b+3,?___fladd+3
 29331                           
 29332                           ; BSR set to: 2
 29333  0173FA  0012               	return		;funcret
 29334  0173FC                     __end_of___fladd:
 29335                           	opt callstack 0
 29336                           
 29337 ;; *************** function ___flneg *****************
 29338 ;; Defined at:
 29339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 29340 ;; Parameters:    Size  Location     Type
 29341 ;;  f1              4    0[BANK2 ] unsigned char 
 29342 ;; Auto vars:     Size  Location     Type
 29343 ;;		None
 29344 ;; Return value:  Size  Location     Type
 29345 ;;                  4    0[BANK2 ] unsigned char 
 29346 ;; Registers used:
 29347 ;;		wreg, status,2, status,0
 29348 ;; Tracked objects:
 29349 ;;		On entry : 0/0
 29350 ;;		On exit  : 0/0
 29351 ;;		Unchanged: 0/0
 29352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29353 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29356 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29357 ;;Total ram usage:        4 bytes
 29358 ;; Hardware stack levels used:    1
 29359 ;; Hardware stack levels required when called:   11
 29360 ;; This function calls:
 29361 ;;		Nothing
 29362 ;; This function is called by:
 29363 ;;		__doprnt
 29364 ;;		_ftoa
 29365 ;; This function uses a non-reentrant model
 29366 ;;
 29367                           
 29368                           	psect	text97
 29369  01C15C                     __ptext97:
 29370                           	opt callstack 0
 29371  01C15C                     ___flneg:
 29372                           	opt callstack 14
 29373                           
 29374                           ; BSR set to: 2
 29375                           ;incstack = 0
 29376  01C15C  0102               	movlb	2	; () banked
 29377  01C15E  5100               	movf	___flneg@f1& (0+255),w,b
 29378  01C160  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29379  01C162  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29380  01C164  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29381  01C166  B4D8               	btfsc	status,2,c
 29382  01C168  D008               	goto	l17833
 29383                           
 29384                           ; BSR set to: 2
 29385  01C16A  0E00               	movlw	0
 29386  01C16C  1B00               	xorwf	___flneg@f1& (0+255),f,b
 29387  01C16E  0E00               	movlw	0
 29388  01C170  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29389  01C172  0E00               	movlw	0
 29390  01C174  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29391  01C176  0E80               	movlw	128
 29392  01C178  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29393  01C17A                     l17833:
 29394                           
 29395                           ; BSR set to: 2
 29396  01C17A  C200  F200         	movff	___flneg@f1,?___flneg
 29397  01C17E  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 29398  01C182  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 29399  01C186  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 29400                           
 29401                           ; BSR set to: 2
 29402  01C18A  0012               	return		;funcret
 29403  01C18C                     __end_of___flneg:
 29404                           	opt callstack 0
 29405                           
 29406 ;; *************** function ___flge *****************
 29407 ;; Defined at:
 29408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 29409 ;; Parameters:    Size  Location     Type
 29410 ;;  ff1             4    0[BANK2 ] unsigned char 
 29411 ;;  ff2             4    4[BANK2 ] unsigned char 
 29412 ;; Auto vars:     Size  Location     Type
 29413 ;;		None
 29414 ;; Return value:  Size  Location     Type
 29415 ;;		None               void
 29416 ;; Registers used:
 29417 ;;		wreg, status,2, status,0
 29418 ;; Tracked objects:
 29419 ;;		On entry : 0/0
 29420 ;;		On exit  : 0/0
 29421 ;;		Unchanged: 0/0
 29422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29423 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29425 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;Total ram usage:       12 bytes
 29428 ;; Hardware stack levels used:    1
 29429 ;; Hardware stack levels required when called:   11
 29430 ;; This function calls:
 29431 ;;		Nothing
 29432 ;; This function is called by:
 29433 ;;		_floatToEngineeringFormat
 29434 ;;		__doprnt
 29435 ;; This function uses a non-reentrant model
 29436 ;;
 29437                           
 29438                           	psect	text98
 29439  01A50A                     __ptext98:
 29440                           	opt callstack 0
 29441  01A50A                     ___flge:
 29442                           	opt callstack 14
 29443                           
 29444                           ; BSR set to: 2
 29445                           ;incstack = 0
 29446  01A50A  0E00               	movlw	0
 29447  01A50C  0102               	movlb	2	; () banked
 29448  01A50E  1500               	andwf	___flge@ff1& (0+255),w,b
 29449  01A510  6F08               	movwf	??___flge& (0+255),b
 29450  01A512  0E00               	movlw	0
 29451  01A514  1501               	andwf	(___flge@ff1+1)& (0+255),w,b
 29452  01A516  6F09               	movwf	(??___flge+1)& (0+255),b
 29453  01A518  0E80               	movlw	128
 29454  01A51A  1502               	andwf	(___flge@ff1+2)& (0+255),w,b
 29455  01A51C  6F0A               	movwf	(??___flge+2)& (0+255),b
 29456  01A51E  0E7F               	movlw	127
 29457  01A520  1503               	andwf	(___flge@ff1+3)& (0+255),w,b
 29458  01A522  6F0B               	movwf	(??___flge+3)& (0+255),b
 29459  01A524  5108               	movf	??___flge& (0+255),w,b
 29460  01A526  1109               	iorwf	(??___flge+1)& (0+255),w,b
 29461  01A528  110A               	iorwf	(??___flge+2)& (0+255),w,b
 29462  01A52A  110B               	iorwf	(??___flge+3)& (0+255),w,b
 29463  01A52C  A4D8               	btfss	status,2,c
 29464  01A52E  D008               	goto	l17811
 29465                           
 29466                           ; BSR set to: 2
 29467  01A530  0E00               	movlw	0
 29468  01A532  6F00               	movwf	___flge@ff1& (0+255),b
 29469  01A534  0E00               	movlw	0
 29470  01A536  6F01               	movwf	(___flge@ff1+1)& (0+255),b
 29471  01A538  0E00               	movlw	0
 29472  01A53A  6F02               	movwf	(___flge@ff1+2)& (0+255),b
 29473  01A53C  0E00               	movlw	0
 29474  01A53E  6F03               	movwf	(___flge@ff1+3)& (0+255),b
 29475  01A540                     l17811:
 29476                           
 29477                           ; BSR set to: 2
 29478  01A540  0E00               	movlw	0
 29479  01A542  1504               	andwf	___flge@ff2& (0+255),w,b
 29480  01A544  6F08               	movwf	??___flge& (0+255),b
 29481  01A546  0E00               	movlw	0
 29482  01A548  1505               	andwf	(___flge@ff2+1)& (0+255),w,b
 29483  01A54A  6F09               	movwf	(??___flge+1)& (0+255),b
 29484  01A54C  0E80               	movlw	128
 29485  01A54E  1506               	andwf	(___flge@ff2+2)& (0+255),w,b
 29486  01A550  6F0A               	movwf	(??___flge+2)& (0+255),b
 29487  01A552  0E7F               	movlw	127
 29488  01A554  1507               	andwf	(___flge@ff2+3)& (0+255),w,b
 29489  01A556  6F0B               	movwf	(??___flge+3)& (0+255),b
 29490  01A558  5108               	movf	??___flge& (0+255),w,b
 29491  01A55A  1109               	iorwf	(??___flge+1)& (0+255),w,b
 29492  01A55C  110A               	iorwf	(??___flge+2)& (0+255),w,b
 29493  01A55E  110B               	iorwf	(??___flge+3)& (0+255),w,b
 29494  01A560  A4D8               	btfss	status,2,c
 29495  01A562  D008               	goto	l17815
 29496                           
 29497                           ; BSR set to: 2
 29498  01A564  0E00               	movlw	0
 29499  01A566  6F04               	movwf	___flge@ff2& (0+255),b
 29500  01A568  0E00               	movlw	0
 29501  01A56A  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 29502  01A56C  0E00               	movlw	0
 29503  01A56E  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 29504  01A570  0E00               	movlw	0
 29505  01A572  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 29506  01A574                     l17815:
 29507                           
 29508                           ; BSR set to: 2
 29509  01A574  AF03               	btfss	(___flge@ff1+3)& (0+255),7,b
 29510  01A576  D009               	goto	l17819
 29511                           
 29512                           ; BSR set to: 2
 29513  01A578  6D00               	negf	___flge@ff1& (0+255),b
 29514  01A57A  1F01               	comf	(___flge@ff1+1)& (0+255),f,b
 29515  01A57C  B0D8               	btfsc	status,0,c
 29516  01A57E  2B01               	incf	(___flge@ff1+1)& (0+255),f,b
 29517  01A580  1F02               	comf	(___flge@ff1+2)& (0+255),f,b
 29518  01A582  B0D8               	btfsc	status,0,c
 29519  01A584  2B02               	incf	(___flge@ff1+2)& (0+255),f,b
 29520  01A586  0E80               	movlw	128
 29521  01A588  5703               	subfwb	(___flge@ff1+3)& (0+255),f,b
 29522  01A58A                     l17819:
 29523                           
 29524                           ; BSR set to: 2
 29525  01A58A  AF07               	btfss	(___flge@ff2+3)& (0+255),7,b
 29526  01A58C  D009               	goto	l2962
 29527                           
 29528                           ; BSR set to: 2
 29529  01A58E  6D04               	negf	___flge@ff2& (0+255),b
 29530  01A590  1F05               	comf	(___flge@ff2+1)& (0+255),f,b
 29531  01A592  B0D8               	btfsc	status,0,c
 29532  01A594  2B05               	incf	(___flge@ff2+1)& (0+255),f,b
 29533  01A596  1F06               	comf	(___flge@ff2+2)& (0+255),f,b
 29534  01A598  B0D8               	btfsc	status,0,c
 29535  01A59A  2B06               	incf	(___flge@ff2+2)& (0+255),f,b
 29536  01A59C  0E80               	movlw	128
 29537  01A59E  5707               	subfwb	(___flge@ff2+3)& (0+255),f,b
 29538  01A5A0                     l2962:
 29539                           
 29540                           ; BSR set to: 2
 29541  01A5A0  0E00               	movlw	0
 29542  01A5A2  1B00               	xorwf	___flge@ff1& (0+255),f,b
 29543  01A5A4  0E00               	movlw	0
 29544  01A5A6  1B01               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29545  01A5A8  0E00               	movlw	0
 29546  01A5AA  1B02               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29547  01A5AC  0E80               	movlw	128
 29548  01A5AE  1B03               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29549  01A5B0  0E00               	movlw	0
 29550  01A5B2  1B04               	xorwf	___flge@ff2& (0+255),f,b
 29551  01A5B4  0E00               	movlw	0
 29552  01A5B6  1B05               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29553  01A5B8  0E00               	movlw	0
 29554  01A5BA  1B06               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29555  01A5BC  0E80               	movlw	128
 29556  01A5BE  1B07               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29557  01A5C0  5104               	movf	___flge@ff2& (0+255),w,b
 29558  01A5C2  5D00               	subwf	___flge@ff1& (0+255),w,b
 29559  01A5C4  5105               	movf	(___flge@ff2+1)& (0+255),w,b
 29560  01A5C6  5901               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29561  01A5C8  5106               	movf	(___flge@ff2+2)& (0+255),w,b
 29562  01A5CA  5902               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29563  01A5CC  5107               	movf	(___flge@ff2+3)& (0+255),w,b
 29564  01A5CE  5903               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29565  01A5D0  B0D8               	btfsc	status,0,c
 29566  01A5D2  D002               	goto	l17825
 29567                           
 29568                           ; BSR set to: 2
 29569  01A5D4  90D8               	bcf	status,0,c
 29570  01A5D6  0012               	return	
 29571  01A5D8                     l17825:
 29572                           
 29573                           ; BSR set to: 2
 29574  01A5D8  80D8               	bsf	status,0,c
 29575                           
 29576                           ; BSR set to: 2
 29577  01A5DA  0012               	return		;funcret
 29578  01A5DC                     __end_of___flge:
 29579                           	opt callstack 0
 29580                           
 29581 ;; *************** function ___fleq *****************
 29582 ;; Defined at:
 29583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 29584 ;; Parameters:    Size  Location     Type
 29585 ;;  ff1             4    0[BANK2 ] unsigned char 
 29586 ;;  ff2             4    4[BANK2 ] unsigned char 
 29587 ;; Auto vars:     Size  Location     Type
 29588 ;;		None
 29589 ;; Return value:  Size  Location     Type
 29590 ;;		None               void
 29591 ;; Registers used:
 29592 ;;		wreg, status,2, status,0
 29593 ;; Tracked objects:
 29594 ;;		On entry : 0/0
 29595 ;;		On exit  : 0/0
 29596 ;;		Unchanged: 0/0
 29597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29598 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29600 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29601 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29602 ;;Total ram usage:       12 bytes
 29603 ;; Hardware stack levels used:    1
 29604 ;; Hardware stack levels required when called:   11
 29605 ;; This function calls:
 29606 ;;		Nothing
 29607 ;; This function is called by:
 29608 ;;		_floatToEngineeringFormat
 29609 ;;		__doprnt
 29610 ;; This function uses a non-reentrant model
 29611 ;;
 29612                           
 29613                           	psect	text99
 29614  01AEBA                     __ptext99:
 29615                           	opt callstack 0
 29616  01AEBA                     ___fleq:
 29617                           	opt callstack 14
 29618                           
 29619                           ; BSR set to: 2
 29620                           ;incstack = 0
 29621  01AEBA  0E00               	movlw	0
 29622  01AEBC  0102               	movlb	2	; () banked
 29623  01AEBE  1500               	andwf	___fleq@ff1& (0+255),w,b
 29624  01AEC0  6F08               	movwf	??___fleq& (0+255),b
 29625  01AEC2  0E00               	movlw	0
 29626  01AEC4  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
 29627  01AEC6  6F09               	movwf	(??___fleq+1)& (0+255),b
 29628  01AEC8  0E80               	movlw	128
 29629  01AECA  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
 29630  01AECC  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29631  01AECE  0E7F               	movlw	127
 29632  01AED0  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
 29633  01AED2  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29634  01AED4  5108               	movf	??___fleq& (0+255),w,b
 29635  01AED6  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29636  01AED8  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29637  01AEDA  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29638  01AEDC  A4D8               	btfss	status,2,c
 29639  01AEDE  D008               	goto	l17795
 29640                           
 29641                           ; BSR set to: 2
 29642  01AEE0  0E00               	movlw	0
 29643  01AEE2  6F00               	movwf	___fleq@ff1& (0+255),b
 29644  01AEE4  0E00               	movlw	0
 29645  01AEE6  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
 29646  01AEE8  0E00               	movlw	0
 29647  01AEEA  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
 29648  01AEEC  0E00               	movlw	0
 29649  01AEEE  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
 29650  01AEF0                     l17795:
 29651                           
 29652                           ; BSR set to: 2
 29653  01AEF0  0E00               	movlw	0
 29654  01AEF2  1504               	andwf	___fleq@ff2& (0+255),w,b
 29655  01AEF4  6F08               	movwf	??___fleq& (0+255),b
 29656  01AEF6  0E00               	movlw	0
 29657  01AEF8  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
 29658  01AEFA  6F09               	movwf	(??___fleq+1)& (0+255),b
 29659  01AEFC  0E80               	movlw	128
 29660  01AEFE  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
 29661  01AF00  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29662  01AF02  0E7F               	movlw	127
 29663  01AF04  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
 29664  01AF06  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29665  01AF08  5108               	movf	??___fleq& (0+255),w,b
 29666  01AF0A  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29667  01AF0C  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29668  01AF0E  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29669  01AF10  A4D8               	btfss	status,2,c
 29670  01AF12  D008               	goto	l17799
 29671                           
 29672                           ; BSR set to: 2
 29673  01AF14  0E00               	movlw	0
 29674  01AF16  6F04               	movwf	___fleq@ff2& (0+255),b
 29675  01AF18  0E00               	movlw	0
 29676  01AF1A  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 29677  01AF1C  0E00               	movlw	0
 29678  01AF1E  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 29679  01AF20  0E00               	movlw	0
 29680  01AF22  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 29681  01AF24                     l17799:
 29682                           
 29683                           ; BSR set to: 2
 29684  01AF24  5104               	movf	___fleq@ff2& (0+255),w,b
 29685  01AF26  1900               	xorwf	___fleq@ff1& (0+255),w,b
 29686  01AF28  E10A               	bnz	u21580
 29687  01AF2A  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
 29688  01AF2C  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 29689  01AF2E  E107               	bnz	u21580
 29690  01AF30  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
 29691  01AF32  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 29692  01AF34  E104               	bnz	u21580
 29693  01AF36  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
 29694  01AF38  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 29695  01AF3A  B4D8               	btfsc	status,2,c
 29696  01AF3C  D002               	goto	l17803
 29697  01AF3E                     u21580:
 29698                           
 29699                           ; BSR set to: 2
 29700  01AF3E  90D8               	bcf	status,0,c
 29701  01AF40  0012               	return	
 29702  01AF42                     l17803:
 29703                           
 29704                           ; BSR set to: 2
 29705  01AF42  80D8               	bsf	status,0,c
 29706                           
 29707                           ; BSR set to: 2
 29708  01AF44  0012               	return		;funcret
 29709  01AF46                     __end_of___fleq:
 29710                           	opt callstack 0
 29711                           
 29712 ;; *************** function _abs *****************
 29713 ;; Defined at:
 29714 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abs.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;  a               2   58[BANK2 ] int 
 29717 ;; Auto vars:     Size  Location     Type
 29718 ;;		None
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  2   58[BANK2 ] int 
 29721 ;; Registers used:
 29722 ;;		wreg, status,2, status,0
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29728 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29730 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29731 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29732 ;;Total ram usage:        4 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; Hardware stack levels required when called:   11
 29735 ;; This function calls:
 29736 ;;		Nothing
 29737 ;; This function is called by:
 29738 ;;		_floatToEngineeringFormat
 29739 ;; This function uses a non-reentrant model
 29740 ;;
 29741                           
 29742                           	psect	text100
 29743  01C212                     __ptext100:
 29744                           	opt callstack 0
 29745  01C212                     _abs:
 29746                           	opt callstack 15
 29747                           
 29748                           ; BSR set to: 2
 29749                           ;incstack = 0
 29750  01C212  0102               	movlb	2	; () banked
 29751  01C214  AF3B               	btfss	(abs@a+1)& (0+255),7,b
 29752  01C216  D00D               	goto	l3380
 29753                           
 29754                           ; BSR set to: 2
 29755  01C218  C23A  F23C         	movff	abs@a,??_abs
 29756  01C21C  C23B  F23D         	movff	abs@a+1,??_abs+1
 29757  01C220  1F3C               	comf	??_abs& (0+255),f,b
 29758  01C222  1F3D               	comf	(??_abs+1)& (0+255),f,b
 29759  01C224  4B3C               	infsnz	??_abs& (0+255),f,b
 29760  01C226  2B3D               	incf	(??_abs+1)& (0+255),f,b
 29761  01C228  C23C  F23A         	movff	??_abs,?_abs
 29762  01C22C  C23D  F23B         	movff	??_abs+1,?_abs+1
 29763  01C230  0012               	return	
 29764  01C232                     l3380:
 29765                           
 29766                           ; BSR set to: 2
 29767  01C232  C23A  F23A         	movff	abs@a,?_abs
 29768  01C236  C23B  F23B         	movff	abs@a+1,?_abs+1
 29769                           
 29770                           ; BSR set to: 2
 29771  01C23A  0012               	return		;funcret
 29772  01C23C                     __end_of_abs:
 29773                           	opt callstack 0
 29774                           
 29775 ;; *************** function ___fldiv *****************
 29776 ;; Defined at:
 29777 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 29778 ;; Parameters:    Size  Location     Type
 29779 ;;  b               4    0[BANK2 ] int 
 29780 ;;  a               4    4[BANK2 ] int 
 29781 ;; Auto vars:     Size  Location     Type
 29782 ;;  grs             4   19[BANK2 ] unsigned long 
 29783 ;;  rem             4   12[BANK2 ] unsigned long 
 29784 ;;  new_exp         2   17[BANK2 ] int 
 29785 ;;  aexp            1   24[BANK2 ] unsigned char 
 29786 ;;  bexp            1   23[BANK2 ] unsigned char 
 29787 ;;  sign            1   16[BANK2 ] unsigned char 
 29788 ;; Return value:  Size  Location     Type
 29789 ;;                  4    0[BANK2 ] unsigned char 
 29790 ;; Registers used:
 29791 ;;		wreg, status,2, status,0
 29792 ;; Tracked objects:
 29793 ;;		On entry : 0/0
 29794 ;;		On exit  : 0/0
 29795 ;;		Unchanged: 0/0
 29796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29797 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29798 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29799 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29800 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29801 ;;Total ram usage:       25 bytes
 29802 ;; Hardware stack levels used:    1
 29803 ;; Hardware stack levels required when called:   11
 29804 ;; This function calls:
 29805 ;;		Nothing
 29806 ;; This function is called by:
 29807 ;;		_printCurrentMeasurements
 29808 ;;		_floatToEngineeringFormat
 29809 ;; This function uses a non-reentrant model
 29810 ;;
 29811                           
 29812                           	psect	text101
 29813  018256                     __ptext101:
 29814                           	opt callstack 0
 29815  018256                     ___fldiv:
 29816                           	opt callstack 15
 29817                           
 29818                           ; BSR set to: 2
 29819                           ;incstack = 0
 29820  018256  0102               	movlb	2	; () banked
 29821  018258  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 29822  01825A  0B80               	andlw	128
 29823  01825C  6F10               	movwf	___fldiv@sign& (0+255),b
 29824  01825E  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 29825  018260  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
 29826  018262  6F17               	movwf	___fldiv@bexp& (0+255),b
 29827                           
 29828                           ; BSR set to: 2
 29829  018264  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
 29830                           
 29831                           ; BSR set to: 2
 29832  018266  8117               	bsf	___fldiv@bexp& (0+255),0,b
 29833                           
 29834                           ; BSR set to: 2
 29835  018268  5117               	movf	___fldiv@bexp& (0+255),w,b
 29836  01826A  B4D8               	btfsc	status,2,c
 29837  01826C  D00D               	goto	l18675
 29838                           
 29839                           ; BSR set to: 2
 29840  01826E  2917               	incf	___fldiv@bexp& (0+255),w,b
 29841  018270  A4D8               	btfss	status,2,c
 29842  018272  D008               	goto	l18671
 29843                           
 29844                           ; BSR set to: 2
 29845  018274  0E00               	movlw	0
 29846  018276  6F00               	movwf	___fldiv@b& (0+255),b
 29847  018278  0E00               	movlw	0
 29848  01827A  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29849  01827C  0E00               	movlw	0
 29850  01827E  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29851  018280  0E00               	movlw	0
 29852  018282  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29853  018284                     l18671:
 29854                           
 29855                           ; BSR set to: 2
 29856  018284  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 29857  018286  D006               	goto	L20
 29858  018288                     l18675:
 29859                           
 29860                           ; BSR set to: 2
 29861  018288  0E00               	movlw	0
 29862  01828A  6F00               	movwf	___fldiv@b& (0+255),b
 29863  01828C  0E00               	movlw	0
 29864  01828E  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29865  018290  0E00               	movlw	0
 29866  018292  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29867  018294                     L20:
 29868  018294  0E00               	movlw	0
 29869  018296  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29870                           
 29871                           ; BSR set to: 2
 29872  018298  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29873  01829A  0B80               	andlw	128
 29874  01829C  1B10               	xorwf	___fldiv@sign& (0+255),f,b
 29875                           
 29876                           ; BSR set to: 2
 29877  01829E  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29878  0182A0  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
 29879  0182A2  6F18               	movwf	___fldiv@aexp& (0+255),b
 29880                           
 29881                           ; BSR set to: 2
 29882  0182A4  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
 29883                           
 29884                           ; BSR set to: 2
 29885  0182A6  8118               	bsf	___fldiv@aexp& (0+255),0,b
 29886                           
 29887                           ; BSR set to: 2
 29888  0182A8  5118               	movf	___fldiv@aexp& (0+255),w,b
 29889  0182AA  B4D8               	btfsc	status,2,c
 29890  0182AC  D00D               	goto	l18695
 29891                           
 29892                           ; BSR set to: 2
 29893  0182AE  2918               	incf	___fldiv@aexp& (0+255),w,b
 29894  0182B0  A4D8               	btfss	status,2,c
 29895  0182B2  D008               	goto	l18691
 29896                           
 29897                           ; BSR set to: 2
 29898  0182B4  0E00               	movlw	0
 29899  0182B6  6F04               	movwf	___fldiv@a& (0+255),b
 29900  0182B8  0E00               	movlw	0
 29901  0182BA  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 29902  0182BC  0E00               	movlw	0
 29903  0182BE  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 29904  0182C0  0E00               	movlw	0
 29905  0182C2  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 29906  0182C4                     l18691:
 29907                           
 29908                           ; BSR set to: 2
 29909  0182C4  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
 29910  0182C6  D006               	goto	L21
 29911  0182C8                     l18695:
 29912                           
 29913                           ; BSR set to: 2
 29914  0182C8  0E00               	movlw	0
 29915  0182CA  6F04               	movwf	___fldiv@a& (0+255),b
 29916  0182CC  0E00               	movlw	0
 29917  0182CE  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 29918  0182D0  0E00               	movlw	0
 29919  0182D2  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 29920  0182D4                     L21:
 29921  0182D4  0E00               	movlw	0
 29922  0182D6  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 29923                           
 29924                           ; BSR set to: 2
 29925  0182D8  5104               	movf	___fldiv@a& (0+255),w,b
 29926  0182DA  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
 29927  0182DC  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
 29928  0182DE  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
 29929  0182E0  A4D8               	btfss	status,2,c
 29930  0182E2  D017               	goto	l18709
 29931                           
 29932                           ; BSR set to: 2
 29933  0182E4  0E00               	movlw	0
 29934  0182E6  6F00               	movwf	___fldiv@b& (0+255),b
 29935  0182E8  0E00               	movlw	0
 29936  0182EA  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29937  0182EC  0E00               	movlw	0
 29938  0182EE  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29939  0182F0  0E00               	movlw	0
 29940  0182F2  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29941                           
 29942                           ; BSR set to: 2
 29943  0182F4  0E80               	movlw	128
 29944  0182F6  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
 29945  0182F8  0E7F               	movlw	127
 29946  0182FA  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29947  0182FC                     l18703:
 29948                           
 29949                           ; BSR set to: 2
 29950  0182FC  5110               	movf	___fldiv@sign& (0+255),w,b
 29951  0182FE  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29952                           
 29953                           ; BSR set to: 2
 29954  018300  C200  F200         	movff	___fldiv@b,?___fldiv
 29955  018304  C201  F201         	movff	___fldiv@b+1,?___fldiv+1
 29956  018308  C202  F202         	movff	___fldiv@b+2,?___fldiv+2
 29957  01830C  C203  F203         	movff	___fldiv@b+3,?___fldiv+3
 29958  018310  0012               	return	
 29959  018312                     l18709:
 29960                           
 29961                           ; BSR set to: 2
 29962  018312  5117               	movf	___fldiv@bexp& (0+255),w,b
 29963  018314  A4D8               	btfss	status,2,c
 29964  018316  D009               	goto	l18717
 29965                           
 29966                           ; BSR set to: 2
 29967                           
 29968                           ; BSR set to: 2
 29969  018318  0E00               	movlw	0
 29970  01831A  6F00               	movwf	?___fldiv& (0+255),b
 29971  01831C  0E00               	movlw	0
 29972  01831E  6F01               	movwf	(?___fldiv+1)& (0+255),b
 29973  018320  0E00               	movlw	0
 29974  018322  6F02               	movwf	(?___fldiv+2)& (0+255),b
 29975  018324  0E00               	movlw	0
 29976  018326  6F03               	movwf	(?___fldiv+3)& (0+255),b
 29977  018328  0012               	return	
 29978  01832A                     l18717:
 29979                           
 29980                           ; BSR set to: 2
 29981  01832A  5118               	movf	___fldiv@aexp& (0+255),w,b
 29982  01832C  C217  F208         	movff	___fldiv@bexp,??___fldiv
 29983  018330  6B09               	clrf	(??___fldiv+1)& (0+255),b
 29984  018332  5F08               	subwf	??___fldiv& (0+255),f,b
 29985  018334  0E00               	movlw	0
 29986  018336  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
 29987  018338  0E7F               	movlw	127
 29988  01833A  2508               	addwf	??___fldiv& (0+255),w,b
 29989  01833C  6F11               	movwf	___fldiv@new_exp& (0+255),b
 29990  01833E  0E00               	movlw	0
 29991  018340  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
 29992  018342  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29993                           
 29994                           ; BSR set to: 2
 29995  018344  C200  F20C         	movff	___fldiv@b,___fldiv@rem
 29996  018348  C201  F20D         	movff	___fldiv@b+1,___fldiv@rem+1
 29997  01834C  C202  F20E         	movff	___fldiv@b+2,___fldiv@rem+2
 29998  018350  C203  F20F         	movff	___fldiv@b+3,___fldiv@rem+3
 29999                           
 30000                           ; BSR set to: 2
 30001  018354  0E00               	movlw	0
 30002  018356  6F00               	movwf	___fldiv@b& (0+255),b
 30003  018358  0E00               	movlw	0
 30004  01835A  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 30005  01835C  0E00               	movlw	0
 30006  01835E  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 30007  018360  0E00               	movlw	0
 30008  018362  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30009                           
 30010                           ; BSR set to: 2
 30011  018364  0E00               	movlw	0
 30012  018366  6F13               	movwf	___fldiv@grs& (0+255),b
 30013  018368  0E00               	movlw	0
 30014  01836A  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
 30015  01836C  0E00               	movlw	0
 30016  01836E  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
 30017  018370  0E00               	movlw	0
 30018  018372  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
 30019                           
 30020                           ; BSR set to: 2
 30021  018374  0E00               	movlw	0
 30022  018376  6F18               	movwf	___fldiv@aexp& (0+255),b
 30023  018378  D028               	goto	l3290
 30024  01837A                     l18727:
 30025                           
 30026                           ; BSR set to: 2
 30027  01837A  5118               	movf	___fldiv@aexp& (0+255),w,b
 30028  01837C  B4D8               	btfsc	status,2,c
 30029  01837E  D011               	goto	l18735
 30030                           
 30031                           ; BSR set to: 2
 30032  018380  90D8               	bcf	status,0,c
 30033  018382  370C               	rlcf	___fldiv@rem& (0+255),f,b
 30034  018384  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 30035  018386  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 30036  018388  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 30037  01838A  90D8               	bcf	status,0,c
 30038  01838C  3700               	rlcf	___fldiv@b& (0+255),f,b
 30039  01838E  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 30040  018390  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 30041  018392  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 30042                           
 30043                           ; BSR set to: 2
 30044  018394  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 30045                           
 30046                           ; BSR set to: 2
 30047  018396  8100               	bsf	___fldiv@b& (0+255),0,b
 30048                           
 30049                           ; BSR set to: 2
 30050  018398  90D8               	bcf	status,0,c
 30051  01839A  3713               	rlcf	___fldiv@grs& (0+255),f,b
 30052  01839C  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 30053  01839E  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 30054  0183A0  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 30055  0183A2                     l18735:
 30056                           
 30057                           ; BSR set to: 2
 30058  0183A2  5104               	movf	___fldiv@a& (0+255),w,b
 30059  0183A4  5D0C               	subwf	___fldiv@rem& (0+255),w,b
 30060  0183A6  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 30061  0183A8  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 30062  0183AA  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 30063  0183AC  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 30064  0183AE  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 30065  0183B0  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 30066  0183B2  A0D8               	btfss	status,0,c
 30067  0183B4  D009               	goto	l18741
 30068                           
 30069                           ; BSR set to: 2
 30070  0183B6  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
 30071                           
 30072                           ; BSR set to: 2
 30073  0183B8  5104               	movf	___fldiv@a& (0+255),w,b
 30074  0183BA  5F0C               	subwf	___fldiv@rem& (0+255),f,b
 30075  0183BC  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 30076  0183BE  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 30077  0183C0  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 30078  0183C2  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 30079  0183C4  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 30080  0183C6  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 30081  0183C8                     l18741:
 30082                           
 30083                           ; BSR set to: 2
 30084  0183C8  2B18               	incf	___fldiv@aexp& (0+255),f,b
 30085  0183CA                     l3290:
 30086                           
 30087                           ; BSR set to: 2
 30088  0183CA  0E19               	movlw	25
 30089  0183CC  6518               	cpfsgt	___fldiv@aexp& (0+255),b
 30090  0183CE  D7D5               	goto	l18727
 30091                           
 30092                           ; BSR set to: 2
 30093  0183D0  510C               	movf	___fldiv@rem& (0+255),w,b
 30094  0183D2  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 30095  0183D4  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 30096  0183D6  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 30097  0183D8  B4D8               	btfsc	status,2,c
 30098  0183DA  D011               	goto	l18753
 30099                           
 30100                           ; BSR set to: 2
 30101  0183DC  8113               	bsf	___fldiv@grs& (0+255),0,b
 30102  0183DE  D00F               	goto	l18753
 30103  0183E0                     l18747:
 30104                           
 30105                           ; BSR set to: 2
 30106  0183E0  90D8               	bcf	status,0,c
 30107  0183E2  3700               	rlcf	___fldiv@b& (0+255),f,b
 30108  0183E4  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 30109  0183E6  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 30110  0183E8  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 30111                           
 30112                           ; BSR set to: 2
 30113  0183EA  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 30114                           
 30115                           ; BSR set to: 2
 30116  0183EC  8100               	bsf	___fldiv@b& (0+255),0,b
 30117                           
 30118                           ; BSR set to: 2
 30119  0183EE  90D8               	bcf	status,0,c
 30120  0183F0  3713               	rlcf	___fldiv@grs& (0+255),f,b
 30121  0183F2  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 30122  0183F4  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 30123  0183F6  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 30124  0183F8  0711               	decf	___fldiv@new_exp& (0+255),f,b
 30125  0183FA  A0D8               	btfss	status,0,c
 30126  0183FC  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 30127  0183FE                     l18753:
 30128                           
 30129                           ; BSR set to: 2
 30130  0183FE  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
 30131  018400  D7EF               	goto	l18747
 30132                           
 30133                           ; BSR set to: 2
 30134  018402  0E00               	movlw	0
 30135  018404  6F18               	movwf	___fldiv@aexp& (0+255),b
 30136                           
 30137                           ; BSR set to: 2
 30138  018406  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
 30139  018408  D017               	goto	l3301
 30140                           
 30141                           ; BSR set to: 2
 30142  01840A  0EFF               	movlw	255
 30143  01840C  1513               	andwf	___fldiv@grs& (0+255),w,b
 30144  01840E  6F08               	movwf	??___fldiv& (0+255),b
 30145  018410  0EFF               	movlw	255
 30146  018412  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
 30147  018414  6F09               	movwf	(??___fldiv+1)& (0+255),b
 30148  018416  0EFF               	movlw	255
 30149  018418  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
 30150  01841A  6F0A               	movwf	(??___fldiv+2)& (0+255),b
 30151  01841C  0E7F               	movlw	127
 30152  01841E  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
 30153  018420  6F0B               	movwf	(??___fldiv+3)& (0+255),b
 30154  018422  5108               	movf	??___fldiv& (0+255),w,b
 30155  018424  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
 30156  018426  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
 30157  018428  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
 30158  01842A  B4D8               	btfsc	status,2,c
 30159  01842C  D003               	goto	l3302
 30160  01842E                     u23590:
 30161                           
 30162                           ; BSR set to: 2
 30163  01842E  0E01               	movlw	1
 30164  018430  6F18               	movwf	___fldiv@aexp& (0+255),b
 30165  018432  D002               	goto	l3301
 30166  018434                     l3302:
 30167                           
 30168                           ; BSR set to: 2
 30169  018434  B100               	btfsc	___fldiv@b& (0+255),0,b
 30170  018436  D7FB               	goto	u23590
 30171  018438                     l3301:
 30172                           
 30173                           ; BSR set to: 2
 30174  018438  5118               	movf	___fldiv@aexp& (0+255),w,b
 30175  01843A  B4D8               	btfsc	status,2,c
 30176  01843C  D01F               	goto	l18773
 30177                           
 30178                           ; BSR set to: 2
 30179  01843E  0E01               	movlw	1
 30180  018440  2700               	addwf	___fldiv@b& (0+255),f,b
 30181  018442  0E00               	movlw	0
 30182  018444  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
 30183  018446  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
 30184  018448  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
 30185                           
 30186                           ; BSR set to: 2
 30187  01844A  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
 30188  01844C  D017               	goto	l18773
 30189                           
 30190                           ; BSR set to: 2
 30191  01844E  C200  F208         	movff	___fldiv@b,??___fldiv
 30192  018452  C201  F209         	movff	___fldiv@b+1,??___fldiv+1
 30193  018456  C202  F20A         	movff	___fldiv@b+2,??___fldiv+2
 30194  01845A  C203  F20B         	movff	___fldiv@b+3,??___fldiv+3
 30195  01845E  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
 30196  018460  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
 30197  018462  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
 30198  018464  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
 30199  018466  3308               	rrcf	??___fldiv& (0+255),f,b
 30200  018468  C208  F200         	movff	??___fldiv,___fldiv@b
 30201  01846C  C209  F201         	movff	??___fldiv+1,___fldiv@b+1
 30202  018470  C20A  F202         	movff	??___fldiv+2,___fldiv@b+2
 30203  018474  C20B  F203         	movff	??___fldiv+3,___fldiv@b+3
 30204                           
 30205                           ; BSR set to: 2
 30206  018478  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
 30207  01847A  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 30208  01847C                     l18773:
 30209                           
 30210                           ; BSR set to: 2
 30211  01847C  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 30212  01847E  D010               	goto	l18777
 30213  018480  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 30214  018482  E103               	bnz	u23630
 30215  018484  2911               	incf	___fldiv@new_exp& (0+255),w,b
 30216  018486  A0D8               	btfss	status,0,c
 30217  018488  D00B               	goto	l18777
 30218  01848A                     u23630:
 30219                           
 30220                           ; BSR set to: 2
 30221  01848A  0E00               	movlw	0
 30222  01848C  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30223  01848E  6911               	setf	___fldiv@new_exp& (0+255),b
 30224  018490  0E00               	movlw	0
 30225  018492  6F00               	movwf	___fldiv@b& (0+255),b
 30226  018494  0E00               	movlw	0
 30227  018496  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 30228  018498  0E00               	movlw	0
 30229  01849A  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 30230  01849C  0E00               	movlw	0
 30231  01849E  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30232  0184A0                     l18777:
 30233                           
 30234                           ; BSR set to: 2
 30235  0184A0  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 30236  0184A2  D005               	goto	u23640
 30237  0184A4  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 30238  0184A6  E111               	bnz	l18781
 30239  0184A8  0511               	decf	___fldiv@new_exp& (0+255),w,b
 30240  0184AA  B0D8               	btfsc	status,0,c
 30241  0184AC  D00E               	goto	l18781
 30242  0184AE                     u23640:
 30243                           
 30244                           ; BSR set to: 2
 30245  0184AE  0E00               	movlw	0
 30246  0184B0  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30247  0184B2  0E00               	movlw	0
 30248  0184B4  6F11               	movwf	___fldiv@new_exp& (0+255),b
 30249  0184B6  0E00               	movlw	0
 30250  0184B8  6F00               	movwf	___fldiv@b& (0+255),b
 30251  0184BA  0E00               	movlw	0
 30252  0184BC  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 30253  0184BE  0E00               	movlw	0
 30254  0184C0  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 30255  0184C2  0E00               	movlw	0
 30256  0184C4  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30257  0184C6  0E00               	movlw	0
 30258  0184C8  6F10               	movwf	___fldiv@sign& (0+255),b
 30259  0184CA                     l18781:
 30260                           
 30261                           ; BSR set to: 2
 30262  0184CA  C211  F217         	movff	___fldiv@new_exp,___fldiv@bexp
 30263                           
 30264                           ; BSR set to: 2
 30265  0184CE  A117               	btfss	___fldiv@bexp& (0+255),0,b
 30266  0184D0  D002               	goto	l18787
 30267                           
 30268                           ; BSR set to: 2
 30269  0184D2  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 30270  0184D4  D001               	goto	l18789
 30271  0184D6                     l18787:
 30272                           
 30273                           ; BSR set to: 2
 30274  0184D6  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
 30275  0184D8                     l18789:
 30276                           
 30277                           ; BSR set to: 2
 30278  0184D8  90D8               	bcf	status,0,c
 30279  0184DA  3117               	rrcf	___fldiv@bexp& (0+255),w,b
 30280  0184DC  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30281  0184DE  D70E               	goto	l18703
 30282  0184E0                     __end_of___fldiv:
 30283                           	opt callstack 0
 30284                           
 30285 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 30286 ;; Defined at:
 30287 ;;		line 294 in file "oled.c"
 30288 ;; Parameters:    Size  Location     Type
 30289 ;;		None
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;  char_index      1   38[BANK2 ] unsigned char 
 30292 ;;  char_index      1   37[BANK2 ] unsigned char 
 30293 ;;  char_index      1   36[BANK2 ] unsigned char 
 30294 ;;  char_index      1   35[BANK2 ] unsigned char 
 30295 ;; Return value:  Size  Location     Type
 30296 ;;                  1    wreg      void 
 30297 ;; Registers used:
 30298 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30299 ;; Tracked objects:
 30300 ;;		On entry : 0/0
 30301 ;;		On exit  : 0/0
 30302 ;;		Unchanged: 0/0
 30303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30305 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30307 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30308 ;;Total ram usage:        4 bytes
 30309 ;; Hardware stack levels used:    1
 30310 ;; Hardware stack levels required when called:   16
 30311 ;; This function calls:
 30312 ;;		_OLED_WriteString
 30313 ;;		_OLED_YX
 30314 ;;		_strlen
 30315 ;; This function is called by:
 30316 ;;		_OLED_updateHandler
 30317 ;; This function uses a non-reentrant model
 30318 ;;
 30319                           
 30320                           	psect	text102
 30321  019D34                     __ptext102:
 30322                           	opt callstack 0
 30323  019D34                     _OLED_UpdateFromRAMBuffer:
 30324                           	opt callstack 13
 30325                           
 30326                           ;oled.c: 298: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line0); char_index < size
      +                          of(OLED_RAM_Buffer.line0) - 1; char_index++) {
 30327                           
 30328                           ; BSR set to: 2
 30329                           ;incstack = 0
 30330  019D34  0E00               	movlw	low _OLED_RAM_Buffer
 30331  019D36  0102               	movlb	2	; () banked
 30332  019D38  6F00               	movwf	strlen@s& (0+255),b
 30333  019D3A  0E03               	movlw	high _OLED_RAM_Buffer
 30334  019D3C  6F01               	movwf	(strlen@s+1)& (0+255),b
 30335  019D3E  ECC6  F0E0         	call	_strlen	;wreg free
 30336  019D42  0102               	movlb	2	; () banked
 30337  019D44  5100               	movf	?_strlen& (0+255),w,b
 30338  019D46  6F23               	movwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30339  019D48                     l21275:
 30340                           
 30341                           ; BSR set to: 2
 30342  019D48  0E0F               	movlw	15
 30343  019D4A  6523               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30344  019D4C  D001               	goto	l21279
 30345  019D4E  D00A               	goto	l21285
 30346  019D50                     l21279:
 30347                           
 30348                           ; BSR set to: 2
 30349                           ;oled.c: 299: OLED_RAM_Buffer.line0[char_index] = ' ';
 30350  019D50  0E00               	movlw	low _OLED_RAM_Buffer
 30351  019D52  2523               	addwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),w,b
 30352  019D54  6ED9               	movwf	fsr2l,c
 30353  019D56  6ADA               	clrf	fsr2h,c
 30354  019D58  0E03               	movlw	high _OLED_RAM_Buffer
 30355  019D5A  22DA               	addwfc	fsr2h,f,c
 30356  019D5C  0E20               	movlw	32
 30357  019D5E  6EDF               	movwf	indf2,c
 30358                           
 30359                           ; BSR set to: 2
 30360  019D60  2B23               	incf	OLED_UpdateFromRAMBuffer@char_index& (0+255),f,b
 30361  019D62  D7F2               	goto	l21275
 30362  019D64                     l21285:
 30363                           
 30364                           ; BSR set to: 2
 30365                           ;oled.c: 300: };oled.c: 301: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line1); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line1) - 1; char_index++) {
 30366  019D64  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30367  019D66  6F00               	movwf	strlen@s& (0+255),b
 30368  019D68  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30369  019D6A  6F01               	movwf	(strlen@s+1)& (0+255),b
 30370  019D6C  ECC6  F0E0         	call	_strlen	;wreg free
 30371  019D70  0102               	movlb	2	; () banked
 30372  019D72  5100               	movf	?_strlen& (0+255),w,b
 30373  019D74  6F24               	movwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30374  019D76                     l21287:
 30375                           
 30376                           ; BSR set to: 2
 30377  019D76  0E0F               	movlw	15
 30378  019D78  6524               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30379  019D7A  D001               	goto	l21291
 30380  019D7C  D00A               	goto	l21297
 30381  019D7E                     l21291:
 30382                           
 30383                           ; BSR set to: 2
 30384                           ;oled.c: 302: OLED_RAM_Buffer.line1[char_index] = ' ';
 30385  019D7E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30386  019D80  2524               	addwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),w,b
 30387  019D82  6ED9               	movwf	fsr2l,c
 30388  019D84  6ADA               	clrf	fsr2h,c
 30389  019D86  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30390  019D88  22DA               	addwfc	fsr2h,f,c
 30391  019D8A  0E20               	movlw	32
 30392  019D8C  6EDF               	movwf	indf2,c
 30393                           
 30394                           ; BSR set to: 2
 30395  019D8E  2B24               	incf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),f,b
 30396  019D90  D7F2               	goto	l21287
 30397  019D92                     l21297:
 30398                           
 30399                           ; BSR set to: 2
 30400                           ;oled.c: 303: };oled.c: 304: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line2); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line2) - 1; char_index++) {
 30401  019D92  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30402  019D94  6F00               	movwf	strlen@s& (0+255),b
 30403  019D96  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30404  019D98  6F01               	movwf	(strlen@s+1)& (0+255),b
 30405  019D9A  ECC6  F0E0         	call	_strlen	;wreg free
 30406  019D9E  0102               	movlb	2	; () banked
 30407  019DA0  5100               	movf	?_strlen& (0+255),w,b
 30408  019DA2  6F25               	movwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30409  019DA4                     l21299:
 30410                           
 30411                           ; BSR set to: 2
 30412  019DA4  0E0F               	movlw	15
 30413  019DA6  6525               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30414  019DA8  D001               	goto	l21303
 30415  019DAA  D00A               	goto	l21309
 30416  019DAC                     l21303:
 30417                           
 30418                           ; BSR set to: 2
 30419                           ;oled.c: 305: OLED_RAM_Buffer.line2[char_index] = ' ';
 30420  019DAC  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30421  019DAE  2525               	addwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),w,b
 30422  019DB0  6ED9               	movwf	fsr2l,c
 30423  019DB2  6ADA               	clrf	fsr2h,c
 30424  019DB4  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30425  019DB6  22DA               	addwfc	fsr2h,f,c
 30426  019DB8  0E20               	movlw	32
 30427  019DBA  6EDF               	movwf	indf2,c
 30428                           
 30429                           ; BSR set to: 2
 30430  019DBC  2B25               	incf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),f,b
 30431  019DBE  D7F2               	goto	l21299
 30432  019DC0                     l21309:
 30433                           
 30434                           ; BSR set to: 2
 30435                           ;oled.c: 306: };oled.c: 307: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line3); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line3) - 1; char_index++) {
 30436  019DC0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30437  019DC2  6F00               	movwf	strlen@s& (0+255),b
 30438  019DC4  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30439  019DC6  6F01               	movwf	(strlen@s+1)& (0+255),b
 30440  019DC8  ECC6  F0E0         	call	_strlen	;wreg free
 30441  019DCC  0102               	movlb	2	; () banked
 30442  019DCE  5100               	movf	?_strlen& (0+255),w,b
 30443  019DD0  6F26               	movwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30444  019DD2                     l21311:
 30445                           
 30446                           ; BSR set to: 2
 30447  019DD2  0E0F               	movlw	15
 30448  019DD4  6526               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30449  019DD6  D001               	goto	l21315
 30450  019DD8  D00A               	goto	l21321
 30451  019DDA                     l21315:
 30452                           
 30453                           ; BSR set to: 2
 30454                           ;oled.c: 308: OLED_RAM_Buffer.line3[char_index] = ' ';
 30455  019DDA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30456  019DDC  2526               	addwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),w,b
 30457  019DDE  6ED9               	movwf	fsr2l,c
 30458  019DE0  6ADA               	clrf	fsr2h,c
 30459  019DE2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30460  019DE4  22DA               	addwfc	fsr2h,f,c
 30461  019DE6  0E20               	movlw	32
 30462  019DE8  6EDF               	movwf	indf2,c
 30463                           
 30464                           ; BSR set to: 2
 30465  019DEA  2B26               	incf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),f,b
 30466  019DEC  D7F2               	goto	l21311
 30467  019DEE                     l21321:
 30468                           
 30469                           ; BSR set to: 2
 30470                           ;oled.c: 309: };oled.c: 311: OLED_YX(0,0);
 30471  019DEE  0E00               	movlw	0
 30472  019DF0  6F14               	movwf	OLED_YX@Column& (0+255),b
 30473  019DF2  0E00               	movlw	0
 30474  019DF4  EC2F  F0DE         	call	_OLED_YX
 30475                           
 30476                           ;oled.c: 312: OLED_WriteString(OLED_RAM_Buffer.line0);
 30477  019DF8  0E00               	movlw	low _OLED_RAM_Buffer
 30478  019DFA  0102               	movlb	2	; () banked
 30479  019DFC  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30480  019DFE  0E03               	movlw	high _OLED_RAM_Buffer
 30481  019E00  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30482  019E02  EC4F  F0DB         	call	_OLED_WriteString	;wreg free
 30483                           
 30484                           ;oled.c: 313: OLED_YX(1,0);
 30485  019E06  0E00               	movlw	0
 30486  019E08  0102               	movlb	2	; () banked
 30487  019E0A  6F14               	movwf	OLED_YX@Column& (0+255),b
 30488  019E0C  0E01               	movlw	1
 30489  019E0E  EC2F  F0DE         	call	_OLED_YX
 30490                           
 30491                           ;oled.c: 314: OLED_WriteString(OLED_RAM_Buffer.line1);
 30492  019E12  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30493  019E14  0102               	movlb	2	; () banked
 30494  019E16  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30495  019E18  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30496  019E1A  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30497  019E1C  EC4F  F0DB         	call	_OLED_WriteString	;wreg free
 30498                           
 30499                           ;oled.c: 315: OLED_YX(2,0);
 30500  019E20  0E00               	movlw	0
 30501  019E22  0102               	movlb	2	; () banked
 30502  019E24  6F14               	movwf	OLED_YX@Column& (0+255),b
 30503  019E26  0E02               	movlw	2
 30504  019E28  EC2F  F0DE         	call	_OLED_YX
 30505                           
 30506                           ;oled.c: 316: OLED_WriteString(OLED_RAM_Buffer.line2);
 30507  019E2C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30508  019E2E  0102               	movlb	2	; () banked
 30509  019E30  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30510  019E32  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30511  019E34  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30512  019E36  EC4F  F0DB         	call	_OLED_WriteString	;wreg free
 30513                           
 30514                           ;oled.c: 317: OLED_YX(3,0);
 30515  019E3A  0E00               	movlw	0
 30516  019E3C  0102               	movlb	2	; () banked
 30517  019E3E  6F14               	movwf	OLED_YX@Column& (0+255),b
 30518  019E40  0E03               	movlw	3
 30519  019E42  EC2F  F0DE         	call	_OLED_YX
 30520                           
 30521                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line3);
 30522  019E46  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30523  019E48  0102               	movlb	2	; () banked
 30524  019E4A  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30525  019E4C  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30526  019E4E  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30527  019E50  EC4F  F0DB         	call	_OLED_WriteString	;wreg free
 30528  019E54  0012               	return		;funcret
 30529  019E56                     __end_of_OLED_UpdateFromRAMBuffer:
 30530                           	opt callstack 0
 30531                           
 30532 ;; *************** function _strlen *****************
 30533 ;; Defined at:
 30534 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
 30535 ;; Parameters:    Size  Location     Type
 30536 ;;  s               2    0[BANK2 ] PTR const unsigned char 
 30537 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30538 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;  cp              2    2[BANK2 ] PTR const unsigned char 
 30541 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30542 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30543 ;; Return value:  Size  Location     Type
 30544 ;;                  2    0[BANK2 ] unsigned int 
 30545 ;; Registers used:
 30546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30547 ;; Tracked objects:
 30548 ;;		On entry : 0/0
 30549 ;;		On exit  : 0/0
 30550 ;;		Unchanged: 0/0
 30551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30552 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30553 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30555 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30556 ;;Total ram usage:        4 bytes
 30557 ;; Hardware stack levels used:    1
 30558 ;; Hardware stack levels required when called:   11
 30559 ;; This function calls:
 30560 ;;		Nothing
 30561 ;; This function is called by:
 30562 ;;		_getStringSecondsAsTime
 30563 ;;		_OLED_UpdateFromRAMBuffer
 30564 ;;		_ringBufferLUT
 30565 ;;		_terminal_ringBufferPull
 30566 ;; This function uses a non-reentrant model
 30567 ;;
 30568                           
 30569                           	psect	text103
 30570  01C18C                     __ptext103:
 30571                           	opt callstack 0
 30572  01C18C                     _strlen:
 30573                           	opt callstack 18
 30574                           
 30575                           ;incstack = 0
 30576  01C18C  C200  F202         	movff	strlen@s,strlen@cp
 30577  01C190  C201  F203         	movff	strlen@s+1,strlen@cp+1
 30578  01C194  D003               	goto	l18595
 30579  01C196                     l18593:
 30580  01C196  0102               	movlb	2	; () banked
 30581  01C198  4B02               	infsnz	strlen@cp& (0+255),f,b
 30582  01C19A  2B03               	incf	(strlen@cp+1)& (0+255),f,b
 30583  01C19C                     l18595:
 30584  01C19C  C202  FFD9         	movff	strlen@cp,fsr2l
 30585  01C1A0  C203  FFDA         	movff	strlen@cp+1,fsr2h
 30586  01C1A4  50DF               	movf	indf2,w,c
 30587  01C1A6  A4D8               	btfss	status,2,c
 30588  01C1A8  D7F6               	goto	l18593
 30589  01C1AA  0102               	movlb	2	; () banked
 30590  01C1AC  5100               	movf	strlen@s& (0+255),w,b
 30591  01C1AE  5D02               	subwf	strlen@cp& (0+255),w,b
 30592  01C1B0  6F00               	movwf	?_strlen& (0+255),b
 30593  01C1B2  5101               	movf	(strlen@s+1)& (0+255),w,b
 30594  01C1B4  5903               	subwfb	(strlen@cp+1)& (0+255),w,b
 30595  01C1B6  6F01               	movwf	(?_strlen+1)& (0+255),b
 30596                           
 30597                           ; BSR set to: 2
 30598  01C1B8  0012               	return		;funcret
 30599  01C1BA                     __end_of_strlen:
 30600                           	opt callstack 0
 30601                           
 30602 ;; *************** function _OLED_YX *****************
 30603 ;; Defined at:
 30604 ;;		line 204 in file "oled.c"
 30605 ;; Parameters:    Size  Location     Type
 30606 ;;  Row             1    wreg     unsigned char 
 30607 ;;  Column          1   20[BANK2 ] unsigned char 
 30608 ;; Auto vars:     Size  Location     Type
 30609 ;;  Row             1   24[BANK2 ] unsigned char 
 30610 ;; Return value:  Size  Location     Type
 30611 ;;                  1    wreg      void 
 30612 ;; Registers used:
 30613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30614 ;; Tracked objects:
 30615 ;;		On entry : 0/0
 30616 ;;		On exit  : 0/0
 30617 ;;		Unchanged: 0/0
 30618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30619 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30620 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30621 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30622 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30623 ;;Total ram usage:        5 bytes
 30624 ;; Hardware stack levels used:    1
 30625 ;; Hardware stack levels required when called:   15
 30626 ;; This function calls:
 30627 ;;		_OLED_Command
 30628 ;; This function is called by:
 30629 ;;		_OLED_UpdateFromRAMBuffer
 30630 ;; This function uses a non-reentrant model
 30631 ;;
 30632                           
 30633                           	psect	text104
 30634  01BC5E                     __ptext104:
 30635                           	opt callstack 0
 30636  01BC5E                     _OLED_YX:
 30637                           	opt callstack 13
 30638                           
 30639                           ; BSR set to: 2
 30640                           ;incstack = 0
 30641                           ;OLED_YX@Row stored from wreg
 30642  01BC5E  0102               	movlb	2	; () banked
 30643  01BC60  6F18               	movwf	OLED_YX@Row& (0+255),b
 30644                           
 30645                           ;oled.c: 206: OLED_Command(0xB0 + Row);
 30646  01BC62  0102               	movlb	2	; () banked
 30647  01BC64  5118               	movf	OLED_YX@Row& (0+255),w,b
 30648  01BC66  0FB0               	addlw	176
 30649  01BC68  EC01  F0DA         	call	_OLED_Command
 30650                           
 30651                           ;oled.c: 207: OLED_Command(0x00 + (8 * Column & 0x0F));
 30652  01BC6C  0102               	movlb	2	; () banked
 30653  01BC6E  5114               	movf	OLED_YX@Column& (0+255),w,b
 30654  01BC70  0D08               	mullw	8
 30655  01BC72  50F3               	movf	prodl,w,c
 30656  01BC74  0B0F               	andlw	15
 30657  01BC76  EC01  F0DA         	call	_OLED_Command
 30658                           
 30659                           ;oled.c: 208: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 30660  01BC7A  0102               	movlb	2	; () banked
 30661  01BC7C  5114               	movf	OLED_YX@Column& (0+255),w,b
 30662  01BC7E  0D08               	mullw	8
 30663  01BC80  CFF3 F215          	movff	prodl,??_OLED_YX
 30664  01BC84  CFF4 F216          	movff	prodh,??_OLED_YX+1
 30665  01BC88  0E04               	movlw	4
 30666  01BC8A  6F17               	movwf	(??_OLED_YX+2)& (0+255),b
 30667  01BC8C                     u25475:
 30668  01BC8C  3516               	rlcf	(??_OLED_YX+1)& (0+255),w,b
 30669  01BC8E  3316               	rrcf	(??_OLED_YX+1)& (0+255),f,b
 30670  01BC90  3315               	rrcf	??_OLED_YX& (0+255),f,b
 30671  01BC92  2F17               	decfsz	(??_OLED_YX+2)& (0+255),f,b
 30672  01BC94  D7FB               	goto	u25475
 30673  01BC96  5115               	movf	??_OLED_YX& (0+255),w,b
 30674  01BC98  0B0F               	andlw	15
 30675  01BC9A  0F10               	addlw	16
 30676  01BC9C  EC01  F0DA         	call	_OLED_Command
 30677  01BCA0  0012               	return		;funcret
 30678  01BCA2                     __end_of_OLED_YX:
 30679                           	opt callstack 0
 30680                           
 30681 ;; *************** function _OLED_WriteString *****************
 30682 ;; Defined at:
 30683 ;;		line 262 in file "oled.c"
 30684 ;; Parameters:    Size  Location     Type
 30685 ;;  s               2   33[BANK2 ] PTR unsigned char 
 30686 ;;		 -> ftoa@buf(17), OLED_RAM_Buffer(68), STR_61(1), STR_60(1), 
 30687 ;;		 -> OLED_WriteInteger@s(20), 
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;		None
 30690 ;; Return value:  Size  Location     Type
 30691 ;;                  1    wreg      void 
 30692 ;; Registers used:
 30693 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30694 ;; Tracked objects:
 30695 ;;		On entry : 0/0
 30696 ;;		On exit  : 0/0
 30697 ;;		Unchanged: 0/0
 30698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30699 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30702 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30703 ;;Total ram usage:        2 bytes
 30704 ;; Hardware stack levels used:    1
 30705 ;; Hardware stack levels required when called:   15
 30706 ;; This function calls:
 30707 ;;		_OLED_PutChar
 30708 ;; This function is called by:
 30709 ;;		_OLED_UpdateFromRAMBuffer
 30710 ;;		_OLED_WriteInteger
 30711 ;;		_OLED_WriteFloat
 30712 ;; This function uses a non-reentrant model
 30713 ;;
 30714                           
 30715                           	psect	text105
 30716  01B69E                     __ptext105:
 30717                           	opt callstack 0
 30718  01B69E                     _OLED_WriteString:
 30719                           	opt callstack 13
 30720                           
 30721                           ;oled.c: 264: while(*s) {
 30722                           
 30723                           ;incstack = 0
 30724  01B69E  D016               	goto	l20129
 30725  01B6A0                     l20125:
 30726                           
 30727                           ;oled.c: 266: OLED_PutChar(*s++);
 30728  01B6A0  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30729  01B6A4  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30730  01B6A8  0E00               	movlw	low (__mediumconst shr (0+16))
 30731  01B6AA  6EF8               	movwf	tblptru,c
 30732  01B6AC  0E0E               	movlw	(high __ramtop+-1)
 30733  01B6AE  64F7               	cpfsgt	tblptrh,c
 30734  01B6B0  D003               	bra	u25487
 30735  01B6B2  0008               	tblrd		*
 30736  01B6B4  50F5               	movf	tablat,w,c
 30737  01B6B6  D005               	bra	u25480
 30738  01B6B8                     u25487:
 30739  01B6B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 30740  01B6BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 30741  01B6C0  50EF               	movf	indf0,w,c
 30742  01B6C2                     u25480:
 30743  01B6C2  ECBB  F0D3         	call	_OLED_PutChar
 30744  01B6C6  0102               	movlb	2	; () banked
 30745  01B6C8  4B21               	infsnz	OLED_WriteString@s& (0+255),f,b
 30746  01B6CA  2B22               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 30747  01B6CC                     l20129:
 30748  01B6CC  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30749  01B6D0  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30750  01B6D4  0E00               	movlw	low (__mediumconst shr (0+16))
 30751  01B6D6  6EF8               	movwf	tblptru,c
 30752  01B6D8  0E0E               	movlw	(high __ramtop+-1)
 30753  01B6DA  64F7               	cpfsgt	tblptrh,c
 30754  01B6DC  D003               	bra	u25497
 30755  01B6DE  0008               	tblrd		*
 30756  01B6E0  50F5               	movf	tablat,w,c
 30757  01B6E2  D005               	bra	u25490
 30758  01B6E4                     u25497:
 30759  01B6E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 30760  01B6E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 30761  01B6EC  50EF               	movf	indf0,w,c
 30762  01B6EE                     u25490:
 30763  01B6EE  0900               	iorlw	0
 30764  01B6F0  B4D8               	btfsc	status,2,c
 30765  01B6F2  0012               	return	
 30766  01B6F4  D7D5               	goto	l20125
 30767  01B6F6                     __end_of_OLED_WriteString:
 30768                           	opt callstack 0
 30769                           
 30770 ;; *************** function _OLED_Init *****************
 30771 ;; Defined at:
 30772 ;;		line 174 in file "oled.c"
 30773 ;; Parameters:    Size  Location     Type
 30774 ;;		None
 30775 ;; Auto vars:     Size  Location     Type
 30776 ;;		None
 30777 ;; Return value:  Size  Location     Type
 30778 ;;                  1    wreg      void 
 30779 ;; Registers used:
 30780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30781 ;; Tracked objects:
 30782 ;;		On entry : 0/0
 30783 ;;		On exit  : 0/0
 30784 ;;		Unchanged: 0/0
 30785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;Total ram usage:        0 bytes
 30791 ;; Hardware stack levels used:    1
 30792 ;; Hardware stack levels required when called:   15
 30793 ;; This function calls:
 30794 ;;		_OLED_Command
 30795 ;; This function is called by:
 30796 ;;		_main
 30797 ;; This function uses a non-reentrant model
 30798 ;;
 30799                           
 30800                           	psect	text106
 30801  01AD92                     __ptext106:
 30802                           	opt callstack 0
 30803  01AD92                     _OLED_Init:
 30804                           	opt callstack 15
 30805                           
 30806                           ;oled.c: 176: OLED_Command(0xAE);
 30807                           
 30808                           ;incstack = 0
 30809  01AD92  0EAE               	movlw	174
 30810  01AD94  EC01  F0DA         	call	_OLED_Command
 30811                           
 30812                           ;oled.c: 177: OLED_Command(0xD5);
 30813  01AD98  0ED5               	movlw	213
 30814  01AD9A  EC01  F0DA         	call	_OLED_Command
 30815                           
 30816                           ;oled.c: 178: OLED_Command(0x80);
 30817  01AD9E  0E80               	movlw	128
 30818  01ADA0  EC01  F0DA         	call	_OLED_Command
 30819                           
 30820                           ;oled.c: 179: OLED_Command(0xA8);
 30821  01ADA4  0EA8               	movlw	168
 30822  01ADA6  EC01  F0DA         	call	_OLED_Command
 30823                           
 30824                           ;oled.c: 180: OLED_Command(0x1F);
 30825  01ADAA  0E1F               	movlw	31
 30826  01ADAC  EC01  F0DA         	call	_OLED_Command
 30827                           
 30828                           ;oled.c: 181: OLED_Command(0xD3);
 30829  01ADB0  0ED3               	movlw	211
 30830  01ADB2  EC01  F0DA         	call	_OLED_Command
 30831                           
 30832                           ;oled.c: 182: OLED_Command(0x0);
 30833  01ADB6  0E00               	movlw	0
 30834  01ADB8  EC01  F0DA         	call	_OLED_Command
 30835                           
 30836                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
 30837  01ADBC  0E40               	movlw	64
 30838  01ADBE  EC01  F0DA         	call	_OLED_Command
 30839                           
 30840                           ;oled.c: 184: OLED_Command(0x8D);
 30841  01ADC2  0E8D               	movlw	141
 30842  01ADC4  EC01  F0DA         	call	_OLED_Command
 30843                           
 30844                           ;oled.c: 185: OLED_Command(0xAF);
 30845  01ADC8  0EAF               	movlw	175
 30846  01ADCA  EC01  F0DA         	call	_OLED_Command
 30847                           
 30848                           ;oled.c: 186: OLED_Command(0x20);
 30849  01ADCE  0E20               	movlw	32
 30850  01ADD0  EC01  F0DA         	call	_OLED_Command
 30851                           
 30852                           ;oled.c: 187: OLED_Command(0x00);
 30853  01ADD4  0E00               	movlw	0
 30854  01ADD6  EC01  F0DA         	call	_OLED_Command
 30855                           
 30856                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 30857  01ADDA  0EA1               	movlw	161
 30858  01ADDC  EC01  F0DA         	call	_OLED_Command
 30859                           
 30860                           ;oled.c: 189: OLED_Command(0xC8);
 30861  01ADE0  0EC8               	movlw	200
 30862  01ADE2  EC01  F0DA         	call	_OLED_Command
 30863                           
 30864                           ;oled.c: 190: OLED_Command(0xDA);
 30865  01ADE6  0EDA               	movlw	218
 30866  01ADE8  EC01  F0DA         	call	_OLED_Command
 30867                           
 30868                           ;oled.c: 191: OLED_Command(0x02);
 30869  01ADEC  0E02               	movlw	2
 30870  01ADEE  EC01  F0DA         	call	_OLED_Command
 30871                           
 30872                           ;oled.c: 192: OLED_Command(0x81);
 30873  01ADF2  0E81               	movlw	129
 30874  01ADF4  EC01  F0DA         	call	_OLED_Command
 30875                           
 30876                           ;oled.c: 193: OLED_Command(0x8F);
 30877  01ADF8  0E8F               	movlw	143
 30878  01ADFA  EC01  F0DA         	call	_OLED_Command
 30879                           
 30880                           ;oled.c: 194: OLED_Command(0xD9);
 30881  01ADFE  0ED9               	movlw	217
 30882  01AE00  EC01  F0DA         	call	_OLED_Command
 30883                           
 30884                           ;oled.c: 195: OLED_Command(0xF1);
 30885  01AE04  0EF1               	movlw	241
 30886  01AE06  EC01  F0DA         	call	_OLED_Command
 30887                           
 30888                           ;oled.c: 196: OLED_Command(0xDB);
 30889  01AE0A  0EDB               	movlw	219
 30890  01AE0C  EC01  F0DA         	call	_OLED_Command
 30891                           
 30892                           ;oled.c: 197: OLED_Command(0x40);
 30893  01AE10  0E40               	movlw	64
 30894  01AE12  EC01  F0DA         	call	_OLED_Command
 30895                           
 30896                           ;oled.c: 198: OLED_Command(0xA4);
 30897  01AE16  0EA4               	movlw	164
 30898  01AE18  EC01  F0DA         	call	_OLED_Command
 30899                           
 30900                           ;oled.c: 199: OLED_Command(0xA6);
 30901  01AE1C  0EA6               	movlw	166
 30902  01AE1E  EC01  F0DA         	call	_OLED_Command
 30903                           
 30904                           ;oled.c: 200: OLED_Command(0xAF);
 30905  01AE22  0EAF               	movlw	175
 30906  01AE24  EC01  F0DA         	call	_OLED_Command
 30907  01AE28  0012               	return		;funcret
 30908  01AE2A                     __end_of_OLED_Init:
 30909                           	opt callstack 0
 30910                           
 30911 ;; *************** function _OLED_Command *****************
 30912 ;; Defined at:
 30913 ;;		line 122 in file "oled.c"
 30914 ;; Parameters:    Size  Location     Type
 30915 ;;  temp            1    wreg     unsigned char 
 30916 ;; Auto vars:     Size  Location     Type
 30917 ;;  temp            1   16[BANK2 ] unsigned char 
 30918 ;;  data_array      2   18[BANK2 ] unsigned char [2]
 30919 ;;  length          1    0        unsigned char 
 30920 ;; Return value:  Size  Location     Type
 30921 ;;                  1    wreg      void 
 30922 ;; Registers used:
 30923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30924 ;; Tracked objects:
 30925 ;;		On entry : 0/0
 30926 ;;		On exit  : 0/0
 30927 ;;		Unchanged: 0/0
 30928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30932 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30933 ;;Total ram usage:        4 bytes
 30934 ;; Hardware stack levels used:    1
 30935 ;; Hardware stack levels required when called:   14
 30936 ;; This function calls:
 30937 ;;		_I2C2_MasterWrite
 30938 ;; This function is called by:
 30939 ;;		_OLED_Init
 30940 ;;		_OLED_YX
 30941 ;; This function uses a non-reentrant model
 30942 ;;
 30943                           
 30944                           	psect	text107
 30945  01B402                     __ptext107:
 30946                           	opt callstack 0
 30947  01B402                     _OLED_Command:
 30948                           	opt callstack 13
 30949                           
 30950                           ;incstack = 0
 30951                           ;OLED_Command@temp stored from wreg
 30952  01B402  0102               	movlb	2	; () banked
 30953  01B404  6F10               	movwf	OLED_Command@temp& (0+255),b
 30954                           
 30955                           ;oled.c: 124: uint8_t length;;oled.c: 126: uint8_t data_array[2];;oled.c: 127: data_arra
      +                          y[0] = 0x00;
 30956  01B406  0E00               	movlw	0
 30957  01B408  0102               	movlb	2	; () banked
 30958  01B40A  6F12               	movwf	OLED_Command@data_array& (0+255),b
 30959                           
 30960                           ; BSR set to: 2
 30961                           ;oled.c: 128: data_array[1] = temp;
 30962  01B40C  C210  F213         	movff	OLED_Command@temp,OLED_Command@data_array+1
 30963                           
 30964                           ; BSR set to: 2
 30965                           ;oled.c: 133: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 30966                           
 30967                           ; BSR set to: 2
 30968  01B410  0E12               	movlw	low OLED_Command@data_array
 30969  01B412  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30970  01B414  0E02               	movlw	high OLED_Command@data_array
 30971  01B416  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30972  01B418  0E02               	movlw	2
 30973  01B41A  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30974  01B41C  0E00               	movlw	0
 30975  01B41E  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30976  01B420  0E3C               	movlw	60
 30977  01B422  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30978  01B424  0EA8               	movlw	low _I2C_STATUS
 30979  01B426  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30980  01B428  0E01               	movlw	high _I2C_STATUS
 30981  01B42A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30982  01B42C  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 30983  01B430                     l19477:
 30984  01B430  0E02               	movlw	2
 30985  01B432  0101               	movlb	1	; () banked
 30986  01B434  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30987  01B436  B4D8               	btfsc	status,2,c
 30988  01B438  D7FB               	goto	l19477
 30989                           
 30990                           ; BSR set to: 1
 30991                           ;oled.c: 137: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 138: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 139: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 140: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 141: I2C_STATUS == I2C2_LOST_STATE ) {
 30992  01B43A  05A8               	decf	_I2C_STATUS& (0+255),w,b
 30993  01B43C  B4D8               	btfsc	status,2,c
 30994  01B43E  D010               	goto	u24620
 30995                           
 30996                           ; BSR set to: 1
 30997  01B440  0E03               	movlw	3
 30998  01B442  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30999  01B444  B4D8               	btfsc	status,2,c
 31000  01B446  D00C               	goto	u24620
 31001                           
 31002                           ; BSR set to: 1
 31003  01B448  0E04               	movlw	4
 31004  01B44A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31005  01B44C  B4D8               	btfsc	status,2,c
 31006  01B44E  D008               	goto	u24620
 31007                           
 31008                           ; BSR set to: 1
 31009  01B450  0E05               	movlw	5
 31010  01B452  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31011  01B454  B4D8               	btfsc	status,2,c
 31012  01B456  D004               	goto	u24620
 31013                           
 31014                           ; BSR set to: 1
 31015  01B458  0E06               	movlw	6
 31016  01B45A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31017  01B45C  A4D8               	btfss	status,2,c
 31018  01B45E  0012               	return	
 31019  01B460                     u24620:
 31020                           
 31021                           ; BSR set to: 1
 31022                           ;oled.c: 142: error_handler.I2C_OLED_error_flag = 1;
 31023  01B460  0E01               	movlw	1
 31024  01B462  0100               	movlb	0	; () banked
 31025  01B464  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31026  01B466  0012               	return		;funcret
 31027  01B468                     __end_of_OLED_Command:
 31028                           	opt callstack 0
 31029                           
 31030 ;; *************** function _OLED_Clear *****************
 31031 ;; Defined at:
 31032 ;;		line 247 in file "oled.c"
 31033 ;; Parameters:    Size  Location     Type
 31034 ;;		None
 31035 ;; Auto vars:     Size  Location     Type
 31036 ;;  col             2   35[BANK2 ] unsigned int 
 31037 ;;  row             2   33[BANK2 ] unsigned int 
 31038 ;; Return value:  Size  Location     Type
 31039 ;;                  1    wreg      void 
 31040 ;; Registers used:
 31041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31042 ;; Tracked objects:
 31043 ;;		On entry : 0/0
 31044 ;;		On exit  : 0/0
 31045 ;;		Unchanged: 0/0
 31046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31048 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31050 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31051 ;;Total ram usage:        4 bytes
 31052 ;; Hardware stack levels used:    1
 31053 ;; Hardware stack levels required when called:   15
 31054 ;; This function calls:
 31055 ;;		_OLED_PutChar
 31056 ;; This function is called by:
 31057 ;;		_main
 31058 ;; This function uses a non-reentrant model
 31059 ;;
 31060                           
 31061                           	psect	text108
 31062  01BE26                     __ptext108:
 31063                           	opt callstack 0
 31064  01BE26                     _OLED_Clear:
 31065                           	opt callstack 15
 31066                           
 31067                           ;oled.c: 249: for(uint16_t row = 0; row < 8; row++) {
 31068                           
 31069                           ;incstack = 0
 31070  01BE26  0E00               	movlw	0
 31071  01BE28  0102               	movlb	2	; () banked
 31072  01BE2A  6F22               	movwf	(OLED_Clear@row+1)& (0+255),b
 31073  01BE2C  0E00               	movlw	0
 31074  01BE2E  6F21               	movwf	OLED_Clear@row& (0+255),b
 31075  01BE30                     l21731:
 31076                           
 31077                           ; BSR set to: 2
 31078                           ;oled.c: 251: for(uint16_t col = 0; col < 16; col++) {
 31079  01BE30  0E00               	movlw	0
 31080  01BE32  6F24               	movwf	(OLED_Clear@col+1)& (0+255),b
 31081  01BE34  0E00               	movlw	0
 31082  01BE36  6F23               	movwf	OLED_Clear@col& (0+255),b
 31083  01BE38                     l21737:
 31084                           
 31085                           ; BSR set to: 2
 31086                           ;oled.c: 253: OLED_PutChar('\0');
 31087  01BE38  0E00               	movlw	0
 31088  01BE3A  ECBB  F0D3         	call	_OLED_PutChar
 31089  01BE3E  0102               	movlb	2	; () banked
 31090  01BE40  4B23               	infsnz	OLED_Clear@col& (0+255),f,b
 31091  01BE42  2B24               	incf	(OLED_Clear@col+1)& (0+255),f,b
 31092                           
 31093                           ; BSR set to: 2
 31094  01BE44  5124               	movf	(OLED_Clear@col+1)& (0+255),w,b
 31095  01BE46  E104               	bnz	u27790
 31096  01BE48  0E10               	movlw	16
 31097  01BE4A  5D23               	subwf	OLED_Clear@col& (0+255),w,b
 31098  01BE4C  A0D8               	btfss	status,0,c
 31099  01BE4E  D7F4               	goto	l21737
 31100  01BE50                     u27790:
 31101                           
 31102                           ; BSR set to: 2
 31103  01BE50  4B21               	infsnz	OLED_Clear@row& (0+255),f,b
 31104  01BE52  2B22               	incf	(OLED_Clear@row+1)& (0+255),f,b
 31105                           
 31106                           ; BSR set to: 2
 31107  01BE54  5122               	movf	(OLED_Clear@row+1)& (0+255),w,b
 31108  01BE56  E105               	bnz	u27800
 31109  01BE58  0E08               	movlw	8
 31110  01BE5A  5D21               	subwf	OLED_Clear@row& (0+255),w,b
 31111  01BE5C  B0D8               	btfsc	status,0,c
 31112  01BE5E  0012               	return	
 31113  01BE60  D7E7               	goto	l21731
 31114  01BE62                     u27800:
 31115                           
 31116                           ; BSR set to: 2
 31117  01BE62  0012               	return		;funcret
 31118  01BE64                     __end_of_OLED_Clear:
 31119                           	opt callstack 0
 31120                           
 31121 ;; *************** function _OLED_PutChar *****************
 31122 ;; Defined at:
 31123 ;;		line 212 in file "oled.c"
 31124 ;; Parameters:    Size  Location     Type
 31125 ;;  ch              1    wreg     unsigned char 
 31126 ;; Auto vars:     Size  Location     Type
 31127 ;;  ch              1   32[BANK2 ] unsigned char 
 31128 ;;  data_array      9   20[BANK2 ] unsigned char [9]
 31129 ;;  input_base      2   29[BANK2 ] PTR const unsigned char 
 31130 ;;		 -> OledFont(768), 
 31131 ;;  length          1    0        unsigned char 
 31132 ;; Return value:  Size  Location     Type
 31133 ;;                  1    wreg      void 
 31134 ;; Registers used:
 31135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31136 ;; Tracked objects:
 31137 ;;		On entry : 0/0
 31138 ;;		On exit  : 0/0
 31139 ;;		Unchanged: 0/0
 31140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31142 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31143 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31144 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31145 ;;Total ram usage:       17 bytes
 31146 ;; Hardware stack levels used:    1
 31147 ;; Hardware stack levels required when called:   14
 31148 ;; This function calls:
 31149 ;;		_I2C2_MasterWrite
 31150 ;;		_memmove
 31151 ;; This function is called by:
 31152 ;;		_OLED_Clear
 31153 ;;		_OLED_WriteString
 31154 ;; This function uses a non-reentrant model
 31155 ;;
 31156                           
 31157                           	psect	text109
 31158  01A776                     __ptext109:
 31159                           	opt callstack 0
 31160  01A776                     _OLED_PutChar:
 31161                           	opt callstack 13
 31162                           
 31163                           ; BSR set to: 2
 31164                           ;incstack = 0
 31165                           ;OLED_PutChar@ch stored from wreg
 31166  01A776  0102               	movlb	2	; () banked
 31167  01A778  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 31168                           
 31169                           ;oled.c: 214: if((ch < 32) || (ch > 127)) {
 31170  01A77A  0E1F               	movlw	31
 31171  01A77C  0102               	movlb	2	; () banked
 31172  01A77E  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 31173  01A780  D003               	goto	u24640
 31174                           
 31175                           ; BSR set to: 2
 31176  01A782  0E7F               	movlw	127
 31177  01A784  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 31178  01A786  D002               	goto	l1972
 31179  01A788                     u24640:
 31180                           
 31181                           ; BSR set to: 2
 31182                           ;oled.c: 216: ch = ' ';
 31183  01A788  0E20               	movlw	32
 31184  01A78A  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 31185  01A78C                     l1972:
 31186                           
 31187                           ; BSR set to: 2
 31188                           ;oled.c: 218: };oled.c: 220: uint8_t length;;oled.c: 222: uint8_t data_array[9];;oled.c:
      +                           224: data_array[0] = 0x40;
 31189  01A78C  0E40               	movlw	64
 31190  01A78E  6F14               	movwf	OLED_PutChar@data_array& (0+255),b
 31191                           
 31192                           ; BSR set to: 2
 31193                           ;oled.c: 226: const uint8_t *input_base = &OledFont[ch - 32][0];
 31194  01A790  0E00               	movlw	0
 31195  01A792  6F10               	movwf	??_OLED_PutChar& (0+255),b
 31196  01A794  0EFF               	movlw	255
 31197  01A796  6F11               	movwf	(??_OLED_PutChar+1)& (0+255),b
 31198  01A798  5120               	movf	OLED_PutChar@ch& (0+255),w,b
 31199  01A79A  6F12               	movwf	(??_OLED_PutChar+2)& (0+255),b
 31200  01A79C  6B13               	clrf	(??_OLED_PutChar+3)& (0+255),b
 31201  01A79E  90D8               	bcf	status,0,c
 31202  01A7A0  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31203  01A7A2  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31204  01A7A4  90D8               	bcf	status,0,c
 31205  01A7A6  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31206  01A7A8  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31207  01A7AA  90D8               	bcf	status,0,c
 31208  01A7AC  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31209  01A7AE  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31210  01A7B0  5110               	movf	??_OLED_PutChar& (0+255),w,b
 31211  01A7B2  2712               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 31212  01A7B4  5111               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 31213  01A7B6  2313               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 31214  01A7B8  0EAF               	movlw	low _OledFont
 31215  01A7BA  2512               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 31216  01A7BC  6F1D               	movwf	OLED_PutChar@input_base& (0+255),b
 31217  01A7BE  0EE4               	movlw	high _OledFont
 31218  01A7C0  2113               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 31219  01A7C2  6F1E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 31220                           
 31221                           ; BSR set to: 2
 31222                           ;oled.c: 228: memmove(data_array + 1, input_base, 8);
 31223  01A7C4  0E15               	movlw	low (OLED_PutChar@data_array+1)
 31224  01A7C6  6F00               	movwf	memmove@d1& (0+255),b
 31225  01A7C8  0E02               	movlw	high (OLED_PutChar@data_array+1)
 31226  01A7CA  6F01               	movwf	(memmove@d1+1)& (0+255),b
 31227  01A7CC  C21D  F202         	movff	OLED_PutChar@input_base,memmove@s1
 31228  01A7D0  C21E  F203         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 31229  01A7D4  0E00               	movlw	0
 31230  01A7D6  6F05               	movwf	(memmove@n+1)& (0+255),b
 31231  01A7D8  0E08               	movlw	8
 31232  01A7DA  6F04               	movwf	memmove@n& (0+255),b
 31233  01A7DC  EC33  F0D5         	call	_memmove	;wreg free
 31234                           
 31235                           ;oled.c: 233: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 31236  01A7E0  0E14               	movlw	low OLED_PutChar@data_array
 31237  01A7E2  0102               	movlb	2	; () banked
 31238  01A7E4  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31239  01A7E6  0E02               	movlw	high OLED_PutChar@data_array
 31240  01A7E8  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31241  01A7EA  0E09               	movlw	9
 31242  01A7EC  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31243  01A7EE  0E00               	movlw	0
 31244  01A7F0  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31245  01A7F2  0E3C               	movlw	60
 31246  01A7F4  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31247  01A7F6  0EA8               	movlw	low _I2C_STATUS
 31248  01A7F8  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31249  01A7FA  0E01               	movlw	high _I2C_STATUS
 31250  01A7FC  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31251  01A7FE  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31252  01A802                     l19505:
 31253  01A802  0E02               	movlw	2
 31254  01A804  0101               	movlb	1	; () banked
 31255  01A806  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31256  01A808  B4D8               	btfsc	status,2,c
 31257  01A80A  D7FB               	goto	l19505
 31258                           
 31259                           ; BSR set to: 1
 31260                           ;oled.c: 237: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 238: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 239: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 240: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 241: I2C_STATUS == I2C2_LOST_STATE ) {
 31261  01A80C  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31262  01A80E  B4D8               	btfsc	status,2,c
 31263  01A810  D010               	goto	u24700
 31264                           
 31265                           ; BSR set to: 1
 31266  01A812  0E03               	movlw	3
 31267  01A814  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31268  01A816  B4D8               	btfsc	status,2,c
 31269  01A818  D00C               	goto	u24700
 31270                           
 31271                           ; BSR set to: 1
 31272  01A81A  0E04               	movlw	4
 31273  01A81C  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31274  01A81E  B4D8               	btfsc	status,2,c
 31275  01A820  D008               	goto	u24700
 31276                           
 31277                           ; BSR set to: 1
 31278  01A822  0E05               	movlw	5
 31279  01A824  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31280  01A826  B4D8               	btfsc	status,2,c
 31281  01A828  D004               	goto	u24700
 31282                           
 31283                           ; BSR set to: 1
 31284  01A82A  0E06               	movlw	6
 31285  01A82C  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31286  01A82E  A4D8               	btfss	status,2,c
 31287  01A830  0012               	return	
 31288  01A832                     u24700:
 31289                           
 31290                           ; BSR set to: 1
 31291                           ;oled.c: 242: error_handler.I2C_OLED_error_flag = 1;
 31292  01A832  0E01               	movlw	1
 31293  01A834  0100               	movlb	0	; () banked
 31294  01A836  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31295  01A838  0012               	return		;funcret
 31296  01A83A                     __end_of_OLED_PutChar:
 31297                           	opt callstack 0
 31298                           
 31299 ;; *************** function _memmove *****************
 31300 ;; Defined at:
 31301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 31302 ;; Parameters:    Size  Location     Type
 31303 ;;  d1              2    0[BANK2 ] PTR void 
 31304 ;;		 -> OLED_PutChar@data_array(9), 
 31305 ;;  s1              2    2[BANK2 ] PTR const void 
 31306 ;;		 -> OledFont(768), 
 31307 ;;  n               2    4[BANK2 ] unsigned int 
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;  s               2   10[BANK2 ] PTR const unsigned char 
 31310 ;;		 -> OledFont(768), 
 31311 ;;  d               2    8[BANK2 ] PTR unsigned char 
 31312 ;;		 -> OLED_PutChar@data_array(9), 
 31313 ;; Return value:  Size  Location     Type
 31314 ;;                  2    0[BANK2 ] PTR void 
 31315 ;; Registers used:
 31316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31317 ;; Tracked objects:
 31318 ;;		On entry : 0/0
 31319 ;;		On exit  : 0/0
 31320 ;;		Unchanged: 0/0
 31321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31322 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31323 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31324 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31325 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31326 ;;Total ram usage:       12 bytes
 31327 ;; Hardware stack levels used:    1
 31328 ;; Hardware stack levels required when called:   11
 31329 ;; This function calls:
 31330 ;;		Nothing
 31331 ;; This function is called by:
 31332 ;;		_OLED_PutChar
 31333 ;; This function uses a non-reentrant model
 31334 ;;
 31335                           
 31336                           	psect	text110
 31337  01AA66                     __ptext110:
 31338                           	opt callstack 0
 31339  01AA66                     _memmove:
 31340                           	opt callstack 15
 31341                           
 31342                           ;incstack = 0
 31343  01AA66  C202  F20A         	movff	memmove@s1,memmove@s
 31344  01AA6A  C203  F20B         	movff	memmove@s1+1,memmove@s+1
 31345  01AA6E  C200  F208         	movff	memmove@d1,memmove@d
 31346  01AA72  C201  F209         	movff	memmove@d1+1,memmove@d+1
 31347  01AA76  0102               	movlb	2	; () banked
 31348  01AA78  5108               	movf	memmove@d& (0+255),w,b
 31349  01AA7A  5D0A               	subwf	memmove@s& (0+255),w,b
 31350  01AA7C  5109               	movf	(memmove@d+1)& (0+255),w,b
 31351  01AA7E  590B               	subwfb	(memmove@s+1)& (0+255),w,b
 31352  01AA80  B0D8               	btfsc	status,0,c
 31353  01AA82  D02F               	goto	l18629
 31354                           
 31355                           ; BSR set to: 2
 31356  01AA84  5104               	movf	memmove@n& (0+255),w,b
 31357  01AA86  250A               	addwf	memmove@s& (0+255),w,b
 31358  01AA88  6F06               	movwf	??_memmove& (0+255),b
 31359  01AA8A  5105               	movf	(memmove@n+1)& (0+255),w,b
 31360  01AA8C  210B               	addwfc	(memmove@s+1)& (0+255),w,b
 31361  01AA8E  6F07               	movwf	(??_memmove+1)& (0+255),b
 31362  01AA90  5106               	movf	??_memmove& (0+255),w,b
 31363  01AA92  5D08               	subwf	memmove@d& (0+255),w,b
 31364  01AA94  5107               	movf	(??_memmove+1)& (0+255),w,b
 31365  01AA96  5909               	subwfb	(memmove@d+1)& (0+255),w,b
 31366  01AA98  B0D8               	btfsc	status,0,c
 31367  01AA9A  D023               	goto	l18629
 31368                           
 31369                           ; BSR set to: 2
 31370  01AA9C  5104               	movf	memmove@n& (0+255),w,b
 31371  01AA9E  270A               	addwf	memmove@s& (0+255),f,b
 31372  01AAA0  5105               	movf	(memmove@n+1)& (0+255),w,b
 31373  01AAA2  230B               	addwfc	(memmove@s+1)& (0+255),f,b
 31374  01AAA4  5104               	movf	memmove@n& (0+255),w,b
 31375  01AAA6  2708               	addwf	memmove@d& (0+255),f,b
 31376  01AAA8  5105               	movf	(memmove@n+1)& (0+255),w,b
 31377  01AAAA  2309               	addwfc	(memmove@d+1)& (0+255),f,b
 31378  01AAAC                     l18625:
 31379                           
 31380                           ; BSR set to: 2
 31381  01AAAC  070A               	decf	memmove@s& (0+255),f,b
 31382  01AAAE  A0D8               	btfss	status,0,c
 31383  01AAB0  070B               	decf	(memmove@s+1)& (0+255),f,b
 31384  01AAB2  C20A  FFF6         	movff	memmove@s,tblptrl
 31385  01AAB6  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31386  01AABA                     	if	0	;tblptru may be non-zero
 31387  01AABA                     	endif
 31388  01AABA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31389  01AABA  0E00               	movlw	low (__mediumconst shr (0+16))
 31390  01AABC  6EF8               	movwf	tblptru,c
 31391  01AABE                     	endif
 31392  01AABE  0708               	decf	memmove@d& (0+255),f,b
 31393  01AAC0  A0D8               	btfss	status,0,c
 31394  01AAC2  0709               	decf	(memmove@d+1)& (0+255),f,b
 31395  01AAC4  C208  FFD9         	movff	memmove@d,fsr2l
 31396  01AAC8  C209  FFDA         	movff	memmove@d+1,fsr2h
 31397  01AACC  0008               	tblrd		*
 31398  01AACE  CFF5 FFDF          	movff	tablat,indf2
 31399                           
 31400                           ; BSR set to: 2
 31401  01AAD2  0704               	decf	memmove@n& (0+255),f,b
 31402  01AAD4  A0D8               	btfss	status,0,c
 31403  01AAD6  0705               	decf	(memmove@n+1)& (0+255),f,b
 31404  01AAD8  5104               	movf	memmove@n& (0+255),w,b
 31405  01AADA  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31406  01AADC  B4D8               	btfsc	status,2,c
 31407  01AADE  0012               	return	
 31408  01AAE0  D7E5               	goto	l18625
 31409  01AAE2                     l18629:
 31410                           
 31411                           ; BSR set to: 2
 31412  01AAE2  5104               	movf	memmove@n& (0+255),w,b
 31413  01AAE4  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31414  01AAE6  B4D8               	btfsc	status,2,c
 31415  01AAE8  0012               	return	
 31416                           
 31417                           ; BSR set to: 2
 31418  01AAEA  C20A  FFF6         	movff	memmove@s,tblptrl
 31419  01AAEE  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31420  01AAF2                     	if	0	;tblptru may be non-zero
 31421  01AAF2                     	endif
 31422  01AAF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31423  01AAF2  0E00               	movlw	low (__mediumconst shr (0+16))
 31424  01AAF4  6EF8               	movwf	tblptru,c
 31425  01AAF6                     	endif
 31426  01AAF6  C208  FFD9         	movff	memmove@d,fsr2l
 31427  01AAFA  C209  FFDA         	movff	memmove@d+1,fsr2h
 31428  01AAFE  0008               	tblrd		*
 31429  01AB00  CFF5 FFDF          	movff	tablat,indf2
 31430                           
 31431                           ; BSR set to: 2
 31432  01AB04  4B0A               	infsnz	memmove@s& (0+255),f,b
 31433  01AB06  2B0B               	incf	(memmove@s+1)& (0+255),f,b
 31434                           
 31435                           ; BSR set to: 2
 31436  01AB08  4B08               	infsnz	memmove@d& (0+255),f,b
 31437  01AB0A  2B09               	incf	(memmove@d+1)& (0+255),f,b
 31438                           
 31439                           ; BSR set to: 2
 31440  01AB0C  0704               	decf	memmove@n& (0+255),f,b
 31441  01AB0E  A0D8               	btfss	status,0,c
 31442  01AB10  0705               	decf	(memmove@n+1)& (0+255),f,b
 31443  01AB12  D7E7               	goto	l18629
 31444  01AB14                     __end_of_memmove:
 31445                           	opt callstack 0
 31446                           
 31447 ;; *************** function _LM73TempSensorInitialize *****************
 31448 ;; Defined at:
 31449 ;;		line 13 in file "LM73_I2C.c"
 31450 ;; Parameters:    Size  Location     Type
 31451 ;;		None
 31452 ;; Auto vars:     Size  Location     Type
 31453 ;;  output_data_    2   16[BANK2 ] unsigned char [2]
 31454 ;;  length          1    0        unsigned char 
 31455 ;; Return value:  Size  Location     Type
 31456 ;;                  1    wreg      void 
 31457 ;; Registers used:
 31458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31459 ;; Tracked objects:
 31460 ;;		On entry : 0/0
 31461 ;;		On exit  : 0/0
 31462 ;;		Unchanged: 0/0
 31463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31465 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31467 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31468 ;;Total ram usage:        3 bytes
 31469 ;; Hardware stack levels used:    1
 31470 ;; Hardware stack levels required when called:   14
 31471 ;; This function calls:
 31472 ;;		_I2C2_MasterWrite
 31473 ;; This function is called by:
 31474 ;;		_main
 31475 ;; This function uses a non-reentrant model
 31476 ;;
 31477                           
 31478                           	psect	text111
 31479  018EEC                     __ptext111:
 31480                           	opt callstack 0
 31481  018EEC                     _LM73TempSensorInitialize:
 31482                           	opt callstack 16
 31483                           
 31484                           ;LM73_I2C.c: 16: PIE0bits.INT1IE = 0;
 31485                           
 31486                           ; BSR set to: 2
 31487                           ;incstack = 0
 31488  018EEC  010E               	movlb	14	; () banked
 31489  018EEE  93C2               	bcf	194,1,b	;volatile
 31490                           
 31491                           ;LM73_I2C.c: 17: PIE0bits.INT2IE = 0;
 31492  018EF0  95C2               	bcf	194,2,b	;volatile
 31493  018EF2                     l22243:
 31494  018EF2  0E02               	movlw	2
 31495  018EF4  0101               	movlb	1	; () banked
 31496  018EF6  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31497  018EF8  B4D8               	btfsc	status,2,c
 31498  018EFA  D7FB               	goto	l22243
 31499                           
 31500                           ; BSR set to: 1
 31501                           ;LM73_I2C.c: 22: uint8_t length;;LM73_I2C.c: 23: uint8_t output_data_array[2];;LM73_I2C.
      +                          c: 24: output_data_array[0] = 0x01;
 31502  018EFC  0E01               	movlw	1
 31503  018EFE  0102               	movlb	2	; () banked
 31504  018F00  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31505                           
 31506                           ;LM73_I2C.c: 25: output_data_array[1] = 0b01000000;
 31507  018F02  0E40               	movlw	64
 31508  018F04  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31509                           
 31510                           ; BSR set to: 2
 31511                           ;LM73_I2C.c: 27: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31512  018F06  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31513  018F08  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31514  018F0A  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31515  018F0C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31516  018F0E  0E02               	movlw	2
 31517  018F10  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31518  018F12  0E00               	movlw	0
 31519  018F14  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31520  018F16  0E4D               	movlw	77
 31521  018F18  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31522  018F1A  0EA8               	movlw	low _I2C_STATUS
 31523  018F1C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31524  018F1E  0E01               	movlw	high _I2C_STATUS
 31525  018F20  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31526  018F22  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31527  018F26                     l22249:
 31528  018F26  0E02               	movlw	2
 31529  018F28  0101               	movlb	1	; () banked
 31530  018F2A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31531  018F2C  B4D8               	btfsc	status,2,c
 31532  018F2E  D7FB               	goto	l22249
 31533                           
 31534                           ; BSR set to: 1
 31535                           ;LM73_I2C.c: 29: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 30: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 31: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 32: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 33: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31536  018F30  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31537  018F32  B4D8               	btfsc	status,2,c
 31538  018F34  D010               	goto	u28030
 31539                           
 31540                           ; BSR set to: 1
 31541  018F36  0E03               	movlw	3
 31542  018F38  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31543  018F3A  B4D8               	btfsc	status,2,c
 31544  018F3C  D00C               	goto	u28030
 31545                           
 31546                           ; BSR set to: 1
 31547  018F3E  0E04               	movlw	4
 31548  018F40  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31549  018F42  B4D8               	btfsc	status,2,c
 31550  018F44  D008               	goto	u28030
 31551                           
 31552                           ; BSR set to: 1
 31553  018F46  0E05               	movlw	5
 31554  018F48  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31555  018F4A  B4D8               	btfsc	status,2,c
 31556  018F4C  D004               	goto	u28030
 31557                           
 31558                           ; BSR set to: 1
 31559  018F4E  0E06               	movlw	6
 31560  018F50  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31561  018F52  A4D8               	btfss	status,2,c
 31562  018F54  D003               	goto	l22263
 31563  018F56                     u28030:
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;LM73_I2C.c: 34: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31567  018F56  0E01               	movlw	1
 31568  018F58  0100               	movlb	0	; () banked
 31569  018F5A  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31570  018F5C                     l22263:
 31571                           
 31572                           ;LM73_I2C.c: 35: };LM73_I2C.c: 38: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31573  018F5C  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31574  018F5E  0102               	movlb	2	; () banked
 31575  018F60  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31576  018F62  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31577  018F64  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31578  018F66  0E02               	movlw	2
 31579  018F68  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31580  018F6A  0E00               	movlw	0
 31581  018F6C  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31582  018F6E  0E4C               	movlw	76
 31583  018F70  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31584  018F72  0EA8               	movlw	low _I2C_STATUS
 31585  018F74  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31586  018F76  0E01               	movlw	high _I2C_STATUS
 31587  018F78  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31588  018F7A  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31589  018F7E                     l22265:
 31590  018F7E  0E02               	movlw	2
 31591  018F80  0101               	movlb	1	; () banked
 31592  018F82  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31593  018F84  B4D8               	btfsc	status,2,c
 31594  018F86  D7FB               	goto	l22265
 31595                           
 31596                           ; BSR set to: 1
 31597                           ;LM73_I2C.c: 40: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 41: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 42: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 43: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 44: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31598  018F88  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31599  018F8A  B4D8               	btfsc	status,2,c
 31600  018F8C  D010               	goto	u28090
 31601                           
 31602                           ; BSR set to: 1
 31603  018F8E  0E03               	movlw	3
 31604  018F90  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31605  018F92  B4D8               	btfsc	status,2,c
 31606  018F94  D00C               	goto	u28090
 31607                           
 31608                           ; BSR set to: 1
 31609  018F96  0E04               	movlw	4
 31610  018F98  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31611  018F9A  B4D8               	btfsc	status,2,c
 31612  018F9C  D008               	goto	u28090
 31613                           
 31614                           ; BSR set to: 1
 31615  018F9E  0E05               	movlw	5
 31616  018FA0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31617  018FA2  B4D8               	btfsc	status,2,c
 31618  018FA4  D004               	goto	u28090
 31619                           
 31620                           ; BSR set to: 1
 31621  018FA6  0E06               	movlw	6
 31622  018FA8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31623  018FAA  A4D8               	btfss	status,2,c
 31624  018FAC  D003               	goto	l22279
 31625  018FAE                     u28090:
 31626                           
 31627                           ; BSR set to: 1
 31628                           ;LM73_I2C.c: 45: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31629  018FAE  0E01               	movlw	1
 31630  018FB0  0100               	movlb	0	; () banked
 31631  018FB2  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31632  018FB4                     l22279:
 31633                           
 31634                           ;LM73_I2C.c: 46: };LM73_I2C.c: 49: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31635  018FB4  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31636  018FB6  0102               	movlb	2	; () banked
 31637  018FB8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31638  018FBA  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31639  018FBC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31640  018FBE  0E02               	movlw	2
 31641  018FC0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31642  018FC2  0E00               	movlw	0
 31643  018FC4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31644  018FC6  0E4E               	movlw	78
 31645  018FC8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31646  018FCA  0EA8               	movlw	low _I2C_STATUS
 31647  018FCC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31648  018FCE  0E01               	movlw	high _I2C_STATUS
 31649  018FD0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31650  018FD2  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31651  018FD6                     l22281:
 31652  018FD6  0E02               	movlw	2
 31653  018FD8  0101               	movlb	1	; () banked
 31654  018FDA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31655  018FDC  B4D8               	btfsc	status,2,c
 31656  018FDE  D7FB               	goto	l22281
 31657                           
 31658                           ; BSR set to: 1
 31659                           ;LM73_I2C.c: 51: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 52: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 53: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 54: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 55: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31660  018FE0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31661  018FE2  B4D8               	btfsc	status,2,c
 31662  018FE4  D010               	goto	u28150
 31663                           
 31664                           ; BSR set to: 1
 31665  018FE6  0E03               	movlw	3
 31666  018FE8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31667  018FEA  B4D8               	btfsc	status,2,c
 31668  018FEC  D00C               	goto	u28150
 31669                           
 31670                           ; BSR set to: 1
 31671  018FEE  0E04               	movlw	4
 31672  018FF0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31673  018FF2  B4D8               	btfsc	status,2,c
 31674  018FF4  D008               	goto	u28150
 31675                           
 31676                           ; BSR set to: 1
 31677  018FF6  0E05               	movlw	5
 31678  018FF8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31679  018FFA  B4D8               	btfsc	status,2,c
 31680  018FFC  D004               	goto	u28150
 31681                           
 31682                           ; BSR set to: 1
 31683  018FFE  0E06               	movlw	6
 31684  019000  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31685  019002  A4D8               	btfss	status,2,c
 31686  019004  D003               	goto	l1392
 31687  019006                     u28150:
 31688                           
 31689                           ; BSR set to: 1
 31690                           ;LM73_I2C.c: 56: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31691  019006  0E01               	movlw	1
 31692  019008  0100               	movlb	0	; () banked
 31693  01900A  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31694  01900C                     l1392:
 31695                           
 31696                           ;LM73_I2C.c: 57: };LM73_I2C.c: 60: output_data_array[0] = 0x04;
 31697  01900C  0E04               	movlw	4
 31698  01900E  0102               	movlb	2	; () banked
 31699  019010  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31700                           
 31701                           ;LM73_I2C.c: 61: output_data_array[1] = 0b11100000;
 31702  019012  0EE0               	movlw	224
 31703  019014  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31704                           
 31705                           ; BSR set to: 2
 31706                           ;LM73_I2C.c: 63: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31707  019016  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31708  019018  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31709  01901A  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31710  01901C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31711  01901E  0E02               	movlw	2
 31712  019020  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31713  019022  0E00               	movlw	0
 31714  019024  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31715  019026  0E4D               	movlw	77
 31716  019028  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31717  01902A  0EA8               	movlw	low _I2C_STATUS
 31718  01902C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31719  01902E  0E01               	movlw	high _I2C_STATUS
 31720  019030  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31721  019032  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31722  019036                     l22297:
 31723  019036  0E02               	movlw	2
 31724  019038  0101               	movlb	1	; () banked
 31725  01903A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31726  01903C  B4D8               	btfsc	status,2,c
 31727  01903E  D7FB               	goto	l22297
 31728                           
 31729                           ; BSR set to: 1
 31730                           ;LM73_I2C.c: 65: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 66: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 67: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 68: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 69: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31731  019040  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31732  019042  B4D8               	btfsc	status,2,c
 31733  019044  D010               	goto	u28210
 31734                           
 31735                           ; BSR set to: 1
 31736  019046  0E03               	movlw	3
 31737  019048  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31738  01904A  B4D8               	btfsc	status,2,c
 31739  01904C  D00C               	goto	u28210
 31740                           
 31741                           ; BSR set to: 1
 31742  01904E  0E04               	movlw	4
 31743  019050  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31744  019052  B4D8               	btfsc	status,2,c
 31745  019054  D008               	goto	u28210
 31746                           
 31747                           ; BSR set to: 1
 31748  019056  0E05               	movlw	5
 31749  019058  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31750  01905A  B4D8               	btfsc	status,2,c
 31751  01905C  D004               	goto	u28210
 31752                           
 31753                           ; BSR set to: 1
 31754  01905E  0E06               	movlw	6
 31755  019060  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31756  019062  A4D8               	btfss	status,2,c
 31757  019064  D003               	goto	l22311
 31758  019066                     u28210:
 31759                           
 31760                           ; BSR set to: 1
 31761                           ;LM73_I2C.c: 70: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31762  019066  0E01               	movlw	1
 31763  019068  0100               	movlb	0	; () banked
 31764  01906A  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31765  01906C                     l22311:
 31766                           
 31767                           ;LM73_I2C.c: 71: };LM73_I2C.c: 74: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31768  01906C  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31769  01906E  0102               	movlb	2	; () banked
 31770  019070  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31771  019072  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31772  019074  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31773  019076  0E02               	movlw	2
 31774  019078  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31775  01907A  0E00               	movlw	0
 31776  01907C  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31777  01907E  0E4C               	movlw	76
 31778  019080  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31779  019082  0EA8               	movlw	low _I2C_STATUS
 31780  019084  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31781  019086  0E01               	movlw	high _I2C_STATUS
 31782  019088  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31783  01908A  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31784  01908E                     l22313:
 31785  01908E  0E02               	movlw	2
 31786  019090  0101               	movlb	1	; () banked
 31787  019092  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31788  019094  B4D8               	btfsc	status,2,c
 31789  019096  D7FB               	goto	l22313
 31790                           
 31791                           ; BSR set to: 1
 31792                           ;LM73_I2C.c: 76: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 77: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 78: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 79: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 80: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31793  019098  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31794  01909A  B4D8               	btfsc	status,2,c
 31795  01909C  D010               	goto	u28270
 31796                           
 31797                           ; BSR set to: 1
 31798  01909E  0E03               	movlw	3
 31799  0190A0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31800  0190A2  B4D8               	btfsc	status,2,c
 31801  0190A4  D00C               	goto	u28270
 31802                           
 31803                           ; BSR set to: 1
 31804  0190A6  0E04               	movlw	4
 31805  0190A8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31806  0190AA  B4D8               	btfsc	status,2,c
 31807  0190AC  D008               	goto	u28270
 31808                           
 31809                           ; BSR set to: 1
 31810  0190AE  0E05               	movlw	5
 31811  0190B0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31812  0190B2  B4D8               	btfsc	status,2,c
 31813  0190B4  D004               	goto	u28270
 31814                           
 31815                           ; BSR set to: 1
 31816  0190B6  0E06               	movlw	6
 31817  0190B8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31818  0190BA  A4D8               	btfss	status,2,c
 31819  0190BC  D003               	goto	l22327
 31820  0190BE                     u28270:
 31821                           
 31822                           ; BSR set to: 1
 31823                           ;LM73_I2C.c: 81: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31824  0190BE  0E01               	movlw	1
 31825  0190C0  0100               	movlb	0	; () banked
 31826  0190C2  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31827  0190C4                     l22327:
 31828                           
 31829                           ;LM73_I2C.c: 82: };LM73_I2C.c: 85: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31830  0190C4  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31831  0190C6  0102               	movlb	2	; () banked
 31832  0190C8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31833  0190CA  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31834  0190CC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31835  0190CE  0E02               	movlw	2
 31836  0190D0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31837  0190D2  0E00               	movlw	0
 31838  0190D4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31839  0190D6  0E4E               	movlw	78
 31840  0190D8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31841  0190DA  0EA8               	movlw	low _I2C_STATUS
 31842  0190DC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31843  0190DE  0E01               	movlw	high _I2C_STATUS
 31844  0190E0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31845  0190E2  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31846  0190E6                     l22329:
 31847  0190E6  0E02               	movlw	2
 31848  0190E8  0101               	movlb	1	; () banked
 31849  0190EA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31850  0190EC  B4D8               	btfsc	status,2,c
 31851  0190EE  D7FB               	goto	l22329
 31852                           
 31853                           ; BSR set to: 1
 31854                           ;LM73_I2C.c: 87: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 88: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 89: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 90: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 91: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31855  0190F0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31856  0190F2  B4D8               	btfsc	status,2,c
 31857  0190F4  D010               	goto	u28330
 31858                           
 31859                           ; BSR set to: 1
 31860  0190F6  0E03               	movlw	3
 31861  0190F8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31862  0190FA  B4D8               	btfsc	status,2,c
 31863  0190FC  D00C               	goto	u28330
 31864                           
 31865                           ; BSR set to: 1
 31866  0190FE  0E04               	movlw	4
 31867  019100  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31868  019102  B4D8               	btfsc	status,2,c
 31869  019104  D008               	goto	u28330
 31870                           
 31871                           ; BSR set to: 1
 31872  019106  0E05               	movlw	5
 31873  019108  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31874  01910A  B4D8               	btfsc	status,2,c
 31875  01910C  D004               	goto	u28330
 31876                           
 31877                           ; BSR set to: 1
 31878  01910E  0E06               	movlw	6
 31879  019110  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31880  019112  A4D8               	btfss	status,2,c
 31881  019114  D003               	goto	l22343
 31882  019116                     u28330:
 31883                           
 31884                           ; BSR set to: 1
 31885                           ;LM73_I2C.c: 92: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31886  019116  0E01               	movlw	1
 31887  019118  0100               	movlb	0	; () banked
 31888  01911A  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31889  01911C                     l22343:
 31890                           
 31891                           ;LM73_I2C.c: 93: };LM73_I2C.c: 96: PIE0bits.INT1IE = 1;
 31892  01911C  010E               	movlb	14	; () banked
 31893  01911E  83C2               	bsf	194,1,b	;volatile
 31894                           
 31895                           ; BSR set to: 14
 31896                           ;LM73_I2C.c: 97: PIE0bits.INT2IE = 1;
 31897  019120  85C2               	bsf	194,2,b	;volatile
 31898                           
 31899                           ; BSR set to: 14
 31900  019122  0012               	return		;funcret
 31901  019124                     __end_of_LM73TempSensorInitialize:
 31902                           	opt callstack 0
 31903                           
 31904 ;; *************** function _LM73AcquisitionHandler *****************
 31905 ;; Defined at:
 31906 ;;		line 102 in file "LM73_I2C.c"
 31907 ;; Parameters:    Size  Location     Type
 31908 ;;		None
 31909 ;; Auto vars:     Size  Location     Type
 31910 ;;		None
 31911 ;; Return value:  Size  Location     Type
 31912 ;;                  1    wreg      void 
 31913 ;; Registers used:
 31914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31915 ;; Tracked objects:
 31916 ;;		On entry : 0/0
 31917 ;;		On exit  : 0/0
 31918 ;;		Unchanged: 0/0
 31919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31924 ;;Total ram usage:        0 bytes
 31925 ;; Hardware stack levels used:    1
 31926 ;; Hardware stack levels required when called:   14
 31927 ;; This function calls:
 31928 ;;		_I2C2_MasterRead
 31929 ;;		_I2C2_MasterWrite
 31930 ;;		_LM73Convert
 31931 ;; This function is called by:
 31932 ;;		_main
 31933 ;; This function uses a non-reentrant model
 31934 ;;
 31935                           
 31936                           	psect	text112
 31937  019124                     __ptext112:
 31938                           	opt callstack 0
 31939  019124                     _LM73AcquisitionHandler:
 31940                           	opt callstack 16
 31941                           
 31942                           ;LM73_I2C.c: 105: PIE0bits.INT1IE = 0;
 31943                           
 31944                           ; BSR set to: 14
 31945                           ;incstack = 0
 31946  019124  010E               	movlb	14	; () banked
 31947  019126  93C2               	bcf	194,1,b	;volatile
 31948                           
 31949                           ;LM73_I2C.c: 106: PIE0bits.INT2IE = 0;
 31950  019128  95C2               	bcf	194,2,b	;volatile
 31951  01912A                     l22377:
 31952  01912A  0E02               	movlw	2
 31953  01912C  0101               	movlb	1	; () banked
 31954  01912E  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31955  019130  B4D8               	btfsc	status,2,c
 31956  019132  D7FB               	goto	l22377
 31957                           
 31958                           ; BSR set to: 1
 31959                           ;LM73_I2C.c: 112: I2C2_MasterWrite(0x00, 1, 0x4D, &I2C_STATUS);
 31960  019134  0E00               	movlw	0
 31961  019136  0102               	movlb	2	; () banked
 31962  019138  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31963  01913A  0E00               	movlw	0
 31964  01913C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31965  01913E  0E01               	movlw	1
 31966  019140  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31967  019142  0E00               	movlw	0
 31968  019144  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31969  019146  0E4D               	movlw	77
 31970  019148  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31971  01914A  0EA8               	movlw	low _I2C_STATUS
 31972  01914C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31973  01914E  0E01               	movlw	high _I2C_STATUS
 31974  019150  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31975  019152  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31976  019156                     l22381:
 31977  019156  0E02               	movlw	2
 31978  019158  0101               	movlb	1	; () banked
 31979  01915A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31980  01915C  B4D8               	btfsc	status,2,c
 31981  01915E  D7FB               	goto	l22381
 31982                           
 31983                           ; BSR set to: 1
 31984                           ;LM73_I2C.c: 114: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 115: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 116: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 117: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 118: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31985  019160  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31986  019162  B4D8               	btfsc	status,2,c
 31987  019164  D010               	goto	u28440
 31988                           
 31989                           ; BSR set to: 1
 31990  019166  0E03               	movlw	3
 31991  019168  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31992  01916A  B4D8               	btfsc	status,2,c
 31993  01916C  D00C               	goto	u28440
 31994                           
 31995                           ; BSR set to: 1
 31996  01916E  0E04               	movlw	4
 31997  019170  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31998  019172  B4D8               	btfsc	status,2,c
 31999  019174  D008               	goto	u28440
 32000                           
 32001                           ; BSR set to: 1
 32002  019176  0E05               	movlw	5
 32003  019178  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32004  01917A  B4D8               	btfsc	status,2,c
 32005  01917C  D004               	goto	u28440
 32006                           
 32007                           ; BSR set to: 1
 32008  01917E  0E06               	movlw	6
 32009  019180  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32010  019182  A4D8               	btfss	status,2,c
 32011  019184  D003               	goto	l22395
 32012  019186                     u28440:
 32013                           
 32014                           ; BSR set to: 1
 32015                           ;LM73_I2C.c: 119: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 32016  019186  0E01               	movlw	1
 32017  019188  0100               	movlb	0	; () banked
 32018  01918A  6FBD               	movwf	(_error_handler+4)& (0+255),b
 32019  01918C                     l22395:
 32020                           
 32021                           ;LM73_I2C.c: 120: };LM73_I2C.c: 122: I2C2_MasterRead(LM73_temp_results.QI_data_raw, 2, 0
      +                          x4D, &I2C_STATUS);
 32022  01918C  0EE7               	movlw	low (_LM73_temp_results+12)
 32023  01918E  0102               	movlb	2	; () banked
 32024  019190  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32025  019192  0E02               	movlw	high (_LM73_temp_results+12)
 32026  019194  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32027  019196  0E02               	movlw	2
 32028  019198  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32029  01919A  0E00               	movlw	0
 32030  01919C  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32031  01919E  0E4D               	movlw	77
 32032  0191A0  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32033  0191A2  0EA8               	movlw	low _I2C_STATUS
 32034  0191A4  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32035  0191A6  0E01               	movlw	high _I2C_STATUS
 32036  0191A8  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32037  0191AA  ECEC  F0DC         	call	_I2C2_MasterRead	;wreg free
 32038  0191AE                     l22397:
 32039  0191AE  0E02               	movlw	2
 32040  0191B0  0101               	movlb	1	; () banked
 32041  0191B2  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32042  0191B4  B4D8               	btfsc	status,2,c
 32043  0191B6  D7FB               	goto	l22397
 32044                           
 32045                           ; BSR set to: 1
 32046                           ;LM73_I2C.c: 124: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 125: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 126: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 127: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 128: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32047  0191B8  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32048  0191BA  B4D8               	btfsc	status,2,c
 32049  0191BC  D010               	goto	u28500
 32050                           
 32051                           ; BSR set to: 1
 32052  0191BE  0E03               	movlw	3
 32053  0191C0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32054  0191C2  B4D8               	btfsc	status,2,c
 32055  0191C4  D00C               	goto	u28500
 32056                           
 32057                           ; BSR set to: 1
 32058  0191C6  0E04               	movlw	4
 32059  0191C8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32060  0191CA  B4D8               	btfsc	status,2,c
 32061  0191CC  D008               	goto	u28500
 32062                           
 32063                           ; BSR set to: 1
 32064  0191CE  0E05               	movlw	5
 32065  0191D0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32066  0191D2  B4D8               	btfsc	status,2,c
 32067  0191D4  D004               	goto	u28500
 32068                           
 32069                           ; BSR set to: 1
 32070  0191D6  0E06               	movlw	6
 32071  0191D8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32072  0191DA  A4D8               	btfss	status,2,c
 32073  0191DC  D003               	goto	l22411
 32074  0191DE                     u28500:
 32075                           
 32076                           ; BSR set to: 1
 32077                           ;LM73_I2C.c: 129: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 32078  0191DE  0E01               	movlw	1
 32079  0191E0  0100               	movlb	0	; () banked
 32080  0191E2  6FBD               	movwf	(_error_handler+4)& (0+255),b
 32081  0191E4                     l22411:
 32082                           
 32083                           ;LM73_I2C.c: 130: };LM73_I2C.c: 134: I2C2_MasterWrite(0x00, 1, 0x4C, &I2C_STATUS);
 32084  0191E4  0E00               	movlw	0
 32085  0191E6  0102               	movlb	2	; () banked
 32086  0191E8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 32087  0191EA  0E00               	movlw	0
 32088  0191EC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 32089  0191EE  0E01               	movlw	1
 32090  0191F0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 32091  0191F2  0E00               	movlw	0
 32092  0191F4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 32093  0191F6  0E4C               	movlw	76
 32094  0191F8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 32095  0191FA  0EA8               	movlw	low _I2C_STATUS
 32096  0191FC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 32097  0191FE  0E01               	movlw	high _I2C_STATUS
 32098  019200  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 32099  019202  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 32100  019206                     l22413:
 32101  019206  0E02               	movlw	2
 32102  019208  0101               	movlb	1	; () banked
 32103  01920A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32104  01920C  B4D8               	btfsc	status,2,c
 32105  01920E  D7FB               	goto	l22413
 32106                           
 32107                           ; BSR set to: 1
 32108                           ;LM73_I2C.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 137: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 139: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 140: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32109  019210  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32110  019212  B4D8               	btfsc	status,2,c
 32111  019214  D010               	goto	u28560
 32112                           
 32113                           ; BSR set to: 1
 32114  019216  0E03               	movlw	3
 32115  019218  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32116  01921A  B4D8               	btfsc	status,2,c
 32117  01921C  D00C               	goto	u28560
 32118                           
 32119                           ; BSR set to: 1
 32120  01921E  0E04               	movlw	4
 32121  019220  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32122  019222  B4D8               	btfsc	status,2,c
 32123  019224  D008               	goto	u28560
 32124                           
 32125                           ; BSR set to: 1
 32126  019226  0E05               	movlw	5
 32127  019228  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32128  01922A  B4D8               	btfsc	status,2,c
 32129  01922C  D004               	goto	u28560
 32130                           
 32131                           ; BSR set to: 1
 32132  01922E  0E06               	movlw	6
 32133  019230  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32134  019232  A4D8               	btfss	status,2,c
 32135  019234  D003               	goto	l22427
 32136  019236                     u28560:
 32137                           
 32138                           ; BSR set to: 1
 32139                           ;LM73_I2C.c: 141: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 32140  019236  0E01               	movlw	1
 32141  019238  0100               	movlb	0	; () banked
 32142  01923A  6FBE               	movwf	(_error_handler+5)& (0+255),b
 32143  01923C                     l22427:
 32144                           
 32145                           ;LM73_I2C.c: 142: };LM73_I2C.c: 144: I2C2_MasterRead(LM73_temp_results.POS5_data_raw, 2,
      +                           0x4C, &I2C_STATUS);
 32146  01923C  0EE9               	movlw	low (_LM73_temp_results+14)
 32147  01923E  0102               	movlb	2	; () banked
 32148  019240  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32149  019242  0E02               	movlw	high (_LM73_temp_results+14)
 32150  019244  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32151  019246  0E02               	movlw	2
 32152  019248  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32153  01924A  0E00               	movlw	0
 32154  01924C  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32155  01924E  0E4C               	movlw	76
 32156  019250  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32157  019252  0EA8               	movlw	low _I2C_STATUS
 32158  019254  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32159  019256  0E01               	movlw	high _I2C_STATUS
 32160  019258  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32161  01925A  ECEC  F0DC         	call	_I2C2_MasterRead	;wreg free
 32162  01925E                     l22429:
 32163  01925E  0E02               	movlw	2
 32164  019260  0101               	movlb	1	; () banked
 32165  019262  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32166  019264  B4D8               	btfsc	status,2,c
 32167  019266  D7FB               	goto	l22429
 32168                           
 32169                           ; BSR set to: 1
 32170                           ;LM73_I2C.c: 146: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 147: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 148: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 149: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 150: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32171  019268  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32172  01926A  B4D8               	btfsc	status,2,c
 32173  01926C  D010               	goto	u28620
 32174                           
 32175                           ; BSR set to: 1
 32176  01926E  0E03               	movlw	3
 32177  019270  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32178  019272  B4D8               	btfsc	status,2,c
 32179  019274  D00C               	goto	u28620
 32180                           
 32181                           ; BSR set to: 1
 32182  019276  0E04               	movlw	4
 32183  019278  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32184  01927A  B4D8               	btfsc	status,2,c
 32185  01927C  D008               	goto	u28620
 32186                           
 32187                           ; BSR set to: 1
 32188  01927E  0E05               	movlw	5
 32189  019280  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32190  019282  B4D8               	btfsc	status,2,c
 32191  019284  D004               	goto	u28620
 32192                           
 32193                           ; BSR set to: 1
 32194  019286  0E06               	movlw	6
 32195  019288  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32196  01928A  A4D8               	btfss	status,2,c
 32197  01928C  D003               	goto	l22443
 32198  01928E                     u28620:
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;LM73_I2C.c: 151: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 32202  01928E  0E01               	movlw	1
 32203  019290  0100               	movlb	0	; () banked
 32204  019292  6FBE               	movwf	(_error_handler+5)& (0+255),b
 32205  019294                     l22443:
 32206                           
 32207                           ;LM73_I2C.c: 152: };LM73_I2C.c: 156: I2C2_MasterWrite(0x00, 1, 0x4E, &I2C_STATUS);
 32208  019294  0E00               	movlw	0
 32209  019296  0102               	movlb	2	; () banked
 32210  019298  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 32211  01929A  0E00               	movlw	0
 32212  01929C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 32213  01929E  0E01               	movlw	1
 32214  0192A0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 32215  0192A2  0E00               	movlw	0
 32216  0192A4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 32217  0192A6  0E4E               	movlw	78
 32218  0192A8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 32219  0192AA  0EA8               	movlw	low _I2C_STATUS
 32220  0192AC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 32221  0192AE  0E01               	movlw	high _I2C_STATUS
 32222  0192B0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 32223  0192B2  ECC4  F0DC         	call	_I2C2_MasterWrite	;wreg free
 32224  0192B6                     l22445:
 32225  0192B6  0E02               	movlw	2
 32226  0192B8  0101               	movlb	1	; () banked
 32227  0192BA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32228  0192BC  B4D8               	btfsc	status,2,c
 32229  0192BE  D7FB               	goto	l22445
 32230                           
 32231                           ; BSR set to: 1
 32232                           ;LM73_I2C.c: 158: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 159: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 160: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 161: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 162: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32233  0192C0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32234  0192C2  B4D8               	btfsc	status,2,c
 32235  0192C4  D010               	goto	u28680
 32236                           
 32237                           ; BSR set to: 1
 32238  0192C6  0E03               	movlw	3
 32239  0192C8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32240  0192CA  B4D8               	btfsc	status,2,c
 32241  0192CC  D00C               	goto	u28680
 32242                           
 32243                           ; BSR set to: 1
 32244  0192CE  0E04               	movlw	4
 32245  0192D0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32246  0192D2  B4D8               	btfsc	status,2,c
 32247  0192D4  D008               	goto	u28680
 32248                           
 32249                           ; BSR set to: 1
 32250  0192D6  0E05               	movlw	5
 32251  0192D8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32252  0192DA  B4D8               	btfsc	status,2,c
 32253  0192DC  D004               	goto	u28680
 32254                           
 32255                           ; BSR set to: 1
 32256  0192DE  0E06               	movlw	6
 32257  0192E0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32258  0192E2  A4D8               	btfss	status,2,c
 32259  0192E4  D003               	goto	l22459
 32260  0192E6                     u28680:
 32261                           
 32262                           ; BSR set to: 1
 32263                           ;LM73_I2C.c: 163: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32264  0192E6  0E01               	movlw	1
 32265  0192E8  0100               	movlb	0	; () banked
 32266  0192EA  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32267  0192EC                     l22459:
 32268                           
 32269                           ;LM73_I2C.c: 164: };LM73_I2C.c: 166: I2C2_MasterRead(LM73_temp_results.Ambient_data_raw,
      +                           2, 0x4E, &I2C_STATUS);
 32270  0192EC  0EEB               	movlw	low (_LM73_temp_results+16)
 32271  0192EE  0102               	movlb	2	; () banked
 32272  0192F0  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32273  0192F2  0E02               	movlw	high (_LM73_temp_results+16)
 32274  0192F4  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32275  0192F6  0E02               	movlw	2
 32276  0192F8  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32277  0192FA  0E00               	movlw	0
 32278  0192FC  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32279  0192FE  0E4E               	movlw	78
 32280  019300  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32281  019302  0EA8               	movlw	low _I2C_STATUS
 32282  019304  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32283  019306  0E01               	movlw	high _I2C_STATUS
 32284  019308  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32285  01930A  ECEC  F0DC         	call	_I2C2_MasterRead	;wreg free
 32286  01930E                     l22461:
 32287  01930E  0E02               	movlw	2
 32288  019310  0101               	movlb	1	; () banked
 32289  019312  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32290  019314  B4D8               	btfsc	status,2,c
 32291  019316  D7FB               	goto	l22461
 32292                           
 32293                           ; BSR set to: 1
 32294                           ;LM73_I2C.c: 168: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 169: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 170: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 171: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 172: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32295  019318  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32296  01931A  B4D8               	btfsc	status,2,c
 32297  01931C  D010               	goto	u28740
 32298                           
 32299                           ; BSR set to: 1
 32300  01931E  0E03               	movlw	3
 32301  019320  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32302  019322  B4D8               	btfsc	status,2,c
 32303  019324  D00C               	goto	u28740
 32304                           
 32305                           ; BSR set to: 1
 32306  019326  0E04               	movlw	4
 32307  019328  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32308  01932A  B4D8               	btfsc	status,2,c
 32309  01932C  D008               	goto	u28740
 32310                           
 32311                           ; BSR set to: 1
 32312  01932E  0E05               	movlw	5
 32313  019330  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32314  019332  B4D8               	btfsc	status,2,c
 32315  019334  D004               	goto	u28740
 32316                           
 32317                           ; BSR set to: 1
 32318  019336  0E06               	movlw	6
 32319  019338  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32320  01933A  A4D8               	btfss	status,2,c
 32321  01933C  D003               	goto	l22475
 32322  01933E                     u28740:
 32323                           
 32324                           ; BSR set to: 1
 32325                           ;LM73_I2C.c: 173: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32326  01933E  0E01               	movlw	1
 32327  019340  0100               	movlb	0	; () banked
 32328  019342  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32329  019344                     l22475:
 32330                           
 32331                           ;LM73_I2C.c: 174: };LM73_I2C.c: 177: LM73Convert();
 32332  019344  ECF9  F0C4         	call	_LM73Convert	;wreg free
 32333                           
 32334                           ;LM73_I2C.c: 179: LM73_start_flag = 0;
 32335  019348  0E00               	movlw	0
 32336  01934A  0102               	movlb	2	; () banked
 32337  01934C  6FD8               	movwf	_LM73_start_flag& (0+255),b
 32338                           
 32339                           ; BSR set to: 2
 32340  01934E  0012               	return		;funcret
 32341  019350                     __end_of_LM73AcquisitionHandler:
 32342                           	opt callstack 0
 32343                           
 32344 ;; *************** function _LM73Convert *****************
 32345 ;; Defined at:
 32346 ;;		line 184 in file "LM73_I2C.c"
 32347 ;; Parameters:    Size  Location     Type
 32348 ;;		None
 32349 ;; Auto vars:     Size  Location     Type
 32350 ;;  Ambient_Conv    2   83[BANK2 ] unsigned int 
 32351 ;;  POS5_Conv       2   81[BANK2 ] unsigned int 
 32352 ;;  QI_Conv         2   79[BANK2 ] unsigned int 
 32353 ;; Return value:  Size  Location     Type
 32354 ;;                  1    wreg      void 
 32355 ;; Registers used:
 32356 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32357 ;; Tracked objects:
 32358 ;;		On entry : 0/0
 32359 ;;		On exit  : 0/0
 32360 ;;		Unchanged: 0/0
 32361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32366 ;;Total ram usage:        9 bytes
 32367 ;; Hardware stack levels used:    1
 32368 ;; Hardware stack levels required when called:   12
 32369 ;; This function calls:
 32370 ;;		___flmul
 32371 ;;		___xxtofl
 32372 ;; This function is called by:
 32373 ;;		_LM73AcquisitionHandler
 32374 ;; This function uses a non-reentrant model
 32375 ;;
 32376                           
 32377                           	psect	text113
 32378  0189F2                     __ptext113:
 32379                           	opt callstack 0
 32380  0189F2                     _LM73Convert:
 32381                           	opt callstack 17
 32382                           
 32383                           ;LM73_I2C.c: 186: uint16_t QI_Conv, POS5_Conv, Ambient_Conv;;LM73_I2C.c: 189: QI_Conv = 
      +                          LM73_temp_results.QI_data_raw[0] << 6 | LM73_temp_results.QI_data_raw[1] >> 2;
 32384                           
 32385                           ; BSR set to: 2
 32386                           ;incstack = 0
 32387  0189F2  0102               	movlb	2	; () banked
 32388  0189F4  51E7               	movf	(_LM73_temp_results+12)& (0+255),w,b
 32389  0189F6  6F4C               	movwf	??_LM73Convert& (0+255),b
 32390  0189F8  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32391  0189FA  0E06               	movlw	6
 32392  0189FC                     u27025:
 32393  0189FC  90D8               	bcf	status,0,c
 32394  0189FE  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32395  018A00  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32396  018A02  2EE8               	decfsz	wreg,f,c
 32397  018A04  D7FB               	goto	u27025
 32398  018A06  C2E8  F24E         	movff	_LM73_temp_results+13,??_LM73Convert+2
 32399  018A0A  90D8               	bcf	status,0,c
 32400  018A0C  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32401  018A0E  90D8               	bcf	status,0,c
 32402  018A10  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32403  018A12  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32404  018A14  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32405  018A16  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32406  018A18  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32407  018A1A  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32408                           
 32409                           ;LM73_I2C.c: 193: if ((LM73_temp_results.QI_data_raw[0] >> 6) == 1) {
 32410  018A1C  45E7               	rlncf	(_LM73_temp_results+12)& (0+255),w,b
 32411  018A1E  46E8               	rlncf	wreg,f,c
 32412  018A20  0B03               	andlw	3
 32413  018A22  06E8               	decf	wreg,f,c
 32414  018A24  A4D8               	btfss	status,2,c
 32415  018A26  D025               	goto	l20999
 32416                           
 32417                           ; BSR set to: 2
 32418                           ;LM73_I2C.c: 194: QI_Conv = ~(QI_Conv);
 32419  018A28  1F4F               	comf	LM73Convert@QI_Conv& (0+255),f,b
 32420  018A2A  1F50               	comf	(LM73Convert@QI_Conv+1)& (0+255),f,b
 32421                           
 32422                           ; BSR set to: 2
 32423                           ;LM73_I2C.c: 196: QI_Conv = QI_Conv & 0x1FFF;
 32424  018A2C  0EFF               	movlw	255
 32425  018A2E  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32426  018A30  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32427  018A32  0E1F               	movlw	31
 32428  018A34  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32429  018A36  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32430                           
 32431                           ; BSR set to: 2
 32432                           ;LM73_I2C.c: 197: LM73_temp_results.QI_temp_result = -0.03125 * QI_Conv;
 32433  018A38  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32434  018A3C  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32435  018A40  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32436  018A42  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32437  018A44  0E00               	movlw	0
 32438  018A46  ECB6  F0CC         	call	___xxtofl
 32439  018A4A  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32440  018A4E  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32441  018A52  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32442  018A56  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32443  018A5A  0E00               	movlw	0
 32444  018A5C  0102               	movlb	2	; () banked
 32445  018A5E  6F12               	movwf	___flmul@a& (0+255),b
 32446  018A60  0E00               	movlw	0
 32447  018A62  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32448  018A64  0E00               	movlw	0
 32449  018A66  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32450  018A68  0EBD               	movlw	189
 32451  018A6A  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32452  018A6C  EC7A  F0B3         	call	___flmul	;wreg free
 32453  018A70  D022               	goto	L22
 32454  018A72                     l20999:
 32455                           
 32456                           ; BSR set to: 2
 32457                           ;LM73_I2C.c: 200: else {;LM73_I2C.c: 202: QI_Conv = QI_Conv & 0x1FFF;
 32458  018A72  0EFF               	movlw	255
 32459  018A74  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32460  018A76  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32461  018A78  0E1F               	movlw	31
 32462  018A7A  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32463  018A7C  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32464                           
 32465                           ; BSR set to: 2
 32466                           ;LM73_I2C.c: 203: LM73_temp_results.QI_temp_result = 0.03125 * QI_Conv;
 32467  018A7E  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32468  018A82  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32469  018A86  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32470  018A88  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32471  018A8A  0E00               	movlw	0
 32472  018A8C  ECB6  F0CC         	call	___xxtofl
 32473  018A90  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32474  018A94  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32475  018A98  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32476  018A9C  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32477  018AA0  0E00               	movlw	0
 32478  018AA2  0102               	movlb	2	; () banked
 32479  018AA4  6F12               	movwf	___flmul@a& (0+255),b
 32480  018AA6  0E00               	movlw	0
 32481  018AA8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32482  018AAA  0E00               	movlw	0
 32483  018AAC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32484  018AAE  0E3D               	movlw	61
 32485  018AB0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32486  018AB2  EC7A  F0B3         	call	___flmul	;wreg free
 32487  018AB6                     L22:
 32488  018AB6  C20E  F2DB         	movff	?___flmul,_LM73_temp_results
 32489  018ABA  C20F  F2DC         	movff	?___flmul+1,_LM73_temp_results+1
 32490  018ABE  C210  F2DD         	movff	?___flmul+2,_LM73_temp_results+2
 32491  018AC2  C211  F2DE         	movff	?___flmul+3,_LM73_temp_results+3
 32492                           
 32493                           ;LM73_I2C.c: 204: };LM73_I2C.c: 207: POS5_Conv = LM73_temp_results.POS5_data_raw[0] << 6
      +                           | LM73_temp_results.POS5_data_raw[1] >> 2;
 32494  018AC6  0102               	movlb	2	; () banked
 32495  018AC8  51E9               	movf	(_LM73_temp_results+14)& (0+255),w,b
 32496  018ACA  6F4C               	movwf	??_LM73Convert& (0+255),b
 32497  018ACC  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32498  018ACE  0E06               	movlw	6
 32499  018AD0                     u27045:
 32500  018AD0  90D8               	bcf	status,0,c
 32501  018AD2  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32502  018AD4  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32503  018AD6  2EE8               	decfsz	wreg,f,c
 32504  018AD8  D7FB               	goto	u27045
 32505  018ADA  C2EA  F24E         	movff	_LM73_temp_results+15,??_LM73Convert+2
 32506  018ADE  90D8               	bcf	status,0,c
 32507  018AE0  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32508  018AE2  90D8               	bcf	status,0,c
 32509  018AE4  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32510  018AE6  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32511  018AE8  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32512  018AEA  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32513  018AEC  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32514  018AEE  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32515                           
 32516                           ; BSR set to: 2
 32517                           ;LM73_I2C.c: 211: if ((LM73_temp_results.POS5_data_raw[0] >> 6) == 1) {
 32518  018AF0  45E9               	rlncf	(_LM73_temp_results+14)& (0+255),w,b
 32519  018AF2  46E8               	rlncf	wreg,f,c
 32520  018AF4  0B03               	andlw	3
 32521  018AF6  06E8               	decf	wreg,f,c
 32522  018AF8  A4D8               	btfss	status,2,c
 32523  018AFA  D025               	goto	l21013
 32524                           
 32525                           ; BSR set to: 2
 32526                           ;LM73_I2C.c: 212: POS5_Conv = ~(POS5_Conv);
 32527  018AFC  1F51               	comf	LM73Convert@POS5_Conv& (0+255),f,b
 32528  018AFE  1F52               	comf	(LM73Convert@POS5_Conv+1)& (0+255),f,b
 32529                           
 32530                           ; BSR set to: 2
 32531                           ;LM73_I2C.c: 214: POS5_Conv = POS5_Conv & 0x1FFF;
 32532  018B00  0EFF               	movlw	255
 32533  018B02  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32534  018B04  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32535  018B06  0E1F               	movlw	31
 32536  018B08  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32537  018B0A  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32538                           
 32539                           ; BSR set to: 2
 32540                           ;LM73_I2C.c: 215: LM73_temp_results.POS5_temp_result = -0.03125 * POS5_Conv;
 32541  018B0C  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32542  018B10  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32543  018B14  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32544  018B16  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32545  018B18  0E00               	movlw	0
 32546  018B1A  ECB6  F0CC         	call	___xxtofl
 32547  018B1E  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32548  018B22  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32549  018B26  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32550  018B2A  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32551  018B2E  0E00               	movlw	0
 32552  018B30  0102               	movlb	2	; () banked
 32553  018B32  6F12               	movwf	___flmul@a& (0+255),b
 32554  018B34  0E00               	movlw	0
 32555  018B36  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32556  018B38  0E00               	movlw	0
 32557  018B3A  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32558  018B3C  0EBD               	movlw	189
 32559  018B3E  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32560  018B40  EC7A  F0B3         	call	___flmul	;wreg free
 32561  018B44  D022               	goto	L23
 32562  018B46                     l21013:
 32563                           
 32564                           ; BSR set to: 2
 32565                           ;LM73_I2C.c: 218: else {;LM73_I2C.c: 220: POS5_Conv = POS5_Conv & 0x1FFF;
 32566  018B46  0EFF               	movlw	255
 32567  018B48  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32568  018B4A  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32569  018B4C  0E1F               	movlw	31
 32570  018B4E  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32571  018B50  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32572                           
 32573                           ; BSR set to: 2
 32574                           ;LM73_I2C.c: 221: LM73_temp_results.POS5_temp_result = 0.03125 * POS5_Conv;
 32575  018B52  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32576  018B56  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32577  018B5A  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32578  018B5C  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32579  018B5E  0E00               	movlw	0
 32580  018B60  ECB6  F0CC         	call	___xxtofl
 32581  018B64  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32582  018B68  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32583  018B6C  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32584  018B70  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32585  018B74  0E00               	movlw	0
 32586  018B76  0102               	movlb	2	; () banked
 32587  018B78  6F12               	movwf	___flmul@a& (0+255),b
 32588  018B7A  0E00               	movlw	0
 32589  018B7C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32590  018B7E  0E00               	movlw	0
 32591  018B80  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32592  018B82  0E3D               	movlw	61
 32593  018B84  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32594  018B86  EC7A  F0B3         	call	___flmul	;wreg free
 32595  018B8A                     L23:
 32596  018B8A  C20E  F2DF         	movff	?___flmul,_LM73_temp_results+4
 32597  018B8E  C20F  F2E0         	movff	?___flmul+1,_LM73_temp_results+5
 32598  018B92  C210  F2E1         	movff	?___flmul+2,_LM73_temp_results+6
 32599  018B96  C211  F2E2         	movff	?___flmul+3,_LM73_temp_results+7
 32600                           
 32601                           ;LM73_I2C.c: 222: };LM73_I2C.c: 225: Ambient_Conv = LM73_temp_results.Ambient_data_raw[0
      +                          ] << 6 | LM73_temp_results.Ambient_data_raw[1] >> 2;
 32602  018B9A  0102               	movlb	2	; () banked
 32603  018B9C  51EB               	movf	(_LM73_temp_results+16)& (0+255),w,b
 32604  018B9E  6F4C               	movwf	??_LM73Convert& (0+255),b
 32605  018BA0  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32606  018BA2  0E06               	movlw	6
 32607  018BA4                     u27065:
 32608  018BA4  90D8               	bcf	status,0,c
 32609  018BA6  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32610  018BA8  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32611  018BAA  2EE8               	decfsz	wreg,f,c
 32612  018BAC  D7FB               	goto	u27065
 32613  018BAE  C2EC  F24E         	movff	_LM73_temp_results+17,??_LM73Convert+2
 32614  018BB2  90D8               	bcf	status,0,c
 32615  018BB4  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32616  018BB6  90D8               	bcf	status,0,c
 32617  018BB8  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32618  018BBA  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32619  018BBC  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32620  018BBE  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32621  018BC0  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32622  018BC2  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32623                           
 32624                           ; BSR set to: 2
 32625                           ;LM73_I2C.c: 229: if ((LM73_temp_results.Ambient_data_raw[0] >> 6) == 1) {
 32626  018BC4  45EB               	rlncf	(_LM73_temp_results+16)& (0+255),w,b
 32627  018BC6  46E8               	rlncf	wreg,f,c
 32628  018BC8  0B03               	andlw	3
 32629  018BCA  06E8               	decf	wreg,f,c
 32630  018BCC  A4D8               	btfss	status,2,c
 32631  018BCE  D025               	goto	l21027
 32632                           
 32633                           ; BSR set to: 2
 32634                           ;LM73_I2C.c: 230: Ambient_Conv = ~(Ambient_Conv);
 32635  018BD0  1F53               	comf	LM73Convert@Ambient_Conv& (0+255),f,b
 32636  018BD2  1F54               	comf	(LM73Convert@Ambient_Conv+1)& (0+255),f,b
 32637                           
 32638                           ; BSR set to: 2
 32639                           ;LM73_I2C.c: 232: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32640  018BD4  0EFF               	movlw	255
 32641  018BD6  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32642  018BD8  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32643  018BDA  0E1F               	movlw	31
 32644  018BDC  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32645  018BDE  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32646                           
 32647                           ; BSR set to: 2
 32648                           ;LM73_I2C.c: 233: LM73_temp_results.Ambient_temp_result = -0.03125 * Ambient_Conv;
 32649  018BE0  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32650  018BE4  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32651  018BE8  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32652  018BEA  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32653  018BEC  0E00               	movlw	0
 32654  018BEE  ECB6  F0CC         	call	___xxtofl
 32655  018BF2  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32656  018BF6  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32657  018BFA  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32658  018BFE  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32659  018C02  0E00               	movlw	0
 32660  018C04  0102               	movlb	2	; () banked
 32661  018C06  6F12               	movwf	___flmul@a& (0+255),b
 32662  018C08  0E00               	movlw	0
 32663  018C0A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32664  018C0C  0E00               	movlw	0
 32665  018C0E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32666  018C10  0EBD               	movlw	189
 32667  018C12  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32668  018C14  EC7A  F0B3         	call	___flmul	;wreg free
 32669  018C18  D022               	goto	L24
 32670  018C1A                     l21027:
 32671                           
 32672                           ; BSR set to: 2
 32673                           ;LM73_I2C.c: 236: else {;LM73_I2C.c: 238: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32674  018C1A  0EFF               	movlw	255
 32675  018C1C  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32676  018C1E  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32677  018C20  0E1F               	movlw	31
 32678  018C22  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32679  018C24  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32680                           
 32681                           ; BSR set to: 2
 32682                           ;LM73_I2C.c: 239: LM73_temp_results.Ambient_temp_result = 0.03125 * Ambient_Conv;
 32683  018C26  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32684  018C2A  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32685  018C2E  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32686  018C30  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32687  018C32  0E00               	movlw	0
 32688  018C34  ECB6  F0CC         	call	___xxtofl
 32689  018C38  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32690  018C3C  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32691  018C40  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32692  018C44  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32693  018C48  0E00               	movlw	0
 32694  018C4A  0102               	movlb	2	; () banked
 32695  018C4C  6F12               	movwf	___flmul@a& (0+255),b
 32696  018C4E  0E00               	movlw	0
 32697  018C50  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32698  018C52  0E00               	movlw	0
 32699  018C54  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32700  018C56  0E3D               	movlw	61
 32701  018C58  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32702  018C5A  EC7A  F0B3         	call	___flmul	;wreg free
 32703  018C5E                     L24:
 32704  018C5E  C20E  F2E3         	movff	?___flmul,_LM73_temp_results+8
 32705  018C62  C20F  F2E4         	movff	?___flmul+1,_LM73_temp_results+9
 32706  018C66  C210  F2E5         	movff	?___flmul+2,_LM73_temp_results+10
 32707  018C6A  C211  F2E6         	movff	?___flmul+3,_LM73_temp_results+11
 32708                           
 32709                           ;LM73_I2C.c: 240: };LM73_I2C.c: 243: PIE0bits.INT1IE = 1;
 32710  018C6E  010E               	movlb	14	; () banked
 32711  018C70  83C2               	bsf	194,1,b	;volatile
 32712                           
 32713                           ; BSR set to: 14
 32714                           ;LM73_I2C.c: 244: PIE0bits.INT2IE = 1;
 32715  018C72  85C2               	bsf	194,2,b	;volatile
 32716                           
 32717                           ; BSR set to: 14
 32718  018C74  0012               	return		;funcret
 32719  018C76                     __end_of_LM73Convert:
 32720                           	opt callstack 0
 32721                           
 32722 ;; *************** function ___xxtofl *****************
 32723 ;; Defined at:
 32724 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 32725 ;; Parameters:    Size  Location     Type
 32726 ;;  sign            1    wreg     unsigned char 
 32727 ;;  val             4   62[BANK2 ] long 
 32728 ;; Auto vars:     Size  Location     Type
 32729 ;;  sign            1   70[BANK2 ] unsigned char 
 32730 ;;  arg             4   72[BANK2 ] unsigned long 
 32731 ;;  exp             1   71[BANK2 ] unsigned char 
 32732 ;; Return value:  Size  Location     Type
 32733 ;;                  4   62[BANK2 ] unsigned char 
 32734 ;; Registers used:
 32735 ;;		wreg, status,2, status,0
 32736 ;; Tracked objects:
 32737 ;;		On entry : 0/0
 32738 ;;		On exit  : 0/0
 32739 ;;		Unchanged: 0/0
 32740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32741 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32742 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32743 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32744 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32745 ;;Total ram usage:       14 bytes
 32746 ;; Hardware stack levels used:    1
 32747 ;; Hardware stack levels required when called:   11
 32748 ;; This function calls:
 32749 ;;		Nothing
 32750 ;; This function is called by:
 32751 ;;		_LM73Convert
 32752 ;;		_floatToEngineeringFormat
 32753 ;;		__doprnt
 32754 ;;		_ftoa
 32755 ;; This function uses a non-reentrant model
 32756 ;;
 32757                           
 32758                           	psect	text114
 32759  01996C                     __ptext114:
 32760                           	opt callstack 0
 32761  01996C                     ___xxtofl:
 32762                           	opt callstack 14
 32763                           
 32764                           ; BSR set to: 14
 32765                           ;incstack = 0
 32766                           ;___xxtofl@sign stored from wreg
 32767  01996C  0102               	movlb	2	; () banked
 32768  01996E  6F46               	movwf	___xxtofl@sign& (0+255),b
 32769  019970  0102               	movlb	2	; () banked
 32770  019972  5146               	movf	___xxtofl@sign& (0+255),w,b
 32771  019974  A4D8               	btfss	status,2,c
 32772                           
 32773                           ; BSR set to: 2
 32774  019976  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32775  019978  D01A               	goto	l3361
 32776                           
 32777                           ; BSR set to: 2
 32778  01997A  C23E  F242         	movff	___xxtofl@val,??___xxtofl
 32779  01997E  C23F  F243         	movff	___xxtofl@val+1,??___xxtofl+1
 32780  019982  C240  F244         	movff	___xxtofl@val+2,??___xxtofl+2
 32781  019986  C241  F245         	movff	___xxtofl@val+3,??___xxtofl+3
 32782  01998A  1F42               	comf	??___xxtofl& (0+255),f,b
 32783  01998C  1F43               	comf	(??___xxtofl+1)& (0+255),f,b
 32784  01998E  1F44               	comf	(??___xxtofl+2)& (0+255),f,b
 32785  019990  1F45               	comf	(??___xxtofl+3)& (0+255),f,b
 32786  019992  2B42               	incf	??___xxtofl& (0+255),f,b
 32787  019994  0E00               	movlw	0
 32788  019996  2343               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32789  019998  2344               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32790  01999A  2345               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32791  01999C  C242  F248         	movff	??___xxtofl,___xxtofl@arg
 32792  0199A0  C243  F249         	movff	??___xxtofl+1,___xxtofl@arg+1
 32793  0199A4  C244  F24A         	movff	??___xxtofl+2,___xxtofl@arg+2
 32794  0199A8  C245  F24B         	movff	??___xxtofl+3,___xxtofl@arg+3
 32795  0199AC  D008               	goto	l17903
 32796  0199AE                     l3361:
 32797                           
 32798                           ; BSR set to: 2
 32799  0199AE  C23E  F248         	movff	___xxtofl@val,___xxtofl@arg
 32800  0199B2  C23F  F249         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32801  0199B6  C240  F24A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32802  0199BA  C241  F24B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32803  0199BE                     l17903:
 32804                           
 32805                           ; BSR set to: 2
 32806  0199BE  513E               	movf	___xxtofl@val& (0+255),w,b
 32807  0199C0  113F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32808  0199C2  1140               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32809  0199C4  1141               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32810  0199C6  A4D8               	btfss	status,2,c
 32811  0199C8  D009               	goto	l17909
 32812                           
 32813                           ; BSR set to: 2
 32814  0199CA  0E00               	movlw	0
 32815  0199CC  6F3E               	movwf	?___xxtofl& (0+255),b
 32816  0199CE  0E00               	movlw	0
 32817  0199D0  6F3F               	movwf	(?___xxtofl+1)& (0+255),b
 32818  0199D2  0E00               	movlw	0
 32819  0199D4  6F40               	movwf	(?___xxtofl+2)& (0+255),b
 32820  0199D6  0E00               	movlw	0
 32821  0199D8  6F41               	movwf	(?___xxtofl+3)& (0+255),b
 32822  0199DA  0012               	return	
 32823  0199DC                     l17909:
 32824                           
 32825                           ; BSR set to: 2
 32826  0199DC  0E96               	movlw	150
 32827  0199DE  6F47               	movwf	___xxtofl@exp& (0+255),b
 32828  0199E0  D006               	goto	l17913
 32829  0199E2                     l17911:
 32830                           
 32831                           ; BSR set to: 2
 32832  0199E2  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32833  0199E4  90D8               	bcf	status,0,c
 32834  0199E6  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32835  0199E8  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32836  0199EA  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32837  0199EC  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32838  0199EE                     l17913:
 32839                           
 32840                           ; BSR set to: 2
 32841  0199EE  0E00               	movlw	0
 32842  0199F0  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32843  0199F2  6F42               	movwf	??___xxtofl& (0+255),b
 32844  0199F4  0E00               	movlw	0
 32845  0199F6  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32846  0199F8  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32847  0199FA  0E00               	movlw	0
 32848  0199FC  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32849  0199FE  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32850  019A00  0EFE               	movlw	254
 32851  019A02  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32852  019A04  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32853  019A06  5142               	movf	??___xxtofl& (0+255),w,b
 32854  019A08  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32855  019A0A  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32856  019A0C  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32857  019A0E  B4D8               	btfsc	status,2,c
 32858  019A10  D00D               	goto	l3368
 32859  019A12  D7E7               	goto	l17911
 32860  019A14                     l17915:
 32861                           
 32862                           ; BSR set to: 2
 32863  019A14  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32864                           
 32865                           ; BSR set to: 2
 32866  019A16  0E01               	movlw	1
 32867  019A18  2748               	addwf	___xxtofl@arg& (0+255),f,b
 32868  019A1A  0E00               	movlw	0
 32869  019A1C  2349               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32870  019A1E  234A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32871  019A20  234B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32872                           
 32873                           ; BSR set to: 2
 32874  019A22  90D8               	bcf	status,0,c
 32875  019A24  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32876  019A26  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32877  019A28  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32878  019A2A  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32879  019A2C                     l3368:
 32880                           
 32881                           ; BSR set to: 2
 32882  019A2C  0E00               	movlw	0
 32883  019A2E  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32884  019A30  6F42               	movwf	??___xxtofl& (0+255),b
 32885  019A32  0E00               	movlw	0
 32886  019A34  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32887  019A36  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32888  019A38  0E00               	movlw	0
 32889  019A3A  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32890  019A3C  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32891  019A3E  0EFF               	movlw	255
 32892  019A40  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32893  019A42  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32894  019A44  5142               	movf	??___xxtofl& (0+255),w,b
 32895  019A46  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32896  019A48  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32897  019A4A  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32898  019A4C  B4D8               	btfsc	status,2,c
 32899  019A4E  D007               	goto	l17923
 32900  019A50  D7E1               	goto	l17915
 32901  019A52                     l17921:
 32902                           
 32903                           ; BSR set to: 2
 32904  019A52  0747               	decf	___xxtofl@exp& (0+255),f,b
 32905  019A54  90D8               	bcf	status,0,c
 32906  019A56  3748               	rlcf	___xxtofl@arg& (0+255),f,b
 32907  019A58  3749               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32908  019A5A  374A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32909  019A5C  374B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32910  019A5E                     l17923:
 32911                           
 32912                           ; BSR set to: 2
 32913  019A5E  BF4A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32914  019A60  D003               	goto	u21810
 32915                           
 32916                           ; BSR set to: 2
 32917  019A62  0E02               	movlw	2
 32918  019A64  6147               	cpfslt	___xxtofl@exp& (0+255),b
 32919  019A66  D7F5               	goto	l17921
 32920  019A68                     u21810:
 32921                           
 32922                           ; BSR set to: 2
 32923  019A68  A147               	btfss	___xxtofl@exp& (0+255),0,b
 32924                           
 32925                           ; BSR set to: 2
 32926  019A6A  9F4A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 32927                           
 32928                           ; BSR set to: 2
 32929  019A6C  90D8               	bcf	status,0,c
 32930  019A6E  3347               	rrcf	___xxtofl@exp& (0+255),f,b
 32931                           
 32932                           ; BSR set to: 2
 32933  019A70  C247  F242         	movff	___xxtofl@exp,??___xxtofl
 32934  019A74  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32935  019A76  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32936  019A78  6B45               	clrf	(??___xxtofl+3)& (0+255),b
 32937  019A7A  C242  F245         	movff	??___xxtofl,??___xxtofl+3
 32938  019A7E  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32939  019A80  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32940  019A82  6B42               	clrf	??___xxtofl& (0+255),b
 32941  019A84  5142               	movf	??___xxtofl& (0+255),w,b
 32942  019A86  1348               	iorwf	___xxtofl@arg& (0+255),f,b
 32943  019A88  5143               	movf	(??___xxtofl+1)& (0+255),w,b
 32944  019A8A  1349               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32945  019A8C  5144               	movf	(??___xxtofl+2)& (0+255),w,b
 32946  019A8E  134A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32947  019A90  5145               	movf	(??___xxtofl+3)& (0+255),w,b
 32948  019A92  134B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32949                           
 32950                           ; BSR set to: 2
 32951  019A94  5146               	movf	___xxtofl@sign& (0+255),w,b
 32952  019A96  A4D8               	btfss	status,2,c
 32953                           
 32954                           ; BSR set to: 2
 32955  019A98  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32956  019A9A  D001               	goto	l17939
 32957                           
 32958                           ; BSR set to: 2
 32959  019A9C  8F4B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32960  019A9E                     l17939:
 32961                           
 32962                           ; BSR set to: 2
 32963  019A9E  C248  F23E         	movff	___xxtofl@arg,?___xxtofl
 32964  019AA2  C249  F23F         	movff	___xxtofl@arg+1,?___xxtofl+1
 32965  019AA6  C24A  F240         	movff	___xxtofl@arg+2,?___xxtofl+2
 32966  019AAA  C24B  F241         	movff	___xxtofl@arg+3,?___xxtofl+3
 32967                           
 32968                           ; BSR set to: 2
 32969  019AAE  0012               	return		;funcret
 32970  019AB0                     __end_of___xxtofl:
 32971                           	opt callstack 0
 32972                           
 32973 ;; *************** function ___flmul *****************
 32974 ;; Defined at:
 32975 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 32976 ;; Parameters:    Size  Location     Type
 32977 ;;  b               4   14[BANK2 ] unsigned char 
 32978 ;;  a               4   18[BANK2 ] unsigned char 
 32979 ;; Auto vars:     Size  Location     Type
 32980 ;;  prod            4   33[BANK2 ] struct .
 32981 ;;  grs             4   28[BANK2 ] unsigned long 
 32982 ;;  temp            2   37[BANK2 ] struct .
 32983 ;;  bexp            1   32[BANK2 ] unsigned char 
 32984 ;;  aexp            1   27[BANK2 ] unsigned char 
 32985 ;;  sign            1   26[BANK2 ] unsigned char 
 32986 ;; Return value:  Size  Location     Type
 32987 ;;                  4   14[BANK2 ] unsigned char 
 32988 ;; Registers used:
 32989 ;;		wreg, status,2, status,0, prodl, prodh
 32990 ;; Tracked objects:
 32991 ;;		On entry : 0/0
 32992 ;;		On exit  : 0/0
 32993 ;;		Unchanged: 0/0
 32994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32995 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32996 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32997 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32998 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32999 ;;Total ram usage:       25 bytes
 33000 ;; Hardware stack levels used:    1
 33001 ;; Hardware stack levels required when called:   11
 33002 ;; This function calls:
 33003 ;;		Nothing
 33004 ;; This function is called by:
 33005 ;;		_LM73Convert
 33006 ;;		_fround
 33007 ;;		_scale
 33008 ;;		__doprnt
 33009 ;;		_ftoa
 33010 ;; This function uses a non-reentrant model
 33011 ;;
 33012                           
 33013                           	psect	text115
 33014  0166F4                     __ptext115:
 33015                           	opt callstack 0
 33016  0166F4                     ___flmul:
 33017                           	opt callstack 13
 33018                           
 33019                           ; BSR set to: 2
 33020                           ;incstack = 0
 33021  0166F4  0102               	movlb	2	; () banked
 33022  0166F6  5111               	movf	(___flmul@b+3)& (0+255),w,b
 33023  0166F8  0B80               	andlw	128
 33024  0166FA  6F1A               	movwf	___flmul@sign& (0+255),b
 33025  0166FC  5111               	movf	(___flmul@b+3)& (0+255),w,b
 33026  0166FE  2511               	addwf	(___flmul@b+3)& (0+255),w,b
 33027  016700  6F20               	movwf	___flmul@bexp& (0+255),b
 33028                           
 33029                           ; BSR set to: 2
 33030  016702  BF10               	btfsc	(___flmul@b+2)& (0+255),7,b
 33031                           
 33032                           ; BSR set to: 2
 33033  016704  8120               	bsf	___flmul@bexp& (0+255),0,b
 33034                           
 33035                           ; BSR set to: 2
 33036  016706  5120               	movf	___flmul@bexp& (0+255),w,b
 33037  016708  B4D8               	btfsc	status,2,c
 33038  01670A  D00D               	goto	l17333
 33039                           
 33040                           ; BSR set to: 2
 33041  01670C  2920               	incf	___flmul@bexp& (0+255),w,b
 33042  01670E  A4D8               	btfss	status,2,c
 33043  016710  D008               	goto	l17331
 33044                           
 33045                           ; BSR set to: 2
 33046  016712  0E00               	movlw	0
 33047  016714  6F0E               	movwf	___flmul@b& (0+255),b
 33048  016716  0E00               	movlw	0
 33049  016718  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 33050  01671A  0E00               	movlw	0
 33051  01671C  6F10               	movwf	(___flmul@b+2)& (0+255),b
 33052  01671E  0E00               	movlw	0
 33053  016720  6F11               	movwf	(___flmul@b+3)& (0+255),b
 33054  016722                     l17331:
 33055                           
 33056                           ; BSR set to: 2
 33057  016722  8F10               	bsf	(___flmul@b+2)& (0+255),7,b
 33058  016724  D008               	goto	l17335
 33059  016726                     l17333:
 33060                           
 33061                           ; BSR set to: 2
 33062  016726  0E00               	movlw	0
 33063  016728  6F0E               	movwf	___flmul@b& (0+255),b
 33064  01672A  0E00               	movlw	0
 33065  01672C  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 33066  01672E  0E00               	movlw	0
 33067  016730  6F10               	movwf	(___flmul@b+2)& (0+255),b
 33068  016732  0E00               	movlw	0
 33069  016734  6F11               	movwf	(___flmul@b+3)& (0+255),b
 33070  016736                     l17335:
 33071                           
 33072                           ; BSR set to: 2
 33073  016736  5115               	movf	(___flmul@a+3)& (0+255),w,b
 33074  016738  0B80               	andlw	128
 33075  01673A  1B1A               	xorwf	___flmul@sign& (0+255),f,b
 33076                           
 33077                           ; BSR set to: 2
 33078  01673C  5115               	movf	(___flmul@a+3)& (0+255),w,b
 33079  01673E  2515               	addwf	(___flmul@a+3)& (0+255),w,b
 33080  016740  6F1B               	movwf	___flmul@aexp& (0+255),b
 33081                           
 33082                           ; BSR set to: 2
 33083  016742  BF14               	btfsc	(___flmul@a+2)& (0+255),7,b
 33084                           
 33085                           ; BSR set to: 2
 33086  016744  811B               	bsf	___flmul@aexp& (0+255),0,b
 33087                           
 33088                           ; BSR set to: 2
 33089  016746  511B               	movf	___flmul@aexp& (0+255),w,b
 33090  016748  B4D8               	btfsc	status,2,c
 33091  01674A  D00D               	goto	l17351
 33092                           
 33093                           ; BSR set to: 2
 33094  01674C  291B               	incf	___flmul@aexp& (0+255),w,b
 33095  01674E  A4D8               	btfss	status,2,c
 33096  016750  D008               	goto	l17349
 33097                           
 33098                           ; BSR set to: 2
 33099  016752  0E00               	movlw	0
 33100  016754  6F12               	movwf	___flmul@a& (0+255),b
 33101  016756  0E00               	movlw	0
 33102  016758  6F13               	movwf	(___flmul@a+1)& (0+255),b
 33103  01675A  0E00               	movlw	0
 33104  01675C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 33105  01675E  0E00               	movlw	0
 33106  016760  6F15               	movwf	(___flmul@a+3)& (0+255),b
 33107  016762                     l17349:
 33108                           
 33109                           ; BSR set to: 2
 33110  016762  8F14               	bsf	(___flmul@a+2)& (0+255),7,b
 33111  016764  D008               	goto	l3320
 33112  016766                     l17351:
 33113                           
 33114                           ; BSR set to: 2
 33115  016766  0E00               	movlw	0
 33116  016768  6F12               	movwf	___flmul@a& (0+255),b
 33117  01676A  0E00               	movlw	0
 33118  01676C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 33119  01676E  0E00               	movlw	0
 33120  016770  6F14               	movwf	(___flmul@a+2)& (0+255),b
 33121  016772  0E00               	movlw	0
 33122  016774  6F15               	movwf	(___flmul@a+3)& (0+255),b
 33123  016776                     l3320:
 33124                           
 33125                           ; BSR set to: 2
 33126  016776  511B               	movf	___flmul@aexp& (0+255),w,b
 33127  016778  B4D8               	btfsc	status,2,c
 33128  01677A  D003               	goto	u20970
 33129                           
 33130                           ; BSR set to: 2
 33131  01677C  5120               	movf	___flmul@bexp& (0+255),w,b
 33132  01677E  A4D8               	btfss	status,2,c
 33133  016780  D009               	goto	l17359
 33134  016782                     u20970:
 33135                           
 33136                           ; BSR set to: 2
 33137  016782  0E00               	movlw	0
 33138  016784  6F0E               	movwf	?___flmul& (0+255),b
 33139  016786  0E00               	movlw	0
 33140  016788  6F0F               	movwf	(?___flmul+1)& (0+255),b
 33141  01678A  0E00               	movlw	0
 33142  01678C  6F10               	movwf	(?___flmul+2)& (0+255),b
 33143  01678E  0E00               	movlw	0
 33144  016790  6F11               	movwf	(?___flmul+3)& (0+255),b
 33145  016792  0012               	return	
 33146  016794                     l17359:
 33147                           
 33148                           ; BSR set to: 2
 33149  016794  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33150  016796  030E               	mulwf	___flmul@b& (0+255),b
 33151  016798  CFF3 F225          	movff	prodl,___flmul@temp
 33152  01679C  CFF4 F226          	movff	prodh,___flmul@temp+1
 33153                           
 33154                           ; BSR set to: 2
 33155  0167A0  5125               	movf	___flmul@temp& (0+255),w,b
 33156  0167A2  6F1C               	movwf	___flmul@grs& (0+255),b
 33157  0167A4  6B1D               	clrf	(___flmul@grs+1)& (0+255),b
 33158  0167A6  6B1E               	clrf	(___flmul@grs+2)& (0+255),b
 33159  0167A8  6B1F               	clrf	(___flmul@grs+3)& (0+255),b
 33160                           
 33161                           ; BSR set to: 2
 33162  0167AA  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33163  0167AC  6F21               	movwf	___flmul@prod& (0+255),b
 33164  0167AE  6B22               	clrf	(___flmul@prod+1)& (0+255),b
 33165  0167B0  6B23               	clrf	(___flmul@prod+2)& (0+255),b
 33166  0167B2  6B24               	clrf	(___flmul@prod+3)& (0+255),b
 33167  0167B4  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33168  0167B6  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33169  0167B8  CFF3 F225          	movff	prodl,___flmul@temp
 33170  0167BC  CFF4 F226          	movff	prodh,___flmul@temp+1
 33171                           
 33172                           ; BSR set to: 2
 33173  0167C0  5125               	movf	___flmul@temp& (0+255),w,b
 33174  0167C2  271C               	addwf	___flmul@grs& (0+255),f,b
 33175  0167C4  0E00               	movlw	0
 33176  0167C6  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33177  0167C8  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33178  0167CA  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33179                           
 33180                           ; BSR set to: 2
 33181  0167CC  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33182  0167CE  2721               	addwf	___flmul@prod& (0+255),f,b
 33183  0167D0  0E00               	movlw	0
 33184  0167D2  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33185  0167D4  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33186  0167D6  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33187  0167D8  5112               	movf	___flmul@a& (0+255),w,b
 33188  0167DA  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33189  0167DC  CFF3 F225          	movff	prodl,___flmul@temp
 33190  0167E0  CFF4 F226          	movff	prodh,___flmul@temp+1
 33191                           
 33192                           ; BSR set to: 2
 33193  0167E4  5125               	movf	___flmul@temp& (0+255),w,b
 33194  0167E6  271C               	addwf	___flmul@grs& (0+255),f,b
 33195  0167E8  0E00               	movlw	0
 33196  0167EA  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33197  0167EC  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33198  0167EE  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33199                           
 33200                           ; BSR set to: 2
 33201  0167F0  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33202  0167F2  2721               	addwf	___flmul@prod& (0+255),f,b
 33203  0167F4  0E00               	movlw	0
 33204  0167F6  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33205  0167F8  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33206  0167FA  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33207                           
 33208                           ; BSR set to: 2
 33209  0167FC  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33210  016800  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33211  016804  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33212  016808  6B1C               	clrf	___flmul@grs& (0+255),b
 33213                           
 33214                           ; BSR set to: 2
 33215  01680A  5112               	movf	___flmul@a& (0+255),w,b
 33216  01680C  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33217  01680E  CFF3 F225          	movff	prodl,___flmul@temp
 33218  016812  CFF4 F226          	movff	prodh,___flmul@temp+1
 33219                           
 33220                           ; BSR set to: 2
 33221  016816  5125               	movf	___flmul@temp& (0+255),w,b
 33222  016818  271C               	addwf	___flmul@grs& (0+255),f,b
 33223  01681A  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33224  01681C  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33225  01681E  0E00               	movlw	0
 33226  016820  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33227  016822  0E00               	movlw	0
 33228  016824  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33229                           
 33230                           ; BSR set to: 2
 33231  016826  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33232  016828  030E               	mulwf	___flmul@b& (0+255),b
 33233  01682A  CFF3 F225          	movff	prodl,___flmul@temp
 33234  01682E  CFF4 F226          	movff	prodh,___flmul@temp+1
 33235                           
 33236                           ; BSR set to: 2
 33237  016832  5125               	movf	___flmul@temp& (0+255),w,b
 33238  016834  271C               	addwf	___flmul@grs& (0+255),f,b
 33239  016836  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33240  016838  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33241  01683A  0E00               	movlw	0
 33242  01683C  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33243  01683E  0E00               	movlw	0
 33244  016840  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33245                           
 33246                           ; BSR set to: 2
 33247  016842  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33248  016846  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33249  01684A  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33250  01684E  6B1C               	clrf	___flmul@grs& (0+255),b
 33251  016850  5112               	movf	___flmul@a& (0+255),w,b
 33252  016852  030E               	mulwf	___flmul@b& (0+255),b
 33253  016854  CFF3 F225          	movff	prodl,___flmul@temp
 33254  016858  CFF4 F226          	movff	prodh,___flmul@temp+1
 33255                           
 33256                           ; BSR set to: 2
 33257  01685C  5125               	movf	___flmul@temp& (0+255),w,b
 33258  01685E  271C               	addwf	___flmul@grs& (0+255),f,b
 33259  016860  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33260  016862  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33261  016864  0E00               	movlw	0
 33262  016866  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33263  016868  0E00               	movlw	0
 33264  01686A  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33265                           
 33266                           ; BSR set to: 2
 33267  01686C  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33268  01686E  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33269  016870  CFF3 F225          	movff	prodl,___flmul@temp
 33270  016874  CFF4 F226          	movff	prodh,___flmul@temp+1
 33271  016878  5125               	movf	___flmul@temp& (0+255),w,b
 33272  01687A  2721               	addwf	___flmul@prod& (0+255),f,b
 33273  01687C  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33274  01687E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33275  016880  0E00               	movlw	0
 33276  016882  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33277  016884  0E00               	movlw	0
 33278  016886  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33279                           
 33280                           ; BSR set to: 2
 33281  016888  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33282  01688A  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33283  01688C  CFF3 F225          	movff	prodl,___flmul@temp
 33284  016890  CFF4 F226          	movff	prodh,___flmul@temp+1
 33285                           
 33286                           ; BSR set to: 2
 33287  016894  5125               	movf	___flmul@temp& (0+255),w,b
 33288  016896  2721               	addwf	___flmul@prod& (0+255),f,b
 33289  016898  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33290  01689A  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33291  01689C  0E00               	movlw	0
 33292  01689E  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33293  0168A0  0E00               	movlw	0
 33294  0168A2  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33295  0168A4  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33296  0168A6  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33297  0168A8  CFF3 F225          	movff	prodl,___flmul@temp
 33298  0168AC  CFF4 F226          	movff	prodh,___flmul@temp+1
 33299                           
 33300                           ; BSR set to: 2
 33301  0168B0  5125               	movf	___flmul@temp& (0+255),w,b
 33302  0168B2  6F16               	movwf	??___flmul& (0+255),b
 33303  0168B4  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33304  0168B6  6F17               	movwf	(??___flmul+1)& (0+255),b
 33305  0168B8  6B18               	clrf	(??___flmul+2)& (0+255),b
 33306  0168BA  6B19               	clrf	(??___flmul+3)& (0+255),b
 33307  0168BC  C218  F219         	movff	??___flmul+2,??___flmul+3
 33308  0168C0  C217  F218         	movff	??___flmul+1,??___flmul+2
 33309  0168C4  C216  F217         	movff	??___flmul,??___flmul+1
 33310  0168C8  6B16               	clrf	??___flmul& (0+255),b
 33311  0168CA  5116               	movf	??___flmul& (0+255),w,b
 33312  0168CC  2721               	addwf	___flmul@prod& (0+255),f,b
 33313  0168CE  5117               	movf	(??___flmul+1)& (0+255),w,b
 33314  0168D0  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33315  0168D2  5118               	movf	(??___flmul+2)& (0+255),w,b
 33316  0168D4  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33317  0168D6  5119               	movf	(??___flmul+3)& (0+255),w,b
 33318  0168D8  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33319                           
 33320                           ; BSR set to: 2
 33321  0168DA  C21C  F216         	movff	___flmul@grs,??___flmul
 33322  0168DE  C21D  F217         	movff	___flmul@grs+1,??___flmul+1
 33323  0168E2  C21E  F218         	movff	___flmul@grs+2,??___flmul+2
 33324  0168E6  C21F  F219         	movff	___flmul@grs+3,??___flmul+3
 33325  0168EA  0E19               	movlw	25
 33326  0168EC  D005               	goto	u20980
 33327  0168EE                     u20985:
 33328  0168EE  90D8               	bcf	status,0,c
 33329  0168F0  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33330  0168F2  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33331  0168F4  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33332  0168F6  3316               	rrcf	??___flmul& (0+255),f,b
 33333  0168F8                     u20980:
 33334  0168F8  2EE8               	decfsz	wreg,f,c
 33335  0168FA  D7F9               	goto	u20985
 33336  0168FC  5116               	movf	??___flmul& (0+255),w,b
 33337  0168FE  2721               	addwf	___flmul@prod& (0+255),f,b
 33338  016900  5117               	movf	(??___flmul+1)& (0+255),w,b
 33339  016902  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33340  016904  5118               	movf	(??___flmul+2)& (0+255),w,b
 33341  016906  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33342  016908  5119               	movf	(??___flmul+3)& (0+255),w,b
 33343  01690A  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33344                           
 33345                           ; BSR set to: 2
 33346  01690C  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33347  016910  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33348  016914  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33349  016918  6B1C               	clrf	___flmul@grs& (0+255),b
 33350                           
 33351                           ; BSR set to: 2
 33352  01691A  511B               	movf	___flmul@aexp& (0+255),w,b
 33353  01691C  C220  F216         	movff	___flmul@bexp,??___flmul
 33354  016920  6B17               	clrf	(??___flmul+1)& (0+255),b
 33355  016922  2716               	addwf	??___flmul& (0+255),f,b
 33356  016924  0E00               	movlw	0
 33357  016926  2317               	addwfc	(??___flmul+1)& (0+255),f,b
 33358  016928  0E82               	movlw	130
 33359  01692A  2516               	addwf	??___flmul& (0+255),w,b
 33360  01692C  6F25               	movwf	___flmul@temp& (0+255),b
 33361  01692E  0EFF               	movlw	255
 33362  016930  2117               	addwfc	(??___flmul+1)& (0+255),w,b
 33363  016932  6F26               	movwf	(___flmul@temp+1)& (0+255),b
 33364  016934  D00F               	goto	l17407
 33365  016936                     l17401:
 33366                           
 33367                           ; BSR set to: 2
 33368  016936  90D8               	bcf	status,0,c
 33369  016938  3721               	rlcf	___flmul@prod& (0+255),f,b
 33370  01693A  3722               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33371  01693C  3723               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33372  01693E  3724               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33373                           
 33374                           ; BSR set to: 2
 33375  016940  BF1F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33376                           
 33377                           ; BSR set to: 2
 33378  016942  8121               	bsf	___flmul@prod& (0+255),0,b
 33379                           
 33380                           ; BSR set to: 2
 33381  016944  90D8               	bcf	status,0,c
 33382  016946  371C               	rlcf	___flmul@grs& (0+255),f,b
 33383  016948  371D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33384  01694A  371E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33385  01694C  371F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33386  01694E  0725               	decf	___flmul@temp& (0+255),f,b
 33387  016950  A0D8               	btfss	status,0,c
 33388  016952  0726               	decf	(___flmul@temp+1)& (0+255),f,b
 33389  016954                     l17407:
 33390                           
 33391                           ; BSR set to: 2
 33392  016954  AF23               	btfss	(___flmul@prod+2)& (0+255),7,b
 33393  016956  D7EF               	goto	l17401
 33394                           
 33395                           ; BSR set to: 2
 33396  016958  0E00               	movlw	0
 33397  01695A  6F1B               	movwf	___flmul@aexp& (0+255),b
 33398                           
 33399                           ; BSR set to: 2
 33400  01695C  AF1F               	btfss	(___flmul@grs+3)& (0+255),7,b
 33401  01695E  D017               	goto	l3329
 33402                           
 33403                           ; BSR set to: 2
 33404  016960  0EFF               	movlw	255
 33405  016962  151C               	andwf	___flmul@grs& (0+255),w,b
 33406  016964  6F16               	movwf	??___flmul& (0+255),b
 33407  016966  0EFF               	movlw	255
 33408  016968  151D               	andwf	(___flmul@grs+1)& (0+255),w,b
 33409  01696A  6F17               	movwf	(??___flmul+1)& (0+255),b
 33410  01696C  0EFF               	movlw	255
 33411  01696E  151E               	andwf	(___flmul@grs+2)& (0+255),w,b
 33412  016970  6F18               	movwf	(??___flmul+2)& (0+255),b
 33413  016972  0E7F               	movlw	127
 33414  016974  151F               	andwf	(___flmul@grs+3)& (0+255),w,b
 33415  016976  6F19               	movwf	(??___flmul+3)& (0+255),b
 33416  016978  5116               	movf	??___flmul& (0+255),w,b
 33417  01697A  1117               	iorwf	(??___flmul+1)& (0+255),w,b
 33418  01697C  1118               	iorwf	(??___flmul+2)& (0+255),w,b
 33419  01697E  1119               	iorwf	(??___flmul+3)& (0+255),w,b
 33420  016980  B4D8               	btfsc	status,2,c
 33421  016982  D003               	goto	l3330
 33422  016984                     u21020:
 33423                           
 33424                           ; BSR set to: 2
 33425  016984  0E01               	movlw	1
 33426  016986  6F1B               	movwf	___flmul@aexp& (0+255),b
 33427  016988  D002               	goto	l3329
 33428  01698A                     l3330:
 33429                           
 33430                           ; BSR set to: 2
 33431  01698A  B121               	btfsc	___flmul@prod& (0+255),0,b
 33432  01698C  D7FB               	goto	u21020
 33433  01698E                     l3329:
 33434                           
 33435                           ; BSR set to: 2
 33436  01698E  511B               	movf	___flmul@aexp& (0+255),w,b
 33437  016990  B4D8               	btfsc	status,2,c
 33438  016992  D01F               	goto	l17427
 33439                           
 33440                           ; BSR set to: 2
 33441  016994  0E01               	movlw	1
 33442  016996  2721               	addwf	___flmul@prod& (0+255),f,b
 33443  016998  0E00               	movlw	0
 33444  01699A  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33445  01699C  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33446  01699E  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33447                           
 33448                           ; BSR set to: 2
 33449  0169A0  A124               	btfss	(___flmul@prod+3)& (0+255),0,b
 33450  0169A2  D017               	goto	l17427
 33451                           
 33452                           ; BSR set to: 2
 33453  0169A4  C221  F216         	movff	___flmul@prod,??___flmul
 33454  0169A8  C222  F217         	movff	___flmul@prod+1,??___flmul+1
 33455  0169AC  C223  F218         	movff	___flmul@prod+2,??___flmul+2
 33456  0169B0  C224  F219         	movff	___flmul@prod+3,??___flmul+3
 33457  0169B4  3519               	rlcf	(??___flmul+3)& (0+255),w,b
 33458  0169B6  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33459  0169B8  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33460  0169BA  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33461  0169BC  3316               	rrcf	??___flmul& (0+255),f,b
 33462  0169BE  C216  F221         	movff	??___flmul,___flmul@prod
 33463  0169C2  C217  F222         	movff	??___flmul+1,___flmul@prod+1
 33464  0169C6  C218  F223         	movff	??___flmul+2,___flmul@prod+2
 33465  0169CA  C219  F224         	movff	??___flmul+3,___flmul@prod+3
 33466                           
 33467                           ; BSR set to: 2
 33468  0169CE  4B25               	infsnz	___flmul@temp& (0+255),f,b
 33469  0169D0  2B26               	incf	(___flmul@temp+1)& (0+255),f,b
 33470  0169D2                     l17427:
 33471                           
 33472                           ; BSR set to: 2
 33473  0169D2  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33474  0169D4  D00D               	goto	l17431
 33475  0169D6  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33476  0169D8  E103               	bnz	u21060
 33477  0169DA  2925               	incf	___flmul@temp& (0+255),w,b
 33478  0169DC  A0D8               	btfss	status,0,c
 33479  0169DE  D008               	goto	l17431
 33480  0169E0                     u21060:
 33481                           
 33482                           ; BSR set to: 2
 33483  0169E0  0E00               	movlw	0
 33484  0169E2  6F21               	movwf	___flmul@prod& (0+255),b
 33485  0169E4  0E00               	movlw	0
 33486  0169E6  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33487  0169E8  0E80               	movlw	128
 33488  0169EA  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33489  0169EC  0E7F               	movlw	127
 33490  0169EE  D020               	goto	L25
 33491  0169F0                     l17431:
 33492                           
 33493                           ; BSR set to: 2
 33494  0169F0  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33495  0169F2  D005               	goto	u21070
 33496  0169F4  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33497  0169F6  E10E               	bnz	l3337
 33498  0169F8  0525               	decf	___flmul@temp& (0+255),w,b
 33499  0169FA  B0D8               	btfsc	status,0,c
 33500  0169FC  D00B               	goto	l3337
 33501  0169FE                     u21070:
 33502                           
 33503                           ; BSR set to: 2
 33504  0169FE  0E00               	movlw	0
 33505  016A00  6F21               	movwf	___flmul@prod& (0+255),b
 33506  016A02  0E00               	movlw	0
 33507  016A04  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33508  016A06  0E00               	movlw	0
 33509  016A08  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33510  016A0A  0E00               	movlw	0
 33511  016A0C  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33512  016A0E  0E00               	movlw	0
 33513  016A10  6F1A               	movwf	___flmul@sign& (0+255),b
 33514  016A12  D00F               	goto	l17443
 33515  016A14                     l3337:
 33516                           
 33517                           ; BSR set to: 2
 33518  016A14  C225  F220         	movff	___flmul@temp,___flmul@bexp
 33519                           
 33520                           ; BSR set to: 2
 33521  016A18  0EFF               	movlw	255
 33522  016A1A  1721               	andwf	___flmul@prod& (0+255),f,b
 33523  016A1C  0EFF               	movlw	255
 33524  016A1E  1722               	andwf	(___flmul@prod+1)& (0+255),f,b
 33525  016A20  0E7F               	movlw	127
 33526  016A22  1723               	andwf	(___flmul@prod+2)& (0+255),f,b
 33527  016A24  0E00               	movlw	0
 33528  016A26  1724               	andwf	(___flmul@prod+3)& (0+255),f,b
 33529                           
 33530                           ; BSR set to: 2
 33531  016A28  B120               	btfsc	___flmul@bexp& (0+255),0,b
 33532                           
 33533                           ; BSR set to: 2
 33534  016A2A  8F23               	bsf	(___flmul@prod+2)& (0+255),7,b
 33535                           
 33536                           ; BSR set to: 2
 33537  016A2C  90D8               	bcf	status,0,c
 33538  016A2E  3120               	rrcf	___flmul@bexp& (0+255),w,b
 33539  016A30                     L25:
 33540  016A30  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33541  016A32                     l17443:
 33542                           
 33543                           ; BSR set to: 2
 33544  016A32  511A               	movf	___flmul@sign& (0+255),w,b
 33545  016A34  1324               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33546                           
 33547                           ; BSR set to: 2
 33548  016A36  C221  F20E         	movff	___flmul@prod,?___flmul
 33549  016A3A  C222  F20F         	movff	___flmul@prod+1,?___flmul+1
 33550  016A3E  C223  F210         	movff	___flmul@prod+2,?___flmul+2
 33551  016A42  C224  F211         	movff	___flmul@prod+3,?___flmul+3
 33552                           
 33553                           ; BSR set to: 2
 33554  016A46  0012               	return		;funcret
 33555  016A48                     __end_of___flmul:
 33556                           	opt callstack 0
 33557                           
 33558 ;; *************** function _I2C2_MasterWrite *****************
 33559 ;; Defined at:
 33560 ;;		line 601 in file "mcc_generated_files/i2c2.c"
 33561 ;; Parameters:    Size  Location     Type
 33562 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33563 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33564 ;;		 -> NULL(0), 
 33565 ;;  length          1   11[BANK2 ] unsigned char 
 33566 ;;  address         2   12[BANK2 ] unsigned int 
 33567 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33568 ;;		 -> I2C_STATUS(1), 
 33569 ;; Auto vars:     Size  Location     Type
 33570 ;;		None
 33571 ;; Return value:  Size  Location     Type
 33572 ;;                  1    wreg      void 
 33573 ;; Registers used:
 33574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33575 ;; Tracked objects:
 33576 ;;		On entry : 0/0
 33577 ;;		On exit  : 0/0
 33578 ;;		Unchanged: 0/0
 33579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33580 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33583 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;Total ram usage:        7 bytes
 33585 ;; Hardware stack levels used:    1
 33586 ;; Hardware stack levels required when called:   13
 33587 ;; This function calls:
 33588 ;;		_I2C2_MasterTRBInsert
 33589 ;;		_I2C2_MasterWriteTRBBuild
 33590 ;; This function is called by:
 33591 ;;		_LM73TempSensorInitialize
 33592 ;;		_LM73AcquisitionHandler
 33593 ;;		_OLED_Command
 33594 ;;		_OLED_PutChar
 33595 ;;		_OLED_Data
 33596 ;; This function uses a non-reentrant model
 33597 ;;
 33598                           
 33599                           	psect	text116
 33600  01B988                     __ptext116:
 33601                           	opt callstack 0
 33602  01B988                     _I2C2_MasterWrite:
 33603                           	opt callstack 13
 33604                           
 33605                           ;i2c2.c: 607: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 610: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33606                           
 33607                           ; BSR set to: 2
 33608                           ;incstack = 0
 33609  01B988  0101               	movlb	1	; () banked
 33610  01B98A  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33611  01B98C  D01E               	goto	l18551
 33612                           
 33613                           ; BSR set to: 1
 33614                           ;i2c2.c: 611: {;i2c2.c: 612: I2C2_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 33615  01B98E  0E9E               	movlw	low I2C2_MasterWrite@trBlock
 33616  01B990  0102               	movlb	2	; () banked
 33617  01B992  6F00               	movwf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),b
 33618  01B994  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33619  01B996  6F01               	movwf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 33620  01B998  C209  F202         	movff	I2C2_MasterWrite@pdata,I2C2_MasterWriteTRBBuild@pdata
 33621  01B99C  C20A  F203         	movff	I2C2_MasterWrite@pdata+1,I2C2_MasterWriteTRBBuild@pdata+1
 33622  01B9A0  C20B  F204         	movff	I2C2_MasterWrite@length,I2C2_MasterWriteTRBBuild@length
 33623  01B9A4  C20C  F205         	movff	I2C2_MasterWrite@address,I2C2_MasterWriteTRBBuild@address
 33624  01B9A8  C20D  F206         	movff	I2C2_MasterWrite@address+1,I2C2_MasterWriteTRBBuild@address+1
 33625  01B9AC  ECC7  F0DD         	call	_I2C2_MasterWriteTRBBuild	;wreg free
 33626                           
 33627                           ;i2c2.c: 613: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33628  01B9B0  0E9E               	movlw	low I2C2_MasterWrite@trBlock
 33629  01B9B2  0102               	movlb	2	; () banked
 33630  01B9B4  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33631  01B9B6  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33632  01B9B8  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33633  01B9BA  C20E  F202         	movff	I2C2_MasterWrite@pflag,I2C2_MasterTRBInsert@pflag
 33634  01B9BE  C20F  F203         	movff	I2C2_MasterWrite@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33635  01B9C2  0E01               	movlw	1
 33636  01B9C4  ECDC  F0D5         	call	_I2C2_MasterTRBInsert
 33637                           
 33638                           ;i2c2.c: 614: }
 33639  01B9C8  0012               	return	
 33640  01B9CA                     l18551:
 33641                           
 33642                           ; BSR set to: 1
 33643                           ;i2c2.c: 615: else;i2c2.c: 616: {;i2c2.c: 617: *pflag = I2C2_MESSAGE_FAIL;
 33644  01B9CA  C20E  FFD9         	movff	I2C2_MasterWrite@pflag,fsr2l
 33645  01B9CE  C20F  FFDA         	movff	I2C2_MasterWrite@pflag+1,fsr2h
 33646  01B9D2  0E01               	movlw	1
 33647  01B9D4  6EDF               	movwf	indf2,c
 33648  01B9D6  0012               	return		;funcret
 33649  01B9D8                     __end_of_I2C2_MasterWrite:
 33650                           	opt callstack 0
 33651                           
 33652 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 33653 ;; Defined at:
 33654 ;;		line 722 in file "mcc_generated_files/i2c2.c"
 33655 ;; Parameters:    Size  Location     Type
 33656 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33657 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 33658 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33659 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33660 ;;		 -> NULL(0), 
 33661 ;;  length          1    4[BANK2 ] unsigned char 
 33662 ;;  address         2    5[BANK2 ] unsigned int 
 33663 ;; Auto vars:     Size  Location     Type
 33664 ;;		None
 33665 ;; Return value:  Size  Location     Type
 33666 ;;                  1    wreg      void 
 33667 ;; Registers used:
 33668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33669 ;; Tracked objects:
 33670 ;;		On entry : 0/0
 33671 ;;		On exit  : 0/0
 33672 ;;		Unchanged: 0/0
 33673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33674 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33676 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33677 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33678 ;;Total ram usage:        9 bytes
 33679 ;; Hardware stack levels used:    1
 33680 ;; Hardware stack levels required when called:   11
 33681 ;; This function calls:
 33682 ;;		Nothing
 33683 ;; This function is called by:
 33684 ;;		_I2C2_MasterWrite
 33685 ;; This function uses a non-reentrant model
 33686 ;;
 33687                           
 33688                           	psect	text117
 33689  01BB8E                     __ptext117:
 33690                           	opt callstack 0
 33691  01BB8E                     _I2C2_MasterWriteTRBBuild:
 33692                           	opt callstack 14
 33693                           
 33694                           ;i2c2.c: 728: ptrb->address = address << 1;
 33695                           
 33696                           ;incstack = 0
 33697  01BB8E  C205  F207         	movff	I2C2_MasterWriteTRBBuild@address,??_I2C2_MasterWriteTRBBuild
 33698  01BB92  C206  F208         	movff	I2C2_MasterWriteTRBBuild@address+1,??_I2C2_MasterWriteTRBBuild+1
 33699  01BB96  90D8               	bcf	status,0,c
 33700  01BB98  0102               	movlb	2	; () banked
 33701  01BB9A  3707               	rlcf	??_I2C2_MasterWriteTRBBuild& (0+255),f,b
 33702  01BB9C  3708               	rlcf	(??_I2C2_MasterWriteTRBBuild+1)& (0+255),f,b
 33703  01BB9E  C200  FFD9         	movff	I2C2_MasterWriteTRBBuild@ptrb,fsr2l
 33704  01BBA2  C201  FFDA         	movff	I2C2_MasterWriteTRBBuild@ptrb+1,fsr2h
 33705  01BBA6  C207  FFDE         	movff	??_I2C2_MasterWriteTRBBuild,postinc2
 33706  01BBAA  C208  FFDD         	movff	??_I2C2_MasterWriteTRBBuild+1,postdec2
 33707                           
 33708                           ; BSR set to: 2
 33709                           ;i2c2.c: 729: ptrb->length = length;
 33710  01BBAE  EE20 F002          	lfsr	2,2
 33711  01BBB2  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33712  01BBB4  26D9               	addwf	fsr2l,f,c
 33713  01BBB6  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33714  01BBB8  22DA               	addwfc	fsr2h,f,c
 33715  01BBBA  C204  FFDF         	movff	I2C2_MasterWriteTRBBuild@length,indf2
 33716                           
 33717                           ; BSR set to: 2
 33718                           ;i2c2.c: 730: ptrb->pbuffer = pdata;
 33719  01BBBE  EE20 F003          	lfsr	2,3
 33720  01BBC2  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33721  01BBC4  26D9               	addwf	fsr2l,f,c
 33722  01BBC6  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33723  01BBC8  22DA               	addwfc	fsr2h,f,c
 33724  01BBCA  C202  FFDE         	movff	I2C2_MasterWriteTRBBuild@pdata,postinc2
 33725  01BBCE  C203  FFDD         	movff	I2C2_MasterWriteTRBBuild@pdata+1,postdec2
 33726                           
 33727                           ; BSR set to: 2
 33728  01BBD2  0012               	return		;funcret
 33729  01BBD4                     __end_of_I2C2_MasterWriteTRBBuild:
 33730                           	opt callstack 0
 33731                           
 33732 ;; *************** function _I2C2_MasterRead *****************
 33733 ;; Defined at:
 33734 ;;		line 622 in file "mcc_generated_files/i2c2.c"
 33735 ;; Parameters:    Size  Location     Type
 33736 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33737 ;;		 -> LM73_temp_results(18), 
 33738 ;;  length          1   11[BANK2 ] unsigned char 
 33739 ;;  address         2   12[BANK2 ] unsigned int 
 33740 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33741 ;;		 -> I2C_STATUS(1), 
 33742 ;; Auto vars:     Size  Location     Type
 33743 ;;		None
 33744 ;; Return value:  Size  Location     Type
 33745 ;;                  1    wreg      void 
 33746 ;; Registers used:
 33747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33748 ;; Tracked objects:
 33749 ;;		On entry : 0/0
 33750 ;;		On exit  : 0/0
 33751 ;;		Unchanged: 0/0
 33752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33753 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33756 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33757 ;;Total ram usage:        7 bytes
 33758 ;; Hardware stack levels used:    1
 33759 ;; Hardware stack levels required when called:   13
 33760 ;; This function calls:
 33761 ;;		_I2C2_MasterReadTRBBuild
 33762 ;;		_I2C2_MasterTRBInsert
 33763 ;; This function is called by:
 33764 ;;		_LM73AcquisitionHandler
 33765 ;; This function uses a non-reentrant model
 33766 ;;
 33767                           
 33768                           	psect	text118
 33769  01B9D8                     __ptext118:
 33770                           	opt callstack 0
 33771  01B9D8                     _I2C2_MasterRead:
 33772                           	opt callstack 16
 33773                           
 33774                           ;i2c2.c: 628: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 632: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33775                           
 33776                           ; BSR set to: 2
 33777                           ;incstack = 0
 33778  01B9D8  0101               	movlb	1	; () banked
 33779  01B9DA  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33780  01B9DC  D01E               	goto	l20975
 33781                           
 33782                           ; BSR set to: 1
 33783                           ;i2c2.c: 633: {;i2c2.c: 634: I2C2_MasterReadTRBBuild(&trBlock, pdata, length, address);
 33784  01B9DE  0E99               	movlw	low I2C2_MasterRead@trBlock
 33785  01B9E0  0102               	movlb	2	; () banked
 33786  01B9E2  6F00               	movwf	I2C2_MasterReadTRBBuild@ptrb& (0+255),b
 33787  01B9E4  0E01               	movlw	high I2C2_MasterRead@trBlock
 33788  01B9E6  6F01               	movwf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),b
 33789  01B9E8  C209  F202         	movff	I2C2_MasterRead@pdata,I2C2_MasterReadTRBBuild@pdata
 33790  01B9EC  C20A  F203         	movff	I2C2_MasterRead@pdata+1,I2C2_MasterReadTRBBuild@pdata+1
 33791  01B9F0  C20B  F204         	movff	I2C2_MasterRead@length,I2C2_MasterReadTRBBuild@length
 33792  01B9F4  C20C  F205         	movff	I2C2_MasterRead@address,I2C2_MasterReadTRBBuild@address
 33793  01B9F8  C20D  F206         	movff	I2C2_MasterRead@address+1,I2C2_MasterReadTRBBuild@address+1
 33794  01B9FC  ECFA  F0DB         	call	_I2C2_MasterReadTRBBuild	;wreg free
 33795                           
 33796                           ;i2c2.c: 635: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33797  01BA00  0E99               	movlw	low I2C2_MasterRead@trBlock
 33798  01BA02  0102               	movlb	2	; () banked
 33799  01BA04  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33800  01BA06  0E01               	movlw	high I2C2_MasterRead@trBlock
 33801  01BA08  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33802  01BA0A  C20E  F202         	movff	I2C2_MasterRead@pflag,I2C2_MasterTRBInsert@pflag
 33803  01BA0E  C20F  F203         	movff	I2C2_MasterRead@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33804  01BA12  0E01               	movlw	1
 33805  01BA14  ECDC  F0D5         	call	_I2C2_MasterTRBInsert
 33806                           
 33807                           ;i2c2.c: 636: }
 33808  01BA18  0012               	return	
 33809  01BA1A                     l20975:
 33810                           
 33811                           ; BSR set to: 1
 33812                           ;i2c2.c: 637: else;i2c2.c: 638: {;i2c2.c: 639: *pflag = I2C2_MESSAGE_FAIL;
 33813  01BA1A  C20E  FFD9         	movff	I2C2_MasterRead@pflag,fsr2l
 33814  01BA1E  C20F  FFDA         	movff	I2C2_MasterRead@pflag+1,fsr2h
 33815  01BA22  0E01               	movlw	1
 33816  01BA24  6EDF               	movwf	indf2,c
 33817  01BA26  0012               	return		;funcret
 33818  01BA28                     __end_of_I2C2_MasterRead:
 33819                           	opt callstack 0
 33820                           
 33821 ;; *************** function _I2C2_MasterTRBInsert *****************
 33822 ;; Defined at:
 33823 ;;		line 655 in file "mcc_generated_files/i2c2.c"
 33824 ;; Parameters:    Size  Location     Type
 33825 ;;  count           1    wreg     unsigned char 
 33826 ;;  ptrb_list       2    0[BANK2 ] PTR struct .
 33827 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 33828 ;;  pflag           2    2[BANK2 ] PTR enum E9433
 33829 ;;		 -> I2C_STATUS(1), 
 33830 ;; Auto vars:     Size  Location     Type
 33831 ;;  count           1    5[BANK2 ] unsigned char 
 33832 ;; Return value:  Size  Location     Type
 33833 ;;                  1    wreg      void 
 33834 ;; Registers used:
 33835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33836 ;; Tracked objects:
 33837 ;;		On entry : 0/0
 33838 ;;		On exit  : 0/0
 33839 ;;		Unchanged: 0/0
 33840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33841 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33842 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33843 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33844 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33845 ;;Total ram usage:        6 bytes
 33846 ;; Hardware stack levels used:    1
 33847 ;; Hardware stack levels required when called:   12
 33848 ;; This function calls:
 33849 ;;		_I2C2_WaitForLastPacketToComplete
 33850 ;; This function is called by:
 33851 ;;		_I2C2_MasterWrite
 33852 ;;		_I2C2_MasterRead
 33853 ;; This function uses a non-reentrant model
 33854 ;;
 33855                           
 33856                           	psect	text119
 33857  01ABB8                     __ptext119:
 33858                           	opt callstack 0
 33859  01ABB8                     _I2C2_MasterTRBInsert:
 33860                           	opt callstack 13
 33861                           
 33862                           ;incstack = 0
 33863                           ;I2C2_MasterTRBInsert@count stored from wreg
 33864  01ABB8  0102               	movlb	2	; () banked
 33865  01ABBA  6F05               	movwf	I2C2_MasterTRBInsert@count& (0+255),b
 33866                           
 33867                           ;i2c2.c: 662: if (i2c2_object.trStatus.s.full != 1)
 33868  01ABBC  0101               	movlb	1	; () banked
 33869  01ABBE  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33870  01ABC0  D039               	goto	l17969
 33871                           
 33872                           ; BSR set to: 1
 33873                           ;i2c2.c: 663: {;i2c2.c: 664: *pflag = I2C2_MESSAGE_PENDING;
 33874  01ABC2  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33875  01ABC6  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33876  01ABCA  0E02               	movlw	2
 33877  01ABCC  6EDF               	movwf	indf2,c
 33878                           
 33879                           ; BSR set to: 1
 33880                           ;i2c2.c: 666: i2c2_object.pTrTail->ptrb_list = ptrb_list;
 33881  01ABCE  EE20 F001          	lfsr	2,1
 33882  01ABD2  5161               	movf	_i2c2_object& (0+255),w,b
 33883  01ABD4  26D9               	addwf	fsr2l,f,c
 33884  01ABD6  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33885  01ABD8  22DA               	addwfc	fsr2h,f,c
 33886  01ABDA  C200  FFDE         	movff	I2C2_MasterTRBInsert@ptrb_list,postinc2
 33887  01ABDE  C201  FFDD         	movff	I2C2_MasterTRBInsert@ptrb_list+1,postdec2
 33888                           
 33889                           ; BSR set to: 1
 33890                           ;i2c2.c: 667: i2c2_object.pTrTail->count = count;
 33891  01ABE2  C161  FFD9         	movff	_i2c2_object,fsr2l
 33892  01ABE6  C162  FFDA         	movff	_i2c2_object+1,fsr2h
 33893  01ABEA  C205  FFDF         	movff	I2C2_MasterTRBInsert@count,indf2
 33894                           
 33895                           ; BSR set to: 1
 33896                           ;i2c2.c: 668: i2c2_object.pTrTail->pTrFlag = pflag;
 33897  01ABEE  EE20 F003          	lfsr	2,3
 33898  01ABF2  5161               	movf	_i2c2_object& (0+255),w,b
 33899  01ABF4  26D9               	addwf	fsr2l,f,c
 33900  01ABF6  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33901  01ABF8  22DA               	addwfc	fsr2h,f,c
 33902  01ABFA  C202  FFDE         	movff	I2C2_MasterTRBInsert@pflag,postinc2
 33903  01ABFE  C203  FFDD         	movff	I2C2_MasterTRBInsert@pflag+1,postdec2
 33904                           
 33905                           ; BSR set to: 1
 33906                           ;i2c2.c: 669: i2c2_object.pTrTail++;
 33907  01AC02  0E05               	movlw	5
 33908  01AC04  2761               	addwf	_i2c2_object& (0+255),f,b
 33909  01AC06  0E00               	movlw	0
 33910  01AC08  2362               	addwfc	(_i2c2_object+1)& (0+255),f,b
 33911                           
 33912                           ; BSR set to: 1
 33913                           ;i2c2.c: 672: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
 33914  01AC0A  0EA8               	movlw	low (_i2c2_tr_queue+5)
 33915  01AC0C  1961               	xorwf	_i2c2_object& (0+255),w,b
 33916  01AC0E  E108               	bnz	l17965
 33917  01AC10  0E01               	movlw	high (_i2c2_tr_queue+5)
 33918  01AC12  1962               	xorwf	(_i2c2_object+1)& (0+255),w,b
 33919  01AC14  A4D8               	btfss	status,2,c
 33920  01AC16  D004               	goto	l17965
 33921                           
 33922                           ; BSR set to: 1
 33923                           ;i2c2.c: 673: {;i2c2.c: 675: i2c2_object.pTrTail = i2c2_tr_queue;
 33924  01AC18  0EA3               	movlw	low _i2c2_tr_queue
 33925  01AC1A  6F61               	movwf	_i2c2_object& (0+255),b
 33926  01AC1C  0E01               	movlw	high _i2c2_tr_queue
 33927  01AC1E  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 33928  01AC20                     l17965:
 33929                           
 33930                           ; BSR set to: 1
 33931                           ;i2c2.c: 676: };i2c2.c: 680: i2c2_object.trStatus.s.empty = 0;
 33932  01AC20  9365               	bcf	(_i2c2_object+4)& (0+255),1,b
 33933                           
 33934                           ;i2c2.c: 683: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
 33935  01AC22  5161               	movf	_i2c2_object& (0+255),w,b
 33936  01AC24  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 33937  01AC26  E10C               	bnz	l17971
 33938  01AC28  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33939  01AC2A  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 33940  01AC2C  A4D8               	btfss	status,2,c
 33941  01AC2E  D008               	goto	l17971
 33942                           
 33943                           ; BSR set to: 1
 33944                           ;i2c2.c: 684: {;i2c2.c: 686: i2c2_object.trStatus.s.full = 1;
 33945  01AC30  8165               	bsf	(_i2c2_object+4)& (0+255),0,b
 33946  01AC32  D006               	goto	l17971
 33947  01AC34                     l17969:
 33948                           
 33949                           ; BSR set to: 1
 33950                           ;i2c2.c: 690: else;i2c2.c: 691: {;i2c2.c: 692: *pflag = I2C2_MESSAGE_FAIL;
 33951  01AC34  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33952  01AC38  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33953  01AC3C  0E01               	movlw	1
 33954  01AC3E  6EDF               	movwf	indf2,c
 33955  01AC40                     l17971:
 33956                           
 33957                           ; BSR set to: 1
 33958                           ;i2c2.c: 693: };i2c2.c: 696: if (*pflag == I2C2_MESSAGE_PENDING)
 33959  01AC40  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33960  01AC44  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33961  01AC48  0E02               	movlw	2
 33962  01AC4A  18DE               	xorwf	postinc2,w,c
 33963  01AC4C  A4D8               	btfss	status,2,c
 33964  01AC4E  0012               	return	
 33965                           
 33966                           ; BSR set to: 1
 33967                           ;i2c2.c: 697: {;i2c2.c: 698: I2C2_WaitForLastPacketToComplete();
 33968  01AC50  EC41  F0E4         	call	_I2C2_WaitForLastPacketToComplete	;wreg free
 33969                           
 33970                           ;i2c2.c: 703: PIR3bits.SSP2IF = 1;
 33971  01AC54  010E               	movlb	14	; () banked
 33972  01AC56  85CD               	bsf	205,2,b	;volatile
 33973  01AC58  0012               	return		;funcret
 33974  01AC5A                     __end_of_I2C2_MasterTRBInsert:
 33975                           	opt callstack 0
 33976                           
 33977 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 33978 ;; Defined at:
 33979 ;;		line 645 in file "mcc_generated_files/i2c2.c"
 33980 ;; Parameters:    Size  Location     Type
 33981 ;;		None
 33982 ;; Auto vars:     Size  Location     Type
 33983 ;;		None
 33984 ;; Return value:  Size  Location     Type
 33985 ;;                  1    wreg      void 
 33986 ;; Registers used:
 33987 ;;		wreg, status,2
 33988 ;; Tracked objects:
 33989 ;;		On entry : 0/0
 33990 ;;		On exit  : 0/0
 33991 ;;		Unchanged: 0/0
 33992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33997 ;;Total ram usage:        0 bytes
 33998 ;; Hardware stack levels used:    1
 33999 ;; Hardware stack levels required when called:   11
 34000 ;; This function calls:
 34001 ;;		Nothing
 34002 ;; This function is called by:
 34003 ;;		_I2C2_MasterTRBInsert
 34004 ;; This function uses a non-reentrant model
 34005 ;;
 34006                           
 34007                           	psect	text120
 34008  01C882                     __ptext120:
 34009                           	opt callstack 0
 34010  01C882                     _I2C2_WaitForLastPacketToComplete:
 34011                           	opt callstack 13
 34012                           
 34013                           ;i2c2.c: 647: while(i2c2_state != S_MASTER_IDLE)
 34014                           
 34015                           ;incstack = 0
 34016  01C882  0100               	movlb	0	; () banked
 34017  01C884  51DB               	movf	_i2c2_state& (0+255),w,b
 34018  01C886  B4D8               	btfsc	status,2,c
 34019  01C888  0012               	return	
 34020  01C88A  D7FB               	goto	_I2C2_WaitForLastPacketToComplete
 34021  01C88C                     __end_of_I2C2_WaitForLastPacketToComplete:
 34022                           	opt callstack 0
 34023                           
 34024 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 34025 ;; Defined at:
 34026 ;;		line 709 in file "mcc_generated_files/i2c2.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;  ptrb            2    0[BANK2 ] PTR struct .
 34029 ;;		 -> I2C2_MasterRead@trBlock(5), 
 34030 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 34031 ;;		 -> LM73_temp_results(18), 
 34032 ;;  length          1    4[BANK2 ] unsigned char 
 34033 ;;  address         2    5[BANK2 ] unsigned int 
 34034 ;; Auto vars:     Size  Location     Type
 34035 ;;		None
 34036 ;; Return value:  Size  Location     Type
 34037 ;;                  1    wreg      void 
 34038 ;; Registers used:
 34039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34040 ;; Tracked objects:
 34041 ;;		On entry : 0/0
 34042 ;;		On exit  : 0/0
 34043 ;;		Unchanged: 0/0
 34044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34045 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34047 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34048 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34049 ;;Total ram usage:        9 bytes
 34050 ;; Hardware stack levels used:    1
 34051 ;; Hardware stack levels required when called:   11
 34052 ;; This function calls:
 34053 ;;		Nothing
 34054 ;; This function is called by:
 34055 ;;		_I2C2_MasterRead
 34056 ;; This function uses a non-reentrant model
 34057 ;;
 34058                           
 34059                           	psect	text121
 34060  01B7F4                     __ptext121:
 34061                           	opt callstack 0
 34062  01B7F4                     _I2C2_MasterReadTRBBuild:
 34063                           	opt callstack 17
 34064                           
 34065                           ;i2c2.c: 715: ptrb->address = address << 1;
 34066                           
 34067                           ; BSR set to: 0
 34068                           ;incstack = 0
 34069  01B7F4  C205  F207         	movff	I2C2_MasterReadTRBBuild@address,??_I2C2_MasterReadTRBBuild
 34070  01B7F8  C206  F208         	movff	I2C2_MasterReadTRBBuild@address+1,??_I2C2_MasterReadTRBBuild+1
 34071  01B7FC  90D8               	bcf	status,0,c
 34072  01B7FE  0102               	movlb	2	; () banked
 34073  01B800  3707               	rlcf	??_I2C2_MasterReadTRBBuild& (0+255),f,b
 34074  01B802  3708               	rlcf	(??_I2C2_MasterReadTRBBuild+1)& (0+255),f,b
 34075  01B804  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 34076  01B808  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 34077  01B80C  C207  FFDE         	movff	??_I2C2_MasterReadTRBBuild,postinc2
 34078  01B810  C208  FFDD         	movff	??_I2C2_MasterReadTRBBuild+1,postdec2
 34079                           
 34080                           ; BSR set to: 2
 34081                           ;i2c2.c: 717: ptrb->address |= 0x01;
 34082  01B814  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 34083  01B818  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 34084  01B81C  0E00               	movlw	0
 34085  01B81E  80DB               	bsf	plusw2,0,c
 34086                           
 34087                           ; BSR set to: 2
 34088                           ;i2c2.c: 718: ptrb->length = length;
 34089  01B820  EE20 F002          	lfsr	2,2
 34090  01B824  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 34091  01B826  26D9               	addwf	fsr2l,f,c
 34092  01B828  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 34093  01B82A  22DA               	addwfc	fsr2h,f,c
 34094  01B82C  C204  FFDF         	movff	I2C2_MasterReadTRBBuild@length,indf2
 34095                           
 34096                           ; BSR set to: 2
 34097                           ;i2c2.c: 719: ptrb->pbuffer = pdata;
 34098  01B830  EE20 F003          	lfsr	2,3
 34099  01B834  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 34100  01B836  26D9               	addwf	fsr2l,f,c
 34101  01B838  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 34102  01B83A  22DA               	addwfc	fsr2h,f,c
 34103  01B83C  C202  FFDE         	movff	I2C2_MasterReadTRBBuild@pdata,postinc2
 34104  01B840  C203  FFDD         	movff	I2C2_MasterReadTRBBuild@pdata+1,postdec2
 34105                           
 34106                           ; BSR set to: 2
 34107  01B844  0012               	return		;funcret
 34108  01B846                     __end_of_I2C2_MasterReadTRBBuild:
 34109                           	opt callstack 0
 34110                           
 34111 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 34112 ;; Defined at:
 34113 ;;		line 142 in file "mcc_generated_files/interrupt_manager.c"
 34114 ;; Parameters:    Size  Location     Type
 34115 ;;		None
 34116 ;; Auto vars:     Size  Location     Type
 34117 ;;		None
 34118 ;; Return value:  Size  Location     Type
 34119 ;;                  1    wreg      void 
 34120 ;; Registers used:
 34121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34122 ;; Tracked objects:
 34123 ;;		On entry : 0/0
 34124 ;;		On exit  : 0/0
 34125 ;;		Unchanged: 0/0
 34126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34129 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34130 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34131 ;;Total ram usage:        9 bytes
 34132 ;; Hardware stack levels used:    1
 34133 ;; Hardware stack levels required when called:   10
 34134 ;; This function calls:
 34135 ;;		_CCP2_CaptureISR
 34136 ;;		_I2C2_BusCollisionISR
 34137 ;;		_I2C2_ISR
 34138 ;;		_TMR2_ISR
 34139 ;;		_TMR3_ISR
 34140 ;; This function is called by:
 34141 ;;		Interrupt level 1
 34142 ;; This function uses a non-reentrant model
 34143 ;;
 34144                           
 34145                           	psect	intcodelo
 34146  000018                     __pintcodelo:
 34147                           	opt callstack 0
 34148  000018                     _INTERRUPT_InterruptManagerLow:
 34149                           	opt callstack 12
 34150                           
 34151                           ; BSR set to: 2
 34152                           ;incstack = 0
 34153  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 34154  00001A  CFD8 F158          	movff	status,??_INTERRUPT_InterruptManagerLow
 34155  00001E  CFE8 F159          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 34156  000022  CFE0 F15A          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 34157  000026  CFFA F15B          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 34158  00002A  CFFB F15C          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 34159  00002E  CFD9 F15D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 34160  000032  CFDA F15E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 34161  000036  CFF3 F15F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 34162  00003A  CFF4 F160          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 34163                           
 34164                           ;interrupt_manager.c: 145: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 34165  00003E  010E               	movlb	14	; () banked
 34166  000040  B3C6               	btfsc	198,1,b	;volatile
 34167                           
 34168                           ; BSR set to: 14
 34169  000042  A3CE               	btfss	206,1,b	;volatile
 34170  000044  D003               	goto	i1l245
 34171                           
 34172                           ; BSR set to: 14
 34173                           ;interrupt_manager.c: 146: {;interrupt_manager.c: 147: TMR2_ISR();
 34174  000046  EC70  F0E1         	call	_TMR2_ISR	;wreg free
 34175                           
 34176                           ;interrupt_manager.c: 148: }
 34177  00004A  D017               	goto	i1l250
 34178  00004C                     i1l245:
 34179                           
 34180                           ; BSR set to: 14
 34181                           ;interrupt_manager.c: 149: else if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 34182  00004C  B7C5               	btfsc	197,3,b	;volatile
 34183                           
 34184                           ; BSR set to: 14
 34185  00004E  A7CD               	btfss	205,3,b	;volatile
 34186  000050  D003               	goto	i1l247
 34187                           
 34188                           ; BSR set to: 14
 34189                           ;interrupt_manager.c: 150: {;interrupt_manager.c: 151: I2C2_BusCollisionISR();
 34190  000052  EC30  F0E4         	call	_I2C2_BusCollisionISR	;wreg free
 34191                           
 34192                           ;interrupt_manager.c: 152: }
 34193  000056  D011               	goto	i1l250
 34194  000058                     i1l247:
 34195                           
 34196                           ; BSR set to: 14
 34197                           ;interrupt_manager.c: 153: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
 34198  000058  B5C5               	btfsc	197,2,b	;volatile
 34199                           
 34200                           ; BSR set to: 14
 34201  00005A  A5CD               	btfss	205,2,b	;volatile
 34202  00005C  D003               	goto	i1l249
 34203                           
 34204                           ; BSR set to: 14
 34205                           ;interrupt_manager.c: 154: {;interrupt_manager.c: 155: I2C2_ISR();
 34206  00005E  EC3B  F0C6         	call	_I2C2_ISR	;wreg free
 34207                           
 34208                           ;interrupt_manager.c: 156: }
 34209  000062  D00B               	goto	i1l250
 34210  000064                     i1l249:
 34211                           
 34212                           ; BSR set to: 14
 34213                           ;interrupt_manager.c: 157: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 34214  000064  B5C6               	btfsc	198,2,b	;volatile
 34215                           
 34216                           ; BSR set to: 14
 34217  000066  A5CE               	btfss	206,2,b	;volatile
 34218  000068  D003               	goto	i1l251
 34219                           
 34220                           ; BSR set to: 14
 34221                           ;interrupt_manager.c: 158: {;interrupt_manager.c: 159: TMR3_ISR();
 34222  00006A  EC19  F0E0         	call	_TMR3_ISR	;wreg free
 34223                           
 34224                           ;interrupt_manager.c: 160: }
 34225  00006E  D005               	goto	i1l250
 34226  000070                     i1l251:
 34227                           
 34228                           ; BSR set to: 14
 34229                           ;interrupt_manager.c: 161: else if(PIE6bits.CCP2IE == 1 && PIR6bits.CCP2IF == 1)
 34230  000070  B3C8               	btfsc	200,1,b	;volatile
 34231                           
 34232                           ; BSR set to: 14
 34233  000072  A3D0               	btfss	208,1,b	;volatile
 34234  000074  D002               	goto	i1l250
 34235                           
 34236                           ; BSR set to: 14
 34237                           ;interrupt_manager.c: 162: {;interrupt_manager.c: 163: CCP2_CaptureISR();
 34238  000076  EC04  F0E3         	call	_CCP2_CaptureISR	;wreg free
 34239  00007A                     i1l250:
 34240                           
 34241                           ; BSR set to: 14
 34242  00007A  C160  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 34243  00007E  C15F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 34244  000082  C15E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 34245  000086  C15D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 34246  00008A  C15C  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 34247  00008E  C15B  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 34248  000092  C15A  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 34249  000096  C159  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 34250  00009A  C158  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 34251  00009E  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34252  0000A0  0010               	retfie	
 34253  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
 34254                           	opt callstack 0
 34255                           
 34256 ;; *************** function _TMR3_ISR *****************
 34257 ;; Defined at:
 34258 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 34259 ;; Parameters:    Size  Location     Type
 34260 ;;		None
 34261 ;; Auto vars:     Size  Location     Type
 34262 ;;		None
 34263 ;; Return value:  Size  Location     Type
 34264 ;;                  1    wreg      void 
 34265 ;; Registers used:
 34266 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34267 ;; Tracked objects:
 34268 ;;		On entry : 0/0
 34269 ;;		On exit  : 0/0
 34270 ;;		Unchanged: 0/0
 34271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34276 ;;Total ram usage:        0 bytes
 34277 ;; Hardware stack levels used:    1
 34278 ;; Hardware stack levels required when called:    9
 34279 ;; This function calls:
 34280 ;;		Absolute function
 34281 ;;		_QIIdleChargedTimerHandler
 34282 ;;		_TMR3_DefaultInterruptHandler
 34283 ;;		i1_TMR3_WriteTimer
 34284 ;; This function is called by:
 34285 ;;		_INTERRUPT_InterruptManagerLow
 34286 ;; This function uses a non-reentrant model
 34287 ;;
 34288                           
 34289                           	psect	text123
 34290  01C032                     __ptext123:
 34291                           	opt callstack 0
 34292  01C032                     _TMR3_ISR:
 34293                           	opt callstack 12
 34294                           
 34295                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 34296                           
 34297                           ;incstack = 0
 34298  01C032  010E               	movlb	14	; () banked
 34299  01C034  95CE               	bcf	206,2,b	;volatile
 34300                           
 34301                           ; BSR set to: 14
 34302                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 34303  01C036  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34304  01C03A  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34305  01C03E  EC78  F0E2         	call	i1_TMR3_WriteTimer	;wreg free
 34306                           
 34307                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 34308  01C042  0101               	movlb	1	; () banked
 34309  01C044  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34310  01C046  1172               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34311  01C048  1173               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34312  01C04A  B4D8               	btfsc	status,2,c
 34313  01C04C  0012               	return	
 34314                           
 34315                           ; BSR set to: 1
 34316                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 34317  01C04E  D801               	call	i1u1896_28
 34318  01C050  0012               	return	
 34319  01C052                     i1u1896_28:
 34320  01C052  0005               	push	
 34321  01C054  6EFA               	movwf	pclath,c
 34322  01C056  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34323  01C058  6EFD               	movwf	tosl,c
 34324  01C05A  5172               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34325  01C05C  6EFE               	movwf	tosh,c
 34326  01C05E  5173               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34327  01C060  6EFF               	movwf	tosu,c
 34328  01C062  50FA               	movf	pclath,w,c
 34329  01C064  0012               	return		;indir
 34330  01C066                     __end_of_TMR3_ISR:
 34331                           	opt callstack 0
 34332                           
 34333 ;; *************** function _QIIdleChargedTimerHandler *****************
 34334 ;; Defined at:
 34335 ;;		line 98 in file "NXQ_charge_state.c"
 34336 ;; Parameters:    Size  Location     Type
 34337 ;;		None
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;		None
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1    wreg      void 
 34342 ;; Registers used:
 34343 ;;		wreg, status,2, cstack
 34344 ;; Tracked objects:
 34345 ;;		On entry : 0/0
 34346 ;;		On exit  : 0/0
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;Total ram usage:        0 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:    8
 34356 ;; This function calls:
 34357 ;;		i1_TMR3_Reload
 34358 ;;		i1_TMR3_StopTimer
 34359 ;; This function is called by:
 34360 ;;		_main
 34361 ;;		_TMR3_ISR
 34362 ;; This function uses a non-reentrant model
 34363 ;;
 34364                           
 34365                           	psect	text124
 34366  01C4D0                     __ptext124:
 34367                           	opt callstack 0
 34368  01C4D0                     _QIIdleChargedTimerHandler:
 34369                           	opt callstack 12
 34370                           
 34371                           ;NXQ_charge_state.c: 100: if (PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0) {
 34372                           
 34373                           ;incstack = 0
 34374  01C4D0  A48E               	btfss	3982,2,c	;volatile
 34375  01C4D2  B68E               	btfsc	3982,3,c	;volatile
 34376  01C4D4  D002               	goto	i1l1515
 34377                           
 34378                           ;NXQ_charge_state.c: 102: nxq_charge_state = QI_Idle;
 34379  01C4D6  0E00               	movlw	0
 34380  01C4D8  D004               	goto	L26
 34381  01C4DA                     i1l1515:
 34382                           
 34383                           ;NXQ_charge_state.c: 106: else if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1) {
 34384  01C4DA  B48E               	btfsc	3982,2,c	;volatile
 34385  01C4DC  A68E               	btfss	3982,3,c	;volatile
 34386  01C4DE  D003               	goto	i1l15281
 34387                           
 34388                           ;NXQ_charge_state.c: 108: nxq_charge_state = QI_Fully_Charged;
 34389  01C4E0  0E02               	movlw	2
 34390  01C4E2                     L26:
 34391  01C4E2  0101               	movlb	1	; () banked
 34392  01C4E4  6F95               	movwf	_nxq_charge_state& (0+255),b
 34393  01C4E6                     i1l15281:
 34394                           
 34395                           ;NXQ_charge_state.c: 110: };NXQ_charge_state.c: 112: TMR3_StopTimer();
 34396  01C4E6  EC6B  F0E4         	call	i1_TMR3_StopTimer	;wreg free
 34397                           
 34398                           ;NXQ_charge_state.c: 113: TMR3_Reload();
 34399  01C4EA  EC08  F0E4         	call	i1_TMR3_Reload	;wreg free
 34400  01C4EE  0012               	return		;funcret
 34401  01C4F0                     __end_of_QIIdleChargedTimerHandler:
 34402                           	opt callstack 0
 34403                           
 34404 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34405 ;; Defined at:
 34406 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 34407 ;; Parameters:    Size  Location     Type
 34408 ;;		None
 34409 ;; Auto vars:     Size  Location     Type
 34410 ;;		None
 34411 ;; Return value:  Size  Location     Type
 34412 ;;                  1    wreg      void 
 34413 ;; Registers used:
 34414 ;;		None
 34415 ;; Tracked objects:
 34416 ;;		On entry : 0/0
 34417 ;;		On exit  : 0/0
 34418 ;;		Unchanged: 0/0
 34419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34424 ;;Total ram usage:        0 bytes
 34425 ;; Hardware stack levels used:    1
 34426 ;; Hardware stack levels required when called:    6
 34427 ;; This function calls:
 34428 ;;		Nothing
 34429 ;; This function is called by:
 34430 ;;		_TMR3_Initialize
 34431 ;;		_TMR3_ISR
 34432 ;; This function uses a non-reentrant model
 34433 ;;
 34434                           
 34435                           	psect	text125
 34436  01C8F8                     __ptext125:
 34437                           	opt callstack 0
 34438  01C8F8                     _TMR3_DefaultInterruptHandler:
 34439                           	opt callstack 14
 34440                           
 34441                           ;incstack = 0
 34442  01C8F8  0012               	return		;funcret
 34443  01C8FA                     __end_of_TMR3_DefaultInterruptHandler:
 34444                           	opt callstack 0
 34445                           
 34446 ;; *************** function i1_TMR3_StopTimer *****************
 34447 ;; Defined at:
 34448 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 34449 ;; Parameters:    Size  Location     Type
 34450 ;;		None
 34451 ;; Auto vars:     Size  Location     Type
 34452 ;;		None
 34453 ;; Return value:  Size  Location     Type
 34454 ;;                  1    wreg      void 
 34455 ;; Registers used:
 34456 ;;		None
 34457 ;; Tracked objects:
 34458 ;;		On entry : 0/0
 34459 ;;		On exit  : 0/0
 34460 ;;		Unchanged: 0/0
 34461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34466 ;;Total ram usage:        0 bytes
 34467 ;; Hardware stack levels used:    1
 34468 ;; Hardware stack levels required when called:    6
 34469 ;; This function calls:
 34470 ;;		Nothing
 34471 ;; This function is called by:
 34472 ;;		_QIIdleChargedTimerHandler
 34473 ;; This function uses a non-reentrant model
 34474 ;;
 34475                           
 34476                           	psect	text126
 34477  01C8D6                     __ptext126:
 34478                           	opt callstack 0
 34479  01C8D6                     i1_TMR3_StopTimer:
 34480                           	opt callstack 13
 34481                           
 34482                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 34483                           
 34484                           ;incstack = 0
 34485  01C8D6  90C9               	bcf	4041,0,c	;volatile
 34486  01C8D8  0012               	return		;funcret
 34487  01C8DA                     __end_ofi1_TMR3_StopTimer:
 34488                           	opt callstack 0
 34489                           
 34490 ;; *************** function i1_TMR3_Reload *****************
 34491 ;; Defined at:
 34492 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 34493 ;; Parameters:    Size  Location     Type
 34494 ;;		None
 34495 ;; Auto vars:     Size  Location     Type
 34496 ;;		None
 34497 ;; Return value:  Size  Location     Type
 34498 ;;                  1    wreg      void 
 34499 ;; Registers used:
 34500 ;;		wreg, status,2, cstack
 34501 ;; Tracked objects:
 34502 ;;		On entry : 0/0
 34503 ;;		On exit  : 0/0
 34504 ;;		Unchanged: 0/0
 34505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34510 ;;Total ram usage:        0 bytes
 34511 ;; Hardware stack levels used:    1
 34512 ;; Hardware stack levels required when called:    7
 34513 ;; This function calls:
 34514 ;;		i1_TMR3_WriteTimer
 34515 ;; This function is called by:
 34516 ;;		_QIIdleChargedTimerHandler
 34517 ;; This function uses a non-reentrant model
 34518 ;;
 34519                           
 34520                           	psect	text127
 34521  01C810                     __ptext127:
 34522                           	opt callstack 0
 34523  01C810                     i1_TMR3_Reload:
 34524                           	opt callstack 12
 34525                           
 34526                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 34527                           
 34528                           ;incstack = 0
 34529  01C810  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34530  01C814  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34531  01C818  EC78  F0E2         	call	i1_TMR3_WriteTimer	;wreg free
 34532  01C81C  0012               	return		;funcret
 34533  01C81E                     __end_ofi1_TMR3_Reload:
 34534                           	opt callstack 0
 34535                           
 34536 ;; *************** function i1_TMR3_WriteTimer *****************
 34537 ;; Defined at:
 34538 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 34539 ;; Parameters:    Size  Location     Type
 34540 ;;  timerVal        2    0[BANK1 ] unsigned int 
 34541 ;; Auto vars:     Size  Location     Type
 34542 ;;		None
 34543 ;; Return value:  Size  Location     Type
 34544 ;;                  1    wreg      void 
 34545 ;; Registers used:
 34546 ;;		wreg, status,2
 34547 ;; Tracked objects:
 34548 ;;		On entry : 0/0
 34549 ;;		On exit  : 0/0
 34550 ;;		Unchanged: 0/0
 34551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34555 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34556 ;;Total ram usage:        2 bytes
 34557 ;; Hardware stack levels used:    1
 34558 ;; Hardware stack levels required when called:    6
 34559 ;; This function calls:
 34560 ;;		Nothing
 34561 ;; This function is called by:
 34562 ;;		_TMR3_ISR
 34563 ;;		i1_TMR3_Reload
 34564 ;; This function uses a non-reentrant model
 34565 ;;
 34566                           
 34567                           	psect	text128
 34568  01C4F0                     __ptext128:
 34569                           	opt callstack 0
 34570  01C4F0                     i1_TMR3_WriteTimer:
 34571                           	opt callstack 14
 34572                           
 34573                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 34574                           
 34575                           ;incstack = 0
 34576  01C4F0  A4C9               	btfss	4041,2,c	;volatile
 34577  01C4F2  D008               	goto	i1l12989
 34578                           
 34579                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 34580  01C4F4  90C9               	bcf	4041,0,c	;volatile
 34581                           
 34582                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 34583  01C4F6  0101               	movlb	1	; () banked
 34584  01C4F8  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34585  01C4FA  6EC8               	movwf	4040,c	;volatile
 34586                           
 34587                           ; BSR set to: 1
 34588                           ;tmr3.c: 136: TMR3L = timerVal;
 34589  01C4FC  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34590                           
 34591                           ; BSR set to: 1
 34592                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 34593  01C500  80C9               	bsf	4041,0,c	;volatile
 34594                           
 34595                           ;tmr3.c: 140: }
 34596  01C502  0012               	return	
 34597  01C504                     i1l12989:
 34598                           
 34599                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 34600  01C504  0101               	movlb	1	; () banked
 34601  01C506  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34602  01C508  6EC8               	movwf	4040,c	;volatile
 34603                           
 34604                           ; BSR set to: 1
 34605                           ;tmr3.c: 145: TMR3L = timerVal;
 34606  01C50A  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34607                           
 34608                           ; BSR set to: 1
 34609  01C50E  0012               	return		;funcret
 34610  01C510                     __end_ofi1_TMR3_WriteTimer:
 34611                           	opt callstack 0
 34612                           
 34613 ;; *************** function _TMR2_ISR *****************
 34614 ;; Defined at:
 34615 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 34616 ;; Parameters:    Size  Location     Type
 34617 ;;		None
 34618 ;; Auto vars:     Size  Location     Type
 34619 ;;		None
 34620 ;; Return value:  Size  Location     Type
 34621 ;;                  1    wreg      void 
 34622 ;; Registers used:
 34623 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34624 ;; Tracked objects:
 34625 ;;		On entry : 0/0
 34626 ;;		On exit  : 0/0
 34627 ;;		Unchanged: 0/0
 34628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34633 ;;Total ram usage:        0 bytes
 34634 ;; Hardware stack levels used:    1
 34635 ;; Hardware stack levels required when called:    9
 34636 ;; This function calls:
 34637 ;;		Absolute function
 34638 ;;		_ADC_acquisitionTimerHandler
 34639 ;;		_TMR2_DefaultInterruptHandler
 34640 ;; This function is called by:
 34641 ;;		_INTERRUPT_InterruptManagerLow
 34642 ;; This function uses a non-reentrant model
 34643 ;;
 34644                           
 34645                           	psect	text129
 34646  01C2E0                     __ptext129:
 34647                           	opt callstack 0
 34648  01C2E0                     _TMR2_ISR:
 34649                           	opt callstack 12
 34650                           
 34651                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 34652                           
 34653                           ; BSR set to: 1
 34654                           ;incstack = 0
 34655  01C2E0  010E               	movlb	14	; () banked
 34656  01C2E2  93CE               	bcf	206,1,b	;volatile
 34657                           
 34658                           ; BSR set to: 14
 34659                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 34660  01C2E4  0101               	movlb	1	; () banked
 34661  01C2E6  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34662  01C2E8  1175               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34663  01C2EA  1176               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34664  01C2EC  B4D8               	btfsc	status,2,c
 34665  01C2EE  0012               	return	
 34666                           
 34667                           ; BSR set to: 1
 34668                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 34669  01C2F0  D801               	call	i1u1881_28
 34670  01C2F2  0012               	return	
 34671  01C2F4                     i1u1881_28:
 34672  01C2F4  0005               	push	
 34673  01C2F6  6EFA               	movwf	pclath,c
 34674  01C2F8  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34675  01C2FA  6EFD               	movwf	tosl,c
 34676  01C2FC  5175               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34677  01C2FE  6EFE               	movwf	tosh,c
 34678  01C300  5176               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34679  01C302  6EFF               	movwf	tosu,c
 34680  01C304  50FA               	movf	pclath,w,c
 34681  01C306  0012               	return		;indir
 34682  01C308                     __end_of_TMR2_ISR:
 34683                           	opt callstack 0
 34684                           
 34685 ;; *************** function _ADC_acquisitionTimerHandler *****************
 34686 ;; Defined at:
 34687 ;;		line 135 in file "adc_postprocessing.c"
 34688 ;; Parameters:    Size  Location     Type
 34689 ;;		None
 34690 ;; Auto vars:     Size  Location     Type
 34691 ;;		None
 34692 ;; Return value:  Size  Location     Type
 34693 ;;                  1    wreg      void 
 34694 ;; Registers used:
 34695 ;;		wreg, status,2, cstack
 34696 ;; Tracked objects:
 34697 ;;		On entry : 0/0
 34698 ;;		On exit  : 0/0
 34699 ;;		Unchanged: 0/0
 34700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34705 ;;Total ram usage:        0 bytes
 34706 ;; Hardware stack levels used:    1
 34707 ;; Hardware stack levels required when called:    8
 34708 ;; This function calls:
 34709 ;;		_ADCC_ClearAccumulator
 34710 ;;		_ADCC_DischargeSampleCapacitor
 34711 ;;		_ADCC_StartConversion
 34712 ;;		_TMR2_StopTimer
 34713 ;; This function is called by:
 34714 ;;		_main
 34715 ;;		_TMR2_ISR
 34716 ;; This function uses a non-reentrant model
 34717 ;;
 34718                           
 34719                           	psect	text130
 34720  01C5D4                     __ptext130:
 34721                           	opt callstack 0
 34722  01C5D4                     _ADC_acquisitionTimerHandler:
 34723                           	opt callstack 12
 34724                           
 34725                           ;adc_postprocessing.c: 139: TMR2_StopTimer();
 34726                           
 34727                           ;incstack = 0
 34728  01C5D4  EC5C  F0E4         	call	_TMR2_StopTimer	;wreg free
 34729                           
 34730                           ;adc_postprocessing.c: 140: TMR2 = 0;
 34731  01C5D8  0E00               	movlw	0
 34732  01C5DA  6EBB               	movwf	4027,c	;volatile
 34733                           
 34734                           ;adc_postprocessing.c: 143: ADCC_DischargeSampleCapacitor();
 34735  01C5DC  EC55  F0E4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34736                           
 34737                           ;adc_postprocessing.c: 146: ADCC_ClearAccumulator();
 34738  01C5E0  EC5F  F0E4         	call	_ADCC_ClearAccumulator	;wreg free
 34739                           
 34740                           ;adc_postprocessing.c: 149: ADCC_StartConversion(next_adc_channel);
 34741  01C5E4  0100               	movlb	0	; () banked
 34742  01C5E6  51FC               	movf	_next_adc_channel& (0+255),w,b
 34743  01C5E8  EC0F  F0E4         	call	_ADCC_StartConversion
 34744  01C5EC  0012               	return		;funcret
 34745  01C5EE                     __end_of_ADC_acquisitionTimerHandler:
 34746                           	opt callstack 0
 34747                           
 34748 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34749 ;; Defined at:
 34750 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 34751 ;; Parameters:    Size  Location     Type
 34752 ;;		None
 34753 ;; Auto vars:     Size  Location     Type
 34754 ;;		None
 34755 ;; Return value:  Size  Location     Type
 34756 ;;                  1    wreg      void 
 34757 ;; Registers used:
 34758 ;;		None
 34759 ;; Tracked objects:
 34760 ;;		On entry : 0/0
 34761 ;;		On exit  : 0/0
 34762 ;;		Unchanged: 0/0
 34763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34768 ;;Total ram usage:        0 bytes
 34769 ;; Hardware stack levels used:    1
 34770 ;; Hardware stack levels required when called:    6
 34771 ;; This function calls:
 34772 ;;		Nothing
 34773 ;; This function is called by:
 34774 ;;		_TMR2_Initialize
 34775 ;;		_TMR2_ISR
 34776 ;; This function uses a non-reentrant model
 34777 ;;
 34778                           
 34779                           	psect	text131
 34780  01C8FA                     __ptext131:
 34781                           	opt callstack 0
 34782  01C8FA                     _TMR2_DefaultInterruptHandler:
 34783                           	opt callstack 14
 34784                           
 34785                           ;incstack = 0
 34786  01C8FA  0012               	return		;funcret
 34787  01C8FC                     __end_of_TMR2_DefaultInterruptHandler:
 34788                           	opt callstack 0
 34789                           
 34790 ;; *************** function _TMR2_StopTimer *****************
 34791 ;; Defined at:
 34792 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 34793 ;; Parameters:    Size  Location     Type
 34794 ;;		None
 34795 ;; Auto vars:     Size  Location     Type
 34796 ;;		None
 34797 ;; Return value:  Size  Location     Type
 34798 ;;                  1    wreg      void 
 34799 ;; Registers used:
 34800 ;;		cstack
 34801 ;; Tracked objects:
 34802 ;;		On entry : 0/0
 34803 ;;		On exit  : 0/0
 34804 ;;		Unchanged: 0/0
 34805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34810 ;;Total ram usage:        0 bytes
 34811 ;; Hardware stack levels used:    1
 34812 ;; Hardware stack levels required when called:    7
 34813 ;; This function calls:
 34814 ;;		_TMR2_Stop
 34815 ;; This function is called by:
 34816 ;;		_ADC_acquisitionTimerHandler
 34817 ;; This function uses a non-reentrant model
 34818 ;;
 34819                           
 34820                           	psect	text132
 34821  01C8B8                     __ptext132:
 34822                           	opt callstack 0
 34823  01C8B8                     _TMR2_StopTimer:
 34824                           	opt callstack 12
 34825                           
 34826                           ;tmr2.c: 127: TMR2_Stop();
 34827                           
 34828                           ;incstack = 0
 34829  01C8B8  EC6D  F0E4         	call	_TMR2_Stop	;wreg free
 34830  01C8BC  0012               	return		;funcret
 34831  01C8BE                     __end_of_TMR2_StopTimer:
 34832                           	opt callstack 0
 34833                           
 34834 ;; *************** function _TMR2_Stop *****************
 34835 ;; Defined at:
 34836 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 34837 ;; Parameters:    Size  Location     Type
 34838 ;;		None
 34839 ;; Auto vars:     Size  Location     Type
 34840 ;;		None
 34841 ;; Return value:  Size  Location     Type
 34842 ;;                  1    wreg      void 
 34843 ;; Registers used:
 34844 ;;		None
 34845 ;; Tracked objects:
 34846 ;;		On entry : 0/0
 34847 ;;		On exit  : 0/0
 34848 ;;		Unchanged: 0/0
 34849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34854 ;;Total ram usage:        0 bytes
 34855 ;; Hardware stack levels used:    1
 34856 ;; Hardware stack levels required when called:    6
 34857 ;; This function calls:
 34858 ;;		Nothing
 34859 ;; This function is called by:
 34860 ;;		_TMR2_StopTimer
 34861 ;; This function uses a non-reentrant model
 34862 ;;
 34863                           
 34864                           	psect	text133
 34865  01C8DA                     __ptext133:
 34866                           	opt callstack 0
 34867  01C8DA                     _TMR2_Stop:
 34868                           	opt callstack 12
 34869                           
 34870                           ;tmr2.c: 122: T2CONbits.TMR2ON = 0;
 34871                           
 34872                           ;incstack = 0
 34873  01C8DA  9EBD               	bcf	4029,7,c	;volatile
 34874  01C8DC  0012               	return		;funcret
 34875  01C8DE                     __end_of_TMR2_Stop:
 34876                           	opt callstack 0
 34877                           
 34878 ;; *************** function _ADCC_StartConversion *****************
 34879 ;; Defined at:
 34880 ;;		line 112 in file "mcc_generated_files/adcc.c"
 34881 ;; Parameters:    Size  Location     Type
 34882 ;;  channel         1    wreg     enum E9432
 34883 ;; Auto vars:     Size  Location     Type
 34884 ;;  channel         1    0[BANK1 ] enum E9432
 34885 ;; Return value:  Size  Location     Type
 34886 ;;                  1    wreg      void 
 34887 ;; Registers used:
 34888 ;;		wreg
 34889 ;; Tracked objects:
 34890 ;;		On entry : 0/0
 34891 ;;		On exit  : 0/0
 34892 ;;		Unchanged: 0/0
 34893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34895 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34897 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34898 ;;Total ram usage:        1 bytes
 34899 ;; Hardware stack levels used:    1
 34900 ;; Hardware stack levels required when called:    6
 34901 ;; This function calls:
 34902 ;;		Nothing
 34903 ;; This function is called by:
 34904 ;;		_ADC_acquisitionTimerHandler
 34905 ;; This function uses a non-reentrant model
 34906 ;;
 34907                           
 34908                           	psect	text134
 34909  01C81E                     __ptext134:
 34910                           	opt callstack 0
 34911  01C81E                     _ADCC_StartConversion:
 34912                           	opt callstack 13
 34913                           
 34914                           ;incstack = 0
 34915                           ;ADCC_StartConversion@channel stored from wreg
 34916  01C81E  0101               	movlb	1	; () banked
 34917  01C820  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 34918                           
 34919                           ;adcc.c: 115: ADPCH = channel;
 34920  01C822  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 34921                           
 34922                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 34923  01C826  8E60               	bsf	3936,7,c	;volatile
 34924                           
 34925                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 34926  01C828  8060               	bsf	3936,0,c	;volatile
 34927  01C82A  0012               	return		;funcret
 34928  01C82C                     __end_of_ADCC_StartConversion:
 34929                           	opt callstack 0
 34930                           
 34931 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 34932 ;; Defined at:
 34933 ;;		line 174 in file "mcc_generated_files/adcc.c"
 34934 ;; Parameters:    Size  Location     Type
 34935 ;;		None
 34936 ;; Auto vars:     Size  Location     Type
 34937 ;;		None
 34938 ;; Return value:  Size  Location     Type
 34939 ;;                  1    wreg      void 
 34940 ;; Registers used:
 34941 ;;		wreg, status,2
 34942 ;; Tracked objects:
 34943 ;;		On entry : 0/0
 34944 ;;		On exit  : 0/0
 34945 ;;		Unchanged: 0/0
 34946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;Total ram usage:        0 bytes
 34952 ;; Hardware stack levels used:    1
 34953 ;; Hardware stack levels required when called:    6
 34954 ;; This function calls:
 34955 ;;		Nothing
 34956 ;; This function is called by:
 34957 ;;		_ADC_acquisitionTimerHandler
 34958 ;; This function uses a non-reentrant model
 34959 ;;
 34960                           
 34961                           	psect	text135
 34962  01C8AA                     __ptext135:
 34963                           	opt callstack 0
 34964  01C8AA                     _ADCC_DischargeSampleCapacitor:
 34965                           	opt callstack 13
 34966                           
 34967                           ;adcc.c: 177: ADPCH = 0x3c;
 34968                           
 34969                           ;incstack = 0
 34970  01C8AA  0E3C               	movlw	60
 34971  01C8AC  010F               	movlb	15	; () banked
 34972  01C8AE  6F5F               	movwf	95,b	;volatile
 34973                           
 34974                           ; BSR set to: 15
 34975  01C8B0  0012               	return		;funcret
 34976  01C8B2                     __end_of_ADCC_DischargeSampleCapacitor:
 34977                           	opt callstack 0
 34978                           
 34979 ;; *************** function _ADCC_ClearAccumulator *****************
 34980 ;; Defined at:
 34981 ;;		line 204 in file "mcc_generated_files/adcc.c"
 34982 ;; Parameters:    Size  Location     Type
 34983 ;;		None
 34984 ;; Auto vars:     Size  Location     Type
 34985 ;;		None
 34986 ;; Return value:  Size  Location     Type
 34987 ;;                  1    wreg      void 
 34988 ;; Registers used:
 34989 ;;		None
 34990 ;; Tracked objects:
 34991 ;;		On entry : 0/0
 34992 ;;		On exit  : 0/0
 34993 ;;		Unchanged: 0/0
 34994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34999 ;;Total ram usage:        0 bytes
 35000 ;; Hardware stack levels used:    1
 35001 ;; Hardware stack levels required when called:    6
 35002 ;; This function calls:
 35003 ;;		Nothing
 35004 ;; This function is called by:
 35005 ;;		_ADC_acquisitionTimerHandler
 35006 ;; This function uses a non-reentrant model
 35007 ;;
 35008                           
 35009                           	psect	text136
 35010  01C8BE                     __ptext136:
 35011                           	opt callstack 0
 35012  01C8BE                     _ADCC_ClearAccumulator:
 35013                           	opt callstack 13
 35014                           
 35015                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 35016                           
 35017                           ; BSR set to: 15
 35018                           ;incstack = 0
 35019  01C8BE  010F               	movlb	15	; () banked
 35020  01C8C0  875A               	bsf	90,3,b	;volatile
 35021                           
 35022                           ; BSR set to: 15
 35023  01C8C2  0012               	return		;funcret
 35024  01C8C4                     __end_of_ADCC_ClearAccumulator:
 35025                           	opt callstack 0
 35026                           
 35027 ;; *************** function _I2C2_ISR *****************
 35028 ;; Defined at:
 35029 ;;		line 236 in file "mcc_generated_files/i2c2.c"
 35030 ;; Parameters:    Size  Location     Type
 35031 ;;		None
 35032 ;; Auto vars:     Size  Location     Type
 35033 ;;		None
 35034 ;; Return value:  Size  Location     Type
 35035 ;;                  1    wreg      void 
 35036 ;; Registers used:
 35037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35038 ;; Tracked objects:
 35039 ;;		On entry : 0/0
 35040 ;;		On exit  : 0/0
 35041 ;;		Unchanged: 0/0
 35042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35045 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35046 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35047 ;;Total ram usage:        2 bytes
 35048 ;; Hardware stack levels used:    1
 35049 ;; Hardware stack levels required when called:    7
 35050 ;; This function calls:
 35051 ;;		_I2C2_FunctionComplete
 35052 ;;		_I2C2_Stop
 35053 ;; This function is called by:
 35054 ;;		_INTERRUPT_InterruptManagerLow
 35055 ;; This function uses a non-reentrant model
 35056 ;;
 35057                           
 35058                           	psect	text137
 35059  018C76                     __ptext137:
 35060                           	opt callstack 0
 35061  018C76                     _I2C2_ISR:
 35062                           	opt callstack 14
 35063                           
 35064                           ;i2c2.c: 239: static uint8_t *pi2c_buf_ptr;;i2c2.c: 240: static uint16_t i2c_address = 0
      +                          ;;i2c2.c: 241: static uint8_t i2c_bytes_left = 0;;i2c2.c: 242: static uint8_t i2c_10bit_
      +                          address_restart = 0;;i2c2.c: 244: PIR3bits.SSP2IF = 0;
 35065                           
 35066                           ; BSR set to: 15
 35067                           ;incstack = 0
 35068  018C76  010E               	movlb	14	; () banked
 35069  018C78  95CD               	bcf	205,2,b	;volatile
 35070                           
 35071                           ;i2c2.c: 248: if(SSP2CON1bits.WCOL)
 35072  018C7A  AF96               	btfss	150,7,b	;volatile
 35073  018C7C  D113               	goto	i1l21627
 35074                           
 35075                           ; BSR set to: 14
 35076                           ;i2c2.c: 249: {;i2c2.c: 251: SSP2CON1bits.WCOL = 0;
 35077  018C7E  9F96               	bcf	150,7,b	;volatile
 35078                           
 35079                           ; BSR set to: 14
 35080                           ;i2c2.c: 252: i2c2_state = S_MASTER_IDLE;
 35081  018C80  0E00               	movlw	0
 35082  018C82  0100               	movlb	0	; () banked
 35083  018C84  6FDB               	movwf	_i2c2_state& (0+255),b
 35084                           
 35085                           ; BSR set to: 0
 35086                           ;i2c2.c: 253: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
 35087  018C86  EE20 F003          	lfsr	2,3
 35088  018C8A  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35089  018C8C  26D9               	addwf	fsr2l,f,c
 35090  018C8E  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35091  018C90  22DA               	addwfc	fsr2h,f,c
 35092  018C92  CFDE F103          	movff	postinc2,??_I2C2_ISR
 35093  018C96  CFDD F104          	movff	postdec2,??_I2C2_ISR+1
 35094  018C9A  C103  FFD9         	movff	??_I2C2_ISR,fsr2l
 35095  018C9E  C104  FFDA         	movff	??_I2C2_ISR+1,fsr2h
 35096  018CA2  0E01               	movlw	1
 35097  018CA4  6EDF               	movwf	indf2,c
 35098                           
 35099                           ; BSR set to: 0
 35100                           ;i2c2.c: 256: p_i2c2_current = (0);
 35101  018CA6  0E00               	movlw	0
 35102  018CA8  6FD1               	movwf	_p_i2c2_current& (0+255),b
 35103  018CAA  0E00               	movlw	0
 35104  018CAC  6FD2               	movwf	(_p_i2c2_current+1)& (0+255),b
 35105  018CAE  0012               	return	
 35106  018CB0                     i1l937:
 35107                           
 35108                           ; BSR set to: 0
 35109                           ;i2c2.c: 266: if(i2c2_object.trStatus.s.empty != 1)
 35110  018CB0  0101               	movlb	1	; () banked
 35111  018CB2  B365               	btfsc	(_i2c2_object+4)& (0+255),1,b
 35112  018CB4  0012               	return	
 35113                           
 35114                           ; BSR set to: 1
 35115                           ;i2c2.c: 267: {;i2c2.c: 269: p_i2c2_current = i2c2_object.pTrHead;
 35116  018CB6  C163  F0D1         	movff	_i2c2_object+2,_p_i2c2_current
 35117  018CBA  C164  F0D2         	movff	_i2c2_object+3,_p_i2c2_current+1
 35118                           
 35119                           ; BSR set to: 1
 35120                           ;i2c2.c: 270: i2c2_trb_count = i2c2_object.pTrHead->count;
 35121  018CBE  C163  FFD9         	movff	_i2c2_object+2,fsr2l
 35122  018CC2  C164  FFDA         	movff	_i2c2_object+3,fsr2h
 35123  018CC6  50DF               	movf	indf2,w,c
 35124  018CC8  0100               	movlb	0	; () banked
 35125  018CCA  6FDA               	movwf	_i2c2_trb_count& (0+255),b
 35126                           
 35127                           ; BSR set to: 0
 35128                           ;i2c2.c: 271: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
 35129  018CCC  0101               	movlb	1	; () banked
 35130  018CCE  EE20 F001          	lfsr	2,1
 35131  018CD2  5163               	movf	(_i2c2_object+2)& (0+255),w,b
 35132  018CD4  26D9               	addwf	fsr2l,f,c
 35133  018CD6  5164               	movf	(_i2c2_object+3)& (0+255),w,b
 35134  018CD8  22DA               	addwfc	fsr2h,f,c
 35135  018CDA  CFDE F0D3          	movff	postinc2,_p_i2c2_trb_current
 35136  018CDE  CFDD F0D4          	movff	postdec2,_p_i2c2_trb_current+1
 35137                           
 35138                           ; BSR set to: 1
 35139                           ;i2c2.c: 273: i2c2_object.pTrHead++;
 35140  018CE2  0E05               	movlw	5
 35141  018CE4  2763               	addwf	(_i2c2_object+2)& (0+255),f,b
 35142  018CE6  0E00               	movlw	0
 35143  018CE8  2364               	addwfc	(_i2c2_object+3)& (0+255),f,b
 35144                           
 35145                           ; BSR set to: 1
 35146                           ;i2c2.c: 276: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
 35147  018CEA  0EA8               	movlw	low (_i2c2_tr_queue+5)
 35148  018CEC  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 35149  018CEE  E108               	bnz	i1l21519
 35150  018CF0  0E01               	movlw	high (_i2c2_tr_queue+5)
 35151  018CF2  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 35152  018CF4  A4D8               	btfss	status,2,c
 35153  018CF6  D004               	goto	i1l21519
 35154                           
 35155                           ; BSR set to: 1
 35156                           ;i2c2.c: 277: {;i2c2.c: 279: i2c2_object.pTrHead = i2c2_tr_queue;
 35157  018CF8  0EA3               	movlw	low _i2c2_tr_queue
 35158  018CFA  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 35159  018CFC  0E01               	movlw	high _i2c2_tr_queue
 35160  018CFE  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 35161  018D00                     i1l21519:
 35162                           
 35163                           ; BSR set to: 1
 35164                           ;i2c2.c: 280: };i2c2.c: 284: i2c2_object.trStatus.s.full = 0;
 35165  018D00  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 35166                           
 35167                           ;i2c2.c: 287: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
 35168  018D02  5161               	movf	_i2c2_object& (0+255),w,b
 35169  018D04  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 35170  018D06  E104               	bnz	i1l940
 35171  018D08  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 35172  018D0A  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 35173  018D0C  B4D8               	btfsc	status,2,c
 35174                           
 35175                           ; BSR set to: 1
 35176                           ;i2c2.c: 288: {;i2c2.c: 290: i2c2_object.trStatus.s.empty = 1;
 35177  018D0E  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 35178  018D10                     i1l940:
 35179                           
 35180                           ; BSR set to: 1
 35181                           ;i2c2.c: 291: };i2c2.c: 294: SSP2CON2bits.SEN = 1;
 35182  018D10  010E               	movlb	14	; () banked
 35183  018D12  8197               	bsf	151,0,b	;volatile
 35184  018D14                     i1l21523:
 35185                           
 35186                           ;i2c2.c: 297: i2c2_state = S_MASTER_SEND_ADDR;
 35187  018D14  0E02               	movlw	2
 35188  018D16  0100               	movlb	0	; () banked
 35189  018D18  6FDB               	movwf	_i2c2_state& (0+255),b
 35190  018D1A  0012               	return	
 35191  018D1C                     i1l943:
 35192                           
 35193                           ; BSR set to: 0
 35194                           ;i2c2.c: 316: if(SSP2CON2bits.ACKSTAT)
 35195  018D1C  010E               	movlb	14	; () banked
 35196  018D1E  AD97               	btfss	151,6,b	;volatile
 35197  018D20  D006               	goto	i1l21531
 35198                           
 35199                           ; BSR set to: 14
 35200                           ;i2c2.c: 317: {;i2c2.c: 318: i2c2_object.i2cErrors++;
 35201  018D22  0101               	movlb	1	; () banked
 35202  018D24  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35203                           
 35204                           ; BSR set to: 1
 35205                           ;i2c2.c: 319: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35206  018D26  0E04               	movlw	4
 35207  018D28  EC51  F0DE         	call	_I2C2_Stop
 35208                           
 35209                           ;i2c2.c: 320: }
 35210  018D2C  0012               	return	
 35211  018D2E                     i1l21531:
 35212                           
 35213                           ; BSR set to: 14
 35214                           ;i2c2.c: 321: else;i2c2.c: 322: {;i2c2.c: 324: SSP2BUF = (i2c_address >> 1) & 0x00FF;
 35215  018D2E  90D8               	bcf	status,0,c
 35216  018D30  0100               	movlb	0	; () banked
 35217  018D32  31FA               	rrcf	(I2C2_ISR@i2c_address+1)& (0+255),w,b
 35218  018D34  0101               	movlb	1	; () banked
 35219  018D36  6F04               	movwf	(??_I2C2_ISR+1)& (0+255),b
 35220  018D38  0100               	movlb	0	; () banked
 35221  018D3A  31F9               	rrcf	I2C2_ISR@i2c_address& (0+255),w,b
 35222  018D3C  0101               	movlb	1	; () banked
 35223  018D3E  6F03               	movwf	??_I2C2_ISR& (0+255),b
 35224  018D40  5103               	movf	??_I2C2_ISR& (0+255),w,b
 35225  018D42  010E               	movlb	14	; () banked
 35226  018D44  6F92               	movwf	146,b	;volatile
 35227                           
 35228                           ; BSR set to: 14
 35229                           ;i2c2.c: 327: if(i2c_address & 0x01)
 35230  018D46  0100               	movlb	0	; () banked
 35231  018D48  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35232  018D4A  D003               	goto	i1l21537
 35233                           
 35234                           ; BSR set to: 0
 35235                           ;i2c2.c: 328: {;i2c2.c: 331: i2c2_state = S_MASTER_10BIT_RESTART;
 35236  018D4C  0E0B               	movlw	11
 35237  018D4E  6FDB               	movwf	_i2c2_state& (0+255),b
 35238                           
 35239                           ;i2c2.c: 332: }
 35240  018D50  0012               	return	
 35241  018D52                     i1l21537:
 35242                           
 35243                           ; BSR set to: 0
 35244                           ;i2c2.c: 333: else;i2c2.c: 334: {;i2c2.c: 336: i2c2_state = S_MASTER_SEND_DATA;
 35245  018D52  0E03               	movlw	3
 35246  018D54  6FDB               	movwf	_i2c2_state& (0+255),b
 35247  018D56  0012               	return	
 35248  018D58                     i1l948:
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;i2c2.c: 344: if(SSP2CON2bits.ACKSTAT)
 35252  018D58  010E               	movlb	14	; () banked
 35253  018D5A  AD97               	btfss	151,6,b	;volatile
 35254  018D5C  D006               	goto	i1l949
 35255                           
 35256                           ; BSR set to: 14
 35257                           ;i2c2.c: 345: {;i2c2.c: 346: i2c2_object.i2cErrors++;
 35258  018D5E  0101               	movlb	1	; () banked
 35259  018D60  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35260                           
 35261                           ; BSR set to: 1
 35262                           ;i2c2.c: 347: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35263  018D62  0E04               	movlw	4
 35264  018D64  EC51  F0DE         	call	_I2C2_Stop
 35265                           
 35266                           ;i2c2.c: 348: }
 35267  018D68  0012               	return	
 35268  018D6A                     i1l949:
 35269                           
 35270                           ; BSR set to: 14
 35271                           ;i2c2.c: 349: else;i2c2.c: 350: {;i2c2.c: 353: SSP2CON2bits.RSEN = 1;
 35272  018D6A  8397               	bsf	151,1,b	;volatile
 35273                           
 35274                           ; BSR set to: 14
 35275                           ;i2c2.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 35276  018D6C  C0F9  F103         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
 35277  018D70  C0FA  F104         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
 35278  018D74  C104  F103         	movff	??_I2C2_ISR+1,??_I2C2_ISR
 35279  018D78  0101               	movlb	1	; () banked
 35280  018D7A  6B04               	clrf	(??_I2C2_ISR+1)& (0+255),b
 35281  018D7C  0E06               	movlw	6
 35282  018D7E  1703               	andwf	??_I2C2_ISR& (0+255),f,b
 35283  018D80  0E00               	movlw	0
 35284  018D82  1704               	andwf	(??_I2C2_ISR+1)& (0+255),f,b
 35285  018D84  0EF0               	movlw	240
 35286  018D86  1103               	iorwf	??_I2C2_ISR& (0+255),w,b
 35287  018D88  0100               	movlb	0	; () banked
 35288  018D8A  6FF9               	movwf	I2C2_ISR@i2c_address& (0+255),b
 35289  018D8C  0101               	movlb	1	; () banked
 35290  018D8E  5104               	movf	(??_I2C2_ISR+1)& (0+255),w,b
 35291  018D90  0100               	movlb	0	; () banked
 35292  018D92  6FFA               	movwf	(I2C2_ISR@i2c_address+1)& (0+255),b
 35293                           
 35294                           ; BSR set to: 0
 35295                           ;i2c2.c: 360: i2c_address |= 0x0001;
 35296  018D94  81F9               	bsf	I2C2_ISR@i2c_address& (0+255),0,b
 35297                           
 35298                           ; BSR set to: 0
 35299                           ;i2c2.c: 363: i2c_10bit_address_restart = 1;
 35300  018D96  0E01               	movlw	1
 35301  018D98  6FD8               	movwf	I2C2_ISR@i2c_10bit_address_restart& (0+255),b
 35302  018D9A  D7BC               	goto	i1l21523
 35303  018D9C                     i1l21551:
 35304                           
 35305                           ; BSR set to: 0
 35306                           ;i2c2.c: 384: if(i2c_10bit_address_restart != 1)
 35307  018D9C  05D8               	decf	I2C2_ISR@i2c_10bit_address_restart& (0+255),w,b
 35308  018D9E  B4D8               	btfsc	status,2,c
 35309  018DA0  D01A               	goto	i1l953
 35310                           
 35311                           ; BSR set to: 0
 35312                           ;i2c2.c: 385: {;i2c2.c: 387: i2c_address = p_i2c2_trb_current->address;
 35313  018DA2  C0D3  FFD9         	movff	_p_i2c2_trb_current,fsr2l
 35314  018DA6  C0D4  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
 35315  018DAA  CFDE F0F9          	movff	postinc2,I2C2_ISR@i2c_address
 35316  018DAE  CFDD F0FA          	movff	postdec2,I2C2_ISR@i2c_address+1
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;i2c2.c: 388: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
 35320  018DB2  EE20 F003          	lfsr	2,3
 35321  018DB6  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35322  018DB8  26D9               	addwf	fsr2l,f,c
 35323  018DBA  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35324  018DBC  22DA               	addwfc	fsr2h,f,c
 35325  018DBE  CFDE F0CF          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
 35326  018DC2  CFDD F0D0          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
 35327                           
 35328                           ; BSR set to: 0
 35329                           ;i2c2.c: 389: i2c_bytes_left = p_i2c2_trb_current->length;
 35330  018DC6  EE20 F002          	lfsr	2,2
 35331  018DCA  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35332  018DCC  26D9               	addwf	fsr2l,f,c
 35333  018DCE  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35334  018DD0  22DA               	addwfc	fsr2h,f,c
 35335  018DD2  50DF               	movf	indf2,w,c
 35336  018DD4  6FD9               	movwf	I2C2_ISR@i2c_bytes_left& (0+255),b
 35337  018DD6                     i1l953:
 35338                           
 35339                           ; BSR set to: 0
 35340                           ;i2c2.c: 412: else;i2c2.c: 413: {;i2c2.c: 415: SSP2BUF = i2c_address;
 35341  018DD6  C0F9  FE92         	movff	I2C2_ISR@i2c_address,3730	;volatile
 35342                           
 35343                           ;i2c2.c: 416: if(i2c_address & 0x01)
 35344  018DDA  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35345  018DDC  D7BA               	goto	i1l21537
 35346                           
 35347                           ; BSR set to: 0
 35348                           ;i2c2.c: 417: {;i2c2.c: 419: i2c2_state = S_MASTER_ACK_ADDR;
 35349  018DDE  0E05               	movlw	5
 35350  018DE0  6FDB               	movwf	_i2c2_state& (0+255),b
 35351                           
 35352                           ;i2c2.c: 420: }
 35353  018DE2  0012               	return	
 35354  018DE4                     i1l959:
 35355                           
 35356                           ; BSR set to: 0
 35357                           ;i2c2.c: 432: if(SSP2CON2bits.ACKSTAT)
 35358  018DE4  010E               	movlb	14	; () banked
 35359  018DE6  AD97               	btfss	151,6,b	;volatile
 35360  018DE8  D008               	goto	i1l21579
 35361                           
 35362                           ; BSR set to: 14
 35363                           ;i2c2.c: 433: {;i2c2.c: 435: i2c2_object.i2cErrors++;
 35364  018DEA  0101               	movlb	1	; () banked
 35365  018DEC  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35366                           
 35367                           ; BSR set to: 1
 35368                           ;i2c2.c: 438: SSP2CON2bits.ACKSTAT = 0;
 35369  018DEE  010E               	movlb	14	; () banked
 35370  018DF0  9D97               	bcf	151,6,b	;volatile
 35371                           
 35372                           ; BSR set to: 14
 35373                           ;i2c2.c: 441: I2C2_Stop(I2C2_DATA_NO_ACK);
 35374  018DF2  0E05               	movlw	5
 35375  018DF4  EC51  F0DE         	call	_I2C2_Stop
 35376                           
 35377                           ;i2c2.c: 443: }
 35378  018DF8  0012               	return	
 35379  018DFA                     i1l21579:
 35380                           
 35381                           ; BSR set to: 14
 35382                           ;i2c2.c: 444: else;i2c2.c: 445: {;i2c2.c: 447: if(i2c_bytes_left-- == 0U)
 35383  018DFA  0100               	movlb	0	; () banked
 35384  018DFC  07D9               	decf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35385  018DFE  29D9               	incf	I2C2_ISR@i2c_bytes_left& (0+255),w,b
 35386  018E00  A4D8               	btfss	status,2,c
 35387  018E02  D00D               	goto	i1l21589
 35388                           
 35389                           ; BSR set to: 0
 35390                           ;i2c2.c: 448: {;i2c2.c: 452: p_i2c2_trb_current++;
 35391  018E04  0E05               	movlw	5
 35392  018E06  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35393  018E08  0E00               	movlw	0
 35394  018E0A  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35395                           
 35396                           ; BSR set to: 0
 35397                           ;i2c2.c: 455: if(--i2c2_trb_count == 0)
 35398  018E0C  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35399  018E0E  D004               	goto	i1l963
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;i2c2.c: 456: {;i2c2.c: 457: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35403  018E10  0E00               	movlw	0
 35404  018E12  EC51  F0DE         	call	_I2C2_Stop
 35405                           
 35406                           ;i2c2.c: 458: }
 35407  018E16  0012               	return	
 35408  018E18                     i1l963:
 35409                           
 35410                           ; BSR set to: 0
 35411                           ;i2c2.c: 459: else;i2c2.c: 460: {;i2c2.c: 467: SSP2CON2bits.RSEN = 1;
 35412  018E18  010E               	movlb	14	; () banked
 35413  018E1A  8397               	bsf	151,1,b	;volatile
 35414  018E1C  D77B               	goto	i1l21523
 35415  018E1E                     i1l21589:
 35416                           
 35417                           ; BSR set to: 0
 35418                           ;i2c2.c: 474: else;i2c2.c: 475: {;i2c2.c: 477: SSP2BUF = *pi2c_buf_ptr++;
 35419  018E1E  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35420  018E22  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35421  018E26  50DF               	movf	indf2,w,c
 35422  018E28  010E               	movlb	14	; () banked
 35423  018E2A  6F92               	movwf	146,b	;volatile
 35424                           
 35425                           ; BSR set to: 14
 35426  018E2C  0100               	movlb	0	; () banked
 35427  018E2E  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35428  018E30  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35429  018E32  0012               	return	
 35430  018E34                     i1l966:
 35431                           
 35432                           ; BSR set to: 0
 35433                           ;i2c2.c: 485: if(SSP2CON2bits.ACKSTAT)
 35434  018E34  010E               	movlb	14	; () banked
 35435  018E36  AD97               	btfss	151,6,b	;volatile
 35436  018E38  D008               	goto	i1l967
 35437                           
 35438                           ; BSR set to: 14
 35439                           ;i2c2.c: 486: {;i2c2.c: 489: i2c2_object.i2cErrors++;
 35440  018E3A  0101               	movlb	1	; () banked
 35441  018E3C  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35442                           
 35443                           ; BSR set to: 1
 35444                           ;i2c2.c: 492: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35445  018E3E  0E04               	movlw	4
 35446  018E40  EC51  F0DE         	call	_I2C2_Stop
 35447                           
 35448                           ;i2c2.c: 495: SSP2CON2bits.ACKSTAT = 0;
 35449  018E44  010E               	movlb	14	; () banked
 35450  018E46  9D97               	bcf	151,6,b	;volatile
 35451                           
 35452                           ;i2c2.c: 496: }
 35453  018E48  0012               	return	
 35454  018E4A                     i1l967:
 35455                           
 35456                           ; BSR set to: 14
 35457                           ;i2c2.c: 497: else;i2c2.c: 498: {;i2c2.c: 499: SSP2CON2bits.RCEN = 1;
 35458  018E4A  8797               	bsf	151,3,b	;volatile
 35459                           
 35460                           ; BSR set to: 14
 35461                           ;i2c2.c: 500: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35462  018E4C  0E08               	movlw	8
 35463  018E4E  0100               	movlb	0	; () banked
 35464  018E50  6FDB               	movwf	_i2c2_state& (0+255),b
 35465  018E52  0012               	return	
 35466  018E54                     i1l21601:
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;i2c2.c: 509: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35470  018E54  0E08               	movlw	8
 35471  018E56  6FDB               	movwf	_i2c2_state& (0+255),b
 35472                           
 35473                           ; BSR set to: 0
 35474                           ;i2c2.c: 512: SSP2CON2bits.RCEN = 1;
 35475  018E58  010E               	movlb	14	; () banked
 35476  018E5A  8797               	bsf	151,3,b	;volatile
 35477                           
 35478                           ;i2c2.c: 514: break;
 35479  018E5C  0012               	return	
 35480  018E5E                     i1l21605:
 35481                           
 35482                           ; BSR set to: 0
 35483                           ;i2c2.c: 519: *pi2c_buf_ptr++ = SSP2BUF;
 35484  018E5E  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35485  018E62  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35486  018E66  CE92 FFDF          	movff	3730,indf2	;volatile
 35487                           
 35488                           ; BSR set to: 0
 35489  018E6A  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35490  018E6C  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35491                           
 35492                           ; BSR set to: 0
 35493                           ;i2c2.c: 522: if(--i2c_bytes_left)
 35494  018E6E  0E01               	movlw	1
 35495  018E70  5FD9               	subwf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35496  018E72  B4D8               	btfsc	status,2,c
 35497  018E74  D006               	goto	i1l971
 35498                           
 35499                           ; BSR set to: 0
 35500                           ;i2c2.c: 523: {;i2c2.c: 529: SSP2CON2bits.ACKDT = 0;
 35501  018E76  010E               	movlb	14	; () banked
 35502  018E78  9B97               	bcf	151,5,b	;volatile
 35503                           
 35504                           ; BSR set to: 14
 35505                           ;i2c2.c: 532: i2c2_state = S_MASTER_RCV_DATA;
 35506  018E7A  0E06               	movlw	6
 35507  018E7C  0100               	movlb	0	; () banked
 35508  018E7E  6FDB               	movwf	_i2c2_state& (0+255),b
 35509                           
 35510                           ;i2c2.c: 533: }
 35511  018E80  D004               	goto	i1l21617
 35512  018E82                     i1l971:
 35513                           
 35514                           ; BSR set to: 0
 35515                           ;i2c2.c: 534: else;i2c2.c: 535: {;i2c2.c: 539: SSP2CON2bits.ACKDT = 1;
 35516  018E82  010E               	movlb	14	; () banked
 35517  018E84  8B97               	bsf	151,5,b	;volatile
 35518                           
 35519                           ; BSR set to: 14
 35520                           ;i2c2.c: 541: I2C2_FunctionComplete();
 35521  018E86  ECF7  F0E2         	call	_I2C2_FunctionComplete	;wreg free
 35522  018E8A                     i1l21617:
 35523                           
 35524                           ;i2c2.c: 542: };i2c2.c: 545: SSP2CON2bits.ACKEN = 1;
 35525  018E8A  010E               	movlb	14	; () banked
 35526  018E8C  8997               	bsf	151,4,b	;volatile
 35527                           
 35528                           ;i2c2.c: 546: break;
 35529  018E8E  0012               	return	
 35530  018E90                     i1l21619:
 35531                           
 35532                           ; BSR set to: 0
 35533                           ;i2c2.c: 549: case S_MASTER_SEND_STOP:;i2c2.c: 552: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35534  018E90  0E00               	movlw	0
 35535  018E92  EC51  F0DE         	call	_I2C2_Stop
 35536                           
 35537                           ;i2c2.c: 553: break;
 35538  018E96  0012               	return	
 35539  018E98                     i1l21621:
 35540                           
 35541                           ; BSR set to: 0
 35542                           ;i2c2.c: 559: i2c2_object.i2cErrors++;
 35543  018E98  0101               	movlb	1	; () banked
 35544  018E9A  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35545                           
 35546                           ; BSR set to: 1
 35547                           ;i2c2.c: 560: I2C2_Stop(I2C2_LOST_STATE);
 35548  018E9C  0E06               	movlw	6
 35549  018E9E  EC51  F0DE         	call	_I2C2_Stop
 35550                           
 35551                           ;i2c2.c: 561: break;
 35552  018EA2  0012               	return	
 35553  018EA4                     i1l21627:
 35554                           
 35555                           ; BSR set to: 14
 35556  018EA4  0100               	movlb	0	; () banked
 35557  018EA6  51DB               	movf	_i2c2_state& (0+255),w,b
 35558                           
 35559                           ; Switch size 1, requested type "simple"
 35560                           ; Number of cases is 11, Range of values is 0 to 11
 35561                           ; switch strategies available:
 35562                           ; Name         Instructions Cycles
 35563                           ; simple_byte           34    18 (average)
 35564                           ;	Chosen strategy is simple_byte
 35565  018EA8  0A00               	xorlw	0	; case 0
 35566  018EAA  B4D8               	btfsc	status,2,c
 35567  018EAC  D701               	goto	i1l937
 35568  018EAE  0A01               	xorlw	1	; case 1
 35569  018EB0  B4D8               	btfsc	status,2,c
 35570  018EB2  D7B2               	goto	i1l963
 35571  018EB4  0A03               	xorlw	3	; case 2
 35572  018EB6  B4D8               	btfsc	status,2,c
 35573  018EB8  D771               	goto	i1l21551
 35574  018EBA  0A01               	xorlw	1	; case 3
 35575  018EBC  B4D8               	btfsc	status,2,c
 35576  018EBE  D792               	goto	i1l959
 35577  018EC0  0A07               	xorlw	7	; case 4
 35578  018EC2  B4D8               	btfsc	status,2,c
 35579  018EC4  D7E5               	goto	i1l21619
 35580  018EC6  0A01               	xorlw	1	; case 5
 35581  018EC8  B4D8               	btfsc	status,2,c
 35582  018ECA  D7B4               	goto	i1l966
 35583  018ECC  0A03               	xorlw	3	; case 6
 35584  018ECE  B4D8               	btfsc	status,2,c
 35585  018ED0  D7C1               	goto	i1l21601
 35586  018ED2  0A01               	xorlw	1	; case 7
 35587  018ED4  B4D8               	btfsc	status,2,c
 35588  018ED6  D7DC               	goto	i1l21619
 35589  018ED8  0A0F               	xorlw	15	; case 8
 35590  018EDA  B4D8               	btfsc	status,2,c
 35591  018EDC  D7C0               	goto	i1l21605
 35592  018EDE  0A02               	xorlw	2	; case 10
 35593  018EE0  B4D8               	btfsc	status,2,c
 35594  018EE2  D71C               	goto	i1l943
 35595  018EE4  0A01               	xorlw	1	; case 11
 35596  018EE6  B4D8               	btfsc	status,2,c
 35597  018EE8  D737               	goto	i1l948
 35598  018EEA  D7D6               	goto	i1l21621
 35599  018EEC                     __end_of_I2C2_ISR:
 35600                           	opt callstack 0
 35601                           
 35602 ;; *************** function _I2C2_Stop *****************
 35603 ;; Defined at:
 35604 ;;		line 584 in file "mcc_generated_files/i2c2.c"
 35605 ;; Parameters:    Size  Location     Type
 35606 ;;  completion_c    1    wreg     enum E9433
 35607 ;; Auto vars:     Size  Location     Type
 35608 ;;  completion_c    1    2[BANK1 ] enum E9433
 35609 ;; Return value:  Size  Location     Type
 35610 ;;                  1    wreg      void 
 35611 ;; Registers used:
 35612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35613 ;; Tracked objects:
 35614 ;;		On entry : 0/0
 35615 ;;		On exit  : 0/0
 35616 ;;		Unchanged: 0/0
 35617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35619 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35620 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35621 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35622 ;;Total ram usage:        3 bytes
 35623 ;; Hardware stack levels used:    1
 35624 ;; Hardware stack levels required when called:    6
 35625 ;; This function calls:
 35626 ;;		Nothing
 35627 ;; This function is called by:
 35628 ;;		_I2C2_ISR
 35629 ;; This function uses a non-reentrant model
 35630 ;;
 35631                           
 35632                           	psect	text138
 35633  01BCA2                     __ptext138:
 35634                           	opt callstack 0
 35635  01BCA2                     _I2C2_Stop:
 35636                           	opt callstack 14
 35637                           
 35638                           ;incstack = 0
 35639                           ;I2C2_Stop@completion_code stored from wreg
 35640  01BCA2  0101               	movlb	1	; () banked
 35641  01BCA4  6F02               	movwf	I2C2_Stop@completion_code& (0+255),b
 35642                           
 35643                           ;i2c2.c: 587: SSP2CON2bits.PEN = 1;
 35644  01BCA6  010E               	movlb	14	; () banked
 35645  01BCA8  8597               	bsf	151,2,b	;volatile
 35646                           
 35647                           ; BSR set to: 14
 35648                           ;i2c2.c: 590: if (p_i2c2_current->pTrFlag != (0))
 35649  01BCAA  0100               	movlb	0	; () banked
 35650  01BCAC  EE20 F003          	lfsr	2,3
 35651  01BCB0  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35652  01BCB2  26D9               	addwf	fsr2l,f,c
 35653  01BCB4  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35654  01BCB6  22DA               	addwfc	fsr2h,f,c
 35655  01BCB8  50DE               	movf	postinc2,w,c
 35656  01BCBA  10DE               	iorwf	postinc2,w,c
 35657  01BCBC  B4D8               	btfsc	status,2,c
 35658  01BCBE  D010               	goto	i1l20961
 35659                           
 35660                           ; BSR set to: 0
 35661                           ;i2c2.c: 591: {;i2c2.c: 593: *(p_i2c2_current->pTrFlag) = completion_code;
 35662  01BCC0  EE20 F003          	lfsr	2,3
 35663  01BCC4  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35664  01BCC6  26D9               	addwf	fsr2l,f,c
 35665  01BCC8  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35666  01BCCA  22DA               	addwfc	fsr2h,f,c
 35667  01BCCC  CFDE F100          	movff	postinc2,??_I2C2_Stop
 35668  01BCD0  CFDD F101          	movff	postdec2,??_I2C2_Stop+1
 35669  01BCD4  C100  FFD9         	movff	??_I2C2_Stop,fsr2l
 35670  01BCD8  C101  FFDA         	movff	??_I2C2_Stop+1,fsr2h
 35671  01BCDC  C102  FFDF         	movff	I2C2_Stop@completion_code,indf2
 35672  01BCE0                     i1l20961:
 35673                           
 35674                           ; BSR set to: 0
 35675                           ;i2c2.c: 594: };i2c2.c: 597: i2c2_state = S_MASTER_IDLE;
 35676  01BCE0  0E00               	movlw	0
 35677  01BCE2  6FDB               	movwf	_i2c2_state& (0+255),b
 35678                           
 35679                           ; BSR set to: 0
 35680  01BCE4  0012               	return		;funcret
 35681  01BCE6                     __end_of_I2C2_Stop:
 35682                           	opt callstack 0
 35683                           
 35684 ;; *************** function _I2C2_FunctionComplete *****************
 35685 ;; Defined at:
 35686 ;;		line 566 in file "mcc_generated_files/i2c2.c"
 35687 ;; Parameters:    Size  Location     Type
 35688 ;;		None
 35689 ;; Auto vars:     Size  Location     Type
 35690 ;;		None
 35691 ;; Return value:  Size  Location     Type
 35692 ;;                  1    wreg      void 
 35693 ;; Registers used:
 35694 ;;		wreg, status,2, status,0
 35695 ;; Tracked objects:
 35696 ;;		On entry : 0/0
 35697 ;;		On exit  : 0/0
 35698 ;;		Unchanged: 0/0
 35699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35704 ;;Total ram usage:        0 bytes
 35705 ;; Hardware stack levels used:    1
 35706 ;; Hardware stack levels required when called:    6
 35707 ;; This function calls:
 35708 ;;		Nothing
 35709 ;; This function is called by:
 35710 ;;		_I2C2_ISR
 35711 ;; This function uses a non-reentrant model
 35712 ;;
 35713                           
 35714                           	psect	text139
 35715  01C5EE                     __ptext139:
 35716                           	opt callstack 0
 35717  01C5EE                     _I2C2_FunctionComplete:
 35718                           	opt callstack 14
 35719                           
 35720                           ;i2c2.c: 570: p_i2c2_trb_current++;
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;incstack = 0
 35724  01C5EE  0E05               	movlw	5
 35725  01C5F0  0100               	movlb	0	; () banked
 35726  01C5F2  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35727  01C5F4  0E00               	movlw	0
 35728  01C5F6  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35729                           
 35730                           ; BSR set to: 0
 35731                           ;i2c2.c: 573: if(--i2c2_trb_count == 0)
 35732  01C5F8  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35733  01C5FA  D003               	goto	i1l20969
 35734                           
 35735                           ; BSR set to: 0
 35736                           ;i2c2.c: 574: {;i2c2.c: 575: i2c2_state = S_MASTER_SEND_STOP;
 35737  01C5FC  0E04               	movlw	4
 35738  01C5FE  6FDB               	movwf	_i2c2_state& (0+255),b
 35739                           
 35740                           ;i2c2.c: 576: }
 35741  01C600  0012               	return	
 35742  01C602                     i1l20969:
 35743                           
 35744                           ; BSR set to: 0
 35745                           ;i2c2.c: 577: else;i2c2.c: 578: {;i2c2.c: 579: i2c2_state = S_MASTER_RESTART;
 35746  01C602  0E01               	movlw	1
 35747  01C604  6FDB               	movwf	_i2c2_state& (0+255),b
 35748                           
 35749                           ; BSR set to: 0
 35750  01C606  0012               	return		;funcret
 35751  01C608                     __end_of_I2C2_FunctionComplete:
 35752                           	opt callstack 0
 35753                           
 35754 ;; *************** function _I2C2_BusCollisionISR *****************
 35755 ;; Defined at:
 35756 ;;		line 743 in file "mcc_generated_files/i2c2.c"
 35757 ;; Parameters:    Size  Location     Type
 35758 ;;		None
 35759 ;; Auto vars:     Size  Location     Type
 35760 ;;		None
 35761 ;; Return value:  Size  Location     Type
 35762 ;;                  1    wreg      void 
 35763 ;; Registers used:
 35764 ;;		wreg, status,2
 35765 ;; Tracked objects:
 35766 ;;		On entry : 0/0
 35767 ;;		On exit  : 0/0
 35768 ;;		Unchanged: 0/0
 35769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35774 ;;Total ram usage:        0 bytes
 35775 ;; Hardware stack levels used:    1
 35776 ;; Hardware stack levels required when called:    6
 35777 ;; This function calls:
 35778 ;;		Nothing
 35779 ;; This function is called by:
 35780 ;;		_INTERRUPT_InterruptManagerLow
 35781 ;; This function uses a non-reentrant model
 35782 ;;
 35783                           
 35784                           	psect	text140
 35785  01C860                     __ptext140:
 35786                           	opt callstack 0
 35787  01C860                     _I2C2_BusCollisionISR:
 35788                           	opt callstack 15
 35789                           
 35790                           ;i2c2.c: 746: PIR3bits.BCL2IF = 0;
 35791                           
 35792                           ; BSR set to: 0
 35793                           ;incstack = 0
 35794  01C860  010E               	movlb	14	; () banked
 35795  01C862  97CD               	bcf	205,3,b	;volatile
 35796                           
 35797                           ; BSR set to: 14
 35798                           ;i2c2.c: 747: error_handler.I2C_General_error_flag = 1;
 35799  01C864  0E01               	movlw	1
 35800  01C866  0100               	movlb	0	; () banked
 35801  01C868  6FBB               	movwf	(_error_handler+2)& (0+255),b
 35802                           
 35803                           ; BSR set to: 0
 35804  01C86A  0012               	return		;funcret
 35805  01C86C                     __end_of_I2C2_BusCollisionISR:
 35806                           	opt callstack 0
 35807                           
 35808 ;; *************** function _CCP2_CaptureISR *****************
 35809 ;; Defined at:
 35810 ;;		line 89 in file "mcc_generated_files/ccp2.c"
 35811 ;; Parameters:    Size  Location     Type
 35812 ;;		None
 35813 ;; Auto vars:     Size  Location     Type
 35814 ;;  module          2   86[BANK1 ] struct CCPR2Reg_tag
 35815 ;; Return value:  Size  Location     Type
 35816 ;;                  1    wreg      void 
 35817 ;; Registers used:
 35818 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35819 ;; Tracked objects:
 35820 ;;		On entry : 0/0
 35821 ;;		On exit  : 0/0
 35822 ;;		Unchanged: 0/0
 35823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35825 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35827 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35828 ;;Total ram usage:        2 bytes
 35829 ;; Hardware stack levels used:    1
 35830 ;; Hardware stack levels required when called:    9
 35831 ;; This function calls:
 35832 ;;		_CCP2_CallBack
 35833 ;; This function is called by:
 35834 ;;		_INTERRUPT_InterruptManagerLow
 35835 ;; This function uses a non-reentrant model
 35836 ;;
 35837                           
 35838                           	psect	text141
 35839  01C608                     __ptext141:
 35840                           	opt callstack 0
 35841  01C608                     _CCP2_CaptureISR:
 35842                           	opt callstack 12
 35843                           
 35844                           ;ccp2.c: 92: CCP2_PERIOD_REG_T module;;ccp2.c: 95: PIR6bits.CCP2IF = 0;
 35845                           
 35846                           ; BSR set to: 0
 35847                           ;incstack = 0
 35848  01C608  010E               	movlb	14	; () banked
 35849  01C60A  93D0               	bcf	208,1,b	;volatile
 35850                           
 35851                           ;ccp2.c: 98: module.ccpr2l = CCPR2L;
 35852  01C60C  CFA6 F156          	movff	4006,CCP2_CaptureISR@module	;volatile
 35853                           
 35854                           ;ccp2.c: 99: module.ccpr2h = CCPR2H;
 35855  01C610  CFA7 F157          	movff	4007,CCP2_CaptureISR@module+1	;volatile
 35856                           
 35857                           ; BSR set to: 14
 35858                           ;ccp2.c: 102: CCP2_CallBack(module.ccpr2_16Bit);
 35859  01C614  C156  F154         	movff	CCP2_CaptureISR@module,CCP2_CallBack@capturedValue
 35860  01C618  C157  F155         	movff	CCP2_CaptureISR@module+1,CCP2_CallBack@capturedValue+1
 35861  01C61C  ECB5  F0DE         	call	_CCP2_CallBack	;wreg free
 35862  01C620  0012               	return		;funcret
 35863  01C622                     __end_of_CCP2_CaptureISR:
 35864                           	opt callstack 0
 35865                           
 35866 ;; *************** function _CCP2_CallBack *****************
 35867 ;; Defined at:
 35868 ;;		line 105 in file "mcc_generated_files/ccp2.c"
 35869 ;; Parameters:    Size  Location     Type
 35870 ;;  capturedValu    2   84[BANK1 ] unsigned int 
 35871 ;; Auto vars:     Size  Location     Type
 35872 ;;		None
 35873 ;; Return value:  Size  Location     Type
 35874 ;;                  1    wreg      void 
 35875 ;; Registers used:
 35876 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35877 ;; Tracked objects:
 35878 ;;		On entry : 0/0
 35879 ;;		On exit  : 0/0
 35880 ;;		Unchanged: 0/0
 35881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35882 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35885 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;Total ram usage:        2 bytes
 35887 ;; Hardware stack levels used:    1
 35888 ;; Hardware stack levels required when called:    8
 35889 ;; This function calls:
 35890 ;;		_freqMeasConvert
 35891 ;; This function is called by:
 35892 ;;		_CCP2_CaptureISR
 35893 ;; This function uses a non-reentrant model
 35894 ;;
 35895                           
 35896                           	psect	text142
 35897  01BD6A                     __ptext142:
 35898                           	opt callstack 0
 35899  01BD6A                     _CCP2_CallBack:
 35900                           	opt callstack 12
 35901                           
 35902                           ;ccp2.c: 108: switch (QI_current_edge) {
 35903                           
 35904                           ;incstack = 0
 35905  01BD6A  D016               	goto	i1l15175
 35906  01BD6C                     i1l15165:
 35907                           
 35908                           ; BSR set to: 1
 35909                           ;ccp2.c: 113: TMR5H = 0;
 35910  01BD6C  0E00               	movlw	0
 35911  01BD6E  6EC2               	movwf	4034,c	;volatile
 35912                           
 35913                           ;ccp2.c: 114: TMR5L = 0;
 35914  01BD70  0E00               	movlw	0
 35915  01BD72  6EC1               	movwf	4033,c	;volatile
 35916                           
 35917                           ; BSR set to: 1
 35918                           ;ccp2.c: 115: T5CONbits.ON = 1;
 35919  01BD74  80C3               	bsf	4035,0,c	;volatile
 35920                           
 35921                           ;ccp2.c: 118: QI_current_edge = qi_period_rising_2;
 35922  01BD76  0E01               	movlw	1
 35923  01BD78  6F96               	movwf	_QI_current_edge& (0+255),b
 35924                           
 35925                           ;ccp2.c: 120: break;
 35926  01BD7A  0012               	return	
 35927  01BD7C                     i1l1069:
 35928                           
 35929                           ; BSR set to: 1
 35930                           ;ccp2.c: 125: T5CONbits.ON = 0;
 35931  01BD7C  90C3               	bcf	4035,0,c	;volatile
 35932                           
 35933                           ;ccp2.c: 128: freq_meas_results.QI_Freq_Meas_Raw = capturedValue;
 35934  01BD7E  C154  F16C         	movff	CCP2_CallBack@capturedValue,_freq_meas_results+4
 35935  01BD82  C155  F16D         	movff	CCP2_CallBack@capturedValue+1,_freq_meas_results+5
 35936                           
 35937                           ; BSR set to: 1
 35938                           ;ccp2.c: 131: TMR5H = 0;
 35939  01BD86  0E00               	movlw	0
 35940  01BD88  6EC2               	movwf	4034,c	;volatile
 35941                           
 35942                           ;ccp2.c: 132: TMR5L = 0;
 35943  01BD8A  0E00               	movlw	0
 35944  01BD8C  6EC1               	movwf	4033,c	;volatile
 35945                           
 35946                           ;ccp2.c: 134: QI_current_edge = qi_period_rising_1;
 35947  01BD8E  0E00               	movlw	0
 35948  01BD90  6F96               	movwf	_QI_current_edge& (0+255),b
 35949                           
 35950                           ; BSR set to: 1
 35951                           ;ccp2.c: 137: freqMeasConvert();
 35952  01BD92  EC56  F0D3         	call	_freqMeasConvert	;wreg free
 35953                           
 35954                           ;ccp2.c: 139: break;
 35955  01BD96  0012               	return	
 35956  01BD98                     i1l15175:
 35957  01BD98  0101               	movlb	1	; () banked
 35958  01BD9A  5196               	movf	_QI_current_edge& (0+255),w,b
 35959                           
 35960                           ; Switch size 1, requested type "simple"
 35961                           ; Number of cases is 2, Range of values is 0 to 1
 35962                           ; switch strategies available:
 35963                           ; Name         Instructions Cycles
 35964                           ; simple_byte            7     4 (average)
 35965                           ;	Chosen strategy is simple_byte
 35966  01BD9C  0A00               	xorlw	0	; case 0
 35967  01BD9E  B4D8               	btfsc	status,2,c
 35968  01BDA0  D7E5               	goto	i1l15165
 35969  01BDA2  0A01               	xorlw	1	; case 1
 35970  01BDA4  A4D8               	btfss	status,2,c
 35971  01BDA6  0012               	return	
 35972  01BDA8  D7E9               	goto	i1l1069
 35973  01BDAA                     __end_of_CCP2_CallBack:
 35974                           	opt callstack 0
 35975                           
 35976 ;; *************** function _freqMeasConvert *****************
 35977 ;; Defined at:
 35978 ;;		line 16 in file "freq_meas.c"
 35979 ;; Parameters:    Size  Location     Type
 35980 ;;		None
 35981 ;; Auto vars:     Size  Location     Type
 35982 ;;  qi_period       4   80[BANK1 ] void 
 35983 ;; Return value:  Size  Location     Type
 35984 ;;                  1    wreg      void 
 35985 ;; Registers used:
 35986 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35987 ;; Tracked objects:
 35988 ;;		On entry : 0/0
 35989 ;;		On exit  : 0/0
 35990 ;;		Unchanged: 0/0
 35991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35993 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35995 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35996 ;;Total ram usage:        4 bytes
 35997 ;; Hardware stack levels used:    1
 35998 ;; Hardware stack levels required when called:    7
 35999 ;; This function calls:
 36000 ;;		i1___fladd
 36001 ;;		i1___fldiv
 36002 ;;		i1___flmul
 36003 ;;		i1___xxtofl
 36004 ;; This function is called by:
 36005 ;;		_CCP2_CallBack
 36006 ;; This function uses a non-reentrant model
 36007 ;;
 36008                           
 36009                           	psect	text143
 36010  01A6AC                     __ptext143:
 36011                           	opt callstack 0
 36012  01A6AC                     _freqMeasConvert:
 36013                           	opt callstack 12
 36014                           
 36015                           ;freq_meas.c: 19: double qi_period = ((((float) freq_meas_results.QI_Freq_Meas_Raw + 1) 
      +                          / 16.0) * 0.00000063);
 36016                           
 36017                           ;incstack = 0
 36018  01A6AC  0E00               	movlw	0
 36019  01A6AE  0101               	movlb	1	; () banked
 36020  01A6B0  6F22               	movwf	i1___fldiv@a& (0+255),b
 36021  01A6B2  0E00               	movlw	0
 36022  01A6B4  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36023  01A6B6  0E80               	movlw	128
 36024  01A6B8  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36025  01A6BA  0E41               	movlw	65
 36026  01A6BC  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36027  01A6BE  0E00               	movlw	0
 36028  01A6C0  6F12               	movwf	i1___fladd@a& (0+255),b
 36029  01A6C2  0E00               	movlw	0
 36030  01A6C4  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 36031  01A6C6  0E80               	movlw	128
 36032  01A6C8  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 36033  01A6CA  0E3F               	movlw	63
 36034  01A6CC  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 36035  01A6CE  C16C  F100         	movff	_freq_meas_results+4,i1___xxtofl@val
 36036  01A6D2  C16D  F101         	movff	_freq_meas_results+5,i1___xxtofl@val+1
 36037  01A6D6  6B02               	clrf	(i1___xxtofl@val+2)& (0+255),b
 36038  01A6D8  6B03               	clrf	(i1___xxtofl@val+3)& (0+255),b
 36039  01A6DA  0E00               	movlw	0
 36040  01A6DC  EC58  F0CD         	call	i1___xxtofl
 36041  01A6E0  C100  F10E         	movff	?i1___xxtofl,i1___fladd@b
 36042  01A6E4  C101  F10F         	movff	?i1___xxtofl+1,i1___fladd@b+1
 36043  01A6E8  C102  F110         	movff	?i1___xxtofl+2,i1___fladd@b+2
 36044  01A6EC  C103  F111         	movff	?i1___xxtofl+3,i1___fladd@b+3
 36045  01A6F0  ECFE  F0B9         	call	i1___fladd	;wreg free
 36046  01A6F4  C10E  F11E         	movff	?i1___fladd,i1___fldiv@b
 36047  01A6F8  C10F  F11F         	movff	?i1___fladd+1,i1___fldiv@b+1
 36048  01A6FC  C110  F120         	movff	?i1___fladd+2,i1___fldiv@b+2
 36049  01A700  C111  F121         	movff	?i1___fladd+3,i1___fldiv@b+3
 36050  01A704  EC70  F0C2         	call	i1___fldiv	;wreg free
 36051  01A708  C11E  F137         	movff	?i1___fldiv,i1___flmul@b
 36052  01A70C  C11F  F138         	movff	?i1___fldiv+1,i1___flmul@b+1
 36053  01A710  C120  F139         	movff	?i1___fldiv+2,i1___flmul@b+2
 36054  01A714  C121  F13A         	movff	?i1___fldiv+3,i1___flmul@b+3
 36055  01A718  0E45               	movlw	69
 36056  01A71A  0101               	movlb	1	; () banked
 36057  01A71C  6F3B               	movwf	i1___flmul@a& (0+255),b
 36058  01A71E  0E1D               	movlw	29
 36059  01A720  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36060  01A722  0E29               	movlw	41
 36061  01A724  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36062  01A726  0E35               	movlw	53
 36063  01A728  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36064  01A72A  EC24  F0B5         	call	i1___flmul	;wreg free
 36065  01A72E  C137  F150         	movff	?i1___flmul,freqMeasConvert@qi_period
 36066  01A732  C138  F151         	movff	?i1___flmul+1,freqMeasConvert@qi_period+1
 36067  01A736  C139  F152         	movff	?i1___flmul+2,freqMeasConvert@qi_period+2
 36068  01A73A  C13A  F153         	movff	?i1___flmul+3,freqMeasConvert@qi_period+3
 36069                           
 36070                           ;freq_meas.c: 20: freq_meas_results.QI_Freq_Meas = 1.0 / qi_period;
 36071  01A73E  0E00               	movlw	0
 36072  01A740  0101               	movlb	1	; () banked
 36073  01A742  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36074  01A744  0E00               	movlw	0
 36075  01A746  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36076  01A748  0E80               	movlw	128
 36077  01A74A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36078  01A74C  0E3F               	movlw	63
 36079  01A74E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36080  01A750  C150  F122         	movff	freqMeasConvert@qi_period,i1___fldiv@a
 36081  01A754  C151  F123         	movff	freqMeasConvert@qi_period+1,i1___fldiv@a+1
 36082  01A758  C152  F124         	movff	freqMeasConvert@qi_period+2,i1___fldiv@a+2
 36083  01A75C  C153  F125         	movff	freqMeasConvert@qi_period+3,i1___fldiv@a+3
 36084  01A760  EC70  F0C2         	call	i1___fldiv	;wreg free
 36085  01A764  C11E  F168         	movff	?i1___fldiv,_freq_meas_results
 36086  01A768  C11F  F169         	movff	?i1___fldiv+1,_freq_meas_results+1
 36087  01A76C  C120  F16A         	movff	?i1___fldiv+2,_freq_meas_results+2
 36088  01A770  C121  F16B         	movff	?i1___fldiv+3,_freq_meas_results+3
 36089  01A774  0012               	return		;funcret
 36090  01A776                     __end_of_freqMeasConvert:
 36091                           	opt callstack 0
 36092                           
 36093 ;; *************** function i1___xxtofl *****************
 36094 ;; Defined at:
 36095 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 36096 ;; Parameters:    Size  Location     Type
 36097 ;;  sign            1    wreg     unsigned char 
 36098 ;;  val             4    0[BANK1 ] long 
 36099 ;; Auto vars:     Size  Location     Type
 36100 ;;  sign            1    8[BANK1 ] unsigned char 
 36101 ;;  __xxtofl        4   10[BANK1 ] unsigned long 
 36102 ;;  __xxtofl        1    9[BANK1 ] unsigned char 
 36103 ;; Return value:  Size  Location     Type
 36104 ;;                  4    0[BANK1 ] unsigned char 
 36105 ;; Registers used:
 36106 ;;		wreg, status,2, status,0
 36107 ;; Tracked objects:
 36108 ;;		On entry : 0/0
 36109 ;;		On exit  : 0/0
 36110 ;;		Unchanged: 0/0
 36111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36112 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36113 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36114 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36115 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36116 ;;Total ram usage:       14 bytes
 36117 ;; Hardware stack levels used:    1
 36118 ;; Hardware stack levels required when called:    6
 36119 ;; This function calls:
 36120 ;;		Nothing
 36121 ;; This function is called by:
 36122 ;;		_freqMeasConvert
 36123 ;; This function uses a non-reentrant model
 36124 ;;
 36125                           
 36126                           	psect	text144
 36127  019AB0                     __ptext144:
 36128                           	opt callstack 0
 36129  019AB0                     i1___xxtofl:
 36130                           	opt callstack 12
 36131                           
 36132                           ;incstack = 0
 36133                           ;i1___xxtofl@sign stored from wreg
 36134  019AB0  0101               	movlb	1	; () banked
 36135  019AB2  6F08               	movwf	i1___xxtofl@sign& (0+255),b
 36136  019AB4  0101               	movlb	1	; () banked
 36137  019AB6  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36138  019AB8  A4D8               	btfss	status,2,c
 36139                           
 36140                           ; BSR set to: 1
 36141  019ABA  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36142  019ABC  D01A               	goto	i1l3361
 36143                           
 36144                           ; BSR set to: 1
 36145  019ABE  C100  F104         	movff	i1___xxtofl@val,??i1___xxtofl
 36146  019AC2  C101  F105         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 36147  019AC6  C102  F106         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 36148  019ACA  C103  F107         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 36149  019ACE  1F04               	comf	??i1___xxtofl& (0+255),f,b
 36150  019AD0  1F05               	comf	(??i1___xxtofl+1)& (0+255),f,b
 36151  019AD2  1F06               	comf	(??i1___xxtofl+2)& (0+255),f,b
 36152  019AD4  1F07               	comf	(??i1___xxtofl+3)& (0+255),f,b
 36153  019AD6  2B04               	incf	??i1___xxtofl& (0+255),f,b
 36154  019AD8  0E00               	movlw	0
 36155  019ADA  2305               	addwfc	(??i1___xxtofl+1)& (0+255),f,b
 36156  019ADC  2306               	addwfc	(??i1___xxtofl+2)& (0+255),f,b
 36157  019ADE  2307               	addwfc	(??i1___xxtofl+3)& (0+255),f,b
 36158  019AE0  C104  F10A         	movff	??i1___xxtofl,i1___xxtofl@arg
 36159  019AE4  C105  F10B         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 36160  019AE8  C106  F10C         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 36161  019AEC  C107  F10D         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 36162  019AF0  D008               	goto	i1l13785
 36163  019AF2                     i1l3361:
 36164                           
 36165                           ; BSR set to: 1
 36166  019AF2  C100  F10A         	movff	i1___xxtofl@val,i1___xxtofl@arg
 36167  019AF6  C101  F10B         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 36168  019AFA  C102  F10C         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 36169  019AFE  C103  F10D         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 36170  019B02                     i1l13785:
 36171                           
 36172                           ; BSR set to: 1
 36173  019B02  5100               	movf	i1___xxtofl@val& (0+255),w,b
 36174  019B04  1101               	iorwf	(i1___xxtofl@val+1)& (0+255),w,b
 36175  019B06  1102               	iorwf	(i1___xxtofl@val+2)& (0+255),w,b
 36176  019B08  1103               	iorwf	(i1___xxtofl@val+3)& (0+255),w,b
 36177  019B0A  A4D8               	btfss	status,2,c
 36178  019B0C  D009               	goto	i1l13791
 36179                           
 36180                           ; BSR set to: 1
 36181  019B0E  0E00               	movlw	0
 36182  019B10  6F00               	movwf	?i1___xxtofl& (0+255),b
 36183  019B12  0E00               	movlw	0
 36184  019B14  6F01               	movwf	(?i1___xxtofl+1)& (0+255),b
 36185  019B16  0E00               	movlw	0
 36186  019B18  6F02               	movwf	(?i1___xxtofl+2)& (0+255),b
 36187  019B1A  0E00               	movlw	0
 36188  019B1C  6F03               	movwf	(?i1___xxtofl+3)& (0+255),b
 36189  019B1E  0012               	return	
 36190  019B20                     i1l13791:
 36191                           
 36192                           ; BSR set to: 1
 36193  019B20  0E96               	movlw	150
 36194  019B22  6F09               	movwf	i1___xxtofl@exp& (0+255),b
 36195  019B24  D006               	goto	i1l13795
 36196  019B26                     i1l13793:
 36197                           
 36198                           ; BSR set to: 1
 36199  019B26  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36200  019B28  90D8               	bcf	status,0,c
 36201  019B2A  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36202  019B2C  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36203  019B2E  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36204  019B30  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36205  019B32                     i1l13795:
 36206                           
 36207                           ; BSR set to: 1
 36208  019B32  0E00               	movlw	0
 36209  019B34  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36210  019B36  6F04               	movwf	??i1___xxtofl& (0+255),b
 36211  019B38  0E00               	movlw	0
 36212  019B3A  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36213  019B3C  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36214  019B3E  0E00               	movlw	0
 36215  019B40  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36216  019B42  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36217  019B44  0EFE               	movlw	254
 36218  019B46  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36219  019B48  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36220  019B4A  5104               	movf	??i1___xxtofl& (0+255),w,b
 36221  019B4C  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36222  019B4E  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36223  019B50  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36224  019B52  B4D8               	btfsc	status,2,c
 36225  019B54  D00D               	goto	i1l3368
 36226  019B56  D7E7               	goto	i1l13793
 36227  019B58                     i1l13797:
 36228                           
 36229                           ; BSR set to: 1
 36230  019B58  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36231                           
 36232                           ; BSR set to: 1
 36233  019B5A  0E01               	movlw	1
 36234  019B5C  270A               	addwf	i1___xxtofl@arg& (0+255),f,b
 36235  019B5E  0E00               	movlw	0
 36236  019B60  230B               	addwfc	(i1___xxtofl@arg+1)& (0+255),f,b
 36237  019B62  230C               	addwfc	(i1___xxtofl@arg+2)& (0+255),f,b
 36238  019B64  230D               	addwfc	(i1___xxtofl@arg+3)& (0+255),f,b
 36239                           
 36240                           ; BSR set to: 1
 36241  019B66  90D8               	bcf	status,0,c
 36242  019B68  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36243  019B6A  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36244  019B6C  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36245  019B6E  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36246  019B70                     i1l3368:
 36247                           
 36248                           ; BSR set to: 1
 36249  019B70  0E00               	movlw	0
 36250  019B72  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36251  019B74  6F04               	movwf	??i1___xxtofl& (0+255),b
 36252  019B76  0E00               	movlw	0
 36253  019B78  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36254  019B7A  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36255  019B7C  0E00               	movlw	0
 36256  019B7E  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36257  019B80  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36258  019B82  0EFF               	movlw	255
 36259  019B84  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36260  019B86  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36261  019B88  5104               	movf	??i1___xxtofl& (0+255),w,b
 36262  019B8A  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36263  019B8C  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36264  019B8E  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36265  019B90  B4D8               	btfsc	status,2,c
 36266  019B92  D007               	goto	i1l13805
 36267  019B94  D7E1               	goto	i1l13797
 36268  019B96                     i1l13803:
 36269                           
 36270                           ; BSR set to: 1
 36271  019B96  0709               	decf	i1___xxtofl@exp& (0+255),f,b
 36272  019B98  90D8               	bcf	status,0,c
 36273  019B9A  370A               	rlcf	i1___xxtofl@arg& (0+255),f,b
 36274  019B9C  370B               	rlcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36275  019B9E  370C               	rlcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36276  019BA0  370D               	rlcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36277  019BA2                     i1l13805:
 36278                           
 36279                           ; BSR set to: 1
 36280  019BA2  BF0C               	btfsc	(i1___xxtofl@arg+2)& (0+255),7,b
 36281  019BA4  D003               	goto	i1u1593_20
 36282                           
 36283                           ; BSR set to: 1
 36284  019BA6  0E02               	movlw	2
 36285  019BA8  6109               	cpfslt	i1___xxtofl@exp& (0+255),b
 36286  019BAA  D7F5               	goto	i1l13803
 36287  019BAC                     i1u1593_20:
 36288                           
 36289                           ; BSR set to: 1
 36290  019BAC  A109               	btfss	i1___xxtofl@exp& (0+255),0,b
 36291                           
 36292                           ; BSR set to: 1
 36293  019BAE  9F0C               	bcf	(i1___xxtofl@arg+2)& (0+255),7,b
 36294                           
 36295                           ; BSR set to: 1
 36296  019BB0  90D8               	bcf	status,0,c
 36297  019BB2  3309               	rrcf	i1___xxtofl@exp& (0+255),f,b
 36298                           
 36299                           ; BSR set to: 1
 36300  019BB4  C109  F104         	movff	i1___xxtofl@exp,??i1___xxtofl
 36301  019BB8  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36302  019BBA  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36303  019BBC  6B07               	clrf	(??i1___xxtofl+3)& (0+255),b
 36304  019BBE  C104  F107         	movff	??i1___xxtofl,??i1___xxtofl+3
 36305  019BC2  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36306  019BC4  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36307  019BC6  6B04               	clrf	??i1___xxtofl& (0+255),b
 36308  019BC8  5104               	movf	??i1___xxtofl& (0+255),w,b
 36309  019BCA  130A               	iorwf	i1___xxtofl@arg& (0+255),f,b
 36310  019BCC  5105               	movf	(??i1___xxtofl+1)& (0+255),w,b
 36311  019BCE  130B               	iorwf	(i1___xxtofl@arg+1)& (0+255),f,b
 36312  019BD0  5106               	movf	(??i1___xxtofl+2)& (0+255),w,b
 36313  019BD2  130C               	iorwf	(i1___xxtofl@arg+2)& (0+255),f,b
 36314  019BD4  5107               	movf	(??i1___xxtofl+3)& (0+255),w,b
 36315  019BD6  130D               	iorwf	(i1___xxtofl@arg+3)& (0+255),f,b
 36316                           
 36317                           ; BSR set to: 1
 36318  019BD8  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36319  019BDA  A4D8               	btfss	status,2,c
 36320                           
 36321                           ; BSR set to: 1
 36322  019BDC  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36323  019BDE  D001               	goto	i1l13821
 36324                           
 36325                           ; BSR set to: 1
 36326  019BE0  8F0D               	bsf	(i1___xxtofl@arg+3)& (0+255),7,b
 36327  019BE2                     i1l13821:
 36328                           
 36329                           ; BSR set to: 1
 36330  019BE2  C10A  F100         	movff	i1___xxtofl@arg,?i1___xxtofl
 36331  019BE6  C10B  F101         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 36332  019BEA  C10C  F102         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 36333  019BEE  C10D  F103         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 36334                           
 36335                           ; BSR set to: 1
 36336  019BF2  0012               	return		;funcret
 36337  019BF4                     __end_ofi1___xxtofl:
 36338                           	opt callstack 0
 36339                           
 36340 ;; *************** function i1___flmul *****************
 36341 ;; Defined at:
 36342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 36343 ;; Parameters:    Size  Location     Type
 36344 ;;  b               4   55[BANK1 ] unsigned char 
 36345 ;;  a               4   59[BANK1 ] unsigned char 
 36346 ;; Auto vars:     Size  Location     Type
 36347 ;;  __flmul         4   74[BANK1 ] struct .
 36348 ;;  __flmul         4   68[BANK1 ] unsigned long 
 36349 ;;  __flmul         2   78[BANK1 ] struct .
 36350 ;;  __flmul         1   73[BANK1 ] unsigned char 
 36351 ;;  __flmul         1   72[BANK1 ] unsigned char 
 36352 ;;  __flmul         1   67[BANK1 ] unsigned char 
 36353 ;; Return value:  Size  Location     Type
 36354 ;;                  4   55[BANK1 ] unsigned char 
 36355 ;; Registers used:
 36356 ;;		wreg, status,2, status,0, prodl, prodh
 36357 ;; Tracked objects:
 36358 ;;		On entry : 0/0
 36359 ;;		On exit  : 0/0
 36360 ;;		Unchanged: 0/0
 36361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36362 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36363 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36364 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36365 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36366 ;;Total ram usage:       25 bytes
 36367 ;; Hardware stack levels used:    1
 36368 ;; Hardware stack levels required when called:    6
 36369 ;; This function calls:
 36370 ;;		Nothing
 36371 ;; This function is called by:
 36372 ;;		_freqMeasConvert
 36373 ;; This function uses a non-reentrant model
 36374 ;;
 36375                           
 36376                           	psect	text145
 36377  016A48                     __ptext145:
 36378                           	opt callstack 0
 36379  016A48                     i1___flmul:
 36380                           	opt callstack 12
 36381                           
 36382                           ; BSR set to: 1
 36383                           ;incstack = 0
 36384  016A48  0101               	movlb	1	; () banked
 36385  016A4A  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36386  016A4C  0B80               	andlw	128
 36387  016A4E  6F43               	movwf	i1___flmul@sign& (0+255),b
 36388  016A50  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36389  016A52  253A               	addwf	(i1___flmul@b+3)& (0+255),w,b
 36390  016A54  6F49               	movwf	i1___flmul@bexp& (0+255),b
 36391                           
 36392                           ; BSR set to: 1
 36393  016A56  BF39               	btfsc	(i1___flmul@b+2)& (0+255),7,b
 36394                           
 36395                           ; BSR set to: 1
 36396  016A58  8149               	bsf	i1___flmul@bexp& (0+255),0,b
 36397                           
 36398                           ; BSR set to: 1
 36399  016A5A  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36400  016A5C  B4D8               	btfsc	status,2,c
 36401  016A5E  D00D               	goto	i1l13663
 36402                           
 36403                           ; BSR set to: 1
 36404  016A60  2949               	incf	i1___flmul@bexp& (0+255),w,b
 36405  016A62  A4D8               	btfss	status,2,c
 36406  016A64  D008               	goto	i1l13661
 36407                           
 36408                           ; BSR set to: 1
 36409  016A66  0E00               	movlw	0
 36410  016A68  6F37               	movwf	i1___flmul@b& (0+255),b
 36411  016A6A  0E00               	movlw	0
 36412  016A6C  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36413  016A6E  0E00               	movlw	0
 36414  016A70  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36415  016A72  0E00               	movlw	0
 36416  016A74  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36417  016A76                     i1l13661:
 36418                           
 36419                           ; BSR set to: 1
 36420  016A76  8F39               	bsf	(i1___flmul@b+2)& (0+255),7,b
 36421  016A78  D008               	goto	i1l13665
 36422  016A7A                     i1l13663:
 36423                           
 36424                           ; BSR set to: 1
 36425  016A7A  0E00               	movlw	0
 36426  016A7C  6F37               	movwf	i1___flmul@b& (0+255),b
 36427  016A7E  0E00               	movlw	0
 36428  016A80  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36429  016A82  0E00               	movlw	0
 36430  016A84  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36431  016A86  0E00               	movlw	0
 36432  016A88  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36433  016A8A                     i1l13665:
 36434                           
 36435                           ; BSR set to: 1
 36436  016A8A  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36437  016A8C  0B80               	andlw	128
 36438  016A8E  1B43               	xorwf	i1___flmul@sign& (0+255),f,b
 36439                           
 36440                           ; BSR set to: 1
 36441  016A90  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36442  016A92  253E               	addwf	(i1___flmul@a+3)& (0+255),w,b
 36443  016A94  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36444                           
 36445                           ; BSR set to: 1
 36446  016A96  BF3D               	btfsc	(i1___flmul@a+2)& (0+255),7,b
 36447                           
 36448                           ; BSR set to: 1
 36449  016A98  8148               	bsf	i1___flmul@aexp& (0+255),0,b
 36450                           
 36451                           ; BSR set to: 1
 36452  016A9A  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36453  016A9C  B4D8               	btfsc	status,2,c
 36454  016A9E  D00D               	goto	i1l13681
 36455                           
 36456                           ; BSR set to: 1
 36457  016AA0  2948               	incf	i1___flmul@aexp& (0+255),w,b
 36458  016AA2  A4D8               	btfss	status,2,c
 36459  016AA4  D008               	goto	i1l13679
 36460                           
 36461                           ; BSR set to: 1
 36462  016AA6  0E00               	movlw	0
 36463  016AA8  6F3B               	movwf	i1___flmul@a& (0+255),b
 36464  016AAA  0E00               	movlw	0
 36465  016AAC  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36466  016AAE  0E00               	movlw	0
 36467  016AB0  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36468  016AB2  0E00               	movlw	0
 36469  016AB4  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36470  016AB6                     i1l13679:
 36471                           
 36472                           ; BSR set to: 1
 36473  016AB6  8F3D               	bsf	(i1___flmul@a+2)& (0+255),7,b
 36474  016AB8  D008               	goto	i1l3320
 36475  016ABA                     i1l13681:
 36476                           
 36477                           ; BSR set to: 1
 36478  016ABA  0E00               	movlw	0
 36479  016ABC  6F3B               	movwf	i1___flmul@a& (0+255),b
 36480  016ABE  0E00               	movlw	0
 36481  016AC0  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36482  016AC2  0E00               	movlw	0
 36483  016AC4  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36484  016AC6  0E00               	movlw	0
 36485  016AC8  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36486  016ACA                     i1l3320:
 36487                           
 36488                           ; BSR set to: 1
 36489  016ACA  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36490  016ACC  B4D8               	btfsc	status,2,c
 36491  016ACE  D003               	goto	i1u1575_20
 36492                           
 36493                           ; BSR set to: 1
 36494  016AD0  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36495  016AD2  A4D8               	btfss	status,2,c
 36496  016AD4  D009               	goto	i1l13689
 36497  016AD6                     i1u1575_20:
 36498                           
 36499                           ; BSR set to: 1
 36500  016AD6  0E00               	movlw	0
 36501  016AD8  6F37               	movwf	?i1___flmul& (0+255),b
 36502  016ADA  0E00               	movlw	0
 36503  016ADC  6F38               	movwf	(?i1___flmul+1)& (0+255),b
 36504  016ADE  0E00               	movlw	0
 36505  016AE0  6F39               	movwf	(?i1___flmul+2)& (0+255),b
 36506  016AE2  0E00               	movlw	0
 36507  016AE4  6F3A               	movwf	(?i1___flmul+3)& (0+255),b
 36508  016AE6  0012               	return	
 36509  016AE8                     i1l13689:
 36510                           
 36511                           ; BSR set to: 1
 36512  016AE8  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36513  016AEA  0337               	mulwf	i1___flmul@b& (0+255),b
 36514  016AEC  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36515  016AF0  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36516                           
 36517                           ; BSR set to: 1
 36518  016AF4  514E               	movf	i1___flmul@temp& (0+255),w,b
 36519  016AF6  6F44               	movwf	i1___flmul@grs& (0+255),b
 36520  016AF8  6B45               	clrf	(i1___flmul@grs+1)& (0+255),b
 36521  016AFA  6B46               	clrf	(i1___flmul@grs+2)& (0+255),b
 36522  016AFC  6B47               	clrf	(i1___flmul@grs+3)& (0+255),b
 36523                           
 36524                           ; BSR set to: 1
 36525  016AFE  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36526  016B00  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36527  016B02  6B4B               	clrf	(i1___flmul@prod+1)& (0+255),b
 36528  016B04  6B4C               	clrf	(i1___flmul@prod+2)& (0+255),b
 36529  016B06  6B4D               	clrf	(i1___flmul@prod+3)& (0+255),b
 36530  016B08  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36531  016B0A  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36532  016B0C  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36533  016B10  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36534                           
 36535                           ; BSR set to: 1
 36536  016B14  514E               	movf	i1___flmul@temp& (0+255),w,b
 36537  016B16  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36538  016B18  0E00               	movlw	0
 36539  016B1A  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36540  016B1C  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36541  016B1E  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36542                           
 36543                           ; BSR set to: 1
 36544  016B20  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36545  016B22  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36546  016B24  0E00               	movlw	0
 36547  016B26  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36548  016B28  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36549  016B2A  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36550  016B2C  513B               	movf	i1___flmul@a& (0+255),w,b
 36551  016B2E  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36552  016B30  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36553  016B34  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36554                           
 36555                           ; BSR set to: 1
 36556  016B38  514E               	movf	i1___flmul@temp& (0+255),w,b
 36557  016B3A  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36558  016B3C  0E00               	movlw	0
 36559  016B3E  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36560  016B40  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36561  016B42  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36562                           
 36563                           ; BSR set to: 1
 36564  016B44  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36565  016B46  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36566  016B48  0E00               	movlw	0
 36567  016B4A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36568  016B4C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36569  016B4E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36570                           
 36571                           ; BSR set to: 1
 36572  016B50  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36573  016B54  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36574  016B58  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36575  016B5C  6B44               	clrf	i1___flmul@grs& (0+255),b
 36576                           
 36577                           ; BSR set to: 1
 36578  016B5E  513B               	movf	i1___flmul@a& (0+255),w,b
 36579  016B60  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36580  016B62  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36581  016B66  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36582                           
 36583                           ; BSR set to: 1
 36584  016B6A  514E               	movf	i1___flmul@temp& (0+255),w,b
 36585  016B6C  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36586  016B6E  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36587  016B70  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36588  016B72  0E00               	movlw	0
 36589  016B74  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36590  016B76  0E00               	movlw	0
 36591  016B78  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36592                           
 36593                           ; BSR set to: 1
 36594  016B7A  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36595  016B7C  0337               	mulwf	i1___flmul@b& (0+255),b
 36596  016B7E  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36597  016B82  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36598                           
 36599                           ; BSR set to: 1
 36600  016B86  514E               	movf	i1___flmul@temp& (0+255),w,b
 36601  016B88  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36602  016B8A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36603  016B8C  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36604  016B8E  0E00               	movlw	0
 36605  016B90  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36606  016B92  0E00               	movlw	0
 36607  016B94  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36608                           
 36609                           ; BSR set to: 1
 36610  016B96  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36611  016B9A  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36612  016B9E  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36613  016BA2  6B44               	clrf	i1___flmul@grs& (0+255),b
 36614  016BA4  513B               	movf	i1___flmul@a& (0+255),w,b
 36615  016BA6  0337               	mulwf	i1___flmul@b& (0+255),b
 36616  016BA8  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36617  016BAC  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36618                           
 36619                           ; BSR set to: 1
 36620  016BB0  514E               	movf	i1___flmul@temp& (0+255),w,b
 36621  016BB2  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36622  016BB4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36623  016BB6  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36624  016BB8  0E00               	movlw	0
 36625  016BBA  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36626  016BBC  0E00               	movlw	0
 36627  016BBE  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36628                           
 36629                           ; BSR set to: 1
 36630  016BC0  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36631  016BC2  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36632  016BC4  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36633  016BC8  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36634  016BCC  514E               	movf	i1___flmul@temp& (0+255),w,b
 36635  016BCE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36636  016BD0  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36637  016BD2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36638  016BD4  0E00               	movlw	0
 36639  016BD6  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36640  016BD8  0E00               	movlw	0
 36641  016BDA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36642                           
 36643                           ; BSR set to: 1
 36644  016BDC  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36645  016BDE  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36646  016BE0  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36647  016BE4  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36648                           
 36649                           ; BSR set to: 1
 36650  016BE8  514E               	movf	i1___flmul@temp& (0+255),w,b
 36651  016BEA  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36652  016BEC  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36653  016BEE  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36654  016BF0  0E00               	movlw	0
 36655  016BF2  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36656  016BF4  0E00               	movlw	0
 36657  016BF6  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36658  016BF8  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36659  016BFA  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36660  016BFC  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36661  016C00  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36662                           
 36663                           ; BSR set to: 1
 36664  016C04  514E               	movf	i1___flmul@temp& (0+255),w,b
 36665  016C06  6F3F               	movwf	??i1___flmul& (0+255),b
 36666  016C08  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36667  016C0A  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36668  016C0C  6B41               	clrf	(??i1___flmul+2)& (0+255),b
 36669  016C0E  6B42               	clrf	(??i1___flmul+3)& (0+255),b
 36670  016C10  C141  F142         	movff	??i1___flmul+2,??i1___flmul+3
 36671  016C14  C140  F141         	movff	??i1___flmul+1,??i1___flmul+2
 36672  016C18  C13F  F140         	movff	??i1___flmul,??i1___flmul+1
 36673  016C1C  6B3F               	clrf	??i1___flmul& (0+255),b
 36674  016C1E  513F               	movf	??i1___flmul& (0+255),w,b
 36675  016C20  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36676  016C22  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36677  016C24  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36678  016C26  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36679  016C28  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36680  016C2A  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36681  016C2C  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36682                           
 36683                           ; BSR set to: 1
 36684  016C2E  C144  F13F         	movff	i1___flmul@grs,??i1___flmul
 36685  016C32  C145  F140         	movff	i1___flmul@grs+1,??i1___flmul+1
 36686  016C36  C146  F141         	movff	i1___flmul@grs+2,??i1___flmul+2
 36687  016C3A  C147  F142         	movff	i1___flmul@grs+3,??i1___flmul+3
 36688  016C3E  0E19               	movlw	25
 36689  016C40  D005               	goto	i1u1576_20
 36690  016C42                     i1u1576_25:
 36691  016C42  90D8               	bcf	status,0,c
 36692  016C44  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36693  016C46  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36694  016C48  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36695  016C4A  333F               	rrcf	??i1___flmul& (0+255),f,b
 36696  016C4C                     i1u1576_20:
 36697  016C4C  2EE8               	decfsz	wreg,f,c
 36698  016C4E  D7F9               	goto	i1u1576_25
 36699  016C50  513F               	movf	??i1___flmul& (0+255),w,b
 36700  016C52  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36701  016C54  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36702  016C56  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36703  016C58  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36704  016C5A  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36705  016C5C  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36706  016C5E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36707                           
 36708                           ; BSR set to: 1
 36709  016C60  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36710  016C64  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36711  016C68  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36712  016C6C  6B44               	clrf	i1___flmul@grs& (0+255),b
 36713                           
 36714                           ; BSR set to: 1
 36715  016C6E  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36716  016C70  C149  F13F         	movff	i1___flmul@bexp,??i1___flmul
 36717  016C74  6B40               	clrf	(??i1___flmul+1)& (0+255),b
 36718  016C76  273F               	addwf	??i1___flmul& (0+255),f,b
 36719  016C78  0E00               	movlw	0
 36720  016C7A  2340               	addwfc	(??i1___flmul+1)& (0+255),f,b
 36721  016C7C  0E82               	movlw	130
 36722  016C7E  253F               	addwf	??i1___flmul& (0+255),w,b
 36723  016C80  6F4E               	movwf	i1___flmul@temp& (0+255),b
 36724  016C82  0EFF               	movlw	255
 36725  016C84  2140               	addwfc	(??i1___flmul+1)& (0+255),w,b
 36726  016C86  6F4F               	movwf	(i1___flmul@temp+1)& (0+255),b
 36727  016C88  D00F               	goto	i1l13737
 36728  016C8A                     i1l13731:
 36729                           
 36730                           ; BSR set to: 1
 36731  016C8A  90D8               	bcf	status,0,c
 36732  016C8C  374A               	rlcf	i1___flmul@prod& (0+255),f,b
 36733  016C8E  374B               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 36734  016C90  374C               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 36735  016C92  374D               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 36736                           
 36737                           ; BSR set to: 1
 36738  016C94  BF47               	btfsc	(i1___flmul@grs+3)& (0+255),7,b
 36739                           
 36740                           ; BSR set to: 1
 36741  016C96  814A               	bsf	i1___flmul@prod& (0+255),0,b
 36742                           
 36743                           ; BSR set to: 1
 36744  016C98  90D8               	bcf	status,0,c
 36745  016C9A  3744               	rlcf	i1___flmul@grs& (0+255),f,b
 36746  016C9C  3745               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 36747  016C9E  3746               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 36748  016CA0  3747               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 36749  016CA2  074E               	decf	i1___flmul@temp& (0+255),f,b
 36750  016CA4  A0D8               	btfss	status,0,c
 36751  016CA6  074F               	decf	(i1___flmul@temp+1)& (0+255),f,b
 36752  016CA8                     i1l13737:
 36753                           
 36754                           ; BSR set to: 1
 36755  016CA8  AF4C               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 36756  016CAA  D7EF               	goto	i1l13731
 36757                           
 36758                           ; BSR set to: 1
 36759  016CAC  0E00               	movlw	0
 36760  016CAE  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36761                           
 36762                           ; BSR set to: 1
 36763  016CB0  AF47               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 36764  016CB2  D017               	goto	i1l3329
 36765                           
 36766                           ; BSR set to: 1
 36767  016CB4  0EFF               	movlw	255
 36768  016CB6  1544               	andwf	i1___flmul@grs& (0+255),w,b
 36769  016CB8  6F3F               	movwf	??i1___flmul& (0+255),b
 36770  016CBA  0EFF               	movlw	255
 36771  016CBC  1545               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 36772  016CBE  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36773  016CC0  0EFF               	movlw	255
 36774  016CC2  1546               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 36775  016CC4  6F41               	movwf	(??i1___flmul+2)& (0+255),b
 36776  016CC6  0E7F               	movlw	127
 36777  016CC8  1547               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 36778  016CCA  6F42               	movwf	(??i1___flmul+3)& (0+255),b
 36779  016CCC  513F               	movf	??i1___flmul& (0+255),w,b
 36780  016CCE  1140               	iorwf	(??i1___flmul+1)& (0+255),w,b
 36781  016CD0  1141               	iorwf	(??i1___flmul+2)& (0+255),w,b
 36782  016CD2  1142               	iorwf	(??i1___flmul+3)& (0+255),w,b
 36783  016CD4  B4D8               	btfsc	status,2,c
 36784  016CD6  D003               	goto	i1l3330
 36785  016CD8                     i1u1580_20:
 36786                           
 36787                           ; BSR set to: 1
 36788  016CD8  0E01               	movlw	1
 36789  016CDA  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36790  016CDC  D002               	goto	i1l3329
 36791  016CDE                     i1l3330:
 36792                           
 36793                           ; BSR set to: 1
 36794  016CDE  B14A               	btfsc	i1___flmul@prod& (0+255),0,b
 36795  016CE0  D7FB               	goto	i1u1580_20
 36796  016CE2                     i1l3329:
 36797                           
 36798                           ; BSR set to: 1
 36799  016CE2  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36800  016CE4  B4D8               	btfsc	status,2,c
 36801  016CE6  D01F               	goto	i1l13757
 36802                           
 36803                           ; BSR set to: 1
 36804  016CE8  0E01               	movlw	1
 36805  016CEA  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36806  016CEC  0E00               	movlw	0
 36807  016CEE  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36808  016CF0  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36809  016CF2  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36810                           
 36811                           ; BSR set to: 1
 36812  016CF4  A14D               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 36813  016CF6  D017               	goto	i1l13757
 36814                           
 36815                           ; BSR set to: 1
 36816  016CF8  C14A  F13F         	movff	i1___flmul@prod,??i1___flmul
 36817  016CFC  C14B  F140         	movff	i1___flmul@prod+1,??i1___flmul+1
 36818  016D00  C14C  F141         	movff	i1___flmul@prod+2,??i1___flmul+2
 36819  016D04  C14D  F142         	movff	i1___flmul@prod+3,??i1___flmul+3
 36820  016D08  3542               	rlcf	(??i1___flmul+3)& (0+255),w,b
 36821  016D0A  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36822  016D0C  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36823  016D0E  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36824  016D10  333F               	rrcf	??i1___flmul& (0+255),f,b
 36825  016D12  C13F  F14A         	movff	??i1___flmul,i1___flmul@prod
 36826  016D16  C140  F14B         	movff	??i1___flmul+1,i1___flmul@prod+1
 36827  016D1A  C141  F14C         	movff	??i1___flmul+2,i1___flmul@prod+2
 36828  016D1E  C142  F14D         	movff	??i1___flmul+3,i1___flmul@prod+3
 36829                           
 36830                           ; BSR set to: 1
 36831  016D22  4B4E               	infsnz	i1___flmul@temp& (0+255),f,b
 36832  016D24  2B4F               	incf	(i1___flmul@temp+1)& (0+255),f,b
 36833  016D26                     i1l13757:
 36834                           
 36835                           ; BSR set to: 1
 36836  016D26  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36837  016D28  D00D               	goto	i1l13761
 36838  016D2A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36839  016D2C  E103               	bnz	i1u1584_20
 36840  016D2E  294E               	incf	i1___flmul@temp& (0+255),w,b
 36841  016D30  A0D8               	btfss	status,0,c
 36842  016D32  D008               	goto	i1l13761
 36843  016D34                     i1u1584_20:
 36844                           
 36845                           ; BSR set to: 1
 36846  016D34  0E00               	movlw	0
 36847  016D36  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36848  016D38  0E00               	movlw	0
 36849  016D3A  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36850  016D3C  0E80               	movlw	128
 36851  016D3E  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36852  016D40  0E7F               	movlw	127
 36853  016D42  D020               	goto	L27
 36854  016D44                     i1l13761:
 36855                           
 36856                           ; BSR set to: 1
 36857  016D44  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36858  016D46  D005               	goto	i1u1585_20
 36859  016D48  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36860  016D4A  E10E               	bnz	i1l3337
 36861  016D4C  054E               	decf	i1___flmul@temp& (0+255),w,b
 36862  016D4E  B0D8               	btfsc	status,0,c
 36863  016D50  D00B               	goto	i1l3337
 36864  016D52                     i1u1585_20:
 36865                           
 36866                           ; BSR set to: 1
 36867  016D52  0E00               	movlw	0
 36868  016D54  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36869  016D56  0E00               	movlw	0
 36870  016D58  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36871  016D5A  0E00               	movlw	0
 36872  016D5C  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36873  016D5E  0E00               	movlw	0
 36874  016D60  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36875  016D62  0E00               	movlw	0
 36876  016D64  6F43               	movwf	i1___flmul@sign& (0+255),b
 36877  016D66  D00F               	goto	i1l13773
 36878  016D68                     i1l3337:
 36879                           
 36880                           ; BSR set to: 1
 36881  016D68  C14E  F149         	movff	i1___flmul@temp,i1___flmul@bexp
 36882                           
 36883                           ; BSR set to: 1
 36884  016D6C  0EFF               	movlw	255
 36885  016D6E  174A               	andwf	i1___flmul@prod& (0+255),f,b
 36886  016D70  0EFF               	movlw	255
 36887  016D72  174B               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 36888  016D74  0E7F               	movlw	127
 36889  016D76  174C               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 36890  016D78  0E00               	movlw	0
 36891  016D7A  174D               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 36892                           
 36893                           ; BSR set to: 1
 36894  016D7C  B149               	btfsc	i1___flmul@bexp& (0+255),0,b
 36895                           
 36896                           ; BSR set to: 1
 36897  016D7E  8F4C               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 36898                           
 36899                           ; BSR set to: 1
 36900  016D80  90D8               	bcf	status,0,c
 36901  016D82  3149               	rrcf	i1___flmul@bexp& (0+255),w,b
 36902  016D84                     L27:
 36903  016D84  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36904  016D86                     i1l13773:
 36905                           
 36906                           ; BSR set to: 1
 36907  016D86  5143               	movf	i1___flmul@sign& (0+255),w,b
 36908  016D88  134D               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 36909                           
 36910                           ; BSR set to: 1
 36911  016D8A  C14A  F137         	movff	i1___flmul@prod,?i1___flmul
 36912  016D8E  C14B  F138         	movff	i1___flmul@prod+1,?i1___flmul+1
 36913  016D92  C14C  F139         	movff	i1___flmul@prod+2,?i1___flmul+2
 36914  016D96  C14D  F13A         	movff	i1___flmul@prod+3,?i1___flmul+3
 36915                           
 36916                           ; BSR set to: 1
 36917  016D9A  0012               	return		;funcret
 36918  016D9C                     __end_ofi1___flmul:
 36919                           	opt callstack 0
 36920                           
 36921 ;; *************** function i1___fldiv *****************
 36922 ;; Defined at:
 36923 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 36924 ;; Parameters:    Size  Location     Type
 36925 ;;  b               4   30[BANK1 ] unsigned char 
 36926 ;;  a               4   34[BANK1 ] unsigned char 
 36927 ;; Auto vars:     Size  Location     Type
 36928 ;;  __fldiv         4   49[BANK1 ] unsigned long 
 36929 ;;  __fldiv         4   42[BANK1 ] unsigned long 
 36930 ;;  __fldiv         2   47[BANK1 ] int 
 36931 ;;  __fldiv         1   54[BANK1 ] unsigned char 
 36932 ;;  __fldiv         1   53[BANK1 ] unsigned char 
 36933 ;;  __fldiv         1   46[BANK1 ] unsigned char 
 36934 ;; Return value:  Size  Location     Type
 36935 ;;                  4   30[BANK1 ] unsigned char 
 36936 ;; Registers used:
 36937 ;;		wreg, status,2, status,0
 36938 ;; Tracked objects:
 36939 ;;		On entry : 0/0
 36940 ;;		On exit  : 0/0
 36941 ;;		Unchanged: 0/0
 36942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36943 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36944 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36946 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36947 ;;Total ram usage:       25 bytes
 36948 ;; Hardware stack levels used:    1
 36949 ;; Hardware stack levels required when called:    6
 36950 ;; This function calls:
 36951 ;;		Nothing
 36952 ;; This function is called by:
 36953 ;;		_freqMeasConvert
 36954 ;; This function uses a non-reentrant model
 36955 ;;
 36956                           
 36957                           	psect	text146
 36958  0184E0                     __ptext146:
 36959                           	opt callstack 0
 36960  0184E0                     i1___fldiv:
 36961                           	opt callstack 12
 36962                           
 36963                           ; BSR set to: 1
 36964                           ;incstack = 0
 36965  0184E0  0101               	movlb	1	; () banked
 36966  0184E2  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36967  0184E4  0B80               	andlw	128
 36968  0184E6  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 36969  0184E8  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36970  0184EA  2521               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 36971  0184EC  6F35               	movwf	i1___fldiv@bexp& (0+255),b
 36972                           
 36973                           ; BSR set to: 1
 36974  0184EE  BF20               	btfsc	(i1___fldiv@b+2)& (0+255),7,b
 36975                           
 36976                           ; BSR set to: 1
 36977  0184F0  8135               	bsf	i1___fldiv@bexp& (0+255),0,b
 36978                           
 36979                           ; BSR set to: 1
 36980  0184F2  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 36981  0184F4  B4D8               	btfsc	status,2,c
 36982  0184F6  D00D               	goto	i1l13527
 36983                           
 36984                           ; BSR set to: 1
 36985  0184F8  2935               	incf	i1___fldiv@bexp& (0+255),w,b
 36986  0184FA  A4D8               	btfss	status,2,c
 36987  0184FC  D008               	goto	i1l13523
 36988                           
 36989                           ; BSR set to: 1
 36990  0184FE  0E00               	movlw	0
 36991  018500  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36992  018502  0E00               	movlw	0
 36993  018504  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36994  018506  0E00               	movlw	0
 36995  018508  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36996  01850A  0E00               	movlw	0
 36997  01850C  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36998  01850E                     i1l13523:
 36999                           
 37000                           ; BSR set to: 1
 37001  01850E  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37002  018510  D006               	goto	L28
 37003  018512                     i1l13527:
 37004                           
 37005                           ; BSR set to: 1
 37006  018512  0E00               	movlw	0
 37007  018514  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37008  018516  0E00               	movlw	0
 37009  018518  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37010  01851A  0E00               	movlw	0
 37011  01851C  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37012  01851E                     L28:
 37013  01851E  0E00               	movlw	0
 37014  018520  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37015                           
 37016                           ; BSR set to: 1
 37017  018522  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37018  018524  0B80               	andlw	128
 37019  018526  1B2E               	xorwf	i1___fldiv@sign& (0+255),f,b
 37020                           
 37021                           ; BSR set to: 1
 37022  018528  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37023  01852A  2525               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 37024  01852C  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37025                           
 37026                           ; BSR set to: 1
 37027  01852E  BF24               	btfsc	(i1___fldiv@a+2)& (0+255),7,b
 37028                           
 37029                           ; BSR set to: 1
 37030  018530  8136               	bsf	i1___fldiv@aexp& (0+255),0,b
 37031                           
 37032                           ; BSR set to: 1
 37033  018532  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37034  018534  B4D8               	btfsc	status,2,c
 37035  018536  D00D               	goto	i1l13547
 37036                           
 37037                           ; BSR set to: 1
 37038  018538  2936               	incf	i1___fldiv@aexp& (0+255),w,b
 37039  01853A  A4D8               	btfss	status,2,c
 37040  01853C  D008               	goto	i1l13543
 37041                           
 37042                           ; BSR set to: 1
 37043  01853E  0E00               	movlw	0
 37044  018540  6F22               	movwf	i1___fldiv@a& (0+255),b
 37045  018542  0E00               	movlw	0
 37046  018544  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 37047  018546  0E00               	movlw	0
 37048  018548  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 37049  01854A  0E00               	movlw	0
 37050  01854C  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 37051  01854E                     i1l13543:
 37052                           
 37053                           ; BSR set to: 1
 37054  01854E  8F24               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 37055  018550  D006               	goto	L29
 37056  018552                     i1l13547:
 37057                           
 37058                           ; BSR set to: 1
 37059  018552  0E00               	movlw	0
 37060  018554  6F22               	movwf	i1___fldiv@a& (0+255),b
 37061  018556  0E00               	movlw	0
 37062  018558  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 37063  01855A  0E00               	movlw	0
 37064  01855C  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 37065  01855E                     L29:
 37066  01855E  0E00               	movlw	0
 37067  018560  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 37068                           
 37069                           ; BSR set to: 1
 37070  018562  5122               	movf	i1___fldiv@a& (0+255),w,b
 37071  018564  1123               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 37072  018566  1124               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 37073  018568  1125               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 37074  01856A  A4D8               	btfss	status,2,c
 37075  01856C  D017               	goto	i1l13561
 37076                           
 37077                           ; BSR set to: 1
 37078  01856E  0E00               	movlw	0
 37079  018570  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37080  018572  0E00               	movlw	0
 37081  018574  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37082  018576  0E00               	movlw	0
 37083  018578  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37084  01857A  0E00               	movlw	0
 37085  01857C  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37086                           
 37087                           ; BSR set to: 1
 37088  01857E  0E80               	movlw	128
 37089  018580  1320               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 37090  018582  0E7F               	movlw	127
 37091  018584  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 37092  018586                     i1l13555:
 37093                           
 37094                           ; BSR set to: 1
 37095  018586  512E               	movf	i1___fldiv@sign& (0+255),w,b
 37096  018588  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 37097                           
 37098                           ; BSR set to: 1
 37099  01858A  C11E  F11E         	movff	i1___fldiv@b,?i1___fldiv
 37100  01858E  C11F  F11F         	movff	i1___fldiv@b+1,?i1___fldiv+1
 37101  018592  C120  F120         	movff	i1___fldiv@b+2,?i1___fldiv+2
 37102  018596  C121  F121         	movff	i1___fldiv@b+3,?i1___fldiv+3
 37103  01859A  0012               	return	
 37104  01859C                     i1l13561:
 37105                           
 37106                           ; BSR set to: 1
 37107  01859C  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 37108  01859E  A4D8               	btfss	status,2,c
 37109  0185A0  D009               	goto	i1l13569
 37110                           
 37111                           ; BSR set to: 1
 37112                           
 37113                           ; BSR set to: 1
 37114  0185A2  0E00               	movlw	0
 37115  0185A4  6F1E               	movwf	?i1___fldiv& (0+255),b
 37116  0185A6  0E00               	movlw	0
 37117  0185A8  6F1F               	movwf	(?i1___fldiv+1)& (0+255),b
 37118  0185AA  0E00               	movlw	0
 37119  0185AC  6F20               	movwf	(?i1___fldiv+2)& (0+255),b
 37120  0185AE  0E00               	movlw	0
 37121  0185B0  6F21               	movwf	(?i1___fldiv+3)& (0+255),b
 37122  0185B2  0012               	return	
 37123  0185B4                     i1l13569:
 37124                           
 37125                           ; BSR set to: 1
 37126  0185B4  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37127  0185B6  C135  F126         	movff	i1___fldiv@bexp,??i1___fldiv
 37128  0185BA  6B27               	clrf	(??i1___fldiv+1)& (0+255),b
 37129  0185BC  5F26               	subwf	??i1___fldiv& (0+255),f,b
 37130  0185BE  0E00               	movlw	0
 37131  0185C0  5B27               	subwfb	(??i1___fldiv+1)& (0+255),f,b
 37132  0185C2  0E7F               	movlw	127
 37133  0185C4  2526               	addwf	??i1___fldiv& (0+255),w,b
 37134  0185C6  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37135  0185C8  0E00               	movlw	0
 37136  0185CA  2127               	addwfc	(??i1___fldiv+1)& (0+255),w,b
 37137  0185CC  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37138                           
 37139                           ; BSR set to: 1
 37140  0185CE  C11E  F12A         	movff	i1___fldiv@b,i1___fldiv@rem
 37141  0185D2  C11F  F12B         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 37142  0185D6  C120  F12C         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 37143  0185DA  C121  F12D         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 37144                           
 37145                           ; BSR set to: 1
 37146  0185DE  0E00               	movlw	0
 37147  0185E0  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37148  0185E2  0E00               	movlw	0
 37149  0185E4  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37150  0185E6  0E00               	movlw	0
 37151  0185E8  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37152  0185EA  0E00               	movlw	0
 37153  0185EC  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37154                           
 37155                           ; BSR set to: 1
 37156  0185EE  0E00               	movlw	0
 37157  0185F0  6F31               	movwf	i1___fldiv@grs& (0+255),b
 37158  0185F2  0E00               	movlw	0
 37159  0185F4  6F32               	movwf	(i1___fldiv@grs+1)& (0+255),b
 37160  0185F6  0E00               	movlw	0
 37161  0185F8  6F33               	movwf	(i1___fldiv@grs+2)& (0+255),b
 37162  0185FA  0E00               	movlw	0
 37163  0185FC  6F34               	movwf	(i1___fldiv@grs+3)& (0+255),b
 37164                           
 37165                           ; BSR set to: 1
 37166  0185FE  0E00               	movlw	0
 37167  018600  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37168  018602  D028               	goto	i1l3290
 37169  018604                     i1l13579:
 37170                           
 37171                           ; BSR set to: 1
 37172  018604  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37173  018606  B4D8               	btfsc	status,2,c
 37174  018608  D011               	goto	i1l13587
 37175                           
 37176                           ; BSR set to: 1
 37177  01860A  90D8               	bcf	status,0,c
 37178  01860C  372A               	rlcf	i1___fldiv@rem& (0+255),f,b
 37179  01860E  372B               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 37180  018610  372C               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 37181  018612  372D               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 37182  018614  90D8               	bcf	status,0,c
 37183  018616  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37184  018618  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37185  01861A  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37186  01861C  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37187                           
 37188                           ; BSR set to: 1
 37189  01861E  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37190                           
 37191                           ; BSR set to: 1
 37192  018620  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37193                           
 37194                           ; BSR set to: 1
 37195  018622  90D8               	bcf	status,0,c
 37196  018624  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37197  018626  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37198  018628  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37199  01862A  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37200  01862C                     i1l13587:
 37201                           
 37202                           ; BSR set to: 1
 37203  01862C  5122               	movf	i1___fldiv@a& (0+255),w,b
 37204  01862E  5D2A               	subwf	i1___fldiv@rem& (0+255),w,b
 37205  018630  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37206  018632  592B               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 37207  018634  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37208  018636  592C               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 37209  018638  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37210  01863A  592D               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 37211  01863C  A0D8               	btfss	status,0,c
 37212  01863E  D009               	goto	i1l13593
 37213                           
 37214                           ; BSR set to: 1
 37215  018640  8D34               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 37216                           
 37217                           ; BSR set to: 1
 37218  018642  5122               	movf	i1___fldiv@a& (0+255),w,b
 37219  018644  5F2A               	subwf	i1___fldiv@rem& (0+255),f,b
 37220  018646  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37221  018648  5B2B               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 37222  01864A  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37223  01864C  5B2C               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 37224  01864E  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37225  018650  5B2D               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 37226  018652                     i1l13593:
 37227                           
 37228                           ; BSR set to: 1
 37229  018652  2B36               	incf	i1___fldiv@aexp& (0+255),f,b
 37230  018654                     i1l3290:
 37231                           
 37232                           ; BSR set to: 1
 37233  018654  0E19               	movlw	25
 37234  018656  6536               	cpfsgt	i1___fldiv@aexp& (0+255),b
 37235  018658  D7D5               	goto	i1l13579
 37236                           
 37237                           ; BSR set to: 1
 37238  01865A  512A               	movf	i1___fldiv@rem& (0+255),w,b
 37239  01865C  112B               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 37240  01865E  112C               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 37241  018660  112D               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 37242  018662  B4D8               	btfsc	status,2,c
 37243  018664  D011               	goto	i1l13605
 37244                           
 37245                           ; BSR set to: 1
 37246  018666  8131               	bsf	i1___fldiv@grs& (0+255),0,b
 37247  018668  D00F               	goto	i1l13605
 37248  01866A                     i1l13599:
 37249                           
 37250                           ; BSR set to: 1
 37251  01866A  90D8               	bcf	status,0,c
 37252  01866C  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37253  01866E  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37254  018670  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37255  018672  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37256                           
 37257                           ; BSR set to: 1
 37258  018674  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37259                           
 37260                           ; BSR set to: 1
 37261  018676  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37262                           
 37263                           ; BSR set to: 1
 37264  018678  90D8               	bcf	status,0,c
 37265  01867A  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37266  01867C  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37267  01867E  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37268  018680  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37269  018682  072F               	decf	i1___fldiv@new_exp& (0+255),f,b
 37270  018684  A0D8               	btfss	status,0,c
 37271  018686  0730               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37272  018688                     i1l13605:
 37273                           
 37274                           ; BSR set to: 1
 37275  018688  AF20               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 37276  01868A  D7EF               	goto	i1l13599
 37277                           
 37278                           ; BSR set to: 1
 37279  01868C  0E00               	movlw	0
 37280  01868E  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37281                           
 37282                           ; BSR set to: 1
 37283  018690  AF34               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 37284  018692  D017               	goto	i1l3301
 37285                           
 37286                           ; BSR set to: 1
 37287  018694  0EFF               	movlw	255
 37288  018696  1531               	andwf	i1___fldiv@grs& (0+255),w,b
 37289  018698  6F26               	movwf	??i1___fldiv& (0+255),b
 37290  01869A  0EFF               	movlw	255
 37291  01869C  1532               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 37292  01869E  6F27               	movwf	(??i1___fldiv+1)& (0+255),b
 37293  0186A0  0EFF               	movlw	255
 37294  0186A2  1533               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 37295  0186A4  6F28               	movwf	(??i1___fldiv+2)& (0+255),b
 37296  0186A6  0E7F               	movlw	127
 37297  0186A8  1534               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 37298  0186AA  6F29               	movwf	(??i1___fldiv+3)& (0+255),b
 37299  0186AC  5126               	movf	??i1___fldiv& (0+255),w,b
 37300  0186AE  1127               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 37301  0186B0  1128               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 37302  0186B2  1129               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 37303  0186B4  B4D8               	btfsc	status,2,c
 37304  0186B6  D003               	goto	i1l3302
 37305  0186B8                     i1u1561_20:
 37306                           
 37307                           ; BSR set to: 1
 37308  0186B8  0E01               	movlw	1
 37309  0186BA  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37310  0186BC  D002               	goto	i1l3301
 37311  0186BE                     i1l3302:
 37312                           
 37313                           ; BSR set to: 1
 37314  0186BE  B11E               	btfsc	i1___fldiv@b& (0+255),0,b
 37315  0186C0  D7FB               	goto	i1u1561_20
 37316  0186C2                     i1l3301:
 37317                           
 37318                           ; BSR set to: 1
 37319  0186C2  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37320  0186C4  B4D8               	btfsc	status,2,c
 37321  0186C6  D01F               	goto	i1l13625
 37322                           
 37323                           ; BSR set to: 1
 37324  0186C8  0E01               	movlw	1
 37325  0186CA  271E               	addwf	i1___fldiv@b& (0+255),f,b
 37326  0186CC  0E00               	movlw	0
 37327  0186CE  231F               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 37328  0186D0  2320               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 37329  0186D2  2321               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 37330                           
 37331                           ; BSR set to: 1
 37332  0186D4  A121               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 37333  0186D6  D017               	goto	i1l13625
 37334                           
 37335                           ; BSR set to: 1
 37336  0186D8  C11E  F126         	movff	i1___fldiv@b,??i1___fldiv
 37337  0186DC  C11F  F127         	movff	i1___fldiv@b+1,??i1___fldiv+1
 37338  0186E0  C120  F128         	movff	i1___fldiv@b+2,??i1___fldiv+2
 37339  0186E4  C121  F129         	movff	i1___fldiv@b+3,??i1___fldiv+3
 37340  0186E8  3529               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 37341  0186EA  3329               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 37342  0186EC  3328               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 37343  0186EE  3327               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 37344  0186F0  3326               	rrcf	??i1___fldiv& (0+255),f,b
 37345  0186F2  C126  F11E         	movff	??i1___fldiv,i1___fldiv@b
 37346  0186F6  C127  F11F         	movff	??i1___fldiv+1,i1___fldiv@b+1
 37347  0186FA  C128  F120         	movff	??i1___fldiv+2,i1___fldiv@b+2
 37348  0186FE  C129  F121         	movff	??i1___fldiv+3,i1___fldiv@b+3
 37349                           
 37350                           ; BSR set to: 1
 37351  018702  4B2F               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 37352  018704  2B30               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37353  018706                     i1l13625:
 37354                           
 37355                           ; BSR set to: 1
 37356  018706  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37357  018708  D010               	goto	i1l13629
 37358  01870A  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37359  01870C  E103               	bnz	i1u1565_20
 37360  01870E  292F               	incf	i1___fldiv@new_exp& (0+255),w,b
 37361  018710  A0D8               	btfss	status,0,c
 37362  018712  D00B               	goto	i1l13629
 37363  018714                     i1u1565_20:
 37364                           
 37365                           ; BSR set to: 1
 37366  018714  0E00               	movlw	0
 37367  018716  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37368  018718  692F               	setf	i1___fldiv@new_exp& (0+255),b
 37369  01871A  0E00               	movlw	0
 37370  01871C  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37371  01871E  0E00               	movlw	0
 37372  018720  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37373  018722  0E00               	movlw	0
 37374  018724  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37375  018726  0E00               	movlw	0
 37376  018728  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37377  01872A                     i1l13629:
 37378                           
 37379                           ; BSR set to: 1
 37380  01872A  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37381  01872C  D005               	goto	i1u1566_20
 37382  01872E  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37383  018730  E111               	bnz	i1l13633
 37384  018732  052F               	decf	i1___fldiv@new_exp& (0+255),w,b
 37385  018734  B0D8               	btfsc	status,0,c
 37386  018736  D00E               	goto	i1l13633
 37387  018738                     i1u1566_20:
 37388                           
 37389                           ; BSR set to: 1
 37390  018738  0E00               	movlw	0
 37391  01873A  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37392  01873C  0E00               	movlw	0
 37393  01873E  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37394  018740  0E00               	movlw	0
 37395  018742  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37396  018744  0E00               	movlw	0
 37397  018746  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37398  018748  0E00               	movlw	0
 37399  01874A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37400  01874C  0E00               	movlw	0
 37401  01874E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37402  018750  0E00               	movlw	0
 37403  018752  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 37404  018754                     i1l13633:
 37405                           
 37406                           ; BSR set to: 1
 37407  018754  C12F  F135         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 37408                           
 37409                           ; BSR set to: 1
 37410  018758  A135               	btfss	i1___fldiv@bexp& (0+255),0,b
 37411  01875A  D002               	goto	i1l13639
 37412                           
 37413                           ; BSR set to: 1
 37414  01875C  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37415  01875E  D001               	goto	i1l13641
 37416  018760                     i1l13639:
 37417                           
 37418                           ; BSR set to: 1
 37419  018760  9F20               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 37420  018762                     i1l13641:
 37421                           
 37422                           ; BSR set to: 1
 37423  018762  90D8               	bcf	status,0,c
 37424  018764  3135               	rrcf	i1___fldiv@bexp& (0+255),w,b
 37425  018766  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37426  018768  D70E               	goto	i1l13555
 37427  01876A                     __end_ofi1___fldiv:
 37428                           	opt callstack 0
 37429                           
 37430 ;; *************** function i1___fladd *****************
 37431 ;; Defined at:
 37432 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 37433 ;; Parameters:    Size  Location     Type
 37434 ;;  b               4   14[BANK1 ] unsigned char 
 37435 ;;  a               4   18[BANK1 ] unsigned char 
 37436 ;; Auto vars:     Size  Location     Type
 37437 ;;  __fladd         1   29[BANK1 ] unsigned char 
 37438 ;;  __fladd         1   28[BANK1 ] unsigned char 
 37439 ;;  __fladd         1   27[BANK1 ] unsigned char 
 37440 ;;  __fladd         1   26[BANK1 ] unsigned char 
 37441 ;; Return value:  Size  Location     Type
 37442 ;;                  4   14[BANK1 ] unsigned char 
 37443 ;; Registers used:
 37444 ;;		wreg, status,2, status,0
 37445 ;; Tracked objects:
 37446 ;;		On entry : 0/0
 37447 ;;		On exit  : 0/0
 37448 ;;		Unchanged: 0/0
 37449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37450 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37451 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37452 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37453 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37454 ;;Total ram usage:       16 bytes
 37455 ;; Hardware stack levels used:    1
 37456 ;; Hardware stack levels required when called:    6
 37457 ;; This function calls:
 37458 ;;		Nothing
 37459 ;; This function is called by:
 37460 ;;		_freqMeasConvert
 37461 ;; This function uses a non-reentrant model
 37462 ;;
 37463                           
 37464                           	psect	text147
 37465  0173FC                     __ptext147:
 37466                           	opt callstack 0
 37467  0173FC                     i1___fladd:
 37468                           	opt callstack 12
 37469                           
 37470                           ; BSR set to: 1
 37471                           ;incstack = 0
 37472  0173FC  0101               	movlb	1	; () banked
 37473  0173FE  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37474  017400  0B80               	andlw	128
 37475  017402  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37476  017404  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37477  017406  2511               	addwf	(i1___fladd@b+3)& (0+255),w,b
 37478  017408  6F1C               	movwf	i1___fladd@bexp& (0+255),b
 37479                           
 37480                           ; BSR set to: 1
 37481  01740A  BF10               	btfsc	(i1___fladd@b+2)& (0+255),7,b
 37482                           
 37483                           ; BSR set to: 1
 37484  01740C  811C               	bsf	i1___fladd@bexp& (0+255),0,b
 37485                           
 37486                           ; BSR set to: 1
 37487  01740E  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37488  017410  B4D8               	btfsc	status,2,c
 37489  017412  D00D               	goto	i1l13319
 37490                           
 37491                           ; BSR set to: 1
 37492  017414  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37493  017416  A4D8               	btfss	status,2,c
 37494  017418  D008               	goto	i1l13315
 37495                           
 37496                           ; BSR set to: 1
 37497  01741A  0E00               	movlw	0
 37498  01741C  6F0E               	movwf	i1___fladd@b& (0+255),b
 37499  01741E  0E00               	movlw	0
 37500  017420  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37501  017422  0E00               	movlw	0
 37502  017424  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37503  017426  0E00               	movlw	0
 37504  017428  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37505  01742A                     i1l13315:
 37506                           
 37507                           ; BSR set to: 1
 37508  01742A  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37509  01742C  D006               	goto	L30
 37510  01742E                     i1l13319:
 37511                           
 37512                           ; BSR set to: 1
 37513  01742E  0E00               	movlw	0
 37514  017430  6F0E               	movwf	i1___fladd@b& (0+255),b
 37515  017432  0E00               	movlw	0
 37516  017434  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37517  017436  0E00               	movlw	0
 37518  017438  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37519  01743A                     L30:
 37520  01743A  0E00               	movlw	0
 37521  01743C  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37522                           
 37523                           ; BSR set to: 1
 37524  01743E  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37525  017440  0B80               	andlw	128
 37526  017442  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37527                           
 37528                           ; BSR set to: 1
 37529  017444  511A               	movf	i1___fladd@signs& (0+255),w,b
 37530  017446  191B               	xorwf	i1___fladd@aexp& (0+255),w,b
 37531  017448  A4D8               	btfss	status,2,c
 37532                           
 37533                           ; BSR set to: 1
 37534  01744A  8D1A               	bsf	i1___fladd@signs& (0+255),6,b
 37535                           
 37536                           ; BSR set to: 1
 37537  01744C  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37538  01744E  2515               	addwf	(i1___fladd@a+3)& (0+255),w,b
 37539  017450  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37540                           
 37541                           ; BSR set to: 1
 37542  017452  BF14               	btfsc	(i1___fladd@a+2)& (0+255),7,b
 37543                           
 37544                           ; BSR set to: 1
 37545  017454  811B               	bsf	i1___fladd@aexp& (0+255),0,b
 37546                           
 37547                           ; BSR set to: 1
 37548  017456  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37549  017458  B4D8               	btfsc	status,2,c
 37550  01745A  D00D               	goto	i1l13343
 37551                           
 37552                           ; BSR set to: 1
 37553  01745C  291B               	incf	i1___fladd@aexp& (0+255),w,b
 37554  01745E  A4D8               	btfss	status,2,c
 37555  017460  D008               	goto	i1l13339
 37556                           
 37557                           ; BSR set to: 1
 37558  017462  0E00               	movlw	0
 37559  017464  6F12               	movwf	i1___fladd@a& (0+255),b
 37560  017466  0E00               	movlw	0
 37561  017468  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37562  01746A  0E00               	movlw	0
 37563  01746C  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37564  01746E  0E00               	movlw	0
 37565  017470  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37566  017472                     i1l13339:
 37567                           
 37568                           ; BSR set to: 1
 37569  017472  8F14               	bsf	(i1___fladd@a+2)& (0+255),7,b
 37570  017474  D006               	goto	L31
 37571  017476                     i1l13343:
 37572                           
 37573                           ; BSR set to: 1
 37574  017476  0E00               	movlw	0
 37575  017478  6F12               	movwf	i1___fladd@a& (0+255),b
 37576  01747A  0E00               	movlw	0
 37577  01747C  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37578  01747E  0E00               	movlw	0
 37579  017480  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37580  017482                     L31:
 37581  017482  0E00               	movlw	0
 37582  017484  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37583                           
 37584                           ; BSR set to: 1
 37585  017486  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37586  017488  5D1B               	subwf	i1___fladd@aexp& (0+255),w,b
 37587  01748A  B0D8               	btfsc	status,0,c
 37588  01748C  D022               	goto	i1l13381
 37589                           
 37590                           ; BSR set to: 1
 37591  01748E  AD1A               	btfss	i1___fladd@signs& (0+255),6,b
 37592  017490  D002               	goto	i1l13351
 37593                           
 37594                           ; BSR set to: 1
 37595  017492  0E80               	movlw	128
 37596  017494  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37597  017496                     i1l13351:
 37598                           
 37599                           ; BSR set to: 1
 37600  017496  C11C  F11D         	movff	i1___fladd@bexp,i1___fladd@grs
 37601                           
 37602                           ; BSR set to: 1
 37603  01749A  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37604                           
 37605                           ; BSR set to: 1
 37606  01749E  C11D  F11B         	movff	i1___fladd@grs,i1___fladd@aexp
 37607                           
 37608                           ; BSR set to: 1
 37609  0174A2  C10E  F11D         	movff	i1___fladd@b,i1___fladd@grs
 37610                           
 37611                           ; BSR set to: 1
 37612  0174A6  C112  F10E         	movff	i1___fladd@a,i1___fladd@b
 37613                           
 37614                           ; BSR set to: 1
 37615  0174AA  C11D  F112         	movff	i1___fladd@grs,i1___fladd@a
 37616                           
 37617                           ; BSR set to: 1
 37618  0174AE  C10F  F11D         	movff	i1___fladd@b+1,i1___fladd@grs
 37619                           
 37620                           ; BSR set to: 1
 37621  0174B2  C113  F10F         	movff	i1___fladd@a+1,i1___fladd@b+1
 37622                           
 37623                           ; BSR set to: 1
 37624  0174B6  C11D  F113         	movff	i1___fladd@grs,i1___fladd@a+1
 37625                           
 37626                           ; BSR set to: 1
 37627  0174BA  C110  F11D         	movff	i1___fladd@b+2,i1___fladd@grs
 37628                           
 37629                           ; BSR set to: 1
 37630  0174BE  C114  F110         	movff	i1___fladd@a+2,i1___fladd@b+2
 37631                           
 37632                           ; BSR set to: 1
 37633  0174C2  C11D  F114         	movff	i1___fladd@grs,i1___fladd@a+2
 37634                           
 37635                           ; BSR set to: 1
 37636  0174C6  C111  F11D         	movff	i1___fladd@b+3,i1___fladd@grs
 37637                           
 37638                           ; BSR set to: 1
 37639  0174CA  C115  F111         	movff	i1___fladd@a+3,i1___fladd@b+3
 37640                           
 37641                           ; BSR set to: 1
 37642  0174CE  C11D  F115         	movff	i1___fladd@grs,i1___fladd@a+3
 37643  0174D2                     i1l13381:
 37644                           
 37645                           ; BSR set to: 1
 37646  0174D2  0E00               	movlw	0
 37647  0174D4  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37648                           
 37649                           ; BSR set to: 1
 37650  0174D6  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37651  0174D8  C11B  F116         	movff	i1___fladd@aexp,??i1___fladd
 37652  0174DC  6B17               	clrf	(??i1___fladd+1)& (0+255),b
 37653  0174DE  5F16               	subwf	??i1___fladd& (0+255),f,b
 37654  0174E0  0E00               	movlw	0
 37655  0174E2  5B17               	subwfb	(??i1___fladd+1)& (0+255),f,b
 37656  0174E4  BF17               	btfsc	(??i1___fladd+1)& (0+255),7,b
 37657  0174E6  D02C               	goto	i1l3235
 37658  0174E8  5117               	movf	(??i1___fladd+1)& (0+255),w,b
 37659  0174EA  E104               	bnz	i1u1515_20
 37660  0174EC  0E1A               	movlw	26
 37661  0174EE  5D16               	subwf	??i1___fladd& (0+255),w,b
 37662  0174F0  A0D8               	btfss	status,0,c
 37663  0174F2  D026               	goto	i1l3235
 37664  0174F4                     i1u1515_20:
 37665                           
 37666                           ; BSR set to: 1
 37667  0174F4  510E               	movf	i1___fladd@b& (0+255),w,b
 37668  0174F6  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37669  0174F8  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37670  0174FA  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37671  0174FC  B4D8               	btfsc	status,2,c
 37672  0174FE  D002               	goto	i1u1516_20
 37673  017500  0E01               	movlw	1
 37674  017502  D001               	goto	i1u1517_20
 37675  017504                     i1u1516_20:
 37676  017504  0E00               	movlw	0
 37677  017506                     i1u1517_20:
 37678  017506  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37679                           
 37680                           ; BSR set to: 1
 37681  017508  0E00               	movlw	0
 37682  01750A  6F0E               	movwf	i1___fladd@b& (0+255),b
 37683  01750C  0E00               	movlw	0
 37684  01750E  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37685  017510  0E00               	movlw	0
 37686  017512  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37687  017514  0E00               	movlw	0
 37688  017516  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37689                           
 37690                           ; BSR set to: 1
 37691  017518  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37692  01751C  D015               	goto	i1u1520_20
 37693  01751E                     i1l3236:
 37694                           
 37695                           ; BSR set to: 1
 37696  01751E  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37697  017520  D005               	goto	i1l13393
 37698                           
 37699                           ; BSR set to: 1
 37700  017522  90D8               	bcf	status,0,c
 37701  017524  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37702  017526  0901               	iorlw	1
 37703  017528  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37704  01752A  D002               	goto	i1l13395
 37705  01752C                     i1l13393:
 37706                           
 37707                           ; BSR set to: 1
 37708  01752C  90D8               	bcf	status,0,c
 37709  01752E  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37710  017530                     i1l13395:
 37711                           
 37712                           ; BSR set to: 1
 37713  017530  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37714                           
 37715                           ; BSR set to: 1
 37716  017532  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37717                           
 37718                           ; BSR set to: 1
 37719  017534  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37720  017536  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37721  017538  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37722  01753A  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37723  01753C  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37724                           
 37725                           ; BSR set to: 1
 37726  01753E  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37727  017540                     i1l3235:
 37728                           
 37729                           ; BSR set to: 1
 37730  017540  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37731  017542  5D1C               	subwf	i1___fladd@bexp& (0+255),w,b
 37732  017544  A0D8               	btfss	status,0,c
 37733  017546  D7EB               	goto	i1l3236
 37734  017548                     i1u1520_20:
 37735                           
 37736                           ; BSR set to: 1
 37737  017548  BD1A               	btfsc	i1___fladd@signs& (0+255),6,b
 37738  01754A  D028               	goto	i1l13427
 37739                           
 37740                           ; BSR set to: 1
 37741  01754C  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37742  01754E  A4D8               	btfss	status,2,c
 37743  017550  D009               	goto	i1l13409
 37744                           
 37745                           ; BSR set to: 1
 37746  017552  0E00               	movlw	0
 37747  017554  6F0E               	movwf	?i1___fladd& (0+255),b
 37748  017556  0E00               	movlw	0
 37749  017558  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37750  01755A  0E00               	movlw	0
 37751  01755C  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37752  01755E  0E00               	movlw	0
 37753  017560  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37754  017562  0012               	return	
 37755  017564                     i1l13409:
 37756                           
 37757                           ; BSR set to: 1
 37758  017564  5112               	movf	i1___fladd@a& (0+255),w,b
 37759  017566  270E               	addwf	i1___fladd@b& (0+255),f,b
 37760  017568  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37761  01756A  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37762  01756C  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37763  01756E  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37764  017570  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37765  017572  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37766                           
 37767                           ; BSR set to: 1
 37768  017574  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37769  017576  D071               	goto	i1u1533_20
 37770                           
 37771                           ; BSR set to: 1
 37772  017578  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37773  01757A  D005               	goto	i1l13417
 37774                           
 37775                           ; BSR set to: 1
 37776  01757C  90D8               	bcf	status,0,c
 37777  01757E  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37778  017580  0901               	iorlw	1
 37779  017582  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37780  017584  D002               	goto	i1l13419
 37781  017586                     i1l13417:
 37782                           
 37783                           ; BSR set to: 1
 37784  017586  90D8               	bcf	status,0,c
 37785  017588  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37786  01758A                     i1l13419:
 37787                           
 37788                           ; BSR set to: 1
 37789  01758A  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37790                           
 37791                           ; BSR set to: 1
 37792  01758C  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37793                           
 37794                           ; BSR set to: 1
 37795  01758E  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37796  017590  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37797  017592  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37798  017594  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37799  017596  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37800                           
 37801                           ; BSR set to: 1
 37802  017598  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37803  01759A  D05F               	goto	i1u1533_20
 37804  01759C                     i1l13427:
 37805                           
 37806                           ; BSR set to: 1
 37807  01759C  5112               	movf	i1___fladd@a& (0+255),w,b
 37808  01759E  5D0E               	subwf	i1___fladd@b& (0+255),w,b
 37809  0175A0  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37810  0175A2  590F               	subwfb	(i1___fladd@b+1)& (0+255),w,b
 37811  0175A4  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37812  0175A6  5910               	subwfb	(i1___fladd@b+2)& (0+255),w,b
 37813  0175A8  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37814  0175AA  0A80               	xorlw	128
 37815  0175AC  6F16               	movwf	??i1___fladd& (0+255),b
 37816  0175AE  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37817  0175B0  0A80               	xorlw	128
 37818  0175B2  5916               	subwfb	??i1___fladd& (0+255),w,b
 37819  0175B4  B0D8               	btfsc	status,0,c
 37820  0175B6  D025               	goto	i1l13437
 37821                           
 37822                           ; BSR set to: 1
 37823  0175B8  510E               	movf	i1___fladd@b& (0+255),w,b
 37824  0175BA  5D12               	subwf	i1___fladd@a& (0+255),w,b
 37825  0175BC  6F16               	movwf	??i1___fladd& (0+255),b
 37826  0175BE  510F               	movf	(i1___fladd@b+1)& (0+255),w,b
 37827  0175C0  5913               	subwfb	(i1___fladd@a+1)& (0+255),w,b
 37828  0175C2  6F17               	movwf	(??i1___fladd+1)& (0+255),b
 37829  0175C4  5110               	movf	(i1___fladd@b+2)& (0+255),w,b
 37830  0175C6  5914               	subwfb	(i1___fladd@a+2)& (0+255),w,b
 37831  0175C8  6F18               	movwf	(??i1___fladd+2)& (0+255),b
 37832  0175CA  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37833  0175CC  5915               	subwfb	(i1___fladd@a+3)& (0+255),w,b
 37834  0175CE  6F19               	movwf	(??i1___fladd+3)& (0+255),b
 37835  0175D0  0EFF               	movlw	255
 37836  0175D2  2516               	addwf	??i1___fladd& (0+255),w,b
 37837  0175D4  6F0E               	movwf	i1___fladd@b& (0+255),b
 37838  0175D6  0EFF               	movlw	255
 37839  0175D8  2117               	addwfc	(??i1___fladd+1)& (0+255),w,b
 37840  0175DA  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37841  0175DC  0EFF               	movlw	255
 37842  0175DE  2118               	addwfc	(??i1___fladd+2)& (0+255),w,b
 37843  0175E0  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37844  0175E2  0EFF               	movlw	255
 37845  0175E4  2119               	addwfc	(??i1___fladd+3)& (0+255),w,b
 37846  0175E6  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37847  0175E8  0E80               	movlw	128
 37848  0175EA  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37849                           
 37850                           ; BSR set to: 1
 37851  0175EC  6D1D               	negf	i1___fladd@grs& (0+255),b
 37852                           
 37853                           ; BSR set to: 1
 37854  0175EE  511D               	movf	i1___fladd@grs& (0+255),w,b
 37855  0175F0  A4D8               	btfss	status,2,c
 37856  0175F2  D00F               	goto	i1l3251
 37857                           
 37858                           ; BSR set to: 1
 37859  0175F4  0E01               	movlw	1
 37860  0175F6  270E               	addwf	i1___fladd@b& (0+255),f,b
 37861  0175F8  0E00               	movlw	0
 37862  0175FA  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37863  0175FC  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37864  0175FE  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37865  017600  D008               	goto	i1l3251
 37866  017602                     i1l13437:
 37867                           
 37868                           ; BSR set to: 1
 37869  017602  5112               	movf	i1___fladd@a& (0+255),w,b
 37870  017604  5F0E               	subwf	i1___fladd@b& (0+255),f,b
 37871  017606  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37872  017608  5B0F               	subwfb	(i1___fladd@b+1)& (0+255),f,b
 37873  01760A  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37874  01760C  5B10               	subwfb	(i1___fladd@b+2)& (0+255),f,b
 37875  01760E  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37876  017610  5B11               	subwfb	(i1___fladd@b+3)& (0+255),f,b
 37877  017612                     i1l3251:
 37878                           
 37879                           ; BSR set to: 1
 37880  017612  510E               	movf	i1___fladd@b& (0+255),w,b
 37881  017614  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37882  017616  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37883  017618  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37884  01761A  A4D8               	btfss	status,2,c
 37885  01761C  D01C               	goto	i1l13461
 37886                           
 37887                           ; BSR set to: 1
 37888  01761E  511D               	movf	i1___fladd@grs& (0+255),w,b
 37889  017620  A4D8               	btfss	status,2,c
 37890  017622  D019               	goto	i1l13461
 37891                           
 37892                           ; BSR set to: 1
 37893  017624  0E00               	movlw	0
 37894  017626  6F0E               	movwf	?i1___fladd& (0+255),b
 37895  017628  0E00               	movlw	0
 37896  01762A  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37897  01762C  0E00               	movlw	0
 37898  01762E  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37899  017630  0E00               	movlw	0
 37900  017632  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37901  017634  0012               	return	
 37902  017636                     i1l13445:
 37903                           
 37904                           ; BSR set to: 1
 37905  017636  90D8               	bcf	status,0,c
 37906  017638  370E               	rlcf	i1___fladd@b& (0+255),f,b
 37907  01763A  370F               	rlcf	(i1___fladd@b+1)& (0+255),f,b
 37908  01763C  3710               	rlcf	(i1___fladd@b+2)& (0+255),f,b
 37909  01763E  3711               	rlcf	(i1___fladd@b+3)& (0+255),f,b
 37910                           
 37911                           ; BSR set to: 1
 37912  017640  BF1D               	btfsc	i1___fladd@grs& (0+255),7,b
 37913                           
 37914                           ; BSR set to: 1
 37915  017642  810E               	bsf	i1___fladd@b& (0+255),0,b
 37916                           
 37917                           ; BSR set to: 1
 37918  017644  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37919  017646  D002               	goto	i1l13455
 37920                           
 37921                           ; BSR set to: 1
 37922  017648  80D8               	bsf	status,0,c
 37923  01764A  D001               	goto	L32
 37924  01764C                     i1l13455:
 37925                           
 37926                           ; BSR set to: 1
 37927  01764C  90D8               	bcf	status,0,c
 37928  01764E                     L32:
 37929  01764E  371D               	rlcf	i1___fladd@grs& (0+255),f,b
 37930                           
 37931                           ; BSR set to: 1
 37932  017650  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37933  017652  A4D8               	btfss	status,2,c
 37934                           
 37935                           ; BSR set to: 1
 37936  017654  071C               	decf	i1___fladd@bexp& (0+255),f,b
 37937  017656                     i1l13461:
 37938                           
 37939                           ; BSR set to: 1
 37940  017656  AF10               	btfss	(i1___fladd@b+2)& (0+255),7,b
 37941  017658  D7EE               	goto	i1l13445
 37942  01765A                     i1u1533_20:
 37943                           
 37944                           ; BSR set to: 1
 37945  01765A  0E00               	movlw	0
 37946  01765C  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37947                           
 37948                           ; BSR set to: 1
 37949  01765E  AF1D               	btfss	i1___fladd@grs& (0+255),7,b
 37950  017660  D00B               	goto	i1l3260
 37951                           
 37952                           ; BSR set to: 1
 37953  017662  C11D  F116         	movff	i1___fladd@grs,??i1___fladd
 37954  017666  0E7F               	movlw	127
 37955  017668  1716               	andwf	??i1___fladd& (0+255),f,b
 37956  01766A  B4D8               	btfsc	status,2,c
 37957  01766C  D003               	goto	i1l3261
 37958  01766E                     i1u1535_20:
 37959                           
 37960                           ; BSR set to: 1
 37961  01766E  0E01               	movlw	1
 37962  017670  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37963  017672  D002               	goto	i1l3260
 37964  017674                     i1l3261:
 37965                           
 37966                           ; BSR set to: 1
 37967  017674  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37968  017676  D7FB               	goto	i1u1535_20
 37969  017678                     i1l3260:
 37970                           
 37971                           ; BSR set to: 1
 37972  017678  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37973  01767A  B4D8               	btfsc	status,2,c
 37974  01767C  D020               	goto	i1l13481
 37975                           
 37976                           ; BSR set to: 1
 37977  01767E  0E01               	movlw	1
 37978  017680  270E               	addwf	i1___fladd@b& (0+255),f,b
 37979  017682  0E00               	movlw	0
 37980  017684  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37981  017686  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37982  017688  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37983                           
 37984                           ; BSR set to: 1
 37985  01768A  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37986  01768C  D018               	goto	i1l13481
 37987                           
 37988                           ; BSR set to: 1
 37989  01768E  C10E  F116         	movff	i1___fladd@b,??i1___fladd
 37990  017692  C10F  F117         	movff	i1___fladd@b+1,??i1___fladd+1
 37991  017696  C110  F118         	movff	i1___fladd@b+2,??i1___fladd+2
 37992  01769A  C111  F119         	movff	i1___fladd@b+3,??i1___fladd+3
 37993  01769E  3519               	rlcf	(??i1___fladd+3)& (0+255),w,b
 37994  0176A0  3319               	rrcf	(??i1___fladd+3)& (0+255),f,b
 37995  0176A2  3318               	rrcf	(??i1___fladd+2)& (0+255),f,b
 37996  0176A4  3317               	rrcf	(??i1___fladd+1)& (0+255),f,b
 37997  0176A6  3316               	rrcf	??i1___fladd& (0+255),f,b
 37998  0176A8  C116  F10E         	movff	??i1___fladd,i1___fladd@b
 37999  0176AC  C117  F10F         	movff	??i1___fladd+1,i1___fladd@b+1
 38000  0176B0  C118  F110         	movff	??i1___fladd+2,i1___fladd@b+2
 38001  0176B4  C119  F111         	movff	??i1___fladd+3,i1___fladd@b+3
 38002  0176B8  291C               	incf	i1___fladd@bexp& (0+255),w,b
 38003  0176BA  A4D8               	btfss	status,2,c
 38004                           
 38005                           ; BSR set to: 1
 38006  0176BC  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 38007  0176BE                     i1l13481:
 38008                           
 38009                           ; BSR set to: 1
 38010  0176BE  291C               	incf	i1___fladd@bexp& (0+255),w,b
 38011  0176C0  B4D8               	btfsc	status,2,c
 38012  0176C2  D003               	goto	i1u1541_20
 38013                           
 38014                           ; BSR set to: 1
 38015  0176C4  511C               	movf	i1___fladd@bexp& (0+255),w,b
 38016  0176C6  A4D8               	btfss	status,2,c
 38017  0176C8  D00D               	goto	i1l13489
 38018  0176CA                     i1u1541_20:
 38019                           
 38020                           ; BSR set to: 1
 38021  0176CA  0E00               	movlw	0
 38022  0176CC  6F0E               	movwf	i1___fladd@b& (0+255),b
 38023  0176CE  0E00               	movlw	0
 38024  0176D0  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 38025  0176D2  0E00               	movlw	0
 38026  0176D4  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 38027  0176D6  0E00               	movlw	0
 38028  0176D8  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 38029  0176DA  511C               	movf	i1___fladd@bexp& (0+255),w,b
 38030  0176DC  A4D8               	btfss	status,2,c
 38031  0176DE  D002               	goto	i1l13489
 38032                           
 38033                           ; BSR set to: 1
 38034  0176E0  0E00               	movlw	0
 38035  0176E2  6F1A               	movwf	i1___fladd@signs& (0+255),b
 38036  0176E4                     i1l13489:
 38037                           
 38038                           ; BSR set to: 1
 38039  0176E4  A11C               	btfss	i1___fladd@bexp& (0+255),0,b
 38040  0176E6  D002               	goto	i1l13493
 38041                           
 38042                           ; BSR set to: 1
 38043  0176E8  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 38044  0176EA  D001               	goto	i1l13495
 38045  0176EC                     i1l13493:
 38046                           
 38047                           ; BSR set to: 1
 38048  0176EC  9F10               	bcf	(i1___fladd@b+2)& (0+255),7,b
 38049  0176EE                     i1l13495:
 38050                           
 38051                           ; BSR set to: 1
 38052  0176EE  90D8               	bcf	status,0,c
 38053  0176F0  311C               	rrcf	i1___fladd@bexp& (0+255),w,b
 38054  0176F2  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 38055                           
 38056                           ; BSR set to: 1
 38057  0176F4  BF1A               	btfsc	i1___fladd@signs& (0+255),7,b
 38058                           
 38059                           ; BSR set to: 1
 38060  0176F6  8F11               	bsf	(i1___fladd@b+3)& (0+255),7,b
 38061                           
 38062                           ; BSR set to: 1
 38063  0176F8  C10E  F10E         	movff	i1___fladd@b,?i1___fladd
 38064  0176FC  C10F  F10F         	movff	i1___fladd@b+1,?i1___fladd+1
 38065  017700  C110  F110         	movff	i1___fladd@b+2,?i1___fladd+2
 38066  017704  C111  F111         	movff	i1___fladd@b+3,?i1___fladd+3
 38067                           
 38068                           ; BSR set to: 1
 38069  017708  0012               	return		;funcret
 38070  01770A                     __end_ofi1___fladd:
 38071                           	opt callstack 0
 38072                           
 38073 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 38074 ;; Defined at:
 38075 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 38076 ;; Parameters:    Size  Location     Type
 38077 ;;		None
 38078 ;; Auto vars:     Size  Location     Type
 38079 ;;		None
 38080 ;; Return value:  Size  Location     Type
 38081 ;;                  1    wreg      void 
 38082 ;; Registers used:
 38083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38084 ;; Tracked objects:
 38085 ;;		On entry : 0/0
 38086 ;;		On exit  : 0/0
 38087 ;;		Unchanged: 0/0
 38088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38091 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38092 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38093 ;;Total ram usage:       12 bytes
 38094 ;; Hardware stack levels used:    1
 38095 ;; Hardware stack levels required when called:    5
 38096 ;; This function calls:
 38097 ;;		Absolute function
 38098 ;;		_ADCC_ThresholdISR
 38099 ;;		_EUSART2_Receive_ISR
 38100 ;;		_EUSART2_Transmit_ISR
 38101 ;;		_INT1_ISR
 38102 ;;		_INT2_ISR
 38103 ;;		_PIN_MANAGER_IOC
 38104 ;;		_TMR0_ISR
 38105 ;;		_TMR1_ISR
 38106 ;; This function is called by:
 38107 ;;		Interrupt level 2
 38108 ;; This function uses a non-reentrant model
 38109 ;;
 38110                           
 38111                           	psect	intcode
 38112  000008                     __pintcode:
 38113                           	opt callstack 0
 38114  000008                     _INTERRUPT_InterruptManagerHigh:
 38115                           	opt callstack 12
 38116                           
 38117                           ; BSR set to: 1
 38118                           ;incstack = 0
 38119  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38120  00000A  EF11  F0D2         	goto	int_func
 38121                           
 38122                           	psect	intcode_body
 38123  01A422                     __pintcode_body:
 38124                           	opt callstack 12
 38125  01A422                     int_func:
 38126                           	opt callstack 12
 38127  01A422  CFFA F0AD          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 38128  01A426  CFFB F0AE          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 38129  01A42A  CFE9 F0AF          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 38130  01A42E  CFEA F0B0          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 38131  01A432  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
 38132  01A436  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
 38133  01A43A  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+6
 38134  01A43E  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+7
 38135  01A442  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+8
 38136  01A446  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+9
 38137  01A44A  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+10
 38138  01A44E  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+11
 38139                           
 38140                           ;interrupt_manager.c: 104: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 38141  01A452  010E               	movlb	14	; () banked
 38142  01A454  B1C6               	btfsc	198,0,b	;volatile
 38143                           
 38144                           ; BSR set to: 14
 38145  01A456  A1CE               	btfss	206,0,b	;volatile
 38146  01A458  D003               	goto	i2l224
 38147                           
 38148                           ; BSR set to: 14
 38149                           ;interrupt_manager.c: 105: {;interrupt_manager.c: 106: TMR1_ISR();
 38150  01A45A  EC33  F0E0         	call	_TMR1_ISR	;wreg free
 38151                           
 38152                           ;interrupt_manager.c: 107: }
 38153  01A45E  D03B               	goto	i2l235
 38154  01A460                     i2l224:
 38155                           
 38156                           ; BSR set to: 14
 38157                           ;interrupt_manager.c: 108: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 38158  01A460  B5C2               	btfsc	194,2,b	;volatile
 38159                           
 38160                           ; BSR set to: 14
 38161  01A462  A5CA               	btfss	202,2,b	;volatile
 38162  01A464  D003               	goto	i2l226
 38163                           
 38164                           ; BSR set to: 14
 38165                           ;interrupt_manager.c: 109: {;interrupt_manager.c: 110: INT2_ISR();
 38166  01A466  EC46  F0E4         	call	_INT2_ISR	;wreg free
 38167                           
 38168                           ;interrupt_manager.c: 111: }
 38169  01A46A  D035               	goto	i2l235
 38170  01A46C                     i2l226:
 38171                           
 38172                           ; BSR set to: 14
 38173                           ;interrupt_manager.c: 112: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 38174  01A46C  BBC2               	btfsc	194,5,b	;volatile
 38175                           
 38176                           ; BSR set to: 14
 38177  01A46E  ABCA               	btfss	202,5,b	;volatile
 38178  01A470  D003               	goto	i2l228
 38179                           
 38180                           ; BSR set to: 14
 38181                           ;interrupt_manager.c: 113: {;interrupt_manager.c: 114: TMR0_ISR();
 38182  01A472  EC84  F0E1         	call	_TMR0_ISR	;wreg free
 38183                           
 38184                           ;interrupt_manager.c: 115: }
 38185  01A476  D02F               	goto	i2l235
 38186  01A478                     i2l228:
 38187                           
 38188                           ; BSR set to: 14
 38189                           ;interrupt_manager.c: 116: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38190  01A478  BFC5               	btfsc	197,7,b	;volatile
 38191                           
 38192                           ; BSR set to: 14
 38193  01A47A  AFCD               	btfss	205,7,b	;volatile
 38194  01A47C  D00B               	goto	i2l230
 38195                           
 38196                           ; BSR set to: 14
 38197                           ;interrupt_manager.c: 117: {;interrupt_manager.c: 118: EUSART2_RxDefaultInterruptHandler
      +                          ();
 38198  01A47E  D801               	call	i2u2883_48
 38199  01A480  D02A               	goto	i2l235
 38200  01A482                     i2u2883_48:
 38201  01A482  0005               	push	
 38202  01A484  6EFA               	movwf	pclath,c
 38203  01A486  0101               	movlb	1	; () banked
 38204  01A488  517D               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38205  01A48A  6EFD               	movwf	tosl,c
 38206  01A48C  517E               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38207  01A48E  6EFE               	movwf	tosh,c
 38208  01A490  517F               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38209  01A492  D019               	goto	L33
 38210  01A494                     i2l230:
 38211                           
 38212                           ; BSR set to: 14
 38213                           ;interrupt_manager.c: 120: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38214  01A494  B3C3               	btfsc	195,1,b	;volatile
 38215                           
 38216                           ; BSR set to: 14
 38217  01A496  A3CB               	btfss	203,1,b	;volatile
 38218  01A498  D003               	goto	i2l232
 38219                           
 38220                           ; BSR set to: 14
 38221                           ;interrupt_manager.c: 121: {;interrupt_manager.c: 122: ADCC_ThresholdISR();
 38222  01A49A  EC98  F0E1         	call	_ADCC_ThresholdISR	;wreg free
 38223                           
 38224                           ;interrupt_manager.c: 123: }
 38225  01A49E  D01B               	goto	i2l235
 38226  01A4A0                     i2l232:
 38227                           
 38228                           ; BSR set to: 14
 38229                           ;interrupt_manager.c: 124: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 38230  01A4A0  B9C2               	btfsc	194,4,b	;volatile
 38231                           
 38232                           ; BSR set to: 14
 38233  01A4A2  A9CA               	btfss	202,4,b	;volatile
 38234  01A4A4  D003               	goto	i2l234
 38235                           
 38236                           ; BSR set to: 14
 38237                           ;interrupt_manager.c: 125: {;interrupt_manager.c: 126: PIN_MANAGER_IOC();
 38238  01A4A6  EC53  F0E3         	call	_PIN_MANAGER_IOC	;wreg free
 38239                           
 38240                           ;interrupt_manager.c: 127: }
 38241  01A4AA  D015               	goto	i2l235
 38242  01A4AC                     i2l234:
 38243                           
 38244                           ; BSR set to: 14
 38245                           ;interrupt_manager.c: 128: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 38246  01A4AC  BDC5               	btfsc	197,6,b	;volatile
 38247                           
 38248                           ; BSR set to: 14
 38249  01A4AE  ADCD               	btfss	205,6,b	;volatile
 38250  01A4B0  D00D               	goto	i2l236
 38251                           
 38252                           ; BSR set to: 14
 38253                           ;interrupt_manager.c: 129: {;interrupt_manager.c: 130: EUSART2_TxDefaultInterruptHandler
      +                          ();
 38254  01A4B2  D801               	call	i2u2890_48
 38255  01A4B4  D010               	goto	i2l235
 38256  01A4B6                     i2u2890_48:
 38257  01A4B6  0005               	push	
 38258  01A4B8  6EFA               	movwf	pclath,c
 38259  01A4BA  0101               	movlb	1	; () banked
 38260  01A4BC  5180               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 38261  01A4BE  6EFD               	movwf	tosl,c
 38262  01A4C0  5181               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 38263  01A4C2  6EFE               	movwf	tosh,c
 38264  01A4C4  5182               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 38265  01A4C6                     L33:
 38266  01A4C6  6EFF               	movwf	tosu,c
 38267  01A4C8  50FA               	movf	pclath,w,c
 38268  01A4CA  0012               	return		;indir
 38269  01A4CC                     i2l236:
 38270                           
 38271                           ; BSR set to: 14
 38272                           ;interrupt_manager.c: 132: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 38273  01A4CC  B3C2               	btfsc	194,1,b	;volatile
 38274                           
 38275                           ; BSR set to: 14
 38276  01A4CE  A3CA               	btfss	202,1,b	;volatile
 38277  01A4D0  D002               	goto	i2l235
 38278                           
 38279                           ; BSR set to: 14
 38280                           ;interrupt_manager.c: 133: {;interrupt_manager.c: 134: INT1_ISR();
 38281  01A4D2  EC4B  F0E4         	call	_INT1_ISR	;wreg free
 38282  01A4D6                     i2l235:
 38283                           
 38284                           ; BSR set to: 14
 38285  01A4D6  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+11,tablat
 38286  01A4DA  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptru
 38287  01A4DE  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+9,tblptrh
 38288  01A4E2  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptrl
 38289  01A4E6  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+7,prodh
 38290  01A4EA  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+6,prodl
 38291  01A4EE  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
 38292  01A4F2  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
 38293  01A4F6  C0B0  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38294  01A4FA  C0AF  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38295  01A4FE  C0AE  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38296  01A502  C0AD  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38297  01A506  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38298  01A508  0011               	retfie		f
 38299  01A50A                     __end_of_INTERRUPT_InterruptManagerHigh:
 38300                           	opt callstack 0
 38301                           
 38302 ;; *************** function _TMR1_ISR *****************
 38303 ;; Defined at:
 38304 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 38305 ;; Parameters:    Size  Location     Type
 38306 ;;		None
 38307 ;; Auto vars:     Size  Location     Type
 38308 ;;		None
 38309 ;; Return value:  Size  Location     Type
 38310 ;;                  1    wreg      void 
 38311 ;; Registers used:
 38312 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38313 ;; Tracked objects:
 38314 ;;		On entry : 0/0
 38315 ;;		On exit  : 0/0
 38316 ;;		Unchanged: 0/0
 38317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38322 ;;Total ram usage:        0 bytes
 38323 ;; Hardware stack levels used:    1
 38324 ;; Hardware stack levels required when called:    3
 38325 ;; This function calls:
 38326 ;;		Absolute function
 38327 ;;		_QIErrorTimerHandler
 38328 ;;		_TMR1_DefaultInterruptHandler
 38329 ;;		i2_TMR1_WriteTimer
 38330 ;; This function is called by:
 38331 ;;		_INTERRUPT_InterruptManagerHigh
 38332 ;; This function uses a non-reentrant model
 38333 ;;
 38334                           
 38335                           	psect	text149
 38336  01C066                     __ptext149:
 38337                           	opt callstack 0
 38338  01C066                     _TMR1_ISR:
 38339                           	opt callstack 13
 38340                           
 38341                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 38342                           
 38343                           ;incstack = 0
 38344  01C066  010E               	movlb	14	; () banked
 38345  01C068  91CE               	bcf	206,0,b	;volatile
 38346                           
 38347                           ; BSR set to: 14
 38348                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 38349  01C06A  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38350  01C06E  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38351  01C072  ECC1  F0E2         	call	i2_TMR1_WriteTimer	;wreg free
 38352                           
 38353                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 38354  01C076  0101               	movlb	1	; () banked
 38355  01C078  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38356  01C07A  116F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38357  01C07C  1170               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38358  01C07E  B4D8               	btfsc	status,2,c
 38359  01C080  0012               	return	
 38360                           
 38361                           ; BSR set to: 1
 38362                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 38363  01C082  D801               	call	i2u1873_48
 38364  01C084  0012               	return	
 38365  01C086                     i2u1873_48:
 38366  01C086  0005               	push	
 38367  01C088  6EFA               	movwf	pclath,c
 38368  01C08A  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38369  01C08C  6EFD               	movwf	tosl,c
 38370  01C08E  516F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38371  01C090  6EFE               	movwf	tosh,c
 38372  01C092  5170               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38373  01C094  6EFF               	movwf	tosu,c
 38374  01C096  50FA               	movf	pclath,w,c
 38375  01C098  0012               	return		;indir
 38376  01C09A                     __end_of_TMR1_ISR:
 38377                           	opt callstack 0
 38378                           
 38379 ;; *************** function _QIErrorTimerHandler *****************
 38380 ;; Defined at:
 38381 ;;		line 118 in file "NXQ_charge_state.c"
 38382 ;; Parameters:    Size  Location     Type
 38383 ;;		None
 38384 ;; Auto vars:     Size  Location     Type
 38385 ;;		None
 38386 ;; Return value:  Size  Location     Type
 38387 ;;                  1    wreg      void 
 38388 ;; Registers used:
 38389 ;;		wreg, status,2, cstack
 38390 ;; Tracked objects:
 38391 ;;		On entry : 0/0
 38392 ;;		On exit  : 0/0
 38393 ;;		Unchanged: 0/0
 38394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38399 ;;Total ram usage:        0 bytes
 38400 ;; Hardware stack levels used:    1
 38401 ;; Hardware stack levels required when called:    2
 38402 ;; This function calls:
 38403 ;;		i2_TMR1_Reload
 38404 ;;		i2_TMR1_StopTimer
 38405 ;; This function is called by:
 38406 ;;		_main
 38407 ;;		_TMR1_ISR
 38408 ;; This function uses a non-reentrant model
 38409 ;;
 38410                           
 38411                           	psect	text150
 38412  01C650                     __ptext150:
 38413                           	opt callstack 0
 38414  01C650                     _QIErrorTimerHandler:
 38415                           	opt callstack 13
 38416                           
 38417                           ;NXQ_charge_state.c: 120: if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0) {
 38418                           
 38419                           ;incstack = 0
 38420  01C650  B48E               	btfsc	3982,2,c	;volatile
 38421  01C652  B68E               	btfsc	3982,3,c	;volatile
 38422  01C654  D003               	goto	i2l15289
 38423                           
 38424                           ;NXQ_charge_state.c: 122: nxq_charge_state = QI_Error;
 38425  01C656  0E03               	movlw	3
 38426  01C658  0101               	movlb	1	; () banked
 38427  01C65A  6F95               	movwf	_nxq_charge_state& (0+255),b
 38428  01C65C                     i2l15289:
 38429                           
 38430                           ;NXQ_charge_state.c: 124: };NXQ_charge_state.c: 126: TMR1_StopTimer();
 38431  01C65C  EC6F  F0E4         	call	i2_TMR1_StopTimer	;wreg free
 38432                           
 38433                           ;NXQ_charge_state.c: 127: TMR1_Reload();
 38434  01C660  EC16  F0E4         	call	i2_TMR1_Reload	;wreg free
 38435  01C664  0012               	return		;funcret
 38436  01C666                     __end_of_QIErrorTimerHandler:
 38437                           	opt callstack 0
 38438                           
 38439 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38440 ;; Defined at:
 38441 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 38442 ;; Parameters:    Size  Location     Type
 38443 ;;		None
 38444 ;; Auto vars:     Size  Location     Type
 38445 ;;		None
 38446 ;; Return value:  Size  Location     Type
 38447 ;;                  1    wreg      void 
 38448 ;; Registers used:
 38449 ;;		None
 38450 ;; Tracked objects:
 38451 ;;		On entry : 0/0
 38452 ;;		On exit  : 0/0
 38453 ;;		Unchanged: 0/0
 38454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38459 ;;Total ram usage:        0 bytes
 38460 ;; Hardware stack levels used:    1
 38461 ;; This function calls:
 38462 ;;		Nothing
 38463 ;; This function is called by:
 38464 ;;		_TMR1_Initialize
 38465 ;;		_TMR1_ISR
 38466 ;; This function uses a non-reentrant model
 38467 ;;
 38468                           
 38469                           	psect	text151
 38470  01C8FC                     __ptext151:
 38471                           	opt callstack 0
 38472  01C8FC                     _TMR1_DefaultInterruptHandler:
 38473                           	opt callstack 15
 38474                           
 38475                           ;incstack = 0
 38476  01C8FC  0012               	return		;funcret
 38477  01C8FE                     __end_of_TMR1_DefaultInterruptHandler:
 38478                           	opt callstack 0
 38479                           
 38480 ;; *************** function i2_TMR1_StopTimer *****************
 38481 ;; Defined at:
 38482 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38483 ;; Parameters:    Size  Location     Type
 38484 ;;		None
 38485 ;; Auto vars:     Size  Location     Type
 38486 ;;		None
 38487 ;; Return value:  Size  Location     Type
 38488 ;;                  1    wreg      void 
 38489 ;; Registers used:
 38490 ;;		None
 38491 ;; Tracked objects:
 38492 ;;		On entry : 0/0
 38493 ;;		On exit  : 0/0
 38494 ;;		Unchanged: 0/0
 38495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38500 ;;Total ram usage:        0 bytes
 38501 ;; Hardware stack levels used:    1
 38502 ;; This function calls:
 38503 ;;		Nothing
 38504 ;; This function is called by:
 38505 ;;		_QIErrorTimerHandler
 38506 ;; This function uses a non-reentrant model
 38507 ;;
 38508                           
 38509                           	psect	text152
 38510  01C8DE                     __ptext152:
 38511                           	opt callstack 0
 38512  01C8DE                     i2_TMR1_StopTimer:
 38513                           	opt callstack 14
 38514                           
 38515                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 38516                           
 38517                           ;incstack = 0
 38518  01C8DE  90CF               	bcf	4047,0,c	;volatile
 38519  01C8E0  0012               	return		;funcret
 38520  01C8E2                     __end_ofi2_TMR1_StopTimer:
 38521                           	opt callstack 0
 38522                           
 38523 ;; *************** function _TMR0_ISR *****************
 38524 ;; Defined at:
 38525 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 38526 ;; Parameters:    Size  Location     Type
 38527 ;;		None
 38528 ;; Auto vars:     Size  Location     Type
 38529 ;;		None
 38530 ;; Return value:  Size  Location     Type
 38531 ;;                  1    wreg      void 
 38532 ;; Registers used:
 38533 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38534 ;; Tracked objects:
 38535 ;;		On entry : 0/0
 38536 ;;		On exit  : 0/0
 38537 ;;		Unchanged: 0/0
 38538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38543 ;;Total ram usage:        0 bytes
 38544 ;; Hardware stack levels used:    1
 38545 ;; Hardware stack levels required when called:    2
 38546 ;; This function calls:
 38547 ;;		Absolute function
 38548 ;;		_TMR0_DefaultInterruptHandler
 38549 ;;		_heartbeatTimerHandler
 38550 ;; This function is called by:
 38551 ;;		_INTERRUPT_InterruptManagerHigh
 38552 ;; This function uses a non-reentrant model
 38553 ;;
 38554                           
 38555                           	psect	text153
 38556  01C308                     __ptext153:
 38557                           	opt callstack 0
 38558  01C308                     _TMR0_ISR:
 38559                           	opt callstack 14
 38560                           
 38561                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 38562                           
 38563                           ;incstack = 0
 38564  01C308  010E               	movlb	14	; () banked
 38565  01C30A  9BCA               	bcf	202,5,b	;volatile
 38566                           
 38567                           ; BSR set to: 14
 38568                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
 38569  01C30C  0100               	movlb	0	; () banked
 38570  01C30E  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38571  01C310  11CA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38572  01C312  11CB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38573  01C314  B4D8               	btfsc	status,2,c
 38574  01C316  0012               	return	
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
 38578  01C318  D801               	call	i2u2754_48
 38579  01C31A  0012               	return	
 38580  01C31C                     i2u2754_48:
 38581  01C31C  0005               	push	
 38582  01C31E  6EFA               	movwf	pclath,c
 38583  01C320  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38584  01C322  6EFD               	movwf	tosl,c
 38585  01C324  51CA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38586  01C326  6EFE               	movwf	tosh,c
 38587  01C328  51CB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38588  01C32A  6EFF               	movwf	tosu,c
 38589  01C32C  50FA               	movf	pclath,w,c
 38590  01C32E  0012               	return		;indir
 38591  01C330                     __end_of_TMR0_ISR:
 38592                           	opt callstack 0
 38593                           
 38594 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38595 ;; Defined at:
 38596 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 38597 ;; Parameters:    Size  Location     Type
 38598 ;;		None
 38599 ;; Auto vars:     Size  Location     Type
 38600 ;;		None
 38601 ;; Return value:  Size  Location     Type
 38602 ;;                  1    wreg      void 
 38603 ;; Registers used:
 38604 ;;		None
 38605 ;; Tracked objects:
 38606 ;;		On entry : 0/0
 38607 ;;		On exit  : 0/0
 38608 ;;		Unchanged: 0/0
 38609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38614 ;;Total ram usage:        0 bytes
 38615 ;; Hardware stack levels used:    1
 38616 ;; This function calls:
 38617 ;;		Nothing
 38618 ;; This function is called by:
 38619 ;;		_TMR0_Initialize
 38620 ;;		_TMR0_ISR
 38621 ;; This function uses a non-reentrant model
 38622 ;;
 38623                           
 38624                           	psect	text154
 38625  01C8FE                     __ptext154:
 38626                           	opt callstack 0
 38627  01C8FE                     _TMR0_DefaultInterruptHandler:
 38628                           	opt callstack 15
 38629                           
 38630                           ;incstack = 0
 38631  01C8FE  0012               	return		;funcret
 38632  01C900                     __end_of_TMR0_DefaultInterruptHandler:
 38633                           	opt callstack 0
 38634                           
 38635 ;; *************** function _heartbeatTimerHandler *****************
 38636 ;; Defined at:
 38637 ;;		line 23 in file "heartbeat_timer.c"
 38638 ;; Parameters:    Size  Location     Type
 38639 ;;		None
 38640 ;; Auto vars:     Size  Location     Type
 38641 ;;		None
 38642 ;; Return value:  Size  Location     Type
 38643 ;;                  1    wreg      void 
 38644 ;; Registers used:
 38645 ;;		wreg, status,2, status,0, cstack
 38646 ;; Tracked objects:
 38647 ;;		On entry : 0/0
 38648 ;;		On exit  : 0/0
 38649 ;;		Unchanged: 0/0
 38650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38655 ;;Total ram usage:        1 bytes
 38656 ;; Hardware stack levels used:    1
 38657 ;; Hardware stack levels required when called:    1
 38658 ;; This function calls:
 38659 ;;		i2___fladd
 38660 ;;		i2___llmod
 38661 ;; This function is called by:
 38662 ;;		_main
 38663 ;;		_TMR0_ISR
 38664 ;; This function uses a non-reentrant model
 38665 ;;
 38666                           
 38667                           	psect	text155
 38668  0196BE                     __ptext155:
 38669                           	opt callstack 0
 38670  0196BE                     _heartbeatTimerHandler:
 38671                           	opt callstack 14
 38672                           
 38673                           ;heartbeat_timer.c: 26: LATBbits.LATB6 = ~(LATBbits.LATB6);
 38674                           
 38675                           ;incstack = 0
 38676  0196BE  AC84               	btfss	3972,6,c	;volatile
 38677  0196C0  D002               	goto	i2u2718_40
 38678  0196C2  0E01               	movlw	1
 38679  0196C4  D001               	goto	i2u2718_46
 38680  0196C6                     i2u2718_40:
 38681  0196C6  0E00               	movlw	0
 38682  0196C8                     i2u2718_46:
 38683  0196C8  0AFF               	xorlw	255
 38684  0196CA  6E5E               	movwf	??_heartbeatTimerHandler& (0+255),c
 38685  0196CC  3A5E               	swapf	??_heartbeatTimerHandler,f,c
 38686  0196CE  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38687  0196D0  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38688  0196D2  5084               	movf	3972,w,c	;volatile
 38689  0196D4  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38690  0196D6  0BBF               	andlw	-65
 38691  0196D8  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38692  0196DA  6E84               	movwf	3972,c	;volatile
 38693                           
 38694                           ;heartbeat_timer.c: 29: device_on_time++;
 38695  0196DC  0E01               	movlw	1
 38696  0196DE  0100               	movlb	0	; () banked
 38697  0196E0  27C5               	addwf	_device_on_time& (0+255),f,b
 38698  0196E2  0E00               	movlw	0
 38699  0196E4  23C6               	addwfc	(_device_on_time+1)& (0+255),f,b
 38700  0196E6  23C7               	addwfc	(_device_on_time+2)& (0+255),f,b
 38701  0196E8  23C8               	addwfc	(_device_on_time+3)& (0+255),f,b
 38702                           
 38703                           ;heartbeat_timer.c: 32: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) QI_charge_time++;
 38704  0196EA  0101               	movlb	1	; () banked
 38705  0196EC  0595               	decf	_nxq_charge_state& (0+255),w,b
 38706  0196EE  B4D8               	btfsc	status,2,c
 38707  0196F0  D004               	goto	i2u2720_40
 38708                           
 38709                           ; BSR set to: 1
 38710  0196F2  0E02               	movlw	2
 38711  0196F4  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38712  0196F6  A4D8               	btfss	status,2,c
 38713  0196F8  D008               	goto	i2l21199
 38714  0196FA                     i2u2720_40:
 38715                           
 38716                           ; BSR set to: 1
 38717  0196FA  0E01               	movlw	1
 38718  0196FC  0102               	movlb	2	; () banked
 38719  0196FE  27D2               	addwf	_QI_charge_time& (0+255),f,b
 38720  019700  0E00               	movlw	0
 38721  019702  23D3               	addwfc	(_QI_charge_time+1)& (0+255),f,b
 38722  019704  23D4               	addwfc	(_QI_charge_time+2)& (0+255),f,b
 38723  019706  23D5               	addwfc	(_QI_charge_time+3)& (0+255),f,b
 38724  019708  D009               	goto	i2l21201
 38725  01970A                     i2l21199:
 38726                           
 38727                           ; BSR set to: 1
 38728                           ;heartbeat_timer.c: 33: else QI_charge_time = 0;
 38729  01970A  0E00               	movlw	0
 38730  01970C  0102               	movlb	2	; () banked
 38731  01970E  6FD2               	movwf	_QI_charge_time& (0+255),b
 38732  019710  0E00               	movlw	0
 38733  019712  6FD3               	movwf	(_QI_charge_time+1)& (0+255),b
 38734  019714  0E00               	movlw	0
 38735  019716  6FD4               	movwf	(_QI_charge_time+2)& (0+255),b
 38736  019718  0E00               	movlw	0
 38737  01971A  6FD5               	movwf	(_QI_charge_time+3)& (0+255),b
 38738  01971C                     i2l21201:
 38739                           
 38740                           ; BSR set to: 2
 38741                           ;heartbeat_timer.c: 36: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_charge += adc_results.qi_isns_adc_result;
 38742  01971C  0101               	movlb	1	; () banked
 38743  01971E  0595               	decf	_nxq_charge_state& (0+255),w,b
 38744  019720  B4D8               	btfsc	status,2,c
 38745  019722  D004               	goto	i2u2722_40
 38746                           
 38747                           ; BSR set to: 1
 38748  019724  0E02               	movlw	2
 38749  019726  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38750  019728  A4D8               	btfss	status,2,c
 38751  01972A  D01B               	goto	i2l21207
 38752  01972C                     i2u2722_40:
 38753                           
 38754                           ; BSR set to: 1
 38755  01972C  C2CA  F052         	movff	_adc_calculations+12,i2___fladd@b
 38756  019730  C2CB  F053         	movff	_adc_calculations+13,i2___fladd@b+1
 38757  019734  C2CC  F054         	movff	_adc_calculations+14,i2___fladd@b+2
 38758  019738  C2CD  F055         	movff	_adc_calculations+15,i2___fladd@b+3
 38759  01973C  C0F1  F056         	movff	_adc_results+20,i2___fladd@a
 38760  019740  C0F2  F057         	movff	_adc_results+21,i2___fladd@a+1
 38761  019744  C0F3  F058         	movff	_adc_results+22,i2___fladd@a+2
 38762  019748  C0F4  F059         	movff	_adc_results+23,i2___fladd@a+3
 38763  01974C  EC85  F0BB         	call	i2___fladd	;wreg free
 38764  019750  C052  F2CA         	movff	?i2___fladd,_adc_calculations+12
 38765  019754  C053  F2CB         	movff	?i2___fladd+1,_adc_calculations+13
 38766  019758  C054  F2CC         	movff	?i2___fladd+2,_adc_calculations+14
 38767  01975C  C055  F2CD         	movff	?i2___fladd+3,_adc_calculations+15
 38768  019760  D009               	goto	i2l21209
 38769  019762                     i2l21207:
 38770                           
 38771                           ; BSR set to: 1
 38772                           ;heartbeat_timer.c: 37: else adc_calculations.output_charge = 0.0;
 38773  019762  0E00               	movlw	0
 38774  019764  0102               	movlb	2	; () banked
 38775  019766  6FCA               	movwf	(_adc_calculations+12)& (0+255),b
 38776  019768  0E00               	movlw	0
 38777  01976A  6FCB               	movwf	(_adc_calculations+13)& (0+255),b
 38778  01976C  0E00               	movlw	0
 38779  01976E  6FCC               	movwf	(_adc_calculations+14)& (0+255),b
 38780  019770  0E00               	movlw	0
 38781  019772  6FCD               	movwf	(_adc_calculations+15)& (0+255),b
 38782  019774                     i2l21209:
 38783                           
 38784                           ;heartbeat_timer.c: 40: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_energy += adc_calculations.output_power;
 38785  019774  0101               	movlb	1	; () banked
 38786  019776  0595               	decf	_nxq_charge_state& (0+255),w,b
 38787  019778  B4D8               	btfsc	status,2,c
 38788  01977A  D004               	goto	i2u2724_40
 38789                           
 38790                           ; BSR set to: 1
 38791  01977C  0E02               	movlw	2
 38792  01977E  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38793  019780  A4D8               	btfss	status,2,c
 38794  019782  D01B               	goto	i2l21215
 38795  019784                     i2u2724_40:
 38796                           
 38797                           ; BSR set to: 1
 38798  019784  C2CE  F052         	movff	_adc_calculations+16,i2___fladd@b
 38799  019788  C2CF  F053         	movff	_adc_calculations+17,i2___fladd@b+1
 38800  01978C  C2D0  F054         	movff	_adc_calculations+18,i2___fladd@b+2
 38801  019790  C2D1  F055         	movff	_adc_calculations+19,i2___fladd@b+3
 38802  019794  C2C2  F056         	movff	_adc_calculations+4,i2___fladd@a
 38803  019798  C2C3  F057         	movff	_adc_calculations+5,i2___fladd@a+1
 38804  01979C  C2C4  F058         	movff	_adc_calculations+6,i2___fladd@a+2
 38805  0197A0  C2C5  F059         	movff	_adc_calculations+7,i2___fladd@a+3
 38806  0197A4  EC85  F0BB         	call	i2___fladd	;wreg free
 38807  0197A8  C052  F2CE         	movff	?i2___fladd,_adc_calculations+16
 38808  0197AC  C053  F2CF         	movff	?i2___fladd+1,_adc_calculations+17
 38809  0197B0  C054  F2D0         	movff	?i2___fladd+2,_adc_calculations+18
 38810  0197B4  C055  F2D1         	movff	?i2___fladd+3,_adc_calculations+19
 38811  0197B8  D009               	goto	i2l1808
 38812  0197BA                     i2l21215:
 38813                           
 38814                           ; BSR set to: 1
 38815                           ;heartbeat_timer.c: 41: else adc_calculations.output_energy = 0.0;
 38816  0197BA  0E00               	movlw	0
 38817  0197BC  0102               	movlb	2	; () banked
 38818  0197BE  6FCE               	movwf	(_adc_calculations+16)& (0+255),b
 38819  0197C0  0E00               	movlw	0
 38820  0197C2  6FCF               	movwf	(_adc_calculations+17)& (0+255),b
 38821  0197C4  0E00               	movlw	0
 38822  0197C6  6FD0               	movwf	(_adc_calculations+18)& (0+255),b
 38823  0197C8  0E00               	movlw	0
 38824  0197CA  6FD1               	movwf	(_adc_calculations+19)& (0+255),b
 38825  0197CC                     i2l1808:
 38826  0197CC  0004               	clrwdt		;# 
 38827                           
 38828                           ;heartbeat_timer.c: 47: LM73_start_flag = 1;
 38829  0197CE  0E01               	movlw	1
 38830  0197D0  0102               	movlb	2	; () banked
 38831  0197D2  6FD8               	movwf	_LM73_start_flag& (0+255),b
 38832                           
 38833                           ; BSR set to: 2
 38834                           ;heartbeat_timer.c: 50: if (device_on_time % OLED_update_time == 0) OLED_update_flag = 1
      +                          ;
 38835  0197D4  C0C5  F00E         	movff	_device_on_time,i2___llmod@dividend
 38836  0197D8  C0C6  F00F         	movff	_device_on_time+1,i2___llmod@dividend+1
 38837  0197DC  C0C7  F010         	movff	_device_on_time+2,i2___llmod@dividend+2
 38838  0197E0  C0C8  F011         	movff	_device_on_time+3,i2___llmod@dividend+3
 38839  0197E4  0100               	movlb	0	; () banked
 38840  0197E6  51FB               	movf	_OLED_update_time& (0+255),w,b
 38841  0197E8  6E12               	movwf	i2___llmod@divisor,c
 38842  0197EA  6A13               	clrf	i2___llmod@divisor+1,c
 38843  0197EC  6A14               	clrf	i2___llmod@divisor+2,c
 38844  0197EE  6A15               	clrf	i2___llmod@divisor+3,c
 38845  0197F0  EC34  F0DA         	call	i2___llmod	;wreg free
 38846  0197F4  500E               	movf	?i2___llmod,w,c
 38847  0197F6  100F               	iorwf	?i2___llmod+1,w,c
 38848  0197F8  1010               	iorwf	?i2___llmod+2,w,c
 38849  0197FA  1011               	iorwf	?i2___llmod+3,w,c
 38850  0197FC  A4D8               	btfss	status,2,c
 38851  0197FE  D003               	goto	i2l1809
 38852  019800  0E01               	movlw	1
 38853  019802  0102               	movlb	2	; () banked
 38854  019804  6FD6               	movwf	_OLED_update_flag& (0+255),b
 38855  019806                     i2l1809:
 38856                           
 38857                           ;heartbeat_timer.c: 53: freq_meas_start_flag = 1;
 38858  019806  0E01               	movlw	1
 38859  019808  0102               	movlb	2	; () banked
 38860  01980A  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 38861                           
 38862                           ;heartbeat_timer.c: 56: if (live_measurement_enable_flag) live_measurement_request_flag 
      +                          = 1;
 38863  01980C  0100               	movlb	0	; () banked
 38864  01980E  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 38865  019810  B4D8               	btfsc	status,2,c
 38866  019812  0012               	return	
 38867                           
 38868                           ; BSR set to: 0
 38869  019814  0E01               	movlw	1
 38870  019816  0102               	movlb	2	; () banked
 38871  019818  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 38872  01981A  0012               	return		;funcret
 38873  01981C                     __end_of_heartbeatTimerHandler:
 38874                           	opt callstack 0
 38875                           
 38876 ;; *************** function _PIN_MANAGER_IOC *****************
 38877 ;; Defined at:
 38878 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 38879 ;; Parameters:    Size  Location     Type
 38880 ;;		None
 38881 ;; Auto vars:     Size  Location     Type
 38882 ;;		None
 38883 ;; Return value:  Size  Location     Type
 38884 ;;                  1    wreg      void 
 38885 ;; Registers used:
 38886 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38887 ;; Tracked objects:
 38888 ;;		On entry : 0/0
 38889 ;;		On exit  : 0/0
 38890 ;;		Unchanged: 0/0
 38891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38896 ;;Total ram usage:        0 bytes
 38897 ;; Hardware stack levels used:    1
 38898 ;; Hardware stack levels required when called:    4
 38899 ;; This function calls:
 38900 ;;		_IOCBF2_ISR
 38901 ;;		_IOCBF3_ISR
 38902 ;; This function is called by:
 38903 ;;		_INTERRUPT_InterruptManagerHigh
 38904 ;; This function uses a non-reentrant model
 38905 ;;
 38906                           
 38907                           	psect	text156
 38908  01C6A6                     __ptext156:
 38909                           	opt callstack 0
 38910  01C6A6                     _PIN_MANAGER_IOC:
 38911                           	opt callstack 12
 38912                           
 38913                           ;pin_manager.c: 146: if(IOCBFbits.IOCBF2 == 1)
 38914                           
 38915                           ;incstack = 0
 38916  01C6A6  010F               	movlb	15	; () banked
 38917  01C6A8  B512               	btfsc	18,2,b	;volatile
 38918                           
 38919                           ; BSR set to: 15
 38920                           ;pin_manager.c: 147: {;pin_manager.c: 148: IOCBF2_ISR();
 38921  01C6AA  EC33  F0E1         	call	_IOCBF2_ISR	;wreg free
 38922                           
 38923                           ;pin_manager.c: 149: };pin_manager.c: 151: if(IOCBFbits.IOCBF3 == 1)
 38924  01C6AE  010F               	movlb	15	; () banked
 38925  01C6B0  A712               	btfss	18,3,b	;volatile
 38926  01C6B2  0012               	return	
 38927                           
 38928                           ; BSR set to: 15
 38929                           ;pin_manager.c: 152: {;pin_manager.c: 153: IOCBF3_ISR();
 38930  01C6B4  EC1E  F0E1         	call	_IOCBF3_ISR	;wreg free
 38931  01C6B8  0012               	return		;funcret
 38932  01C6BA                     __end_of_PIN_MANAGER_IOC:
 38933                           	opt callstack 0
 38934                           
 38935 ;; *************** function _IOCBF3_ISR *****************
 38936 ;; Defined at:
 38937 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 38938 ;; Parameters:    Size  Location     Type
 38939 ;;		None
 38940 ;; Auto vars:     Size  Location     Type
 38941 ;;		None
 38942 ;; Return value:  Size  Location     Type
 38943 ;;                  1    wreg      void 
 38944 ;; Registers used:
 38945 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38946 ;; Tracked objects:
 38947 ;;		On entry : 0/0
 38948 ;;		On exit  : 0/0
 38949 ;;		Unchanged: 0/0
 38950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38955 ;;Total ram usage:        0 bytes
 38956 ;; Hardware stack levels used:    1
 38957 ;; Hardware stack levels required when called:    3
 38958 ;; This function calls:
 38959 ;;		Absolute function
 38960 ;;		_IOCBF3_DefaultInterruptHandler
 38961 ;;		_QIChargeIOCHandler
 38962 ;; This function is called by:
 38963 ;;		_PIN_MANAGER_IOC
 38964 ;; This function uses a non-reentrant model
 38965 ;;
 38966                           
 38967                           	psect	text157
 38968  01C23C                     __ptext157:
 38969                           	opt callstack 0
 38970  01C23C                     _IOCBF3_ISR:
 38971                           	opt callstack 12
 38972                           
 38973                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 38974                           
 38975                           ;incstack = 0
 38976  01C23C  0101               	movlb	1	; () banked
 38977  01C23E  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38978  01C240  1178               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38979  01C242  1179               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38980  01C244  B4D8               	btfsc	status,2,c
 38981  01C246  D00C               	goto	i2u1808_49
 38982                           
 38983                           ; BSR set to: 1
 38984                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 38985  01C248  D801               	call	i2u1808_48
 38986  01C24A  D00A               	goto	i2u1808_49
 38987  01C24C                     i2u1808_48:
 38988  01C24C  0005               	push	
 38989  01C24E  6EFA               	movwf	pclath,c
 38990  01C250  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38991  01C252  6EFD               	movwf	tosl,c
 38992  01C254  5178               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38993  01C256  6EFE               	movwf	tosh,c
 38994  01C258  5179               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38995  01C25A  6EFF               	movwf	tosu,c
 38996  01C25C  50FA               	movf	pclath,w,c
 38997  01C25E  0012               	return		;indir
 38998  01C260                     i2u1808_49:
 38999                           
 39000                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 39001  01C260  010F               	movlb	15	; () banked
 39002  01C262  9712               	bcf	18,3,b	;volatile
 39003                           
 39004                           ; BSR set to: 15
 39005  01C264  0012               	return		;funcret
 39006  01C266                     __end_of_IOCBF3_ISR:
 39007                           	opt callstack 0
 39008                           
 39009 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 39010 ;; Defined at:
 39011 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 39012 ;; Parameters:    Size  Location     Type
 39013 ;;		None
 39014 ;; Auto vars:     Size  Location     Type
 39015 ;;		None
 39016 ;; Return value:  Size  Location     Type
 39017 ;;                  1    wreg      void 
 39018 ;; Registers used:
 39019 ;;		None
 39020 ;; Tracked objects:
 39021 ;;		On entry : 0/0
 39022 ;;		On exit  : 0/0
 39023 ;;		Unchanged: 0/0
 39024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39029 ;;Total ram usage:        0 bytes
 39030 ;; Hardware stack levels used:    1
 39031 ;; This function calls:
 39032 ;;		Nothing
 39033 ;; This function is called by:
 39034 ;;		_PIN_MANAGER_Initialize
 39035 ;;		_IOCBF3_ISR
 39036 ;; This function uses a non-reentrant model
 39037 ;;
 39038                           
 39039                           	psect	text158
 39040  01C900                     __ptext158:
 39041                           	opt callstack 0
 39042  01C900                     _IOCBF3_DefaultInterruptHandler:
 39043                           	opt callstack 14
 39044                           
 39045                           ; BSR set to: 15
 39046                           ;incstack = 0
 39047  01C900  0012               	return		;funcret
 39048  01C902                     __end_of_IOCBF3_DefaultInterruptHandler:
 39049                           	opt callstack 0
 39050                           
 39051 ;; *************** function _QIChargeIOCHandler *****************
 39052 ;; Defined at:
 39053 ;;		line 82 in file "NXQ_charge_state.c"
 39054 ;; Parameters:    Size  Location     Type
 39055 ;;		None
 39056 ;; Auto vars:     Size  Location     Type
 39057 ;;		None
 39058 ;; Return value:  Size  Location     Type
 39059 ;;                  1    wreg      void 
 39060 ;; Registers used:
 39061 ;;		wreg, status,2, cstack
 39062 ;; Tracked objects:
 39063 ;;		On entry : 0/0
 39064 ;;		On exit  : 0/0
 39065 ;;		Unchanged: 0/0
 39066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39071 ;;Total ram usage:        0 bytes
 39072 ;; Hardware stack levels used:    1
 39073 ;; Hardware stack levels required when called:    2
 39074 ;; This function calls:
 39075 ;;		_TMR3_StartTimer
 39076 ;;		i2_TMR1_Reload
 39077 ;;		i2_TMR3_Reload
 39078 ;; This function is called by:
 39079 ;;		_main
 39080 ;;		_IOCBF3_ISR
 39081 ;; This function uses a non-reentrant model
 39082 ;;
 39083                           
 39084                           	psect	text159
 39085  01C566                     __ptext159:
 39086                           	opt callstack 0
 39087  01C566                     _QIChargeIOCHandler:
 39088                           	opt callstack 12
 39089                           
 39090                           ;NXQ_charge_state.c: 84: if (IOCBNbits.IOCBN3 && PORTBbits.RB2 == 1) {
 39091                           
 39092                           ;incstack = 0
 39093  01C566  010F               	movlb	15	; () banked
 39094  01C568  B713               	btfsc	19,3,b	;volatile
 39095                           
 39096                           ; BSR set to: 15
 39097  01C56A  A48E               	btfss	3982,2,c	;volatile
 39098  01C56C  D003               	goto	i2l14021
 39099                           
 39100                           ; BSR set to: 15
 39101                           ;NXQ_charge_state.c: 86: nxq_charge_state = QI_Charging;
 39102  01C56E  0E01               	movlw	1
 39103  01C570  0101               	movlb	1	; () banked
 39104  01C572  6F95               	movwf	_nxq_charge_state& (0+255),b
 39105  01C574                     i2l14021:
 39106                           
 39107                           ;NXQ_charge_state.c: 88: };NXQ_charge_state.c: 90: TMR3_Reload();
 39108  01C574  EC1D  F0E4         	call	i2_TMR3_Reload	;wreg free
 39109                           
 39110                           ;NXQ_charge_state.c: 91: TMR3_StartTimer();
 39111  01C578  EC71  F0E4         	call	_TMR3_StartTimer	;wreg free
 39112                           
 39113                           ;NXQ_charge_state.c: 93: TMR1_Reload();
 39114  01C57C  EC16  F0E4         	call	i2_TMR1_Reload	;wreg free
 39115  01C580  0012               	return		;funcret
 39116  01C582                     __end_of_QIChargeIOCHandler:
 39117                           	opt callstack 0
 39118                           
 39119 ;; *************** function i2_TMR1_Reload *****************
 39120 ;; Defined at:
 39121 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 39122 ;; Parameters:    Size  Location     Type
 39123 ;;		None
 39124 ;; Auto vars:     Size  Location     Type
 39125 ;;		None
 39126 ;; Return value:  Size  Location     Type
 39127 ;;                  1    wreg      void 
 39128 ;; Registers used:
 39129 ;;		wreg, status,2, cstack
 39130 ;; Tracked objects:
 39131 ;;		On entry : 0/0
 39132 ;;		On exit  : 0/0
 39133 ;;		Unchanged: 0/0
 39134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39139 ;;Total ram usage:        0 bytes
 39140 ;; Hardware stack levels used:    1
 39141 ;; Hardware stack levels required when called:    1
 39142 ;; This function calls:
 39143 ;;		i2_TMR1_WriteTimer
 39144 ;; This function is called by:
 39145 ;;		_QIChargeIOCHandler
 39146 ;;		_QIErrorTimerHandler
 39147 ;; This function uses a non-reentrant model
 39148 ;;
 39149                           
 39150                           	psect	text160
 39151  01C82C                     __ptext160:
 39152                           	opt callstack 0
 39153  01C82C                     i2_TMR1_Reload:
 39154                           	opt callstack 13
 39155                           
 39156                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 39157                           
 39158                           ;incstack = 0
 39159  01C82C  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 39160  01C830  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 39161  01C834  ECC1  F0E2         	call	i2_TMR1_WriteTimer	;wreg free
 39162  01C838  0012               	return		;funcret
 39163  01C83A                     __end_ofi2_TMR1_Reload:
 39164                           	opt callstack 0
 39165                           
 39166 ;; *************** function i2_TMR1_WriteTimer *****************
 39167 ;; Defined at:
 39168 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 39169 ;; Parameters:    Size  Location     Type
 39170 ;;  timerVal        2    0[COMRAM] unsigned int 
 39171 ;; Auto vars:     Size  Location     Type
 39172 ;;		None
 39173 ;; Return value:  Size  Location     Type
 39174 ;;                  1    wreg      void 
 39175 ;; Registers used:
 39176 ;;		wreg, status,2
 39177 ;; Tracked objects:
 39178 ;;		On entry : 0/0
 39179 ;;		On exit  : 0/0
 39180 ;;		Unchanged: 0/0
 39181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39186 ;;Total ram usage:        2 bytes
 39187 ;; Hardware stack levels used:    1
 39188 ;; This function calls:
 39189 ;;		Nothing
 39190 ;; This function is called by:
 39191 ;;		_TMR1_ISR
 39192 ;;		i2_TMR1_Reload
 39193 ;; This function uses a non-reentrant model
 39194 ;;
 39195                           
 39196                           	psect	text161
 39197  01C582                     __ptext161:
 39198                           	opt callstack 0
 39199  01C582                     i2_TMR1_WriteTimer:
 39200                           	opt callstack 15
 39201                           
 39202                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 39203                           
 39204                           ;incstack = 0
 39205  01C582  A4CF               	btfss	4047,2,c	;volatile
 39206  01C584  D007               	goto	i2l12225
 39207                           
 39208                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 39209  01C586  90CF               	bcf	4047,0,c	;volatile
 39210                           
 39211                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 39212  01C588  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39213  01C58A  6ECE               	movwf	4046,c	;volatile
 39214                           
 39215                           ;tmr1.c: 136: TMR1L = timerVal;
 39216  01C58C  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39217                           
 39218                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 39219  01C590  80CF               	bsf	4047,0,c	;volatile
 39220                           
 39221                           ;tmr1.c: 140: }
 39222  01C592  0012               	return	
 39223  01C594                     i2l12225:
 39224                           
 39225                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 39226  01C594  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39227  01C596  6ECE               	movwf	4046,c	;volatile
 39228                           
 39229                           ;tmr1.c: 145: TMR1L = timerVal;
 39230  01C598  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39231  01C59C  0012               	return		;funcret
 39232  01C59E                     __end_ofi2_TMR1_WriteTimer:
 39233                           	opt callstack 0
 39234                           
 39235 ;; *************** function _IOCBF2_ISR *****************
 39236 ;; Defined at:
 39237 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 39238 ;; Parameters:    Size  Location     Type
 39239 ;;		None
 39240 ;; Auto vars:     Size  Location     Type
 39241 ;;		None
 39242 ;; Return value:  Size  Location     Type
 39243 ;;                  1    wreg      void 
 39244 ;; Registers used:
 39245 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39246 ;; Tracked objects:
 39247 ;;		On entry : 0/0
 39248 ;;		On exit  : 0/0
 39249 ;;		Unchanged: 0/0
 39250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39255 ;;Total ram usage:        0 bytes
 39256 ;; Hardware stack levels used:    1
 39257 ;; Hardware stack levels required when called:    3
 39258 ;; This function calls:
 39259 ;;		Absolute function
 39260 ;;		_IOCBF2_DefaultInterruptHandler
 39261 ;;		_QIIdleIOCHandler
 39262 ;; This function is called by:
 39263 ;;		_PIN_MANAGER_IOC
 39264 ;; This function uses a non-reentrant model
 39265 ;;
 39266                           
 39267                           	psect	text162
 39268  01C266                     __ptext162:
 39269                           	opt callstack 0
 39270  01C266                     _IOCBF2_ISR:
 39271                           	opt callstack 12
 39272                           
 39273                           ;pin_manager.c: 165: if(IOCBF2_InterruptHandler)
 39274                           
 39275                           ;incstack = 0
 39276  01C266  0101               	movlb	1	; () banked
 39277  01C268  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39278  01C26A  117B               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39279  01C26C  117C               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39280  01C26E  B4D8               	btfsc	status,2,c
 39281  01C270  D00C               	goto	i2u1806_49
 39282                           
 39283                           ; BSR set to: 1
 39284                           ;pin_manager.c: 166: {;pin_manager.c: 167: IOCBF2_InterruptHandler();
 39285  01C272  D801               	call	i2u1806_48
 39286  01C274  D00A               	goto	i2u1806_49
 39287  01C276                     i2u1806_48:
 39288  01C276  0005               	push	
 39289  01C278  6EFA               	movwf	pclath,c
 39290  01C27A  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39291  01C27C  6EFD               	movwf	tosl,c
 39292  01C27E  517B               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39293  01C280  6EFE               	movwf	tosh,c
 39294  01C282  517C               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39295  01C284  6EFF               	movwf	tosu,c
 39296  01C286  50FA               	movf	pclath,w,c
 39297  01C288  0012               	return		;indir
 39298  01C28A                     i2u1806_49:
 39299                           
 39300                           ;pin_manager.c: 168: };pin_manager.c: 169: IOCBFbits.IOCBF2 = 0;
 39301  01C28A  010F               	movlb	15	; () banked
 39302  01C28C  9512               	bcf	18,2,b	;volatile
 39303                           
 39304                           ; BSR set to: 15
 39305  01C28E  0012               	return		;funcret
 39306  01C290                     __end_of_IOCBF2_ISR:
 39307                           	opt callstack 0
 39308                           
 39309 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 39310 ;; Defined at:
 39311 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 39312 ;; Parameters:    Size  Location     Type
 39313 ;;		None
 39314 ;; Auto vars:     Size  Location     Type
 39315 ;;		None
 39316 ;; Return value:  Size  Location     Type
 39317 ;;                  1    wreg      void 
 39318 ;; Registers used:
 39319 ;;		None
 39320 ;; Tracked objects:
 39321 ;;		On entry : 0/0
 39322 ;;		On exit  : 0/0
 39323 ;;		Unchanged: 0/0
 39324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39329 ;;Total ram usage:        0 bytes
 39330 ;; Hardware stack levels used:    1
 39331 ;; This function calls:
 39332 ;;		Nothing
 39333 ;; This function is called by:
 39334 ;;		_PIN_MANAGER_Initialize
 39335 ;;		_IOCBF2_ISR
 39336 ;; This function uses a non-reentrant model
 39337 ;;
 39338                           
 39339                           	psect	text163
 39340  01C902                     __ptext163:
 39341                           	opt callstack 0
 39342  01C902                     _IOCBF2_DefaultInterruptHandler:
 39343                           	opt callstack 14
 39344                           
 39345                           ; BSR set to: 15
 39346                           ;incstack = 0
 39347  01C902  0012               	return		;funcret
 39348  01C904                     __end_of_IOCBF2_DefaultInterruptHandler:
 39349                           	opt callstack 0
 39350                           
 39351 ;; *************** function _QIIdleIOCHandler *****************
 39352 ;; Defined at:
 39353 ;;		line 67 in file "NXQ_charge_state.c"
 39354 ;; Parameters:    Size  Location     Type
 39355 ;;		None
 39356 ;; Auto vars:     Size  Location     Type
 39357 ;;		None
 39358 ;; Return value:  Size  Location     Type
 39359 ;;                  1    wreg      void 
 39360 ;; Registers used:
 39361 ;;		wreg, status,2, cstack
 39362 ;; Tracked objects:
 39363 ;;		On entry : 0/0
 39364 ;;		On exit  : 0/0
 39365 ;;		Unchanged: 0/0
 39366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39371 ;;Total ram usage:        0 bytes
 39372 ;; Hardware stack levels used:    1
 39373 ;; Hardware stack levels required when called:    2
 39374 ;; This function calls:
 39375 ;;		_TMR1_StartTimer
 39376 ;;		_TMR3_StartTimer
 39377 ;;		i2_TMR3_Reload
 39378 ;; This function is called by:
 39379 ;;		_main
 39380 ;;		_IOCBF2_ISR
 39381 ;; This function uses a non-reentrant model
 39382 ;;
 39383                           
 39384                           	psect	text164
 39385  01C6BA                     __ptext164:
 39386                           	opt callstack 0
 39387  01C6BA                     _QIIdleIOCHandler:
 39388                           	opt callstack 12
 39389                           
 39390                           ;NXQ_charge_state.c: 69: if (IOCBNbits.IOCBN2 == 1) {
 39391                           
 39392                           ;incstack = 0
 39393  01C6BA  010F               	movlb	15	; () banked
 39394  01C6BC  A513               	btfss	19,2,b	;volatile
 39395  01C6BE  0012               	return	
 39396                           
 39397                           ; BSR set to: 15
 39398                           ;NXQ_charge_state.c: 71: TMR3_Reload();
 39399  01C6C0  EC1D  F0E4         	call	i2_TMR3_Reload	;wreg free
 39400                           
 39401                           ;NXQ_charge_state.c: 72: TMR3_StartTimer();
 39402  01C6C4  EC71  F0E4         	call	_TMR3_StartTimer	;wreg free
 39403                           
 39404                           ;NXQ_charge_state.c: 75: TMR1_StartTimer();
 39405  01C6C8  EC73  F0E4         	call	_TMR1_StartTimer	;wreg free
 39406  01C6CC  0012               	return		;funcret
 39407  01C6CE                     __end_of_QIIdleIOCHandler:
 39408                           	opt callstack 0
 39409                           
 39410 ;; *************** function i2_TMR3_Reload *****************
 39411 ;; Defined at:
 39412 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 39413 ;; Parameters:    Size  Location     Type
 39414 ;;		None
 39415 ;; Auto vars:     Size  Location     Type
 39416 ;;		None
 39417 ;; Return value:  Size  Location     Type
 39418 ;;                  1    wreg      void 
 39419 ;; Registers used:
 39420 ;;		wreg, status,2, cstack
 39421 ;; Tracked objects:
 39422 ;;		On entry : 0/0
 39423 ;;		On exit  : 0/0
 39424 ;;		Unchanged: 0/0
 39425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39430 ;;Total ram usage:        0 bytes
 39431 ;; Hardware stack levels used:    1
 39432 ;; Hardware stack levels required when called:    1
 39433 ;; This function calls:
 39434 ;;		i2_TMR3_WriteTimer
 39435 ;; This function is called by:
 39436 ;;		_QIIdleIOCHandler
 39437 ;;		_QIChargeIOCHandler
 39438 ;; This function uses a non-reentrant model
 39439 ;;
 39440                           
 39441                           	psect	text165
 39442  01C83A                     __ptext165:
 39443                           	opt callstack 0
 39444  01C83A                     i2_TMR3_Reload:
 39445                           	opt callstack 12
 39446                           
 39447                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 39448                           
 39449                           ;incstack = 0
 39450  01C83A  C18D  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 39451  01C83E  C18E  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 39452  01C842  ECCF  F0E2         	call	i2_TMR3_WriteTimer	;wreg free
 39453  01C846  0012               	return		;funcret
 39454  01C848                     __end_ofi2_TMR3_Reload:
 39455                           	opt callstack 0
 39456                           
 39457 ;; *************** function i2_TMR3_WriteTimer *****************
 39458 ;; Defined at:
 39459 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 39460 ;; Parameters:    Size  Location     Type
 39461 ;;  timerVal        2    0[COMRAM] unsigned int 
 39462 ;; Auto vars:     Size  Location     Type
 39463 ;;		None
 39464 ;; Return value:  Size  Location     Type
 39465 ;;                  1    wreg      void 
 39466 ;; Registers used:
 39467 ;;		wreg, status,2
 39468 ;; Tracked objects:
 39469 ;;		On entry : 0/0
 39470 ;;		On exit  : 0/0
 39471 ;;		Unchanged: 0/0
 39472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39477 ;;Total ram usage:        2 bytes
 39478 ;; Hardware stack levels used:    1
 39479 ;; This function calls:
 39480 ;;		Nothing
 39481 ;; This function is called by:
 39482 ;;		i2_TMR3_Reload
 39483 ;; This function uses a non-reentrant model
 39484 ;;
 39485                           
 39486                           	psect	text166
 39487  01C59E                     __ptext166:
 39488                           	opt callstack 0
 39489  01C59E                     i2_TMR3_WriteTimer:
 39490                           	opt callstack 12
 39491                           
 39492                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 39493                           
 39494                           ;incstack = 0
 39495  01C59E  A4C9               	btfss	4041,2,c	;volatile
 39496  01C5A0  D007               	goto	i2l12211
 39497                           
 39498                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 39499  01C5A2  90C9               	bcf	4041,0,c	;volatile
 39500                           
 39501                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 39502  01C5A4  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39503  01C5A6  6EC8               	movwf	4040,c	;volatile
 39504                           
 39505                           ;tmr3.c: 136: TMR3L = timerVal;
 39506  01C5A8  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39507                           
 39508                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 39509  01C5AC  80C9               	bsf	4041,0,c	;volatile
 39510                           
 39511                           ;tmr3.c: 140: }
 39512  01C5AE  0012               	return	
 39513  01C5B0                     i2l12211:
 39514                           
 39515                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 39516  01C5B0  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39517  01C5B2  6EC8               	movwf	4040,c	;volatile
 39518                           
 39519                           ;tmr3.c: 145: TMR3L = timerVal;
 39520  01C5B4  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39521  01C5B8  0012               	return		;funcret
 39522  01C5BA                     __end_ofi2_TMR3_WriteTimer:
 39523                           	opt callstack 0
 39524                           
 39525 ;; *************** function _TMR3_StartTimer *****************
 39526 ;; Defined at:
 39527 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 39528 ;; Parameters:    Size  Location     Type
 39529 ;;		None
 39530 ;; Auto vars:     Size  Location     Type
 39531 ;;		None
 39532 ;; Return value:  Size  Location     Type
 39533 ;;                  1    wreg      void 
 39534 ;; Registers used:
 39535 ;;		None
 39536 ;; Tracked objects:
 39537 ;;		On entry : 0/0
 39538 ;;		On exit  : 0/0
 39539 ;;		Unchanged: 0/0
 39540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39545 ;;Total ram usage:        0 bytes
 39546 ;; Hardware stack levels used:    1
 39547 ;; This function calls:
 39548 ;;		Nothing
 39549 ;; This function is called by:
 39550 ;;		_QIIdleIOCHandler
 39551 ;;		_QIChargeIOCHandler
 39552 ;; This function uses a non-reentrant model
 39553 ;;
 39554                           
 39555                           	psect	text167
 39556  01C8E2                     __ptext167:
 39557                           	opt callstack 0
 39558  01C8E2                     _TMR3_StartTimer:
 39559                           	opt callstack 13
 39560                           
 39561                           ;tmr3.c: 102: T3CONbits.TMR3ON = 1;
 39562                           
 39563                           ;incstack = 0
 39564  01C8E2  80C9               	bsf	4041,0,c	;volatile
 39565  01C8E4  0012               	return		;funcret
 39566  01C8E6                     __end_of_TMR3_StartTimer:
 39567                           	opt callstack 0
 39568                           
 39569 ;; *************** function _TMR1_StartTimer *****************
 39570 ;; Defined at:
 39571 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 39572 ;; Parameters:    Size  Location     Type
 39573 ;;		None
 39574 ;; Auto vars:     Size  Location     Type
 39575 ;;		None
 39576 ;; Return value:  Size  Location     Type
 39577 ;;                  1    wreg      void 
 39578 ;; Registers used:
 39579 ;;		None
 39580 ;; Tracked objects:
 39581 ;;		On entry : 0/0
 39582 ;;		On exit  : 0/0
 39583 ;;		Unchanged: 0/0
 39584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39589 ;;Total ram usage:        0 bytes
 39590 ;; Hardware stack levels used:    1
 39591 ;; This function calls:
 39592 ;;		Nothing
 39593 ;; This function is called by:
 39594 ;;		_QIIdleIOCHandler
 39595 ;; This function uses a non-reentrant model
 39596 ;;
 39597                           
 39598                           	psect	text168
 39599  01C8E6                     __ptext168:
 39600                           	opt callstack 0
 39601  01C8E6                     _TMR1_StartTimer:
 39602                           	opt callstack 13
 39603                           
 39604                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 39605                           
 39606                           ;incstack = 0
 39607  01C8E6  80CF               	bsf	4047,0,c	;volatile
 39608  01C8E8  0012               	return		;funcret
 39609  01C8EA                     __end_of_TMR1_StartTimer:
 39610                           	opt callstack 0
 39611                           
 39612 ;; *************** function _INT2_ISR *****************
 39613 ;; Defined at:
 39614 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 39615 ;; Parameters:    Size  Location     Type
 39616 ;;		None
 39617 ;; Auto vars:     Size  Location     Type
 39618 ;;		None
 39619 ;; Return value:  Size  Location     Type
 39620 ;;                  1    wreg      void 
 39621 ;; Registers used:
 39622 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39623 ;; Tracked objects:
 39624 ;;		On entry : 0/0
 39625 ;;		On exit  : 0/0
 39626 ;;		Unchanged: 0/0
 39627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39632 ;;Total ram usage:        0 bytes
 39633 ;; Hardware stack levels used:    1
 39634 ;; Hardware stack levels required when called:    2
 39635 ;; This function calls:
 39636 ;;		_INT2_CallBack
 39637 ;; This function is called by:
 39638 ;;		_INTERRUPT_InterruptManagerHigh
 39639 ;; This function uses a non-reentrant model
 39640 ;;
 39641                           
 39642                           	psect	text169
 39643  01C88C                     __ptext169:
 39644                           	opt callstack 0
 39645  01C88C                     _INT2_ISR:
 39646                           	opt callstack 14
 39647                           
 39648                           ;ext_int.c: 61: (PIR0bits.INT2IF = 0);
 39649                           
 39650                           ;incstack = 0
 39651  01C88C  010E               	movlb	14	; () banked
 39652  01C88E  95CA               	bcf	202,2,b	;volatile
 39653                           
 39654                           ; BSR set to: 14
 39655                           ;ext_int.c: 64: INT2_CallBack();
 39656  01C890  ECD2  F0E1         	call	_INT2_CallBack	;wreg free
 39657  01C894  0012               	return		;funcret
 39658  01C896                     __end_of_INT2_ISR:
 39659                           	opt callstack 0
 39660                           
 39661 ;; *************** function _INT2_CallBack *****************
 39662 ;; Defined at:
 39663 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 39664 ;; Parameters:    Size  Location     Type
 39665 ;;		None
 39666 ;; Auto vars:     Size  Location     Type
 39667 ;;		None
 39668 ;; Return value:  Size  Location     Type
 39669 ;;                  1    wreg      void 
 39670 ;; Registers used:
 39671 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39672 ;; Tracked objects:
 39673 ;;		On entry : 0/0
 39674 ;;		On exit  : 0/0
 39675 ;;		Unchanged: 0/0
 39676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39681 ;;Total ram usage:        0 bytes
 39682 ;; Hardware stack levels used:    1
 39683 ;; Hardware stack levels required when called:    1
 39684 ;; This function calls:
 39685 ;;		Absolute function
 39686 ;;		_INT2_DefaultInterruptHandler
 39687 ;;		_rightCapTouchHandler
 39688 ;; This function is called by:
 39689 ;;		_INT2_ISR
 39690 ;; This function uses a non-reentrant model
 39691 ;;
 39692                           
 39693                           	psect	text170
 39694  01C3A4                     __ptext170:
 39695                           	opt callstack 0
 39696  01C3A4                     _INT2_CallBack:
 39697                           	opt callstack 14
 39698                           
 39699                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 39700                           
 39701                           ;incstack = 0
 39702  01C3A4  0101               	movlb	1	; () banked
 39703  01C3A6  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39704  01C3A8  1184               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39705  01C3AA  1185               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39706  01C3AC  B4D8               	btfsc	status,2,c
 39707  01C3AE  0012               	return	
 39708                           
 39709                           ; BSR set to: 1
 39710                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 39711  01C3B0  D801               	call	i2u1802_48
 39712  01C3B2  0012               	return	
 39713  01C3B4                     i2u1802_48:
 39714  01C3B4  0005               	push	
 39715  01C3B6  6EFA               	movwf	pclath,c
 39716  01C3B8  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39717  01C3BA  6EFD               	movwf	tosl,c
 39718  01C3BC  5184               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39719  01C3BE  6EFE               	movwf	tosh,c
 39720  01C3C0  5185               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39721  01C3C2  6EFF               	movwf	tosu,c
 39722  01C3C4  50FA               	movf	pclath,w,c
 39723  01C3C6  0012               	return		;indir
 39724  01C3C8                     __end_of_INT2_CallBack:
 39725                           	opt callstack 0
 39726                           
 39727 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39728 ;; Defined at:
 39729 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 39730 ;; Parameters:    Size  Location     Type
 39731 ;;		None
 39732 ;; Auto vars:     Size  Location     Type
 39733 ;;		None
 39734 ;; Return value:  Size  Location     Type
 39735 ;;                  1    wreg      void 
 39736 ;; Registers used:
 39737 ;;		None
 39738 ;; Tracked objects:
 39739 ;;		On entry : 0/0
 39740 ;;		On exit  : 0/0
 39741 ;;		Unchanged: 0/0
 39742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39747 ;;Total ram usage:        0 bytes
 39748 ;; Hardware stack levels used:    1
 39749 ;; This function calls:
 39750 ;;		Nothing
 39751 ;; This function is called by:
 39752 ;;		_EXT_INT_Initialize
 39753 ;;		_INT2_CallBack
 39754 ;; This function uses a non-reentrant model
 39755 ;;
 39756                           
 39757                           	psect	text171
 39758  01C904                     __ptext171:
 39759                           	opt callstack 0
 39760  01C904                     _INT2_DefaultInterruptHandler:
 39761                           	opt callstack 14
 39762                           
 39763                           ;incstack = 0
 39764  01C904  0012               	return		;funcret
 39765  01C906                     __end_of_INT2_DefaultInterruptHandler:
 39766                           	opt callstack 0
 39767                           
 39768 ;; *************** function _rightCapTouchHandler *****************
 39769 ;; Defined at:
 39770 ;;		line 20 in file "cap_touch_int.c"
 39771 ;; Parameters:    Size  Location     Type
 39772 ;;		None
 39773 ;; Auto vars:     Size  Location     Type
 39774 ;;		None
 39775 ;; Return value:  Size  Location     Type
 39776 ;;                  1    wreg      void 
 39777 ;; Registers used:
 39778 ;;		wreg, status,2, status,0
 39779 ;; Tracked objects:
 39780 ;;		On entry : 0/0
 39781 ;;		On exit  : 0/0
 39782 ;;		Unchanged: 0/0
 39783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39788 ;;Total ram usage:        0 bytes
 39789 ;; Hardware stack levels used:    1
 39790 ;; This function calls:
 39791 ;;		Nothing
 39792 ;; This function is called by:
 39793 ;;		_main
 39794 ;;		_INT2_CallBack
 39795 ;; This function uses a non-reentrant model
 39796 ;;
 39797                           
 39798                           	psect	text172
 39799  01C666                     __ptext172:
 39800                           	opt callstack 0
 39801  01C666                     _rightCapTouchHandler:
 39802                           	opt callstack 14
 39803                           
 39804                           ;cap_touch_int.c: 22: OLED_Frame++;
 39805                           
 39806                           ;incstack = 0
 39807  01C666  0102               	movlb	2	; () banked
 39808  01C668  2BD7               	incf	_OLED_Frame& (0+255),f,b
 39809                           
 39810                           ; BSR set to: 2
 39811                           ;cap_touch_int.c: 23: if (OLED_Frame == 25 + 1) OLED_Frame = 4;
 39812  01C66A  0E1A               	movlw	26
 39813  01C66C  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 39814  01C66E  A4D8               	btfss	status,2,c
 39815  01C670  D002               	goto	i2l1625
 39816                           
 39817                           ; BSR set to: 2
 39818  01C672  0E04               	movlw	4
 39819  01C674  6FD7               	movwf	_OLED_Frame& (0+255),b
 39820  01C676                     i2l1625:
 39821                           
 39822                           ; BSR set to: 2
 39823                           ;cap_touch_int.c: 24: OLED_update_flag = 1;
 39824  01C676  0E01               	movlw	1
 39825  01C678  6FD6               	movwf	_OLED_update_flag& (0+255),b
 39826                           
 39827                           ; BSR set to: 2
 39828  01C67A  0012               	return		;funcret
 39829  01C67C                     __end_of_rightCapTouchHandler:
 39830                           	opt callstack 0
 39831                           
 39832 ;; *************** function _INT1_ISR *****************
 39833 ;; Defined at:
 39834 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 39835 ;; Parameters:    Size  Location     Type
 39836 ;;		None
 39837 ;; Auto vars:     Size  Location     Type
 39838 ;;		None
 39839 ;; Return value:  Size  Location     Type
 39840 ;;                  1    wreg      void 
 39841 ;; Registers used:
 39842 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39843 ;; Tracked objects:
 39844 ;;		On entry : 0/0
 39845 ;;		On exit  : 0/0
 39846 ;;		Unchanged: 0/0
 39847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39852 ;;Total ram usage:        0 bytes
 39853 ;; Hardware stack levels used:    1
 39854 ;; Hardware stack levels required when called:    2
 39855 ;; This function calls:
 39856 ;;		_INT1_CallBack
 39857 ;; This function is called by:
 39858 ;;		_INTERRUPT_InterruptManagerHigh
 39859 ;; This function uses a non-reentrant model
 39860 ;;
 39861                           
 39862                           	psect	text173
 39863  01C896                     __ptext173:
 39864                           	opt callstack 0
 39865  01C896                     _INT1_ISR:
 39866                           	opt callstack 14
 39867                           
 39868                           ;ext_int.c: 35: (PIR0bits.INT1IF = 0);
 39869                           
 39870                           ; BSR set to: 2
 39871                           ;incstack = 0
 39872  01C896  010E               	movlb	14	; () banked
 39873  01C898  93CA               	bcf	202,1,b	;volatile
 39874                           
 39875                           ; BSR set to: 14
 39876                           ;ext_int.c: 38: INT1_CallBack();
 39877  01C89A  ECE4  F0E1         	call	_INT1_CallBack	;wreg free
 39878  01C89E  0012               	return		;funcret
 39879  01C8A0                     __end_of_INT1_ISR:
 39880                           	opt callstack 0
 39881                           
 39882 ;; *************** function _INT1_CallBack *****************
 39883 ;; Defined at:
 39884 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 39885 ;; Parameters:    Size  Location     Type
 39886 ;;		None
 39887 ;; Auto vars:     Size  Location     Type
 39888 ;;		None
 39889 ;; Return value:  Size  Location     Type
 39890 ;;                  1    wreg      void 
 39891 ;; Registers used:
 39892 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39893 ;; Tracked objects:
 39894 ;;		On entry : 0/0
 39895 ;;		On exit  : 0/0
 39896 ;;		Unchanged: 0/0
 39897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39902 ;;Total ram usage:        0 bytes
 39903 ;; Hardware stack levels used:    1
 39904 ;; Hardware stack levels required when called:    1
 39905 ;; This function calls:
 39906 ;;		Absolute function
 39907 ;;		_INT1_DefaultInterruptHandler
 39908 ;;		_leftCapTouchHandler
 39909 ;; This function is called by:
 39910 ;;		_INT1_ISR
 39911 ;; This function uses a non-reentrant model
 39912 ;;
 39913                           
 39914                           	psect	text174
 39915  01C3C8                     __ptext174:
 39916                           	opt callstack 0
 39917  01C3C8                     _INT1_CallBack:
 39918                           	opt callstack 14
 39919                           
 39920                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 39921                           
 39922                           ;incstack = 0
 39923  01C3C8  0101               	movlb	1	; () banked
 39924  01C3CA  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 39925  01C3CC  1187               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39926  01C3CE  1188               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39927  01C3D0  B4D8               	btfsc	status,2,c
 39928  01C3D2  0012               	return	
 39929                           
 39930                           ; BSR set to: 1
 39931                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 39932  01C3D4  D801               	call	i2u1800_48
 39933  01C3D6  0012               	return	
 39934  01C3D8                     i2u1800_48:
 39935  01C3D8  0005               	push	
 39936  01C3DA  6EFA               	movwf	pclath,c
 39937  01C3DC  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 39938  01C3DE  6EFD               	movwf	tosl,c
 39939  01C3E0  5187               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39940  01C3E2  6EFE               	movwf	tosh,c
 39941  01C3E4  5188               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39942  01C3E6  6EFF               	movwf	tosu,c
 39943  01C3E8  50FA               	movf	pclath,w,c
 39944  01C3EA  0012               	return		;indir
 39945  01C3EC                     __end_of_INT1_CallBack:
 39946                           	opt callstack 0
 39947                           
 39948 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39949 ;; Defined at:
 39950 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 39951 ;; Parameters:    Size  Location     Type
 39952 ;;		None
 39953 ;; Auto vars:     Size  Location     Type
 39954 ;;		None
 39955 ;; Return value:  Size  Location     Type
 39956 ;;                  1    wreg      void 
 39957 ;; Registers used:
 39958 ;;		None
 39959 ;; Tracked objects:
 39960 ;;		On entry : 0/0
 39961 ;;		On exit  : 0/0
 39962 ;;		Unchanged: 0/0
 39963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39968 ;;Total ram usage:        0 bytes
 39969 ;; Hardware stack levels used:    1
 39970 ;; This function calls:
 39971 ;;		Nothing
 39972 ;; This function is called by:
 39973 ;;		_EXT_INT_Initialize
 39974 ;;		_INT1_CallBack
 39975 ;; This function uses a non-reentrant model
 39976 ;;
 39977                           
 39978                           	psect	text175
 39979  01C906                     __ptext175:
 39980                           	opt callstack 0
 39981  01C906                     _INT1_DefaultInterruptHandler:
 39982                           	opt callstack 14
 39983                           
 39984                           ;incstack = 0
 39985  01C906  0012               	return		;funcret
 39986  01C908                     __end_of_INT1_DefaultInterruptHandler:
 39987                           	opt callstack 0
 39988                           
 39989 ;; *************** function _leftCapTouchHandler *****************
 39990 ;; Defined at:
 39991 ;;		line 11 in file "cap_touch_int.c"
 39992 ;; Parameters:    Size  Location     Type
 39993 ;;		None
 39994 ;; Auto vars:     Size  Location     Type
 39995 ;;		None
 39996 ;; Return value:  Size  Location     Type
 39997 ;;                  1    wreg      void 
 39998 ;; Registers used:
 39999 ;;		wreg, status,2, status,0
 40000 ;; Tracked objects:
 40001 ;;		On entry : 0/0
 40002 ;;		On exit  : 0/0
 40003 ;;		Unchanged: 0/0
 40004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40009 ;;Total ram usage:        0 bytes
 40010 ;; Hardware stack levels used:    1
 40011 ;; This function calls:
 40012 ;;		Nothing
 40013 ;; This function is called by:
 40014 ;;		_main
 40015 ;;		_INT1_CallBack
 40016 ;; This function uses a non-reentrant model
 40017 ;;
 40018                           
 40019                           	psect	text176
 40020  01C67C                     __ptext176:
 40021                           	opt callstack 0
 40022  01C67C                     _leftCapTouchHandler:
 40023                           	opt callstack 14
 40024                           
 40025                           ;cap_touch_int.c: 13: OLED_Frame--;
 40026                           
 40027                           ;incstack = 0
 40028  01C67C  0102               	movlb	2	; () banked
 40029  01C67E  07D7               	decf	_OLED_Frame& (0+255),f,b
 40030                           
 40031                           ; BSR set to: 2
 40032                           ;cap_touch_int.c: 14: if (OLED_Frame == 4 - 1) OLED_Frame = 25;
 40033  01C680  0E03               	movlw	3
 40034  01C682  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 40035  01C684  A4D8               	btfss	status,2,c
 40036  01C686  D002               	goto	i2l1621
 40037                           
 40038                           ; BSR set to: 2
 40039  01C688  0E19               	movlw	25
 40040  01C68A  6FD7               	movwf	_OLED_Frame& (0+255),b
 40041  01C68C                     i2l1621:
 40042                           
 40043                           ; BSR set to: 2
 40044                           ;cap_touch_int.c: 15: OLED_update_flag = 1;
 40045  01C68C  0E01               	movlw	1
 40046  01C68E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 40047                           
 40048                           ; BSR set to: 2
 40049  01C690  0012               	return		;funcret
 40050  01C692                     __end_of_leftCapTouchHandler:
 40051                           	opt callstack 0
 40052                           
 40053 ;; *************** function _EUSART2_Transmit_ISR *****************
 40054 ;; Defined at:
 40055 ;;		line 187 in file "mcc_generated_files/eusart2.c"
 40056 ;; Parameters:    Size  Location     Type
 40057 ;;		None
 40058 ;; Auto vars:     Size  Location     Type
 40059 ;;		None
 40060 ;; Return value:  Size  Location     Type
 40061 ;;                  1    wreg      void 
 40062 ;; Registers used:
 40063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40064 ;; Tracked objects:
 40065 ;;		On entry : 0/0
 40066 ;;		On exit  : 0/0
 40067 ;;		Unchanged: 0/0
 40068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40073 ;;Total ram usage:        0 bytes
 40074 ;; Hardware stack levels used:    1
 40075 ;; This function calls:
 40076 ;;		Nothing
 40077 ;; This function is called by:
 40078 ;;		_EUSART2_Initialize
 40079 ;;		_INTERRUPT_InterruptManagerHigh
 40080 ;; This function uses a non-reentrant model
 40081 ;;
 40082                           
 40083                           	psect	text177
 40084  01BBD4                     __ptext177:
 40085                           	opt callstack 0
 40086  01BBD4                     _EUSART2_Transmit_ISR:
 40087                           	opt callstack 16
 40088                           
 40089                           ;eusart2.c: 191: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 40090                           
 40091                           ; BSR set to: 2
 40092                           ;incstack = 0
 40093  01BBD4  0E00               	movlw	0
 40094  01BBD6  0101               	movlb	1	; () banked
 40095  01BBD8  5D8F               	subwf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 40096  01BBDA  0E04               	movlw	4
 40097  01BBDC  5990               	subwfb	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 40098  01BBDE  B0D8               	btfsc	status,0,c
 40099  01BBE0  D019               	goto	i2l136
 40100                           
 40101                           ; BSR set to: 1
 40102                           ;eusart2.c: 192: {;eusart2.c: 193: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 40103  01BBE2  0EC8               	movlw	low _eusart2TxBuffer
 40104  01BBE4  2591               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 40105  01BBE6  6ED9               	movwf	fsr2l,c
 40106  01BBE8  0E04               	movlw	high _eusart2TxBuffer
 40107  01BBEA  2192               	addwfc	(_eusart2TxTail+1)& (0+255),w,b	;volatile
 40108  01BBEC  6EDA               	movwf	fsr2h,c
 40109  01BBEE  50DF               	movf	indf2,w,c
 40110  01BBF0  010E               	movlb	14	; () banked
 40111  01BBF2  6F9A               	movwf	154,b	;volatile
 40112                           
 40113                           ; BSR set to: 14
 40114  01BBF4  0101               	movlb	1	; () banked
 40115  01BBF6  4B91               	infsnz	_eusart2TxTail& (0+255),f,b	;volatile
 40116  01BBF8  2B92               	incf	(_eusart2TxTail+1)& (0+255),f,b	;volatile
 40117                           
 40118                           ; BSR set to: 1
 40119                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 40120  01BBFA  0E00               	movlw	0
 40121  01BBFC  5D91               	subwf	_eusart2TxTail& (0+255),w,b	;volatile
 40122  01BBFE  0E04               	movlw	4
 40123  01BC00  5992               	subwfb	(_eusart2TxTail+1)& (0+255),w,b	;volatile
 40124  01BC02  A0D8               	btfss	status,0,c
 40125  01BC04  D004               	goto	i2l15691
 40126                           
 40127                           ; BSR set to: 1
 40128                           ;eusart2.c: 195: {;eusart2.c: 196: eusart2TxTail = 0;
 40129  01BC06  0E00               	movlw	0
 40130  01BC08  6F92               	movwf	(_eusart2TxTail+1)& (0+255),b	;volatile
 40131  01BC0A  0E00               	movlw	0
 40132  01BC0C  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 40133  01BC0E                     i2l15691:
 40134                           
 40135                           ; BSR set to: 1
 40136                           ;eusart2.c: 197: };eusart2.c: 198: eusart2TxBufferRemaining++;
 40137  01BC0E  4B8F               	infsnz	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 40138  01BC10  2B90               	incf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 40139                           
 40140                           ;eusart2.c: 199: }
 40141  01BC12  0012               	return	
 40142  01BC14                     i2l136:
 40143                           
 40144                           ; BSR set to: 1
 40145                           ;eusart2.c: 200: else;eusart2.c: 201: {;eusart2.c: 202: PIE3bits.TX2IE = 0;
 40146  01BC14  010E               	movlb	14	; () banked
 40147  01BC16  9DC5               	bcf	197,6,b	;volatile
 40148  01BC18  0012               	return		;funcret
 40149  01BC1A                     __end_of_EUSART2_Transmit_ISR:
 40150                           	opt callstack 0
 40151                           
 40152 ;; *************** function _EUSART2_Receive_ISR *****************
 40153 ;; Defined at:
 40154 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 40155 ;; Parameters:    Size  Location     Type
 40156 ;;		None
 40157 ;; Auto vars:     Size  Location     Type
 40158 ;;		None
 40159 ;; Return value:  Size  Location     Type
 40160 ;;                  1    wreg      void 
 40161 ;; Registers used:
 40162 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40163 ;; Tracked objects:
 40164 ;;		On entry : 0/0
 40165 ;;		On exit  : 0/0
 40166 ;;		Unchanged: 0/0
 40167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40172 ;;Total ram usage:        0 bytes
 40173 ;; Hardware stack levels used:    1
 40174 ;; Hardware stack levels required when called:    4
 40175 ;; This function calls:
 40176 ;;		i2_printf
 40177 ;; This function is called by:
 40178 ;;		_EUSART2_Initialize
 40179 ;;		_INTERRUPT_InterruptManagerHigh
 40180 ;; This function uses a non-reentrant model
 40181 ;;
 40182                           
 40183                           	psect	text178
 40184  01AB14                     __ptext178:
 40185                           	opt callstack 0
 40186  01AB14                     _EUSART2_Receive_ISR:
 40187                           	opt callstack 12
 40188                           
 40189                           ;eusart2.c: 209: if(1 == RC2STAbits.OERR)
 40190                           
 40191                           ;incstack = 0
 40192  01AB14  010E               	movlb	14	; () banked
 40193  01AB16  A39D               	btfss	157,1,b	;volatile
 40194  01AB18  D005               	goto	i2l21451
 40195                           
 40196                           ; BSR set to: 14
 40197                           ;eusart2.c: 210: {;eusart2.c: 213: RC2STAbits.CREN = 0;
 40198  01AB1A  999D               	bcf	157,4,b	;volatile
 40199                           
 40200                           ;eusart2.c: 214: RC2STAbits.CREN = 1;
 40201  01AB1C  899D               	bsf	157,4,b	;volatile
 40202                           
 40203                           ; BSR set to: 14
 40204                           ;eusart2.c: 215: error_handler.USB_UART_COMM_error_flag = 1;
 40205  01AB1E  0E01               	movlw	1
 40206  01AB20  0100               	movlb	0	; () banked
 40207  01AB22  6FC0               	movwf	(_error_handler+7)& (0+255),b
 40208  01AB24                     i2l21451:
 40209                           
 40210                           ;eusart2.c: 216: };eusart2.c: 219: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 40211  01AB24  0E80               	movlw	low _eusart2RxBuffer
 40212  01AB26  0100               	movlb	0	; () banked
 40213  01AB28  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40214  01AB2A  6ED9               	movwf	fsr2l,c
 40215  01AB2C  6ADA               	clrf	fsr2h,c
 40216  01AB2E  0E04               	movlw	high _eusart2RxBuffer
 40217  01AB30  22DA               	addwfc	fsr2h,f,c
 40218  01AB32  CE99 FFDF          	movff	3737,indf2	;volatile
 40219                           
 40220                           ; BSR set to: 0
 40221  01AB36  2BDC               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 40222                           
 40223                           ; BSR set to: 0
 40224                           ;eusart2.c: 220: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 40225  01AB38  0E3F               	movlw	63
 40226  01AB3A  65DC               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 40227  01AB3C  D002               	goto	i2l21459
 40228                           
 40229                           ; BSR set to: 0
 40230                           ;eusart2.c: 221: {;eusart2.c: 222: eusart2RxHead = 0;
 40231  01AB3E  0E00               	movlw	0
 40232  01AB40  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 40233  01AB42                     i2l21459:
 40234                           
 40235                           ; BSR set to: 0
 40236                           ;eusart2.c: 223: };eusart2.c: 224: eusart2RxCount++;
 40237  01AB42  0101               	movlb	1	; () banked
 40238  01AB44  2B97               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 40239                           
 40240                           ; BSR set to: 1
 40241                           ;eusart2.c: 226: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 40242  01AB46  0E0A               	movlw	10
 40243  01AB48  010E               	movlb	14	; () banked
 40244  01AB4A  1999               	xorwf	153,w,b	;volatile
 40245  01AB4C  B4D8               	btfsc	status,2,c
 40246  01AB4E  D004               	goto	i2u2750_40
 40247                           
 40248                           ; BSR set to: 14
 40249  01AB50  0E0D               	movlw	13
 40250  01AB52  1999               	xorwf	153,w,b	;volatile
 40251  01AB54  A4D8               	btfss	status,2,c
 40252  01AB56  D006               	goto	i2l144
 40253  01AB58                     i2u2750_40:
 40254                           
 40255                           ; BSR set to: 14
 40256                           ;eusart2.c: 228: eusart2RxStringReady = 1;
 40257  01AB58  0100               	movlb	0	; () banked
 40258  01AB5A  81FD               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40259                           
 40260                           ; BSR set to: 0
 40261                           ;eusart2.c: 231: RC2REG = 0;
 40262  01AB5C  0E00               	movlw	0
 40263  01AB5E  010E               	movlb	14	; () banked
 40264  01AB60  6F99               	movwf	153,b	;volatile
 40265                           
 40266                           ;eusart2.c: 233: }
 40267  01AB62  D002               	goto	i2l21467
 40268  01AB64                     i2l144:
 40269                           
 40270                           ; BSR set to: 14
 40271                           ;eusart2.c: 235: else {;eusart2.c: 237: eusart2RxStringReady = 0;
 40272  01AB64  0100               	movlb	0	; () banked
 40273  01AB66  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40274  01AB68                     i2l21467:
 40275                           
 40276                           ;eusart2.c: 239: };eusart2.c: 242: if((RC2REG == (int) '\b')) {
 40277  01AB68  0E08               	movlw	8
 40278  01AB6A  010E               	movlb	14	; () banked
 40279  01AB6C  1999               	xorwf	153,w,b	;volatile
 40280  01AB6E  A4D8               	btfss	status,2,c
 40281  01AB70  0012               	return	
 40282                           
 40283                           ; BSR set to: 14
 40284                           ;eusart2.c: 244: eusart2RxBuffer[eusart2RxHead] = '\0';
 40285  01AB72  0E80               	movlw	low _eusart2RxBuffer
 40286  01AB74  0100               	movlb	0	; () banked
 40287  01AB76  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40288  01AB78  6ED9               	movwf	fsr2l,c
 40289  01AB7A  6ADA               	clrf	fsr2h,c
 40290  01AB7C  0E04               	movlw	high _eusart2RxBuffer
 40291  01AB7E  22DA               	addwfc	fsr2h,f,c
 40292  01AB80  0E00               	movlw	0
 40293  01AB82  6EDF               	movwf	indf2,c
 40294                           
 40295                           ; BSR set to: 0
 40296                           ;eusart2.c: 245: eusart2RxHead--;
 40297  01AB84  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40298                           
 40299                           ; BSR set to: 0
 40300                           ;eusart2.c: 248: printf("\033[K");
 40301  01AB86  0EC7               	movlw	low STR_1
 40302  01AB88  6FA4               	movwf	i2printf@f& (0+255),b
 40303  01AB8A  0EFF               	movlw	high STR_1
 40304  01AB8C  6FA5               	movwf	(i2printf@f+1)& (0+255),b
 40305  01AB8E  EC8C  F0DF         	call	i2_printf	;wreg free
 40306                           
 40307                           ;eusart2.c: 250: if(eusart2RxHead != eusart2RxTail) {
 40308  01AB92  0101               	movlb	1	; () banked
 40309  01AB94  5198               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 40310  01AB96  0100               	movlb	0	; () banked
 40311  01AB98  19DC               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 40312  01AB9A  B4D8               	btfsc	status,2,c
 40313  01AB9C  D009               	goto	i2l21481
 40314                           
 40315                           ; BSR set to: 0
 40316                           ;eusart2.c: 252: eusart2RxBuffer[eusart2RxHead] = '\0';
 40317  01AB9E  0E80               	movlw	low _eusart2RxBuffer
 40318  01ABA0  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40319  01ABA2  6ED9               	movwf	fsr2l,c
 40320  01ABA4  6ADA               	clrf	fsr2h,c
 40321  01ABA6  0E04               	movlw	high _eusart2RxBuffer
 40322  01ABA8  22DA               	addwfc	fsr2h,f,c
 40323  01ABAA  0E00               	movlw	0
 40324  01ABAC  6EDF               	movwf	indf2,c
 40325                           
 40326                           ; BSR set to: 0
 40327                           ;eusart2.c: 253: eusart2RxHead--;
 40328  01ABAE  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40329  01ABB0                     i2l21481:
 40330                           
 40331                           ; BSR set to: 0
 40332                           ;eusart2.c: 255: };eusart2.c: 257: RC2REG = 0;
 40333  01ABB0  0E00               	movlw	0
 40334  01ABB2  010E               	movlb	14	; () banked
 40335  01ABB4  6F99               	movwf	153,b	;volatile
 40336                           
 40337                           ; BSR set to: 14
 40338  01ABB6  0012               	return		;funcret
 40339  01ABB8                     __end_of_EUSART2_Receive_ISR:
 40340                           	opt callstack 0
 40341                           
 40342 ;; *************** function i2_printf *****************
 40343 ;; Defined at:
 40344 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 40345 ;; Parameters:    Size  Location     Type
 40346 ;;  f               2   68[BANK0 ] PTR const unsigned char 
 40347 ;;		 -> STR_355(60), STR_354(24), STR_353(24), STR_352(24), 
 40348 ;;		 -> STR_351(27), STR_350(20), STR_349(35), STR_348(34), 
 40349 ;;		 -> STR_347(37), STR_346(34), STR_345(36), STR_344(35), 
 40350 ;;		 -> STR_343(33), STR_342(35), STR_341(20), STR_340(23), 
 40351 ;;		 -> STR_339(20), STR_338(22), STR_337(21), STR_336(19), 
 40352 ;;		 -> STR_335(21), STR_334(27), STR_333(18), STR_332(11), 
 40353 ;;		 -> terminalTextAttributes@print_string(16), STR_302(4), STR_301(4), STR_300(4), 
 40354 ;;		 -> STR_299(4), STR_298(5), STR_290(47), STR_289(99), 
 40355 ;;		 -> STR_288(65), STR_287(37), STR_286(58), STR_285(59), 
 40356 ;;		 -> STR_284(58), STR_283(30), STR_282(71), STR_281(48), 
 40357 ;;		 -> STR_280(67), STR_279(45), STR_278(39), STR_277(8), 
 40358 ;;		 -> STR_276(69), STR_275(8), STR_274(67), STR_273(53), 
 40359 ;;		 -> STR_272(66), STR_271(62), STR_270(23), STR_269(62), 
 40360 ;;		 -> STR_268(55), STR_267(26), STR_266(51), STR_265(47), 
 40361 ;;		 -> STR_264(23), STR_263(8), STR_262(54), STR_261(58), 
 40362 ;;		 -> STR_260(66), STR_259(43), STR_258(32), STR_257(64), 
 40363 ;;		 -> STR_256(30), STR_255(31), STR_254(63), STR_253(33), 
 40364 ;;		 -> STR_252(35), STR_251(37), STR_250(40), STR_249(28), 
 40365 ;;		 -> STR_248(46), STR_247(31), STR_246(52), STR_245(14), 
 40366 ;;		 -> STR_244(28), STR_243(50), STR_242(29), STR_241(36), 
 40367 ;;		 -> STR_240(45), STR_239(88), STR_238(37), STR_237(3), 
 40368 ;;		 -> STR_236(30), STR_235(46), STR_234(39), STR_233(62), 
 40369 ;;		 -> STR_232(57), STR_231(653), STR_230(22), STR_229(3), 
 40370 ;;		 -> STR_227(29), STR_225(3), STR_224(47), STR_223(3), 
 40371 ;;		 -> STR_220(24), STR_218(23), STR_216(23), STR_214(3), 
 40372 ;;		 -> STR_213(3), STR_212(54), STR_211(3), STR_210(56), 
 40373 ;;		 -> STR_209(3), STR_208(60), STR_207(61), STR_206(3), 
 40374 ;;		 -> STR_205(62), STR_204(3), STR_203(50), STR_202(3), 
 40375 ;;		 -> STR_201(45), STR_200(3), STR_198(54), STR_196(4), 
 40376 ;;		 -> STR_195(5), STR_193(4), STR_192(5), STR_12(34), 
 40377 ;;		 -> STR_11(29), STR_10(47), STR_9(30), STR_8(46), 
 40378 ;;		 -> STR_7(39), STR_6(62), STR_5(57), STR_4(39), 
 40379 ;;		 -> STR_3(44), STR_2(52), STR_1(4), 
 40380 ;; Auto vars:     Size  Location     Type
 40381 ;;  printf          5   72[BANK0 ] struct __prbuf
 40382 ;;  printf          2   70[BANK0 ] PTR void [1]
 40383 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 40384 ;; Return value:  Size  Location     Type
 40385 ;;                  2   68[BANK0 ] int 
 40386 ;; Registers used:
 40387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40388 ;; Tracked objects:
 40389 ;;		On entry : 0/0
 40390 ;;		On exit  : 0/0
 40391 ;;		Unchanged: 0/0
 40392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40394 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40396 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40397 ;;Total ram usage:        9 bytes
 40398 ;; Hardware stack levels used:    1
 40399 ;; Hardware stack levels required when called:    3
 40400 ;; This function calls:
 40401 ;;		i2__doprnt
 40402 ;; This function is called by:
 40403 ;;		_EUSART2_Receive_ISR
 40404 ;; This function uses a non-reentrant model
 40405 ;;
 40406                           
 40407                           	psect	text179
 40408  01BF18                     __ptext179:
 40409                           	opt callstack 0
 40410  01BF18                     i2_printf:
 40411                           	opt callstack 12
 40412                           
 40413                           ; BSR set to: 14
 40414                           ;incstack = 0
 40415  01BF18  0E00               	movlw	0
 40416  01BF1A  0100               	movlb	0	; () banked
 40417  01BF1C  6FA8               	movwf	i2printf@pb& (0+255),b
 40418  01BF1E  0E00               	movlw	0
 40419  01BF20  6FA9               	movwf	(i2printf@pb+1)& (0+255),b
 40420  01BF22  0EA0               	movlw	low i2_putch
 40421  01BF24  6FAA               	movwf	(i2printf@pb+2)& (0+255),b
 40422  01BF26  0EC8               	movlw	high i2_putch
 40423  01BF28  6FAB               	movwf	(i2printf@pb+3)& (0+255),b
 40424  01BF2A  0E01               	movlw	low (i2_putch shr (0+16))
 40425  01BF2C  6FAC               	movwf	(i2printf@pb+4)& (0+255),b
 40426  01BF2E  0EA6               	movlw	low (?i2_printf+2)
 40427  01BF30  6FA6               	movwf	i2printf@ap& (0+255),b
 40428  01BF32  0E00               	movlw	high (?i2_printf+2)
 40429  01BF34  6FA7               	movwf	(i2printf@ap+1)& (0+255),b
 40430                           
 40431                           ; BSR set to: 0
 40432                           ;	Return value of i2_printf is never used
 40433  01BF36  0EA8               	movlw	low i2printf@pb
 40434  01BF38  6F6C               	movwf	i2__doprnt@pb& (0+255),b
 40435  01BF3A  0E00               	movlw	high i2printf@pb
 40436  01BF3C  6F6D               	movwf	(i2__doprnt@pb+1)& (0+255),b
 40437  01BF3E  C0A4  F06E         	movff	i2printf@f,i2__doprnt@f
 40438  01BF42  C0A5  F06F         	movff	i2printf@f+1,i2__doprnt@f+1
 40439  01BF46  0EA6               	movlw	low i2printf@ap
 40440  01BF48  6F70               	movwf	i2__doprnt@ap& (0+255),b
 40441  01BF4A  0E00               	movlw	high i2printf@ap
 40442  01BF4C  6F71               	movwf	(i2__doprnt@ap+1)& (0+255),b
 40443  01BF4E  EC92  F08B         	call	i2__doprnt	;wreg free
 40444  01BF52  0012               	return		;funcret
 40445  01BF54                     __end_ofi2_printf:
 40446                           	opt callstack 0
 40447                           
 40448 ;; *************** function i2__doprnt *****************
 40449 ;; Defined at:
 40450 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 40451 ;; Parameters:    Size  Location     Type
 40452 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 40453 ;;		 -> i2printf@pb(5), sprintf@pb(5), printf@pb(5), 
 40454 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 40455 ;;		 -> STR_358(11), STR_355(60), STR_354(24), STR_353(24), 
 40456 ;;		 -> STR_352(24), STR_351(27), STR_350(20), STR_349(35), 
 40457 ;;		 -> STR_348(34), STR_347(37), STR_346(34), STR_345(36), 
 40458 ;;		 -> STR_344(35), STR_343(33), STR_342(35), STR_341(20), 
 40459 ;;		 -> STR_340(23), STR_339(20), STR_338(22), STR_337(21), 
 40460 ;;		 -> STR_336(19), STR_335(21), STR_334(27), STR_333(18), 
 40461 ;;		 -> STR_332(11), terminalTextAttributes@print_string(16), STR_302(4), STR_301(4), 
 40462 ;;		 -> STR_300(4), STR_299(4), STR_298(5), STR_297(5), 
 40463 ;;		 -> STR_296(9), STR_295(9), STR_294(9), STR_293(8), 
 40464 ;;		 -> STR_292(9), STR_291(9), STR_290(47), STR_289(99), 
 40465 ;;		 -> STR_288(65), STR_287(37), STR_286(58), STR_285(59), 
 40466 ;;		 -> STR_284(58), STR_283(30), STR_282(71), STR_281(48), 
 40467 ;;		 -> STR_280(67), STR_279(45), STR_278(39), STR_277(8), 
 40468 ;;		 -> STR_276(69), STR_275(8), STR_274(67), STR_273(53), 
 40469 ;;		 -> STR_272(66), STR_271(62), STR_270(23), STR_269(62), 
 40470 ;;		 -> STR_268(55), STR_267(26), STR_266(51), STR_265(47), 
 40471 ;;		 -> STR_264(23), STR_263(8), STR_262(54), STR_261(58), 
 40472 ;;		 -> STR_260(66), STR_259(43), STR_258(32), STR_257(64), 
 40473 ;;		 -> STR_256(30), STR_255(31), STR_254(63), STR_253(33), 
 40474 ;;		 -> STR_252(35), STR_251(37), STR_250(40), STR_249(28), 
 40475 ;;		 -> STR_248(46), STR_247(31), STR_246(52), STR_245(14), 
 40476 ;;		 -> STR_244(28), STR_243(50), STR_242(29), STR_241(36), 
 40477 ;;		 -> STR_240(45), STR_239(88), STR_238(37), STR_237(3), 
 40478 ;;		 -> STR_236(30), STR_235(46), STR_234(39), STR_233(62), 
 40479 ;;		 -> STR_232(57), STR_231(653), STR_230(22), STR_229(3), 
 40480 ;;		 -> STR_227(29), STR_225(3), STR_224(47), STR_223(3), 
 40481 ;;		 -> STR_220(24), STR_218(23), STR_216(23), STR_214(3), 
 40482 ;;		 -> STR_213(3), STR_212(54), STR_211(3), STR_210(56), 
 40483 ;;		 -> STR_209(3), STR_208(60), STR_207(61), STR_206(3), 
 40484 ;;		 -> STR_205(62), STR_204(3), STR_203(50), STR_202(3), 
 40485 ;;		 -> STR_201(45), STR_200(3), STR_198(54), STR_196(4), 
 40486 ;;		 -> STR_195(5), STR_193(4), STR_192(5), STR_182(7), 
 40487 ;;		 -> STR_180(5), STR_173(4), STR_168(4), STR_163(11), 
 40488 ;;		 -> STR_158(11), STR_157(11), STR_156(11), STR_155(11), 
 40489 ;;		 -> STR_154(9), STR_150(11), STR_148(11), STR_147(11), 
 40490 ;;		 -> STR_146(11), STR_145(11), STR_144(9), STR_143(11), 
 40491 ;;		 -> STR_142(9), STR_141(8), STR_140(9), STR_139(8), 
 40492 ;;		 -> STR_138(9), STR_134(5), STR_124(8), STR_120(8), 
 40493 ;;		 -> STR_116(8), STR_112(8), STR_108(9), STR_103(8), 
 40494 ;;		 -> STR_98(8), STR_94(8), STR_89(8), STR_85(8), 
 40495 ;;		 -> STR_81(8), STR_68(7), STR_66(5), STR_59(11), 
 40496 ;;		 -> STR_58(10), STR_57(13), STR_56(12), STR_55(11), 
 40497 ;;		 -> STR_54(10), STR_53(10), STR_52(9), STR_51(11), 
 40498 ;;		 -> STR_50(10), STR_12(34), STR_11(29), STR_10(47), 
 40499 ;;		 -> STR_9(30), STR_8(46), STR_7(39), STR_6(62), 
 40500 ;;		 -> STR_5(57), STR_4(39), STR_3(44), STR_2(52), 
 40501 ;;		 -> STR_1(4), 
 40502 ;;  ap              2   16[BANK0 ] PTR PTR void 
 40503 ;;		 -> i2printf@ap(2), sprintf@ap(2), printf@ap(2), 
 40504 ;; Auto vars:     Size  Location     Type
 40505 ;;  _doprnt         4   57[BANK0 ] unsigned long 
 40506 ;;  _doprnt         4   53[BANK0 ] unsigned long 
 40507 ;;  _doprnt         4   49[BANK0 ] struct .
 40508 ;;  _doprnt         2   65[BANK0 ] unsigned short 
 40509 ;;  _doprnt         2   63[BANK0 ] int 
 40510 ;;  _doprnt         2   61[BANK0 ] int 
 40511 ;;  _doprnt         2   47[BANK0 ] int 
 40512 ;;  _doprnt         2   45[BANK0 ] unsigned int 
 40513 ;;  _doprnt         2   43[BANK0 ] PTR const unsigned char 
 40514 ;;		 -> i2__doprnt@c(1), ?_sprintf(2), ?_printf(2), ftoa@buf(17), 
 40515 ;;		 -> STR_356(7), _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), 
 40516 ;;		 -> OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTim
      +e@buff(20), 
 40517 ;;		 -> getStringSecondsAsTime@return_string(40), STR_49(10), STR_48(13), STR_47(13), 
 40518 ;;		 -> STR_46(12), STR_45(12), STR_44(13), STR_43(12), 
 40519 ;;		 -> STR_32(16), STR_31(22), STR_30(21), STR_29(27), 
 40520 ;;		 -> STR_28(41), STR_27(32), STR_26(19), STR_25(16), 
 40521 ;;		 -> STR_24(15), STR_23(16), STR_17(10), STR_16(6), 
 40522 ;;		 -> STR_15(14), STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), 
 40523 ;;		 -> LM73Convert@POS5_Conv(2), LM73Convert@QI_Conv(2), NULL(0), 
 40524 ;;  _doprnt         1   67[BANK0 ] unsigned char 
 40525 ;;  _doprnt         1   26[BANK0 ] unsigned char 
 40526 ;;  _doprnt         1    0        unsigned char 
 40527 ;; Return value:  Size  Location     Type
 40528 ;;                  2   12[BANK0 ] int 
 40529 ;; Registers used:
 40530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40531 ;; Tracked objects:
 40532 ;;		On entry : 0/0
 40533 ;;		On exit  : 0/0
 40534 ;;		Unchanged: 0/0
 40535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40536 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40537 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40538 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40539 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40540 ;;Total ram usage:       56 bytes
 40541 ;; Hardware stack levels used:    1
 40542 ;; Hardware stack levels required when called:    2
 40543 ;; This function calls:
 40544 ;;		Absolute function
 40545 ;;		i2___awdiv
 40546 ;;		i2___fladd
 40547 ;;		i2___fleq
 40548 ;;		i2___flge
 40549 ;;		i2___flmul
 40550 ;;		i2___flneg
 40551 ;;		i2___flsub
 40552 ;;		i2___fltol
 40553 ;;		i2___lldiv
 40554 ;;		i2___llmod
 40555 ;;		i2___wmul
 40556 ;;		i2___xxtofl
 40557 ;;		i2__div_to_l_
 40558 ;;		i2__tdiv_to_l_
 40559 ;;		i2_fround
 40560 ;;		i2_isdigit
 40561 ;;		i2_putch
 40562 ;;		i2_scale
 40563 ;; This function is called by:
 40564 ;;		i2_printf
 40565 ;; This function uses a non-reentrant model
 40566 ;;
 40567                           
 40568                           	psect	text180
 40569  011724                     __ptext180:
 40570                           	opt callstack 0
 40571  011724                     i2__doprnt:
 40572                           	opt callstack 12
 40573                           
 40574                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 40575                           
 40576                           ;incstack = 0
 40577  011724  EFFB  F096         	goto	i2u2693_40
 40578  011728                     i2l20191:
 40579                           
 40580                           ; BSR set to: 0
 40581                           ;doprnt.c: 550: if(c != '%')
 40582  011728  0E25               	movlw	37
 40583  01172A  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 40584  01172C  B4D8               	btfsc	status,2,c
 40585  01172E  D036               	goto	i2l20201
 40586                           
 40587                           ; BSR set to: 0
 40588  011730  EE20 F002          	lfsr	2,2
 40589  011734  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40590  011736  26D9               	addwf	fsr2l,f,c
 40591  011738  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40592  01173A  22DA               	addwfc	fsr2h,f,c
 40593  01173C  50DE               	movf	postinc2,w,c
 40594  01173E  10DE               	iorwf	postinc2,w,c
 40595  011740  10DE               	iorwf	postinc2,w,c
 40596  011742  B4D8               	btfsc	status,2,c
 40597  011744  D014               	goto	i2l20197
 40598                           
 40599                           ; BSR set to: 0
 40600  011746  EE20 F002          	lfsr	2,2
 40601  01174A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40602  01174C  26D9               	addwf	fsr2l,f,c
 40603  01174E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40604  011750  22DA               	addwfc	fsr2h,f,c
 40605  011752  D802               	call	i2u2565_48
 40606  011754  EFFB  F096         	goto	i2u2693_40
 40607  011758                     i2u2565_48:
 40608  011758  0005               	push	
 40609  01175A  6EFA               	movwf	pclath,c
 40610  01175C  50DE               	movf	postinc2,w,c
 40611  01175E  6EFD               	movwf	tosl,c
 40612  011760  50DE               	movf	postinc2,w,c
 40613  011762  6EFE               	movwf	tosh,c
 40614  011764  50DE               	movf	postinc2,w,c
 40615  011766  6EFF               	movwf	tosu,c
 40616  011768  50FA               	movf	pclath,w,c
 40617  01176A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40618  01176C  0012               	return		;indir
 40619  01176E                     i2l20197:
 40620                           
 40621                           ; BSR set to: 0
 40622  01176E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40623  011772  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40624  011776  CFDE F072          	movff	postinc2,??i2__doprnt
 40625  01177A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40626  01177E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40627  011782  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40628  011786  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 40629                           
 40630                           ; BSR set to: 0
 40631  01178A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40632  01178E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40633  011792  2ADE               	incf	postinc2,f,c
 40634  011794  0E00               	movlw	0
 40635  011796  22DD               	addwfc	postdec2,f,c
 40636  011798  EFFB  F096         	goto	i2u2693_40
 40637  01179C                     i2l20201:
 40638                           
 40639                           ; BSR set to: 0
 40640                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 40641  01179C  0E00               	movlw	0
 40642  01179E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40643  0117A0  0E00               	movlw	0
 40644  0117A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40645                           
 40646                           ;doprnt.c: 560: flag = 0;
 40647  0117A4  0E00               	movlw	0
 40648  0117A6  6FA2               	movwf	(i2__doprnt@flag+1)& (0+255),b
 40649  0117A8  0E00               	movlw	0
 40650  0117AA  6FA1               	movwf	i2__doprnt@flag& (0+255),b
 40651  0117AC  D00A               	goto	i2l20211
 40652  0117AE                     i2l20203:
 40653                           
 40654                           ;doprnt.c: 573: flag |= 0x01;
 40655  0117AE  0100               	movlb	0	; () banked
 40656  0117B0  81A1               	bsf	i2__doprnt@flag& (0+255),0,b
 40657  0117B2  D005               	goto	L34
 40658  0117B4                     i2l20205:
 40659                           
 40660                           ;doprnt.c: 580: flag |= 0x02;
 40661  0117B4  0100               	movlb	0	; () banked
 40662  0117B6  83A1               	bsf	i2__doprnt@flag& (0+255),1,b
 40663  0117B8  D002               	goto	L34
 40664  0117BA                     i2l20207:
 40665                           
 40666                           ;doprnt.c: 592: flag |= 0x04;
 40667  0117BA  0100               	movlb	0	; () banked
 40668  0117BC  85A1               	bsf	i2__doprnt@flag& (0+255),2,b
 40669  0117BE                     L34:
 40670                           
 40671                           ;doprnt.c: 593: f++;
 40672  0117BE  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40673  0117C0  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40674  0117C2                     i2l20211:
 40675                           
 40676                           ; BSR set to: 0
 40677  0117C2  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40678  0117C6  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40679  0117CA  0E00               	movlw	low (__mediumconst shr (0+16))
 40680  0117CC  6EF8               	movwf	tblptru,c
 40681  0117CE  0E0E               	movlw	(high __ramtop+-1)
 40682  0117D0  64F7               	cpfsgt	tblptrh,c
 40683  0117D2  D003               	bra	i2u2566_47
 40684  0117D4  0008               	tblrd		*
 40685  0117D6  50F5               	movf	tablat,w,c
 40686  0117D8  D005               	bra	i2u2566_40
 40687  0117DA                     i2u2566_47:
 40688  0117DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40689  0117DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40690  0117E2  50EF               	movf	indf0,w,c
 40691  0117E4                     i2u2566_40:
 40692                           
 40693                           ; Switch size 1, requested type "simple"
 40694                           ; Number of cases is 3, Range of values is 32 to 48
 40695                           ; switch strategies available:
 40696                           ; Name         Instructions Cycles
 40697                           ; simple_byte           10     6 (average)
 40698                           ;	Chosen strategy is simple_byte
 40699  0117E4  0A20               	xorlw	32	; case 32
 40700  0117E6  B4D8               	btfsc	status,2,c
 40701  0117E8  D7E2               	goto	i2l20203
 40702  0117EA  0A0B               	xorlw	11	; case 43
 40703  0117EC  B4D8               	btfsc	status,2,c
 40704  0117EE  D7E2               	goto	i2l20205
 40705  0117F0  0A1B               	xorlw	27	; case 48
 40706  0117F2  B4D8               	btfsc	status,2,c
 40707  0117F4  D7E2               	goto	i2l20207
 40708                           
 40709                           ;doprnt.c: 601: if(flag & 0x02)
 40710  0117F6  0100               	movlb	0	; () banked
 40711  0117F8  B3A1               	btfsc	i2__doprnt@flag& (0+255),1,b
 40712                           
 40713                           ; BSR set to: 0
 40714                           ;doprnt.c: 602: flag &= ~0x01;
 40715  0117FA  91A1               	bcf	i2__doprnt@flag& (0+255),0,b
 40716                           
 40717                           ; BSR set to: 0
 40718                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 40719  0117FC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40720  011800  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40721  011804  0E00               	movlw	low (__mediumconst shr (0+16))
 40722  011806  6EF8               	movwf	tblptru,c
 40723  011808  0E0E               	movlw	(high __ramtop+-1)
 40724  01180A  64F7               	cpfsgt	tblptrh,c
 40725  01180C  D003               	bra	i2u2568_47
 40726  01180E  0008               	tblrd		*
 40727  011810  50F5               	movf	tablat,w,c
 40728  011812  D005               	bra	i2u2568_40
 40729  011814                     i2u2568_47:
 40730  011814  CFF6 FFE9          	movff	tblptrl,fsr0l
 40731  011818  CFF7 FFEA          	movff	tblptrh,fsr0h
 40732  01181C  50EF               	movf	indf0,w,c
 40733  01181E                     i2u2568_40:
 40734  01181E  EC88  F0E2         	call	i2_isdigit
 40735  011822  A0D8               	btfss	status,0,c
 40736  011824  D04B               	goto	i2u2572_40
 40737                           
 40738                           ;doprnt.c: 610: width = 0;
 40739  011826  0E00               	movlw	0
 40740  011828  0100               	movlb	0	; () banked
 40741  01182A  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40742  01182C  0E00               	movlw	0
 40743  01182E  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40744  011830                     i2l20219:
 40745                           
 40746                           ;doprnt.c: 612: width *= 10;
 40747  011830  C09D  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 40748  011834  C09E  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 40749  011838  0E00               	movlw	0
 40750  01183A  6E04               	movwf	i2___wmul@multiplicand+1,c
 40751  01183C  0E0A               	movlw	10
 40752  01183E  6E03               	movwf	i2___wmul@multiplicand,c
 40753  011840  ECBF  F0E1         	call	i2___wmul	;wreg free
 40754  011844  C001  F09D         	movff	?i2___wmul,i2__doprnt@width
 40755  011848  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@width+1
 40756                           
 40757                           ;doprnt.c: 613: width += *f++ - '0';
 40758  01184C  0ED0               	movlw	208
 40759  01184E  0100               	movlb	0	; () banked
 40760  011850  6F72               	movwf	??i2__doprnt& (0+255),b
 40761  011852  0EFF               	movlw	255
 40762  011854  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40763  011856  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40764  01185A  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40765  01185E  0E00               	movlw	low (__mediumconst shr (0+16))
 40766  011860  6EF8               	movwf	tblptru,c
 40767  011862  0E0E               	movlw	(high __ramtop+-1)
 40768  011864  64F7               	cpfsgt	tblptrh,c
 40769  011866  D003               	bra	i2u2570_47
 40770  011868  0008               	tblrd		*
 40771  01186A  50F5               	movf	tablat,w,c
 40772  01186C  D005               	bra	i2u2570_40
 40773  01186E                     i2u2570_47:
 40774  01186E  CFF6 FFE9          	movff	tblptrl,fsr0l
 40775  011872  CFF7 FFEA          	movff	tblptrh,fsr0h
 40776  011876  50EF               	movf	indf0,w,c
 40777  011878                     i2u2570_40:
 40778  011878  0100               	movlb	0	; () banked
 40779  01187A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 40780  01187C  6B75               	clrf	(??i2__doprnt+3)& (0+255),b
 40781  01187E  5172               	movf	??i2__doprnt& (0+255),w,b
 40782  011880  2774               	addwf	(??i2__doprnt+2)& (0+255),f,b
 40783  011882  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 40784  011884  2375               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 40785  011886  5174               	movf	(??i2__doprnt+2)& (0+255),w,b
 40786  011888  279D               	addwf	i2__doprnt@width& (0+255),f,b
 40787  01188A  5175               	movf	(??i2__doprnt+3)& (0+255),w,b
 40788  01188C  239E               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 40789                           
 40790                           ; BSR set to: 0
 40791  01188E  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40792  011890  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40793                           
 40794                           ; BSR set to: 0
 40795                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 40796  011892  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40797  011896  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40798  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 40799  01189C  6EF8               	movwf	tblptru,c
 40800  01189E  0E0E               	movlw	(high __ramtop+-1)
 40801  0118A0  64F7               	cpfsgt	tblptrh,c
 40802  0118A2  D003               	bra	i2u2571_47
 40803  0118A4  0008               	tblrd		*
 40804  0118A6  50F5               	movf	tablat,w,c
 40805  0118A8  D005               	bra	i2u2571_40
 40806  0118AA                     i2u2571_47:
 40807  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40808  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40809  0118B2  50EF               	movf	indf0,w,c
 40810  0118B4                     i2u2571_40:
 40811  0118B4  EC88  F0E2         	call	i2_isdigit
 40812  0118B8  B0D8               	btfsc	status,0,c
 40813  0118BA  D7BA               	goto	i2l20219
 40814  0118BC                     i2u2572_40:
 40815                           
 40816                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 40817  0118BC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40818  0118C0  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40819  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
 40820  0118C6  6EF8               	movwf	tblptru,c
 40821  0118C8  0E0E               	movlw	(high __ramtop+-1)
 40822  0118CA  64F7               	cpfsgt	tblptrh,c
 40823  0118CC  D003               	bra	i2u2573_47
 40824  0118CE  0008               	tblrd		*
 40825  0118D0  50F5               	movf	tablat,w,c
 40826  0118D2  D005               	bra	i2u2573_40
 40827  0118D4                     i2u2573_47:
 40828  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 40829  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 40830  0118DC  50EF               	movf	indf0,w,c
 40831  0118DE                     i2u2573_40:
 40832  0118DE  0A2E               	xorlw	46
 40833  0118E0  A4D8               	btfss	status,2,c
 40834  0118E2  D048               	goto	i2l20239
 40835                           
 40836                           ;doprnt.c: 624: flag |= 0x4000;
 40837  0118E4  0100               	movlb	0	; () banked
 40838  0118E6  8DA2               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 40839                           
 40840                           ;doprnt.c: 625: f++;
 40841  0118E8  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40842  0118EA  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40843                           
 40844                           ; BSR set to: 0
 40845                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 40846  0118EC  0E00               	movlw	0
 40847  0118EE  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40848  0118F0  0E00               	movlw	0
 40849  0118F2  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40850                           
 40851                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 40852  0118F4  D029               	goto	i2l20237
 40853  0118F6                     i2l20233:
 40854                           
 40855                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 40856  0118F6  C09F  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 40857  0118FA  C0A0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 40858  0118FE  0E00               	movlw	0
 40859  011900  6E04               	movwf	i2___wmul@multiplicand+1,c
 40860  011902  0E0A               	movlw	10
 40861  011904  6E03               	movwf	i2___wmul@multiplicand,c
 40862  011906  ECBF  F0E1         	call	i2___wmul	;wreg free
 40863  01190A  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40864  01190E  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40865  011912  0E00               	movlw	low (__mediumconst shr (0+16))
 40866  011914  6EF8               	movwf	tblptru,c
 40867  011916  0E0E               	movlw	(high __ramtop+-1)
 40868  011918  64F7               	cpfsgt	tblptrh,c
 40869  01191A  D003               	bra	i2u2575_47
 40870  01191C  0008               	tblrd		*
 40871  01191E  50F5               	movf	tablat,w,c
 40872  011920  D005               	bra	i2u2575_40
 40873  011922                     i2u2575_47:
 40874  011922  CFF6 FFE9          	movff	tblptrl,fsr0l
 40875  011926  CFF7 FFEA          	movff	tblptrh,fsr0h
 40876  01192A  50EF               	movf	indf0,w,c
 40877  01192C                     i2u2575_40:
 40878  01192C  0100               	movlb	0	; () banked
 40879  01192E  6F72               	movwf	??i2__doprnt& (0+255),b
 40880  011930  5172               	movf	??i2__doprnt& (0+255),w,b
 40881  011932  2601               	addwf	?i2___wmul,f,c
 40882  011934  0E00               	movlw	0
 40883  011936  2202               	addwfc	?i2___wmul+1,f,c
 40884  011938  0ED0               	movlw	208
 40885  01193A  2401               	addwf	?i2___wmul,w,c
 40886  01193C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40887  01193E  0EFF               	movlw	255
 40888  011940  2002               	addwfc	?i2___wmul+1,w,c
 40889  011942  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40890                           
 40891                           ; BSR set to: 0
 40892  011944  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40893  011946  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40894  011948                     i2l20237:
 40895                           
 40896                           ; BSR set to: 0
 40897  011948  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40898  01194C  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40899  011950  0E00               	movlw	low (__mediumconst shr (0+16))
 40900  011952  6EF8               	movwf	tblptru,c
 40901  011954  0E0E               	movlw	(high __ramtop+-1)
 40902  011956  64F7               	cpfsgt	tblptrh,c
 40903  011958  D003               	bra	i2u2576_47
 40904  01195A  0008               	tblrd		*
 40905  01195C  50F5               	movf	tablat,w,c
 40906  01195E  D005               	bra	i2u2576_40
 40907  011960                     i2u2576_47:
 40908  011960  CFF6 FFE9          	movff	tblptrl,fsr0l
 40909  011964  CFF7 FFEA          	movff	tblptrh,fsr0h
 40910  011968  50EF               	movf	indf0,w,c
 40911  01196A                     i2u2576_40:
 40912  01196A  EC88  F0E2         	call	i2_isdigit
 40913  01196E  A0D8               	btfss	status,0,c
 40914  011970  D12A               	goto	i2l20307
 40915  011972  D7C1               	goto	i2l20233
 40916  011974                     i2l20239:
 40917                           
 40918                           ;doprnt.c: 645: prec = 0;
 40919  011974  0E00               	movlw	0
 40920  011976  0100               	movlb	0	; () banked
 40921  011978  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40922  01197A  0E00               	movlw	0
 40923  01197C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40924                           
 40925                           ; BSR set to: 0
 40926                           ;doprnt.c: 647: flag |= 0x1000;
 40927  01197E  89A2               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 40928  011980  D122               	goto	i2l20307
 40929  011982                     i2l20243:
 40930                           
 40931                           ; BSR set to: 0
 40932                           ;doprnt.c: 662: flag |= 0x10;
 40933  011982  89A1               	bsf	i2__doprnt@flag& (0+255),4,b
 40934                           
 40935                           ;doprnt.c: 663: goto loop;
 40936  011984  D120               	goto	i2l20307
 40937  011986                     i2l20245:
 40938                           
 40939                           ; BSR set to: 0
 40940                           ;doprnt.c: 682: flag |= 0x400;
 40941  011986  85A2               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 40942                           
 40943                           ;doprnt.c: 683: break;
 40944  011988  D159               	goto	i2l20309
 40945  01198A                     i2l20247:
 40946                           
 40947                           ; BSR set to: 0
 40948                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 40949  01198A  8FA1               	bsf	i2__doprnt@flag& (0+255),7,b
 40950                           
 40951                           ;doprnt.c: 742: break;
 40952  01198C  D157               	goto	i2l20309
 40953  01198E                     i2l20249:
 40954                           
 40955                           ; BSR set to: 0
 40956                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 40957  01198E  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 40958  011992  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 40959  011996  CFDF F072          	movff	indf2,??i2__doprnt
 40960  01199A  0E02               	movlw	2
 40961  01199C  26DE               	addwf	postinc2,f,c
 40962  01199E  CFDF F073          	movff	indf2,??i2__doprnt+1
 40963  0119A2  0E00               	movlw	0
 40964  0119A4  22DD               	addwfc	postdec2,f,c
 40965  0119A6  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40966  0119AA  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40967  0119AE  CFDE F08B          	movff	postinc2,i2__doprnt@cp
 40968  0119B2  CFDD F08C          	movff	postdec2,i2__doprnt@cp+1
 40969                           
 40970                           ; BSR set to: 0
 40971                           ;doprnt.c: 759: if(!cp)
 40972  0119B6  518B               	movf	i2__doprnt@cp& (0+255),w,b
 40973  0119B8  118C               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 40974  0119BA  A4D8               	btfss	status,2,c
 40975  0119BC  D004               	goto	i2l20255
 40976                           
 40977                           ; BSR set to: 0
 40978                           ;doprnt.c: 760: cp = "(null)";
 40979  0119BE  0E6A               	movlw	low STR_356
 40980  0119C0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 40981  0119C2  0EFF               	movlw	high STR_356
 40982  0119C4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 40983  0119C6                     i2l20255:
 40984                           
 40985                           ; BSR set to: 0
 40986                           ;doprnt.c: 764: len = 0;
 40987  0119C6  0E00               	movlw	0
 40988  0119C8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 40989  0119CA  0E00               	movlw	0
 40990  0119CC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 40991                           
 40992                           ;doprnt.c: 765: while(cp[len])
 40993  0119CE  D003               	goto	i2l20259
 40994  0119D0                     i2l20257:
 40995                           
 40996                           ;doprnt.c: 766: len++;
 40997  0119D0  0100               	movlb	0	; () banked
 40998  0119D2  4B8D               	infsnz	i2__doprnt@len& (0+255),f,b
 40999  0119D4  2B8E               	incf	(i2__doprnt@len+1)& (0+255),f,b
 41000  0119D6                     i2l20259:
 41001                           
 41002                           ; BSR set to: 0
 41003  0119D6  518D               	movf	i2__doprnt@len& (0+255),w,b
 41004  0119D8  258B               	addwf	i2__doprnt@cp& (0+255),w,b
 41005  0119DA  6F72               	movwf	??i2__doprnt& (0+255),b
 41006  0119DC  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41007  0119DE  218C               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 41008  0119E0  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41009  0119E2  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41010  0119E6  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41011  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
 41012  0119EC  6EF8               	movwf	tblptru,c
 41013  0119EE  0E0E               	movlw	(high __ramtop+-1)
 41014  0119F0  64F7               	cpfsgt	tblptrh,c
 41015  0119F2  D003               	bra	i2u2579_47
 41016  0119F4  0008               	tblrd		*
 41017  0119F6  50F5               	movf	tablat,w,c
 41018  0119F8  D005               	bra	i2u2579_40
 41019  0119FA                     i2u2579_47:
 41020  0119FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 41021  0119FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 41022  011A02  50EF               	movf	indf0,w,c
 41023  011A04                     i2u2579_40:
 41024  011A04  0900               	iorlw	0
 41025  011A06  A4D8               	btfss	status,2,c
 41026  011A08  D7E3               	goto	i2l20257
 41027  011A0A                     i2u2580_40:
 41028                           
 41029                           ;doprnt.c: 772: if(prec && prec < len)
 41030  011A0A  0100               	movlb	0	; () banked
 41031  011A0C  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41032  011A0E  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41033  011A10  B4D8               	btfsc	status,2,c
 41034  011A12  D00A               	goto	i2l20267
 41035                           
 41036                           ; BSR set to: 0
 41037  011A14  518D               	movf	i2__doprnt@len& (0+255),w,b
 41038  011A16  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41039  011A18  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41040  011A1A  59A0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 41041  011A1C  B0D8               	btfsc	status,0,c
 41042  011A1E  D004               	goto	i2l20267
 41043                           
 41044                           ; BSR set to: 0
 41045                           ;doprnt.c: 773: len = prec;
 41046  011A20  C09F  F08D         	movff	i2__doprnt@prec,i2__doprnt@len
 41047  011A24  C0A0  F08E         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 41048  011A28                     i2l20267:
 41049                           
 41050                           ; BSR set to: 0
 41051                           ;doprnt.c: 776: if(width > len)
 41052  011A28  519D               	movf	i2__doprnt@width& (0+255),w,b
 41053  011A2A  5D8D               	subwf	i2__doprnt@len& (0+255),w,b
 41054  011A2C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41055  011A2E  598E               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 41056  011A30  B0D8               	btfsc	status,0,c
 41057  011A32  D005               	goto	i2l20271
 41058                           
 41059                           ; BSR set to: 0
 41060                           ;doprnt.c: 777: width -= len;
 41061  011A34  518D               	movf	i2__doprnt@len& (0+255),w,b
 41062  011A36  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41063  011A38  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41064  011A3A  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41065  011A3C  D038               	goto	i2l20281
 41066  011A3E                     i2l20271:
 41067                           
 41068                           ; BSR set to: 0
 41069                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 41070  011A3E  0E00               	movlw	0
 41071  011A40  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 41072  011A42  0E00               	movlw	0
 41073  011A44  6F9D               	movwf	i2__doprnt@width& (0+255),b
 41074  011A46  D033               	goto	i2l20281
 41075  011A48                     i2l20273:
 41076                           
 41077                           ; BSR set to: 0
 41078  011A48  EE20 F002          	lfsr	2,2
 41079  011A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41080  011A4E  26D9               	addwf	fsr2l,f,c
 41081  011A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41082  011A52  22DA               	addwfc	fsr2h,f,c
 41083  011A54  50DE               	movf	postinc2,w,c
 41084  011A56  10DE               	iorwf	postinc2,w,c
 41085  011A58  10DE               	iorwf	postinc2,w,c
 41086  011A5A  B4D8               	btfsc	status,2,c
 41087  011A5C  D013               	goto	i2l20277
 41088                           
 41089                           ; BSR set to: 0
 41090  011A5E  EE20 F002          	lfsr	2,2
 41091  011A62  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41092  011A64  26D9               	addwf	fsr2l,f,c
 41093  011A66  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41094  011A68  22DA               	addwfc	fsr2h,f,c
 41095  011A6A  D801               	call	i2u2585_48
 41096  011A6C  D020               	goto	i2l20281
 41097  011A6E                     i2u2585_48:
 41098  011A6E  0005               	push	
 41099  011A70  6EFA               	movwf	pclath,c
 41100  011A72  50DE               	movf	postinc2,w,c
 41101  011A74  6EFD               	movwf	tosl,c
 41102  011A76  50DE               	movf	postinc2,w,c
 41103  011A78  6EFE               	movwf	tosh,c
 41104  011A7A  50DE               	movf	postinc2,w,c
 41105  011A7C  6EFF               	movwf	tosu,c
 41106  011A7E  50FA               	movf	pclath,w,c
 41107  011A80  0E20               	movlw	32
 41108  011A82  0012               	return		;indir
 41109  011A84                     i2l20277:
 41110                           
 41111                           ; BSR set to: 0
 41112  011A84  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41113  011A88  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41114  011A8C  CFDE F072          	movff	postinc2,??i2__doprnt
 41115  011A90  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41116  011A94  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41117  011A98  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41118  011A9C  0E20               	movlw	32
 41119  011A9E  6EDF               	movwf	indf2,c
 41120                           
 41121                           ; BSR set to: 0
 41122  011AA0  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41123  011AA4  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41124  011AA8  2ADE               	incf	postinc2,f,c
 41125  011AAA  0E00               	movlw	0
 41126  011AAC  22DD               	addwfc	postdec2,f,c
 41127  011AAE                     i2l20281:
 41128  011AAE  0100               	movlb	0	; () banked
 41129  011AB0  079D               	decf	i2__doprnt@width& (0+255),f,b
 41130  011AB2  A0D8               	btfss	status,0,c
 41131  011AB4  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41132  011AB6  299D               	incf	i2__doprnt@width& (0+255),w,b
 41133  011AB8  E1C7               	bnz	i2l20273
 41134  011ABA  299E               	incf	(i2__doprnt@width+1)& (0+255),w,b
 41135  011ABC  B4D8               	btfsc	status,2,c
 41136  011ABE  D05B               	goto	i2l20295
 41137  011AC0  D7C3               	goto	i2l20273
 41138  011AC2                     i2l20283:
 41139                           
 41140                           ; BSR set to: 0
 41141  011AC2  EE20 F002          	lfsr	2,2
 41142  011AC6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41143  011AC8  26D9               	addwf	fsr2l,f,c
 41144  011ACA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41145  011ACC  22DA               	addwfc	fsr2h,f,c
 41146  011ACE  50DE               	movf	postinc2,w,c
 41147  011AD0  10DE               	iorwf	postinc2,w,c
 41148  011AD2  10DE               	iorwf	postinc2,w,c
 41149  011AD4  B4D8               	btfsc	status,2,c
 41150  011AD6  D027               	goto	i2l20289
 41151                           
 41152                           ; BSR set to: 0
 41153  011AD8  EE20 F002          	lfsr	2,2
 41154  011ADC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41155  011ADE  26D9               	addwf	fsr2l,f,c
 41156  011AE0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41157  011AE2  22DA               	addwfc	fsr2h,f,c
 41158  011AE4  D801               	call	i2u2588_48
 41159  011AE6  D01B               	goto	i2u2588_49
 41160  011AE8                     i2u2588_48:
 41161  011AE8  0005               	push	
 41162  011AEA  6EFA               	movwf	pclath,c
 41163  011AEC  50DE               	movf	postinc2,w,c
 41164  011AEE  6EFD               	movwf	tosl,c
 41165  011AF0  50DE               	movf	postinc2,w,c
 41166  011AF2  6EFE               	movwf	tosh,c
 41167  011AF4  50DE               	movf	postinc2,w,c
 41168  011AF6  6EFF               	movwf	tosu,c
 41169  011AF8  50FA               	movf	pclath,w,c
 41170  011AFA  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 41171  011AFE  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 41172  011B02  0E00               	movlw	low (__mediumconst shr (0+16))
 41173  011B04  6EF8               	movwf	tblptru,c
 41174  011B06  0E0E               	movlw	(high __ramtop+-1)
 41175  011B08  64F7               	cpfsgt	tblptrh,c
 41176  011B0A  D003               	bra	i2u2589_47
 41177  011B0C  0008               	tblrd		*
 41178  011B0E  50F5               	movf	tablat,w,c
 41179  011B10  D005               	bra	i2u2589_40
 41180  011B12                     i2u2589_47:
 41181  011B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 41182  011B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 41183  011B1A  50EF               	movf	indf0,w,c
 41184  011B1C                     i2u2589_40:
 41185  011B1C  0012               	return		;indir
 41186  011B1E                     i2u2588_49:
 41187  011B1E  0100               	movlb	0	; () banked
 41188  011B20  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 41189  011B22  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 41190  011B24  D028               	goto	i2l20295
 41191  011B26                     i2l20289:
 41192                           
 41193                           ; BSR set to: 0
 41194  011B26  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 41195  011B2A  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 41196  011B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 41197  011B30  6EF8               	movwf	tblptru,c
 41198  011B32  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41199  011B36  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41200  011B3A  CFDE F072          	movff	postinc2,??i2__doprnt
 41201  011B3E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41202  011B42  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41203  011B46  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41204  011B4A  0E0E               	movlw	(high __ramtop+-1)
 41205  011B4C  64F7               	cpfsgt	tblptrh,c
 41206  011B4E  D003               	bra	i2u2590_47
 41207  011B50  0008               	tblrd		*
 41208  011B52  50F5               	movf	tablat,w,c
 41209  011B54  D005               	bra	i2u2590_40
 41210  011B56                     i2u2590_47:
 41211  011B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 41212  011B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 41213  011B5E  50EF               	movf	indf0,w,c
 41214  011B60                     i2u2590_40:
 41215  011B60  6EDF               	movwf	indf2,c
 41216  011B62  0100               	movlb	0	; () banked
 41217  011B64  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 41218  011B66  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 41219                           
 41220                           ; BSR set to: 0
 41221  011B68  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41222  011B6C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41223  011B70  2ADE               	incf	postinc2,f,c
 41224  011B72  0E00               	movlw	0
 41225  011B74  22DD               	addwfc	postdec2,f,c
 41226  011B76                     i2l20295:
 41227                           
 41228                           ; BSR set to: 0
 41229  011B76  078D               	decf	i2__doprnt@len& (0+255),f,b
 41230  011B78  A0D8               	btfss	status,0,c
 41231  011B7A  078E               	decf	(i2__doprnt@len+1)& (0+255),f,b
 41232  011B7C  298D               	incf	i2__doprnt@len& (0+255),w,b
 41233  011B7E  E1A1               	bnz	i2l20283
 41234  011B80  298E               	incf	(i2__doprnt@len+1)& (0+255),w,b
 41235  011B82  B4D8               	btfsc	status,2,c
 41236  011B84  EFFB  F096         	goto	i2u2693_40
 41237  011B88  D79C               	goto	i2l20283
 41238  011B8A                     i2l20297:
 41239                           
 41240                           ; BSR set to: 0
 41241                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 41242  011B8A  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41243  011B8E  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41244  011B92  CFDF F072          	movff	indf2,??i2__doprnt
 41245  011B96  0E02               	movlw	2
 41246  011B98  26DE               	addwf	postinc2,f,c
 41247  011B9A  CFDF F073          	movff	indf2,??i2__doprnt+1
 41248  011B9E  0E00               	movlw	0
 41249  011BA0  22DD               	addwfc	postdec2,f,c
 41250  011BA2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41251  011BA6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41252  011BAA  50DF               	movf	indf2,w,c
 41253  011BAC  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41254  011BAE                     i2l20299:
 41255                           
 41256                           ; BSR set to: 0
 41257                           ;doprnt.c: 824: cp = (char *)&c;
 41258  011BAE  0EA3               	movlw	low i2__doprnt@c
 41259  011BB0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 41260  011BB2  0E00               	movlw	high i2__doprnt@c
 41261  011BB4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 41262                           
 41263                           ; BSR set to: 0
 41264                           ;doprnt.c: 825: len = 1;
 41265  011BB6  0E00               	movlw	0
 41266  011BB8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 41267  011BBA  0E01               	movlw	1
 41268  011BBC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 41269                           
 41270                           ;doprnt.c: 826: goto dostring;
 41271  011BBE  D725               	goto	i2u2580_40
 41272  011BC0                     i2l20303:
 41273                           
 41274                           ; BSR set to: 0
 41275                           ;doprnt.c: 837: flag |= 0xC0;
 41276  011BC0  0EC0               	movlw	192
 41277  011BC2  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41278                           
 41279                           ;doprnt.c: 838: break;
 41280  011BC4  D03B               	goto	i2l20309
 41281  011BC6                     i2l20307:
 41282  011BC6  0100               	movlb	0	; () banked
 41283  011BC8  516E               	movf	i2__doprnt@f& (0+255),w,b
 41284  011BCA  6F72               	movwf	??i2__doprnt& (0+255),b
 41285  011BCC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 41286  011BCE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41287  011BD0  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 41288  011BD2  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41289  011BD4  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41290  011BD8  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41291  011BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 41292  011BDE  6EF8               	movwf	tblptru,c
 41293  011BE0  0E0E               	movlw	(high __ramtop+-1)
 41294  011BE2  64F7               	cpfsgt	tblptrh,c
 41295  011BE4  D003               	bra	i2u2592_47
 41296  011BE6  0008               	tblrd		*
 41297  011BE8  50F5               	movf	tablat,w,c
 41298  011BEA  D005               	bra	i2u2592_40
 41299  011BEC                     i2u2592_47:
 41300  011BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 41301  011BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 41302  011BF4  50EF               	movf	indf0,w,c
 41303  011BF6                     i2u2592_40:
 41304  011BF6  0100               	movlb	0	; () banked
 41305  011BF8  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41306  011BFA  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41307                           
 41308                           ; Switch size 1, requested type "simple"
 41309                           ; Number of cases is 10, Range of values is 0 to 120
 41310                           ; switch strategies available:
 41311                           ; Name         Instructions Cycles
 41312                           ; simple_byte           31    16 (average)
 41313                           ;	Chosen strategy is simple_byte
 41314  011BFC  0A00               	xorlw	0	; case 0
 41315  011BFE  B4D8               	btfsc	status,2,c
 41316  011C00  EF19  F097         	goto	i2u2695_40
 41317  011C04  0A58               	xorlw	88	; case 88
 41318  011C06  B4D8               	btfsc	status,2,c
 41319  011C08  D6C0               	goto	i2l20247
 41320  011C0A  0A3B               	xorlw	59	; case 99
 41321  011C0C  B4D8               	btfsc	status,2,c
 41322  011C0E  D7BD               	goto	i2l20297
 41323  011C10  0A07               	xorlw	7	; case 100
 41324  011C12  B4D8               	btfsc	status,2,c
 41325  011C14  D013               	goto	i2l20309
 41326  011C16  0A02               	xorlw	2	; case 102
 41327  011C18  B4D8               	btfsc	status,2,c
 41328  011C1A  D6B5               	goto	i2l20245
 41329  011C1C  0A0F               	xorlw	15	; case 105
 41330  011C1E  B4D8               	btfsc	status,2,c
 41331  011C20  D00D               	goto	i2l20309
 41332  011C22  0A05               	xorlw	5	; case 108
 41333  011C24  B4D8               	btfsc	status,2,c
 41334  011C26  D6AD               	goto	i2l20243
 41335  011C28  0A1F               	xorlw	31	; case 115
 41336  011C2A  B4D8               	btfsc	status,2,c
 41337  011C2C  D6B0               	goto	i2l20249
 41338  011C2E  0A06               	xorlw	6	; case 117
 41339  011C30  B4D8               	btfsc	status,2,c
 41340  011C32  D7C6               	goto	i2l20303
 41341  011C34  0A0D               	xorlw	13	; case 120
 41342  011C36  B4D8               	btfsc	status,2,c
 41343  011C38  D6A8               	goto	i2l20247
 41344  011C3A  D7B9               	goto	i2l20299
 41345  011C3C                     i2l20309:
 41346                           
 41347                           ; BSR set to: 0
 41348                           ;doprnt.c: 844: if(flag & (0x700)) {
 41349  011C3C  0E07               	movlw	7
 41350  011C3E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41351  011C40  B4D8               	btfsc	status,2,c
 41352  011C42  EF9C  F093         	goto	i2l20553
 41353                           
 41354                           ; BSR set to: 0
 41355                           ;doprnt.c: 846: if(flag & 0x1000)
 41356  011C46  A9A2               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 41357  011C48  D004               	goto	i2l20315
 41358                           
 41359                           ; BSR set to: 0
 41360                           ;doprnt.c: 848: prec = 6;
 41361  011C4A  0E00               	movlw	0
 41362  011C4C  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41363  011C4E  0E06               	movlw	6
 41364  011C50  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41365  011C52                     i2l20315:
 41366                           
 41367                           ; BSR set to: 0
 41368                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 41369  011C52  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41370  011C56  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41371  011C5A  CFDF F072          	movff	indf2,??i2__doprnt
 41372  011C5E  0E04               	movlw	4
 41373  011C60  26DE               	addwf	postinc2,f,c
 41374  011C62  CFDF F073          	movff	indf2,??i2__doprnt+1
 41375  011C66  0E00               	movlw	0
 41376  011C68  22DD               	addwfc	postdec2,f,c
 41377  011C6A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41378  011C6E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41379  011C72  CFDE F095          	movff	postinc2,i2__doprnt@fval
 41380  011C76  CFDE F096          	movff	postinc2,i2__doprnt@fval+1
 41381  011C7A  CFDE F097          	movff	postinc2,i2__doprnt@fval+2
 41382  011C7E  CFDE F098          	movff	postinc2,i2__doprnt@fval+3
 41383                           
 41384                           ; BSR set to: 0
 41385                           ;doprnt.c: 850: if(fval < 0.0) {
 41386  011C82  AF98               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 41387  011C84  D015               	goto	i2l20323
 41388                           
 41389                           ; BSR set to: 0
 41390                           ;doprnt.c: 851: fval = -fval;
 41391  011C86  C095  F001         	movff	i2__doprnt@fval,i2___flneg@f1
 41392  011C8A  C096  F002         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 41393  011C8E  C097  F003         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 41394  011C92  C098  F004         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 41395  011C96  ECDD  F0E0         	call	i2___flneg
 41396  011C9A  C001  F095         	movff	?i2___flneg,i2__doprnt@fval
 41397  011C9E  C002  F096         	movff	?i2___flneg+1,i2__doprnt@fval+1
 41398  011CA2  C003  F097         	movff	?i2___flneg+2,i2__doprnt@fval+2
 41399  011CA6  C004  F098         	movff	?i2___flneg+3,i2__doprnt@fval+3
 41400                           
 41401                           ;doprnt.c: 852: flag |= 0x03;
 41402  011CAA  0E03               	movlw	3
 41403  011CAC  0100               	movlb	0	; () banked
 41404  011CAE  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41405  011CB0                     i2l20323:
 41406                           
 41407                           ; BSR set to: 0
 41408                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 41409  011CB0  0E00               	movlw	0
 41410  011CB2  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41411  011CB4  0E00               	movlw	0
 41412  011CB6  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41413                           
 41414                           ; BSR set to: 0
 41415                           ;doprnt.c: 855: if( fval!=0) {
 41416  011CB8  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41417  011CBC  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41418  011CC0  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41419  011CC4  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41420  011CC8  0E00               	movlw	0
 41421  011CCA  6E05               	movwf	i2___fleq@ff2,c
 41422  011CCC  0E00               	movlw	0
 41423  011CCE  6E06               	movwf	i2___fleq@ff2+1,c
 41424  011CD0  0E00               	movlw	0
 41425  011CD2  6E07               	movwf	i2___fleq@ff2+2,c
 41426  011CD4  0E00               	movlw	0
 41427  011CD6  6E08               	movwf	i2___fleq@ff2+3,c
 41428  011CD8  ECA3  F0D7         	call	i2___fleq	;wreg free
 41429  011CDC  B0D8               	btfsc	status,0,c
 41430  011CDE  D083               	goto	i2l20351
 41431                           
 41432                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 41433  011CE0  0100               	movlb	0	; () banked
 41434  011CE2  3597               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 41435  011CE4  3598               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 41436  011CE6  0F82               	addlw	130
 41437  011CE8  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41438  011CEA  6B90               	clrf	(i2__doprnt@eexp+1)& (0+255),b
 41439  011CEC  0EFF               	movlw	255
 41440  011CEE  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41441                           
 41442                           ; BSR set to: 0
 41443                           ;doprnt.c: 857: eexp--;
 41444  011CF0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41445  011CF2  A0D8               	btfss	status,0,c
 41446  011CF4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41447                           
 41448                           ; BSR set to: 0
 41449                           ;doprnt.c: 858: eexp *= 3;
 41450  011CF6  C08F  F001         	movff	i2__doprnt@eexp,i2___wmul@multiplier
 41451  011CFA  C090  F002         	movff	i2__doprnt@eexp+1,i2___wmul@multiplier+1
 41452  011CFE  0E00               	movlw	0
 41453  011D00  6E04               	movwf	i2___wmul@multiplicand+1,c
 41454  011D02  0E03               	movlw	3
 41455  011D04  6E03               	movwf	i2___wmul@multiplicand,c
 41456  011D06  ECBF  F0E1         	call	i2___wmul	;wreg free
 41457  011D0A  C001  F08F         	movff	?i2___wmul,i2__doprnt@eexp
 41458  011D0E  C002  F090         	movff	?i2___wmul+1,i2__doprnt@eexp+1
 41459                           
 41460                           ;doprnt.c: 859: eexp /= 10;
 41461  011D12  C08F  F007         	movff	i2__doprnt@eexp,i2___awdiv@dividend
 41462  011D16  C090  F008         	movff	i2__doprnt@eexp+1,i2___awdiv@dividend+1
 41463  011D1A  0E00               	movlw	0
 41464  011D1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 41465  011D1E  0E0A               	movlw	10
 41466  011D20  6E09               	movwf	i2___awdiv@divisor,c
 41467  011D22  EC6D  F0D8         	call	i2___awdiv	;wreg free
 41468  011D26  C007  F08F         	movff	?i2___awdiv,i2__doprnt@eexp
 41469  011D2A  C008  F090         	movff	?i2___awdiv+1,i2__doprnt@eexp+1
 41470                           
 41471                           ;doprnt.c: 860: if(eexp < 0)
 41472  011D2E  0100               	movlb	0	; () banked
 41473  011D30  AF90               	btfss	(i2__doprnt@eexp+1)& (0+255),7,b
 41474  011D32  D003               	goto	i2l20339
 41475                           
 41476                           ; BSR set to: 0
 41477                           ;doprnt.c: 861: eexp--;
 41478  011D34  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41479  011D36  A0D8               	btfss	status,0,c
 41480  011D38  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41481  011D3A                     i2l20339:
 41482                           
 41483                           ; BSR set to: 0
 41484                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 41485  011D3A  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41486  011D3C  0800               	sublw	0
 41487  011D3E  EC3C  F0AC         	call	i2_scale
 41488  011D42  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41489  011D46  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41490  011D4A  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41491  011D4E  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41492                           
 41493                           ;doprnt.c: 866: tmpval.integ *= fval;
 41494  011D52  C091  F02C         	movff	i2__doprnt@tmpval,i2___flmul@b
 41495  011D56  C092  F02D         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 41496  011D5A  C093  F02E         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 41497  011D5E  C094  F02F         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 41498  011D62  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 41499  011D66  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 41500  011D6A  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 41501  011D6E  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 41502  011D72  ECCE  F0B6         	call	i2___flmul	;wreg free
 41503  011D76  C02C  F091         	movff	?i2___flmul,i2__doprnt@tmpval
 41504  011D7A  C02D  F092         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 41505  011D7E  C02E  F093         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 41506  011D82  C02F  F094         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 41507                           
 41508                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 41509  011D86  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41510  011D8A  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41511  011D8E  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41512  011D92  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41513  011D96  0E00               	movlw	0
 41514  011D98  6E05               	movwf	i2___flge@ff2,c
 41515  011D9A  0E00               	movlw	0
 41516  011D9C  6E06               	movwf	i2___flge@ff2+1,c
 41517  011D9E  0E80               	movlw	128
 41518  011DA0  6E07               	movwf	i2___flge@ff2+2,c
 41519  011DA2  0E3F               	movlw	63
 41520  011DA4  6E08               	movwf	i2___flge@ff2+3,c
 41521  011DA6  ECEE  F0D2         	call	i2___flge	;wreg free
 41522  011DAA  B0D8               	btfsc	status,0,c
 41523  011DAC  D005               	goto	i2l20347
 41524                           
 41525                           ;doprnt.c: 868: eexp--;
 41526  011DAE  0100               	movlb	0	; () banked
 41527  011DB0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41528  011DB2  A0D8               	btfss	status,0,c
 41529  011DB4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41530  011DB6  D017               	goto	i2l20351
 41531  011DB8                     i2l20347:
 41532                           
 41533                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 41534  011DB8  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41535  011DBC  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41536  011DC0  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41537  011DC4  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41538  011DC8  0E00               	movlw	0
 41539  011DCA  6E05               	movwf	i2___flge@ff2,c
 41540  011DCC  0E00               	movlw	0
 41541  011DCE  6E06               	movwf	i2___flge@ff2+1,c
 41542  011DD0  0E20               	movlw	32
 41543  011DD2  6E07               	movwf	i2___flge@ff2+2,c
 41544  011DD4  0E41               	movlw	65
 41545  011DD6  6E08               	movwf	i2___flge@ff2+3,c
 41546  011DD8  ECEE  F0D2         	call	i2___flge	;wreg free
 41547  011DDC  A0D8               	btfss	status,0,c
 41548  011DDE  D003               	goto	i2l20351
 41549                           
 41550                           ;doprnt.c: 870: eexp++;
 41551  011DE0  0100               	movlb	0	; () banked
 41552  011DE2  4B8F               	infsnz	i2__doprnt@eexp& (0+255),f,b
 41553  011DE4  2B90               	incf	(i2__doprnt@eexp+1)& (0+255),f,b
 41554  011DE6                     i2l20351:
 41555                           
 41556                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 41557  011DE6  0100               	movlb	0	; () banked
 41558  011DE8  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 41559  011DEA  D006               	goto	i2u2600_40
 41560  011DEC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41561  011DEE  E121               	bnz	i2l20355
 41562  011DF0  0E0D               	movlw	13
 41563  011DF2  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41564  011DF4  B0D8               	btfsc	status,0,c
 41565  011DF6  D01D               	goto	i2l20355
 41566  011DF8                     i2u2600_40:
 41567                           
 41568                           ; BSR set to: 0
 41569                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 41570  011DF8  C095  F052         	movff	i2__doprnt@fval,i2___fladd@b
 41571  011DFC  C096  F053         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 41572  011E00  C097  F054         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 41573  011E04  C098  F055         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 41574  011E08  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41575  011E0A  ECD4  F0BF         	call	i2_fround
 41576  011E0E  C045  F056         	movff	?i2_fround,i2___fladd@a
 41577  011E12  C046  F057         	movff	?i2_fround+1,i2___fladd@a+1
 41578  011E16  C047  F058         	movff	?i2_fround+2,i2___fladd@a+2
 41579  011E1A  C048  F059         	movff	?i2_fround+3,i2___fladd@a+3
 41580  011E1E  EC85  F0BB         	call	i2___fladd	;wreg free
 41581  011E22  C052  F095         	movff	?i2___fladd,i2__doprnt@fval
 41582  011E26  C053  F096         	movff	?i2___fladd+1,i2__doprnt@fval+1
 41583  011E2A  C054  F097         	movff	?i2___fladd+2,i2__doprnt@fval+2
 41584  011E2E  C055  F098         	movff	?i2___fladd+3,i2__doprnt@fval+3
 41585  011E32                     i2l20355:
 41586                           
 41587                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 41588  011E32  0100               	movlb	0	; () banked
 41589  011E34  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41590  011E36  D006               	goto	i2u2601_40
 41591  011E38  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41592  011E3A  E131               	bnz	i2l20363
 41593  011E3C  0E0A               	movlw	10
 41594  011E3E  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41595  011E40  B0D8               	btfsc	status,0,c
 41596  011E42  D02D               	goto	i2u2604_40
 41597  011E44                     i2u2601_40:
 41598                           
 41599                           ; BSR set to: 0
 41600  011E44  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41601  011E48  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41602  011E4C  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41603  011E50  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41604  011E54  0E00               	movlw	0
 41605  011E56  6E05               	movwf	i2___fleq@ff2,c
 41606  011E58  0E00               	movlw	0
 41607  011E5A  6E06               	movwf	i2___fleq@ff2+1,c
 41608  011E5C  0E00               	movlw	0
 41609  011E5E  6E07               	movwf	i2___fleq@ff2+2,c
 41610  011E60  0E00               	movlw	0
 41611  011E62  6E08               	movwf	i2___fleq@ff2+3,c
 41612  011E64  ECA3  F0D7         	call	i2___fleq	;wreg free
 41613  011E68  B0D8               	btfsc	status,0,c
 41614  011E6A  D064               	goto	i2l20377
 41615  011E6C  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41616  011E70  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41617  011E74  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41618  011E78  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41619  011E7C  EC7B  F0D4         	call	i2___fltol	;wreg free
 41620  011E80  504E               	movf	?i2___fltol,w,c
 41621  011E82  104F               	iorwf	?i2___fltol+1,w,c
 41622  011E84  1050               	iorwf	?i2___fltol+2,w,c
 41623  011E86  1051               	iorwf	?i2___fltol+3,w,c
 41624  011E88  A4D8               	btfss	status,2,c
 41625  011E8A  D054               	goto	i2l20377
 41626  011E8C  0100               	movlb	0	; () banked
 41627  011E8E  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41628  011E90  D051               	goto	i2l20377
 41629  011E92  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41630  011E94  E104               	bnz	i2u2604_40
 41631  011E96  0E02               	movlw	2
 41632  011E98  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41633  011E9A  A0D8               	btfss	status,0,c
 41634  011E9C  D04B               	goto	i2l20377
 41635  011E9E                     i2u2604_40:
 41636  011E9E                     i2l20363:
 41637                           
 41638                           ; BSR set to: 0
 41639                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 41640  011E9E  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41641  011EA2  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41642  011EA6  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41643  011EAA  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41644  011EAE  0E5F               	movlw	95
 41645  011EB0  6E05               	movwf	i2___flge@ff2,c
 41646  011EB2  0E70               	movlw	112
 41647  011EB4  6E06               	movwf	i2___flge@ff2+1,c
 41648  011EB6  0E89               	movlw	137
 41649  011EB8  6E07               	movwf	i2___flge@ff2+2,c
 41650  011EBA  0E40               	movlw	64
 41651  011EBC  6E08               	movwf	i2___flge@ff2+3,c
 41652  011EBE  ECEE  F0D2         	call	i2___flge	;wreg free
 41653  011EC2  B0D8               	btfsc	status,0,c
 41654  011EC4  D003               	goto	i2l20367
 41655                           
 41656                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 41657  011EC6  0100               	movlb	0	; () banked
 41658  011EC8  0EF7               	movlw	247
 41659  011ECA  D002               	goto	L35
 41660  011ECC                     i2l20367:
 41661                           
 41662                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 41663  011ECC  0100               	movlb	0	; () banked
 41664  011ECE  0EF8               	movlw	248
 41665  011ED0                     L35:
 41666  011ED0  278F               	addwf	i2__doprnt@eexp& (0+255),f,b
 41667  011ED2  0EFF               	movlw	255
 41668  011ED4  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41669                           
 41670                           ; BSR set to: 0
 41671                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 41672  011ED6  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41673  011ED8  EC3C  F0AC         	call	i2_scale
 41674  011EDC  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41675  011EE0  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41676  011EE4  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41677  011EE8  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41678  011EEC  C095  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 41679  011EF0  C096  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 41680  011EF4  C097  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 41681  011EF8  C098  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 41682  011EFC  C091  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 41683  011F00  C092  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 41684  011F04  C093  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 41685  011F08  C094  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 41686  011F0C  EC1F  F0D1         	call	i2__div_to_l_	;wreg free
 41687  011F10  C001  F099         	movff	?i2__div_to_l_,i2__doprnt@val
 41688  011F14  C002  F09A         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 41689  011F18  C003  F09B         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 41690  011F1C  C004  F09C         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 41691                           
 41692                           ;doprnt.c: 1148: fval = 0.0;
 41693  011F20  0E00               	movlw	0
 41694  011F22  0100               	movlb	0	; () banked
 41695  011F24  6F95               	movwf	i2__doprnt@fval& (0+255),b
 41696  011F26  0E00               	movlw	0
 41697  011F28  6F96               	movwf	(i2__doprnt@fval+1)& (0+255),b
 41698  011F2A  0E00               	movlw	0
 41699  011F2C  6F97               	movwf	(i2__doprnt@fval+2)& (0+255),b
 41700  011F2E  0E00               	movlw	0
 41701  011F30  6F98               	movwf	(i2__doprnt@fval+3)& (0+255),b
 41702                           
 41703                           ;doprnt.c: 1149: } else {
 41704  011F32  D03C               	goto	i2l20381
 41705  011F34                     i2l20377:
 41706                           
 41707                           ;doprnt.c: 1150: val = (unsigned long)fval;
 41708  011F34  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41709  011F38  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41710  011F3C  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41711  011F40  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41712  011F44  EC7B  F0D4         	call	i2___fltol	;wreg free
 41713  011F48  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 41714  011F4C  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 41715  011F50  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 41716  011F54  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 41717                           
 41718                           ;doprnt.c: 1151: fval -= (double)val;
 41719  011F58  C095  F064         	movff	i2__doprnt@fval,i2___flsub@b
 41720  011F5C  C096  F065         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 41721  011F60  C097  F066         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 41722  011F64  C098  F067         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 41723  011F68  C099  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 41724  011F6C  C09A  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 41725  011F70  C09B  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 41726  011F74  C09C  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 41727  011F78  0E00               	movlw	0
 41728  011F7A  ECFA  F0CD         	call	i2___xxtofl
 41729  011F7E  C005  F068         	movff	?i2___xxtofl,i2___flsub@a
 41730  011F82  C006  F069         	movff	?i2___xxtofl+1,i2___flsub@a+1
 41731  011F86  C007  F06A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 41732  011F8A  C008  F06B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 41733  011F8E  EC80  F0DD         	call	i2___flsub	;wreg free
 41734  011F92  C064  F095         	movff	?i2___flsub,i2__doprnt@fval
 41735  011F96  C065  F096         	movff	?i2___flsub+1,i2__doprnt@fval+1
 41736  011F9A  C066  F097         	movff	?i2___flsub+2,i2__doprnt@fval+2
 41737  011F9E  C067  F098         	movff	?i2___flsub+3,i2__doprnt@fval+3
 41738                           
 41739                           ;doprnt.c: 1152: eexp = 0;
 41740  011FA2  0E00               	movlw	0
 41741  011FA4  0100               	movlb	0	; () banked
 41742  011FA6  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41743  011FA8  0E00               	movlw	0
 41744  011FAA  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41745  011FAC                     i2l20381:
 41746                           
 41747                           ; BSR set to: 0
 41748                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 41749  011FAC  0E01               	movlw	1
 41750  011FAE  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41751  011FB0                     i2l20387:
 41752                           
 41753                           ; BSR set to: 0
 41754                           ;doprnt.c: 1156: if(val < dpowers[c])
 41755  011FB0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41756  011FB2  0D04               	mullw	4
 41757  011FB4  0EAF               	movlw	low _dpowers
 41758  011FB6  24F3               	addwf	prodl,w,c
 41759  011FB8  6EF6               	movwf	tblptrl,c
 41760  011FBA  0EE7               	movlw	high _dpowers
 41761  011FBC  20F4               	addwfc	prodh,w,c
 41762  011FBE  6EF7               	movwf	tblptrh,c
 41763  011FC0                     	if	1	;There are 3 active tblptr bytes
 41764  011FC0  6AF8               	clrf	tblptru,c
 41765  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41766  011FC4  22F8               	addwfc	tblptru,f,c
 41767  011FC6                     	endif
 41768  011FC6  0009               	tblrd		*+
 41769  011FC8  50F5               	movf	tablat,w,c
 41770  011FCA  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41771  011FCC  0009               	tblrd		*+
 41772  011FCE  50F5               	movf	tablat,w,c
 41773  011FD0  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41774  011FD2  0009               	tblrd		*+
 41775  011FD4  50F5               	movf	tablat,w,c
 41776  011FD6  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41777  011FD8  0009               	tblrd		*+
 41778  011FDA  50F5               	movf	tablat,w,c
 41779  011FDC  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41780  011FDE  A0D8               	btfss	status,0,c
 41781  011FE0  D005               	goto	i2u2607_40
 41782                           
 41783                           ; BSR set to: 0
 41784  011FE2  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41785                           
 41786                           ; BSR set to: 0
 41787  011FE4  0E0A               	movlw	10
 41788  011FE6  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41789  011FE8  A4D8               	btfss	status,2,c
 41790  011FEA  D7E2               	goto	i2l20387
 41791  011FEC                     i2u2607_40:
 41792                           
 41793                           ; BSR set to: 0
 41794                           ;doprnt.c: 1161: width -= prec + c + eexp;
 41795  011FEC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41796  011FEE  259F               	addwf	i2__doprnt@prec& (0+255),w,b
 41797  011FF0  6F72               	movwf	??i2__doprnt& (0+255),b
 41798  011FF2  0E00               	movlw	0
 41799  011FF4  21A0               	addwfc	(i2__doprnt@prec+1)& (0+255),w,b
 41800  011FF6  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41801  011FF8  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41802  011FFA  2772               	addwf	??i2__doprnt& (0+255),f,b
 41803  011FFC  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41804  011FFE  2373               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 41805  012000  5172               	movf	??i2__doprnt& (0+255),w,b
 41806  012002  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41807  012004  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41808  012006  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41809                           
 41810                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 41811  012008  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41812  01200A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41813  01200C  B4D8               	btfsc	status,2,c
 41814  01200E  D003               	goto	i2l20399
 41815                           
 41816                           ; BSR set to: 0
 41817                           ;doprnt.c: 1167: width--;
 41818  012010  079D               	decf	i2__doprnt@width& (0+255),f,b
 41819  012012  A0D8               	btfss	status,0,c
 41820  012014  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41821  012016                     i2l20399:
 41822                           
 41823                           ; BSR set to: 0
 41824                           ;doprnt.c: 1168: if(flag & 0x03)
 41825  012016  0E03               	movlw	3
 41826  012018  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41827  01201A  6F72               	movwf	??i2__doprnt& (0+255),b
 41828  01201C  0E00               	movlw	0
 41829  01201E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41830  012020  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41831  012022  5172               	movf	??i2__doprnt& (0+255),w,b
 41832  012024  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41833  012026  B4D8               	btfsc	status,2,c
 41834  012028  D003               	goto	i2l20403
 41835                           
 41836                           ; BSR set to: 0
 41837                           ;doprnt.c: 1169: width--;
 41838  01202A  079D               	decf	i2__doprnt@width& (0+255),f,b
 41839  01202C  A0D8               	btfss	status,0,c
 41840  01202E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41841  012030                     i2l20403:
 41842                           
 41843                           ; BSR set to: 0
 41844                           ;doprnt.c: 1172: if(flag & 0x04) {
 41845  012030  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 41846  012032  D0F0               	goto	i2l20455
 41847                           
 41848                           ; BSR set to: 0
 41849                           ;doprnt.c: 1174: if(flag & 0x02)
 41850  012034  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41851  012036  D041               	goto	i2l2498
 41852                           
 41853                           ; BSR set to: 0
 41854  012038  EE20 F002          	lfsr	2,2
 41855  01203C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41856  01203E  26D9               	addwf	fsr2l,f,c
 41857  012040  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41858  012042  22DA               	addwfc	fsr2h,f,c
 41859  012044  50DE               	movf	postinc2,w,c
 41860  012046  10DE               	iorwf	postinc2,w,c
 41861  012048  10DE               	iorwf	postinc2,w,c
 41862  01204A  B4D8               	btfsc	status,2,c
 41863  01204C  D01D               	goto	i2l2500
 41864                           
 41865                           ; BSR set to: 0
 41866  01204E  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41867  012050  D004               	goto	i2l20413
 41868                           
 41869                           ; BSR set to: 0
 41870  012052  0E00               	movlw	0
 41871  012054  6F7C               	movwf	(i2__doprnt$4981+1)& (0+255),b
 41872  012056  0E2B               	movlw	43
 41873  012058  D003               	goto	L36
 41874  01205A                     i2l20413:
 41875                           
 41876                           ; BSR set to: 0
 41877  01205A  0E00               	movlw	0
 41878  01205C  6F7C               	movwf	(i2__doprnt$4981+1)& (0+255),b
 41879  01205E  0E2D               	movlw	45
 41880  012060                     L36:
 41881  012060  6F7B               	movwf	i2__doprnt$4981& (0+255),b
 41882                           
 41883                           ; BSR set to: 0
 41884  012062  EE20 F002          	lfsr	2,2
 41885  012066  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41886  012068  26D9               	addwf	fsr2l,f,c
 41887  01206A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41888  01206C  22DA               	addwfc	fsr2h,f,c
 41889  01206E  D801               	call	i2u2614_48
 41890  012070  D091               	goto	i2l20443
 41891  012072                     i2u2614_48:
 41892  012072  0005               	push	
 41893  012074  6EFA               	movwf	pclath,c
 41894  012076  50DE               	movf	postinc2,w,c
 41895  012078  6EFD               	movwf	tosl,c
 41896  01207A  50DE               	movf	postinc2,w,c
 41897  01207C  6EFE               	movwf	tosh,c
 41898  01207E  50DE               	movf	postinc2,w,c
 41899  012080  6EFF               	movwf	tosu,c
 41900  012082  50FA               	movf	pclath,w,c
 41901  012084  517B               	movf	i2__doprnt$4981& (0+255),w,b
 41902  012086  0012               	return		;indir
 41903  012088                     i2l2500:
 41904                           
 41905                           ; BSR set to: 0
 41906  012088  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41907  01208A  D004               	goto	i2l20419
 41908                           
 41909                           ; BSR set to: 0
 41910  01208C  0E00               	movlw	0
 41911  01208E  6F7E               	movwf	(i2__doprnt$4982+1)& (0+255),b
 41912  012090  0E2B               	movlw	43
 41913  012092  D003               	goto	L37
 41914  012094                     i2l20419:
 41915                           
 41916                           ; BSR set to: 0
 41917  012094  0E00               	movlw	0
 41918  012096  6F7E               	movwf	(i2__doprnt$4982+1)& (0+255),b
 41919  012098  0E2D               	movlw	45
 41920  01209A                     L37:
 41921  01209A  6F7D               	movwf	i2__doprnt$4982& (0+255),b
 41922                           
 41923                           ; BSR set to: 0
 41924  01209C  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41925  0120A0  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41926  0120A4  CFDE F072          	movff	postinc2,??i2__doprnt
 41927  0120A8  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41928  0120AC  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41929  0120B0  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41930  0120B4  C07D  FFDF         	movff	i2__doprnt$4982,indf2
 41931  0120B8  D02E               	goto	i2l20431
 41932  0120BA                     i2l2498:
 41933                           
 41934                           ; BSR set to: 0
 41935                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 41936  0120BA  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41937  0120BC  D06B               	goto	i2l20443
 41938                           
 41939                           ; BSR set to: 0
 41940  0120BE  EE20 F002          	lfsr	2,2
 41941  0120C2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41942  0120C4  26D9               	addwf	fsr2l,f,c
 41943  0120C6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41944  0120C8  22DA               	addwfc	fsr2h,f,c
 41945  0120CA  50DE               	movf	postinc2,w,c
 41946  0120CC  10DE               	iorwf	postinc2,w,c
 41947  0120CE  10DE               	iorwf	postinc2,w,c
 41948  0120D0  B4D8               	btfsc	status,2,c
 41949  0120D2  D013               	goto	i2l20429
 41950                           
 41951                           ; BSR set to: 0
 41952  0120D4  EE20 F002          	lfsr	2,2
 41953  0120D8  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41954  0120DA  26D9               	addwf	fsr2l,f,c
 41955  0120DC  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41956  0120DE  22DA               	addwfc	fsr2h,f,c
 41957  0120E0  D801               	call	i2u2618_48
 41958  0120E2  D058               	goto	i2l20443
 41959  0120E4                     i2u2618_48:
 41960  0120E4  0005               	push	
 41961  0120E6  6EFA               	movwf	pclath,c
 41962  0120E8  50DE               	movf	postinc2,w,c
 41963  0120EA  6EFD               	movwf	tosl,c
 41964  0120EC  50DE               	movf	postinc2,w,c
 41965  0120EE  6EFE               	movwf	tosh,c
 41966  0120F0  50DE               	movf	postinc2,w,c
 41967  0120F2  6EFF               	movwf	tosu,c
 41968  0120F4  50FA               	movf	pclath,w,c
 41969  0120F6  0E20               	movlw	32
 41970  0120F8  0012               	return		;indir
 41971  0120FA                     i2l20429:
 41972                           
 41973                           ; BSR set to: 0
 41974  0120FA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41975  0120FE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41976  012102  CFDE F072          	movff	postinc2,??i2__doprnt
 41977  012106  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41978  01210A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41979  01210E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41980  012112  0E20               	movlw	32
 41981  012114  6EDF               	movwf	indf2,c
 41982  012116                     i2l20431:
 41983                           
 41984                           ; BSR set to: 0
 41985  012116  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41986  01211A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41987  01211E  2ADE               	incf	postinc2,f,c
 41988  012120  0E00               	movlw	0
 41989  012122  22DD               	addwfc	postdec2,f,c
 41990  012124  D037               	goto	i2l20443
 41991  012126                     i2l20433:
 41992                           
 41993                           ; BSR set to: 0
 41994  012126  EE20 F002          	lfsr	2,2
 41995  01212A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41996  01212C  26D9               	addwf	fsr2l,f,c
 41997  01212E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41998  012130  22DA               	addwfc	fsr2h,f,c
 41999  012132  50DE               	movf	postinc2,w,c
 42000  012134  10DE               	iorwf	postinc2,w,c
 42001  012136  10DE               	iorwf	postinc2,w,c
 42002  012138  B4D8               	btfsc	status,2,c
 42003  01213A  D013               	goto	i2l20437
 42004                           
 42005                           ; BSR set to: 0
 42006  01213C  EE20 F002          	lfsr	2,2
 42007  012140  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42008  012142  26D9               	addwf	fsr2l,f,c
 42009  012144  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42010  012146  22DA               	addwfc	fsr2h,f,c
 42011  012148  D801               	call	i2u2620_48
 42012  01214A  D020               	goto	i2l20441
 42013  01214C                     i2u2620_48:
 42014  01214C  0005               	push	
 42015  01214E  6EFA               	movwf	pclath,c
 42016  012150  50DE               	movf	postinc2,w,c
 42017  012152  6EFD               	movwf	tosl,c
 42018  012154  50DE               	movf	postinc2,w,c
 42019  012156  6EFE               	movwf	tosh,c
 42020  012158  50DE               	movf	postinc2,w,c
 42021  01215A  6EFF               	movwf	tosu,c
 42022  01215C  50FA               	movf	pclath,w,c
 42023  01215E  0E30               	movlw	48
 42024  012160  0012               	return		;indir
 42025  012162                     i2l20437:
 42026                           
 42027                           ; BSR set to: 0
 42028  012162  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42029  012166  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42030  01216A  CFDE F072          	movff	postinc2,??i2__doprnt
 42031  01216E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42032  012172  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42033  012176  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42034  01217A  0E30               	movlw	48
 42035  01217C  6EDF               	movwf	indf2,c
 42036                           
 42037                           ; BSR set to: 0
 42038  01217E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42039  012182  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42040  012186  2ADE               	incf	postinc2,f,c
 42041  012188  0E00               	movlw	0
 42042  01218A  22DD               	addwfc	postdec2,f,c
 42043  01218C                     i2l20441:
 42044                           
 42045                           ;doprnt.c: 1189: width--;
 42046  01218C  0100               	movlb	0	; () banked
 42047  01218E  079D               	decf	i2__doprnt@width& (0+255),f,b
 42048  012190  A0D8               	btfss	status,0,c
 42049  012192  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42050  012194                     i2l20443:
 42051  012194  0100               	movlb	0	; () banked
 42052  012196  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42053  012198  D12E               	goto	i2l20493
 42054  01219A  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42055  01219C  E1C4               	bnz	i2l20433
 42056  01219E  059D               	decf	i2__doprnt@width& (0+255),w,b
 42057  0121A0  A0D8               	btfss	status,0,c
 42058  0121A2  D129               	goto	i2l20493
 42059  0121A4  D7C0               	goto	i2l20433
 42060  0121A6                     i2l20445:
 42061                           
 42062                           ; BSR set to: 0
 42063  0121A6  EE20 F002          	lfsr	2,2
 42064  0121AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42065  0121AC  26D9               	addwf	fsr2l,f,c
 42066  0121AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42067  0121B0  22DA               	addwfc	fsr2h,f,c
 42068  0121B2  50DE               	movf	postinc2,w,c
 42069  0121B4  10DE               	iorwf	postinc2,w,c
 42070  0121B6  10DE               	iorwf	postinc2,w,c
 42071  0121B8  B4D8               	btfsc	status,2,c
 42072  0121BA  D013               	goto	i2l20449
 42073                           
 42074                           ; BSR set to: 0
 42075  0121BC  EE20 F002          	lfsr	2,2
 42076  0121C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42077  0121C2  26D9               	addwf	fsr2l,f,c
 42078  0121C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42079  0121C6  22DA               	addwfc	fsr2h,f,c
 42080  0121C8  D801               	call	i2u2623_48
 42081  0121CA  D020               	goto	i2l20453
 42082  0121CC                     i2u2623_48:
 42083  0121CC  0005               	push	
 42084  0121CE  6EFA               	movwf	pclath,c
 42085  0121D0  50DE               	movf	postinc2,w,c
 42086  0121D2  6EFD               	movwf	tosl,c
 42087  0121D4  50DE               	movf	postinc2,w,c
 42088  0121D6  6EFE               	movwf	tosh,c
 42089  0121D8  50DE               	movf	postinc2,w,c
 42090  0121DA  6EFF               	movwf	tosu,c
 42091  0121DC  50FA               	movf	pclath,w,c
 42092  0121DE  0E20               	movlw	32
 42093  0121E0  0012               	return		;indir
 42094  0121E2                     i2l20449:
 42095                           
 42096                           ; BSR set to: 0
 42097  0121E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42098  0121E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42099  0121EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42100  0121EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42101  0121F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42102  0121F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42103  0121FA  0E20               	movlw	32
 42104  0121FC  6EDF               	movwf	indf2,c
 42105                           
 42106                           ; BSR set to: 0
 42107  0121FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42108  012202  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42109  012206  2ADE               	incf	postinc2,f,c
 42110  012208  0E00               	movlw	0
 42111  01220A  22DD               	addwfc	postdec2,f,c
 42112  01220C                     i2l20453:
 42113                           
 42114                           ;doprnt.c: 1201: width--;
 42115  01220C  0100               	movlb	0	; () banked
 42116  01220E  079D               	decf	i2__doprnt@width& (0+255),f,b
 42117  012210  A0D8               	btfss	status,0,c
 42118  012212  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42119  012214                     i2l20455:
 42120                           
 42121                           ; BSR set to: 0
 42122  012214  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42123  012216  D005               	goto	i2u2624_40
 42124  012218  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42125  01221A  E1C5               	bnz	i2l20445
 42126  01221C  059D               	decf	i2__doprnt@width& (0+255),w,b
 42127  01221E  B0D8               	btfsc	status,0,c
 42128  012220  D7C2               	goto	i2l20445
 42129  012222                     i2u2624_40:
 42130                           
 42131                           ; BSR set to: 0
 42132                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 42133  012222  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 42134  012224  D041               	goto	i2l2532
 42135                           
 42136                           ; BSR set to: 0
 42137  012226  EE20 F002          	lfsr	2,2
 42138  01222A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42139  01222C  26D9               	addwf	fsr2l,f,c
 42140  01222E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42141  012230  22DA               	addwfc	fsr2h,f,c
 42142  012232  50DE               	movf	postinc2,w,c
 42143  012234  10DE               	iorwf	postinc2,w,c
 42144  012236  10DE               	iorwf	postinc2,w,c
 42145  012238  B4D8               	btfsc	status,2,c
 42146  01223A  D01D               	goto	i2l2534
 42147                           
 42148                           ; BSR set to: 0
 42149  01223C  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42150  01223E  D004               	goto	i2l20463
 42151                           
 42152                           ; BSR set to: 0
 42153  012240  0E00               	movlw	0
 42154  012242  6F80               	movwf	(i2__doprnt$4983+1)& (0+255),b
 42155  012244  0E2B               	movlw	43
 42156  012246  D003               	goto	L38
 42157  012248                     i2l20463:
 42158                           
 42159                           ; BSR set to: 0
 42160  012248  0E00               	movlw	0
 42161  01224A  6F80               	movwf	(i2__doprnt$4983+1)& (0+255),b
 42162  01224C  0E2D               	movlw	45
 42163  01224E                     L38:
 42164  01224E  6F7F               	movwf	i2__doprnt$4983& (0+255),b
 42165                           
 42166                           ; BSR set to: 0
 42167  012250  EE20 F002          	lfsr	2,2
 42168  012254  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42169  012256  26D9               	addwf	fsr2l,f,c
 42170  012258  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42171  01225A  22DA               	addwfc	fsr2h,f,c
 42172  01225C  D801               	call	i2u2628_48
 42173  01225E  D0CB               	goto	i2l20493
 42174  012260                     i2u2628_48:
 42175  012260  0005               	push	
 42176  012262  6EFA               	movwf	pclath,c
 42177  012264  50DE               	movf	postinc2,w,c
 42178  012266  6EFD               	movwf	tosl,c
 42179  012268  50DE               	movf	postinc2,w,c
 42180  01226A  6EFE               	movwf	tosh,c
 42181  01226C  50DE               	movf	postinc2,w,c
 42182  01226E  6EFF               	movwf	tosu,c
 42183  012270  50FA               	movf	pclath,w,c
 42184  012272  517F               	movf	i2__doprnt$4983& (0+255),w,b
 42185  012274  0012               	return		;indir
 42186  012276                     i2l2534:
 42187                           
 42188                           ; BSR set to: 0
 42189  012276  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42190  012278  D004               	goto	i2l20469
 42191                           
 42192                           ; BSR set to: 0
 42193  01227A  0E00               	movlw	0
 42194  01227C  6F82               	movwf	(i2__doprnt$4984+1)& (0+255),b
 42195  01227E  0E2B               	movlw	43
 42196  012280  D003               	goto	L39
 42197  012282                     i2l20469:
 42198                           
 42199                           ; BSR set to: 0
 42200  012282  0E00               	movlw	0
 42201  012284  6F82               	movwf	(i2__doprnt$4984+1)& (0+255),b
 42202  012286  0E2D               	movlw	45
 42203  012288                     L39:
 42204  012288  6F81               	movwf	i2__doprnt$4984& (0+255),b
 42205                           
 42206                           ; BSR set to: 0
 42207  01228A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42208  01228E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42209  012292  CFDE F072          	movff	postinc2,??i2__doprnt
 42210  012296  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42211  01229A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42212  01229E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42213  0122A2  C081  FFDF         	movff	i2__doprnt$4984,indf2
 42214  0122A6  D0A0               	goto	L40
 42215  0122A8                     i2l2532:
 42216                           
 42217                           ; BSR set to: 0
 42218                           ;doprnt.c: 1211: else if(flag & 0x01)
 42219  0122A8  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 42220  0122AA  D0A5               	goto	i2l20493
 42221                           
 42222                           ; BSR set to: 0
 42223  0122AC  EE20 F002          	lfsr	2,2
 42224  0122B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42225  0122B2  26D9               	addwf	fsr2l,f,c
 42226  0122B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42227  0122B6  22DA               	addwfc	fsr2h,f,c
 42228  0122B8  50DE               	movf	postinc2,w,c
 42229  0122BA  10DE               	iorwf	postinc2,w,c
 42230  0122BC  10DE               	iorwf	postinc2,w,c
 42231  0122BE  B4D8               	btfsc	status,2,c
 42232  0122C0  D013               	goto	i2l20479
 42233                           
 42234                           ; BSR set to: 0
 42235  0122C2  EE20 F002          	lfsr	2,2
 42236  0122C6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42237  0122C8  26D9               	addwf	fsr2l,f,c
 42238  0122CA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42239  0122CC  22DA               	addwfc	fsr2h,f,c
 42240  0122CE  D801               	call	i2u2632_48
 42241  0122D0  D092               	goto	i2l20493
 42242  0122D2                     i2u2632_48:
 42243  0122D2  0005               	push	
 42244  0122D4  6EFA               	movwf	pclath,c
 42245  0122D6  50DE               	movf	postinc2,w,c
 42246  0122D8  6EFD               	movwf	tosl,c
 42247  0122DA  50DE               	movf	postinc2,w,c
 42248  0122DC  6EFE               	movwf	tosh,c
 42249  0122DE  50DE               	movf	postinc2,w,c
 42250  0122E0  6EFF               	movwf	tosu,c
 42251  0122E2  50FA               	movf	pclath,w,c
 42252  0122E4  0E20               	movlw	32
 42253  0122E6  0012               	return		;indir
 42254  0122E8                     i2l20479:
 42255                           
 42256                           ; BSR set to: 0
 42257  0122E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42258  0122EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42259  0122F0  CFDE F072          	movff	postinc2,??i2__doprnt
 42260  0122F4  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42261  0122F8  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42262  0122FC  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42263  012300  0E20               	movlw	32
 42264  012302  D071               	goto	L60
 42265  012304                     i2l20483:
 42266                           
 42267                           ; BSR set to: 0
 42268                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 42269  012304  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42270  012308  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42271  01230C  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42272  012310  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42273  012314  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42274  012316  0D04               	mullw	4
 42275  012318  0EAF               	movlw	low _dpowers
 42276  01231A  24F3               	addwf	prodl,w,c
 42277  01231C  6EF6               	movwf	tblptrl,c
 42278  01231E  0EE7               	movlw	high _dpowers
 42279  012320  20F4               	addwfc	prodh,w,c
 42280  012322  6EF7               	movwf	tblptrh,c
 42281  012324                     	if	1	;There are 3 active tblptr bytes
 42282  012324  6AF8               	clrf	tblptru,c
 42283  012326  0E00               	movlw	low (__mediumconst shr (0+16))
 42284  012328  22F8               	addwfc	tblptru,f,c
 42285  01232A                     	endif
 42286  01232A  0009               	tblrd		*+
 42287  01232C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42288  012330  0009               	tblrd		*+
 42289  012332  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42290  012336  0009               	tblrd		*+
 42291  012338  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42292  01233C  000A               	tblrd		*-
 42293  01233E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42294  012342  ECAF  F0D8         	call	i2___lldiv
 42295  012346  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42296  01234A  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42297  01234E  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42298  012352  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42299                           
 42300                           ;doprnt.c: 1221: tmpval.vd %= 10;
 42301  012356  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42302  01235A  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42303  01235E  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42304  012362  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42305  012366  0E0A               	movlw	10
 42306  012368  6E12               	movwf	i2___llmod@divisor,c
 42307  01236A  0E00               	movlw	0
 42308  01236C  6E13               	movwf	i2___llmod@divisor+1,c
 42309  01236E  0E00               	movlw	0
 42310  012370  6E14               	movwf	i2___llmod@divisor+2,c
 42311  012372  0E00               	movlw	0
 42312  012374  6E15               	movwf	i2___llmod@divisor+3,c
 42313  012376  EC34  F0DA         	call	i2___llmod	;wreg free
 42314  01237A  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42315  01237E  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42316  012382  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42317  012386  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42318  01238A  0100               	movlb	0	; () banked
 42319  01238C  EE20 F002          	lfsr	2,2
 42320  012390  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42321  012392  26D9               	addwf	fsr2l,f,c
 42322  012394  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42323  012396  22DA               	addwfc	fsr2h,f,c
 42324  012398  50DE               	movf	postinc2,w,c
 42325  01239A  10DE               	iorwf	postinc2,w,c
 42326  01239C  10DE               	iorwf	postinc2,w,c
 42327  01239E  B4D8               	btfsc	status,2,c
 42328  0123A0  D014               	goto	i2l20491
 42329                           
 42330                           ; BSR set to: 0
 42331  0123A2  EE20 F002          	lfsr	2,2
 42332  0123A6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42333  0123A8  26D9               	addwf	fsr2l,f,c
 42334  0123AA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42335  0123AC  22DA               	addwfc	fsr2h,f,c
 42336  0123AE  D801               	call	i2u2634_48
 42337  0123B0  D022               	goto	i2l20493
 42338  0123B2                     i2u2634_48:
 42339  0123B2  0005               	push	
 42340  0123B4  6EFA               	movwf	pclath,c
 42341  0123B6  50DE               	movf	postinc2,w,c
 42342  0123B8  6EFD               	movwf	tosl,c
 42343  0123BA  50DE               	movf	postinc2,w,c
 42344  0123BC  6EFE               	movwf	tosh,c
 42345  0123BE  50DE               	movf	postinc2,w,c
 42346  0123C0  6EFF               	movwf	tosu,c
 42347  0123C2  50FA               	movf	pclath,w,c
 42348  0123C4  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42349  0123C6  0F30               	addlw	48
 42350  0123C8  0012               	return		;indir
 42351  0123CA                     i2l20491:
 42352                           
 42353                           ; BSR set to: 0
 42354  0123CA  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42355  0123CC  0F30               	addlw	48
 42356  0123CE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42357  0123D2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42358  0123D6  CFDE F072          	movff	postinc2,??i2__doprnt
 42359  0123DA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42360  0123DE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42361  0123E2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42362  0123E6                     L60:
 42363  0123E6  6EDF               	movwf	indf2,c
 42364  0123E8                     L40:
 42365  0123E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42366  0123EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42367  0123F0  2ADE               	incf	postinc2,f,c
 42368  0123F2  0E00               	movlw	0
 42369  0123F4  22DD               	addwfc	postdec2,f,c
 42370  0123F6                     i2l20493:
 42371  0123F6  0100               	movlb	0	; () banked
 42372  0123F8  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42373  0123FA  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42374  0123FC  B4D8               	btfsc	status,2,c
 42375  0123FE  D038               	goto	i2l20505
 42376  012400  D781               	goto	i2l20483
 42377  012402                     i2l20495:
 42378                           
 42379                           ; BSR set to: 0
 42380  012402  EE20 F002          	lfsr	2,2
 42381  012406  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42382  012408  26D9               	addwf	fsr2l,f,c
 42383  01240A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42384  01240C  22DA               	addwfc	fsr2h,f,c
 42385  01240E  50DE               	movf	postinc2,w,c
 42386  012410  10DE               	iorwf	postinc2,w,c
 42387  012412  10DE               	iorwf	postinc2,w,c
 42388  012414  B4D8               	btfsc	status,2,c
 42389  012416  D013               	goto	i2l20499
 42390                           
 42391                           ; BSR set to: 0
 42392  012418  EE20 F002          	lfsr	2,2
 42393  01241C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42394  01241E  26D9               	addwf	fsr2l,f,c
 42395  012420  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42396  012422  22DA               	addwfc	fsr2h,f,c
 42397  012424  D801               	call	i2u2637_48
 42398  012426  D020               	goto	i2l20503
 42399  012428                     i2u2637_48:
 42400  012428  0005               	push	
 42401  01242A  6EFA               	movwf	pclath,c
 42402  01242C  50DE               	movf	postinc2,w,c
 42403  01242E  6EFD               	movwf	tosl,c
 42404  012430  50DE               	movf	postinc2,w,c
 42405  012432  6EFE               	movwf	tosh,c
 42406  012434  50DE               	movf	postinc2,w,c
 42407  012436  6EFF               	movwf	tosu,c
 42408  012438  50FA               	movf	pclath,w,c
 42409  01243A  0E30               	movlw	48
 42410  01243C  0012               	return		;indir
 42411  01243E                     i2l20499:
 42412                           
 42413                           ; BSR set to: 0
 42414  01243E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42415  012442  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42416  012446  CFDE F072          	movff	postinc2,??i2__doprnt
 42417  01244A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42418  01244E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42419  012452  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42420  012456  0E30               	movlw	48
 42421  012458  6EDF               	movwf	indf2,c
 42422                           
 42423                           ; BSR set to: 0
 42424  01245A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42425  01245E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42426  012462  2ADE               	incf	postinc2,f,c
 42427  012464  0E00               	movlw	0
 42428  012466  22DD               	addwfc	postdec2,f,c
 42429  012468                     i2l20503:
 42430                           
 42431                           ;doprnt.c: 1228: eexp--;
 42432  012468  0100               	movlb	0	; () banked
 42433  01246A  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 42434  01246C  A0D8               	btfss	status,0,c
 42435  01246E  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 42436  012470                     i2l20505:
 42437                           
 42438                           ; BSR set to: 0
 42439  012470  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 42440  012472  D005               	goto	i2u2638_40
 42441  012474  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 42442  012476  E1C5               	bnz	i2l20495
 42443  012478  058F               	decf	i2__doprnt@eexp& (0+255),w,b
 42444  01247A  B0D8               	btfsc	status,0,c
 42445  01247C  D7C2               	goto	i2l20495
 42446  01247E                     i2u2638_40:
 42447                           
 42448                           ; BSR set to: 0
 42449                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 42450  01247E  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42451  012480  D009               	goto	i2l2565
 42452  012482  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42453  012484  E104               	bnz	i2u2639_40
 42454  012486  0E09               	movlw	9
 42455  012488  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42456  01248A  A0D8               	btfss	status,0,c
 42457  01248C  D003               	goto	i2l2565
 42458  01248E                     i2u2639_40:
 42459                           
 42460                           ; BSR set to: 0
 42461                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 42462  01248E  0E08               	movlw	8
 42463  012490  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42464  012492  D002               	goto	i2l20511
 42465  012494                     i2l2565:
 42466                           
 42467                           ; BSR set to: 0
 42468                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 42469  012494  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42470  012498                     i2l20511:
 42471                           
 42472                           ; BSR set to: 0
 42473                           ;doprnt.c: 1234: prec -= (int)c;
 42474  012498  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42475  01249A  5F9F               	subwf	i2__doprnt@prec& (0+255),f,b
 42476  01249C  0E00               	movlw	0
 42477  01249E  5BA0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 42478                           
 42479                           ; BSR set to: 0
 42480                           ;doprnt.c: 1238: if(c)
 42481  0124A0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42482  0124A2  B4D8               	btfsc	status,2,c
 42483  0124A4  D033               	goto	i2l20523
 42484                           
 42485                           ; BSR set to: 0
 42486  0124A6  EE20 F002          	lfsr	2,2
 42487  0124AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42488  0124AC  26D9               	addwf	fsr2l,f,c
 42489  0124AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42490  0124B0  22DA               	addwfc	fsr2h,f,c
 42491  0124B2  50DE               	movf	postinc2,w,c
 42492  0124B4  10DE               	iorwf	postinc2,w,c
 42493  0124B6  10DE               	iorwf	postinc2,w,c
 42494  0124B8  B4D8               	btfsc	status,2,c
 42495  0124BA  D013               	goto	i2l20519
 42496                           
 42497                           ; BSR set to: 0
 42498  0124BC  EE20 F002          	lfsr	2,2
 42499  0124C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42500  0124C2  26D9               	addwf	fsr2l,f,c
 42501  0124C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42502  0124C6  22DA               	addwfc	fsr2h,f,c
 42503  0124C8  D801               	call	i2u2642_48
 42504  0124CA  D020               	goto	i2l20523
 42505  0124CC                     i2u2642_48:
 42506  0124CC  0005               	push	
 42507  0124CE  6EFA               	movwf	pclath,c
 42508  0124D0  50DE               	movf	postinc2,w,c
 42509  0124D2  6EFD               	movwf	tosl,c
 42510  0124D4  50DE               	movf	postinc2,w,c
 42511  0124D6  6EFE               	movwf	tosh,c
 42512  0124D8  50DE               	movf	postinc2,w,c
 42513  0124DA  6EFF               	movwf	tosu,c
 42514  0124DC  50FA               	movf	pclath,w,c
 42515  0124DE  0E2E               	movlw	46
 42516  0124E0  0012               	return		;indir
 42517  0124E2                     i2l20519:
 42518                           
 42519                           ; BSR set to: 0
 42520  0124E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42521  0124E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42522  0124EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42523  0124EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42524  0124F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42525  0124F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42526  0124FA  0E2E               	movlw	46
 42527  0124FC  6EDF               	movwf	indf2,c
 42528                           
 42529                           ; BSR set to: 0
 42530  0124FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42531  012502  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42532  012506  2ADE               	incf	postinc2,f,c
 42533  012508  0E00               	movlw	0
 42534  01250A  22DD               	addwfc	postdec2,f,c
 42535  01250C                     i2l20523:
 42536                           
 42537                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42538  01250C  0100               	movlb	0	; () banked
 42539  01250E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42540  012510  EC3C  F0AC         	call	i2_scale
 42541  012514  C045  F076         	movff	?i2_scale,i2__doprnt$6425
 42542  012518  C046  F077         	movff	?i2_scale+1,i2__doprnt$6425+1
 42543  01251C  C047  F078         	movff	?i2_scale+2,i2__doprnt$6425+2
 42544  012520  C048  F079         	movff	?i2_scale+3,i2__doprnt$6425+3
 42545                           
 42546                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42547  012524  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 42548  012528  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42549  01252C  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42550  012530  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42551  012534  C076  F02C         	movff	i2__doprnt$6425,i2___flmul@b
 42552  012538  C077  F02D         	movff	i2__doprnt$6425+1,i2___flmul@b+1
 42553  01253C  C078  F02E         	movff	i2__doprnt$6425+2,i2___flmul@b+2
 42554  012540  C079  F02F         	movff	i2__doprnt$6425+3,i2___flmul@b+3
 42555  012544  ECCE  F0B6         	call	i2___flmul	;wreg free
 42556  012548  C02C  F04E         	movff	?i2___flmul,i2___fltol@f1
 42557  01254C  C02D  F04F         	movff	?i2___flmul+1,i2___fltol@f1+1
 42558  012550  C02E  F050         	movff	?i2___flmul+2,i2___fltol@f1+2
 42559  012554  C02F  F051         	movff	?i2___flmul+3,i2___fltol@f1+3
 42560  012558  EC7B  F0D4         	call	i2___fltol	;wreg free
 42561  01255C  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 42562  012560  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 42563  012564  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 42564  012568  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 42565                           
 42566                           ;doprnt.c: 1247: while(c--) {
 42567  01256C  D0A3               	goto	i2l20539
 42568  01256E                     i2l20527:
 42569                           
 42570                           ; BSR set to: 0
 42571                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 42572  01256E  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42573  012572  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42574  012576  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42575  01257A  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42576  01257E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42577  012580  0D04               	mullw	4
 42578  012582  0EAF               	movlw	low _dpowers
 42579  012584  24F3               	addwf	prodl,w,c
 42580  012586  6EF6               	movwf	tblptrl,c
 42581  012588  0EE7               	movlw	high _dpowers
 42582  01258A  20F4               	addwfc	prodh,w,c
 42583  01258C  6EF7               	movwf	tblptrh,c
 42584  01258E                     	if	1	;There are 3 active tblptr bytes
 42585  01258E  6AF8               	clrf	tblptru,c
 42586  012590  0E00               	movlw	low (__mediumconst shr (0+16))
 42587  012592  22F8               	addwfc	tblptru,f,c
 42588  012594                     	endif
 42589  012594  0009               	tblrd		*+
 42590  012596  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42591  01259A  0009               	tblrd		*+
 42592  01259C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42593  0125A0  0009               	tblrd		*+
 42594  0125A2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42595  0125A6  000A               	tblrd		*-
 42596  0125A8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42597  0125AC  ECAF  F0D8         	call	i2___lldiv	;wreg free
 42598  0125B0  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42599  0125B4  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42600  0125B8  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42601  0125BC  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42602                           
 42603                           ;doprnt.c: 1249: tmpval.vd %= 10;
 42604  0125C0  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42605  0125C4  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42606  0125C8  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42607  0125CC  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42608  0125D0  0E0A               	movlw	10
 42609  0125D2  6E12               	movwf	i2___llmod@divisor,c
 42610  0125D4  0E00               	movlw	0
 42611  0125D6  6E13               	movwf	i2___llmod@divisor+1,c
 42612  0125D8  0E00               	movlw	0
 42613  0125DA  6E14               	movwf	i2___llmod@divisor+2,c
 42614  0125DC  0E00               	movlw	0
 42615  0125DE  6E15               	movwf	i2___llmod@divisor+3,c
 42616  0125E0  EC34  F0DA         	call	i2___llmod	;wreg free
 42617  0125E4  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42618  0125E8  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42619  0125EC  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42620  0125F0  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42621  0125F4  0100               	movlb	0	; () banked
 42622  0125F6  EE20 F002          	lfsr	2,2
 42623  0125FA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42624  0125FC  26D9               	addwf	fsr2l,f,c
 42625  0125FE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42626  012600  22DA               	addwfc	fsr2h,f,c
 42627  012602  50DE               	movf	postinc2,w,c
 42628  012604  10DE               	iorwf	postinc2,w,c
 42629  012606  10DE               	iorwf	postinc2,w,c
 42630  012608  B4D8               	btfsc	status,2,c
 42631  01260A  D014               	goto	i2l20535
 42632                           
 42633                           ; BSR set to: 0
 42634  01260C  EE20 F002          	lfsr	2,2
 42635  012610  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42636  012612  26D9               	addwf	fsr2l,f,c
 42637  012614  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42638  012616  22DA               	addwfc	fsr2h,f,c
 42639  012618  D801               	call	i2u2644_48
 42640  01261A  D022               	goto	i2l20537
 42641  01261C                     i2u2644_48:
 42642  01261C  0005               	push	
 42643  01261E  6EFA               	movwf	pclath,c
 42644  012620  50DE               	movf	postinc2,w,c
 42645  012622  6EFD               	movwf	tosl,c
 42646  012624  50DE               	movf	postinc2,w,c
 42647  012626  6EFE               	movwf	tosh,c
 42648  012628  50DE               	movf	postinc2,w,c
 42649  01262A  6EFF               	movwf	tosu,c
 42650  01262C  50FA               	movf	pclath,w,c
 42651  01262E  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42652  012630  0F30               	addlw	48
 42653  012632  0012               	return		;indir
 42654  012634                     i2l20535:
 42655                           
 42656                           ; BSR set to: 0
 42657  012634  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42658  012636  0F30               	addlw	48
 42659  012638  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42660  01263C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42661  012640  CFDE F072          	movff	postinc2,??i2__doprnt
 42662  012644  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42663  012648  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42664  01264C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42665  012650  6EDF               	movwf	indf2,c
 42666  012652  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42667  012656  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42668  01265A  2ADE               	incf	postinc2,f,c
 42669  01265C  0E00               	movlw	0
 42670  01265E  22DD               	addwfc	postdec2,f,c
 42671  012660                     i2l20537:
 42672                           
 42673                           ;doprnt.c: 1251: val %= dpowers[c];
 42674  012660  C099  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 42675  012664  C09A  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 42676  012668  C09B  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 42677  01266C  C09C  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 42678  012670  0100               	movlb	0	; () banked
 42679  012672  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42680  012674  0D04               	mullw	4
 42681  012676  0EAF               	movlw	low _dpowers
 42682  012678  24F3               	addwf	prodl,w,c
 42683  01267A  6EF6               	movwf	tblptrl,c
 42684  01267C  0EE7               	movlw	high _dpowers
 42685  01267E  20F4               	addwfc	prodh,w,c
 42686  012680  6EF7               	movwf	tblptrh,c
 42687  012682                     	if	1	;There are 3 active tblptr bytes
 42688  012682  6AF8               	clrf	tblptru,c
 42689  012684  0E00               	movlw	low (__mediumconst shr (0+16))
 42690  012686  22F8               	addwfc	tblptru,f,c
 42691  012688                     	endif
 42692  012688  0009               	tblrd		*+
 42693  01268A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 42694  01268E  0009               	tblrd		*+
 42695  012690  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 42696  012694  0009               	tblrd		*+
 42697  012696  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 42698  01269A  000A               	tblrd		*-
 42699  01269C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 42700  0126A0  EC34  F0DA         	call	i2___llmod
 42701  0126A4  C00E  F099         	movff	?i2___llmod,i2__doprnt@val
 42702  0126A8  C00F  F09A         	movff	?i2___llmod+1,i2__doprnt@val+1
 42703  0126AC  C010  F09B         	movff	?i2___llmod+2,i2__doprnt@val+2
 42704  0126B0  C011  F09C         	movff	?i2___llmod+3,i2__doprnt@val+3
 42705  0126B4                     i2l20539:
 42706  0126B4  0100               	movlb	0	; () banked
 42707  0126B6  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42708  0126B8  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42709  0126BA  B4D8               	btfsc	status,2,c
 42710  0126BC  D038               	goto	i2l20551
 42711  0126BE  D757               	goto	i2l20527
 42712  0126C0                     i2l20541:
 42713                           
 42714                           ; BSR set to: 0
 42715  0126C0  EE20 F002          	lfsr	2,2
 42716  0126C4  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42717  0126C6  26D9               	addwf	fsr2l,f,c
 42718  0126C8  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42719  0126CA  22DA               	addwfc	fsr2h,f,c
 42720  0126CC  50DE               	movf	postinc2,w,c
 42721  0126CE  10DE               	iorwf	postinc2,w,c
 42722  0126D0  10DE               	iorwf	postinc2,w,c
 42723  0126D2  B4D8               	btfsc	status,2,c
 42724  0126D4  D013               	goto	i2l20545
 42725                           
 42726                           ; BSR set to: 0
 42727  0126D6  EE20 F002          	lfsr	2,2
 42728  0126DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42729  0126DC  26D9               	addwf	fsr2l,f,c
 42730  0126DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42731  0126E0  22DA               	addwfc	fsr2h,f,c
 42732  0126E2  D801               	call	i2u2647_48
 42733  0126E4  D020               	goto	i2l20549
 42734  0126E6                     i2u2647_48:
 42735  0126E6  0005               	push	
 42736  0126E8  6EFA               	movwf	pclath,c
 42737  0126EA  50DE               	movf	postinc2,w,c
 42738  0126EC  6EFD               	movwf	tosl,c
 42739  0126EE  50DE               	movf	postinc2,w,c
 42740  0126F0  6EFE               	movwf	tosh,c
 42741  0126F2  50DE               	movf	postinc2,w,c
 42742  0126F4  6EFF               	movwf	tosu,c
 42743  0126F6  50FA               	movf	pclath,w,c
 42744  0126F8  0E30               	movlw	48
 42745  0126FA  0012               	return		;indir
 42746  0126FC                     i2l20545:
 42747                           
 42748                           ; BSR set to: 0
 42749  0126FC  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42750  012700  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42751  012704  CFDE F072          	movff	postinc2,??i2__doprnt
 42752  012708  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42753  01270C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42754  012710  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42755  012714  0E30               	movlw	48
 42756  012716  6EDF               	movwf	indf2,c
 42757                           
 42758                           ; BSR set to: 0
 42759  012718  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42760  01271C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42761  012720  2ADE               	incf	postinc2,f,c
 42762  012722  0E00               	movlw	0
 42763  012724  22DD               	addwfc	postdec2,f,c
 42764  012726                     i2l20549:
 42765                           
 42766                           ;doprnt.c: 1256: prec--;
 42767  012726  0100               	movlb	0	; () banked
 42768  012728  079F               	decf	i2__doprnt@prec& (0+255),f,b
 42769  01272A  A0D8               	btfss	status,0,c
 42770  01272C  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 42771  01272E                     i2l20551:
 42772                           
 42773                           ; BSR set to: 0
 42774  01272E  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42775  012730  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42776  012732  B4D8               	btfsc	status,2,c
 42777  012734  D360               	goto	i2u2693_40
 42778  012736  D7C4               	goto	i2l20541
 42779  012738                     i2l20553:
 42780                           
 42781                           ; BSR set to: 0
 42782                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 42783  012738  0EC0               	movlw	192
 42784  01273A  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42785  01273C  6F72               	movwf	??i2__doprnt& (0+255),b
 42786  01273E  0E00               	movlw	0
 42787  012740  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42788  012742  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42789  012744  5172               	movf	??i2__doprnt& (0+255),w,b
 42790  012746  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42791  012748  A4D8               	btfss	status,2,c
 42792  01274A  D041               	goto	i2l2586
 42793                           
 42794                           ; BSR set to: 0
 42795                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 42796  01274C  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42797  01274E  D019               	goto	i2l20559
 42798                           
 42799                           ; BSR set to: 0
 42800                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 42801  012750  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42802  012754  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42803  012758  CFDF F072          	movff	indf2,??i2__doprnt
 42804  01275C  0E04               	movlw	4
 42805  01275E  26DE               	addwf	postinc2,f,c
 42806  012760  CFDF F073          	movff	indf2,??i2__doprnt+1
 42807  012764  0E00               	movlw	0
 42808  012766  22DD               	addwfc	postdec2,f,c
 42809  012768  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42810  01276C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42811  012770  CFDE F099          	movff	postinc2,i2__doprnt@val
 42812  012774  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42813  012778  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42814  01277C  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42815  012780  D019               	goto	i2l20561
 42816  012782                     i2l20559:
 42817                           
 42818                           ; BSR set to: 0
 42819                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 42820  012782  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42821  012786  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42822  01278A  CFDF F072          	movff	indf2,??i2__doprnt
 42823  01278E  0E02               	movlw	2
 42824  012790  26DE               	addwf	postinc2,f,c
 42825  012792  CFDF F073          	movff	indf2,??i2__doprnt+1
 42826  012796  0E00               	movlw	0
 42827  012798  22DD               	addwfc	postdec2,f,c
 42828  01279A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42829  01279E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42830  0127A2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42831  0127A6  CFDD F09A          	movff	postdec2,i2__doprnt@val+1
 42832  0127AA  0E00               	movlw	0
 42833  0127AC  BF9A               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 42834  0127AE  0EFF               	movlw	-1
 42835  0127B0  6F9B               	movwf	(i2__doprnt@val+2)& (0+255),b
 42836  0127B2  6F9C               	movwf	(i2__doprnt@val+3)& (0+255),b
 42837  0127B4                     i2l20561:
 42838                           
 42839                           ; BSR set to: 0
 42840                           ;doprnt.c: 1280: if((long)val < 0) {
 42841  0127B4  AF9C               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 42842  0127B6  D040               	goto	i2l20571
 42843                           
 42844                           ; BSR set to: 0
 42845                           ;doprnt.c: 1281: flag |= 0x03;
 42846  0127B8  0E03               	movlw	3
 42847  0127BA  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 42848                           
 42849                           ; BSR set to: 0
 42850                           ;doprnt.c: 1282: val = -val;
 42851  0127BC  1F9C               	comf	(i2__doprnt@val+3)& (0+255),f,b
 42852  0127BE  1F9B               	comf	(i2__doprnt@val+2)& (0+255),f,b
 42853  0127C0  1F9A               	comf	(i2__doprnt@val+1)& (0+255),f,b
 42854  0127C2  6D99               	negf	i2__doprnt@val& (0+255),b
 42855  0127C4  0E00               	movlw	0
 42856  0127C6  239A               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 42857  0127C8  239B               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 42858  0127CA  239C               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 42859  0127CC  D035               	goto	i2l20571
 42860  0127CE                     i2l2586:
 42861                           
 42862                           ; BSR set to: 0
 42863                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 42864  0127CE  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42865  0127D0  D019               	goto	i2l20569
 42866                           
 42867                           ; BSR set to: 0
 42868                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 42869  0127D2  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42870  0127D6  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42871  0127DA  CFDF F072          	movff	indf2,??i2__doprnt
 42872  0127DE  0E04               	movlw	4
 42873  0127E0  26DE               	addwf	postinc2,f,c
 42874  0127E2  CFDF F073          	movff	indf2,??i2__doprnt+1
 42875  0127E6  0E00               	movlw	0
 42876  0127E8  22DD               	addwfc	postdec2,f,c
 42877  0127EA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42878  0127EE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42879  0127F2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42880  0127F6  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42881  0127FA  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42882  0127FE  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42883  012802  D01A               	goto	i2l20571
 42884  012804                     i2l20569:
 42885                           
 42886                           ; BSR set to: 0
 42887                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 42888  012804  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42889  012808  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42890  01280C  CFDF F072          	movff	indf2,??i2__doprnt
 42891  012810  0E02               	movlw	2
 42892  012812  26DE               	addwf	postinc2,f,c
 42893  012814  CFDF F073          	movff	indf2,??i2__doprnt+1
 42894  012818  0E00               	movlw	0
 42895  01281A  22DD               	addwfc	postdec2,f,c
 42896  01281C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42897  012820  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42898  012824  CFDE F074          	movff	postinc2,??i2__doprnt+2
 42899  012828  CFDD F075          	movff	postdec2,??i2__doprnt+3
 42900  01282C  C074  F099         	movff	??i2__doprnt+2,i2__doprnt@val
 42901  012830  C075  F09A         	movff	??i2__doprnt+3,i2__doprnt@val+1
 42902  012834  6B9B               	clrf	(i2__doprnt@val+2)& (0+255),b
 42903  012836  6B9C               	clrf	(i2__doprnt@val+3)& (0+255),b
 42904  012838                     i2l20571:
 42905                           
 42906                           ; BSR set to: 0
 42907                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 42908  012838  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42909  01283A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42910  01283C  A4D8               	btfss	status,2,c
 42911  01283E  D04B               	goto	i2l20607
 42912                           
 42913                           ; BSR set to: 0
 42914  012840  5199               	movf	i2__doprnt@val& (0+255),w,b
 42915  012842  119A               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 42916  012844  119B               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 42917  012846  119C               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 42918  012848  A4D8               	btfss	status,2,c
 42919  01284A  D045               	goto	i2l20607
 42920                           
 42921                           ; BSR set to: 0
 42922                           ;doprnt.c: 1310: prec++;
 42923  01284C  4B9F               	infsnz	i2__doprnt@prec& (0+255),f,b
 42924  01284E  2BA0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 42925  012850  D042               	goto	i2l20607
 42926  012852                     i2l20577:
 42927                           
 42928                           ; BSR set to: 0
 42929                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 42930  012852  0E01               	movlw	1
 42931  012854  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42932  012856                     i2l20583:
 42933                           
 42934                           ; BSR set to: 0
 42935                           ;doprnt.c: 1325: if(val < dpowers[c])
 42936  012856  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42937  012858  0D04               	mullw	4
 42938  01285A  0EAF               	movlw	low _dpowers
 42939  01285C  24F3               	addwf	prodl,w,c
 42940  01285E  6EF6               	movwf	tblptrl,c
 42941  012860  0EE7               	movlw	high _dpowers
 42942  012862  20F4               	addwfc	prodh,w,c
 42943  012864  6EF7               	movwf	tblptrh,c
 42944  012866                     	if	1	;There are 3 active tblptr bytes
 42945  012866  6AF8               	clrf	tblptru,c
 42946  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 42947  01286A  22F8               	addwfc	tblptru,f,c
 42948  01286C                     	endif
 42949  01286C  0009               	tblrd		*+
 42950  01286E  50F5               	movf	tablat,w,c
 42951  012870  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42952  012872  0009               	tblrd		*+
 42953  012874  50F5               	movf	tablat,w,c
 42954  012876  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42955  012878  0009               	tblrd		*+
 42956  01287A  50F5               	movf	tablat,w,c
 42957  01287C  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42958  01287E  0009               	tblrd		*+
 42959  012880  50F5               	movf	tablat,w,c
 42960  012882  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42961  012884  A0D8               	btfss	status,0,c
 42962  012886  D032               	goto	i2l20609
 42963                           
 42964                           ; BSR set to: 0
 42965  012888  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 42966                           
 42967                           ; BSR set to: 0
 42968  01288A  0E0A               	movlw	10
 42969  01288C  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 42970  01288E  B4D8               	btfsc	status,2,c
 42971  012890  D02D               	goto	i2l20609
 42972  012892  D7E1               	goto	i2l20583
 42973  012894                     i2l20591:
 42974                           
 42975                           ; BSR set to: 0
 42976                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 42977  012894  0E01               	movlw	1
 42978  012896  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42979  012898                     i2l20597:
 42980                           
 42981                           ; BSR set to: 0
 42982                           ;doprnt.c: 1336: if(val < hexpowers[c])
 42983  012898  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42984  01289A  0D04               	mullw	4
 42985  01289C  0E8F               	movlw	low _hexpowers
 42986  01289E  24F3               	addwf	prodl,w,c
 42987  0128A0  6EF6               	movwf	tblptrl,c
 42988  0128A2  0EE4               	movlw	high _hexpowers
 42989  0128A4  20F4               	addwfc	prodh,w,c
 42990  0128A6  6EF7               	movwf	tblptrh,c
 42991  0128A8                     	if	1	;There are 3 active tblptr bytes
 42992  0128A8  6AF8               	clrf	tblptru,c
 42993  0128AA  0E00               	movlw	low (__mediumconst shr (0+16))
 42994  0128AC  22F8               	addwfc	tblptru,f,c
 42995  0128AE                     	endif
 42996  0128AE  0009               	tblrd		*+
 42997  0128B0  50F5               	movf	tablat,w,c
 42998  0128B2  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42999  0128B4  0009               	tblrd		*+
 43000  0128B6  50F5               	movf	tablat,w,c
 43001  0128B8  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43002  0128BA  0009               	tblrd		*+
 43003  0128BC  50F5               	movf	tablat,w,c
 43004  0128BE  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43005  0128C0  0009               	tblrd		*+
 43006  0128C2  50F5               	movf	tablat,w,c
 43007  0128C4  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43008  0128C6  A0D8               	btfss	status,0,c
 43009  0128C8  D011               	goto	i2l20609
 43010                           
 43011                           ; BSR set to: 0
 43012  0128CA  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 43013                           
 43014                           ; BSR set to: 0
 43015  0128CC  0E08               	movlw	8
 43016  0128CE  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 43017  0128D0  B4D8               	btfsc	status,2,c
 43018  0128D2  D00C               	goto	i2l20609
 43019  0128D4  D7E1               	goto	i2l20597
 43020  0128D6                     i2l20607:
 43021                           
 43022                           ; BSR set to: 0
 43023  0128D6  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43024  0128D8  0BC0               	andlw	192
 43025                           
 43026                           ; Switch size 1, requested type "simple"
 43027                           ; Number of cases is 3, Range of values is 0 to 192
 43028                           ; switch strategies available:
 43029                           ; Name         Instructions Cycles
 43030                           ; simple_byte           10     6 (average)
 43031                           ;	Chosen strategy is simple_byte
 43032  0128DA  0A00               	xorlw	0	; case 0
 43033  0128DC  B4D8               	btfsc	status,2,c
 43034  0128DE  D7B9               	goto	i2l20577
 43035  0128E0  0A80               	xorlw	128	; case 128
 43036  0128E2  B4D8               	btfsc	status,2,c
 43037  0128E4  D7D7               	goto	i2l20591
 43038  0128E6  0A40               	xorlw	64	; case 192
 43039  0128E8  B4D8               	btfsc	status,2,c
 43040  0128EA  D7B3               	goto	i2l20577
 43041  0128EC                     i2l20609:
 43042                           
 43043                           ; BSR set to: 0
 43044                           ;doprnt.c: 1358: if(c < prec)
 43045  0128EC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43046  0128EE  6F72               	movwf	??i2__doprnt& (0+255),b
 43047  0128F0  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43048  0128F2  519F               	movf	i2__doprnt@prec& (0+255),w,b
 43049  0128F4  5D72               	subwf	??i2__doprnt& (0+255),w,b
 43050  0128F6  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43051  0128F8  0A80               	xorlw	128
 43052  0128FA  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43053  0128FC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43054  0128FE  0A80               	xorlw	128
 43055  012900  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43056  012902  B0D8               	btfsc	status,0,c
 43057  012904  D003               	goto	i2l20613
 43058                           
 43059                           ; BSR set to: 0
 43060                           ;doprnt.c: 1359: c = prec;
 43061  012906  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 43062  01290A  D010               	goto	i2l20617
 43063  01290C                     i2l20613:
 43064                           
 43065                           ; BSR set to: 0
 43066                           ;doprnt.c: 1360: else if(prec < c)
 43067  01290C  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43068  01290E  6F72               	movwf	??i2__doprnt& (0+255),b
 43069  012910  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43070  012912  5172               	movf	??i2__doprnt& (0+255),w,b
 43071  012914  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 43072  012916  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43073  012918  0A80               	xorlw	128
 43074  01291A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43075  01291C  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43076  01291E  0A80               	xorlw	128
 43077  012920  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43078  012922  B0D8               	btfsc	status,0,c
 43079  012924  D003               	goto	i2l20617
 43080                           
 43081                           ; BSR set to: 0
 43082                           ;doprnt.c: 1361: prec = c;
 43083  012926  C0A3  F09F         	movff	i2__doprnt@c,i2__doprnt@prec
 43084  01292A  6BA0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 43085  01292C                     i2l20617:
 43086                           
 43087                           ; BSR set to: 0
 43088                           ;doprnt.c: 1364: if(width && flag & 0x03)
 43089  01292C  519D               	movf	i2__doprnt@width& (0+255),w,b
 43090  01292E  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43091  012930  B4D8               	btfsc	status,2,c
 43092  012932  D00D               	goto	i2l20623
 43093                           
 43094                           ; BSR set to: 0
 43095  012934  0E03               	movlw	3
 43096  012936  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 43097  012938  6F72               	movwf	??i2__doprnt& (0+255),b
 43098  01293A  0E00               	movlw	0
 43099  01293C  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43100  01293E  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43101  012940  5172               	movf	??i2__doprnt& (0+255),w,b
 43102  012942  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43103  012944  B4D8               	btfsc	status,2,c
 43104  012946  D003               	goto	i2l20623
 43105                           
 43106                           ; BSR set to: 0
 43107                           ;doprnt.c: 1365: width--;
 43108  012948  079D               	decf	i2__doprnt@width& (0+255),f,b
 43109  01294A  A0D8               	btfss	status,0,c
 43110  01294C  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43111  01294E                     i2l20623:
 43112                           
 43113                           ; BSR set to: 0
 43114                           ;doprnt.c: 1367: if(flag & 0x4000) {
 43115  01294E  ADA2               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 43116  012950  D013               	goto	i2l20631
 43117                           
 43118                           ; BSR set to: 0
 43119                           ;doprnt.c: 1368: if(width > prec)
 43120  012952  519D               	movf	i2__doprnt@width& (0+255),w,b
 43121  012954  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 43122  012956  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43123  012958  0A80               	xorlw	128
 43124  01295A  6F72               	movwf	??i2__doprnt& (0+255),b
 43125  01295C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43126  01295E  0A80               	xorlw	128
 43127  012960  5972               	subwfb	??i2__doprnt& (0+255),w,b
 43128  012962  B0D8               	btfsc	status,0,c
 43129  012964  D005               	goto	i2l20629
 43130                           
 43131                           ; BSR set to: 0
 43132                           ;doprnt.c: 1369: width -= prec;
 43133  012966  519F               	movf	i2__doprnt@prec& (0+255),w,b
 43134  012968  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 43135  01296A  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43136  01296C  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43137  01296E  D004               	goto	i2l20631
 43138  012970                     i2l20629:
 43139                           
 43140                           ; BSR set to: 0
 43141                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 43142  012970  0E00               	movlw	0
 43143  012972  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 43144  012974  0E00               	movlw	0
 43145  012976  6F9D               	movwf	i2__doprnt@width& (0+255),b
 43146  012978                     i2l20631:
 43147                           
 43148                           ; BSR set to: 0
 43149                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 43150  012978  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43151  01297A  6F72               	movwf	??i2__doprnt& (0+255),b
 43152  01297C  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43153  01297E  519D               	movf	i2__doprnt@width& (0+255),w,b
 43154  012980  5D72               	subwf	??i2__doprnt& (0+255),w,b
 43155  012982  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43156  012984  0A80               	xorlw	128
 43157  012986  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43158  012988  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43159  01298A  0A80               	xorlw	128
 43160  01298C  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43161  01298E  B0D8               	btfsc	status,0,c
 43162  012990  D005               	goto	i2l20635
 43163                           
 43164                           ; BSR set to: 0
 43165                           ;doprnt.c: 1401: width -= c;
 43166  012992  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43167  012994  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 43168  012996  0E00               	movlw	0
 43169  012998  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43170  01299A  D004               	goto	i2l20637
 43171  01299C                     i2l20635:
 43172                           
 43173                           ; BSR set to: 0
 43174                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 43175  01299C  0E00               	movlw	0
 43176  01299E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 43177  0129A0  0E00               	movlw	0
 43178  0129A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 43179  0129A4                     i2l20637:
 43180                           
 43181                           ; BSR set to: 0
 43182                           ;doprnt.c: 1406: if(flag & 0x04) {
 43183  0129A4  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 43184  0129A6  D0B5               	goto	i2l20679
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;doprnt.c: 1408: if(flag & 0x02)
 43188  0129A8  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43189  0129AA  D041               	goto	i2l2615
 43190                           
 43191                           ; BSR set to: 0
 43192  0129AC  EE20 F002          	lfsr	2,2
 43193  0129B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43194  0129B2  26D9               	addwf	fsr2l,f,c
 43195  0129B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43196  0129B6  22DA               	addwfc	fsr2h,f,c
 43197  0129B8  50DE               	movf	postinc2,w,c
 43198  0129BA  10DE               	iorwf	postinc2,w,c
 43199  0129BC  10DE               	iorwf	postinc2,w,c
 43200  0129BE  B4D8               	btfsc	status,2,c
 43201  0129C0  D01D               	goto	i2l2617
 43202                           
 43203                           ; BSR set to: 0
 43204  0129C2  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43205  0129C4  D004               	goto	i2l20647
 43206                           
 43207                           ; BSR set to: 0
 43208  0129C6  0E00               	movlw	0
 43209  0129C8  6F84               	movwf	(i2__doprnt$4985+1)& (0+255),b
 43210  0129CA  0E2B               	movlw	43
 43211  0129CC  D003               	goto	L41
 43212  0129CE                     i2l20647:
 43213                           
 43214                           ; BSR set to: 0
 43215  0129CE  0E00               	movlw	0
 43216  0129D0  6F84               	movwf	(i2__doprnt$4985+1)& (0+255),b
 43217  0129D2  0E2D               	movlw	45
 43218  0129D4                     L41:
 43219  0129D4  6F83               	movwf	i2__doprnt$4985& (0+255),b
 43220                           
 43221                           ; BSR set to: 0
 43222  0129D6  EE20 F002          	lfsr	2,2
 43223  0129DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43224  0129DC  26D9               	addwf	fsr2l,f,c
 43225  0129DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43226  0129E0  22DA               	addwfc	fsr2h,f,c
 43227  0129E2  D801               	call	i2u2670_48
 43228  0129E4  D059               	goto	i2l20667
 43229  0129E6                     i2u2670_48:
 43230  0129E6  0005               	push	
 43231  0129E8  6EFA               	movwf	pclath,c
 43232  0129EA  50DE               	movf	postinc2,w,c
 43233  0129EC  6EFD               	movwf	tosl,c
 43234  0129EE  50DE               	movf	postinc2,w,c
 43235  0129F0  6EFE               	movwf	tosh,c
 43236  0129F2  50DE               	movf	postinc2,w,c
 43237  0129F4  6EFF               	movwf	tosu,c
 43238  0129F6  50FA               	movf	pclath,w,c
 43239  0129F8  5183               	movf	i2__doprnt$4985& (0+255),w,b
 43240  0129FA  0012               	return		;indir
 43241  0129FC                     i2l2617:
 43242                           
 43243                           ; BSR set to: 0
 43244  0129FC  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43245  0129FE  D004               	goto	i2l20653
 43246                           
 43247                           ; BSR set to: 0
 43248  012A00  0E00               	movlw	0
 43249  012A02  6F86               	movwf	(i2__doprnt$4986+1)& (0+255),b
 43250  012A04  0E2B               	movlw	43
 43251  012A06  D003               	goto	L42
 43252  012A08                     i2l20653:
 43253                           
 43254                           ; BSR set to: 0
 43255  012A08  0E00               	movlw	0
 43256  012A0A  6F86               	movwf	(i2__doprnt$4986+1)& (0+255),b
 43257  012A0C  0E2D               	movlw	45
 43258  012A0E                     L42:
 43259  012A0E  6F85               	movwf	i2__doprnt$4986& (0+255),b
 43260                           
 43261                           ; BSR set to: 0
 43262  012A10  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43263  012A14  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43264  012A18  CFDE F072          	movff	postinc2,??i2__doprnt
 43265  012A1C  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43266  012A20  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43267  012A24  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43268  012A28  C085  FFDF         	movff	i2__doprnt$4986,indf2
 43269  012A2C  D02E               	goto	i2l20665
 43270  012A2E                     i2l2615:
 43271                           
 43272                           ; BSR set to: 0
 43273                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 43274  012A2E  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43275  012A30  D033               	goto	i2l20667
 43276                           
 43277                           ; BSR set to: 0
 43278  012A32  EE20 F002          	lfsr	2,2
 43279  012A36  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43280  012A38  26D9               	addwf	fsr2l,f,c
 43281  012A3A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43282  012A3C  22DA               	addwfc	fsr2h,f,c
 43283  012A3E  50DE               	movf	postinc2,w,c
 43284  012A40  10DE               	iorwf	postinc2,w,c
 43285  012A42  10DE               	iorwf	postinc2,w,c
 43286  012A44  B4D8               	btfsc	status,2,c
 43287  012A46  D013               	goto	i2l20663
 43288                           
 43289                           ; BSR set to: 0
 43290  012A48  EE20 F002          	lfsr	2,2
 43291  012A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43292  012A4E  26D9               	addwf	fsr2l,f,c
 43293  012A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43294  012A52  22DA               	addwfc	fsr2h,f,c
 43295  012A54  D801               	call	i2u2674_48
 43296  012A56  D020               	goto	i2l20667
 43297  012A58                     i2u2674_48:
 43298  012A58  0005               	push	
 43299  012A5A  6EFA               	movwf	pclath,c
 43300  012A5C  50DE               	movf	postinc2,w,c
 43301  012A5E  6EFD               	movwf	tosl,c
 43302  012A60  50DE               	movf	postinc2,w,c
 43303  012A62  6EFE               	movwf	tosh,c
 43304  012A64  50DE               	movf	postinc2,w,c
 43305  012A66  6EFF               	movwf	tosu,c
 43306  012A68  50FA               	movf	pclath,w,c
 43307  012A6A  0E20               	movlw	32
 43308  012A6C  0012               	return		;indir
 43309  012A6E                     i2l20663:
 43310                           
 43311                           ; BSR set to: 0
 43312  012A6E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43313  012A72  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43314  012A76  CFDE F072          	movff	postinc2,??i2__doprnt
 43315  012A7A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43316  012A7E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43317  012A82  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43318  012A86  0E20               	movlw	32
 43319  012A88  6EDF               	movwf	indf2,c
 43320  012A8A                     i2l20665:
 43321                           
 43322                           ; BSR set to: 0
 43323  012A8A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43324  012A8E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43325  012A92  2ADE               	incf	postinc2,f,c
 43326  012A94  0E00               	movlw	0
 43327  012A96  22DD               	addwfc	postdec2,f,c
 43328  012A98                     i2l20667:
 43329                           
 43330                           ;doprnt.c: 1434: if(width)
 43331  012A98  0100               	movlb	0	; () banked
 43332  012A9A  519D               	movf	i2__doprnt@width& (0+255),w,b
 43333  012A9C  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43334  012A9E  B4D8               	btfsc	status,2,c
 43335  012AA0  D1A1               	goto	i2l20735
 43336                           
 43337                           ; BSR set to: 0
 43338  012AA2  EE20 F002          	lfsr	2,2
 43339  012AA6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43340  012AA8  26D9               	addwf	fsr2l,f,c
 43341  012AAA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43342  012AAC  22DA               	addwfc	fsr2h,f,c
 43343  012AAE  50DE               	movf	postinc2,w,c
 43344  012AB0  10DE               	iorwf	postinc2,w,c
 43345  012AB2  10DE               	iorwf	postinc2,w,c
 43346  012AB4  B4D8               	btfsc	status,2,c
 43347  012AB6  D013               	goto	i2l20673
 43348                           
 43349                           ; BSR set to: 0
 43350  012AB8  EE20 F002          	lfsr	2,2
 43351  012ABC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43352  012ABE  26D9               	addwf	fsr2l,f,c
 43353  012AC0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43354  012AC2  22DA               	addwfc	fsr2h,f,c
 43355  012AC4  D801               	call	i2u2677_48
 43356  012AC6  D020               	goto	i2l20677
 43357  012AC8                     i2u2677_48:
 43358  012AC8  0005               	push	
 43359  012ACA  6EFA               	movwf	pclath,c
 43360  012ACC  50DE               	movf	postinc2,w,c
 43361  012ACE  6EFD               	movwf	tosl,c
 43362  012AD0  50DE               	movf	postinc2,w,c
 43363  012AD2  6EFE               	movwf	tosh,c
 43364  012AD4  50DE               	movf	postinc2,w,c
 43365  012AD6  6EFF               	movwf	tosu,c
 43366  012AD8  50FA               	movf	pclath,w,c
 43367  012ADA  0E30               	movlw	48
 43368  012ADC  0012               	return		;indir
 43369  012ADE                     i2l20673:
 43370                           
 43371                           ; BSR set to: 0
 43372  012ADE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43373  012AE2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43374  012AE6  CFDE F072          	movff	postinc2,??i2__doprnt
 43375  012AEA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43376  012AEE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43377  012AF2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43378  012AF6  0E30               	movlw	48
 43379  012AF8  6EDF               	movwf	indf2,c
 43380                           
 43381                           ; BSR set to: 0
 43382  012AFA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43383  012AFE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43384  012B02  2ADE               	incf	postinc2,f,c
 43385  012B04  0E00               	movlw	0
 43386  012B06  22DD               	addwfc	postdec2,f,c
 43387  012B08                     i2l20677:
 43388                           
 43389                           ;doprnt.c: 1437: while(--width);
 43390  012B08  0100               	movlb	0	; () banked
 43391  012B0A  079D               	decf	i2__doprnt@width& (0+255),f,b
 43392  012B0C  A0D8               	btfss	status,0,c
 43393  012B0E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43394  012B10  D7C4               	goto	L59
 43395  012B12                     i2l20679:
 43396                           
 43397                           ; BSR set to: 0
 43398                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 43399  012B12  519D               	movf	i2__doprnt@width& (0+255),w,b
 43400  012B14  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43401  012B16  B4D8               	btfsc	status,2,c
 43402  012B18  D03B               	goto	i2u2682_40
 43403  012B1A                     i2u2679_40:
 43404                           
 43405                           ; BSR set to: 0
 43406  012B1A  EE20 F002          	lfsr	2,2
 43407  012B1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43408  012B20  26D9               	addwf	fsr2l,f,c
 43409  012B22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43410  012B24  22DA               	addwfc	fsr2h,f,c
 43411  012B26  50DE               	movf	postinc2,w,c
 43412  012B28  10DE               	iorwf	postinc2,w,c
 43413  012B2A  10DE               	iorwf	postinc2,w,c
 43414  012B2C  B4D8               	btfsc	status,2,c
 43415  012B2E  D013               	goto	i2l20685
 43416                           
 43417                           ; BSR set to: 0
 43418  012B30  EE20 F002          	lfsr	2,2
 43419  012B34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43420  012B36  26D9               	addwf	fsr2l,f,c
 43421  012B38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43422  012B3A  22DA               	addwfc	fsr2h,f,c
 43423  012B3C  D801               	call	i2u2681_48
 43424  012B3E  D020               	goto	i2l20689
 43425  012B40                     i2u2681_48:
 43426  012B40  0005               	push	
 43427  012B42  6EFA               	movwf	pclath,c
 43428  012B44  50DE               	movf	postinc2,w,c
 43429  012B46  6EFD               	movwf	tosl,c
 43430  012B48  50DE               	movf	postinc2,w,c
 43431  012B4A  6EFE               	movwf	tosh,c
 43432  012B4C  50DE               	movf	postinc2,w,c
 43433  012B4E  6EFF               	movwf	tosu,c
 43434  012B50  50FA               	movf	pclath,w,c
 43435  012B52  0E20               	movlw	32
 43436  012B54  0012               	return		;indir
 43437  012B56                     i2l20685:
 43438                           
 43439                           ; BSR set to: 0
 43440  012B56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43441  012B5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43442  012B5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43443  012B62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43444  012B66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43445  012B6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43446  012B6E  0E20               	movlw	32
 43447  012B70  6EDF               	movwf	indf2,c
 43448                           
 43449                           ; BSR set to: 0
 43450  012B72  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43451  012B76  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43452  012B7A  2ADE               	incf	postinc2,f,c
 43453  012B7C  0E00               	movlw	0
 43454  012B7E  22DD               	addwfc	postdec2,f,c
 43455  012B80                     i2l20689:
 43456                           
 43457                           ;doprnt.c: 1450: while(--width);
 43458  012B80  0100               	movlb	0	; () banked
 43459  012B82  079D               	decf	i2__doprnt@width& (0+255),f,b
 43460  012B84  A0D8               	btfss	status,0,c
 43461  012B86  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43462  012B88  519D               	movf	i2__doprnt@width& (0+255),w,b
 43463  012B8A  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43464  012B8C  A4D8               	btfss	status,2,c
 43465  012B8E  D7C5               	goto	i2u2679_40
 43466  012B90                     i2u2682_40:
 43467                           
 43468                           ; BSR set to: 0
 43469                           ;doprnt.c: 1453: if(flag & 0x02)
 43470  012B90  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43471  012B92  D041               	goto	i2l2649
 43472                           
 43473                           ; BSR set to: 0
 43474  012B94  EE20 F002          	lfsr	2,2
 43475  012B98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43476  012B9A  26D9               	addwf	fsr2l,f,c
 43477  012B9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43478  012B9E  22DA               	addwfc	fsr2h,f,c
 43479  012BA0  50DE               	movf	postinc2,w,c
 43480  012BA2  10DE               	iorwf	postinc2,w,c
 43481  012BA4  10DE               	iorwf	postinc2,w,c
 43482  012BA6  B4D8               	btfsc	status,2,c
 43483  012BA8  D01D               	goto	i2l2651
 43484                           
 43485                           ; BSR set to: 0
 43486  012BAA  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43487  012BAC  D004               	goto	i2l20697
 43488                           
 43489                           ; BSR set to: 0
 43490  012BAE  0E00               	movlw	0
 43491  012BB0  6F88               	movwf	(i2__doprnt$4987+1)& (0+255),b
 43492  012BB2  0E2B               	movlw	43
 43493  012BB4  D003               	goto	L43
 43494  012BB6                     i2l20697:
 43495                           
 43496                           ; BSR set to: 0
 43497  012BB6  0E00               	movlw	0
 43498  012BB8  6F88               	movwf	(i2__doprnt$4987+1)& (0+255),b
 43499  012BBA  0E2D               	movlw	45
 43500  012BBC                     L43:
 43501  012BBC  6F87               	movwf	i2__doprnt$4987& (0+255),b
 43502                           
 43503                           ; BSR set to: 0
 43504  012BBE  EE20 F002          	lfsr	2,2
 43505  012BC2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43506  012BC4  26D9               	addwf	fsr2l,f,c
 43507  012BC6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43508  012BC8  22DA               	addwfc	fsr2h,f,c
 43509  012BCA  D801               	call	i2u2686_48
 43510  012BCC  D10B               	goto	i2l20735
 43511  012BCE                     i2u2686_48:
 43512  012BCE  0005               	push	
 43513  012BD0  6EFA               	movwf	pclath,c
 43514  012BD2  50DE               	movf	postinc2,w,c
 43515  012BD4  6EFD               	movwf	tosl,c
 43516  012BD6  50DE               	movf	postinc2,w,c
 43517  012BD8  6EFE               	movwf	tosh,c
 43518  012BDA  50DE               	movf	postinc2,w,c
 43519  012BDC  6EFF               	movwf	tosu,c
 43520  012BDE  50FA               	movf	pclath,w,c
 43521  012BE0  5187               	movf	i2__doprnt$4987& (0+255),w,b
 43522  012BE2  0012               	return		;indir
 43523  012BE4                     i2l2651:
 43524                           
 43525                           ; BSR set to: 0
 43526  012BE4  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43527  012BE6  D004               	goto	i2l20703
 43528                           
 43529                           ; BSR set to: 0
 43530  012BE8  0E00               	movlw	0
 43531  012BEA  6F8A               	movwf	(i2__doprnt$4988+1)& (0+255),b
 43532  012BEC  0E2B               	movlw	43
 43533  012BEE  D003               	goto	L44
 43534  012BF0                     i2l20703:
 43535                           
 43536                           ; BSR set to: 0
 43537  012BF0  0E00               	movlw	0
 43538  012BF2  6F8A               	movwf	(i2__doprnt$4988+1)& (0+255),b
 43539  012BF4  0E2D               	movlw	45
 43540  012BF6                     L44:
 43541  012BF6  6F89               	movwf	i2__doprnt$4988& (0+255),b
 43542                           
 43543                           ; BSR set to: 0
 43544  012BF8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43545  012BFC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43546  012C00  CFDE F072          	movff	postinc2,??i2__doprnt
 43547  012C04  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43548  012C08  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43549  012C0C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43550  012C10  C089  FFDF         	movff	i2__doprnt$4988,indf2
 43551  012C14  D0E0               	goto	i2l20733
 43552  012C16                     i2l2649:
 43553                           
 43554                           ; BSR set to: 0
 43555                           ;doprnt.c: 1462: else if(flag & 0x01)
 43556  012C16  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43557  012C18  D0E5               	goto	i2l20735
 43558                           
 43559                           ; BSR set to: 0
 43560  012C1A  EE20 F002          	lfsr	2,2
 43561  012C1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43562  012C20  26D9               	addwf	fsr2l,f,c
 43563  012C22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43564  012C24  22DA               	addwfc	fsr2h,f,c
 43565  012C26  50DE               	movf	postinc2,w,c
 43566  012C28  10DE               	iorwf	postinc2,w,c
 43567  012C2A  10DE               	iorwf	postinc2,w,c
 43568  012C2C  B4D8               	btfsc	status,2,c
 43569  012C2E  D013               	goto	i2l20713
 43570                           
 43571                           ; BSR set to: 0
 43572  012C30  EE20 F002          	lfsr	2,2
 43573  012C34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43574  012C36  26D9               	addwf	fsr2l,f,c
 43575  012C38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43576  012C3A  22DA               	addwfc	fsr2h,f,c
 43577  012C3C  D801               	call	i2u2690_48
 43578  012C3E  D0D2               	goto	i2l20735
 43579  012C40                     i2u2690_48:
 43580  012C40  0005               	push	
 43581  012C42  6EFA               	movwf	pclath,c
 43582  012C44  50DE               	movf	postinc2,w,c
 43583  012C46  6EFD               	movwf	tosl,c
 43584  012C48  50DE               	movf	postinc2,w,c
 43585  012C4A  6EFE               	movwf	tosh,c
 43586  012C4C  50DE               	movf	postinc2,w,c
 43587  012C4E  6EFF               	movwf	tosu,c
 43588  012C50  50FA               	movf	pclath,w,c
 43589  012C52  0E20               	movlw	32
 43590  012C54  0012               	return		;indir
 43591  012C56                     i2l20713:
 43592                           
 43593                           ; BSR set to: 0
 43594  012C56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43595  012C5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43596  012C5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43597  012C62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43598  012C66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43599  012C6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43600  012C6E  0E20               	movlw	32
 43601  012C70  6EDF               	movwf	indf2,c
 43602  012C72  D0B1               	goto	i2l20733
 43603  012C74                     i2l20717:
 43604                           
 43605                           ; BSR set to: 0
 43606                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 43607  012C74  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43608  012C78  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43609  012C7C  90D8               	bcf	status,0,c
 43610  012C7E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43611  012C80  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43612  012C82  90D8               	bcf	status,0,c
 43613  012C84  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43614  012C86  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43615  012C88  0EAF               	movlw	low _dpowers
 43616  012C8A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43617  012C8C  6EF6               	movwf	tblptrl,c
 43618  012C8E  0EE7               	movlw	high _dpowers
 43619  012C90  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43620  012C92  6EF7               	movwf	tblptrh,c
 43621  012C94                     	if	1	;There are 3 active tblptr bytes
 43622  012C94  6AF8               	clrf	tblptru,c
 43623  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 43624  012C98  22F8               	addwfc	tblptru,f,c
 43625  012C9A                     	endif
 43626  012C9A  0009               	tblrd		*+
 43627  012C9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43628  012CA0  0009               	tblrd		*+
 43629  012CA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43630  012CA6  0009               	tblrd		*+
 43631  012CA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43632  012CAC  000A               	tblrd		*-
 43633  012CAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43634  012CB2  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43635  012CB6  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43636  012CBA  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43637  012CBE  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43638  012CC2  ECAF  F0D8         	call	i2___lldiv
 43639  012CC6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 43640  012CCA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 43641  012CCE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 43642  012CD2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 43643  012CD6  0E0A               	movlw	10
 43644  012CD8  6E12               	movwf	i2___llmod@divisor,c
 43645  012CDA  0E00               	movlw	0
 43646  012CDC  6E13               	movwf	i2___llmod@divisor+1,c
 43647  012CDE  0E00               	movlw	0
 43648  012CE0  6E14               	movwf	i2___llmod@divisor+2,c
 43649  012CE2  0E00               	movlw	0
 43650  012CE4  6E15               	movwf	i2___llmod@divisor+3,c
 43651  012CE6  EC34  F0DA         	call	i2___llmod	;wreg free
 43652  012CEA  500E               	movf	?i2___llmod,w,c
 43653  012CEC  0F30               	addlw	48
 43654  012CEE  0100               	movlb	0	; () banked
 43655  012CF0  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43656                           
 43657                           ;doprnt.c: 1510: break;
 43658  012CF2  D045               	goto	i2l20727
 43659  012CF4                     i2l20719:
 43660                           
 43661                           ; BSR set to: 0
 43662                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 43663  012CF4  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43664  012CF8  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43665  012CFC  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43666  012D00  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43667  012D04  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43668  012D08  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43669  012D0C  90D8               	bcf	status,0,c
 43670  012D0E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43671  012D10  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43672  012D12  90D8               	bcf	status,0,c
 43673  012D14  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43674  012D16  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43675  012D18  0E8F               	movlw	low _hexpowers
 43676  012D1A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43677  012D1C  6EF6               	movwf	tblptrl,c
 43678  012D1E  0EE4               	movlw	high _hexpowers
 43679  012D20  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43680  012D22  6EF7               	movwf	tblptrh,c
 43681  012D24                     	if	1	;There are 3 active tblptr bytes
 43682  012D24  6AF8               	clrf	tblptru,c
 43683  012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 43684  012D28  22F8               	addwfc	tblptru,f,c
 43685  012D2A                     	endif
 43686  012D2A  0009               	tblrd		*+
 43687  012D2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43688  012D30  0009               	tblrd		*+
 43689  012D32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43690  012D36  0009               	tblrd		*+
 43691  012D38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43692  012D3C  000A               	tblrd		*-
 43693  012D3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43694  012D42  ECAF  F0D8         	call	i2___lldiv	;wreg free
 43695  012D46  5001               	movf	?i2___lldiv,w,c
 43696  012D48  0B0F               	andlw	15
 43697  012D4A  0100               	movlb	0	; () banked
 43698  012D4C  6F7A               	movwf	i2__doprnt@idx& (0+255),b
 43699                           
 43700                           ; BSR set to: 0
 43701                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 43702  012D4E  0E17               	movlw	low STR_357
 43703  012D50  257A               	addwf	i2__doprnt@idx& (0+255),w,b
 43704  012D52  6EF6               	movwf	tblptrl,c
 43705  012D54  6AF7               	clrf	tblptrh,c
 43706  012D56  0EFB               	movlw	high STR_357
 43707  012D58  22F7               	addwfc	tblptrh,f,c
 43708  012D5A                     	if	1	;There are 3 active tblptr bytes
 43709  012D5A  6AF8               	clrf	tblptru,c
 43710  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 43711  012D5E  22F8               	addwfc	tblptru,f,c
 43712  012D60                     	endif
 43713  012D60  0008               	tblrd		*
 43714  012D62  CFF5 F0A3          	movff	tablat,i2__doprnt@c
 43715                           
 43716                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 43717  012D66  D00B               	goto	i2l20727
 43718  012D68                     i2l20725:
 43719                           
 43720                           ; BSR set to: 0
 43721  012D68  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43722  012D6A  0BC0               	andlw	192
 43723                           
 43724                           ; Switch size 1, requested type "simple"
 43725                           ; Number of cases is 3, Range of values is 0 to 192
 43726                           ; switch strategies available:
 43727                           ; Name         Instructions Cycles
 43728                           ; simple_byte           10     6 (average)
 43729                           ;	Chosen strategy is simple_byte
 43730  012D6C  0A00               	xorlw	0	; case 0
 43731  012D6E  B4D8               	btfsc	status,2,c
 43732  012D70  D781               	goto	i2l20717
 43733  012D72  0A80               	xorlw	128	; case 128
 43734  012D74  B4D8               	btfsc	status,2,c
 43735  012D76  D7BE               	goto	i2l20719
 43736  012D78  0A40               	xorlw	64	; case 192
 43737  012D7A  B4D8               	btfsc	status,2,c
 43738  012D7C  D77B               	goto	i2l20717
 43739  012D7E                     i2l20727:
 43740                           
 43741                           ; BSR set to: 0
 43742  012D7E  EE20 F002          	lfsr	2,2
 43743  012D82  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43744  012D84  26D9               	addwf	fsr2l,f,c
 43745  012D86  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43746  012D88  22DA               	addwfc	fsr2h,f,c
 43747  012D8A  50DE               	movf	postinc2,w,c
 43748  012D8C  10DE               	iorwf	postinc2,w,c
 43749  012D8E  10DE               	iorwf	postinc2,w,c
 43750  012D90  B4D8               	btfsc	status,2,c
 43751  012D92  D013               	goto	i2l20731
 43752                           
 43753                           ; BSR set to: 0
 43754  012D94  EE20 F002          	lfsr	2,2
 43755  012D98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43756  012D9A  26D9               	addwf	fsr2l,f,c
 43757  012D9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43758  012D9E  22DA               	addwfc	fsr2h,f,c
 43759  012DA0  D801               	call	i2u2692_48
 43760  012DA2  D020               	goto	i2l20735
 43761  012DA4                     i2u2692_48:
 43762  012DA4  0005               	push	
 43763  012DA6  6EFA               	movwf	pclath,c
 43764  012DA8  50DE               	movf	postinc2,w,c
 43765  012DAA  6EFD               	movwf	tosl,c
 43766  012DAC  50DE               	movf	postinc2,w,c
 43767  012DAE  6EFE               	movwf	tosh,c
 43768  012DB0  50DE               	movf	postinc2,w,c
 43769  012DB2  6EFF               	movwf	tosu,c
 43770  012DB4  50FA               	movf	pclath,w,c
 43771  012DB6  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43772  012DB8  0012               	return		;indir
 43773  012DBA                     i2l20731:
 43774                           
 43775                           ; BSR set to: 0
 43776  012DBA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43777  012DBE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43778  012DC2  CFDE F072          	movff	postinc2,??i2__doprnt
 43779  012DC6  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43780  012DCA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43781  012DCE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43782  012DD2  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 43783  012DD6                     i2l20733:
 43784                           
 43785                           ; BSR set to: 0
 43786  012DD6  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43787  012DDA  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43788  012DDE  2ADE               	incf	postinc2,f,c
 43789  012DE0  0E00               	movlw	0
 43790  012DE2  22DD               	addwfc	postdec2,f,c
 43791  012DE4                     i2l20735:
 43792  012DE4  0100               	movlb	0	; () banked
 43793  012DE6  079F               	decf	i2__doprnt@prec& (0+255),f,b
 43794  012DE8  A0D8               	btfss	status,0,c
 43795  012DEA  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43796  012DEC  299F               	incf	i2__doprnt@prec& (0+255),w,b
 43797  012DEE  E1BC               	bnz	i2l20725
 43798  012DF0  29A0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 43799  012DF2  A4D8               	btfss	status,2,c
 43800  012DF4  D7B9               	goto	i2l20725
 43801  012DF6                     i2u2693_40:
 43802  012DF6  0100               	movlb	0	; () banked
 43803  012DF8  516E               	movf	i2__doprnt@f& (0+255),w,b
 43804  012DFA  6F72               	movwf	??i2__doprnt& (0+255),b
 43805  012DFC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 43806  012DFE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43807  012E00  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 43808  012E02  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 43809  012E04  C072  FFF6         	movff	??i2__doprnt,tblptrl
 43810  012E08  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 43811  012E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 43812  012E0E  6EF8               	movwf	tblptru,c
 43813  012E10  0E0E               	movlw	(high __ramtop+-1)
 43814  012E12  64F7               	cpfsgt	tblptrh,c
 43815  012E14  D003               	bra	i2u2694_47
 43816  012E16  0008               	tblrd		*
 43817  012E18  50F5               	movf	tablat,w,c
 43818  012E1A  D005               	bra	i2u2694_40
 43819  012E1C                     i2u2694_47:
 43820  012E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 43821  012E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 43822  012E24  50EF               	movf	indf0,w,c
 43823  012E26                     i2u2694_40:
 43824  012E26  0100               	movlb	0	; () banked
 43825  012E28  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43826  012E2A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43827  012E2C  A4D8               	btfss	status,2,c
 43828  012E2E  EF94  F08B         	goto	i2l20191
 43829  012E32                     i2u2695_40:
 43830                           
 43831                           ; BSR set to: 0
 43832                           ;doprnt.c: 1559: return 0;
 43833  012E32  0E00               	movlw	0
 43834  012E34  6F6D               	movwf	(?i2__doprnt+1)& (0+255),b
 43835  012E36  0E00               	movlw	0
 43836  012E38  6F6C               	movwf	?i2__doprnt& (0+255),b
 43837                           
 43838                           ; BSR set to: 0
 43839  012E3A  0012               	return		;funcret
 43840  012E3C                     __end_ofi2__doprnt:
 43841                           	opt callstack 0
 43842                           
 43843 ;; *************** function i2_scale *****************
 43844 ;; Defined at:
 43845 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 43846 ;; Parameters:    Size  Location     Type
 43847 ;;  scl             1    wreg     char 
 43848 ;; Auto vars:     Size  Location     Type
 43849 ;;  scl             1   76[COMRAM] char 
 43850 ;; Return value:  Size  Location     Type
 43851 ;;                  4   68[COMRAM] char 
 43852 ;; Registers used:
 43853 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43854 ;; Tracked objects:
 43855 ;;		On entry : 0/0
 43856 ;;		On exit  : 0/0
 43857 ;;		Unchanged: 0/0
 43858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43860 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43862 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43863 ;;Total ram usage:        9 bytes
 43864 ;; Hardware stack levels used:    1
 43865 ;; Hardware stack levels required when called:    1
 43866 ;; This function calls:
 43867 ;;		i2___awdiv
 43868 ;;		i2___awmod
 43869 ;;		i2___flmul
 43870 ;; This function is called by:
 43871 ;;		i2__doprnt
 43872 ;; This function uses a non-reentrant model
 43873 ;;
 43874                           
 43875                           	psect	text181
 43876  015878                     __ptext181:
 43877                           	opt callstack 0
 43878  015878                     i2_scale:
 43879                           	opt callstack 12
 43880                           
 43881                           ; BSR set to: 0
 43882                           ;incstack = 0
 43883                           ;i2scale@scl stored from wreg
 43884  015878  6E4D               	movwf	i2scale@scl,c
 43885                           
 43886                           ;doprnt.c: 436: if(scl < 0) {
 43887  01587A  AE4D               	btfss	i2scale@scl,7,c
 43888  01587C  D105               	goto	i2l19595
 43889                           
 43890                           ;doprnt.c: 437: scl = -scl;
 43891  01587E  6C4D               	negf	i2scale@scl,c
 43892                           
 43893                           ;doprnt.c: 438: if(scl>=110)
 43894  015880  504D               	movf	i2scale@scl,w,c
 43895  015882  0A80               	xorlw	128
 43896  015884  0F12               	addlw	-238
 43897  015886  A0D8               	btfss	status,0,c
 43898  015888  D091               	goto	i2l19585
 43899                           
 43900                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43901  01588A  0E00               	movlw	0
 43902  01588C  6E0A               	movwf	i2___awdiv@divisor+1,c
 43903  01588E  0E0A               	movlw	10
 43904  015890  6E09               	movwf	i2___awdiv@divisor,c
 43905  015892  0E00               	movlw	0
 43906  015894  6E04               	movwf	i2___awmod@divisor+1,c
 43907  015896  0E64               	movlw	100
 43908  015898  6E03               	movwf	i2___awmod@divisor,c
 43909  01589A  504D               	movf	i2scale@scl,w,c
 43910  01589C  6E01               	movwf	i2___awmod@dividend,c
 43911  01589E  6A02               	clrf	i2___awmod@dividend+1,c
 43912  0158A0  BE01               	btfsc	i2___awmod@dividend,7,c
 43913  0158A2  0602               	decf	i2___awmod@dividend+1,f,c
 43914  0158A4  EC62  F0D9         	call	i2___awmod
 43915  0158A8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 43916  0158AC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 43917  0158B0  EC6D  F0D8         	call	i2___awdiv	;wreg free
 43918  0158B4  0E09               	movlw	9
 43919  0158B6  2607               	addwf	?i2___awdiv,f,c
 43920  0158B8  5007               	movf	?i2___awdiv,w,c
 43921  0158BA  0D04               	mullw	4
 43922  0158BC  0E5B               	movlw	low __npowers_
 43923  0158BE  24F3               	addwf	prodl,w,c
 43924  0158C0  6EF6               	movwf	tblptrl,c
 43925  0158C2  0EE4               	movlw	high __npowers_
 43926  0158C4  20F4               	addwfc	prodh,w,c
 43927  0158C6  6EF7               	movwf	tblptrh,c
 43928  0158C8                     	if	1	;There are 3 active tblptr bytes
 43929  0158C8  6AF8               	clrf	tblptru,c
 43930  0158CA  0E00               	movlw	low (__mediumconst shr (0+16))
 43931  0158CC  22F8               	addwfc	tblptru,f,c
 43932  0158CE                     	endif
 43933  0158CE  0009               	tblrd		*+
 43934  0158D0  CFF5 F030          	movff	tablat,i2___flmul@a
 43935  0158D4  0009               	tblrd		*+
 43936  0158D6  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43937  0158DA  0009               	tblrd		*+
 43938  0158DC  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43939  0158E0  000A               	tblrd		*-
 43940  0158E2  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43941  0158E6  0E00               	movlw	0
 43942  0158E8  6E0A               	movwf	i2___awdiv@divisor+1,c
 43943  0158EA  0E64               	movlw	100
 43944  0158EC  6E09               	movwf	i2___awdiv@divisor,c
 43945  0158EE  504D               	movf	i2scale@scl,w,c
 43946  0158F0  6E07               	movwf	i2___awdiv@dividend,c
 43947  0158F2  6A08               	clrf	i2___awdiv@dividend+1,c
 43948  0158F4  BE07               	btfsc	i2___awdiv@dividend,7,c
 43949  0158F6  0608               	decf	i2___awdiv@dividend+1,f,c
 43950  0158F8  EC6D  F0D8         	call	i2___awdiv	;wreg free
 43951  0158FC  0E12               	movlw	18
 43952  0158FE  2607               	addwf	?i2___awdiv,f,c
 43953  015900  5007               	movf	?i2___awdiv,w,c
 43954  015902  0D04               	mullw	4
 43955  015904  0E5B               	movlw	low __npowers_
 43956  015906  24F3               	addwf	prodl,w,c
 43957  015908  6EF6               	movwf	tblptrl,c
 43958  01590A  0EE4               	movlw	high __npowers_
 43959  01590C  20F4               	addwfc	prodh,w,c
 43960  01590E  6EF7               	movwf	tblptrh,c
 43961  015910                     	if	1	;There are 3 active tblptr bytes
 43962  015910  6AF8               	clrf	tblptru,c
 43963  015912  0E00               	movlw	low (__mediumconst shr (0+16))
 43964  015914  22F8               	addwfc	tblptru,f,c
 43965  015916                     	endif
 43966  015916  0009               	tblrd		*+
 43967  015918  CFF5 F02C          	movff	tablat,i2___flmul@b
 43968  01591C  0009               	tblrd		*+
 43969  01591E  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43970  015922  0009               	tblrd		*+
 43971  015924  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43972  015928  000A               	tblrd		*-
 43973  01592A  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43974  01592E  ECCE  F0B6         	call	i2___flmul	;wreg free
 43975  015932  C02C  F049         	movff	?i2___flmul,i2_scale$6424
 43976  015936  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6424+1
 43977  01593A  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6424+2
 43978  01593E  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6424+3
 43979                           
 43980                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43981  015942  C049  F02C         	movff	i2_scale$6424,i2___flmul@b
 43982  015946  C04A  F02D         	movff	i2_scale$6424+1,i2___flmul@b+1
 43983  01594A  C04B  F02E         	movff	i2_scale$6424+2,i2___flmul@b+2
 43984  01594E  C04C  F02F         	movff	i2_scale$6424+3,i2___flmul@b+3
 43985  015952  0E00               	movlw	0
 43986  015954  6E04               	movwf	i2___awmod@divisor+1,c
 43987  015956  0E0A               	movlw	10
 43988  015958  6E03               	movwf	i2___awmod@divisor,c
 43989  01595A  504D               	movf	i2scale@scl,w,c
 43990  01595C  6E01               	movwf	i2___awmod@dividend,c
 43991  01595E  6A02               	clrf	i2___awmod@dividend+1,c
 43992  015960  BE01               	btfsc	i2___awmod@dividend,7,c
 43993  015962  0602               	decf	i2___awmod@dividend+1,f,c
 43994  015964  EC62  F0D9         	call	i2___awmod	;wreg free
 43995  015968  5001               	movf	?i2___awmod,w,c
 43996  01596A  0D04               	mullw	4
 43997  01596C  0E5B               	movlw	low __npowers_
 43998  01596E  24F3               	addwf	prodl,w,c
 43999  015970  6EF6               	movwf	tblptrl,c
 44000  015972  0EE4               	movlw	high __npowers_
 44001  015974  20F4               	addwfc	prodh,w,c
 44002  015976  6EF7               	movwf	tblptrh,c
 44003  015978                     	if	1	;There are 3 active tblptr bytes
 44004  015978  6AF8               	clrf	tblptru,c
 44005  01597A  0E00               	movlw	low (__mediumconst shr (0+16))
 44006  01597C  22F8               	addwfc	tblptru,f,c
 44007  01597E                     	endif
 44008  01597E  0009               	tblrd		*+
 44009  015980  CFF5 F030          	movff	tablat,i2___flmul@a
 44010  015984  0009               	tblrd		*+
 44011  015986  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44012  01598A  0009               	tblrd		*+
 44013  01598C  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44014  015990  000A               	tblrd		*-
 44015  015992  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44016  015996  ECCE  F0B6         	call	i2___flmul	;wreg free
 44017  01599A  C02C  F045         	movff	?i2___flmul,?i2_scale
 44018  01599E  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44019  0159A2  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44020  0159A6  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44021  0159AA  0012               	return	
 44022  0159AC                     i2l19585:
 44023                           
 44024                           ;doprnt.c: 440: else if(scl > 10)
 44025  0159AC  504D               	movf	i2scale@scl,w,c
 44026  0159AE  0A80               	xorlw	128
 44027  0159B0  0F75               	addlw	-139
 44028  0159B2  A0D8               	btfss	status,0,c
 44029  0159B4  D051               	goto	i2l19591
 44030                           
 44031                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 44032  0159B6  0E00               	movlw	0
 44033  0159B8  6E0A               	movwf	i2___awdiv@divisor+1,c
 44034  0159BA  0E0A               	movlw	10
 44035  0159BC  6E09               	movwf	i2___awdiv@divisor,c
 44036  0159BE  504D               	movf	i2scale@scl,w,c
 44037  0159C0  6E07               	movwf	i2___awdiv@dividend,c
 44038  0159C2  6A08               	clrf	i2___awdiv@dividend+1,c
 44039  0159C4  BE07               	btfsc	i2___awdiv@dividend,7,c
 44040  0159C6  0608               	decf	i2___awdiv@dividend+1,f,c
 44041  0159C8  EC6D  F0D8         	call	i2___awdiv	;wreg free
 44042  0159CC  0E09               	movlw	9
 44043  0159CE  2607               	addwf	?i2___awdiv,f,c
 44044  0159D0  5007               	movf	?i2___awdiv,w,c
 44045  0159D2  0D04               	mullw	4
 44046  0159D4  0E5B               	movlw	low __npowers_
 44047  0159D6  24F3               	addwf	prodl,w,c
 44048  0159D8  6EF6               	movwf	tblptrl,c
 44049  0159DA  0EE4               	movlw	high __npowers_
 44050  0159DC  20F4               	addwfc	prodh,w,c
 44051  0159DE  6EF7               	movwf	tblptrh,c
 44052  0159E0                     	if	1	;There are 3 active tblptr bytes
 44053  0159E0  6AF8               	clrf	tblptru,c
 44054  0159E2  0E00               	movlw	low (__mediumconst shr (0+16))
 44055  0159E4  22F8               	addwfc	tblptru,f,c
 44056  0159E6                     	endif
 44057  0159E6  0009               	tblrd		*+
 44058  0159E8  CFF5 F02C          	movff	tablat,i2___flmul@b
 44059  0159EC  0009               	tblrd		*+
 44060  0159EE  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44061  0159F2  0009               	tblrd		*+
 44062  0159F4  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44063  0159F8  000A               	tblrd		*-
 44064  0159FA  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44065  0159FE  0E00               	movlw	0
 44066  015A00  6E04               	movwf	i2___awmod@divisor+1,c
 44067  015A02  0E0A               	movlw	10
 44068  015A04  6E03               	movwf	i2___awmod@divisor,c
 44069  015A06  504D               	movf	i2scale@scl,w,c
 44070  015A08  6E01               	movwf	i2___awmod@dividend,c
 44071  015A0A  6A02               	clrf	i2___awmod@dividend+1,c
 44072  015A0C  BE01               	btfsc	i2___awmod@dividend,7,c
 44073  015A0E  0602               	decf	i2___awmod@dividend+1,f,c
 44074  015A10  EC62  F0D9         	call	i2___awmod	;wreg free
 44075  015A14  5001               	movf	?i2___awmod,w,c
 44076  015A16  0D04               	mullw	4
 44077  015A18  0E5B               	movlw	low __npowers_
 44078  015A1A  24F3               	addwf	prodl,w,c
 44079  015A1C  6EF6               	movwf	tblptrl,c
 44080  015A1E  0EE4               	movlw	high __npowers_
 44081  015A20  20F4               	addwfc	prodh,w,c
 44082  015A22  6EF7               	movwf	tblptrh,c
 44083  015A24                     	if	1	;There are 3 active tblptr bytes
 44084  015A24  6AF8               	clrf	tblptru,c
 44085  015A26  0E00               	movlw	low (__mediumconst shr (0+16))
 44086  015A28  22F8               	addwfc	tblptru,f,c
 44087  015A2A                     	endif
 44088  015A2A  0009               	tblrd		*+
 44089  015A2C  CFF5 F030          	movff	tablat,i2___flmul@a
 44090  015A30  0009               	tblrd		*+
 44091  015A32  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44092  015A36  0009               	tblrd		*+
 44093  015A38  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44094  015A3C  000A               	tblrd		*-
 44095  015A3E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44096  015A42  ECCE  F0B6         	call	i2___flmul	;wreg free
 44097  015A46  C02C  F045         	movff	?i2___flmul,?i2_scale
 44098  015A4A  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44099  015A4E  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44100  015A52  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44101  015A56  0012               	return	
 44102  015A58                     i2l19591:
 44103                           
 44104                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 44105  015A58  504D               	movf	i2scale@scl,w,c
 44106  015A5A  0D04               	mullw	4
 44107  015A5C  0E5B               	movlw	low __npowers_
 44108  015A5E  24F3               	addwf	prodl,w,c
 44109  015A60  6EF6               	movwf	tblptrl,c
 44110  015A62  0EE4               	movlw	high __npowers_
 44111  015A64  20F4               	addwfc	prodh,w,c
 44112  015A66  6EF7               	movwf	tblptrh,c
 44113  015A68                     	if	1	;There are 3 active tblptr bytes
 44114  015A68  6AF8               	clrf	tblptru,c
 44115  015A6A  0E00               	movlw	low (__mediumconst shr (0+16))
 44116  015A6C  22F8               	addwfc	tblptru,f,c
 44117  015A6E                     	endif
 44118  015A6E  0009               	tblrd		*+
 44119  015A70  CFF5 F045          	movff	tablat,?i2_scale
 44120  015A74  0009               	tblrd		*+
 44121  015A76  CFF5 F046          	movff	tablat,?i2_scale+1
 44122  015A7A  0009               	tblrd		*+
 44123  015A7C  CFF5 F047          	movff	tablat,?i2_scale+2
 44124  015A80  000A               	tblrd		*-
 44125  015A82  CFF5 F048          	movff	tablat,?i2_scale+3
 44126  015A86  0012               	return	
 44127  015A88                     i2l19595:
 44128                           
 44129                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 44130  015A88  504D               	movf	i2scale@scl,w,c
 44131  015A8A  0A80               	xorlw	128
 44132  015A8C  0F12               	addlw	-238
 44133  015A8E  A0D8               	btfss	status,0,c
 44134  015A90  D091               	goto	i2l19603
 44135                           
 44136                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 44137  015A92  0E00               	movlw	0
 44138  015A94  6E0A               	movwf	i2___awdiv@divisor+1,c
 44139  015A96  0E0A               	movlw	10
 44140  015A98  6E09               	movwf	i2___awdiv@divisor,c
 44141  015A9A  0E00               	movlw	0
 44142  015A9C  6E04               	movwf	i2___awmod@divisor+1,c
 44143  015A9E  0E64               	movlw	100
 44144  015AA0  6E03               	movwf	i2___awmod@divisor,c
 44145  015AA2  504D               	movf	i2scale@scl,w,c
 44146  015AA4  6E01               	movwf	i2___awmod@dividend,c
 44147  015AA6  6A02               	clrf	i2___awmod@dividend+1,c
 44148  015AA8  BE01               	btfsc	i2___awmod@dividend,7,c
 44149  015AAA  0602               	decf	i2___awmod@dividend+1,f,c
 44150  015AAC  EC62  F0D9         	call	i2___awmod	;wreg free
 44151  015AB0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 44152  015AB4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 44153  015AB8  EC6D  F0D8         	call	i2___awdiv	;wreg free
 44154  015ABC  0E09               	movlw	9
 44155  015ABE  2607               	addwf	?i2___awdiv,f,c
 44156  015AC0  5007               	movf	?i2___awdiv,w,c
 44157  015AC2  0D04               	mullw	4
 44158  015AC4  0E27               	movlw	low __powers_
 44159  015AC6  24F3               	addwf	prodl,w,c
 44160  015AC8  6EF6               	movwf	tblptrl,c
 44161  015ACA  0EE4               	movlw	high __powers_
 44162  015ACC  20F4               	addwfc	prodh,w,c
 44163  015ACE  6EF7               	movwf	tblptrh,c
 44164  015AD0                     	if	1	;There are 3 active tblptr bytes
 44165  015AD0  6AF8               	clrf	tblptru,c
 44166  015AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 44167  015AD4  22F8               	addwfc	tblptru,f,c
 44168  015AD6                     	endif
 44169  015AD6  0009               	tblrd		*+
 44170  015AD8  CFF5 F030          	movff	tablat,i2___flmul@a
 44171  015ADC  0009               	tblrd		*+
 44172  015ADE  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44173  015AE2  0009               	tblrd		*+
 44174  015AE4  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44175  015AE8  000A               	tblrd		*-
 44176  015AEA  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44177  015AEE  0E00               	movlw	0
 44178  015AF0  6E0A               	movwf	i2___awdiv@divisor+1,c
 44179  015AF2  0E64               	movlw	100
 44180  015AF4  6E09               	movwf	i2___awdiv@divisor,c
 44181  015AF6  504D               	movf	i2scale@scl,w,c
 44182  015AF8  6E07               	movwf	i2___awdiv@dividend,c
 44183  015AFA  6A08               	clrf	i2___awdiv@dividend+1,c
 44184  015AFC  BE07               	btfsc	i2___awdiv@dividend,7,c
 44185  015AFE  0608               	decf	i2___awdiv@dividend+1,f,c
 44186  015B00  EC6D  F0D8         	call	i2___awdiv	;wreg free
 44187  015B04  0E12               	movlw	18
 44188  015B06  2607               	addwf	?i2___awdiv,f,c
 44189  015B08  5007               	movf	?i2___awdiv,w,c
 44190  015B0A  0D04               	mullw	4
 44191  015B0C  0E27               	movlw	low __powers_
 44192  015B0E  24F3               	addwf	prodl,w,c
 44193  015B10  6EF6               	movwf	tblptrl,c
 44194  015B12  0EE4               	movlw	high __powers_
 44195  015B14  20F4               	addwfc	prodh,w,c
 44196  015B16  6EF7               	movwf	tblptrh,c
 44197  015B18                     	if	1	;There are 3 active tblptr bytes
 44198  015B18  6AF8               	clrf	tblptru,c
 44199  015B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 44200  015B1C  22F8               	addwfc	tblptru,f,c
 44201  015B1E                     	endif
 44202  015B1E  0009               	tblrd		*+
 44203  015B20  CFF5 F02C          	movff	tablat,i2___flmul@b
 44204  015B24  0009               	tblrd		*+
 44205  015B26  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44206  015B2A  0009               	tblrd		*+
 44207  015B2C  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44208  015B30  000A               	tblrd		*-
 44209  015B32  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44210  015B36  ECCE  F0B6         	call	i2___flmul	;wreg free
 44211  015B3A  C02C  F049         	movff	?i2___flmul,i2_scale$6424
 44212  015B3E  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6424+1
 44213  015B42  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6424+2
 44214  015B46  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6424+3
 44215                           
 44216                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 44217  015B4A  C049  F02C         	movff	i2_scale$6424,i2___flmul@b
 44218  015B4E  C04A  F02D         	movff	i2_scale$6424+1,i2___flmul@b+1
 44219  015B52  C04B  F02E         	movff	i2_scale$6424+2,i2___flmul@b+2
 44220  015B56  C04C  F02F         	movff	i2_scale$6424+3,i2___flmul@b+3
 44221  015B5A  0E00               	movlw	0
 44222  015B5C  6E04               	movwf	i2___awmod@divisor+1,c
 44223  015B5E  0E0A               	movlw	10
 44224  015B60  6E03               	movwf	i2___awmod@divisor,c
 44225  015B62  504D               	movf	i2scale@scl,w,c
 44226  015B64  6E01               	movwf	i2___awmod@dividend,c
 44227  015B66  6A02               	clrf	i2___awmod@dividend+1,c
 44228  015B68  BE01               	btfsc	i2___awmod@dividend,7,c
 44229  015B6A  0602               	decf	i2___awmod@dividend+1,f,c
 44230  015B6C  EC62  F0D9         	call	i2___awmod	;wreg free
 44231  015B70  5001               	movf	?i2___awmod,w,c
 44232  015B72  0D04               	mullw	4
 44233  015B74  0E27               	movlw	low __powers_
 44234  015B76  24F3               	addwf	prodl,w,c
 44235  015B78  6EF6               	movwf	tblptrl,c
 44236  015B7A  0EE4               	movlw	high __powers_
 44237  015B7C  20F4               	addwfc	prodh,w,c
 44238  015B7E  6EF7               	movwf	tblptrh,c
 44239  015B80                     	if	1	;There are 3 active tblptr bytes
 44240  015B80  6AF8               	clrf	tblptru,c
 44241  015B82  0E00               	movlw	low (__mediumconst shr (0+16))
 44242  015B84  22F8               	addwfc	tblptru,f,c
 44243  015B86                     	endif
 44244  015B86  0009               	tblrd		*+
 44245  015B88  CFF5 F030          	movff	tablat,i2___flmul@a
 44246  015B8C  0009               	tblrd		*+
 44247  015B8E  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44248  015B92  0009               	tblrd		*+
 44249  015B94  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44250  015B98  000A               	tblrd		*-
 44251  015B9A  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44252  015B9E  ECCE  F0B6         	call	i2___flmul	;wreg free
 44253  015BA2  C02C  F045         	movff	?i2___flmul,?i2_scale
 44254  015BA6  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44255  015BAA  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44256  015BAE  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44257  015BB2  0012               	return	
 44258  015BB4                     i2l19603:
 44259                           
 44260                           ;doprnt.c: 446: else if(scl > 10)
 44261  015BB4  504D               	movf	i2scale@scl,w,c
 44262  015BB6  0A80               	xorlw	128
 44263  015BB8  0F75               	addlw	-139
 44264  015BBA  A0D8               	btfss	status,0,c
 44265  015BBC  D051               	goto	i2l19609
 44266                           
 44267                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 44268  015BBE  0E00               	movlw	0
 44269  015BC0  6E0A               	movwf	i2___awdiv@divisor+1,c
 44270  015BC2  0E0A               	movlw	10
 44271  015BC4  6E09               	movwf	i2___awdiv@divisor,c
 44272  015BC6  504D               	movf	i2scale@scl,w,c
 44273  015BC8  6E07               	movwf	i2___awdiv@dividend,c
 44274  015BCA  6A08               	clrf	i2___awdiv@dividend+1,c
 44275  015BCC  BE07               	btfsc	i2___awdiv@dividend,7,c
 44276  015BCE  0608               	decf	i2___awdiv@dividend+1,f,c
 44277  015BD0  EC6D  F0D8         	call	i2___awdiv	;wreg free
 44278  015BD4  0E09               	movlw	9
 44279  015BD6  2607               	addwf	?i2___awdiv,f,c
 44280  015BD8  5007               	movf	?i2___awdiv,w,c
 44281  015BDA  0D04               	mullw	4
 44282  015BDC  0E27               	movlw	low __powers_
 44283  015BDE  24F3               	addwf	prodl,w,c
 44284  015BE0  6EF6               	movwf	tblptrl,c
 44285  015BE2  0EE4               	movlw	high __powers_
 44286  015BE4  20F4               	addwfc	prodh,w,c
 44287  015BE6  6EF7               	movwf	tblptrh,c
 44288  015BE8                     	if	1	;There are 3 active tblptr bytes
 44289  015BE8  6AF8               	clrf	tblptru,c
 44290  015BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 44291  015BEC  22F8               	addwfc	tblptru,f,c
 44292  015BEE                     	endif
 44293  015BEE  0009               	tblrd		*+
 44294  015BF0  CFF5 F02C          	movff	tablat,i2___flmul@b
 44295  015BF4  0009               	tblrd		*+
 44296  015BF6  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44297  015BFA  0009               	tblrd		*+
 44298  015BFC  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44299  015C00  000A               	tblrd		*-
 44300  015C02  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44301  015C06  0E00               	movlw	0
 44302  015C08  6E04               	movwf	i2___awmod@divisor+1,c
 44303  015C0A  0E0A               	movlw	10
 44304  015C0C  6E03               	movwf	i2___awmod@divisor,c
 44305  015C0E  504D               	movf	i2scale@scl,w,c
 44306  015C10  6E01               	movwf	i2___awmod@dividend,c
 44307  015C12  6A02               	clrf	i2___awmod@dividend+1,c
 44308  015C14  BE01               	btfsc	i2___awmod@dividend,7,c
 44309  015C16  0602               	decf	i2___awmod@dividend+1,f,c
 44310  015C18  EC62  F0D9         	call	i2___awmod	;wreg free
 44311  015C1C  5001               	movf	?i2___awmod,w,c
 44312  015C1E  0D04               	mullw	4
 44313  015C20  0E27               	movlw	low __powers_
 44314  015C22  24F3               	addwf	prodl,w,c
 44315  015C24  6EF6               	movwf	tblptrl,c
 44316  015C26  0EE4               	movlw	high __powers_
 44317  015C28  20F4               	addwfc	prodh,w,c
 44318  015C2A  6EF7               	movwf	tblptrh,c
 44319  015C2C                     	if	1	;There are 3 active tblptr bytes
 44320  015C2C  6AF8               	clrf	tblptru,c
 44321  015C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 44322  015C30  22F8               	addwfc	tblptru,f,c
 44323  015C32                     	endif
 44324  015C32  0009               	tblrd		*+
 44325  015C34  CFF5 F030          	movff	tablat,i2___flmul@a
 44326  015C38  0009               	tblrd		*+
 44327  015C3A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44328  015C3E  0009               	tblrd		*+
 44329  015C40  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44330  015C44  000A               	tblrd		*-
 44331  015C46  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44332  015C4A  ECCE  F0B6         	call	i2___flmul	;wreg free
 44333  015C4E  C02C  F045         	movff	?i2___flmul,?i2_scale
 44334  015C52  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44335  015C56  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44336  015C5A  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44337  015C5E  0012               	return	
 44338  015C60                     i2l19609:
 44339                           
 44340                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 44341  015C60  504D               	movf	i2scale@scl,w,c
 44342  015C62  0D04               	mullw	4
 44343  015C64  0E27               	movlw	low __powers_
 44344  015C66  24F3               	addwf	prodl,w,c
 44345  015C68  6EF6               	movwf	tblptrl,c
 44346  015C6A  0EE4               	movlw	high __powers_
 44347  015C6C  20F4               	addwfc	prodh,w,c
 44348  015C6E  6EF7               	movwf	tblptrh,c
 44349  015C70                     	if	1	;There are 3 active tblptr bytes
 44350  015C70  6AF8               	clrf	tblptru,c
 44351  015C72  0E00               	movlw	low (__mediumconst shr (0+16))
 44352  015C74  22F8               	addwfc	tblptru,f,c
 44353  015C76                     	endif
 44354  015C76  0009               	tblrd		*+
 44355  015C78  CFF5 F045          	movff	tablat,?i2_scale
 44356  015C7C  0009               	tblrd		*+
 44357  015C7E  CFF5 F046          	movff	tablat,?i2_scale+1
 44358  015C82  0009               	tblrd		*+
 44359  015C84  CFF5 F047          	movff	tablat,?i2_scale+2
 44360  015C88  000A               	tblrd		*-
 44361  015C8A  CFF5 F048          	movff	tablat,?i2_scale+3
 44362  015C8E  0012               	return		;funcret
 44363  015C90                     __end_ofi2_scale:
 44364                           	opt callstack 0
 44365                           
 44366 ;; *************** function i2___awmod *****************
 44367 ;; Defined at:
 44368 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 44369 ;; Parameters:    Size  Location     Type
 44370 ;;  dividend        2    0[COMRAM] int 
 44371 ;;  divisor         2    2[COMRAM] int 
 44372 ;; Auto vars:     Size  Location     Type
 44373 ;;  __awmod         1    5[COMRAM] unsigned char 
 44374 ;;  __awmod         1    4[COMRAM] unsigned char 
 44375 ;; Return value:  Size  Location     Type
 44376 ;;                  2    0[COMRAM] int 
 44377 ;; Registers used:
 44378 ;;		wreg, status,2, status,0
 44379 ;; Tracked objects:
 44380 ;;		On entry : 0/0
 44381 ;;		On exit  : 0/0
 44382 ;;		Unchanged: 0/0
 44383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44388 ;;Total ram usage:        6 bytes
 44389 ;; Hardware stack levels used:    1
 44390 ;; This function calls:
 44391 ;;		Nothing
 44392 ;; This function is called by:
 44393 ;;		i2_scale
 44394 ;; This function uses a non-reentrant model
 44395 ;;
 44396                           
 44397                           	psect	text182
 44398  01B2C4                     __ptext182:
 44399                           	opt callstack 0
 44400  01B2C4                     i2___awmod:
 44401                           	opt callstack 12
 44402                           
 44403                           ;incstack = 0
 44404  01B2C4  0E00               	movlw	0
 44405  01B2C6  6E06               	movwf	i2___awmod@sign,c
 44406  01B2C8  AE02               	btfss	i2___awmod@dividend+1,7,c
 44407  01B2CA  D006               	goto	i2l18867
 44408  01B2CC  6C01               	negf	i2___awmod@dividend,c
 44409  01B2CE  1E02               	comf	i2___awmod@dividend+1,f,c
 44410  01B2D0  B0D8               	btfsc	status,0,c
 44411  01B2D2  2A02               	incf	i2___awmod@dividend+1,f,c
 44412  01B2D4  0E01               	movlw	1
 44413  01B2D6  6E06               	movwf	i2___awmod@sign,c
 44414  01B2D8                     i2l18867:
 44415  01B2D8  AE04               	btfss	i2___awmod@divisor+1,7,c
 44416  01B2DA  D004               	goto	i2l18871
 44417  01B2DC  6C03               	negf	i2___awmod@divisor,c
 44418  01B2DE  1E04               	comf	i2___awmod@divisor+1,f,c
 44419  01B2E0  B0D8               	btfsc	status,0,c
 44420  01B2E2  2A04               	incf	i2___awmod@divisor+1,f,c
 44421  01B2E4                     i2l18871:
 44422  01B2E4  5003               	movf	i2___awmod@divisor,w,c
 44423  01B2E6  1004               	iorwf	i2___awmod@divisor+1,w,c
 44424  01B2E8  B4D8               	btfsc	status,2,c
 44425  01B2EA  D018               	goto	i2l18887
 44426  01B2EC  0E01               	movlw	1
 44427  01B2EE  6E05               	movwf	i2___awmod@counter,c
 44428  01B2F0  D004               	goto	i2l18877
 44429  01B2F2                     i2l18875:
 44430  01B2F2  90D8               	bcf	status,0,c
 44431  01B2F4  3603               	rlcf	i2___awmod@divisor,f,c
 44432  01B2F6  3604               	rlcf	i2___awmod@divisor+1,f,c
 44433  01B2F8  2A05               	incf	i2___awmod@counter,f,c
 44434  01B2FA                     i2l18877:
 44435  01B2FA  AE04               	btfss	i2___awmod@divisor+1,7,c
 44436  01B2FC  D7FA               	goto	i2l18875
 44437  01B2FE                     i2u2378_40:
 44438  01B2FE  5003               	movf	i2___awmod@divisor,w,c
 44439  01B300  5C01               	subwf	i2___awmod@dividend,w,c
 44440  01B302  5004               	movf	i2___awmod@divisor+1,w,c
 44441  01B304  5802               	subwfb	i2___awmod@dividend+1,w,c
 44442  01B306  A0D8               	btfss	status,0,c
 44443  01B308  D004               	goto	i2l18883
 44444  01B30A  5003               	movf	i2___awmod@divisor,w,c
 44445  01B30C  5E01               	subwf	i2___awmod@dividend,f,c
 44446  01B30E  5004               	movf	i2___awmod@divisor+1,w,c
 44447  01B310  5A02               	subwfb	i2___awmod@dividend+1,f,c
 44448  01B312                     i2l18883:
 44449  01B312  90D8               	bcf	status,0,c
 44450  01B314  3204               	rrcf	i2___awmod@divisor+1,f,c
 44451  01B316  3203               	rrcf	i2___awmod@divisor,f,c
 44452  01B318  2E05               	decfsz	i2___awmod@counter,f,c
 44453  01B31A  D7F1               	goto	i2u2378_40
 44454  01B31C                     i2l18887:
 44455  01B31C  5006               	movf	i2___awmod@sign,w,c
 44456  01B31E  B4D8               	btfsc	status,2,c
 44457  01B320  D004               	goto	i2l18891
 44458  01B322  6C01               	negf	i2___awmod@dividend,c
 44459  01B324  1E02               	comf	i2___awmod@dividend+1,f,c
 44460  01B326  B0D8               	btfsc	status,0,c
 44461  01B328  2A02               	incf	i2___awmod@dividend+1,f,c
 44462  01B32A                     i2l18891:
 44463  01B32A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 44464  01B32E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 44465  01B332  0012               	return		;funcret
 44466  01B334                     __end_ofi2___awmod:
 44467                           	opt callstack 0
 44468                           
 44469 ;; *************** function i2___awdiv *****************
 44470 ;; Defined at:
 44471 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 44472 ;; Parameters:    Size  Location     Type
 44473 ;;  dividend        2    6[COMRAM] int 
 44474 ;;  divisor         2    8[COMRAM] int 
 44475 ;; Auto vars:     Size  Location     Type
 44476 ;;  __awdiv         2   12[COMRAM] int 
 44477 ;;  __awdiv         1   11[COMRAM] unsigned char 
 44478 ;;  __awdiv         1   10[COMRAM] unsigned char 
 44479 ;; Return value:  Size  Location     Type
 44480 ;;                  2    6[COMRAM] int 
 44481 ;; Registers used:
 44482 ;;		wreg, status,2, status,0
 44483 ;; Tracked objects:
 44484 ;;		On entry : 0/0
 44485 ;;		On exit  : 0/0
 44486 ;;		Unchanged: 0/0
 44487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44492 ;;Total ram usage:        8 bytes
 44493 ;; Hardware stack levels used:    1
 44494 ;; This function calls:
 44495 ;;		Nothing
 44496 ;; This function is called by:
 44497 ;;		i2_scale
 44498 ;;		i2__doprnt
 44499 ;; This function uses a non-reentrant model
 44500 ;;
 44501                           
 44502                           	psect	text183
 44503  01B0DA                     __ptext183:
 44504                           	opt callstack 0
 44505  01B0DA                     i2___awdiv:
 44506                           	opt callstack 12
 44507                           
 44508                           ;incstack = 0
 44509  01B0DA  0E00               	movlw	0
 44510  01B0DC  6E0C               	movwf	i2___awdiv@sign,c
 44511  01B0DE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44512  01B0E0  D006               	goto	i2l18823
 44513  01B0E2  6C09               	negf	i2___awdiv@divisor,c
 44514  01B0E4  1E0A               	comf	i2___awdiv@divisor+1,f,c
 44515  01B0E6  B0D8               	btfsc	status,0,c
 44516  01B0E8  2A0A               	incf	i2___awdiv@divisor+1,f,c
 44517  01B0EA  0E01               	movlw	1
 44518  01B0EC  6E0C               	movwf	i2___awdiv@sign,c
 44519  01B0EE                     i2l18823:
 44520  01B0EE  AE08               	btfss	i2___awdiv@dividend+1,7,c
 44521  01B0F0  D006               	goto	i2l18829
 44522  01B0F2  6C07               	negf	i2___awdiv@dividend,c
 44523  01B0F4  1E08               	comf	i2___awdiv@dividend+1,f,c
 44524  01B0F6  B0D8               	btfsc	status,0,c
 44525  01B0F8  2A08               	incf	i2___awdiv@dividend+1,f,c
 44526  01B0FA  0E01               	movlw	1
 44527  01B0FC  1A0C               	xorwf	i2___awdiv@sign,f,c
 44528  01B0FE                     i2l18829:
 44529  01B0FE  0E00               	movlw	0
 44530  01B100  6E0E               	movwf	i2___awdiv@quotient+1,c
 44531  01B102  0E00               	movlw	0
 44532  01B104  6E0D               	movwf	i2___awdiv@quotient,c
 44533  01B106  5009               	movf	i2___awdiv@divisor,w,c
 44534  01B108  100A               	iorwf	i2___awdiv@divisor+1,w,c
 44535  01B10A  B4D8               	btfsc	status,2,c
 44536  01B10C  D01C               	goto	i2l18851
 44537  01B10E  0E01               	movlw	1
 44538  01B110  6E0B               	movwf	i2___awdiv@counter,c
 44539  01B112  D004               	goto	i2l18837
 44540  01B114                     i2l18835:
 44541  01B114  90D8               	bcf	status,0,c
 44542  01B116  3609               	rlcf	i2___awdiv@divisor,f,c
 44543  01B118  360A               	rlcf	i2___awdiv@divisor+1,f,c
 44544  01B11A  2A0B               	incf	i2___awdiv@counter,f,c
 44545  01B11C                     i2l18837:
 44546  01B11C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44547  01B11E  D7FA               	goto	i2l18835
 44548  01B120                     i2u2372_40:
 44549  01B120  90D8               	bcf	status,0,c
 44550  01B122  360D               	rlcf	i2___awdiv@quotient,f,c
 44551  01B124  360E               	rlcf	i2___awdiv@quotient+1,f,c
 44552  01B126  5009               	movf	i2___awdiv@divisor,w,c
 44553  01B128  5C07               	subwf	i2___awdiv@dividend,w,c
 44554  01B12A  500A               	movf	i2___awdiv@divisor+1,w,c
 44555  01B12C  5808               	subwfb	i2___awdiv@dividend+1,w,c
 44556  01B12E  A0D8               	btfss	status,0,c
 44557  01B130  D005               	goto	i2l18847
 44558  01B132  5009               	movf	i2___awdiv@divisor,w,c
 44559  01B134  5E07               	subwf	i2___awdiv@dividend,f,c
 44560  01B136  500A               	movf	i2___awdiv@divisor+1,w,c
 44561  01B138  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 44562  01B13A  800D               	bsf	i2___awdiv@quotient,0,c
 44563  01B13C                     i2l18847:
 44564  01B13C  90D8               	bcf	status,0,c
 44565  01B13E  320A               	rrcf	i2___awdiv@divisor+1,f,c
 44566  01B140  3209               	rrcf	i2___awdiv@divisor,f,c
 44567  01B142  2E0B               	decfsz	i2___awdiv@counter,f,c
 44568  01B144  D7ED               	goto	i2u2372_40
 44569  01B146                     i2l18851:
 44570  01B146  500C               	movf	i2___awdiv@sign,w,c
 44571  01B148  B4D8               	btfsc	status,2,c
 44572  01B14A  D004               	goto	i2l18855
 44573  01B14C  6C0D               	negf	i2___awdiv@quotient,c
 44574  01B14E  1E0E               	comf	i2___awdiv@quotient+1,f,c
 44575  01B150  B0D8               	btfsc	status,0,c
 44576  01B152  2A0E               	incf	i2___awdiv@quotient+1,f,c
 44577  01B154                     i2l18855:
 44578  01B154  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 44579  01B158  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 44580  01B15C  0012               	return		;funcret
 44581  01B15E                     __end_ofi2___awdiv:
 44582                           	opt callstack 0
 44583                           
 44584 ;; *************** function i2_putch *****************
 44585 ;; Defined at:
 44586 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 44587 ;; Parameters:    Size  Location     Type
 44588 ;;  txData          1    wreg     unsigned char 
 44589 ;; Auto vars:     Size  Location     Type
 44590 ;;  txData          1    1[COMRAM] unsigned char 
 44591 ;; Return value:  Size  Location     Type
 44592 ;;                  1    wreg      void 
 44593 ;; Registers used:
 44594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44595 ;; Tracked objects:
 44596 ;;		On entry : 0/0
 44597 ;;		On exit  : 0/0
 44598 ;;		Unchanged: 0/0
 44599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44604 ;;Total ram usage:        1 bytes
 44605 ;; Hardware stack levels used:    1
 44606 ;; Hardware stack levels required when called:    1
 44607 ;; This function calls:
 44608 ;;		i2_EUSART2_Write
 44609 ;; This function is called by:
 44610 ;;		i2_printf
 44611 ;;		i2__doprnt
 44612 ;; This function uses a non-reentrant model
 44613 ;;
 44614                           
 44615                           	psect	text184
 44616  01C8A0                     __ptext184:
 44617                           	opt callstack 0
 44618  01C8A0                     i2_putch:
 44619                           	opt callstack 12
 44620                           
 44621                           ;incstack = 0
 44622                           ;i2putch@txData stored from wreg
 44623  01C8A0  6E02               	movwf	i2putch@txData,c
 44624                           
 44625                           ;eusart2.c: 184: EUSART2_Write(txData);
 44626  01C8A2  5002               	movf	i2putch@txData,w,c
 44627  01C8A4  ECD0  F0DB         	call	i2_EUSART2_Write
 44628  01C8A8  0012               	return		;funcret
 44629  01C8AA                     __end_ofi2_putch:
 44630                           	opt callstack 0
 44631                           
 44632 ;; *************** function i2_EUSART2_Write *****************
 44633 ;; Defined at:
 44634 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 44635 ;; Parameters:    Size  Location     Type
 44636 ;;  txData          1    wreg     unsigned char 
 44637 ;; Auto vars:     Size  Location     Type
 44638 ;;  txData          1    0[COMRAM] unsigned char 
 44639 ;; Return value:  Size  Location     Type
 44640 ;;                  1    wreg      void 
 44641 ;; Registers used:
 44642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44643 ;; Tracked objects:
 44644 ;;		On entry : 0/0
 44645 ;;		On exit  : 0/0
 44646 ;;		Unchanged: 0/0
 44647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44652 ;;Total ram usage:        1 bytes
 44653 ;; Hardware stack levels used:    1
 44654 ;; This function calls:
 44655 ;;		Nothing
 44656 ;; This function is called by:
 44657 ;;		i2_putch
 44658 ;; This function uses a non-reentrant model
 44659 ;;
 44660                           
 44661                           	psect	text185
 44662  01B7A0                     __ptext185:
 44663                           	opt callstack 0
 44664  01B7A0                     i2_EUSART2_Write:
 44665                           	opt callstack 12
 44666                           
 44667                           ;incstack = 0
 44668                           ;i2EUSART2_Write@txData stored from wreg
 44669  01B7A0  6E01               	movwf	i2EUSART2_Write@txData,c
 44670                           
 44671                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 44672  01B7A2  D001               	goto	i2l18799
 44673  01B7A4                     i2l122:
 44674                           
 44675                           ; BSR set to: 1
 44676  01B7A4  0004               	clrwdt		;# 
 44677  01B7A6                     i2l18799:
 44678  01B7A6  0101               	movlb	1	; () banked
 44679  01B7A8  518F               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 44680  01B7AA  1190               	iorwf	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 44681  01B7AC  B4D8               	btfsc	status,2,c
 44682  01B7AE  D7FA               	goto	i2l122
 44683                           
 44684                           ; BSR set to: 1
 44685                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 44686  01B7B0  010E               	movlb	14	; () banked
 44687  01B7B2  BDC5               	btfsc	197,6,b	;volatile
 44688  01B7B4  D003               	goto	i2l124
 44689                           
 44690                           ; BSR set to: 14
 44691                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 44692  01B7B6  C001  FE9A         	movff	i2EUSART2_Write@txData,3738	;volatile
 44693                           
 44694                           ;eusart2.c: 163: }
 44695  01B7BA  D019               	goto	i2l18813
 44696  01B7BC                     i2l124:
 44697                           
 44698                           ; BSR set to: 14
 44699                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 44700  01B7BC  9DC5               	bcf	197,6,b	;volatile
 44701                           
 44702                           ; BSR set to: 14
 44703                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 44704  01B7BE  0EC8               	movlw	low _eusart2TxBuffer
 44705  01B7C0  0101               	movlb	1	; () banked
 44706  01B7C2  2593               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 44707  01B7C4  6ED9               	movwf	fsr2l,c
 44708  01B7C6  0E04               	movlw	high _eusart2TxBuffer
 44709  01B7C8  2194               	addwfc	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 44710  01B7CA  6EDA               	movwf	fsr2h,c
 44711  01B7CC  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 44712                           
 44713                           ; BSR set to: 1
 44714  01B7D0  4B93               	infsnz	_eusart2TxHead& (0+255),f,b	;volatile
 44715  01B7D2  2B94               	incf	(_eusart2TxHead+1)& (0+255),f,b	;volatile
 44716                           
 44717                           ; BSR set to: 1
 44718                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 44719  01B7D4  0E00               	movlw	0
 44720  01B7D6  5D93               	subwf	_eusart2TxHead& (0+255),w,b	;volatile
 44721  01B7D8  0E04               	movlw	4
 44722  01B7DA  5994               	subwfb	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 44723  01B7DC  A0D8               	btfss	status,0,c
 44724  01B7DE  D004               	goto	i2l18811
 44725                           
 44726                           ; BSR set to: 1
 44727                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 44728  01B7E0  0E00               	movlw	0
 44729  01B7E2  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 44730  01B7E4  0E00               	movlw	0
 44731  01B7E6  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 44732  01B7E8                     i2l18811:
 44733                           
 44734                           ; BSR set to: 1
 44735                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 44736  01B7E8  078F               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 44737  01B7EA  A0D8               	btfss	status,0,c
 44738  01B7EC  0790               	decf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 44739  01B7EE                     i2l18813:
 44740                           
 44741                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 44742  01B7EE  010E               	movlb	14	; () banked
 44743  01B7F0  8DC5               	bsf	197,6,b	;volatile
 44744                           
 44745                           ; BSR set to: 14
 44746  01B7F2  0012               	return		;funcret
 44747  01B7F4                     __end_ofi2_EUSART2_Write:
 44748                           	opt callstack 0
 44749                           
 44750 ;; *************** function i2_isdigit *****************
 44751 ;; Defined at:
 44752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 44753 ;; Parameters:    Size  Location     Type
 44754 ;;  c               1    wreg     unsigned char 
 44755 ;; Auto vars:     Size  Location     Type
 44756 ;;  c               1    2[COMRAM] unsigned char 
 44757 ;; Return value:  Size  Location     Type
 44758 ;;		None               void
 44759 ;; Registers used:
 44760 ;;		wreg, status,2, status,0
 44761 ;; Tracked objects:
 44762 ;;		On entry : 0/0
 44763 ;;		On exit  : 0/0
 44764 ;;		Unchanged: 0/0
 44765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44770 ;;Total ram usage:        3 bytes
 44771 ;; Hardware stack levels used:    1
 44772 ;; This function calls:
 44773 ;;		Nothing
 44774 ;; This function is called by:
 44775 ;;		i2__doprnt
 44776 ;; This function uses a non-reentrant model
 44777 ;;
 44778                           
 44779                           	psect	text186
 44780  01C510                     __ptext186:
 44781                           	opt callstack 0
 44782  01C510                     i2_isdigit:
 44783                           	opt callstack 13
 44784                           
 44785                           ; BSR set to: 14
 44786                           ;incstack = 0
 44787                           ;i2isdigit@c stored from wreg
 44788  01C510  6E03               	movwf	i2isdigit@c,c
 44789  01C512  0E00               	movlw	0
 44790  01C514  6E02               	movwf	i2_isdigit$5455,c
 44791  01C516  0E3A               	movlw	58
 44792  01C518  6003               	cpfslt	i2isdigit@c,c
 44793  01C51A  D005               	goto	i2l19923
 44794  01C51C  0E2F               	movlw	47
 44795  01C51E  6403               	cpfsgt	i2isdigit@c,c
 44796  01C520  D002               	goto	i2l19923
 44797  01C522  0E01               	movlw	1
 44798  01C524  6E02               	movwf	i2_isdigit$5455,c
 44799  01C526                     i2l19923:
 44800  01C526  C002  F001         	movff	i2_isdigit$5455,??i2_isdigit
 44801  01C52A  3001               	rrcf	??i2_isdigit,w,c
 44802  01C52C  0012               	return		;funcret
 44803  01C52E                     __end_ofi2_isdigit:
 44804                           	opt callstack 0
 44805                           
 44806 ;; *************** function i2_fround *****************
 44807 ;; Defined at:
 44808 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 44809 ;; Parameters:    Size  Location     Type
 44810 ;;  prec            1    wreg     unsigned char 
 44811 ;; Auto vars:     Size  Location     Type
 44812 ;;  prec            1   80[COMRAM] unsigned char 
 44813 ;; Return value:  Size  Location     Type
 44814 ;;                  4   68[COMRAM] unsigned char 
 44815 ;; Registers used:
 44816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44817 ;; Tracked objects:
 44818 ;;		On entry : 0/0
 44819 ;;		On exit  : 0/0
 44820 ;;		Unchanged: 0/0
 44821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44823 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44825 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44826 ;;Total ram usage:       13 bytes
 44827 ;; Hardware stack levels used:    1
 44828 ;; Hardware stack levels required when called:    1
 44829 ;; This function calls:
 44830 ;;		i2___flmul
 44831 ;;		i2___lwdiv
 44832 ;;		i2___lwmod
 44833 ;; This function is called by:
 44834 ;;		i2__doprnt
 44835 ;; This function uses a non-reentrant model
 44836 ;;
 44837                           
 44838                           	psect	text187
 44839  017FA8                     __ptext187:
 44840                           	opt callstack 0
 44841  017FA8                     i2_fround:
 44842                           	opt callstack 12
 44843                           
 44844                           ;incstack = 0
 44845                           ;i2fround@prec stored from wreg
 44846  017FA8  6E51               	movwf	i2fround@prec,c
 44847                           
 44848                           ;doprnt.c: 421: if(prec>=110)
 44849  017FAA  0E6D               	movlw	109
 44850  017FAC  6451               	cpfsgt	i2fround@prec,c
 44851  017FAE  D0B5               	goto	i2l19565
 44852                           
 44853                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44854  017FB0  0E00               	movlw	0
 44855  017FB2  6E30               	movwf	i2___flmul@a,c
 44856  017FB4  0E00               	movlw	0
 44857  017FB6  6E31               	movwf	i2___flmul@a+1,c
 44858  017FB8  0E00               	movlw	0
 44859  017FBA  6E32               	movwf	i2___flmul@a+2,c
 44860  017FBC  0E3F               	movlw	63
 44861  017FBE  6E33               	movwf	i2___flmul@a+3,c
 44862  017FC0  0E00               	movlw	0
 44863  017FC2  6E09               	movwf	i2___lwdiv@divisor+1,c
 44864  017FC4  0E64               	movlw	100
 44865  017FC6  6E08               	movwf	i2___lwdiv@divisor,c
 44866  017FC8  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44867  017FCC  6A07               	clrf	i2___lwdiv@dividend+1,c
 44868  017FCE  EC23  F0DC         	call	i2___lwdiv	;wreg free
 44869  017FD2  90D8               	bcf	status,0,c
 44870  017FD4  3606               	rlcf	?i2___lwdiv,f,c
 44871  017FD6  3607               	rlcf	?i2___lwdiv+1,f,c
 44872  017FD8  90D8               	bcf	status,0,c
 44873  017FDA  3606               	rlcf	?i2___lwdiv,f,c
 44874  017FDC  3607               	rlcf	?i2___lwdiv+1,f,c
 44875  017FDE  0E48               	movlw	72
 44876  017FE0  2606               	addwf	?i2___lwdiv,f,c
 44877  017FE2  0E00               	movlw	0
 44878  017FE4  2207               	addwfc	?i2___lwdiv+1,f,c
 44879  017FE6  0E5B               	movlw	low __npowers_
 44880  017FE8  2406               	addwf	?i2___lwdiv,w,c
 44881  017FEA  6EF6               	movwf	tblptrl,c
 44882  017FEC  0EE4               	movlw	high __npowers_
 44883  017FEE  2007               	addwfc	?i2___lwdiv+1,w,c
 44884  017FF0  6EF7               	movwf	tblptrh,c
 44885  017FF2                     	if	1	;There are 3 active tblptr bytes
 44886  017FF2  6AF8               	clrf	tblptru,c
 44887  017FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 44888  017FF6  22F8               	addwfc	tblptru,f,c
 44889  017FF8                     	endif
 44890  017FF8  0009               	tblrd		*+
 44891  017FFA  CFF5 F02C          	movff	tablat,i2___flmul@b
 44892  017FFE  0009               	tblrd		*+
 44893  018000  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44894  018004  0009               	tblrd		*+
 44895  018006  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44896  01800A  000A               	tblrd		*-
 44897  01800C  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44898  018010  ECCE  F0B6         	call	i2___flmul	;wreg free
 44899  018014  C02C  F04D         	movff	?i2___flmul,i2_fround$6422
 44900  018018  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6422+1
 44901  01801C  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6422+2
 44902  018020  C02F  F050         	movff	?i2___flmul+3,i2_fround$6422+3
 44903                           
 44904                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44905  018024  0E00               	movlw	0
 44906  018026  6E09               	movwf	i2___lwdiv@divisor+1,c
 44907  018028  0E0A               	movlw	10
 44908  01802A  6E08               	movwf	i2___lwdiv@divisor,c
 44909  01802C  0E00               	movlw	0
 44910  01802E  6E04               	movwf	i2___lwmod@divisor+1,c
 44911  018030  0E64               	movlw	100
 44912  018032  6E03               	movwf	i2___lwmod@divisor,c
 44913  018034  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44914  018038  6A02               	clrf	i2___lwmod@dividend+1,c
 44915  01803A  EC94  F0DE         	call	i2___lwmod	;wreg free
 44916  01803E  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 44917  018042  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 44918  018046  EC23  F0DC         	call	i2___lwdiv	;wreg free
 44919  01804A  90D8               	bcf	status,0,c
 44920  01804C  3606               	rlcf	?i2___lwdiv,f,c
 44921  01804E  3607               	rlcf	?i2___lwdiv+1,f,c
 44922  018050  90D8               	bcf	status,0,c
 44923  018052  3606               	rlcf	?i2___lwdiv,f,c
 44924  018054  3607               	rlcf	?i2___lwdiv+1,f,c
 44925  018056  0E24               	movlw	36
 44926  018058  2606               	addwf	?i2___lwdiv,f,c
 44927  01805A  0E00               	movlw	0
 44928  01805C  2207               	addwfc	?i2___lwdiv+1,f,c
 44929  01805E  0E5B               	movlw	low __npowers_
 44930  018060  2406               	addwf	?i2___lwdiv,w,c
 44931  018062  6EF6               	movwf	tblptrl,c
 44932  018064  0EE4               	movlw	high __npowers_
 44933  018066  2007               	addwfc	?i2___lwdiv+1,w,c
 44934  018068  6EF7               	movwf	tblptrh,c
 44935  01806A                     	if	1	;There are 3 active tblptr bytes
 44936  01806A  6AF8               	clrf	tblptru,c
 44937  01806C  0E00               	movlw	low (__mediumconst shr (0+16))
 44938  01806E  22F8               	addwfc	tblptru,f,c
 44939  018070                     	endif
 44940  018070  0009               	tblrd		*+
 44941  018072  CFF5 F030          	movff	tablat,i2___flmul@a
 44942  018076  0009               	tblrd		*+
 44943  018078  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44944  01807C  0009               	tblrd		*+
 44945  01807E  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44946  018082  000A               	tblrd		*-
 44947  018084  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44948  018088  C04D  F02C         	movff	i2_fround$6422,i2___flmul@b
 44949  01808C  C04E  F02D         	movff	i2_fround$6422+1,i2___flmul@b+1
 44950  018090  C04F  F02E         	movff	i2_fround$6422+2,i2___flmul@b+2
 44951  018094  C050  F02F         	movff	i2_fround$6422+3,i2___flmul@b+3
 44952  018098  ECCE  F0B6         	call	i2___flmul	;wreg free
 44953  01809C  C02C  F049         	movff	?i2___flmul,i2_fround$6423
 44954  0180A0  C02D  F04A         	movff	?i2___flmul+1,i2_fround$6423+1
 44955  0180A4  C02E  F04B         	movff	?i2___flmul+2,i2_fround$6423+2
 44956  0180A8  C02F  F04C         	movff	?i2___flmul+3,i2_fround$6423+3
 44957                           
 44958                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44959  0180AC  C049  F02C         	movff	i2_fround$6423,i2___flmul@b
 44960  0180B0  C04A  F02D         	movff	i2_fround$6423+1,i2___flmul@b+1
 44961  0180B4  C04B  F02E         	movff	i2_fround$6423+2,i2___flmul@b+2
 44962  0180B8  C04C  F02F         	movff	i2_fround$6423+3,i2___flmul@b+3
 44963  0180BC  0E00               	movlw	0
 44964  0180BE  6E04               	movwf	i2___lwmod@divisor+1,c
 44965  0180C0  0E0A               	movlw	10
 44966  0180C2  6E03               	movwf	i2___lwmod@divisor,c
 44967  0180C4  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44968  0180C8  6A02               	clrf	i2___lwmod@dividend+1,c
 44969  0180CA  EC94  F0DE         	call	i2___lwmod	;wreg free
 44970  0180CE  90D8               	bcf	status,0,c
 44971  0180D0  3601               	rlcf	?i2___lwmod,f,c
 44972  0180D2  3602               	rlcf	?i2___lwmod+1,f,c
 44973  0180D4  90D8               	bcf	status,0,c
 44974  0180D6  3601               	rlcf	?i2___lwmod,f,c
 44975  0180D8  3602               	rlcf	?i2___lwmod+1,f,c
 44976  0180DA  0E5B               	movlw	low __npowers_
 44977  0180DC  2401               	addwf	?i2___lwmod,w,c
 44978  0180DE  6EF6               	movwf	tblptrl,c
 44979  0180E0  0EE4               	movlw	high __npowers_
 44980  0180E2  2002               	addwfc	?i2___lwmod+1,w,c
 44981  0180E4  6EF7               	movwf	tblptrh,c
 44982  0180E6                     	if	1	;There are 3 active tblptr bytes
 44983  0180E6  6AF8               	clrf	tblptru,c
 44984  0180E8  0E00               	movlw	low (__mediumconst shr (0+16))
 44985  0180EA  22F8               	addwfc	tblptru,f,c
 44986  0180EC                     	endif
 44987  0180EC  0009               	tblrd		*+
 44988  0180EE  CFF5 F030          	movff	tablat,i2___flmul@a
 44989  0180F2  0009               	tblrd		*+
 44990  0180F4  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44991  0180F8  0009               	tblrd		*+
 44992  0180FA  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44993  0180FE  000A               	tblrd		*-
 44994  018100  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44995  018104  ECCE  F0B6         	call	i2___flmul	;wreg free
 44996  018108  C02C  F045         	movff	?i2___flmul,?i2_fround
 44997  01810C  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44998  018110  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44999  018114  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45000  018118  0012               	return	
 45001  01811A                     i2l19565:
 45002                           
 45003                           ;doprnt.c: 423: else if(prec > 10)
 45004  01811A  0E0A               	movlw	10
 45005  01811C  6451               	cpfsgt	i2fround@prec,c
 45006  01811E  D071               	goto	i2l19571
 45007                           
 45008                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 45009  018120  0E00               	movlw	0
 45010  018122  6E30               	movwf	i2___flmul@a,c
 45011  018124  0E00               	movlw	0
 45012  018126  6E31               	movwf	i2___flmul@a+1,c
 45013  018128  0E00               	movlw	0
 45014  01812A  6E32               	movwf	i2___flmul@a+2,c
 45015  01812C  0E3F               	movlw	63
 45016  01812E  6E33               	movwf	i2___flmul@a+3,c
 45017  018130  0E00               	movlw	0
 45018  018132  6E09               	movwf	i2___lwdiv@divisor+1,c
 45019  018134  0E0A               	movlw	10
 45020  018136  6E08               	movwf	i2___lwdiv@divisor,c
 45021  018138  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 45022  01813C  6A07               	clrf	i2___lwdiv@dividend+1,c
 45023  01813E  EC23  F0DC         	call	i2___lwdiv	;wreg free
 45024  018142  90D8               	bcf	status,0,c
 45025  018144  3606               	rlcf	?i2___lwdiv,f,c
 45026  018146  3607               	rlcf	?i2___lwdiv+1,f,c
 45027  018148  90D8               	bcf	status,0,c
 45028  01814A  3606               	rlcf	?i2___lwdiv,f,c
 45029  01814C  3607               	rlcf	?i2___lwdiv+1,f,c
 45030  01814E  0E24               	movlw	36
 45031  018150  2606               	addwf	?i2___lwdiv,f,c
 45032  018152  0E00               	movlw	0
 45033  018154  2207               	addwfc	?i2___lwdiv+1,f,c
 45034  018156  0E5B               	movlw	low __npowers_
 45035  018158  2406               	addwf	?i2___lwdiv,w,c
 45036  01815A  6EF6               	movwf	tblptrl,c
 45037  01815C  0EE4               	movlw	high __npowers_
 45038  01815E  2007               	addwfc	?i2___lwdiv+1,w,c
 45039  018160  6EF7               	movwf	tblptrh,c
 45040  018162                     	if	1	;There are 3 active tblptr bytes
 45041  018162  6AF8               	clrf	tblptru,c
 45042  018164  0E00               	movlw	low (__mediumconst shr (0+16))
 45043  018166  22F8               	addwfc	tblptru,f,c
 45044  018168                     	endif
 45045  018168  0009               	tblrd		*+
 45046  01816A  CFF5 F02C          	movff	tablat,i2___flmul@b
 45047  01816E  0009               	tblrd		*+
 45048  018170  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 45049  018174  0009               	tblrd		*+
 45050  018176  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 45051  01817A  000A               	tblrd		*-
 45052  01817C  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 45053  018180  ECCE  F0B6         	call	i2___flmul	;wreg free
 45054  018184  C02C  F04D         	movff	?i2___flmul,i2_fround$6422
 45055  018188  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6422+1
 45056  01818C  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6422+2
 45057  018190  C02F  F050         	movff	?i2___flmul+3,i2_fround$6422+3
 45058                           
 45059                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 45060  018194  C04D  F02C         	movff	i2_fround$6422,i2___flmul@b
 45061  018198  C04E  F02D         	movff	i2_fround$6422+1,i2___flmul@b+1
 45062  01819C  C04F  F02E         	movff	i2_fround$6422+2,i2___flmul@b+2
 45063  0181A0  C050  F02F         	movff	i2_fround$6422+3,i2___flmul@b+3
 45064  0181A4  0E00               	movlw	0
 45065  0181A6  6E04               	movwf	i2___lwmod@divisor+1,c
 45066  0181A8  0E0A               	movlw	10
 45067  0181AA  6E03               	movwf	i2___lwmod@divisor,c
 45068  0181AC  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 45069  0181B0  6A02               	clrf	i2___lwmod@dividend+1,c
 45070  0181B2  EC94  F0DE         	call	i2___lwmod	;wreg free
 45071  0181B6  90D8               	bcf	status,0,c
 45072  0181B8  3601               	rlcf	?i2___lwmod,f,c
 45073  0181BA  3602               	rlcf	?i2___lwmod+1,f,c
 45074  0181BC  90D8               	bcf	status,0,c
 45075  0181BE  3601               	rlcf	?i2___lwmod,f,c
 45076  0181C0  3602               	rlcf	?i2___lwmod+1,f,c
 45077  0181C2  0E5B               	movlw	low __npowers_
 45078  0181C4  2401               	addwf	?i2___lwmod,w,c
 45079  0181C6  6EF6               	movwf	tblptrl,c
 45080  0181C8  0EE4               	movlw	high __npowers_
 45081  0181CA  2002               	addwfc	?i2___lwmod+1,w,c
 45082  0181CC  6EF7               	movwf	tblptrh,c
 45083  0181CE                     	if	1	;There are 3 active tblptr bytes
 45084  0181CE  6AF8               	clrf	tblptru,c
 45085  0181D0  0E00               	movlw	low (__mediumconst shr (0+16))
 45086  0181D2  22F8               	addwfc	tblptru,f,c
 45087  0181D4                     	endif
 45088  0181D4  0009               	tblrd		*+
 45089  0181D6  CFF5 F030          	movff	tablat,i2___flmul@a
 45090  0181DA  0009               	tblrd		*+
 45091  0181DC  CFF5 F031          	movff	tablat,i2___flmul@a+1
 45092  0181E0  0009               	tblrd		*+
 45093  0181E2  CFF5 F032          	movff	tablat,i2___flmul@a+2
 45094  0181E6  000A               	tblrd		*-
 45095  0181E8  CFF5 F033          	movff	tablat,i2___flmul@a+3
 45096  0181EC  ECCE  F0B6         	call	i2___flmul	;wreg free
 45097  0181F0  C02C  F045         	movff	?i2___flmul,?i2_fround
 45098  0181F4  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 45099  0181F8  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 45100  0181FC  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45101  018200  0012               	return	
 45102  018202                     i2l19571:
 45103                           
 45104                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 45105  018202  5051               	movf	i2fround@prec,w,c
 45106  018204  0D04               	mullw	4
 45107  018206  0E5B               	movlw	low __npowers_
 45108  018208  24F3               	addwf	prodl,w,c
 45109  01820A  6EF6               	movwf	tblptrl,c
 45110  01820C  0EE4               	movlw	high __npowers_
 45111  01820E  20F4               	addwfc	prodh,w,c
 45112  018210  6EF7               	movwf	tblptrh,c
 45113  018212                     	if	1	;There are 3 active tblptr bytes
 45114  018212  6AF8               	clrf	tblptru,c
 45115  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 45116  018216  22F8               	addwfc	tblptru,f,c
 45117  018218                     	endif
 45118  018218  0009               	tblrd		*+
 45119  01821A  CFF5 F02C          	movff	tablat,i2___flmul@b
 45120  01821E  0009               	tblrd		*+
 45121  018220  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 45122  018224  0009               	tblrd		*+
 45123  018226  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 45124  01822A  000A               	tblrd		*-
 45125  01822C  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 45126  018230  0E00               	movlw	0
 45127  018232  6E30               	movwf	i2___flmul@a,c
 45128  018234  0E00               	movlw	0
 45129  018236  6E31               	movwf	i2___flmul@a+1,c
 45130  018238  0E00               	movlw	0
 45131  01823A  6E32               	movwf	i2___flmul@a+2,c
 45132  01823C  0E3F               	movlw	63
 45133  01823E  6E33               	movwf	i2___flmul@a+3,c
 45134  018240  ECCE  F0B6         	call	i2___flmul	;wreg free
 45135  018244  C02C  F045         	movff	?i2___flmul,?i2_fround
 45136  018248  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 45137  01824C  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 45138  018250  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45139  018254  0012               	return		;funcret
 45140  018256                     __end_ofi2_fround:
 45141                           	opt callstack 0
 45142                           
 45143 ;; *************** function i2___lwmod *****************
 45144 ;; Defined at:
 45145 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 45146 ;; Parameters:    Size  Location     Type
 45147 ;;  dividend        2    0[COMRAM] unsigned int 
 45148 ;;  divisor         2    2[COMRAM] unsigned int 
 45149 ;; Auto vars:     Size  Location     Type
 45150 ;;  __lwmod         1    4[COMRAM] unsigned char 
 45151 ;; Return value:  Size  Location     Type
 45152 ;;                  2    0[COMRAM] unsigned int 
 45153 ;; Registers used:
 45154 ;;		wreg, status,2, status,0
 45155 ;; Tracked objects:
 45156 ;;		On entry : 0/0
 45157 ;;		On exit  : 0/0
 45158 ;;		Unchanged: 0/0
 45159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45163 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45164 ;;Total ram usage:        5 bytes
 45165 ;; Hardware stack levels used:    1
 45166 ;; This function calls:
 45167 ;;		Nothing
 45168 ;; This function is called by:
 45169 ;;		i2_fround
 45170 ;; This function uses a non-reentrant model
 45171 ;;
 45172                           
 45173                           	psect	text188
 45174  01BD28                     __ptext188:
 45175                           	opt callstack 0
 45176  01BD28                     i2___lwmod:
 45177                           	opt callstack 12
 45178                           
 45179                           ;incstack = 0
 45180  01BD28  5003               	movf	i2___lwmod@divisor,w,c
 45181  01BD2A  1004               	iorwf	i2___lwmod@divisor+1,w,c
 45182  01BD2C  B4D8               	btfsc	status,2,c
 45183  01BD2E  D018               	goto	i2l3207
 45184  01BD30  0E01               	movlw	1
 45185  01BD32  6E05               	movwf	i2___lwmod@counter,c
 45186  01BD34  D004               	goto	i2l18923
 45187  01BD36                     i2l18921:
 45188  01BD36  90D8               	bcf	status,0,c
 45189  01BD38  3603               	rlcf	i2___lwmod@divisor,f,c
 45190  01BD3A  3604               	rlcf	i2___lwmod@divisor+1,f,c
 45191  01BD3C  2A05               	incf	i2___lwmod@counter,f,c
 45192  01BD3E                     i2l18923:
 45193  01BD3E  AE04               	btfss	i2___lwmod@divisor+1,7,c
 45194  01BD40  D7FA               	goto	i2l18921
 45195  01BD42                     i2u2385_40:
 45196  01BD42  5003               	movf	i2___lwmod@divisor,w,c
 45197  01BD44  5C01               	subwf	i2___lwmod@dividend,w,c
 45198  01BD46  5004               	movf	i2___lwmod@divisor+1,w,c
 45199  01BD48  5802               	subwfb	i2___lwmod@dividend+1,w,c
 45200  01BD4A  A0D8               	btfss	status,0,c
 45201  01BD4C  D004               	goto	i2l18929
 45202  01BD4E  5003               	movf	i2___lwmod@divisor,w,c
 45203  01BD50  5E01               	subwf	i2___lwmod@dividend,f,c
 45204  01BD52  5004               	movf	i2___lwmod@divisor+1,w,c
 45205  01BD54  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 45206  01BD56                     i2l18929:
 45207  01BD56  90D8               	bcf	status,0,c
 45208  01BD58  3204               	rrcf	i2___lwmod@divisor+1,f,c
 45209  01BD5A  3203               	rrcf	i2___lwmod@divisor,f,c
 45210  01BD5C  2E05               	decfsz	i2___lwmod@counter,f,c
 45211  01BD5E  D7F1               	goto	i2u2385_40
 45212  01BD60                     i2l3207:
 45213  01BD60  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 45214  01BD64  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 45215  01BD68  0012               	return		;funcret
 45216  01BD6A                     __end_ofi2___lwmod:
 45217                           	opt callstack 0
 45218                           
 45219 ;; *************** function i2___lwdiv *****************
 45220 ;; Defined at:
 45221 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 45222 ;; Parameters:    Size  Location     Type
 45223 ;;  dividend        2    5[COMRAM] unsigned int 
 45224 ;;  divisor         2    7[COMRAM] unsigned int 
 45225 ;; Auto vars:     Size  Location     Type
 45226 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 45227 ;;  __lwdiv         1    9[COMRAM] unsigned char 
 45228 ;; Return value:  Size  Location     Type
 45229 ;;                  2    5[COMRAM] unsigned int 
 45230 ;; Registers used:
 45231 ;;		wreg, status,2, status,0
 45232 ;; Tracked objects:
 45233 ;;		On entry : 0/0
 45234 ;;		On exit  : 0/0
 45235 ;;		Unchanged: 0/0
 45236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45238 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45240 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45241 ;;Total ram usage:        7 bytes
 45242 ;; Hardware stack levels used:    1
 45243 ;; This function calls:
 45244 ;;		Nothing
 45245 ;; This function is called by:
 45246 ;;		i2_fround
 45247 ;; This function uses a non-reentrant model
 45248 ;;
 45249                           
 45250                           	psect	text189
 45251  01B846                     __ptext189:
 45252                           	opt callstack 0
 45253  01B846                     i2___lwdiv:
 45254                           	opt callstack 12
 45255                           
 45256                           ;incstack = 0
 45257  01B846  0E00               	movlw	0
 45258  01B848  6E0C               	movwf	i2___lwdiv@quotient+1,c
 45259  01B84A  0E00               	movlw	0
 45260  01B84C  6E0B               	movwf	i2___lwdiv@quotient,c
 45261  01B84E  5008               	movf	i2___lwdiv@divisor,w,c
 45262  01B850  1009               	iorwf	i2___lwdiv@divisor+1,w,c
 45263  01B852  B4D8               	btfsc	status,2,c
 45264  01B854  D01C               	goto	i2l3197
 45265  01B856  0E01               	movlw	1
 45266  01B858  6E0A               	movwf	i2___lwdiv@counter,c
 45267  01B85A  D004               	goto	i2l18903
 45268  01B85C                     i2l18901:
 45269  01B85C  90D8               	bcf	status,0,c
 45270  01B85E  3608               	rlcf	i2___lwdiv@divisor,f,c
 45271  01B860  3609               	rlcf	i2___lwdiv@divisor+1,f,c
 45272  01B862  2A0A               	incf	i2___lwdiv@counter,f,c
 45273  01B864                     i2l18903:
 45274  01B864  AE09               	btfss	i2___lwdiv@divisor+1,7,c
 45275  01B866  D7FA               	goto	i2l18901
 45276  01B868                     i2u2382_40:
 45277  01B868  90D8               	bcf	status,0,c
 45278  01B86A  360B               	rlcf	i2___lwdiv@quotient,f,c
 45279  01B86C  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 45280  01B86E  5008               	movf	i2___lwdiv@divisor,w,c
 45281  01B870  5C06               	subwf	i2___lwdiv@dividend,w,c
 45282  01B872  5009               	movf	i2___lwdiv@divisor+1,w,c
 45283  01B874  5807               	subwfb	i2___lwdiv@dividend+1,w,c
 45284  01B876  A0D8               	btfss	status,0,c
 45285  01B878  D005               	goto	i2l18913
 45286  01B87A  5008               	movf	i2___lwdiv@divisor,w,c
 45287  01B87C  5E06               	subwf	i2___lwdiv@dividend,f,c
 45288  01B87E  5009               	movf	i2___lwdiv@divisor+1,w,c
 45289  01B880  5A07               	subwfb	i2___lwdiv@dividend+1,f,c
 45290  01B882  800B               	bsf	i2___lwdiv@quotient,0,c
 45291  01B884                     i2l18913:
 45292  01B884  90D8               	bcf	status,0,c
 45293  01B886  3209               	rrcf	i2___lwdiv@divisor+1,f,c
 45294  01B888  3208               	rrcf	i2___lwdiv@divisor,f,c
 45295  01B88A  2E0A               	decfsz	i2___lwdiv@counter,f,c
 45296  01B88C  D7ED               	goto	i2u2382_40
 45297  01B88E                     i2l3197:
 45298  01B88E  C00B  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 45299  01B892  C00C  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 45300  01B896  0012               	return		;funcret
 45301  01B898                     __end_ofi2___lwdiv:
 45302                           	opt callstack 0
 45303                           
 45304 ;; *************** function i2__tdiv_to_l_ *****************
 45305 ;; Defined at:
 45306 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 45307 ;; Parameters:    Size  Location     Type
 45308 ;;  f1              4    0[COMRAM] float 
 45309 ;;  f2              4    4[COMRAM] float 
 45310 ;; Auto vars:     Size  Location     Type
 45311 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 45312 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 45313 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 45314 ;; Return value:  Size  Location     Type
 45315 ;;                  4    0[COMRAM] unsigned long 
 45316 ;; Registers used:
 45317 ;;		wreg, status,2, status,0
 45318 ;; Tracked objects:
 45319 ;;		On entry : 0/0
 45320 ;;		On exit  : 0/0
 45321 ;;		Unchanged: 0/0
 45322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45324 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45325 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45326 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45327 ;;Total ram usage:       17 bytes
 45328 ;; Hardware stack levels used:    1
 45329 ;; This function calls:
 45330 ;;		Nothing
 45331 ;; This function is called by:
 45332 ;;		i2__doprnt
 45333 ;; This function uses a non-reentrant model
 45334 ;;
 45335                           
 45336                           	psect	text190
 45337  019F56                     __ptext190:
 45338                           	opt callstack 0
 45339  019F56                     i2__tdiv_to_l_:
 45340                           	opt callstack 13
 45341                           
 45342                           ;incstack = 0
 45343  019F56  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 45344  019F5A  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45345  019F5C  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45346  019F5E  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 45347  019F60  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45348  019F62  E301               	bnc	u2511_41
 45349  019F64  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45350  019F66                     u2511_41:
 45351  019F66  5009               	movf	??i2__tdiv_to_l_,w,c
 45352  019F68  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 45353  019F6A  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45354  019F6C  A4D8               	btfss	status,2,c
 45355  019F6E  D009               	goto	i2l19797
 45356  019F70                     i2u2512_40:
 45357  019F70  0E00               	movlw	0
 45358  019F72  6E01               	movwf	?i2__tdiv_to_l_,c
 45359  019F74  0E00               	movlw	0
 45360  019F76  6E02               	movwf	?i2__tdiv_to_l_+1,c
 45361  019F78  0E00               	movlw	0
 45362  019F7A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 45363  019F7C  0E00               	movlw	0
 45364  019F7E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 45365  019F80  0012               	return	
 45366  019F82                     i2l19797:
 45367  019F82  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 45368  019F86  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45369  019F88  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45370  019F8A  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 45371  019F8C  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45372  019F8E  E301               	bnc	u2513_41
 45373  019F90  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45374  019F92                     u2513_41:
 45375  019F92  5009               	movf	??i2__tdiv_to_l_,w,c
 45376  019F94  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45377  019F96  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45378  019F98  B4D8               	btfsc	status,2,c
 45379  019F9A  D7EA               	goto	i2u2512_40
 45380  019F9C  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 45381  019F9E  0EFF               	movlw	255
 45382  019FA0  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 45383  019FA2  0EFF               	movlw	255
 45384  019FA4  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 45385  019FA6  0E00               	movlw	0
 45386  019FA8  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 45387  019FAA  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 45388  019FAC  0EFF               	movlw	255
 45389  019FAE  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 45390  019FB0  0EFF               	movlw	255
 45391  019FB2  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 45392  019FB4  0E00               	movlw	0
 45393  019FB6  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 45394  019FB8  0E00               	movlw	0
 45395  019FBA  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 45396  019FBC  0E00               	movlw	0
 45397  019FBE  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 45398  019FC0  0E00               	movlw	0
 45399  019FC2  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 45400  019FC4  0E00               	movlw	0
 45401  019FC6  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 45402  019FC8  0E7F               	movlw	127
 45403  019FCA  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45404  019FCC  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45405  019FCE  0F98               	addlw	152
 45406  019FD0  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45407  019FD2  0E18               	movlw	24
 45408  019FD4  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45409  019FD6                     i2l3049:
 45410  019FD6  90D8               	bcf	status,0,c
 45411  019FD8  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45412  019FDA  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45413  019FDC  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45414  019FDE  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45415  019FE0  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45416  019FE2  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 45417  019FE4  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45418  019FE6  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 45419  019FE8  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45420  019FEA  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 45421  019FEC  A0D8               	btfss	status,0,c
 45422  019FEE  D007               	goto	i2l3050
 45423  019FF0  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45424  019FF2  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 45425  019FF4  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45426  019FF6  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 45427  019FF8  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45428  019FFA  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 45429  019FFC  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 45430  019FFE                     i2l3050:
 45431  019FFE  90D8               	bcf	status,0,c
 45432  01A000  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 45433  01A002  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 45434  01A004  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 45435  01A006  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 45436  01A008  D7E6               	goto	i2l3049
 45437  01A00A  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 45438  01A00C  D00D               	goto	i2l19837
 45439  01A00E  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45440  01A010  0A80               	xorlw	128
 45441  01A012  0F97               	addlw	151
 45442  01A014  A0D8               	btfss	status,0,c
 45443  01A016  D7AC               	goto	i2u2512_40
 45444  01A018                     i2l19833:
 45445  01A018  90D8               	bcf	status,0,c
 45446  01A01A  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 45447  01A01C  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 45448  01A01E  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 45449  01A020  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 45450  01A022  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 45451  01A024  D7F9               	goto	i2l19833
 45452  01A026  D00D               	goto	i2u2519_40
 45453  01A028                     i2l19837:
 45454  01A028  0E17               	movlw	23
 45455  01A02A  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 45456  01A02C  D007               	goto	i2l19845
 45457  01A02E  D7A0               	goto	i2u2512_40
 45458  01A030                     i2l19843:
 45459  01A030  90D8               	bcf	status,0,c
 45460  01A032  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45461  01A034  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45462  01A036  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45463  01A038  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45464  01A03A  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 45465  01A03C                     i2l19845:
 45466  01A03C  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45467  01A03E  A4D8               	btfss	status,2,c
 45468  01A040  D7F7               	goto	i2l19843
 45469  01A042                     i2u2519_40:
 45470  01A042  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 45471  01A046  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 45472  01A04A  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 45473  01A04E  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 45474  01A052  0012               	return		;funcret
 45475  01A054                     __end_ofi2__tdiv_to_l_:
 45476                           	opt callstack 0
 45477                           
 45478 ;; *************** function i2__div_to_l_ *****************
 45479 ;; Defined at:
 45480 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 45481 ;; Parameters:    Size  Location     Type
 45482 ;;  f1              4    0[COMRAM] unsigned long 
 45483 ;;  f2              4    4[COMRAM] unsigned long 
 45484 ;; Auto vars:     Size  Location     Type
 45485 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 45486 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 45487 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 45488 ;; Return value:  Size  Location     Type
 45489 ;;                  4    0[COMRAM] unsigned long 
 45490 ;; Registers used:
 45491 ;;		wreg, status,2, status,0
 45492 ;; Tracked objects:
 45493 ;;		On entry : 0/0
 45494 ;;		On exit  : 0/0
 45495 ;;		Unchanged: 0/0
 45496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45498 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45500 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45501 ;;Total ram usage:       14 bytes
 45502 ;; Hardware stack levels used:    1
 45503 ;; This function calls:
 45504 ;;		Nothing
 45505 ;; This function is called by:
 45506 ;;		i2__doprnt
 45507 ;; This function uses a non-reentrant model
 45508 ;;
 45509                           
 45510                           	psect	text191
 45511  01A23E                     __ptext191:
 45512                           	opt callstack 0
 45513  01A23E                     i2__div_to_l_:
 45514                           	opt callstack 13
 45515                           
 45516                           ;incstack = 0
 45517  01A23E  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 45518  01A240  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 45519  01A242  6E0E               	movwf	i2__div_to_l_@exp1,c
 45520  01A244  500E               	movf	i2__div_to_l_@exp1,w,c
 45521  01A246  A4D8               	btfss	status,2,c
 45522  01A248  D009               	goto	i2l19647
 45523  01A24A                     i2u2488_40:
 45524  01A24A  0E00               	movlw	0
 45525  01A24C  6E01               	movwf	?i2__div_to_l_,c
 45526  01A24E  0E00               	movlw	0
 45527  01A250  6E02               	movwf	?i2__div_to_l_+1,c
 45528  01A252  0E00               	movlw	0
 45529  01A254  6E03               	movwf	?i2__div_to_l_+2,c
 45530  01A256  0E00               	movlw	0
 45531  01A258  6E04               	movwf	?i2__div_to_l_+3,c
 45532  01A25A  0012               	return	
 45533  01A25C                     i2l19647:
 45534  01A25C  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 45535  01A25E  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 45536  01A260  6E0D               	movwf	i2__div_to_l_@cntr,c
 45537  01A262  500D               	movf	i2__div_to_l_@cntr,w,c
 45538  01A264  B4D8               	btfsc	status,2,c
 45539  01A266  D7F1               	goto	i2u2488_40
 45540  01A268  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 45541  01A26A  0EFF               	movlw	255
 45542  01A26C  1601               	andwf	i2__div_to_l_@f1,f,c
 45543  01A26E  0EFF               	movlw	255
 45544  01A270  1602               	andwf	i2__div_to_l_@f1+1,f,c
 45545  01A272  0EFF               	movlw	255
 45546  01A274  1603               	andwf	i2__div_to_l_@f1+2,f,c
 45547  01A276  0E00               	movlw	0
 45548  01A278  1604               	andwf	i2__div_to_l_@f1+3,f,c
 45549  01A27A  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 45550  01A27C  0EFF               	movlw	255
 45551  01A27E  1605               	andwf	i2__div_to_l_@f2,f,c
 45552  01A280  0EFF               	movlw	255
 45553  01A282  1606               	andwf	i2__div_to_l_@f2+1,f,c
 45554  01A284  0EFF               	movlw	255
 45555  01A286  1607               	andwf	i2__div_to_l_@f2+2,f,c
 45556  01A288  0E00               	movlw	0
 45557  01A28A  1608               	andwf	i2__div_to_l_@f2+3,f,c
 45558  01A28C  0E00               	movlw	0
 45559  01A28E  6E09               	movwf	i2__div_to_l_@quot,c
 45560  01A290  0E00               	movlw	0
 45561  01A292  6E0A               	movwf	i2__div_to_l_@quot+1,c
 45562  01A294  0E00               	movlw	0
 45563  01A296  6E0B               	movwf	i2__div_to_l_@quot+2,c
 45564  01A298  0E00               	movlw	0
 45565  01A29A  6E0C               	movwf	i2__div_to_l_@quot+3,c
 45566  01A29C  0E7F               	movlw	127
 45567  01A29E  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45568  01A2A0  500D               	movf	i2__div_to_l_@cntr,w,c
 45569  01A2A2  0FA0               	addlw	160
 45570  01A2A4  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45571  01A2A6  0E20               	movlw	32
 45572  01A2A8  6E0D               	movwf	i2__div_to_l_@cntr,c
 45573  01A2AA                     i2l19667:
 45574  01A2AA  90D8               	bcf	status,0,c
 45575  01A2AC  3609               	rlcf	i2__div_to_l_@quot,f,c
 45576  01A2AE  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45577  01A2B0  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45578  01A2B2  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45579  01A2B4  5005               	movf	i2__div_to_l_@f2,w,c
 45580  01A2B6  5C01               	subwf	i2__div_to_l_@f1,w,c
 45581  01A2B8  5006               	movf	i2__div_to_l_@f2+1,w,c
 45582  01A2BA  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 45583  01A2BC  5007               	movf	i2__div_to_l_@f2+2,w,c
 45584  01A2BE  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 45585  01A2C0  5008               	movf	i2__div_to_l_@f2+3,w,c
 45586  01A2C2  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 45587  01A2C4  A0D8               	btfss	status,0,c
 45588  01A2C6  D009               	goto	i2l19675
 45589  01A2C8  5005               	movf	i2__div_to_l_@f2,w,c
 45590  01A2CA  5E01               	subwf	i2__div_to_l_@f1,f,c
 45591  01A2CC  5006               	movf	i2__div_to_l_@f2+1,w,c
 45592  01A2CE  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 45593  01A2D0  5007               	movf	i2__div_to_l_@f2+2,w,c
 45594  01A2D2  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 45595  01A2D4  5008               	movf	i2__div_to_l_@f2+3,w,c
 45596  01A2D6  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 45597  01A2D8  8009               	bsf	i2__div_to_l_@quot,0,c
 45598  01A2DA                     i2l19675:
 45599  01A2DA  90D8               	bcf	status,0,c
 45600  01A2DC  3601               	rlcf	i2__div_to_l_@f1,f,c
 45601  01A2DE  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 45602  01A2E0  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 45603  01A2E2  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 45604  01A2E4  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 45605  01A2E6  D7E1               	goto	i2l19667
 45606  01A2E8  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 45607  01A2EA  D00D               	goto	i2l19691
 45608  01A2EC  500E               	movf	i2__div_to_l_@exp1,w,c
 45609  01A2EE  0A80               	xorlw	128
 45610  01A2F0  0F9F               	addlw	159
 45611  01A2F2  A0D8               	btfss	status,0,c
 45612  01A2F4  D7AA               	goto	i2u2488_40
 45613  01A2F6                     i2l19687:
 45614  01A2F6  90D8               	bcf	status,0,c
 45615  01A2F8  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 45616  01A2FA  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 45617  01A2FC  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 45618  01A2FE  3209               	rrcf	i2__div_to_l_@quot,f,c
 45619  01A300  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 45620  01A302  D7F9               	goto	i2l19687
 45621  01A304  D00D               	goto	i2u2494_40
 45622  01A306                     i2l19691:
 45623  01A306  0E1F               	movlw	31
 45624  01A308  640E               	cpfsgt	i2__div_to_l_@exp1,c
 45625  01A30A  D007               	goto	i2l19699
 45626  01A30C  D79E               	goto	i2u2488_40
 45627  01A30E                     i2l19697:
 45628  01A30E  90D8               	bcf	status,0,c
 45629  01A310  3609               	rlcf	i2__div_to_l_@quot,f,c
 45630  01A312  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45631  01A314  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45632  01A316  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45633  01A318  060E               	decf	i2__div_to_l_@exp1,f,c
 45634  01A31A                     i2l19699:
 45635  01A31A  500E               	movf	i2__div_to_l_@exp1,w,c
 45636  01A31C  A4D8               	btfss	status,2,c
 45637  01A31E  D7F7               	goto	i2l19697
 45638  01A320                     i2u2494_40:
 45639  01A320  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 45640  01A324  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 45641  01A328  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 45642  01A32C  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 45643  01A330  0012               	return		;funcret
 45644  01A332                     __end_ofi2__div_to_l_:
 45645                           	opt callstack 0
 45646                           
 45647 ;; *************** function i2___wmul *****************
 45648 ;; Defined at:
 45649 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 45650 ;; Parameters:    Size  Location     Type
 45651 ;;  multiplier      2    0[COMRAM] unsigned int 
 45652 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45653 ;; Auto vars:     Size  Location     Type
 45654 ;;  __wmul          2    4[COMRAM] unsigned int 
 45655 ;; Return value:  Size  Location     Type
 45656 ;;                  2    0[COMRAM] unsigned int 
 45657 ;; Registers used:
 45658 ;;		wreg, status,2, status,0, prodl, prodh
 45659 ;; Tracked objects:
 45660 ;;		On entry : 0/0
 45661 ;;		On exit  : 0/0
 45662 ;;		Unchanged: 0/0
 45663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45668 ;;Total ram usage:        6 bytes
 45669 ;; Hardware stack levels used:    1
 45670 ;; This function calls:
 45671 ;;		Nothing
 45672 ;; This function is called by:
 45673 ;;		i2__doprnt
 45674 ;; This function uses a non-reentrant model
 45675 ;;
 45676                           
 45677                           	psect	text192
 45678  01C37E                     __ptext192:
 45679                           	opt callstack 0
 45680  01C37E                     i2___wmul:
 45681                           	opt callstack 13
 45682                           
 45683                           ;incstack = 0
 45684  01C37E  5001               	movf	i2___wmul@multiplier,w,c
 45685  01C380  0203               	mulwf	i2___wmul@multiplicand,c
 45686  01C382  CFF3 F005          	movff	prodl,i2___wmul@product
 45687  01C386  CFF4 F006          	movff	prodh,i2___wmul@product+1
 45688  01C38A  5001               	movf	i2___wmul@multiplier,w,c
 45689  01C38C  0204               	mulwf	i2___wmul@multiplicand+1,c
 45690  01C38E  50F3               	movf	prodl,w,c
 45691  01C390  2606               	addwf	i2___wmul@product+1,f,c
 45692  01C392  5002               	movf	i2___wmul@multiplier+1,w,c
 45693  01C394  0203               	mulwf	i2___wmul@multiplicand,c
 45694  01C396  50F3               	movf	prodl,w,c
 45695  01C398  2606               	addwf	i2___wmul@product+1,f,c
 45696  01C39A  C005  F001         	movff	i2___wmul@product,?i2___wmul
 45697  01C39E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 45698  01C3A2  0012               	return		;funcret
 45699  01C3A4                     __end_ofi2___wmul:
 45700                           	opt callstack 0
 45701                           
 45702 ;; *************** function i2___llmod *****************
 45703 ;; Defined at:
 45704 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 45705 ;; Parameters:    Size  Location     Type
 45706 ;;  dividend        4   13[COMRAM] unsigned long 
 45707 ;;  divisor         4   17[COMRAM] unsigned long 
 45708 ;; Auto vars:     Size  Location     Type
 45709 ;;  __llmod         1   21[COMRAM] unsigned char 
 45710 ;; Return value:  Size  Location     Type
 45711 ;;                  4   13[COMRAM] unsigned long 
 45712 ;; Registers used:
 45713 ;;		wreg, status,2, status,0
 45714 ;; Tracked objects:
 45715 ;;		On entry : 0/0
 45716 ;;		On exit  : 0/0
 45717 ;;		Unchanged: 0/0
 45718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45722 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45723 ;;Total ram usage:        9 bytes
 45724 ;; Hardware stack levels used:    1
 45725 ;; This function calls:
 45726 ;;		Nothing
 45727 ;; This function is called by:
 45728 ;;		_heartbeatTimerHandler
 45729 ;;		i2__doprnt
 45730 ;; This function uses a non-reentrant model
 45731 ;;
 45732                           
 45733                           	psect	text193
 45734  01B468                     __ptext193:
 45735                           	opt callstack 0
 45736  01B468                     i2___llmod:
 45737                           	opt callstack 14
 45738                           
 45739                           ;incstack = 0
 45740  01B468  5012               	movf	i2___llmod@divisor,w,c
 45741  01B46A  1013               	iorwf	i2___llmod@divisor+1,w,c
 45742  01B46C  1014               	iorwf	i2___llmod@divisor+2,w,c
 45743  01B46E  1015               	iorwf	i2___llmod@divisor+3,w,c
 45744  01B470  B4D8               	btfsc	status,2,c
 45745  01B472  D024               	goto	i2l3126
 45746  01B474  0E01               	movlw	1
 45747  01B476  6E16               	movwf	i2___llmod@counter,c
 45748  01B478  D006               	goto	i2l19853
 45749  01B47A                     i2l19851:
 45750  01B47A  90D8               	bcf	status,0,c
 45751  01B47C  3612               	rlcf	i2___llmod@divisor,f,c
 45752  01B47E  3613               	rlcf	i2___llmod@divisor+1,f,c
 45753  01B480  3614               	rlcf	i2___llmod@divisor+2,f,c
 45754  01B482  3615               	rlcf	i2___llmod@divisor+3,f,c
 45755  01B484  2A16               	incf	i2___llmod@counter,f,c
 45756  01B486                     i2l19853:
 45757  01B486  AE15               	btfss	i2___llmod@divisor+3,7,c
 45758  01B488  D7F8               	goto	i2l19851
 45759  01B48A                     i2u2521_40:
 45760  01B48A  5012               	movf	i2___llmod@divisor,w,c
 45761  01B48C  5C0E               	subwf	i2___llmod@dividend,w,c
 45762  01B48E  5013               	movf	i2___llmod@divisor+1,w,c
 45763  01B490  580F               	subwfb	i2___llmod@dividend+1,w,c
 45764  01B492  5014               	movf	i2___llmod@divisor+2,w,c
 45765  01B494  5810               	subwfb	i2___llmod@dividend+2,w,c
 45766  01B496  5015               	movf	i2___llmod@divisor+3,w,c
 45767  01B498  5811               	subwfb	i2___llmod@dividend+3,w,c
 45768  01B49A  A0D8               	btfss	status,0,c
 45769  01B49C  D008               	goto	i2l19859
 45770  01B49E  5012               	movf	i2___llmod@divisor,w,c
 45771  01B4A0  5E0E               	subwf	i2___llmod@dividend,f,c
 45772  01B4A2  5013               	movf	i2___llmod@divisor+1,w,c
 45773  01B4A4  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 45774  01B4A6  5014               	movf	i2___llmod@divisor+2,w,c
 45775  01B4A8  5A10               	subwfb	i2___llmod@dividend+2,f,c
 45776  01B4AA  5015               	movf	i2___llmod@divisor+3,w,c
 45777  01B4AC  5A11               	subwfb	i2___llmod@dividend+3,f,c
 45778  01B4AE                     i2l19859:
 45779  01B4AE  90D8               	bcf	status,0,c
 45780  01B4B0  3215               	rrcf	i2___llmod@divisor+3,f,c
 45781  01B4B2  3214               	rrcf	i2___llmod@divisor+2,f,c
 45782  01B4B4  3213               	rrcf	i2___llmod@divisor+1,f,c
 45783  01B4B6  3212               	rrcf	i2___llmod@divisor,f,c
 45784  01B4B8  2E16               	decfsz	i2___llmod@counter,f,c
 45785  01B4BA  D7E7               	goto	i2u2521_40
 45786  01B4BC                     i2l3126:
 45787  01B4BC  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 45788  01B4C0  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 45789  01B4C4  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 45790  01B4C8  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 45791  01B4CC  0012               	return		;funcret
 45792  01B4CE                     __end_ofi2___llmod:
 45793                           	opt callstack 0
 45794                           
 45795 ;; *************** function i2___lldiv *****************
 45796 ;; Defined at:
 45797 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 45798 ;; Parameters:    Size  Location     Type
 45799 ;;  dividend        4    0[COMRAM] unsigned long 
 45800 ;;  divisor         4    4[COMRAM] unsigned long 
 45801 ;; Auto vars:     Size  Location     Type
 45802 ;;  __lldiv         4    8[COMRAM] unsigned long 
 45803 ;;  __lldiv         1   12[COMRAM] unsigned char 
 45804 ;; Return value:  Size  Location     Type
 45805 ;;                  4    0[COMRAM] unsigned long 
 45806 ;; Registers used:
 45807 ;;		wreg, status,2, status,0
 45808 ;; Tracked objects:
 45809 ;;		On entry : 0/0
 45810 ;;		On exit  : 0/0
 45811 ;;		Unchanged: 0/0
 45812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45813 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45814 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45816 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45817 ;;Total ram usage:       13 bytes
 45818 ;; Hardware stack levels used:    1
 45819 ;; This function calls:
 45820 ;;		Nothing
 45821 ;; This function is called by:
 45822 ;;		i2__doprnt
 45823 ;; This function uses a non-reentrant model
 45824 ;;
 45825                           
 45826                           	psect	text194
 45827  01B15E                     __ptext194:
 45828                           	opt callstack 0
 45829  01B15E                     i2___lldiv:
 45830                           	opt callstack 13
 45831                           
 45832                           ;incstack = 0
 45833  01B15E  0E00               	movlw	0
 45834  01B160  6E09               	movwf	i2___lldiv@quotient,c
 45835  01B162  0E00               	movlw	0
 45836  01B164  6E0A               	movwf	i2___lldiv@quotient+1,c
 45837  01B166  0E00               	movlw	0
 45838  01B168  6E0B               	movwf	i2___lldiv@quotient+2,c
 45839  01B16A  0E00               	movlw	0
 45840  01B16C  6E0C               	movwf	i2___lldiv@quotient+3,c
 45841  01B16E  5005               	movf	i2___lldiv@divisor,w,c
 45842  01B170  1006               	iorwf	i2___lldiv@divisor+1,w,c
 45843  01B172  1007               	iorwf	i2___lldiv@divisor+2,w,c
 45844  01B174  1008               	iorwf	i2___lldiv@divisor+3,w,c
 45845  01B176  B4D8               	btfsc	status,2,c
 45846  01B178  D02A               	goto	i2l2711
 45847  01B17A  0E01               	movlw	1
 45848  01B17C  6E0D               	movwf	i2___lldiv@counter,c
 45849  01B17E  D006               	goto	i2l19627
 45850  01B180                     i2l19625:
 45851  01B180  90D8               	bcf	status,0,c
 45852  01B182  3605               	rlcf	i2___lldiv@divisor,f,c
 45853  01B184  3606               	rlcf	i2___lldiv@divisor+1,f,c
 45854  01B186  3607               	rlcf	i2___lldiv@divisor+2,f,c
 45855  01B188  3608               	rlcf	i2___lldiv@divisor+3,f,c
 45856  01B18A  2A0D               	incf	i2___lldiv@counter,f,c
 45857  01B18C                     i2l19627:
 45858  01B18C  AE08               	btfss	i2___lldiv@divisor+3,7,c
 45859  01B18E  D7F8               	goto	i2l19625
 45860  01B190                     i2u2486_40:
 45861  01B190  90D8               	bcf	status,0,c
 45862  01B192  3609               	rlcf	i2___lldiv@quotient,f,c
 45863  01B194  360A               	rlcf	i2___lldiv@quotient+1,f,c
 45864  01B196  360B               	rlcf	i2___lldiv@quotient+2,f,c
 45865  01B198  360C               	rlcf	i2___lldiv@quotient+3,f,c
 45866  01B19A  5005               	movf	i2___lldiv@divisor,w,c
 45867  01B19C  5C01               	subwf	i2___lldiv@dividend,w,c
 45868  01B19E  5006               	movf	i2___lldiv@divisor+1,w,c
 45869  01B1A0  5802               	subwfb	i2___lldiv@dividend+1,w,c
 45870  01B1A2  5007               	movf	i2___lldiv@divisor+2,w,c
 45871  01B1A4  5803               	subwfb	i2___lldiv@dividend+2,w,c
 45872  01B1A6  5008               	movf	i2___lldiv@divisor+3,w,c
 45873  01B1A8  5804               	subwfb	i2___lldiv@dividend+3,w,c
 45874  01B1AA  A0D8               	btfss	status,0,c
 45875  01B1AC  D009               	goto	i2l19637
 45876  01B1AE  5005               	movf	i2___lldiv@divisor,w,c
 45877  01B1B0  5E01               	subwf	i2___lldiv@dividend,f,c
 45878  01B1B2  5006               	movf	i2___lldiv@divisor+1,w,c
 45879  01B1B4  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 45880  01B1B6  5007               	movf	i2___lldiv@divisor+2,w,c
 45881  01B1B8  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 45882  01B1BA  5008               	movf	i2___lldiv@divisor+3,w,c
 45883  01B1BC  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 45884  01B1BE  8009               	bsf	i2___lldiv@quotient,0,c
 45885  01B1C0                     i2l19637:
 45886  01B1C0  90D8               	bcf	status,0,c
 45887  01B1C2  3208               	rrcf	i2___lldiv@divisor+3,f,c
 45888  01B1C4  3207               	rrcf	i2___lldiv@divisor+2,f,c
 45889  01B1C6  3206               	rrcf	i2___lldiv@divisor+1,f,c
 45890  01B1C8  3205               	rrcf	i2___lldiv@divisor,f,c
 45891  01B1CA  2E0D               	decfsz	i2___lldiv@counter,f,c
 45892  01B1CC  D7E1               	goto	i2u2486_40
 45893  01B1CE                     i2l2711:
 45894  01B1CE  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 45895  01B1D2  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 45896  01B1D6  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 45897  01B1DA  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 45898  01B1DE  0012               	return		;funcret
 45899  01B1E0                     __end_ofi2___lldiv:
 45900                           	opt callstack 0
 45901                           
 45902 ;; *************** function i2___fltol *****************
 45903 ;; Defined at:
 45904 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 45905 ;; Parameters:    Size  Location     Type
 45906 ;;  f1              4   77[COMRAM] unsigned long 
 45907 ;; Auto vars:     Size  Location     Type
 45908 ;;  __fltol         1   86[COMRAM] unsigned char 
 45909 ;;  __fltol         1   85[COMRAM] unsigned char 
 45910 ;; Return value:  Size  Location     Type
 45911 ;;                  4   77[COMRAM] long 
 45912 ;; Registers used:
 45913 ;;		wreg, status,2, status,0
 45914 ;; Tracked objects:
 45915 ;;		On entry : 0/0
 45916 ;;		On exit  : 0/0
 45917 ;;		Unchanged: 0/0
 45918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45922 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45923 ;;Total ram usage:       10 bytes
 45924 ;; Hardware stack levels used:    1
 45925 ;; This function calls:
 45926 ;;		Nothing
 45927 ;; This function is called by:
 45928 ;;		i2__doprnt
 45929 ;; This function uses a non-reentrant model
 45930 ;;
 45931                           
 45932                           	psect	text195
 45933  01A8F6                     __ptext195:
 45934                           	opt callstack 0
 45935  01A8F6                     i2___fltol:
 45936                           	opt callstack 13
 45937                           
 45938                           ;incstack = 0
 45939  01A8F6  3450               	rlcf	i2___fltol@f1+2,w,c
 45940  01A8F8  3451               	rlcf	i2___fltol@f1+3,w,c
 45941  01A8FA  6E57               	movwf	i2___fltol@exp1,c
 45942  01A8FC  5057               	movf	i2___fltol@exp1,w,c
 45943  01A8FE  A4D8               	btfss	status,2,c
 45944  01A900  D009               	goto	i2l19753
 45945  01A902                     i2u2504_40:
 45946  01A902  0E00               	movlw	0
 45947  01A904  6E4E               	movwf	?i2___fltol,c
 45948  01A906  0E00               	movlw	0
 45949  01A908  6E4F               	movwf	?i2___fltol+1,c
 45950  01A90A  0E00               	movlw	0
 45951  01A90C  6E50               	movwf	?i2___fltol+2,c
 45952  01A90E  0E00               	movlw	0
 45953  01A910  6E51               	movwf	?i2___fltol+3,c
 45954  01A912  0012               	return	
 45955  01A914                     i2l19753:
 45956  01A914  C04E  F052         	movff	i2___fltol@f1,??i2___fltol
 45957  01A918  C04F  F053         	movff	i2___fltol@f1+1,??i2___fltol+1
 45958  01A91C  C050  F054         	movff	i2___fltol@f1+2,??i2___fltol+2
 45959  01A920  C051  F055         	movff	i2___fltol@f1+3,??i2___fltol+3
 45960  01A924  0E20               	movlw	32
 45961  01A926  D005               	goto	i2u2505_40
 45962  01A928                     i2u2505_45:
 45963  01A928  90D8               	bcf	status,0,c
 45964  01A92A  3255               	rrcf	??i2___fltol+3,f,c
 45965  01A92C  3254               	rrcf	??i2___fltol+2,f,c
 45966  01A92E  3253               	rrcf	??i2___fltol+1,f,c
 45967  01A930  3252               	rrcf	??i2___fltol,f,c
 45968  01A932                     i2u2505_40:
 45969  01A932  2EE8               	decfsz	wreg,f,c
 45970  01A934  D7F9               	goto	i2u2505_45
 45971  01A936  5052               	movf	??i2___fltol,w,c
 45972  01A938  6E56               	movwf	i2___fltol@sign1,c
 45973  01A93A  8E50               	bsf	i2___fltol@f1+2,7,c
 45974  01A93C  0EFF               	movlw	255
 45975  01A93E  164E               	andwf	i2___fltol@f1,f,c
 45976  01A940  0EFF               	movlw	255
 45977  01A942  164F               	andwf	i2___fltol@f1+1,f,c
 45978  01A944  0EFF               	movlw	255
 45979  01A946  1650               	andwf	i2___fltol@f1+2,f,c
 45980  01A948  0E00               	movlw	0
 45981  01A94A  1651               	andwf	i2___fltol@f1+3,f,c
 45982  01A94C  0E96               	movlw	150
 45983  01A94E  5E57               	subwf	i2___fltol@exp1,f,c
 45984  01A950  AE57               	btfss	i2___fltol@exp1,7,c
 45985  01A952  D00D               	goto	i2l19773
 45986  01A954  5057               	movf	i2___fltol@exp1,w,c
 45987  01A956  0A80               	xorlw	128
 45988  01A958  0F97               	addlw	151
 45989  01A95A  A0D8               	btfss	status,0,c
 45990  01A95C  D7D2               	goto	i2u2504_40
 45991  01A95E                     i2l19769:
 45992  01A95E  90D8               	bcf	status,0,c
 45993  01A960  3251               	rrcf	i2___fltol@f1+3,f,c
 45994  01A962  3250               	rrcf	i2___fltol@f1+2,f,c
 45995  01A964  324F               	rrcf	i2___fltol@f1+1,f,c
 45996  01A966  324E               	rrcf	i2___fltol@f1,f,c
 45997  01A968  3E57               	incfsz	i2___fltol@exp1,f,c
 45998  01A96A  D7F9               	goto	i2l19769
 45999  01A96C  D00D               	goto	i2u2509_40
 46000  01A96E                     i2l19773:
 46001  01A96E  0E1F               	movlw	31
 46002  01A970  6457               	cpfsgt	i2___fltol@exp1,c
 46003  01A972  D007               	goto	i2l19781
 46004  01A974  D7C6               	goto	i2u2504_40
 46005  01A976                     i2l19779:
 46006  01A976  90D8               	bcf	status,0,c
 46007  01A978  364E               	rlcf	i2___fltol@f1,f,c
 46008  01A97A  364F               	rlcf	i2___fltol@f1+1,f,c
 46009  01A97C  3650               	rlcf	i2___fltol@f1+2,f,c
 46010  01A97E  3651               	rlcf	i2___fltol@f1+3,f,c
 46011  01A980  0657               	decf	i2___fltol@exp1,f,c
 46012  01A982                     i2l19781:
 46013  01A982  5057               	movf	i2___fltol@exp1,w,c
 46014  01A984  A4D8               	btfss	status,2,c
 46015  01A986  D7F7               	goto	i2l19779
 46016  01A988                     i2u2509_40:
 46017  01A988  5056               	movf	i2___fltol@sign1,w,c
 46018  01A98A  B4D8               	btfsc	status,2,c
 46019  01A98C  D008               	goto	i2l19787
 46020  01A98E  1E51               	comf	i2___fltol@f1+3,f,c
 46021  01A990  1E50               	comf	i2___fltol@f1+2,f,c
 46022  01A992  1E4F               	comf	i2___fltol@f1+1,f,c
 46023  01A994  6C4E               	negf	i2___fltol@f1,c
 46024  01A996  0E00               	movlw	0
 46025  01A998  224F               	addwfc	i2___fltol@f1+1,f,c
 46026  01A99A  2250               	addwfc	i2___fltol@f1+2,f,c
 46027  01A99C  2251               	addwfc	i2___fltol@f1+3,f,c
 46028  01A99E                     i2l19787:
 46029  01A99E  C04E  F04E         	movff	i2___fltol@f1,?i2___fltol
 46030  01A9A2  C04F  F04F         	movff	i2___fltol@f1+1,?i2___fltol+1
 46031  01A9A6  C050  F050         	movff	i2___fltol@f1+2,?i2___fltol+2
 46032  01A9AA  C051  F051         	movff	i2___fltol@f1+3,?i2___fltol+3
 46033  01A9AE  0012               	return		;funcret
 46034  01A9B0                     __end_ofi2___fltol:
 46035                           	opt callstack 0
 46036                           
 46037 ;; *************** function i2___fleq *****************
 46038 ;; Defined at:
 46039 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 46040 ;; Parameters:    Size  Location     Type
 46041 ;;  ff1             4    0[COMRAM] long 
 46042 ;;  ff2             4    4[COMRAM] long 
 46043 ;; Auto vars:     Size  Location     Type
 46044 ;;		None
 46045 ;; Return value:  Size  Location     Type
 46046 ;;		None               void
 46047 ;; Registers used:
 46048 ;;		wreg, status,2, status,0
 46049 ;; Tracked objects:
 46050 ;;		On entry : 0/0
 46051 ;;		On exit  : 0/0
 46052 ;;		Unchanged: 0/0
 46053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46054 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46057 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46058 ;;Total ram usage:       12 bytes
 46059 ;; Hardware stack levels used:    1
 46060 ;; This function calls:
 46061 ;;		Nothing
 46062 ;; This function is called by:
 46063 ;;		i2__doprnt
 46064 ;; This function uses a non-reentrant model
 46065 ;;
 46066                           
 46067                           	psect	text196
 46068  01AF46                     __ptext196:
 46069                           	opt callstack 0
 46070  01AF46                     i2___fleq:
 46071                           	opt callstack 13
 46072                           
 46073                           ;incstack = 0
 46074  01AF46  0E00               	movlw	0
 46075  01AF48  1401               	andwf	i2___fleq@ff1,w,c
 46076  01AF4A  6E09               	movwf	??i2___fleq& (0+255),c
 46077  01AF4C  0E00               	movlw	0
 46078  01AF4E  1402               	andwf	i2___fleq@ff1+1,w,c
 46079  01AF50  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 46080  01AF52  0E80               	movlw	128
 46081  01AF54  1403               	andwf	i2___fleq@ff1+2,w,c
 46082  01AF56  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 46083  01AF58  0E7F               	movlw	127
 46084  01AF5A  1404               	andwf	i2___fleq@ff1+3,w,c
 46085  01AF5C  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 46086  01AF5E  5009               	movf	??i2___fleq,w,c
 46087  01AF60  100A               	iorwf	??i2___fleq+1,w,c
 46088  01AF62  100B               	iorwf	??i2___fleq+2,w,c
 46089  01AF64  100C               	iorwf	??i2___fleq+3,w,c
 46090  01AF66  A4D8               	btfss	status,2,c
 46091  01AF68  D008               	goto	i2l19705
 46092  01AF6A  0E00               	movlw	0
 46093  01AF6C  6E01               	movwf	i2___fleq@ff1,c
 46094  01AF6E  0E00               	movlw	0
 46095  01AF70  6E02               	movwf	i2___fleq@ff1+1,c
 46096  01AF72  0E00               	movlw	0
 46097  01AF74  6E03               	movwf	i2___fleq@ff1+2,c
 46098  01AF76  0E00               	movlw	0
 46099  01AF78  6E04               	movwf	i2___fleq@ff1+3,c
 46100  01AF7A                     i2l19705:
 46101  01AF7A  0E00               	movlw	0
 46102  01AF7C  1405               	andwf	i2___fleq@ff2,w,c
 46103  01AF7E  6E09               	movwf	??i2___fleq& (0+255),c
 46104  01AF80  0E00               	movlw	0
 46105  01AF82  1406               	andwf	i2___fleq@ff2+1,w,c
 46106  01AF84  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 46107  01AF86  0E80               	movlw	128
 46108  01AF88  1407               	andwf	i2___fleq@ff2+2,w,c
 46109  01AF8A  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 46110  01AF8C  0E7F               	movlw	127
 46111  01AF8E  1408               	andwf	i2___fleq@ff2+3,w,c
 46112  01AF90  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 46113  01AF92  5009               	movf	??i2___fleq,w,c
 46114  01AF94  100A               	iorwf	??i2___fleq+1,w,c
 46115  01AF96  100B               	iorwf	??i2___fleq+2,w,c
 46116  01AF98  100C               	iorwf	??i2___fleq+3,w,c
 46117  01AF9A  A4D8               	btfss	status,2,c
 46118  01AF9C  D008               	goto	i2l19709
 46119  01AF9E  0E00               	movlw	0
 46120  01AFA0  6E05               	movwf	i2___fleq@ff2,c
 46121  01AFA2  0E00               	movlw	0
 46122  01AFA4  6E06               	movwf	i2___fleq@ff2+1,c
 46123  01AFA6  0E00               	movlw	0
 46124  01AFA8  6E07               	movwf	i2___fleq@ff2+2,c
 46125  01AFAA  0E00               	movlw	0
 46126  01AFAC  6E08               	movwf	i2___fleq@ff2+3,c
 46127  01AFAE                     i2l19709:
 46128  01AFAE  5005               	movf	i2___fleq@ff2,w,c
 46129  01AFB0  1801               	xorwf	i2___fleq@ff1,w,c
 46130  01AFB2  E10A               	bnz	i2u2497_40
 46131  01AFB4  5006               	movf	i2___fleq@ff2+1,w,c
 46132  01AFB6  1802               	xorwf	i2___fleq@ff1+1,w,c
 46133  01AFB8  E107               	bnz	i2u2497_40
 46134  01AFBA  5007               	movf	i2___fleq@ff2+2,w,c
 46135  01AFBC  1803               	xorwf	i2___fleq@ff1+2,w,c
 46136  01AFBE  E104               	bnz	i2u2497_40
 46137  01AFC0  5008               	movf	i2___fleq@ff2+3,w,c
 46138  01AFC2  1804               	xorwf	i2___fleq@ff1+3,w,c
 46139  01AFC4  B4D8               	btfsc	status,2,c
 46140  01AFC6  D002               	goto	i2l19713
 46141  01AFC8                     i2u2497_40:
 46142  01AFC8  90D8               	bcf	status,0,c
 46143  01AFCA  0012               	return	
 46144  01AFCC                     i2l19713:
 46145  01AFCC  80D8               	bsf	status,0,c
 46146  01AFCE  0012               	return		;funcret
 46147  01AFD0                     __end_ofi2___fleq:
 46148                           	opt callstack 0
 46149                           
 46150 ;; *************** function _ADCC_ThresholdISR *****************
 46151 ;; Defined at:
 46152 ;;		line 298 in file "mcc_generated_files/adcc.c"
 46153 ;; Parameters:    Size  Location     Type
 46154 ;;		None
 46155 ;; Auto vars:     Size  Location     Type
 46156 ;;		None
 46157 ;; Return value:  Size  Location     Type
 46158 ;;                  1    wreg      void 
 46159 ;; Registers used:
 46160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46161 ;; Tracked objects:
 46162 ;;		On entry : 0/0
 46163 ;;		On exit  : 0/0
 46164 ;;		Unchanged: 0/0
 46165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46170 ;;Total ram usage:        0 bytes
 46171 ;; Hardware stack levels used:    1
 46172 ;; Hardware stack levels required when called:    3
 46173 ;; This function calls:
 46174 ;;		Absolute function
 46175 ;;		_ADCC_DefaultInterruptHandler
 46176 ;;		_ADC_PostProcessingHandler
 46177 ;; This function is called by:
 46178 ;;		_INTERRUPT_InterruptManagerHigh
 46179 ;; This function uses a non-reentrant model
 46180 ;;
 46181                           
 46182                           	psect	text197
 46183  01C330                     __ptext197:
 46184                           	opt callstack 0
 46185  01C330                     _ADCC_ThresholdISR:
 46186                           	opt callstack 13
 46187                           
 46188                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 46189                           
 46190                           ;incstack = 0
 46191  01C330  010E               	movlb	14	; () banked
 46192  01C332  93CB               	bcf	203,1,b	;volatile
 46193                           
 46194                           ; BSR set to: 14
 46195                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 46196  01C334  0100               	movlb	0	; () banked
 46197  01C336  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 46198  01C338  11CD               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 46199  01C33A  11CE               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 46200  01C33C  B4D8               	btfsc	status,2,c
 46201  01C33E  0012               	return	
 46202                           
 46203                           ; BSR set to: 0
 46204                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 46205  01C340  D801               	call	i2u2756_48
 46206  01C342  0012               	return	
 46207  01C344                     i2u2756_48:
 46208  01C344  0005               	push	
 46209  01C346  6EFA               	movwf	pclath,c
 46210  01C348  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 46211  01C34A  6EFD               	movwf	tosl,c
 46212  01C34C  51CD               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 46213  01C34E  6EFE               	movwf	tosh,c
 46214  01C350  51CE               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 46215  01C352  6EFF               	movwf	tosu,c
 46216  01C354  50FA               	movf	pclath,w,c
 46217  01C356  0012               	return		;indir
 46218  01C358                     __end_of_ADCC_ThresholdISR:
 46219                           	opt callstack 0
 46220                           
 46221 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 46222 ;; Defined at:
 46223 ;;		line 310 in file "mcc_generated_files/adcc.c"
 46224 ;; Parameters:    Size  Location     Type
 46225 ;;		None
 46226 ;; Auto vars:     Size  Location     Type
 46227 ;;		None
 46228 ;; Return value:  Size  Location     Type
 46229 ;;                  1    wreg      void 
 46230 ;; Registers used:
 46231 ;;		None
 46232 ;; Tracked objects:
 46233 ;;		On entry : 0/0
 46234 ;;		On exit  : 0/0
 46235 ;;		Unchanged: 0/0
 46236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46241 ;;Total ram usage:        0 bytes
 46242 ;; Hardware stack levels used:    1
 46243 ;; This function calls:
 46244 ;;		Nothing
 46245 ;; This function is called by:
 46246 ;;		_ADCC_Initialize
 46247 ;;		_ADCC_ThresholdISR
 46248 ;; This function uses a non-reentrant model
 46249 ;;
 46250                           
 46251                           	psect	text198
 46252  01C908                     __ptext198:
 46253                           	opt callstack 0
 46254  01C908                     _ADCC_DefaultInterruptHandler:
 46255                           	opt callstack 15
 46256                           
 46257                           ;incstack = 0
 46258  01C908  0012               	return		;funcret
 46259  01C90A                     __end_of_ADCC_DefaultInterruptHandler:
 46260                           	opt callstack 0
 46261                           
 46262 ;; *************** function _ADC_PostProcessingHandler *****************
 46263 ;; Defined at:
 46264 ;;		line 13 in file "adc_postprocessing.c"
 46265 ;; Parameters:    Size  Location     Type
 46266 ;;		None
 46267 ;; Auto vars:     Size  Location     Type
 46268 ;;  i               1   26[BANK0 ] unsigned char 
 46269 ;;  i               1   25[BANK0 ] unsigned char 
 46270 ;;  current_adc_    1   24[BANK0 ] enum E9492
 46271 ;; Return value:  Size  Location     Type
 46272 ;;                  1    wreg      void 
 46273 ;; Registers used:
 46274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46275 ;; Tracked objects:
 46276 ;;		On entry : 0/0
 46277 ;;		On exit  : 0/0
 46278 ;;		Unchanged: 0/0
 46279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46281 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46283 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46284 ;;Total ram usage:       23 bytes
 46285 ;; Hardware stack levels used:    1
 46286 ;; Hardware stack levels required when called:    2
 46287 ;; This function calls:
 46288 ;;		_ADCC_GetConversionResult
 46289 ;;		_ADCC_GetCurrentCountofConversions
 46290 ;;		_ADCC_GetFilterValue
 46291 ;;		_ADCC_HasAccumulatorOverflowed
 46292 ;;		_ADCC_StopConversion
 46293 ;;		_TMR2_StartTimer
 46294 ;;		_fabs
 46295 ;;		i2___fladd
 46296 ;;		i2___fldiv
 46297 ;;		i2___flge
 46298 ;;		i2___flmul
 46299 ;;		i2___flsub
 46300 ;;		i2___xxtofl
 46301 ;; This function is called by:
 46302 ;;		_main
 46303 ;;		_ADCC_ThresholdISR
 46304 ;; This function uses a non-reentrant model
 46305 ;;
 46306                           
 46307                           	psect	text199
 46308  014082                     __ptext199:
 46309                           	opt callstack 0
 46310  014082                     _ADC_PostProcessingHandler:
 46311                           	opt callstack 13
 46312                           
 46313                           ;adc_postprocessing.c: 16: ADCC_StopConversion();
 46314                           
 46315                           ;incstack = 0
 46316  014082  EC77  F0E4         	call	_ADCC_StopConversion	;wreg free
 46317                           
 46318                           ;adc_postprocessing.c: 19: adcc_channel_t current_adc_channel = ADPCH;
 46319  014086  CF5F F078          	movff	3935,ADC_PostProcessingHandler@current_adc_channel	;volatile
 46320                           
 46321                           ;adc_postprocessing.c: 22: switch (current_adc_channel) {
 46322  01408A  EF52  F0A4         	goto	i2l21159
 46323  01408E                     i2l21075:
 46324                           
 46325                           ; BSR set to: 0
 46326                           ;adc_postprocessing.c: 26: adc_results.avss_adc_result = (ADCC_GetConversionResult()) * 
      +                          (5.0/1023.0);
 46327  01408E  EC71  F0E3         	call	_ADCC_GetConversionResult	;wreg free
 46328  014092  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46329  014096  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46330  01409A  6A07               	clrf	i2___xxtofl@val+2,c
 46331  01409C  6A08               	clrf	i2___xxtofl@val+3,c
 46332  01409E  0E00               	movlw	0
 46333  0140A0  ECFA  F0CD         	call	i2___xxtofl
 46334  0140A4  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46335  0140A8  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46336  0140AC  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46337  0140B0  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46338  0140B4  0E0A               	movlw	10
 46339  0140B6  6E30               	movwf	i2___flmul@a,c
 46340  0140B8  0E28               	movlw	40
 46341  0140BA  6E31               	movwf	i2___flmul@a+1,c
 46342  0140BC  0EA0               	movlw	160
 46343  0140BE  6E32               	movwf	i2___flmul@a+2,c
 46344  0140C0  0E3B               	movlw	59
 46345  0140C2  6E33               	movwf	i2___flmul@a+3,c
 46346  0140C4  ECCE  F0B6         	call	i2___flmul	;wreg free
 46347  0140C8  C02C  F0DD         	movff	?i2___flmul,_adc_results
 46348  0140CC  C02D  F0DE         	movff	?i2___flmul+1,_adc_results+1
 46349  0140D0  C02E  F0DF         	movff	?i2___flmul+2,_adc_results+2
 46350  0140D4  C02F  F0E0         	movff	?i2___flmul+3,_adc_results+3
 46351                           
 46352                           ;adc_postprocessing.c: 28: next_adc_channel = channel_FVR_buf1;
 46353  0140D8  0E3F               	movlw	63
 46354  0140DA  D3DE               	goto	L50
 46355  0140DC                     i2l21079:
 46356                           
 46357                           ; BSR set to: 0
 46358                           ;adc_postprocessing.c: 35: adc_results.fvr_adc_result = (ADCC_GetConversionResult()) * (
      +                          5.0/1023.0) + adc_results.avss_adc_result;
 46359  0140DC  0E0A               	movlw	10
 46360  0140DE  6E30               	movwf	i2___flmul@a,c
 46361  0140E0  0E28               	movlw	40
 46362  0140E2  6E31               	movwf	i2___flmul@a+1,c
 46363  0140E4  0EA0               	movlw	160
 46364  0140E6  6E32               	movwf	i2___flmul@a+2,c
 46365  0140E8  0E3B               	movlw	59
 46366  0140EA  6E33               	movwf	i2___flmul@a+3,c
 46367  0140EC  EC71  F0E3         	call	_ADCC_GetConversionResult	;wreg free
 46368  0140F0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46369  0140F4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46370  0140F8  6A07               	clrf	i2___xxtofl@val+2,c
 46371  0140FA  6A08               	clrf	i2___xxtofl@val+3,c
 46372  0140FC  0E00               	movlw	0
 46373  0140FE  ECFA  F0CD         	call	i2___xxtofl
 46374  014102  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46375  014106  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46376  01410A  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46377  01410E  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46378  014112  ECCE  F0B6         	call	i2___flmul	;wreg free
 46379  014116  C02C  F052         	movff	?i2___flmul,i2___fladd@b
 46380  01411A  C02D  F053         	movff	?i2___flmul+1,i2___fladd@b+1
 46381  01411E  C02E  F054         	movff	?i2___flmul+2,i2___fladd@b+2
 46382  014122  C02F  F055         	movff	?i2___flmul+3,i2___fladd@b+3
 46383  014126  C0DD  F056         	movff	_adc_results,i2___fladd@a
 46384  01412A  C0DE  F057         	movff	_adc_results+1,i2___fladd@a+1
 46385  01412E  C0DF  F058         	movff	_adc_results+2,i2___fladd@a+2
 46386  014132  C0E0  F059         	movff	_adc_results+3,i2___fladd@a+3
 46387  014136  EC85  F0BB         	call	i2___fladd	;wreg free
 46388  01413A  C052  F0E1         	movff	?i2___fladd,_adc_results+4
 46389  01413E  C053  F0E2         	movff	?i2___fladd+1,_adc_results+5
 46390  014142  C054  F0E3         	movff	?i2___fladd+2,_adc_results+6
 46391  014146  C055  F0E4         	movff	?i2___fladd+3,_adc_results+7
 46392                           
 46393                           ;adc_postprocessing.c: 36: adc_result_scaling = 4.096/adc_results.fvr_adc_result;
 46394  01414A  0E6F               	movlw	111
 46395  01414C  6E13               	movwf	i2___fldiv@b,c
 46396  01414E  0E12               	movlw	18
 46397  014150  6E14               	movwf	i2___fldiv@b+1,c
 46398  014152  0E83               	movlw	131
 46399  014154  6E15               	movwf	i2___fldiv@b+2,c
 46400  014156  0E40               	movlw	64
 46401  014158  6E16               	movwf	i2___fldiv@b+3,c
 46402  01415A  C0E1  F017         	movff	_adc_results+4,i2___fldiv@a
 46403  01415E  C0E2  F018         	movff	_adc_results+5,i2___fldiv@a+1
 46404  014162  C0E3  F019         	movff	_adc_results+6,i2___fldiv@a+2
 46405  014166  C0E4  F01A         	movff	_adc_results+7,i2___fldiv@a+3
 46406  01416A  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46407  01416E  C013  F0C1         	movff	?i2___fldiv,_adc_result_scaling
 46408  014172  C014  F0C2         	movff	?i2___fldiv+1,_adc_result_scaling+1
 46409  014176  C015  F0C3         	movff	?i2___fldiv+2,_adc_result_scaling+2
 46410  01417A  C016  F0C4         	movff	?i2___fldiv+3,_adc_result_scaling+3
 46411                           
 46412                           ;adc_postprocessing.c: 38: if (adc_results.fvr_adc_result > 5.0 || adc_results.fvr_adc_r
      +                          esult < 3.9) {
 46413  01417E  0E00               	movlw	0
 46414  014180  6E01               	movwf	i2___flge@ff1,c
 46415  014182  0E00               	movlw	0
 46416  014184  6E02               	movwf	i2___flge@ff1+1,c
 46417  014186  0EA0               	movlw	160
 46418  014188  6E03               	movwf	i2___flge@ff1+2,c
 46419  01418A  0E40               	movlw	64
 46420  01418C  6E04               	movwf	i2___flge@ff1+3,c
 46421  01418E  C0E1  F005         	movff	_adc_results+4,i2___flge@ff2
 46422  014192  C0E2  F006         	movff	_adc_results+5,i2___flge@ff2+1
 46423  014196  C0E3  F007         	movff	_adc_results+6,i2___flge@ff2+2
 46424  01419A  C0E4  F008         	movff	_adc_results+7,i2___flge@ff2+3
 46425  01419E  ECEE  F0D2         	call	i2___flge	;wreg free
 46426  0141A2  A0D8               	btfss	status,0,c
 46427  0141A4  D014               	goto	i2u2709_40
 46428  0141A6  C0E1  F001         	movff	_adc_results+4,i2___flge@ff1
 46429  0141AA  C0E2  F002         	movff	_adc_results+5,i2___flge@ff1+1
 46430  0141AE  C0E3  F003         	movff	_adc_results+6,i2___flge@ff1+2
 46431  0141B2  C0E4  F004         	movff	_adc_results+7,i2___flge@ff1+3
 46432  0141B6  0E9A               	movlw	154
 46433  0141B8  6E05               	movwf	i2___flge@ff2,c
 46434  0141BA  0E99               	movlw	153
 46435  0141BC  6E06               	movwf	i2___flge@ff2+1,c
 46436  0141BE  0E79               	movlw	121
 46437  0141C0  6E07               	movwf	i2___flge@ff2+2,c
 46438  0141C2  0E40               	movlw	64
 46439  0141C4  6E08               	movwf	i2___flge@ff2+3,c
 46440  0141C6  ECEE  F0D2         	call	i2___flge	;wreg free
 46441  0141CA  B0D8               	btfsc	status,0,c
 46442  0141CC  D003               	goto	i2l1581
 46443  0141CE                     i2u2709_40:
 46444                           
 46445                           ;adc_postprocessing.c: 40: error_handler.FVR_ADC_error_flag = 1;
 46446  0141CE  0E01               	movlw	1
 46447  0141D0  0100               	movlb	0	; () banked
 46448  0141D2  6FB9               	movwf	_error_handler& (0+255),b
 46449  0141D4                     i2l1581:
 46450                           
 46451                           ;adc_postprocessing.c: 42: };adc_postprocessing.c: 44: next_adc_channel = POS5_ADC;
 46452  0141D4  0E04               	movlw	4
 46453  0141D6  D360               	goto	L50
 46454  0141D8                     i2l21089:
 46455                           
 46456                           ; BSR set to: 0
 46457                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46458  0141D8  0E0A               	movlw	10
 46459  0141DA  6E30               	movwf	i2___flmul@a,c
 46460  0141DC  0E28               	movlw	40
 46461  0141DE  6E31               	movwf	i2___flmul@a+1,c
 46462  0141E0  0EA0               	movlw	160
 46463  0141E2  6E32               	movwf	i2___flmul@a+2,c
 46464  0141E4  0E3B               	movlw	59
 46465  0141E6  6E33               	movwf	i2___flmul@a+3,c
 46466  0141E8  EC67  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46467  0141EC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46468  0141F0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46469  0141F4  6A07               	clrf	i2___xxtofl@val+2,c
 46470  0141F6  6A08               	clrf	i2___xxtofl@val+3,c
 46471  0141F8  0E00               	movlw	0
 46472  0141FA  ECFA  F0CD         	call	i2___xxtofl
 46473  0141FE  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46474  014202  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46475  014206  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46476  01420A  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46477  01420E  ECCE  F0B6         	call	i2___flmul	;wreg free
 46478  014212  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6417
 46479  014216  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6417+1
 46480  01421A  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6417+2
 46481  01421E  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6417+3
 46482                           
 46483                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46484  014222  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46485  014226  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46486  01422A  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46487  01422E  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46488  014232  0E00               	movlw	0
 46489  014234  6E30               	movwf	i2___flmul@a,c
 46490  014236  0E00               	movlw	0
 46491  014238  6E31               	movwf	i2___flmul@a+1,c
 46492  01423A  0E00               	movlw	0
 46493  01423C  6E32               	movwf	i2___flmul@a+2,c
 46494  01423E  0E40               	movlw	64
 46495  014240  6E33               	movwf	i2___flmul@a+3,c
 46496  014242  C07B  F02C         	movff	_ADC_PostProcessingHandler$6417,i2___flmul@b
 46497  014246  C07C  F02D         	movff	_ADC_PostProcessingHandler$6417+1,i2___flmul@b+1
 46498  01424A  C07D  F02E         	movff	_ADC_PostProcessingHandler$6417+2,i2___flmul@b+2
 46499  01424E  C07E  F02F         	movff	_ADC_PostProcessingHandler$6417+3,i2___flmul@b+3
 46500  014252  ECCE  F0B6         	call	i2___flmul	;wreg free
 46501  014256  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46502  01425A  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46503  01425E  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46504  014262  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46505  014266  EC80  F0DD         	call	i2___flsub	;wreg free
 46506  01426A  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6418
 46507  01426E  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6418+1
 46508  014272  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6418+2
 46509  014276  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6418+3
 46510                           
 46511                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46512  01427A  C07F  F02C         	movff	_ADC_PostProcessingHandler$6418,i2___flmul@b
 46513  01427E  C080  F02D         	movff	_ADC_PostProcessingHandler$6418+1,i2___flmul@b+1
 46514  014282  C081  F02E         	movff	_ADC_PostProcessingHandler$6418+2,i2___flmul@b+2
 46515  014286  C082  F02F         	movff	_ADC_PostProcessingHandler$6418+3,i2___flmul@b+3
 46516  01428A  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46517  01428E  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46518  014292  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46519  014296  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46520  01429A  ECCE  F0B6         	call	i2___flmul	;wreg free
 46521  01429E  C02C  F0E5         	movff	?i2___flmul,_adc_results+8
 46522  0142A2  C02D  F0E6         	movff	?i2___flmul+1,_adc_results+9
 46523  0142A6  C02E  F0E7         	movff	?i2___flmul+2,_adc_results+10
 46524  0142AA  C02F  F0E8         	movff	?i2___flmul+3,_adc_results+11
 46525                           
 46526                           ;adc_postprocessing.c: 51: next_adc_channel = POS12_ADC;
 46527  0142AE  0E00               	movlw	0
 46528  0142B0  D2F3               	goto	L50
 46529  0142B2                     i2l21093:
 46530                           
 46531                           ; BSR set to: 0
 46532                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46533  0142B2  0E00               	movlw	0
 46534  0142B4  6E17               	movwf	i2___fldiv@a,c
 46535  0142B6  0EC0               	movlw	192
 46536  0142B8  6E18               	movwf	i2___fldiv@a+1,c
 46537  0142BA  0E7F               	movlw	127
 46538  0142BC  6E19               	movwf	i2___fldiv@a+2,c
 46539  0142BE  0E44               	movlw	68
 46540  0142C0  6E1A               	movwf	i2___fldiv@a+3,c
 46541  0142C2  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46542  0142C6  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46543  0142CA  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46544  0142CE  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46545  0142D2  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46546  0142D6  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46547  0142DA  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46548  0142DE  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46549  0142E2  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46550  0142E6  EC67  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46551  0142EA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46552  0142EE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46553  0142F2  6A07               	clrf	i2___xxtofl@val+2,c
 46554  0142F4  6A08               	clrf	i2___xxtofl@val+3,c
 46555  0142F6  0E00               	movlw	0
 46556  0142F8  ECFA  F0CD         	call	i2___xxtofl
 46557  0142FC  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46558  014300  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46559  014304  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46560  014308  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46561  01430C  ECCE  F0B6         	call	i2___flmul	;wreg free
 46562  014310  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6417
 46563  014314  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6417+1
 46564  014318  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6417+2
 46565  01431C  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6417+3
 46566                           
 46567                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46568  014320  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46569  014324  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46570  014328  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46571  01432C  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46572  014330  0E6B               	movlw	107
 46573  014332  6E30               	movwf	i2___flmul@a,c
 46574  014334  0E7D               	movlw	125
 46575  014336  6E31               	movwf	i2___flmul@a+1,c
 46576  014338  0E3D               	movlw	61
 46577  01433A  6E32               	movwf	i2___flmul@a+2,c
 46578  01433C  0E40               	movlw	64
 46579  01433E  6E33               	movwf	i2___flmul@a+3,c
 46580  014340  C07B  F02C         	movff	_ADC_PostProcessingHandler$6417,i2___flmul@b
 46581  014344  C07C  F02D         	movff	_ADC_PostProcessingHandler$6417+1,i2___flmul@b+1
 46582  014348  C07D  F02E         	movff	_ADC_PostProcessingHandler$6417+2,i2___flmul@b+2
 46583  01434C  C07E  F02F         	movff	_ADC_PostProcessingHandler$6417+3,i2___flmul@b+3
 46584  014350  ECCE  F0B6         	call	i2___flmul	;wreg free
 46585  014354  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46586  014358  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46587  01435C  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46588  014360  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46589  014364  EC80  F0DD         	call	i2___flsub	;wreg free
 46590  014368  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6418
 46591  01436C  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6418+1
 46592  014370  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6418+2
 46593  014374  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6418+3
 46594                           
 46595                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46596  014378  C07F  F02C         	movff	_ADC_PostProcessingHandler$6418,i2___flmul@b
 46597  01437C  C080  F02D         	movff	_ADC_PostProcessingHandler$6418+1,i2___flmul@b+1
 46598  014380  C081  F02E         	movff	_ADC_PostProcessingHandler$6418+2,i2___flmul@b+2
 46599  014384  C082  F02F         	movff	_ADC_PostProcessingHandler$6418+3,i2___flmul@b+3
 46600  014388  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46601  01438C  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46602  014390  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46603  014394  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46604  014398  ECCE  F0B6         	call	i2___flmul	;wreg free
 46605  01439C  C02C  F0E9         	movff	?i2___flmul,_adc_results+12
 46606  0143A0  C02D  F0EA         	movff	?i2___flmul+1,_adc_results+13
 46607  0143A4  C02E  F0EB         	movff	?i2___flmul+2,_adc_results+14
 46608  0143A8  C02F  F0EC         	movff	?i2___flmul+3,_adc_results+15
 46609                           
 46610                           ;adc_postprocessing.c: 57: next_adc_channel = POS12_ISNS_ADC;
 46611  0143AC  0E01               	movlw	1
 46612  0143AE  D274               	goto	L50
 46613  0143B0                     i2l21097:
 46614                           
 46615                           ; BSR set to: 0
 46616                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46617  0143B0  0E00               	movlw	0
 46618  0143B2  6E17               	movwf	i2___fldiv@a,c
 46619  0143B4  0EC0               	movlw	192
 46620  0143B6  6E18               	movwf	i2___fldiv@a+1,c
 46621  0143B8  0E7F               	movlw	127
 46622  0143BA  6E19               	movwf	i2___fldiv@a+2,c
 46623  0143BC  0E44               	movlw	68
 46624  0143BE  6E1A               	movwf	i2___fldiv@a+3,c
 46625  0143C0  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46626  0143C4  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46627  0143C8  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46628  0143CC  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46629  0143D0  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46630  0143D4  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46631  0143D8  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46632  0143DC  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46633  0143E0  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46634  0143E4  EC67  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46635  0143E8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46636  0143EC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46637  0143F0  6A07               	clrf	i2___xxtofl@val+2,c
 46638  0143F2  6A08               	clrf	i2___xxtofl@val+3,c
 46639  0143F4  0E00               	movlw	0
 46640  0143F6  ECFA  F0CD         	call	i2___xxtofl
 46641  0143FA  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46642  0143FE  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46643  014402  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46644  014406  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46645  01440A  ECCE  F0B6         	call	i2___flmul	;wreg free
 46646  01440E  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6417
 46647  014412  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6417+1
 46648  014416  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6417+2
 46649  01441A  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6417+3
 46650                           
 46651                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46652  01441E  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46653  014422  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46654  014426  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46655  01442A  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46656  01442E  0EAB               	movlw	171
 46657  014430  6E30               	movwf	i2___flmul@a,c
 46658  014432  0E41               	movlw	65
 46659  014434  6E31               	movwf	i2___flmul@a+1,c
 46660  014436  0E00               	movlw	0
 46661  014438  6E32               	movwf	i2___flmul@a+2,c
 46662  01443A  0E3F               	movlw	63
 46663  01443C  6E33               	movwf	i2___flmul@a+3,c
 46664  01443E  C07B  F02C         	movff	_ADC_PostProcessingHandler$6417,i2___flmul@b
 46665  014442  C07C  F02D         	movff	_ADC_PostProcessingHandler$6417+1,i2___flmul@b+1
 46666  014446  C07D  F02E         	movff	_ADC_PostProcessingHandler$6417+2,i2___flmul@b+2
 46667  01444A  C07E  F02F         	movff	_ADC_PostProcessingHandler$6417+3,i2___flmul@b+3
 46668  01444E  ECCE  F0B6         	call	i2___flmul	;wreg free
 46669  014452  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46670  014456  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46671  01445A  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46672  01445E  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46673  014462  EC80  F0DD         	call	i2___flsub	;wreg free
 46674  014466  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6418
 46675  01446A  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6418+1
 46676  01446E  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6418+2
 46677  014472  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6418+3
 46678                           
 46679                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46680  014476  C07F  F02C         	movff	_ADC_PostProcessingHandler$6418,i2___flmul@b
 46681  01447A  C080  F02D         	movff	_ADC_PostProcessingHandler$6418+1,i2___flmul@b+1
 46682  01447E  C081  F02E         	movff	_ADC_PostProcessingHandler$6418+2,i2___flmul@b+2
 46683  014482  C082  F02F         	movff	_ADC_PostProcessingHandler$6418+3,i2___flmul@b+3
 46684  014486  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46685  01448A  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46686  01448E  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46687  014492  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46688  014496  ECCE  F0B6         	call	i2___flmul	;wreg free
 46689  01449A  0100               	movlb	0	; () banked
 46690  01449C  51D6               	movf	_pos12_isns_average_index& (0+255),w,b
 46691  01449E  0D04               	mullw	4
 46692  0144A0  0E40               	movlw	low _pos12_isns_average_buffer
 46693  0144A2  24F3               	addwf	prodl,w,c
 46694  0144A4  6ED9               	movwf	fsr2l,c
 46695  0144A6  0E04               	movlw	high _pos12_isns_average_buffer
 46696  0144A8  20F4               	addwfc	prodh,w,c
 46697  0144AA  6EDA               	movwf	fsr2h,c
 46698  0144AC  C02C  FFDE         	movff	?i2___flmul,postinc2
 46699  0144B0  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46700  0144B4  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46701  0144B8  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46702                           
 46703                           ; BSR set to: 0
 46704                           ;adc_postprocessing.c: 63: pos12_isns_average_index++;
 46705  0144BC  2BD6               	incf	_pos12_isns_average_index& (0+255),f,b
 46706                           
 46707                           ; BSR set to: 0
 46708                           ;adc_postprocessing.c: 66: if (pos12_isns_average_index == 16) {
 46709  0144BE  0E10               	movlw	16
 46710  0144C0  19D6               	xorwf	_pos12_isns_average_index& (0+255),w,b
 46711  0144C2  A4D8               	btfss	status,2,c
 46712  0144C4  D057               	goto	i2l21119
 46713                           
 46714                           ; BSR set to: 0
 46715                           ;adc_postprocessing.c: 67: pos12_isns_average_index = 0;
 46716  0144C6  0E00               	movlw	0
 46717  0144C8  6FD6               	movwf	_pos12_isns_average_index& (0+255),b
 46718                           
 46719                           ;adc_postprocessing.c: 69: adc_results.pos12_isns_adc_result = 0.0;
 46720  0144CA  0E00               	movlw	0
 46721  0144CC  6FED               	movwf	(_adc_results+16)& (0+255),b
 46722  0144CE  0E00               	movlw	0
 46723  0144D0  6FEE               	movwf	(_adc_results+17)& (0+255),b
 46724  0144D2  0E00               	movlw	0
 46725  0144D4  6FEF               	movwf	(_adc_results+18)& (0+255),b
 46726  0144D6  0E00               	movlw	0
 46727  0144D8  6FF0               	movwf	(_adc_results+19)& (0+255),b
 46728                           
 46729                           ;adc_postprocessing.c: 70: for (uint8_t i = 0; i < 16; i++) {
 46730  0144DA  0E00               	movlw	0
 46731  0144DC  6F79               	movwf	ADC_PostProcessingHandler@i& (0+255),b
 46732  0144DE                     i2l21111:
 46733                           
 46734                           ; BSR set to: 0
 46735                           ;adc_postprocessing.c: 71: adc_results.pos12_isns_adc_result += fabs(pos12_isns_average_
      +                          buffer[i]);
 46736  0144DE  C0ED  F052         	movff	_adc_results+16,i2___fladd@b
 46737  0144E2  C0EE  F053         	movff	_adc_results+17,i2___fladd@b+1
 46738  0144E6  C0EF  F054         	movff	_adc_results+18,i2___fladd@b+2
 46739  0144EA  C0F0  F055         	movff	_adc_results+19,i2___fladd@b+3
 46740  0144EE  5179               	movf	ADC_PostProcessingHandler@i& (0+255),w,b
 46741  0144F0  0D04               	mullw	4
 46742  0144F2  0E40               	movlw	low _pos12_isns_average_buffer
 46743  0144F4  24F3               	addwf	prodl,w,c
 46744  0144F6  6ED9               	movwf	fsr2l,c
 46745  0144F8  0E04               	movlw	high _pos12_isns_average_buffer
 46746  0144FA  20F4               	addwfc	prodh,w,c
 46747  0144FC  6EDA               	movwf	fsr2h,c
 46748  0144FE  CFDE F005          	movff	postinc2,fabs@d
 46749  014502  CFDE F006          	movff	postinc2,fabs@d+1
 46750  014506  CFDE F007          	movff	postinc2,fabs@d+2
 46751  01450A  CFDE F008          	movff	postinc2,fabs@d+3
 46752  01450E  ECAA  F0DF         	call	_fabs	;wreg free
 46753  014512  C005  F056         	movff	?_fabs,i2___fladd@a
 46754  014516  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46755  01451A  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46756  01451E  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46757  014522  EC85  F0BB         	call	i2___fladd	;wreg free
 46758  014526  C052  F0ED         	movff	?i2___fladd,_adc_results+16
 46759  01452A  C053  F0EE         	movff	?i2___fladd+1,_adc_results+17
 46760  01452E  C054  F0EF         	movff	?i2___fladd+2,_adc_results+18
 46761  014532  C055  F0F0         	movff	?i2___fladd+3,_adc_results+19
 46762  014536  0100               	movlb	0	; () banked
 46763  014538  2B79               	incf	ADC_PostProcessingHandler@i& (0+255),f,b
 46764                           
 46765                           ; BSR set to: 0
 46766  01453A  0E0F               	movlw	15
 46767  01453C  6579               	cpfsgt	ADC_PostProcessingHandler@i& (0+255),b
 46768  01453E  D7CF               	goto	i2l21111
 46769                           
 46770                           ; BSR set to: 0
 46771                           ;adc_postprocessing.c: 72: };adc_postprocessing.c: 73: adc_results.pos12_isns_adc_result
      +                           /= (float) 16;
 46772  014540  C0ED  F013         	movff	_adc_results+16,i2___fldiv@b
 46773  014544  C0EE  F014         	movff	_adc_results+17,i2___fldiv@b+1
 46774  014548  C0EF  F015         	movff	_adc_results+18,i2___fldiv@b+2
 46775  01454C  C0F0  F016         	movff	_adc_results+19,i2___fldiv@b+3
 46776  014550  0E00               	movlw	0
 46777  014552  6E17               	movwf	i2___fldiv@a,c
 46778  014554  0E00               	movlw	0
 46779  014556  6E18               	movwf	i2___fldiv@a+1,c
 46780  014558  0E80               	movlw	128
 46781  01455A  6E19               	movwf	i2___fldiv@a+2,c
 46782  01455C  0E41               	movlw	65
 46783  01455E  6E1A               	movwf	i2___fldiv@a+3,c
 46784  014560  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46785  014564  C013  F0ED         	movff	?i2___fldiv,_adc_results+16
 46786  014568  C014  F0EE         	movff	?i2___fldiv+1,_adc_results+17
 46787  01456C  C015  F0EF         	movff	?i2___fldiv+2,_adc_results+18
 46788  014570  C016  F0F0         	movff	?i2___fldiv+3,_adc_results+19
 46789  014574                     i2l21119:
 46790                           
 46791                           ;adc_postprocessing.c: 74: };adc_postprocessing.c: 76: next_adc_channel = QI_ISNS_ADC;
 46792  014574  0E05               	movlw	5
 46793  014576  D190               	goto	L50
 46794  014578                     i2l21121:
 46795                           
 46796                           ; BSR set to: 0
 46797                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46798  014578  0E00               	movlw	0
 46799  01457A  6E17               	movwf	i2___fldiv@a,c
 46800  01457C  0EC0               	movlw	192
 46801  01457E  6E18               	movwf	i2___fldiv@a+1,c
 46802  014580  0E7F               	movlw	127
 46803  014582  6E19               	movwf	i2___fldiv@a+2,c
 46804  014584  0E44               	movlw	68
 46805  014586  6E1A               	movwf	i2___fldiv@a+3,c
 46806  014588  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46807  01458C  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46808  014590  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46809  014594  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46810  014598  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46811  01459C  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46812  0145A0  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46813  0145A4  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46814  0145A8  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46815  0145AC  EC67  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46816  0145B0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46817  0145B4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46818  0145B8  6A07               	clrf	i2___xxtofl@val+2,c
 46819  0145BA  6A08               	clrf	i2___xxtofl@val+3,c
 46820  0145BC  0E00               	movlw	0
 46821  0145BE  ECFA  F0CD         	call	i2___xxtofl
 46822  0145C2  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46823  0145C6  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46824  0145CA  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46825  0145CE  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46826  0145D2  ECCE  F0B6         	call	i2___flmul	;wreg free
 46827  0145D6  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6417
 46828  0145DA  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6417+1
 46829  0145DE  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6417+2
 46830  0145E2  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6417+3
 46831                           
 46832                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46833  0145E6  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46834  0145EA  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46835  0145EE  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46836  0145F2  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46837  0145F6  0E99               	movlw	153
 46838  0145F8  6E30               	movwf	i2___flmul@a,c
 46839  0145FA  0E83               	movlw	131
 46840  0145FC  6E31               	movwf	i2___flmul@a+1,c
 46841  0145FE  0E80               	movlw	128
 46842  014600  6E32               	movwf	i2___flmul@a+2,c
 46843  014602  0E3F               	movlw	63
 46844  014604  6E33               	movwf	i2___flmul@a+3,c
 46845  014606  C07B  F02C         	movff	_ADC_PostProcessingHandler$6417,i2___flmul@b
 46846  01460A  C07C  F02D         	movff	_ADC_PostProcessingHandler$6417+1,i2___flmul@b+1
 46847  01460E  C07D  F02E         	movff	_ADC_PostProcessingHandler$6417+2,i2___flmul@b+2
 46848  014612  C07E  F02F         	movff	_ADC_PostProcessingHandler$6417+3,i2___flmul@b+3
 46849  014616  ECCE  F0B6         	call	i2___flmul	;wreg free
 46850  01461A  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46851  01461E  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46852  014622  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46853  014626  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46854  01462A  EC80  F0DD         	call	i2___flsub	;wreg free
 46855  01462E  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6418
 46856  014632  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6418+1
 46857  014636  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6418+2
 46858  01463A  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6418+3
 46859                           
 46860                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46861  01463E  C07F  F02C         	movff	_ADC_PostProcessingHandler$6418,i2___flmul@b
 46862  014642  C080  F02D         	movff	_ADC_PostProcessingHandler$6418+1,i2___flmul@b+1
 46863  014646  C081  F02E         	movff	_ADC_PostProcessingHandler$6418+2,i2___flmul@b+2
 46864  01464A  C082  F02F         	movff	_ADC_PostProcessingHandler$6418+3,i2___flmul@b+3
 46865  01464E  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46866  014652  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46867  014656  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46868  01465A  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46869  01465E  ECCE  F0B6         	call	i2___flmul	;wreg free
 46870  014662  0100               	movlb	0	; () banked
 46871  014664  51D5               	movf	_qi_isns_average_index& (0+255),w,b
 46872  014666  0D04               	mullw	4
 46873  014668  0E00               	movlw	low _qi_isns_average_buffer
 46874  01466A  24F3               	addwf	prodl,w,c
 46875  01466C  6ED9               	movwf	fsr2l,c
 46876  01466E  0E04               	movlw	high _qi_isns_average_buffer
 46877  014670  20F4               	addwfc	prodh,w,c
 46878  014672  6EDA               	movwf	fsr2h,c
 46879  014674  C02C  FFDE         	movff	?i2___flmul,postinc2
 46880  014678  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46881  01467C  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46882  014680  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46883                           
 46884                           ; BSR set to: 0
 46885                           ;adc_postprocessing.c: 82: qi_isns_average_index++;
 46886  014684  2BD5               	incf	_qi_isns_average_index& (0+255),f,b
 46887                           
 46888                           ; BSR set to: 0
 46889                           ;adc_postprocessing.c: 85: if (qi_isns_average_index == 16) {
 46890  014686  0E10               	movlw	16
 46891  014688  19D5               	xorwf	_qi_isns_average_index& (0+255),w,b
 46892  01468A  A4D8               	btfss	status,2,c
 46893  01468C  D057               	goto	i2l21143
 46894                           
 46895                           ; BSR set to: 0
 46896                           ;adc_postprocessing.c: 86: qi_isns_average_index = 0;
 46897  01468E  0E00               	movlw	0
 46898  014690  6FD5               	movwf	_qi_isns_average_index& (0+255),b
 46899                           
 46900                           ;adc_postprocessing.c: 88: adc_results.qi_isns_adc_result = 0.0;
 46901  014692  0E00               	movlw	0
 46902  014694  6FF1               	movwf	(_adc_results+20)& (0+255),b
 46903  014696  0E00               	movlw	0
 46904  014698  6FF2               	movwf	(_adc_results+21)& (0+255),b
 46905  01469A  0E00               	movlw	0
 46906  01469C  6FF3               	movwf	(_adc_results+22)& (0+255),b
 46907  01469E  0E00               	movlw	0
 46908  0146A0  6FF4               	movwf	(_adc_results+23)& (0+255),b
 46909                           
 46910                           ;adc_postprocessing.c: 89: for (uint8_t i = 0; i < 16; i++) {
 46911  0146A2  0E00               	movlw	0
 46912  0146A4  6F7A               	movwf	ADC_PostProcessingHandler@i_3557& (0+255),b
 46913  0146A6                     i2l21135:
 46914                           
 46915                           ; BSR set to: 0
 46916                           ;adc_postprocessing.c: 90: adc_results.qi_isns_adc_result += fabs(qi_isns_average_buffer
      +                          [i]);
 46917  0146A6  C0F1  F052         	movff	_adc_results+20,i2___fladd@b
 46918  0146AA  C0F2  F053         	movff	_adc_results+21,i2___fladd@b+1
 46919  0146AE  C0F3  F054         	movff	_adc_results+22,i2___fladd@b+2
 46920  0146B2  C0F4  F055         	movff	_adc_results+23,i2___fladd@b+3
 46921  0146B6  517A               	movf	ADC_PostProcessingHandler@i_3557& (0+255),w,b
 46922  0146B8  0D04               	mullw	4
 46923  0146BA  0E00               	movlw	low _qi_isns_average_buffer
 46924  0146BC  24F3               	addwf	prodl,w,c
 46925  0146BE  6ED9               	movwf	fsr2l,c
 46926  0146C0  0E04               	movlw	high _qi_isns_average_buffer
 46927  0146C2  20F4               	addwfc	prodh,w,c
 46928  0146C4  6EDA               	movwf	fsr2h,c
 46929  0146C6  CFDE F005          	movff	postinc2,fabs@d
 46930  0146CA  CFDE F006          	movff	postinc2,fabs@d+1
 46931  0146CE  CFDE F007          	movff	postinc2,fabs@d+2
 46932  0146D2  CFDE F008          	movff	postinc2,fabs@d+3
 46933  0146D6  ECAA  F0DF         	call	_fabs	;wreg free
 46934  0146DA  C005  F056         	movff	?_fabs,i2___fladd@a
 46935  0146DE  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46936  0146E2  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46937  0146E6  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46938  0146EA  EC85  F0BB         	call	i2___fladd	;wreg free
 46939  0146EE  C052  F0F1         	movff	?i2___fladd,_adc_results+20
 46940  0146F2  C053  F0F2         	movff	?i2___fladd+1,_adc_results+21
 46941  0146F6  C054  F0F3         	movff	?i2___fladd+2,_adc_results+22
 46942  0146FA  C055  F0F4         	movff	?i2___fladd+3,_adc_results+23
 46943  0146FE  0100               	movlb	0	; () banked
 46944  014700  2B7A               	incf	ADC_PostProcessingHandler@i_3557& (0+255),f,b
 46945                           
 46946                           ; BSR set to: 0
 46947  014702  0E0F               	movlw	15
 46948  014704  657A               	cpfsgt	ADC_PostProcessingHandler@i_3557& (0+255),b
 46949  014706  D7CF               	goto	i2l21135
 46950                           
 46951                           ; BSR set to: 0
 46952                           ;adc_postprocessing.c: 91: };adc_postprocessing.c: 92: adc_results.qi_isns_adc_result /=
      +                           (float) 16;
 46953  014708  C0F1  F013         	movff	_adc_results+20,i2___fldiv@b
 46954  01470C  C0F2  F014         	movff	_adc_results+21,i2___fldiv@b+1
 46955  014710  C0F3  F015         	movff	_adc_results+22,i2___fldiv@b+2
 46956  014714  C0F4  F016         	movff	_adc_results+23,i2___fldiv@b+3
 46957  014718  0E00               	movlw	0
 46958  01471A  6E17               	movwf	i2___fldiv@a,c
 46959  01471C  0E00               	movlw	0
 46960  01471E  6E18               	movwf	i2___fldiv@a+1,c
 46961  014720  0E80               	movlw	128
 46962  014722  6E19               	movwf	i2___fldiv@a+2,c
 46963  014724  0E41               	movlw	65
 46964  014726  6E1A               	movwf	i2___fldiv@a+3,c
 46965  014728  ECB5  F0C3         	call	i2___fldiv	;wreg free
 46966  01472C  C013  F0F1         	movff	?i2___fldiv,_adc_results+20
 46967  014730  C014  F0F2         	movff	?i2___fldiv+1,_adc_results+21
 46968  014734  C015  F0F3         	movff	?i2___fldiv+2,_adc_results+22
 46969  014738  C016  F0F4         	movff	?i2___fldiv+3,_adc_results+23
 46970  01473C                     i2l21143:
 46971                           
 46972                           ;adc_postprocessing.c: 93: };adc_postprocessing.c: 95: next_adc_channel = channel_Temp;
 46973  01473C  0E3D               	movlw	61
 46974  01473E  D0AC               	goto	L50
 46975  014740                     i2l21145:
 46976                           
 46977                           ; BSR set to: 0
 46978                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46979  014740  0E00               	movlw	0
 46980  014742  6E30               	movwf	i2___flmul@a,c
 46981  014744  0E00               	movlw	0
 46982  014746  6E31               	movwf	i2___flmul@a+1,c
 46983  014748  0EA0               	movlw	160
 46984  01474A  6E32               	movwf	i2___flmul@a+2,c
 46985  01474C  0E3F               	movlw	63
 46986  01474E  6E33               	movwf	i2___flmul@a+3,c
 46987  014750  0E00               	movlw	0
 46988  014752  6E17               	movwf	i2___fldiv@a,c
 46989  014754  0EC0               	movlw	192
 46990  014756  6E18               	movwf	i2___fldiv@a+1,c
 46991  014758  0E7F               	movlw	127
 46992  01475A  6E19               	movwf	i2___fldiv@a+2,c
 46993  01475C  0E44               	movlw	68
 46994  01475E  6E1A               	movwf	i2___fldiv@a+3,c
 46995  014760  EC67  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46996  014764  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46997  014768  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46998  01476C  6A07               	clrf	i2___xxtofl@val+2,c
 46999  01476E  6A08               	clrf	i2___xxtofl@val+3,c
 47000  014770  0E00               	movlw	0
 47001  014772  ECFA  F0CD         	call	i2___xxtofl
 47002  014776  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 47003  01477A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 47004  01477E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 47005  014782  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 47006  014786  ECB5  F0C3         	call	i2___fldiv	;wreg free
 47007  01478A  C013  F068         	movff	?i2___fldiv,i2___flsub@a
 47008  01478E  C014  F069         	movff	?i2___fldiv+1,i2___flsub@a+1
 47009  014792  C015  F06A         	movff	?i2___fldiv+2,i2___flsub@a+2
 47010  014796  C016  F06B         	movff	?i2___fldiv+3,i2___flsub@a+3
 47011  01479A  0E00               	movlw	0
 47012  01479C  0100               	movlb	0	; () banked
 47013  01479E  6F64               	movwf	i2___flsub@b& (0+255),b
 47014  0147A0  0E00               	movlw	0
 47015  0147A2  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 47016  0147A4  0E80               	movlw	128
 47017  0147A6  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 47018  0147A8  0E3F               	movlw	63
 47019  0147AA  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 47020  0147AC  EC80  F0DD         	call	i2___flsub	;wreg free
 47021  0147B0  C064  F02C         	movff	?i2___flsub,i2___flmul@b
 47022  0147B4  C065  F02D         	movff	?i2___flsub+1,i2___flmul@b+1
 47023  0147B8  C066  F02E         	movff	?i2___flsub+2,i2___flmul@b+2
 47024  0147BC  C067  F02F         	movff	?i2___flsub+3,i2___flmul@b+3
 47025  0147C0  ECCE  F0B6         	call	i2___flmul	;wreg free
 47026  0147C4  C02C  F06C         	movff	?i2___flmul,_ADC_PostProcessingHandler$6419
 47027  0147C8  C02D  F06D         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6419+1
 47028  0147CC  C02E  F06E         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6419+2
 47029  0147D0  C02F  F06F         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6419+3
 47030                           
 47031                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47032  0147D4  0EDA               	movlw	218
 47033  0147D6  6E17               	movwf	i2___fldiv@a,c
 47034  0147D8  0E03               	movlw	3
 47035  0147DA  6E18               	movwf	i2___fldiv@a+1,c
 47036  0147DC  0EAD               	movlw	173
 47037  0147DE  6E19               	movwf	i2___fldiv@a+2,c
 47038  0147E0  0E3A               	movlw	58
 47039  0147E2  6E1A               	movwf	i2___fldiv@a+3,c
 47040  0147E4  C06C  F068         	movff	_ADC_PostProcessingHandler$6419,i2___flsub@a
 47041  0147E8  C06D  F069         	movff	_ADC_PostProcessingHandler$6419+1,i2___flsub@a+1
 47042  0147EC  C06E  F06A         	movff	_ADC_PostProcessingHandler$6419+2,i2___flsub@a+2
 47043  0147F0  C06F  F06B         	movff	_ADC_PostProcessingHandler$6419+3,i2___flsub@a+3
 47044  0147F4  0E39               	movlw	57
 47045  0147F6  0100               	movlb	0	; () banked
 47046  0147F8  6F64               	movwf	i2___flsub@b& (0+255),b
 47047  0147FA  0EB4               	movlw	180
 47048  0147FC  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 47049  0147FE  0E28               	movlw	40
 47050  014800  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 47051  014802  0E3F               	movlw	63
 47052  014804  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 47053  014806  EC80  F0DD         	call	i2___flsub	;wreg free
 47054  01480A  C064  F013         	movff	?i2___flsub,i2___fldiv@b
 47055  01480E  C065  F014         	movff	?i2___flsub+1,i2___fldiv@b+1
 47056  014812  C066  F015         	movff	?i2___flsub+2,i2___fldiv@b+2
 47057  014816  C067  F016         	movff	?i2___flsub+3,i2___fldiv@b+3
 47058  01481A  ECB5  F0C3         	call	i2___fldiv	;wreg free
 47059  01481E  C013  F070         	movff	?i2___fldiv,_ADC_PostProcessingHandler$6420
 47060  014822  C014  F071         	movff	?i2___fldiv+1,_ADC_PostProcessingHandler$6420+1
 47061  014826  C015  F072         	movff	?i2___fldiv+2,_ADC_PostProcessingHandler$6420+2
 47062  01482A  C016  F073         	movff	?i2___fldiv+3,_ADC_PostProcessingHandler$6420+3
 47063                           
 47064                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47065  01482E  0E00               	movlw	0
 47066  014830  6E56               	movwf	i2___fladd@a,c
 47067  014832  0E00               	movlw	0
 47068  014834  6E57               	movwf	i2___fladd@a+1,c
 47069  014836  0E20               	movlw	32
 47070  014838  6E58               	movwf	i2___fladd@a+2,c
 47071  01483A  0EC2               	movlw	194
 47072  01483C  6E59               	movwf	i2___fladd@a+3,c
 47073  01483E  C070  F052         	movff	_ADC_PostProcessingHandler$6420,i2___fladd@b
 47074  014842  C071  F053         	movff	_ADC_PostProcessingHandler$6420+1,i2___fladd@b+1
 47075  014846  C072  F054         	movff	_ADC_PostProcessingHandler$6420+2,i2___fladd@b+2
 47076  01484A  C073  F055         	movff	_ADC_PostProcessingHandler$6420+3,i2___fladd@b+3
 47077  01484E  EC85  F0BB         	call	i2___fladd	;wreg free
 47078  014852  C052  F074         	movff	?i2___fladd,_ADC_PostProcessingHandler$6421
 47079  014856  C053  F075         	movff	?i2___fladd+1,_ADC_PostProcessingHandler$6421+1
 47080  01485A  C054  F076         	movff	?i2___fladd+2,_ADC_PostProcessingHandler$6421+2
 47081  01485E  C055  F077         	movff	?i2___fladd+3,_ADC_PostProcessingHandler$6421+3
 47082                           
 47083                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47084  014862  C074  F052         	movff	_ADC_PostProcessingHandler$6421,i2___fladd@b
 47085  014866  C075  F053         	movff	_ADC_PostProcessingHandler$6421+1,i2___fladd@b+1
 47086  01486A  C076  F054         	movff	_ADC_PostProcessingHandler$6421+2,i2___fladd@b+2
 47087  01486E  C077  F055         	movff	_ADC_PostProcessingHandler$6421+3,i2___fladd@b+3
 47088  014872  0EB8               	movlw	184
 47089  014874  6E56               	movwf	i2___fladd@a,c
 47090  014876  0E0E               	movlw	14
 47091  014878  6E57               	movwf	i2___fladd@a+1,c
 47092  01487A  0EBC               	movlw	188
 47093  01487C  6E58               	movwf	i2___fladd@a+2,c
 47094  01487E  0E43               	movlw	67
 47095  014880  6E59               	movwf	i2___fladd@a+3,c
 47096  014882  EC85  F0BB         	call	i2___fladd	;wreg free
 47097  014886  C052  F0F5         	movff	?i2___fladd,_adc_results+24
 47098  01488A  C053  F0F6         	movff	?i2___fladd+1,_adc_results+25
 47099  01488E  C054  F0F7         	movff	?i2___fladd+2,_adc_results+26
 47100  014892  C055  F0F8         	movff	?i2___fladd+3,_adc_results+27
 47101                           
 47102                           ;adc_postprocessing.c: 101: next_adc_channel = channel_VSS;
 47103  014896  0E3C               	movlw	60
 47104  014898                     L50:
 47105  014898  0100               	movlb	0	; () banked
 47106  01489A  6FFC               	movwf	_next_adc_channel& (0+255),b
 47107                           
 47108                           ;adc_postprocessing.c: 102: break;
 47109  01489C  D01C               	goto	i2l21161
 47110  01489E                     i2l21155:
 47111                           
 47112                           ; BSR set to: 0
 47113                           ;adc_postprocessing.c: 107: error_handler.ADC_general_error_flag = 1;
 47114  01489E  0E01               	movlw	1
 47115  0148A0  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47116                           
 47117                           ;adc_postprocessing.c: 108: break;
 47118  0148A2  D019               	goto	i2l21161
 47119  0148A4                     i2l21159:
 47120  0148A4  0100               	movlb	0	; () banked
 47121  0148A6  5178               	movf	ADC_PostProcessingHandler@current_adc_channel& (0+255),w,b
 47122                           
 47123                           ; Switch size 1, requested type "simple"
 47124                           ; Number of cases is 7, Range of values is 0 to 63
 47125                           ; switch strategies available:
 47126                           ; Name         Instructions Cycles
 47127                           ; simple_byte           22    12 (average)
 47128                           ;	Chosen strategy is simple_byte
 47129  0148A8  0A00               	xorlw	0	; case 0
 47130  0148AA  B4D8               	btfsc	status,2,c
 47131  0148AC  D502               	goto	i2l21093
 47132  0148AE  0A01               	xorlw	1	; case 1
 47133  0148B0  B4D8               	btfsc	status,2,c
 47134  0148B2  D57E               	goto	i2l21097
 47135  0148B4  0A05               	xorlw	5	; case 4
 47136  0148B6  B4D8               	btfsc	status,2,c
 47137  0148B8  D48F               	goto	i2l21089
 47138  0148BA  0A01               	xorlw	1	; case 5
 47139  0148BC  B4D8               	btfsc	status,2,c
 47140  0148BE  D65C               	goto	i2l21121
 47141  0148C0  0A39               	xorlw	57	; case 60
 47142  0148C2  B4D8               	btfsc	status,2,c
 47143  0148C4  EF47  F0A0         	goto	i2l21075
 47144  0148C8  0A01               	xorlw	1	; case 61
 47145  0148CA  B4D8               	btfsc	status,2,c
 47146  0148CC  D739               	goto	i2l21145
 47147  0148CE  0A02               	xorlw	2	; case 63
 47148  0148D0  B4D8               	btfsc	status,2,c
 47149  0148D2  D404               	goto	i2l21079
 47150  0148D4  D7E4               	goto	i2l21155
 47151  0148D6                     i2l21161:
 47152                           
 47153                           ; BSR set to: 0
 47154                           ;adc_postprocessing.c: 112: if (ADCC_GetCurrentCountofConversions() != 255) {
 47155  0148D6  EC79  F0E4         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 47156  0148DA  0AFF               	xorlw	255
 47157  0148DC  B4D8               	btfsc	status,2,c
 47158  0148DE  D003               	goto	i2l21165
 47159                           
 47160                           ;adc_postprocessing.c: 113: error_handler.ADC_general_error_flag = 1;
 47161  0148E0  0E01               	movlw	1
 47162  0148E2  0100               	movlb	0	; () banked
 47163  0148E4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47164  0148E6                     i2l21165:
 47165                           
 47166                           ;adc_postprocessing.c: 114: };adc_postprocessing.c: 116: if (ADCC_HasAccumulatorOverflow
      +                          ed()) {
 47167  0148E6  EC36  F0E4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47168  0148EA  0900               	iorlw	0
 47169  0148EC  B4D8               	btfsc	status,2,c
 47170  0148EE  D003               	goto	i2l21169
 47171                           
 47172                           ;adc_postprocessing.c: 117: error_handler.ADC_general_error_flag = 1;
 47173  0148F0  0E01               	movlw	1
 47174  0148F2  0100               	movlb	0	; () banked
 47175  0148F4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47176  0148F6                     i2l21169:
 47177                           
 47178                           ;adc_postprocessing.c: 118: };adc_postprocessing.c: 121: adc_calculations.input_power = 
      +                          adc_results.pos12_adc_result * adc_results.pos12_isns_adc_result;
 47179  0148F6  C0E9  F02C         	movff	_adc_results+12,i2___flmul@b
 47180  0148FA  C0EA  F02D         	movff	_adc_results+13,i2___flmul@b+1
 47181  0148FE  C0EB  F02E         	movff	_adc_results+14,i2___flmul@b+2
 47182  014902  C0EC  F02F         	movff	_adc_results+15,i2___flmul@b+3
 47183  014906  C0ED  F030         	movff	_adc_results+16,i2___flmul@a
 47184  01490A  C0EE  F031         	movff	_adc_results+17,i2___flmul@a+1
 47185  01490E  C0EF  F032         	movff	_adc_results+18,i2___flmul@a+2
 47186  014912  C0F0  F033         	movff	_adc_results+19,i2___flmul@a+3
 47187  014916  ECCE  F0B6         	call	i2___flmul	;wreg free
 47188  01491A  C02C  F2BE         	movff	?i2___flmul,_adc_calculations
 47189  01491E  C02D  F2BF         	movff	?i2___flmul+1,_adc_calculations+1
 47190  014922  C02E  F2C0         	movff	?i2___flmul+2,_adc_calculations+2
 47191  014926  C02F  F2C1         	movff	?i2___flmul+3,_adc_calculations+3
 47192                           
 47193                           ;adc_postprocessing.c: 122: adc_calculations.output_power = adc_results.pos5_adc_result 
      +                          * adc_results.qi_isns_adc_result;
 47194  01492A  C0E5  F02C         	movff	_adc_results+8,i2___flmul@b
 47195  01492E  C0E6  F02D         	movff	_adc_results+9,i2___flmul@b+1
 47196  014932  C0E7  F02E         	movff	_adc_results+10,i2___flmul@b+2
 47197  014936  C0E8  F02F         	movff	_adc_results+11,i2___flmul@b+3
 47198  01493A  C0F1  F030         	movff	_adc_results+20,i2___flmul@a
 47199  01493E  C0F2  F031         	movff	_adc_results+21,i2___flmul@a+1
 47200  014942  C0F3  F032         	movff	_adc_results+22,i2___flmul@a+2
 47201  014946  C0F4  F033         	movff	_adc_results+23,i2___flmul@a+3
 47202  01494A  ECCE  F0B6         	call	i2___flmul	;wreg free
 47203  01494E  C02C  F2C2         	movff	?i2___flmul,_adc_calculations+4
 47204  014952  C02D  F2C3         	movff	?i2___flmul+1,_adc_calculations+5
 47205  014956  C02E  F2C4         	movff	?i2___flmul+2,_adc_calculations+6
 47206  01495A  C02F  F2C5         	movff	?i2___flmul+3,_adc_calculations+7
 47207                           
 47208                           ;adc_postprocessing.c: 123: adc_calculations.efficiency = (adc_calculations.output_power
      +                           / adc_calculations.input_power) * 100.0;
 47209  01495E  C2BE  F017         	movff	_adc_calculations,i2___fldiv@a
 47210  014962  C2BF  F018         	movff	_adc_calculations+1,i2___fldiv@a+1
 47211  014966  C2C0  F019         	movff	_adc_calculations+2,i2___fldiv@a+2
 47212  01496A  C2C1  F01A         	movff	_adc_calculations+3,i2___fldiv@a+3
 47213  01496E  C2C2  F013         	movff	_adc_calculations+4,i2___fldiv@b
 47214  014972  C2C3  F014         	movff	_adc_calculations+5,i2___fldiv@b+1
 47215  014976  C2C4  F015         	movff	_adc_calculations+6,i2___fldiv@b+2
 47216  01497A  C2C5  F016         	movff	_adc_calculations+7,i2___fldiv@b+3
 47217  01497E  ECB5  F0C3         	call	i2___fldiv	;wreg free
 47218  014982  C013  F02C         	movff	?i2___fldiv,i2___flmul@b
 47219  014986  C014  F02D         	movff	?i2___fldiv+1,i2___flmul@b+1
 47220  01498A  C015  F02E         	movff	?i2___fldiv+2,i2___flmul@b+2
 47221  01498E  C016  F02F         	movff	?i2___fldiv+3,i2___flmul@b+3
 47222  014992  0E00               	movlw	0
 47223  014994  6E30               	movwf	i2___flmul@a,c
 47224  014996  0E00               	movlw	0
 47225  014998  6E31               	movwf	i2___flmul@a+1,c
 47226  01499A  0EC8               	movlw	200
 47227  01499C  6E32               	movwf	i2___flmul@a+2,c
 47228  01499E  0E42               	movlw	66
 47229  0149A0  6E33               	movwf	i2___flmul@a+3,c
 47230  0149A2  ECCE  F0B6         	call	i2___flmul	;wreg free
 47231  0149A6  C02C  F2C6         	movff	?i2___flmul,_adc_calculations+8
 47232  0149AA  C02D  F2C7         	movff	?i2___flmul+1,_adc_calculations+9
 47233  0149AE  C02E  F2C8         	movff	?i2___flmul+2,_adc_calculations+10
 47234  0149B2  C02F  F2C9         	movff	?i2___flmul+3,_adc_calculations+11
 47235                           
 47236                           ;adc_postprocessing.c: 126: if (adc_calculations.efficiency > 99.0) adc_calculations.eff
      +                          iciency = 99.0;
 47237  0149B6  0E00               	movlw	0
 47238  0149B8  6E01               	movwf	i2___flge@ff1,c
 47239  0149BA  0E00               	movlw	0
 47240  0149BC  6E02               	movwf	i2___flge@ff1+1,c
 47241  0149BE  0EC6               	movlw	198
 47242  0149C0  6E03               	movwf	i2___flge@ff1+2,c
 47243  0149C2  0E42               	movlw	66
 47244  0149C4  6E04               	movwf	i2___flge@ff1+3,c
 47245  0149C6  C2C6  F005         	movff	_adc_calculations+8,i2___flge@ff2
 47246  0149CA  C2C7  F006         	movff	_adc_calculations+9,i2___flge@ff2+1
 47247  0149CE  C2C8  F007         	movff	_adc_calculations+10,i2___flge@ff2+2
 47248  0149D2  C2C9  F008         	movff	_adc_calculations+11,i2___flge@ff2+3
 47249  0149D6  ECEE  F0D2         	call	i2___flge	;wreg free
 47250  0149DA  B0D8               	btfsc	status,0,c
 47251  0149DC  D009               	goto	i2l21179
 47252  0149DE  0E00               	movlw	0
 47253  0149E0  0102               	movlb	2	; () banked
 47254  0149E2  6FC6               	movwf	(_adc_calculations+8)& (0+255),b
 47255  0149E4  0E00               	movlw	0
 47256  0149E6  6FC7               	movwf	(_adc_calculations+9)& (0+255),b
 47257  0149E8  0EC6               	movlw	198
 47258  0149EA  6FC8               	movwf	(_adc_calculations+10)& (0+255),b
 47259  0149EC  0E42               	movlw	66
 47260  0149EE  6FC9               	movwf	(_adc_calculations+11)& (0+255),b
 47261  0149F0                     i2l21179:
 47262                           
 47263                           ;adc_postprocessing.c: 129: TMR2_StartTimer();
 47264  0149F0  EC62  F0E4         	call	_TMR2_StartTimer	;wreg free
 47265  0149F4  0012               	return		;funcret
 47266  0149F6                     __end_of_ADC_PostProcessingHandler:
 47267                           	opt callstack 0
 47268                           
 47269 ;; *************** function i2___xxtofl *****************
 47270 ;; Defined at:
 47271 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 47272 ;; Parameters:    Size  Location     Type
 47273 ;;  sign            1    wreg     unsigned char 
 47274 ;;  val             4    4[COMRAM] long 
 47275 ;; Auto vars:     Size  Location     Type
 47276 ;;  sign            1   12[COMRAM] unsigned char 
 47277 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 47278 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 47279 ;; Return value:  Size  Location     Type
 47280 ;;                  4    4[COMRAM] unsigned char 
 47281 ;; Registers used:
 47282 ;;		wreg, status,2, status,0
 47283 ;; Tracked objects:
 47284 ;;		On entry : 0/0
 47285 ;;		On exit  : 0/0
 47286 ;;		Unchanged: 0/0
 47287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47289 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47291 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47292 ;;Total ram usage:       14 bytes
 47293 ;; Hardware stack levels used:    1
 47294 ;; This function calls:
 47295 ;;		Nothing
 47296 ;; This function is called by:
 47297 ;;		_ADC_PostProcessingHandler
 47298 ;;		i2__doprnt
 47299 ;; This function uses a non-reentrant model
 47300 ;;
 47301                           
 47302                           	psect	text200
 47303  019BF4                     __ptext200:
 47304                           	opt callstack 0
 47305  019BF4                     i2___xxtofl:
 47306                           	opt callstack 13
 47307                           
 47308                           ;incstack = 0
 47309                           ;i2___xxtofl@sign stored from wreg
 47310  019BF4  6E0D               	movwf	i2___xxtofl@sign,c
 47311  019BF6  500D               	movf	i2___xxtofl@sign,w,c
 47312  019BF8  A4D8               	btfss	status,2,c
 47313  019BFA  AE08               	btfss	i2___xxtofl@val+3,7,c
 47314  019BFC  D01A               	goto	i2l3361
 47315  019BFE  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 47316  019C02  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 47317  019C06  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 47318  019C0A  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 47319  019C0E  1E09               	comf	??i2___xxtofl,f,c
 47320  019C10  1E0A               	comf	??i2___xxtofl+1,f,c
 47321  019C12  1E0B               	comf	??i2___xxtofl+2,f,c
 47322  019C14  1E0C               	comf	??i2___xxtofl+3,f,c
 47323  019C16  2A09               	incf	??i2___xxtofl,f,c
 47324  019C18  0E00               	movlw	0
 47325  019C1A  220A               	addwfc	??i2___xxtofl+1,f,c
 47326  019C1C  220B               	addwfc	??i2___xxtofl+2,f,c
 47327  019C1E  220C               	addwfc	??i2___xxtofl+3,f,c
 47328  019C20  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 47329  019C24  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 47330  019C28  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 47331  019C2C  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 47332  019C30  D008               	goto	i2l19875
 47333  019C32                     i2l3361:
 47334  019C32  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 47335  019C36  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 47336  019C3A  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 47337  019C3E  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 47338  019C42                     i2l19875:
 47339  019C42  5005               	movf	i2___xxtofl@val,w,c
 47340  019C44  1006               	iorwf	i2___xxtofl@val+1,w,c
 47341  019C46  1007               	iorwf	i2___xxtofl@val+2,w,c
 47342  019C48  1008               	iorwf	i2___xxtofl@val+3,w,c
 47343  019C4A  A4D8               	btfss	status,2,c
 47344  019C4C  D009               	goto	i2l19881
 47345  019C4E  0E00               	movlw	0
 47346  019C50  6E05               	movwf	?i2___xxtofl,c
 47347  019C52  0E00               	movlw	0
 47348  019C54  6E06               	movwf	?i2___xxtofl+1,c
 47349  019C56  0E00               	movlw	0
 47350  019C58  6E07               	movwf	?i2___xxtofl+2,c
 47351  019C5A  0E00               	movlw	0
 47352  019C5C  6E08               	movwf	?i2___xxtofl+3,c
 47353  019C5E  0012               	return	
 47354  019C60                     i2l19881:
 47355  019C60  0E96               	movlw	150
 47356  019C62  6E0E               	movwf	i2___xxtofl@exp,c
 47357  019C64  D006               	goto	i2l19885
 47358  019C66                     i2l19883:
 47359  019C66  2A0E               	incf	i2___xxtofl@exp,f,c
 47360  019C68  90D8               	bcf	status,0,c
 47361  019C6A  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47362  019C6C  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47363  019C6E  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47364  019C70  320F               	rrcf	i2___xxtofl@arg,f,c
 47365  019C72                     i2l19885:
 47366  019C72  0E00               	movlw	0
 47367  019C74  140F               	andwf	i2___xxtofl@arg,w,c
 47368  019C76  6E09               	movwf	??i2___xxtofl& (0+255),c
 47369  019C78  0E00               	movlw	0
 47370  019C7A  1410               	andwf	i2___xxtofl@arg+1,w,c
 47371  019C7C  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47372  019C7E  0E00               	movlw	0
 47373  019C80  1411               	andwf	i2___xxtofl@arg+2,w,c
 47374  019C82  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47375  019C84  0EFE               	movlw	254
 47376  019C86  1412               	andwf	i2___xxtofl@arg+3,w,c
 47377  019C88  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47378  019C8A  5009               	movf	??i2___xxtofl,w,c
 47379  019C8C  100A               	iorwf	??i2___xxtofl+1,w,c
 47380  019C8E  100B               	iorwf	??i2___xxtofl+2,w,c
 47381  019C90  100C               	iorwf	??i2___xxtofl+3,w,c
 47382  019C92  B4D8               	btfsc	status,2,c
 47383  019C94  D00D               	goto	i2l3368
 47384  019C96  D7E7               	goto	i2l19883
 47385  019C98                     i2l19887:
 47386  019C98  2A0E               	incf	i2___xxtofl@exp,f,c
 47387  019C9A  0E01               	movlw	1
 47388  019C9C  260F               	addwf	i2___xxtofl@arg,f,c
 47389  019C9E  0E00               	movlw	0
 47390  019CA0  2210               	addwfc	i2___xxtofl@arg+1,f,c
 47391  019CA2  2211               	addwfc	i2___xxtofl@arg+2,f,c
 47392  019CA4  2212               	addwfc	i2___xxtofl@arg+3,f,c
 47393  019CA6  90D8               	bcf	status,0,c
 47394  019CA8  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47395  019CAA  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47396  019CAC  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47397  019CAE  320F               	rrcf	i2___xxtofl@arg,f,c
 47398  019CB0                     i2l3368:
 47399  019CB0  0E00               	movlw	0
 47400  019CB2  140F               	andwf	i2___xxtofl@arg,w,c
 47401  019CB4  6E09               	movwf	??i2___xxtofl& (0+255),c
 47402  019CB6  0E00               	movlw	0
 47403  019CB8  1410               	andwf	i2___xxtofl@arg+1,w,c
 47404  019CBA  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47405  019CBC  0E00               	movlw	0
 47406  019CBE  1411               	andwf	i2___xxtofl@arg+2,w,c
 47407  019CC0  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47408  019CC2  0EFF               	movlw	255
 47409  019CC4  1412               	andwf	i2___xxtofl@arg+3,w,c
 47410  019CC6  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47411  019CC8  5009               	movf	??i2___xxtofl,w,c
 47412  019CCA  100A               	iorwf	??i2___xxtofl+1,w,c
 47413  019CCC  100B               	iorwf	??i2___xxtofl+2,w,c
 47414  019CCE  100C               	iorwf	??i2___xxtofl+3,w,c
 47415  019CD0  B4D8               	btfsc	status,2,c
 47416  019CD2  D007               	goto	i2l19895
 47417  019CD4  D7E1               	goto	i2l19887
 47418  019CD6                     i2l19893:
 47419  019CD6  060E               	decf	i2___xxtofl@exp,f,c
 47420  019CD8  90D8               	bcf	status,0,c
 47421  019CDA  360F               	rlcf	i2___xxtofl@arg,f,c
 47422  019CDC  3610               	rlcf	i2___xxtofl@arg+1,f,c
 47423  019CDE  3611               	rlcf	i2___xxtofl@arg+2,f,c
 47424  019CE0  3612               	rlcf	i2___xxtofl@arg+3,f,c
 47425  019CE2                     i2l19895:
 47426  019CE2  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 47427  019CE4  D003               	goto	i2u2529_40
 47428  019CE6  0E02               	movlw	2
 47429  019CE8  600E               	cpfslt	i2___xxtofl@exp,c
 47430  019CEA  D7F5               	goto	i2l19893
 47431  019CEC                     i2u2529_40:
 47432  019CEC  A00E               	btfss	i2___xxtofl@exp,0,c
 47433  019CEE  9E11               	bcf	i2___xxtofl@arg+2,7,c
 47434  019CF0  90D8               	bcf	status,0,c
 47435  019CF2  320E               	rrcf	i2___xxtofl@exp,f,c
 47436  019CF4  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 47437  019CF8  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 47438  019CFA  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 47439  019CFC  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 47440  019CFE  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 47441  019D02  6A0B               	clrf	??i2___xxtofl+2,c
 47442  019D04  6A0A               	clrf	??i2___xxtofl+1,c
 47443  019D06  6A09               	clrf	??i2___xxtofl,c
 47444  019D08  5009               	movf	??i2___xxtofl,w,c
 47445  019D0A  120F               	iorwf	i2___xxtofl@arg,f,c
 47446  019D0C  500A               	movf	??i2___xxtofl+1,w,c
 47447  019D0E  1210               	iorwf	i2___xxtofl@arg+1,f,c
 47448  019D10  500B               	movf	??i2___xxtofl+2,w,c
 47449  019D12  1211               	iorwf	i2___xxtofl@arg+2,f,c
 47450  019D14  500C               	movf	??i2___xxtofl+3,w,c
 47451  019D16  1212               	iorwf	i2___xxtofl@arg+3,f,c
 47452  019D18  500D               	movf	i2___xxtofl@sign,w,c
 47453  019D1A  A4D8               	btfss	status,2,c
 47454  019D1C  AE08               	btfss	i2___xxtofl@val+3,7,c
 47455  019D1E  D001               	goto	i2l19911
 47456  019D20  8E12               	bsf	i2___xxtofl@arg+3,7,c
 47457  019D22                     i2l19911:
 47458  019D22  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 47459  019D26  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 47460  019D2A  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 47461  019D2E  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 47462  019D32  0012               	return		;funcret
 47463  019D34                     __end_ofi2___xxtofl:
 47464                           	opt callstack 0
 47465                           
 47466 ;; *************** function i2___flsub *****************
 47467 ;; Defined at:
 47468 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47469 ;; Parameters:    Size  Location     Type
 47470 ;;  b               4    4[BANK0 ] unsigned char 
 47471 ;;  a               4    8[BANK0 ] unsigned char 
 47472 ;; Auto vars:     Size  Location     Type
 47473 ;;		None
 47474 ;; Return value:  Size  Location     Type
 47475 ;;                  4    4[BANK0 ] unsigned char 
 47476 ;; Registers used:
 47477 ;;		wreg, status,2, status,0, cstack
 47478 ;; Tracked objects:
 47479 ;;		On entry : 0/0
 47480 ;;		On exit  : 0/0
 47481 ;;		Unchanged: 0/0
 47482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47483 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47487 ;;Total ram usage:        8 bytes
 47488 ;; Hardware stack levels used:    1
 47489 ;; Hardware stack levels required when called:    1
 47490 ;; This function calls:
 47491 ;;		i2___fladd
 47492 ;; This function is called by:
 47493 ;;		_ADC_PostProcessingHandler
 47494 ;;		i2__doprnt
 47495 ;; This function uses a non-reentrant model
 47496 ;;
 47497                           
 47498                           	psect	text201
 47499  01BB00                     __ptext201:
 47500                           	opt callstack 0
 47501  01BB00                     i2___flsub:
 47502                           	opt callstack 12
 47503                           
 47504                           ;incstack = 0
 47505  01BB00  0E00               	movlw	0
 47506  01BB02  0100               	movlb	0	; () banked
 47507  01BB04  1B68               	xorwf	i2___flsub@a& (0+255),f,b
 47508  01BB06  0E00               	movlw	0
 47509  01BB08  1B69               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 47510  01BB0A  0E00               	movlw	0
 47511  01BB0C  1B6A               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 47512  01BB0E  0E80               	movlw	128
 47513  01BB10  1B6B               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 47514                           
 47515                           ; BSR set to: 0
 47516  01BB12  C064  F052         	movff	i2___flsub@b,i2___fladd@b
 47517  01BB16  C065  F053         	movff	i2___flsub@b+1,i2___fladd@b+1
 47518  01BB1A  C066  F054         	movff	i2___flsub@b+2,i2___fladd@b+2
 47519  01BB1E  C067  F055         	movff	i2___flsub@b+3,i2___fladd@b+3
 47520  01BB22  C068  F056         	movff	i2___flsub@a,i2___fladd@a
 47521  01BB26  C069  F057         	movff	i2___flsub@a+1,i2___fladd@a+1
 47522  01BB2A  C06A  F058         	movff	i2___flsub@a+2,i2___fladd@a+2
 47523  01BB2E  C06B  F059         	movff	i2___flsub@a+3,i2___fladd@a+3
 47524  01BB32  EC85  F0BB         	call	i2___fladd	;wreg free
 47525  01BB36  C052  F064         	movff	?i2___fladd,?i2___flsub
 47526  01BB3A  C053  F065         	movff	?i2___fladd+1,?i2___flsub+1
 47527  01BB3E  C054  F066         	movff	?i2___fladd+2,?i2___flsub+2
 47528  01BB42  C055  F067         	movff	?i2___fladd+3,?i2___flsub+3
 47529  01BB46  0012               	return		;funcret
 47530  01BB48                     __end_ofi2___flsub:
 47531                           	opt callstack 0
 47532                           
 47533 ;; *************** function i2___fladd *****************
 47534 ;; Defined at:
 47535 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47536 ;; Parameters:    Size  Location     Type
 47537 ;;  b               4   81[COMRAM] unsigned char 
 47538 ;;  a               4   85[COMRAM] unsigned char 
 47539 ;; Auto vars:     Size  Location     Type
 47540 ;;  __fladd         1    3[BANK0 ] unsigned char 
 47541 ;;  __fladd         1    2[BANK0 ] unsigned char 
 47542 ;;  __fladd         1    1[BANK0 ] unsigned char 
 47543 ;;  __fladd         1    0[BANK0 ] unsigned char 
 47544 ;; Return value:  Size  Location     Type
 47545 ;;                  4   81[COMRAM] unsigned char 
 47546 ;; Registers used:
 47547 ;;		wreg, status,2, status,0
 47548 ;; Tracked objects:
 47549 ;;		On entry : 0/0
 47550 ;;		On exit  : 0/0
 47551 ;;		Unchanged: 0/0
 47552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47553 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47555 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47556 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47557 ;;Total ram usage:       16 bytes
 47558 ;; Hardware stack levels used:    1
 47559 ;; This function calls:
 47560 ;;		Nothing
 47561 ;; This function is called by:
 47562 ;;		_ADC_PostProcessingHandler
 47563 ;;		_heartbeatTimerHandler
 47564 ;;		i2__doprnt
 47565 ;;		i2___flsub
 47566 ;; This function uses a non-reentrant model
 47567 ;;
 47568                           
 47569                           	psect	text202
 47570  01770A                     __ptext202:
 47571                           	opt callstack 0
 47572  01770A                     i2___fladd:
 47573                           	opt callstack 14
 47574                           
 47575                           ;incstack = 0
 47576  01770A  5055               	movf	i2___fladd@b+3,w,c
 47577  01770C  0B80               	andlw	128
 47578  01770E  0100               	movlb	0	; () banked
 47579  017710  6F60               	movwf	i2___fladd@signs& (0+255),b
 47580  017712  5055               	movf	i2___fladd@b+3,w,c
 47581  017714  2455               	addwf	i2___fladd@b+3,w,c
 47582  017716  6F62               	movwf	i2___fladd@bexp& (0+255),b
 47583                           
 47584                           ; BSR set to: 0
 47585  017718  BE54               	btfsc	i2___fladd@b+2,7,c
 47586                           
 47587                           ; BSR set to: 0
 47588  01771A  8162               	bsf	i2___fladd@bexp& (0+255),0,b
 47589                           
 47590                           ; BSR set to: 0
 47591  01771C  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47592  01771E  B4D8               	btfsc	status,2,c
 47593  017720  D00D               	goto	i2l18949
 47594                           
 47595                           ; BSR set to: 0
 47596  017722  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47597  017724  A4D8               	btfss	status,2,c
 47598  017726  D008               	goto	i2l18945
 47599                           
 47600                           ; BSR set to: 0
 47601  017728  0E00               	movlw	0
 47602  01772A  6E52               	movwf	i2___fladd@b,c
 47603  01772C  0E00               	movlw	0
 47604  01772E  6E53               	movwf	i2___fladd@b+1,c
 47605  017730  0E00               	movlw	0
 47606  017732  6E54               	movwf	i2___fladd@b+2,c
 47607  017734  0E00               	movlw	0
 47608  017736  6E55               	movwf	i2___fladd@b+3,c
 47609  017738                     i2l18945:
 47610                           
 47611                           ; BSR set to: 0
 47612  017738  8E54               	bsf	i2___fladd@b+2,7,c
 47613  01773A  D006               	goto	L51
 47614  01773C                     i2l18949:
 47615                           
 47616                           ; BSR set to: 0
 47617  01773C  0E00               	movlw	0
 47618  01773E  6E52               	movwf	i2___fladd@b,c
 47619  017740  0E00               	movlw	0
 47620  017742  6E53               	movwf	i2___fladd@b+1,c
 47621  017744  0E00               	movlw	0
 47622  017746  6E54               	movwf	i2___fladd@b+2,c
 47623  017748                     L51:
 47624  017748  0E00               	movlw	0
 47625  01774A  6E55               	movwf	i2___fladd@b+3,c
 47626                           
 47627                           ; BSR set to: 0
 47628  01774C  5059               	movf	i2___fladd@a+3,w,c
 47629  01774E  0B80               	andlw	128
 47630  017750  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47631                           
 47632                           ; BSR set to: 0
 47633  017752  5160               	movf	i2___fladd@signs& (0+255),w,b
 47634  017754  1961               	xorwf	i2___fladd@aexp& (0+255),w,b
 47635  017756  A4D8               	btfss	status,2,c
 47636                           
 47637                           ; BSR set to: 0
 47638  017758  8D60               	bsf	i2___fladd@signs& (0+255),6,b
 47639                           
 47640                           ; BSR set to: 0
 47641  01775A  5059               	movf	i2___fladd@a+3,w,c
 47642  01775C  2459               	addwf	i2___fladd@a+3,w,c
 47643  01775E  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47644                           
 47645                           ; BSR set to: 0
 47646  017760  BE58               	btfsc	i2___fladd@a+2,7,c
 47647                           
 47648                           ; BSR set to: 0
 47649  017762  8161               	bsf	i2___fladd@aexp& (0+255),0,b
 47650                           
 47651                           ; BSR set to: 0
 47652  017764  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47653  017766  B4D8               	btfsc	status,2,c
 47654  017768  D00D               	goto	i2l18973
 47655                           
 47656                           ; BSR set to: 0
 47657  01776A  2961               	incf	i2___fladd@aexp& (0+255),w,b
 47658  01776C  A4D8               	btfss	status,2,c
 47659  01776E  D008               	goto	i2l18969
 47660                           
 47661                           ; BSR set to: 0
 47662  017770  0E00               	movlw	0
 47663  017772  6E56               	movwf	i2___fladd@a,c
 47664  017774  0E00               	movlw	0
 47665  017776  6E57               	movwf	i2___fladd@a+1,c
 47666  017778  0E00               	movlw	0
 47667  01777A  6E58               	movwf	i2___fladd@a+2,c
 47668  01777C  0E00               	movlw	0
 47669  01777E  6E59               	movwf	i2___fladd@a+3,c
 47670  017780                     i2l18969:
 47671                           
 47672                           ; BSR set to: 0
 47673  017780  8E58               	bsf	i2___fladd@a+2,7,c
 47674  017782  D006               	goto	L52
 47675  017784                     i2l18973:
 47676                           
 47677                           ; BSR set to: 0
 47678  017784  0E00               	movlw	0
 47679  017786  6E56               	movwf	i2___fladd@a,c
 47680  017788  0E00               	movlw	0
 47681  01778A  6E57               	movwf	i2___fladd@a+1,c
 47682  01778C  0E00               	movlw	0
 47683  01778E  6E58               	movwf	i2___fladd@a+2,c
 47684  017790                     L52:
 47685  017790  0E00               	movlw	0
 47686  017792  6E59               	movwf	i2___fladd@a+3,c
 47687                           
 47688                           ; BSR set to: 0
 47689  017794  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47690  017796  5D61               	subwf	i2___fladd@aexp& (0+255),w,b
 47691  017798  B0D8               	btfsc	status,0,c
 47692  01779A  D022               	goto	i2l19011
 47693                           
 47694                           ; BSR set to: 0
 47695  01779C  AD60               	btfss	i2___fladd@signs& (0+255),6,b
 47696  01779E  D002               	goto	i2l18981
 47697                           
 47698                           ; BSR set to: 0
 47699  0177A0  0E80               	movlw	128
 47700  0177A2  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47701  0177A4                     i2l18981:
 47702                           
 47703                           ; BSR set to: 0
 47704  0177A4  C062  F063         	movff	i2___fladd@bexp,i2___fladd@grs
 47705                           
 47706                           ; BSR set to: 0
 47707  0177A8  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47708                           
 47709                           ; BSR set to: 0
 47710  0177AC  C063  F061         	movff	i2___fladd@grs,i2___fladd@aexp
 47711                           
 47712                           ; BSR set to: 0
 47713  0177B0  C052  F063         	movff	i2___fladd@b,i2___fladd@grs
 47714                           
 47715                           ; BSR set to: 0
 47716  0177B4  C056  F052         	movff	i2___fladd@a,i2___fladd@b
 47717                           
 47718                           ; BSR set to: 0
 47719  0177B8  C063  F056         	movff	i2___fladd@grs,i2___fladd@a
 47720                           
 47721                           ; BSR set to: 0
 47722  0177BC  C053  F063         	movff	i2___fladd@b+1,i2___fladd@grs
 47723                           
 47724                           ; BSR set to: 0
 47725  0177C0  C057  F053         	movff	i2___fladd@a+1,i2___fladd@b+1
 47726                           
 47727                           ; BSR set to: 0
 47728  0177C4  C063  F057         	movff	i2___fladd@grs,i2___fladd@a+1
 47729                           
 47730                           ; BSR set to: 0
 47731  0177C8  C054  F063         	movff	i2___fladd@b+2,i2___fladd@grs
 47732                           
 47733                           ; BSR set to: 0
 47734  0177CC  C058  F054         	movff	i2___fladd@a+2,i2___fladd@b+2
 47735                           
 47736                           ; BSR set to: 0
 47737  0177D0  C063  F058         	movff	i2___fladd@grs,i2___fladd@a+2
 47738                           
 47739                           ; BSR set to: 0
 47740  0177D4  C055  F063         	movff	i2___fladd@b+3,i2___fladd@grs
 47741                           
 47742                           ; BSR set to: 0
 47743  0177D8  C059  F055         	movff	i2___fladd@a+3,i2___fladd@b+3
 47744                           
 47745                           ; BSR set to: 0
 47746  0177DC  C063  F059         	movff	i2___fladd@grs,i2___fladd@a+3
 47747  0177E0                     i2l19011:
 47748                           
 47749                           ; BSR set to: 0
 47750  0177E0  0E00               	movlw	0
 47751  0177E2  6F63               	movwf	i2___fladd@grs& (0+255),b
 47752                           
 47753                           ; BSR set to: 0
 47754  0177E4  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47755  0177E6  C061  F05A         	movff	i2___fladd@aexp,??i2___fladd
 47756  0177EA  6A5B               	clrf	(??i2___fladd+1)& (0+255),c
 47757  0177EC  5E5A               	subwf	??i2___fladd,f,c
 47758  0177EE  0E00               	movlw	0
 47759  0177F0  5A5B               	subwfb	??i2___fladd+1,f,c
 47760  0177F2  BE5B               	btfsc	??i2___fladd+1,7,c
 47761  0177F4  D02C               	goto	i2l3235
 47762  0177F6  505B               	movf	??i2___fladd+1,w,c
 47763  0177F8  E104               	bnz	i2u2396_40
 47764  0177FA  0E1A               	movlw	26
 47765  0177FC  5C5A               	subwf	??i2___fladd,w,c
 47766  0177FE  A0D8               	btfss	status,0,c
 47767  017800  D026               	goto	i2l3235
 47768  017802                     i2u2396_40:
 47769                           
 47770                           ; BSR set to: 0
 47771  017802  5052               	movf	i2___fladd@b,w,c
 47772  017804  1053               	iorwf	i2___fladd@b+1,w,c
 47773  017806  1054               	iorwf	i2___fladd@b+2,w,c
 47774  017808  1055               	iorwf	i2___fladd@b+3,w,c
 47775  01780A  B4D8               	btfsc	status,2,c
 47776  01780C  D002               	goto	i2u2397_40
 47777  01780E  0E01               	movlw	1
 47778  017810  D001               	goto	i2u2398_40
 47779  017812                     i2u2397_40:
 47780  017812  0E00               	movlw	0
 47781  017814                     i2u2398_40:
 47782  017814  6F63               	movwf	i2___fladd@grs& (0+255),b
 47783                           
 47784                           ; BSR set to: 0
 47785  017816  0E00               	movlw	0
 47786  017818  6E52               	movwf	i2___fladd@b,c
 47787  01781A  0E00               	movlw	0
 47788  01781C  6E53               	movwf	i2___fladd@b+1,c
 47789  01781E  0E00               	movlw	0
 47790  017820  6E54               	movwf	i2___fladd@b+2,c
 47791  017822  0E00               	movlw	0
 47792  017824  6E55               	movwf	i2___fladd@b+3,c
 47793                           
 47794                           ; BSR set to: 0
 47795  017826  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47796  01782A  D015               	goto	i2u2401_40
 47797  01782C                     i2l3236:
 47798                           
 47799                           ; BSR set to: 0
 47800  01782C  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47801  01782E  D005               	goto	i2l19023
 47802                           
 47803                           ; BSR set to: 0
 47804  017830  90D8               	bcf	status,0,c
 47805  017832  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47806  017834  0901               	iorlw	1
 47807  017836  6F63               	movwf	i2___fladd@grs& (0+255),b
 47808  017838  D002               	goto	i2l19025
 47809  01783A                     i2l19023:
 47810                           
 47811                           ; BSR set to: 0
 47812  01783A  90D8               	bcf	status,0,c
 47813  01783C  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47814  01783E                     i2l19025:
 47815                           
 47816                           ; BSR set to: 0
 47817  01783E  B052               	btfsc	i2___fladd@b,0,c
 47818                           
 47819                           ; BSR set to: 0
 47820  017840  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47821                           
 47822                           ; BSR set to: 0
 47823  017842  3455               	rlcf	i2___fladd@b+3,w,c
 47824  017844  3255               	rrcf	i2___fladd@b+3,f,c
 47825  017846  3254               	rrcf	i2___fladd@b+2,f,c
 47826  017848  3253               	rrcf	i2___fladd@b+1,f,c
 47827  01784A  3252               	rrcf	i2___fladd@b,f,c
 47828                           
 47829                           ; BSR set to: 0
 47830  01784C  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47831  01784E                     i2l3235:
 47832                           
 47833                           ; BSR set to: 0
 47834  01784E  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47835  017850  5D62               	subwf	i2___fladd@bexp& (0+255),w,b
 47836  017852  A0D8               	btfss	status,0,c
 47837  017854  D7EB               	goto	i2l3236
 47838  017856                     i2u2401_40:
 47839                           
 47840                           ; BSR set to: 0
 47841  017856  BD60               	btfsc	i2___fladd@signs& (0+255),6,b
 47842  017858  D028               	goto	i2l19057
 47843                           
 47844                           ; BSR set to: 0
 47845  01785A  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47846  01785C  A4D8               	btfss	status,2,c
 47847  01785E  D009               	goto	i2l19039
 47848                           
 47849                           ; BSR set to: 0
 47850  017860  0E00               	movlw	0
 47851  017862  6E52               	movwf	?i2___fladd,c
 47852  017864  0E00               	movlw	0
 47853  017866  6E53               	movwf	?i2___fladd+1,c
 47854  017868  0E00               	movlw	0
 47855  01786A  6E54               	movwf	?i2___fladd+2,c
 47856  01786C  0E00               	movlw	0
 47857  01786E  6E55               	movwf	?i2___fladd+3,c
 47858  017870  0012               	return	
 47859  017872                     i2l19039:
 47860                           
 47861                           ; BSR set to: 0
 47862  017872  5056               	movf	i2___fladd@a,w,c
 47863  017874  2652               	addwf	i2___fladd@b,f,c
 47864  017876  5057               	movf	i2___fladd@a+1,w,c
 47865  017878  2253               	addwfc	i2___fladd@b+1,f,c
 47866  01787A  5058               	movf	i2___fladd@a+2,w,c
 47867  01787C  2254               	addwfc	i2___fladd@b+2,f,c
 47868  01787E  5059               	movf	i2___fladd@a+3,w,c
 47869  017880  2255               	addwfc	i2___fladd@b+3,f,c
 47870                           
 47871                           ; BSR set to: 0
 47872  017882  A055               	btfss	i2___fladd@b+3,0,c
 47873  017884  D071               	goto	i2u2414_40
 47874                           
 47875                           ; BSR set to: 0
 47876  017886  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47877  017888  D005               	goto	i2l19047
 47878                           
 47879                           ; BSR set to: 0
 47880  01788A  90D8               	bcf	status,0,c
 47881  01788C  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47882  01788E  0901               	iorlw	1
 47883  017890  6F63               	movwf	i2___fladd@grs& (0+255),b
 47884  017892  D002               	goto	i2l19049
 47885  017894                     i2l19047:
 47886                           
 47887                           ; BSR set to: 0
 47888  017894  90D8               	bcf	status,0,c
 47889  017896  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47890  017898                     i2l19049:
 47891                           
 47892                           ; BSR set to: 0
 47893  017898  B052               	btfsc	i2___fladd@b,0,c
 47894                           
 47895                           ; BSR set to: 0
 47896  01789A  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47897                           
 47898                           ; BSR set to: 0
 47899  01789C  3455               	rlcf	i2___fladd@b+3,w,c
 47900  01789E  3255               	rrcf	i2___fladd@b+3,f,c
 47901  0178A0  3254               	rrcf	i2___fladd@b+2,f,c
 47902  0178A2  3253               	rrcf	i2___fladd@b+1,f,c
 47903  0178A4  3252               	rrcf	i2___fladd@b,f,c
 47904                           
 47905                           ; BSR set to: 0
 47906  0178A6  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47907  0178A8  D05F               	goto	i2u2414_40
 47908  0178AA                     i2l19057:
 47909                           
 47910                           ; BSR set to: 0
 47911  0178AA  5056               	movf	i2___fladd@a,w,c
 47912  0178AC  5C52               	subwf	i2___fladd@b,w,c
 47913  0178AE  5057               	movf	i2___fladd@a+1,w,c
 47914  0178B0  5853               	subwfb	i2___fladd@b+1,w,c
 47915  0178B2  5058               	movf	i2___fladd@a+2,w,c
 47916  0178B4  5854               	subwfb	i2___fladd@b+2,w,c
 47917  0178B6  5055               	movf	i2___fladd@b+3,w,c
 47918  0178B8  0A80               	xorlw	128
 47919  0178BA  6E5A               	movwf	??i2___fladd& (0+255),c
 47920  0178BC  5059               	movf	i2___fladd@a+3,w,c
 47921  0178BE  0A80               	xorlw	128
 47922  0178C0  585A               	subwfb	??i2___fladd& (0+255),w,c
 47923  0178C2  B0D8               	btfsc	status,0,c
 47924  0178C4  D025               	goto	i2l19067
 47925                           
 47926                           ; BSR set to: 0
 47927  0178C6  5052               	movf	i2___fladd@b,w,c
 47928  0178C8  5C56               	subwf	i2___fladd@a,w,c
 47929  0178CA  6E5A               	movwf	??i2___fladd& (0+255),c
 47930  0178CC  5053               	movf	i2___fladd@b+1,w,c
 47931  0178CE  5857               	subwfb	i2___fladd@a+1,w,c
 47932  0178D0  6E5B               	movwf	(??i2___fladd+1)& (0+255),c
 47933  0178D2  5054               	movf	i2___fladd@b+2,w,c
 47934  0178D4  5858               	subwfb	i2___fladd@a+2,w,c
 47935  0178D6  6E5C               	movwf	(??i2___fladd+2)& (0+255),c
 47936  0178D8  5055               	movf	i2___fladd@b+3,w,c
 47937  0178DA  5859               	subwfb	i2___fladd@a+3,w,c
 47938  0178DC  6E5D               	movwf	(??i2___fladd+3)& (0+255),c
 47939  0178DE  0EFF               	movlw	255
 47940  0178E0  245A               	addwf	??i2___fladd,w,c
 47941  0178E2  6E52               	movwf	i2___fladd@b,c
 47942  0178E4  0EFF               	movlw	255
 47943  0178E6  205B               	addwfc	??i2___fladd+1,w,c
 47944  0178E8  6E53               	movwf	i2___fladd@b+1,c
 47945  0178EA  0EFF               	movlw	255
 47946  0178EC  205C               	addwfc	??i2___fladd+2,w,c
 47947  0178EE  6E54               	movwf	i2___fladd@b+2,c
 47948  0178F0  0EFF               	movlw	255
 47949  0178F2  205D               	addwfc	??i2___fladd+3,w,c
 47950  0178F4  6E55               	movwf	i2___fladd@b+3,c
 47951  0178F6  0E80               	movlw	128
 47952  0178F8  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47953                           
 47954                           ; BSR set to: 0
 47955  0178FA  6D63               	negf	i2___fladd@grs& (0+255),b
 47956                           
 47957                           ; BSR set to: 0
 47958  0178FC  5163               	movf	i2___fladd@grs& (0+255),w,b
 47959  0178FE  A4D8               	btfss	status,2,c
 47960  017900  D00F               	goto	i2l3251
 47961                           
 47962                           ; BSR set to: 0
 47963  017902  0E01               	movlw	1
 47964  017904  2652               	addwf	i2___fladd@b,f,c
 47965  017906  0E00               	movlw	0
 47966  017908  2253               	addwfc	i2___fladd@b+1,f,c
 47967  01790A  2254               	addwfc	i2___fladd@b+2,f,c
 47968  01790C  2255               	addwfc	i2___fladd@b+3,f,c
 47969  01790E  D008               	goto	i2l3251
 47970  017910                     i2l19067:
 47971                           
 47972                           ; BSR set to: 0
 47973  017910  5056               	movf	i2___fladd@a,w,c
 47974  017912  5E52               	subwf	i2___fladd@b,f,c
 47975  017914  5057               	movf	i2___fladd@a+1,w,c
 47976  017916  5A53               	subwfb	i2___fladd@b+1,f,c
 47977  017918  5058               	movf	i2___fladd@a+2,w,c
 47978  01791A  5A54               	subwfb	i2___fladd@b+2,f,c
 47979  01791C  5059               	movf	i2___fladd@a+3,w,c
 47980  01791E  5A55               	subwfb	i2___fladd@b+3,f,c
 47981  017920                     i2l3251:
 47982                           
 47983                           ; BSR set to: 0
 47984  017920  5052               	movf	i2___fladd@b,w,c
 47985  017922  1053               	iorwf	i2___fladd@b+1,w,c
 47986  017924  1054               	iorwf	i2___fladd@b+2,w,c
 47987  017926  1055               	iorwf	i2___fladd@b+3,w,c
 47988  017928  A4D8               	btfss	status,2,c
 47989  01792A  D01C               	goto	i2l19091
 47990                           
 47991                           ; BSR set to: 0
 47992  01792C  5163               	movf	i2___fladd@grs& (0+255),w,b
 47993  01792E  A4D8               	btfss	status,2,c
 47994  017930  D019               	goto	i2l19091
 47995                           
 47996                           ; BSR set to: 0
 47997  017932  0E00               	movlw	0
 47998  017934  6E52               	movwf	?i2___fladd,c
 47999  017936  0E00               	movlw	0
 48000  017938  6E53               	movwf	?i2___fladd+1,c
 48001  01793A  0E00               	movlw	0
 48002  01793C  6E54               	movwf	?i2___fladd+2,c
 48003  01793E  0E00               	movlw	0
 48004  017940  6E55               	movwf	?i2___fladd+3,c
 48005  017942  0012               	return	
 48006  017944                     i2l19075:
 48007                           
 48008                           ; BSR set to: 0
 48009  017944  90D8               	bcf	status,0,c
 48010  017946  3652               	rlcf	i2___fladd@b,f,c
 48011  017948  3653               	rlcf	i2___fladd@b+1,f,c
 48012  01794A  3654               	rlcf	i2___fladd@b+2,f,c
 48013  01794C  3655               	rlcf	i2___fladd@b+3,f,c
 48014                           
 48015                           ; BSR set to: 0
 48016  01794E  BF63               	btfsc	i2___fladd@grs& (0+255),7,b
 48017                           
 48018                           ; BSR set to: 0
 48019  017950  8052               	bsf	i2___fladd@b,0,c
 48020                           
 48021                           ; BSR set to: 0
 48022  017952  A163               	btfss	i2___fladd@grs& (0+255),0,b
 48023  017954  D002               	goto	i2l19085
 48024                           
 48025                           ; BSR set to: 0
 48026  017956  80D8               	bsf	status,0,c
 48027  017958  D001               	goto	L53
 48028  01795A                     i2l19085:
 48029                           
 48030                           ; BSR set to: 0
 48031  01795A  90D8               	bcf	status,0,c
 48032  01795C                     L53:
 48033  01795C  3763               	rlcf	i2___fladd@grs& (0+255),f,b
 48034                           
 48035                           ; BSR set to: 0
 48036  01795E  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48037  017960  A4D8               	btfss	status,2,c
 48038                           
 48039                           ; BSR set to: 0
 48040  017962  0762               	decf	i2___fladd@bexp& (0+255),f,b
 48041  017964                     i2l19091:
 48042                           
 48043                           ; BSR set to: 0
 48044  017964  AE54               	btfss	i2___fladd@b+2,7,c
 48045  017966  D7EE               	goto	i2l19075
 48046  017968                     i2u2414_40:
 48047                           
 48048                           ; BSR set to: 0
 48049  017968  0E00               	movlw	0
 48050  01796A  6F61               	movwf	i2___fladd@aexp& (0+255),b
 48051                           
 48052                           ; BSR set to: 0
 48053  01796C  AF63               	btfss	i2___fladd@grs& (0+255),7,b
 48054  01796E  D00B               	goto	i2l3260
 48055                           
 48056                           ; BSR set to: 0
 48057  017970  C063  F05A         	movff	i2___fladd@grs,??i2___fladd
 48058  017974  0E7F               	movlw	127
 48059  017976  165A               	andwf	??i2___fladd,f,c
 48060  017978  B4D8               	btfsc	status,2,c
 48061  01797A  D003               	goto	i2l3261
 48062  01797C                     i2u2416_40:
 48063                           
 48064                           ; BSR set to: 0
 48065  01797C  0E01               	movlw	1
 48066  01797E  6F61               	movwf	i2___fladd@aexp& (0+255),b
 48067  017980  D002               	goto	i2l3260
 48068  017982                     i2l3261:
 48069                           
 48070                           ; BSR set to: 0
 48071  017982  B052               	btfsc	i2___fladd@b,0,c
 48072  017984  D7FB               	goto	i2u2416_40
 48073  017986                     i2l3260:
 48074                           
 48075                           ; BSR set to: 0
 48076  017986  5161               	movf	i2___fladd@aexp& (0+255),w,b
 48077  017988  B4D8               	btfsc	status,2,c
 48078  01798A  D020               	goto	i2l19111
 48079                           
 48080                           ; BSR set to: 0
 48081  01798C  0E01               	movlw	1
 48082  01798E  2652               	addwf	i2___fladd@b,f,c
 48083  017990  0E00               	movlw	0
 48084  017992  2253               	addwfc	i2___fladd@b+1,f,c
 48085  017994  2254               	addwfc	i2___fladd@b+2,f,c
 48086  017996  2255               	addwfc	i2___fladd@b+3,f,c
 48087                           
 48088                           ; BSR set to: 0
 48089  017998  A055               	btfss	i2___fladd@b+3,0,c
 48090  01799A  D018               	goto	i2l19111
 48091                           
 48092                           ; BSR set to: 0
 48093  01799C  C052  F05A         	movff	i2___fladd@b,??i2___fladd
 48094  0179A0  C053  F05B         	movff	i2___fladd@b+1,??i2___fladd+1
 48095  0179A4  C054  F05C         	movff	i2___fladd@b+2,??i2___fladd+2
 48096  0179A8  C055  F05D         	movff	i2___fladd@b+3,??i2___fladd+3
 48097  0179AC  345D               	rlcf	??i2___fladd+3,w,c
 48098  0179AE  325D               	rrcf	??i2___fladd+3,f,c
 48099  0179B0  325C               	rrcf	??i2___fladd+2,f,c
 48100  0179B2  325B               	rrcf	??i2___fladd+1,f,c
 48101  0179B4  325A               	rrcf	??i2___fladd,f,c
 48102  0179B6  C05A  F052         	movff	??i2___fladd,i2___fladd@b
 48103  0179BA  C05B  F053         	movff	??i2___fladd+1,i2___fladd@b+1
 48104  0179BE  C05C  F054         	movff	??i2___fladd+2,i2___fladd@b+2
 48105  0179C2  C05D  F055         	movff	??i2___fladd+3,i2___fladd@b+3
 48106  0179C6  2962               	incf	i2___fladd@bexp& (0+255),w,b
 48107  0179C8  A4D8               	btfss	status,2,c
 48108                           
 48109                           ; BSR set to: 0
 48110  0179CA  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 48111  0179CC                     i2l19111:
 48112                           
 48113                           ; BSR set to: 0
 48114  0179CC  2962               	incf	i2___fladd@bexp& (0+255),w,b
 48115  0179CE  B4D8               	btfsc	status,2,c
 48116  0179D0  D003               	goto	i2u2422_40
 48117                           
 48118                           ; BSR set to: 0
 48119  0179D2  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48120  0179D4  A4D8               	btfss	status,2,c
 48121  0179D6  D00D               	goto	i2l19119
 48122  0179D8                     i2u2422_40:
 48123                           
 48124                           ; BSR set to: 0
 48125  0179D8  0E00               	movlw	0
 48126  0179DA  6E52               	movwf	i2___fladd@b,c
 48127  0179DC  0E00               	movlw	0
 48128  0179DE  6E53               	movwf	i2___fladd@b+1,c
 48129  0179E0  0E00               	movlw	0
 48130  0179E2  6E54               	movwf	i2___fladd@b+2,c
 48131  0179E4  0E00               	movlw	0
 48132  0179E6  6E55               	movwf	i2___fladd@b+3,c
 48133  0179E8  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48134  0179EA  A4D8               	btfss	status,2,c
 48135  0179EC  D002               	goto	i2l19119
 48136                           
 48137                           ; BSR set to: 0
 48138  0179EE  0E00               	movlw	0
 48139  0179F0  6F60               	movwf	i2___fladd@signs& (0+255),b
 48140  0179F2                     i2l19119:
 48141                           
 48142                           ; BSR set to: 0
 48143  0179F2  A162               	btfss	i2___fladd@bexp& (0+255),0,b
 48144  0179F4  D002               	goto	i2l19123
 48145                           
 48146                           ; BSR set to: 0
 48147  0179F6  8E54               	bsf	i2___fladd@b+2,7,c
 48148  0179F8  D001               	goto	i2l19125
 48149  0179FA                     i2l19123:
 48150                           
 48151                           ; BSR set to: 0
 48152  0179FA  9E54               	bcf	i2___fladd@b+2,7,c
 48153  0179FC                     i2l19125:
 48154                           
 48155                           ; BSR set to: 0
 48156  0179FC  90D8               	bcf	status,0,c
 48157  0179FE  3162               	rrcf	i2___fladd@bexp& (0+255),w,b
 48158  017A00  6E55               	movwf	i2___fladd@b+3,c
 48159                           
 48160                           ; BSR set to: 0
 48161  017A02  BF60               	btfsc	i2___fladd@signs& (0+255),7,b
 48162                           
 48163                           ; BSR set to: 0
 48164  017A04  8E55               	bsf	i2___fladd@b+3,7,c
 48165                           
 48166                           ; BSR set to: 0
 48167  017A06  C052  F052         	movff	i2___fladd@b,?i2___fladd
 48168  017A0A  C053  F053         	movff	i2___fladd@b+1,?i2___fladd+1
 48169  017A0E  C054  F054         	movff	i2___fladd@b+2,?i2___fladd+2
 48170  017A12  C055  F055         	movff	i2___fladd@b+3,?i2___fladd+3
 48171                           
 48172                           ; BSR set to: 0
 48173  017A16  0012               	return		;funcret
 48174  017A18                     __end_ofi2___fladd:
 48175                           	opt callstack 0
 48176                           
 48177 ;; *************** function i2___flmul *****************
 48178 ;; Defined at:
 48179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 48180 ;; Parameters:    Size  Location     Type
 48181 ;;  b               4   43[COMRAM] unsigned char 
 48182 ;;  a               4   47[COMRAM] unsigned char 
 48183 ;; Auto vars:     Size  Location     Type
 48184 ;;  __flmul         4   62[COMRAM] struct .
 48185 ;;  __flmul         4   57[COMRAM] unsigned long 
 48186 ;;  __flmul         2   66[COMRAM] struct .
 48187 ;;  __flmul         1   61[COMRAM] unsigned char 
 48188 ;;  __flmul         1   56[COMRAM] unsigned char 
 48189 ;;  __flmul         1   55[COMRAM] unsigned char 
 48190 ;; Return value:  Size  Location     Type
 48191 ;;                  4   43[COMRAM] unsigned char 
 48192 ;; Registers used:
 48193 ;;		wreg, status,2, status,0, prodl, prodh
 48194 ;; Tracked objects:
 48195 ;;		On entry : 0/0
 48196 ;;		On exit  : 0/0
 48197 ;;		Unchanged: 0/0
 48198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48199 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48200 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48202 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48203 ;;Total ram usage:       25 bytes
 48204 ;; Hardware stack levels used:    1
 48205 ;; This function calls:
 48206 ;;		Nothing
 48207 ;; This function is called by:
 48208 ;;		_ADC_PostProcessingHandler
 48209 ;;		i2_fround
 48210 ;;		i2_scale
 48211 ;;		i2__doprnt
 48212 ;; This function uses a non-reentrant model
 48213 ;;
 48214                           
 48215                           	psect	text203
 48216  016D9C                     __ptext203:
 48217                           	opt callstack 0
 48218  016D9C                     i2___flmul:
 48219                           	opt callstack 12
 48220                           
 48221                           ; BSR set to: 0
 48222                           ;incstack = 0
 48223  016D9C  502F               	movf	i2___flmul@b+3,w,c
 48224  016D9E  0B80               	andlw	128
 48225  016DA0  6E38               	movwf	i2___flmul@sign,c
 48226  016DA2  502F               	movf	i2___flmul@b+3,w,c
 48227  016DA4  242F               	addwf	i2___flmul@b+3,w,c
 48228  016DA6  6E3E               	movwf	i2___flmul@bexp,c
 48229  016DA8  BE2E               	btfsc	i2___flmul@b+2,7,c
 48230  016DAA  803E               	bsf	i2___flmul@bexp,0,c
 48231  016DAC  503E               	movf	i2___flmul@bexp,w,c
 48232  016DAE  B4D8               	btfsc	status,2,c
 48233  016DB0  D00D               	goto	i2l19149
 48234  016DB2  283E               	incf	i2___flmul@bexp,w,c
 48235  016DB4  A4D8               	btfss	status,2,c
 48236  016DB6  D008               	goto	i2l19147
 48237  016DB8  0E00               	movlw	0
 48238  016DBA  6E2C               	movwf	i2___flmul@b,c
 48239  016DBC  0E00               	movlw	0
 48240  016DBE  6E2D               	movwf	i2___flmul@b+1,c
 48241  016DC0  0E00               	movlw	0
 48242  016DC2  6E2E               	movwf	i2___flmul@b+2,c
 48243  016DC4  0E00               	movlw	0
 48244  016DC6  6E2F               	movwf	i2___flmul@b+3,c
 48245  016DC8                     i2l19147:
 48246  016DC8  8E2E               	bsf	i2___flmul@b+2,7,c
 48247  016DCA  D008               	goto	i2l19151
 48248  016DCC                     i2l19149:
 48249  016DCC  0E00               	movlw	0
 48250  016DCE  6E2C               	movwf	i2___flmul@b,c
 48251  016DD0  0E00               	movlw	0
 48252  016DD2  6E2D               	movwf	i2___flmul@b+1,c
 48253  016DD4  0E00               	movlw	0
 48254  016DD6  6E2E               	movwf	i2___flmul@b+2,c
 48255  016DD8  0E00               	movlw	0
 48256  016DDA  6E2F               	movwf	i2___flmul@b+3,c
 48257  016DDC                     i2l19151:
 48258  016DDC  5033               	movf	i2___flmul@a+3,w,c
 48259  016DDE  0B80               	andlw	128
 48260  016DE0  1A38               	xorwf	i2___flmul@sign,f,c
 48261  016DE2  5033               	movf	i2___flmul@a+3,w,c
 48262  016DE4  2433               	addwf	i2___flmul@a+3,w,c
 48263  016DE6  6E39               	movwf	i2___flmul@aexp,c
 48264  016DE8  BE32               	btfsc	i2___flmul@a+2,7,c
 48265  016DEA  8039               	bsf	i2___flmul@aexp,0,c
 48266  016DEC  5039               	movf	i2___flmul@aexp,w,c
 48267  016DEE  B4D8               	btfsc	status,2,c
 48268  016DF0  D00D               	goto	i2l19167
 48269  016DF2  2839               	incf	i2___flmul@aexp,w,c
 48270  016DF4  A4D8               	btfss	status,2,c
 48271  016DF6  D008               	goto	i2l19165
 48272  016DF8  0E00               	movlw	0
 48273  016DFA  6E30               	movwf	i2___flmul@a,c
 48274  016DFC  0E00               	movlw	0
 48275  016DFE  6E31               	movwf	i2___flmul@a+1,c
 48276  016E00  0E00               	movlw	0
 48277  016E02  6E32               	movwf	i2___flmul@a+2,c
 48278  016E04  0E00               	movlw	0
 48279  016E06  6E33               	movwf	i2___flmul@a+3,c
 48280  016E08                     i2l19165:
 48281  016E08  8E32               	bsf	i2___flmul@a+2,7,c
 48282  016E0A  D008               	goto	i2l3320
 48283  016E0C                     i2l19167:
 48284  016E0C  0E00               	movlw	0
 48285  016E0E  6E30               	movwf	i2___flmul@a,c
 48286  016E10  0E00               	movlw	0
 48287  016E12  6E31               	movwf	i2___flmul@a+1,c
 48288  016E14  0E00               	movlw	0
 48289  016E16  6E32               	movwf	i2___flmul@a+2,c
 48290  016E18  0E00               	movlw	0
 48291  016E1A  6E33               	movwf	i2___flmul@a+3,c
 48292  016E1C                     i2l3320:
 48293  016E1C  5039               	movf	i2___flmul@aexp,w,c
 48294  016E1E  B4D8               	btfsc	status,2,c
 48295  016E20  D003               	goto	i2u2433_40
 48296  016E22  503E               	movf	i2___flmul@bexp,w,c
 48297  016E24  A4D8               	btfss	status,2,c
 48298  016E26  D009               	goto	i2l19175
 48299  016E28                     i2u2433_40:
 48300  016E28  0E00               	movlw	0
 48301  016E2A  6E2C               	movwf	?i2___flmul,c
 48302  016E2C  0E00               	movlw	0
 48303  016E2E  6E2D               	movwf	?i2___flmul+1,c
 48304  016E30  0E00               	movlw	0
 48305  016E32  6E2E               	movwf	?i2___flmul+2,c
 48306  016E34  0E00               	movlw	0
 48307  016E36  6E2F               	movwf	?i2___flmul+3,c
 48308  016E38  0012               	return	
 48309  016E3A                     i2l19175:
 48310  016E3A  5032               	movf	i2___flmul@a+2,w,c
 48311  016E3C  022C               	mulwf	i2___flmul@b,c
 48312  016E3E  CFF3 F043          	movff	prodl,i2___flmul@temp
 48313  016E42  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48314  016E46  5043               	movf	i2___flmul@temp,w,c
 48315  016E48  6E3A               	movwf	i2___flmul@grs,c
 48316  016E4A  6A3B               	clrf	i2___flmul@grs+1,c
 48317  016E4C  6A3C               	clrf	i2___flmul@grs+2,c
 48318  016E4E  6A3D               	clrf	i2___flmul@grs+3,c
 48319  016E50  5044               	movf	i2___flmul@temp+1,w,c
 48320  016E52  6E3F               	movwf	i2___flmul@prod,c
 48321  016E54  6A40               	clrf	i2___flmul@prod+1,c
 48322  016E56  6A41               	clrf	i2___flmul@prod+2,c
 48323  016E58  6A42               	clrf	i2___flmul@prod+3,c
 48324  016E5A  5031               	movf	i2___flmul@a+1,w,c
 48325  016E5C  022D               	mulwf	i2___flmul@b+1,c
 48326  016E5E  CFF3 F043          	movff	prodl,i2___flmul@temp
 48327  016E62  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48328  016E66  5043               	movf	i2___flmul@temp,w,c
 48329  016E68  263A               	addwf	i2___flmul@grs,f,c
 48330  016E6A  0E00               	movlw	0
 48331  016E6C  223B               	addwfc	i2___flmul@grs+1,f,c
 48332  016E6E  223C               	addwfc	i2___flmul@grs+2,f,c
 48333  016E70  223D               	addwfc	i2___flmul@grs+3,f,c
 48334  016E72  5044               	movf	i2___flmul@temp+1,w,c
 48335  016E74  263F               	addwf	i2___flmul@prod,f,c
 48336  016E76  0E00               	movlw	0
 48337  016E78  2240               	addwfc	i2___flmul@prod+1,f,c
 48338  016E7A  2241               	addwfc	i2___flmul@prod+2,f,c
 48339  016E7C  2242               	addwfc	i2___flmul@prod+3,f,c
 48340  016E7E  5030               	movf	i2___flmul@a,w,c
 48341  016E80  022E               	mulwf	i2___flmul@b+2,c
 48342  016E82  CFF3 F043          	movff	prodl,i2___flmul@temp
 48343  016E86  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48344  016E8A  5043               	movf	i2___flmul@temp,w,c
 48345  016E8C  263A               	addwf	i2___flmul@grs,f,c
 48346  016E8E  0E00               	movlw	0
 48347  016E90  223B               	addwfc	i2___flmul@grs+1,f,c
 48348  016E92  223C               	addwfc	i2___flmul@grs+2,f,c
 48349  016E94  223D               	addwfc	i2___flmul@grs+3,f,c
 48350  016E96  5044               	movf	i2___flmul@temp+1,w,c
 48351  016E98  263F               	addwf	i2___flmul@prod,f,c
 48352  016E9A  0E00               	movlw	0
 48353  016E9C  2240               	addwfc	i2___flmul@prod+1,f,c
 48354  016E9E  2241               	addwfc	i2___flmul@prod+2,f,c
 48355  016EA0  2242               	addwfc	i2___flmul@prod+3,f,c
 48356  016EA2  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48357  016EA6  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48358  016EAA  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48359  016EAE  6A3A               	clrf	i2___flmul@grs,c
 48360  016EB0  5030               	movf	i2___flmul@a,w,c
 48361  016EB2  022D               	mulwf	i2___flmul@b+1,c
 48362  016EB4  CFF3 F043          	movff	prodl,i2___flmul@temp
 48363  016EB8  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48364  016EBC  5043               	movf	i2___flmul@temp,w,c
 48365  016EBE  263A               	addwf	i2___flmul@grs,f,c
 48366  016EC0  5044               	movf	i2___flmul@temp+1,w,c
 48367  016EC2  223B               	addwfc	i2___flmul@grs+1,f,c
 48368  016EC4  0E00               	movlw	0
 48369  016EC6  223C               	addwfc	i2___flmul@grs+2,f,c
 48370  016EC8  0E00               	movlw	0
 48371  016ECA  223D               	addwfc	i2___flmul@grs+3,f,c
 48372  016ECC  5031               	movf	i2___flmul@a+1,w,c
 48373  016ECE  022C               	mulwf	i2___flmul@b,c
 48374  016ED0  CFF3 F043          	movff	prodl,i2___flmul@temp
 48375  016ED4  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48376  016ED8  5043               	movf	i2___flmul@temp,w,c
 48377  016EDA  263A               	addwf	i2___flmul@grs,f,c
 48378  016EDC  5044               	movf	i2___flmul@temp+1,w,c
 48379  016EDE  223B               	addwfc	i2___flmul@grs+1,f,c
 48380  016EE0  0E00               	movlw	0
 48381  016EE2  223C               	addwfc	i2___flmul@grs+2,f,c
 48382  016EE4  0E00               	movlw	0
 48383  016EE6  223D               	addwfc	i2___flmul@grs+3,f,c
 48384  016EE8  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48385  016EEC  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48386  016EF0  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48387  016EF4  6A3A               	clrf	i2___flmul@grs,c
 48388  016EF6  5030               	movf	i2___flmul@a,w,c
 48389  016EF8  022C               	mulwf	i2___flmul@b,c
 48390  016EFA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48391  016EFE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48392  016F02  5043               	movf	i2___flmul@temp,w,c
 48393  016F04  263A               	addwf	i2___flmul@grs,f,c
 48394  016F06  5044               	movf	i2___flmul@temp+1,w,c
 48395  016F08  223B               	addwfc	i2___flmul@grs+1,f,c
 48396  016F0A  0E00               	movlw	0
 48397  016F0C  223C               	addwfc	i2___flmul@grs+2,f,c
 48398  016F0E  0E00               	movlw	0
 48399  016F10  223D               	addwfc	i2___flmul@grs+3,f,c
 48400  016F12  5032               	movf	i2___flmul@a+2,w,c
 48401  016F14  022D               	mulwf	i2___flmul@b+1,c
 48402  016F16  CFF3 F043          	movff	prodl,i2___flmul@temp
 48403  016F1A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48404  016F1E  5043               	movf	i2___flmul@temp,w,c
 48405  016F20  263F               	addwf	i2___flmul@prod,f,c
 48406  016F22  5044               	movf	i2___flmul@temp+1,w,c
 48407  016F24  2240               	addwfc	i2___flmul@prod+1,f,c
 48408  016F26  0E00               	movlw	0
 48409  016F28  2241               	addwfc	i2___flmul@prod+2,f,c
 48410  016F2A  0E00               	movlw	0
 48411  016F2C  2242               	addwfc	i2___flmul@prod+3,f,c
 48412  016F2E  5031               	movf	i2___flmul@a+1,w,c
 48413  016F30  022E               	mulwf	i2___flmul@b+2,c
 48414  016F32  CFF3 F043          	movff	prodl,i2___flmul@temp
 48415  016F36  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48416  016F3A  5043               	movf	i2___flmul@temp,w,c
 48417  016F3C  263F               	addwf	i2___flmul@prod,f,c
 48418  016F3E  5044               	movf	i2___flmul@temp+1,w,c
 48419  016F40  2240               	addwfc	i2___flmul@prod+1,f,c
 48420  016F42  0E00               	movlw	0
 48421  016F44  2241               	addwfc	i2___flmul@prod+2,f,c
 48422  016F46  0E00               	movlw	0
 48423  016F48  2242               	addwfc	i2___flmul@prod+3,f,c
 48424  016F4A  5032               	movf	i2___flmul@a+2,w,c
 48425  016F4C  022E               	mulwf	i2___flmul@b+2,c
 48426  016F4E  CFF3 F043          	movff	prodl,i2___flmul@temp
 48427  016F52  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48428  016F56  5043               	movf	i2___flmul@temp,w,c
 48429  016F58  6E34               	movwf	??i2___flmul& (0+255),c
 48430  016F5A  5044               	movf	i2___flmul@temp+1,w,c
 48431  016F5C  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48432  016F5E  6A36               	clrf	(??i2___flmul+2)& (0+255),c
 48433  016F60  6A37               	clrf	(??i2___flmul+3)& (0+255),c
 48434  016F62  C036  F037         	movff	??i2___flmul+2,??i2___flmul+3
 48435  016F66  C035  F036         	movff	??i2___flmul+1,??i2___flmul+2
 48436  016F6A  C034  F035         	movff	??i2___flmul,??i2___flmul+1
 48437  016F6E  6A34               	clrf	??i2___flmul,c
 48438  016F70  5034               	movf	??i2___flmul,w,c
 48439  016F72  263F               	addwf	i2___flmul@prod,f,c
 48440  016F74  5035               	movf	??i2___flmul+1,w,c
 48441  016F76  2240               	addwfc	i2___flmul@prod+1,f,c
 48442  016F78  5036               	movf	??i2___flmul+2,w,c
 48443  016F7A  2241               	addwfc	i2___flmul@prod+2,f,c
 48444  016F7C  5037               	movf	??i2___flmul+3,w,c
 48445  016F7E  2242               	addwfc	i2___flmul@prod+3,f,c
 48446  016F80  C03A  F034         	movff	i2___flmul@grs,??i2___flmul
 48447  016F84  C03B  F035         	movff	i2___flmul@grs+1,??i2___flmul+1
 48448  016F88  C03C  F036         	movff	i2___flmul@grs+2,??i2___flmul+2
 48449  016F8C  C03D  F037         	movff	i2___flmul@grs+3,??i2___flmul+3
 48450  016F90  0E19               	movlw	25
 48451  016F92  D005               	goto	i2u2434_40
 48452  016F94                     i2u2434_45:
 48453  016F94  90D8               	bcf	status,0,c
 48454  016F96  3237               	rrcf	??i2___flmul+3,f,c
 48455  016F98  3236               	rrcf	??i2___flmul+2,f,c
 48456  016F9A  3235               	rrcf	??i2___flmul+1,f,c
 48457  016F9C  3234               	rrcf	??i2___flmul,f,c
 48458  016F9E                     i2u2434_40:
 48459  016F9E  2EE8               	decfsz	wreg,f,c
 48460  016FA0  D7F9               	goto	i2u2434_45
 48461  016FA2  5034               	movf	??i2___flmul,w,c
 48462  016FA4  263F               	addwf	i2___flmul@prod,f,c
 48463  016FA6  5035               	movf	??i2___flmul+1,w,c
 48464  016FA8  2240               	addwfc	i2___flmul@prod+1,f,c
 48465  016FAA  5036               	movf	??i2___flmul+2,w,c
 48466  016FAC  2241               	addwfc	i2___flmul@prod+2,f,c
 48467  016FAE  5037               	movf	??i2___flmul+3,w,c
 48468  016FB0  2242               	addwfc	i2___flmul@prod+3,f,c
 48469  016FB2  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48470  016FB6  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48471  016FBA  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48472  016FBE  6A3A               	clrf	i2___flmul@grs,c
 48473  016FC0  5039               	movf	i2___flmul@aexp,w,c
 48474  016FC2  C03E  F034         	movff	i2___flmul@bexp,??i2___flmul
 48475  016FC6  6A35               	clrf	(??i2___flmul+1)& (0+255),c
 48476  016FC8  2634               	addwf	??i2___flmul,f,c
 48477  016FCA  0E00               	movlw	0
 48478  016FCC  2235               	addwfc	??i2___flmul+1,f,c
 48479  016FCE  0E82               	movlw	130
 48480  016FD0  2434               	addwf	??i2___flmul,w,c
 48481  016FD2  6E43               	movwf	i2___flmul@temp,c
 48482  016FD4  0EFF               	movlw	255
 48483  016FD6  2035               	addwfc	??i2___flmul+1,w,c
 48484  016FD8  6E44               	movwf	i2___flmul@temp+1,c
 48485  016FDA  D00F               	goto	i2l19223
 48486  016FDC                     i2l19217:
 48487  016FDC  90D8               	bcf	status,0,c
 48488  016FDE  363F               	rlcf	i2___flmul@prod,f,c
 48489  016FE0  3640               	rlcf	i2___flmul@prod+1,f,c
 48490  016FE2  3641               	rlcf	i2___flmul@prod+2,f,c
 48491  016FE4  3642               	rlcf	i2___flmul@prod+3,f,c
 48492  016FE6  BE3D               	btfsc	i2___flmul@grs+3,7,c
 48493  016FE8  803F               	bsf	i2___flmul@prod,0,c
 48494  016FEA  90D8               	bcf	status,0,c
 48495  016FEC  363A               	rlcf	i2___flmul@grs,f,c
 48496  016FEE  363B               	rlcf	i2___flmul@grs+1,f,c
 48497  016FF0  363C               	rlcf	i2___flmul@grs+2,f,c
 48498  016FF2  363D               	rlcf	i2___flmul@grs+3,f,c
 48499  016FF4  0643               	decf	i2___flmul@temp,f,c
 48500  016FF6  A0D8               	btfss	status,0,c
 48501  016FF8  0644               	decf	i2___flmul@temp+1,f,c
 48502  016FFA                     i2l19223:
 48503  016FFA  AE41               	btfss	i2___flmul@prod+2,7,c
 48504  016FFC  D7EF               	goto	i2l19217
 48505  016FFE  0E00               	movlw	0
 48506  017000  6E39               	movwf	i2___flmul@aexp,c
 48507  017002  AE3D               	btfss	i2___flmul@grs+3,7,c
 48508  017004  D017               	goto	i2l3329
 48509  017006  0EFF               	movlw	255
 48510  017008  143A               	andwf	i2___flmul@grs,w,c
 48511  01700A  6E34               	movwf	??i2___flmul& (0+255),c
 48512  01700C  0EFF               	movlw	255
 48513  01700E  143B               	andwf	i2___flmul@grs+1,w,c
 48514  017010  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48515  017012  0EFF               	movlw	255
 48516  017014  143C               	andwf	i2___flmul@grs+2,w,c
 48517  017016  6E36               	movwf	(??i2___flmul+2)& (0+255),c
 48518  017018  0E7F               	movlw	127
 48519  01701A  143D               	andwf	i2___flmul@grs+3,w,c
 48520  01701C  6E37               	movwf	(??i2___flmul+3)& (0+255),c
 48521  01701E  5034               	movf	??i2___flmul,w,c
 48522  017020  1035               	iorwf	??i2___flmul+1,w,c
 48523  017022  1036               	iorwf	??i2___flmul+2,w,c
 48524  017024  1037               	iorwf	??i2___flmul+3,w,c
 48525  017026  B4D8               	btfsc	status,2,c
 48526  017028  D003               	goto	i2l3330
 48527  01702A                     i2u2438_40:
 48528  01702A  0E01               	movlw	1
 48529  01702C  6E39               	movwf	i2___flmul@aexp,c
 48530  01702E  D002               	goto	i2l3329
 48531  017030                     i2l3330:
 48532  017030  B03F               	btfsc	i2___flmul@prod,0,c
 48533  017032  D7FB               	goto	i2u2438_40
 48534  017034                     i2l3329:
 48535  017034  5039               	movf	i2___flmul@aexp,w,c
 48536  017036  B4D8               	btfsc	status,2,c
 48537  017038  D01F               	goto	i2l19243
 48538  01703A  0E01               	movlw	1
 48539  01703C  263F               	addwf	i2___flmul@prod,f,c
 48540  01703E  0E00               	movlw	0
 48541  017040  2240               	addwfc	i2___flmul@prod+1,f,c
 48542  017042  2241               	addwfc	i2___flmul@prod+2,f,c
 48543  017044  2242               	addwfc	i2___flmul@prod+3,f,c
 48544  017046  A042               	btfss	i2___flmul@prod+3,0,c
 48545  017048  D017               	goto	i2l19243
 48546  01704A  C03F  F034         	movff	i2___flmul@prod,??i2___flmul
 48547  01704E  C040  F035         	movff	i2___flmul@prod+1,??i2___flmul+1
 48548  017052  C041  F036         	movff	i2___flmul@prod+2,??i2___flmul+2
 48549  017056  C042  F037         	movff	i2___flmul@prod+3,??i2___flmul+3
 48550  01705A  3437               	rlcf	??i2___flmul+3,w,c
 48551  01705C  3237               	rrcf	??i2___flmul+3,f,c
 48552  01705E  3236               	rrcf	??i2___flmul+2,f,c
 48553  017060  3235               	rrcf	??i2___flmul+1,f,c
 48554  017062  3234               	rrcf	??i2___flmul,f,c
 48555  017064  C034  F03F         	movff	??i2___flmul,i2___flmul@prod
 48556  017068  C035  F040         	movff	??i2___flmul+1,i2___flmul@prod+1
 48557  01706C  C036  F041         	movff	??i2___flmul+2,i2___flmul@prod+2
 48558  017070  C037  F042         	movff	??i2___flmul+3,i2___flmul@prod+3
 48559  017074  4A43               	infsnz	i2___flmul@temp,f,c
 48560  017076  2A44               	incf	i2___flmul@temp+1,f,c
 48561  017078                     i2l19243:
 48562  017078  BE44               	btfsc	i2___flmul@temp+1,7,c
 48563  01707A  D00D               	goto	i2l19247
 48564  01707C  5044               	movf	i2___flmul@temp+1,w,c
 48565  01707E  E103               	bnz	i2u2442_40
 48566  017080  2843               	incf	i2___flmul@temp,w,c
 48567  017082  A0D8               	btfss	status,0,c
 48568  017084  D008               	goto	i2l19247
 48569  017086                     i2u2442_40:
 48570  017086  0E00               	movlw	0
 48571  017088  6E3F               	movwf	i2___flmul@prod,c
 48572  01708A  0E00               	movlw	0
 48573  01708C  6E40               	movwf	i2___flmul@prod+1,c
 48574  01708E  0E80               	movlw	128
 48575  017090  6E41               	movwf	i2___flmul@prod+2,c
 48576  017092  0E7F               	movlw	127
 48577  017094  D020               	goto	L54
 48578  017096                     i2l19247:
 48579  017096  BE44               	btfsc	i2___flmul@temp+1,7,c
 48580  017098  D005               	goto	i2u2443_40
 48581  01709A  5044               	movf	i2___flmul@temp+1,w,c
 48582  01709C  E10E               	bnz	i2l3337
 48583  01709E  0443               	decf	i2___flmul@temp,w,c
 48584  0170A0  B0D8               	btfsc	status,0,c
 48585  0170A2  D00B               	goto	i2l3337
 48586  0170A4                     i2u2443_40:
 48587  0170A4  0E00               	movlw	0
 48588  0170A6  6E3F               	movwf	i2___flmul@prod,c
 48589  0170A8  0E00               	movlw	0
 48590  0170AA  6E40               	movwf	i2___flmul@prod+1,c
 48591  0170AC  0E00               	movlw	0
 48592  0170AE  6E41               	movwf	i2___flmul@prod+2,c
 48593  0170B0  0E00               	movlw	0
 48594  0170B2  6E42               	movwf	i2___flmul@prod+3,c
 48595  0170B4  0E00               	movlw	0
 48596  0170B6  6E38               	movwf	i2___flmul@sign,c
 48597  0170B8  D00F               	goto	i2l19259
 48598  0170BA                     i2l3337:
 48599  0170BA  C043  F03E         	movff	i2___flmul@temp,i2___flmul@bexp
 48600  0170BE  0EFF               	movlw	255
 48601  0170C0  163F               	andwf	i2___flmul@prod,f,c
 48602  0170C2  0EFF               	movlw	255
 48603  0170C4  1640               	andwf	i2___flmul@prod+1,f,c
 48604  0170C6  0E7F               	movlw	127
 48605  0170C8  1641               	andwf	i2___flmul@prod+2,f,c
 48606  0170CA  0E00               	movlw	0
 48607  0170CC  1642               	andwf	i2___flmul@prod+3,f,c
 48608  0170CE  B03E               	btfsc	i2___flmul@bexp,0,c
 48609  0170D0  8E41               	bsf	i2___flmul@prod+2,7,c
 48610  0170D2  90D8               	bcf	status,0,c
 48611  0170D4  303E               	rrcf	i2___flmul@bexp,w,c
 48612  0170D6                     L54:
 48613  0170D6  6E42               	movwf	i2___flmul@prod+3,c
 48614  0170D8                     i2l19259:
 48615  0170D8  5038               	movf	i2___flmul@sign,w,c
 48616  0170DA  1242               	iorwf	i2___flmul@prod+3,f,c
 48617  0170DC  C03F  F02C         	movff	i2___flmul@prod,?i2___flmul
 48618  0170E0  C040  F02D         	movff	i2___flmul@prod+1,?i2___flmul+1
 48619  0170E4  C041  F02E         	movff	i2___flmul@prod+2,?i2___flmul+2
 48620  0170E8  C042  F02F         	movff	i2___flmul@prod+3,?i2___flmul+3
 48621  0170EC  0012               	return		;funcret
 48622  0170EE                     __end_ofi2___flmul:
 48623                           	opt callstack 0
 48624                           
 48625 ;; *************** function i2___flge *****************
 48626 ;; Defined at:
 48627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 48628 ;; Parameters:    Size  Location     Type
 48629 ;;  ff1             4    0[COMRAM] unsigned char 
 48630 ;;  ff2             4    4[COMRAM] unsigned char 
 48631 ;; Auto vars:     Size  Location     Type
 48632 ;;		None
 48633 ;; Return value:  Size  Location     Type
 48634 ;;		None               void
 48635 ;; Registers used:
 48636 ;;		wreg, status,2, status,0
 48637 ;; Tracked objects:
 48638 ;;		On entry : 0/0
 48639 ;;		On exit  : 0/0
 48640 ;;		Unchanged: 0/0
 48641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48642 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48645 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48646 ;;Total ram usage:       12 bytes
 48647 ;; Hardware stack levels used:    1
 48648 ;; This function calls:
 48649 ;;		Nothing
 48650 ;; This function is called by:
 48651 ;;		_ADC_PostProcessingHandler
 48652 ;;		i2__doprnt
 48653 ;; This function uses a non-reentrant model
 48654 ;;
 48655                           
 48656                           	psect	text204
 48657  01A5DC                     __ptext204:
 48658                           	opt callstack 0
 48659  01A5DC                     i2___flge:
 48660                           	opt callstack 13
 48661                           
 48662                           ;incstack = 0
 48663  01A5DC  0E00               	movlw	0
 48664  01A5DE  1401               	andwf	i2___flge@ff1,w,c
 48665  01A5E0  6E09               	movwf	??i2___flge& (0+255),c
 48666  01A5E2  0E00               	movlw	0
 48667  01A5E4  1402               	andwf	i2___flge@ff1+1,w,c
 48668  01A5E6  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48669  01A5E8  0E80               	movlw	128
 48670  01A5EA  1403               	andwf	i2___flge@ff1+2,w,c
 48671  01A5EC  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48672  01A5EE  0E7F               	movlw	127
 48673  01A5F0  1404               	andwf	i2___flge@ff1+3,w,c
 48674  01A5F2  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48675  01A5F4  5009               	movf	??i2___flge,w,c
 48676  01A5F6  100A               	iorwf	??i2___flge+1,w,c
 48677  01A5F8  100B               	iorwf	??i2___flge+2,w,c
 48678  01A5FA  100C               	iorwf	??i2___flge+3,w,c
 48679  01A5FC  A4D8               	btfss	status,2,c
 48680  01A5FE  D008               	goto	i2l19721
 48681  01A600  0E00               	movlw	0
 48682  01A602  6E01               	movwf	i2___flge@ff1,c
 48683  01A604  0E00               	movlw	0
 48684  01A606  6E02               	movwf	i2___flge@ff1+1,c
 48685  01A608  0E00               	movlw	0
 48686  01A60A  6E03               	movwf	i2___flge@ff1+2,c
 48687  01A60C  0E00               	movlw	0
 48688  01A60E  6E04               	movwf	i2___flge@ff1+3,c
 48689  01A610                     i2l19721:
 48690  01A610  0E00               	movlw	0
 48691  01A612  1405               	andwf	i2___flge@ff2,w,c
 48692  01A614  6E09               	movwf	??i2___flge& (0+255),c
 48693  01A616  0E00               	movlw	0
 48694  01A618  1406               	andwf	i2___flge@ff2+1,w,c
 48695  01A61A  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48696  01A61C  0E80               	movlw	128
 48697  01A61E  1407               	andwf	i2___flge@ff2+2,w,c
 48698  01A620  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48699  01A622  0E7F               	movlw	127
 48700  01A624  1408               	andwf	i2___flge@ff2+3,w,c
 48701  01A626  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48702  01A628  5009               	movf	??i2___flge,w,c
 48703  01A62A  100A               	iorwf	??i2___flge+1,w,c
 48704  01A62C  100B               	iorwf	??i2___flge+2,w,c
 48705  01A62E  100C               	iorwf	??i2___flge+3,w,c
 48706  01A630  A4D8               	btfss	status,2,c
 48707  01A632  D008               	goto	i2l19725
 48708  01A634  0E00               	movlw	0
 48709  01A636  6E05               	movwf	i2___flge@ff2,c
 48710  01A638  0E00               	movlw	0
 48711  01A63A  6E06               	movwf	i2___flge@ff2+1,c
 48712  01A63C  0E00               	movlw	0
 48713  01A63E  6E07               	movwf	i2___flge@ff2+2,c
 48714  01A640  0E00               	movlw	0
 48715  01A642  6E08               	movwf	i2___flge@ff2+3,c
 48716  01A644                     i2l19725:
 48717  01A644  AE04               	btfss	i2___flge@ff1+3,7,c
 48718  01A646  D009               	goto	i2l19729
 48719  01A648  6C01               	negf	i2___flge@ff1,c
 48720  01A64A  1E02               	comf	i2___flge@ff1+1,f,c
 48721  01A64C  B0D8               	btfsc	status,0,c
 48722  01A64E  2A02               	incf	i2___flge@ff1+1,f,c
 48723  01A650  1E03               	comf	i2___flge@ff1+2,f,c
 48724  01A652  B0D8               	btfsc	status,0,c
 48725  01A654  2A03               	incf	i2___flge@ff1+2,f,c
 48726  01A656  0E80               	movlw	128
 48727  01A658  5604               	subfwb	i2___flge@ff1+3,f,c
 48728  01A65A                     i2l19729:
 48729  01A65A  AE08               	btfss	i2___flge@ff2+3,7,c
 48730  01A65C  D009               	goto	i2l2962
 48731  01A65E  6C05               	negf	i2___flge@ff2,c
 48732  01A660  1E06               	comf	i2___flge@ff2+1,f,c
 48733  01A662  B0D8               	btfsc	status,0,c
 48734  01A664  2A06               	incf	i2___flge@ff2+1,f,c
 48735  01A666  1E07               	comf	i2___flge@ff2+2,f,c
 48736  01A668  B0D8               	btfsc	status,0,c
 48737  01A66A  2A07               	incf	i2___flge@ff2+2,f,c
 48738  01A66C  0E80               	movlw	128
 48739  01A66E  5608               	subfwb	i2___flge@ff2+3,f,c
 48740  01A670                     i2l2962:
 48741  01A670  0E00               	movlw	0
 48742  01A672  1A01               	xorwf	i2___flge@ff1,f,c
 48743  01A674  0E00               	movlw	0
 48744  01A676  1A02               	xorwf	i2___flge@ff1+1,f,c
 48745  01A678  0E00               	movlw	0
 48746  01A67A  1A03               	xorwf	i2___flge@ff1+2,f,c
 48747  01A67C  0E80               	movlw	128
 48748  01A67E  1A04               	xorwf	i2___flge@ff1+3,f,c
 48749  01A680  0E00               	movlw	0
 48750  01A682  1A05               	xorwf	i2___flge@ff2,f,c
 48751  01A684  0E00               	movlw	0
 48752  01A686  1A06               	xorwf	i2___flge@ff2+1,f,c
 48753  01A688  0E00               	movlw	0
 48754  01A68A  1A07               	xorwf	i2___flge@ff2+2,f,c
 48755  01A68C  0E80               	movlw	128
 48756  01A68E  1A08               	xorwf	i2___flge@ff2+3,f,c
 48757  01A690  5005               	movf	i2___flge@ff2,w,c
 48758  01A692  5C01               	subwf	i2___flge@ff1,w,c
 48759  01A694  5006               	movf	i2___flge@ff2+1,w,c
 48760  01A696  5802               	subwfb	i2___flge@ff1+1,w,c
 48761  01A698  5007               	movf	i2___flge@ff2+2,w,c
 48762  01A69A  5803               	subwfb	i2___flge@ff1+2,w,c
 48763  01A69C  5008               	movf	i2___flge@ff2+3,w,c
 48764  01A69E  5804               	subwfb	i2___flge@ff1+3,w,c
 48765  01A6A0  B0D8               	btfsc	status,0,c
 48766  01A6A2  D002               	goto	i2l19735
 48767  01A6A4  90D8               	bcf	status,0,c
 48768  01A6A6  0012               	return	
 48769  01A6A8                     i2l19735:
 48770  01A6A8  80D8               	bsf	status,0,c
 48771  01A6AA  0012               	return		;funcret
 48772  01A6AC                     __end_ofi2___flge:
 48773                           	opt callstack 0
 48774                           
 48775 ;; *************** function i2___fldiv *****************
 48776 ;; Defined at:
 48777 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 48778 ;; Parameters:    Size  Location     Type
 48779 ;;  b               4   18[COMRAM] unsigned char 
 48780 ;;  a               4   22[COMRAM] unsigned char 
 48781 ;; Auto vars:     Size  Location     Type
 48782 ;;  __fldiv         4   37[COMRAM] unsigned long 
 48783 ;;  __fldiv         4   30[COMRAM] unsigned long 
 48784 ;;  __fldiv         2   35[COMRAM] int 
 48785 ;;  __fldiv         1   42[COMRAM] unsigned char 
 48786 ;;  __fldiv         1   41[COMRAM] unsigned char 
 48787 ;;  __fldiv         1   34[COMRAM] unsigned char 
 48788 ;; Return value:  Size  Location     Type
 48789 ;;                  4   18[COMRAM] unsigned char 
 48790 ;; Registers used:
 48791 ;;		wreg, status,2, status,0
 48792 ;; Tracked objects:
 48793 ;;		On entry : 0/0
 48794 ;;		On exit  : 0/0
 48795 ;;		Unchanged: 0/0
 48796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48798 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48800 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48801 ;;Total ram usage:       25 bytes
 48802 ;; Hardware stack levels used:    1
 48803 ;; This function calls:
 48804 ;;		Nothing
 48805 ;; This function is called by:
 48806 ;;		_ADC_PostProcessingHandler
 48807 ;; This function uses a non-reentrant model
 48808 ;;
 48809                           
 48810                           	psect	text205
 48811  01876A                     __ptext205:
 48812                           	opt callstack 0
 48813  01876A                     i2___fldiv:
 48814                           	opt callstack 14
 48815                           
 48816                           ;incstack = 0
 48817  01876A  5016               	movf	i2___fldiv@b+3,w,c
 48818  01876C  0B80               	andlw	128
 48819  01876E  6E23               	movwf	i2___fldiv@sign,c
 48820  018770  5016               	movf	i2___fldiv@b+3,w,c
 48821  018772  2416               	addwf	i2___fldiv@b+3,w,c
 48822  018774  6E2A               	movwf	i2___fldiv@bexp,c
 48823  018776  BE15               	btfsc	i2___fldiv@b+2,7,c
 48824  018778  802A               	bsf	i2___fldiv@bexp,0,c
 48825  01877A  502A               	movf	i2___fldiv@bexp,w,c
 48826  01877C  B4D8               	btfsc	status,2,c
 48827  01877E  D00D               	goto	i2l14787
 48828  018780  282A               	incf	i2___fldiv@bexp,w,c
 48829  018782  A4D8               	btfss	status,2,c
 48830  018784  D008               	goto	i2l14783
 48831  018786  0E00               	movlw	0
 48832  018788  6E13               	movwf	i2___fldiv@b,c
 48833  01878A  0E00               	movlw	0
 48834  01878C  6E14               	movwf	i2___fldiv@b+1,c
 48835  01878E  0E00               	movlw	0
 48836  018790  6E15               	movwf	i2___fldiv@b+2,c
 48837  018792  0E00               	movlw	0
 48838  018794  6E16               	movwf	i2___fldiv@b+3,c
 48839  018796                     i2l14783:
 48840  018796  8E15               	bsf	i2___fldiv@b+2,7,c
 48841  018798  D006               	goto	L55
 48842  01879A                     i2l14787:
 48843  01879A  0E00               	movlw	0
 48844  01879C  6E13               	movwf	i2___fldiv@b,c
 48845  01879E  0E00               	movlw	0
 48846  0187A0  6E14               	movwf	i2___fldiv@b+1,c
 48847  0187A2  0E00               	movlw	0
 48848  0187A4  6E15               	movwf	i2___fldiv@b+2,c
 48849  0187A6                     L55:
 48850  0187A6  0E00               	movlw	0
 48851  0187A8  6E16               	movwf	i2___fldiv@b+3,c
 48852  0187AA  501A               	movf	i2___fldiv@a+3,w,c
 48853  0187AC  0B80               	andlw	128
 48854  0187AE  1A23               	xorwf	i2___fldiv@sign,f,c
 48855  0187B0  501A               	movf	i2___fldiv@a+3,w,c
 48856  0187B2  241A               	addwf	i2___fldiv@a+3,w,c
 48857  0187B4  6E2B               	movwf	i2___fldiv@aexp,c
 48858  0187B6  BE19               	btfsc	i2___fldiv@a+2,7,c
 48859  0187B8  802B               	bsf	i2___fldiv@aexp,0,c
 48860  0187BA  502B               	movf	i2___fldiv@aexp,w,c
 48861  0187BC  B4D8               	btfsc	status,2,c
 48862  0187BE  D00D               	goto	i2l14807
 48863  0187C0  282B               	incf	i2___fldiv@aexp,w,c
 48864  0187C2  A4D8               	btfss	status,2,c
 48865  0187C4  D008               	goto	i2l14803
 48866  0187C6  0E00               	movlw	0
 48867  0187C8  6E17               	movwf	i2___fldiv@a,c
 48868  0187CA  0E00               	movlw	0
 48869  0187CC  6E18               	movwf	i2___fldiv@a+1,c
 48870  0187CE  0E00               	movlw	0
 48871  0187D0  6E19               	movwf	i2___fldiv@a+2,c
 48872  0187D2  0E00               	movlw	0
 48873  0187D4  6E1A               	movwf	i2___fldiv@a+3,c
 48874  0187D6                     i2l14803:
 48875  0187D6  8E19               	bsf	i2___fldiv@a+2,7,c
 48876  0187D8  D006               	goto	L56
 48877  0187DA                     i2l14807:
 48878  0187DA  0E00               	movlw	0
 48879  0187DC  6E17               	movwf	i2___fldiv@a,c
 48880  0187DE  0E00               	movlw	0
 48881  0187E0  6E18               	movwf	i2___fldiv@a+1,c
 48882  0187E2  0E00               	movlw	0
 48883  0187E4  6E19               	movwf	i2___fldiv@a+2,c
 48884  0187E6                     L56:
 48885  0187E6  0E00               	movlw	0
 48886  0187E8  6E1A               	movwf	i2___fldiv@a+3,c
 48887  0187EA  5017               	movf	i2___fldiv@a,w,c
 48888  0187EC  1018               	iorwf	i2___fldiv@a+1,w,c
 48889  0187EE  1019               	iorwf	i2___fldiv@a+2,w,c
 48890  0187F0  101A               	iorwf	i2___fldiv@a+3,w,c
 48891  0187F2  A4D8               	btfss	status,2,c
 48892  0187F4  D017               	goto	i2l14821
 48893  0187F6  0E00               	movlw	0
 48894  0187F8  6E13               	movwf	i2___fldiv@b,c
 48895  0187FA  0E00               	movlw	0
 48896  0187FC  6E14               	movwf	i2___fldiv@b+1,c
 48897  0187FE  0E00               	movlw	0
 48898  018800  6E15               	movwf	i2___fldiv@b+2,c
 48899  018802  0E00               	movlw	0
 48900  018804  6E16               	movwf	i2___fldiv@b+3,c
 48901  018806  0E80               	movlw	128
 48902  018808  1215               	iorwf	i2___fldiv@b+2,f,c
 48903  01880A  0E7F               	movlw	127
 48904  01880C  1216               	iorwf	i2___fldiv@b+3,f,c
 48905  01880E                     i2l14815:
 48906  01880E  5023               	movf	i2___fldiv@sign,w,c
 48907  018810  1216               	iorwf	i2___fldiv@b+3,f,c
 48908  018812  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 48909  018816  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 48910  01881A  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 48911  01881E  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 48912  018822  0012               	return	
 48913  018824                     i2l14821:
 48914  018824  502A               	movf	i2___fldiv@bexp,w,c
 48915  018826  A4D8               	btfss	status,2,c
 48916  018828  D009               	goto	i2l14829
 48917  01882A  0E00               	movlw	0
 48918  01882C  6E13               	movwf	?i2___fldiv,c
 48919  01882E  0E00               	movlw	0
 48920  018830  6E14               	movwf	?i2___fldiv+1,c
 48921  018832  0E00               	movlw	0
 48922  018834  6E15               	movwf	?i2___fldiv+2,c
 48923  018836  0E00               	movlw	0
 48924  018838  6E16               	movwf	?i2___fldiv+3,c
 48925  01883A  0012               	return	
 48926  01883C                     i2l14829:
 48927  01883C  502B               	movf	i2___fldiv@aexp,w,c
 48928  01883E  C02A  F01B         	movff	i2___fldiv@bexp,??i2___fldiv
 48929  018842  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 48930  018844  5E1B               	subwf	??i2___fldiv,f,c
 48931  018846  0E00               	movlw	0
 48932  018848  5A1C               	subwfb	??i2___fldiv+1,f,c
 48933  01884A  0E7F               	movlw	127
 48934  01884C  241B               	addwf	??i2___fldiv,w,c
 48935  01884E  6E24               	movwf	i2___fldiv@new_exp,c
 48936  018850  0E00               	movlw	0
 48937  018852  201C               	addwfc	??i2___fldiv+1,w,c
 48938  018854  6E25               	movwf	i2___fldiv@new_exp+1,c
 48939  018856  C013  F01F         	movff	i2___fldiv@b,i2___fldiv@rem
 48940  01885A  C014  F020         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 48941  01885E  C015  F021         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 48942  018862  C016  F022         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 48943  018866  0E00               	movlw	0
 48944  018868  6E13               	movwf	i2___fldiv@b,c
 48945  01886A  0E00               	movlw	0
 48946  01886C  6E14               	movwf	i2___fldiv@b+1,c
 48947  01886E  0E00               	movlw	0
 48948  018870  6E15               	movwf	i2___fldiv@b+2,c
 48949  018872  0E00               	movlw	0
 48950  018874  6E16               	movwf	i2___fldiv@b+3,c
 48951  018876  0E00               	movlw	0
 48952  018878  6E26               	movwf	i2___fldiv@grs,c
 48953  01887A  0E00               	movlw	0
 48954  01887C  6E27               	movwf	i2___fldiv@grs+1,c
 48955  01887E  0E00               	movlw	0
 48956  018880  6E28               	movwf	i2___fldiv@grs+2,c
 48957  018882  0E00               	movlw	0
 48958  018884  6E29               	movwf	i2___fldiv@grs+3,c
 48959  018886  0E00               	movlw	0
 48960  018888  6E2B               	movwf	i2___fldiv@aexp,c
 48961  01888A  D028               	goto	i2l3290
 48962  01888C                     i2l14839:
 48963  01888C  502B               	movf	i2___fldiv@aexp,w,c
 48964  01888E  B4D8               	btfsc	status,2,c
 48965  018890  D011               	goto	i2l14847
 48966  018892  90D8               	bcf	status,0,c
 48967  018894  361F               	rlcf	i2___fldiv@rem,f,c
 48968  018896  3620               	rlcf	i2___fldiv@rem+1,f,c
 48969  018898  3621               	rlcf	i2___fldiv@rem+2,f,c
 48970  01889A  3622               	rlcf	i2___fldiv@rem+3,f,c
 48971  01889C  90D8               	bcf	status,0,c
 48972  01889E  3613               	rlcf	i2___fldiv@b,f,c
 48973  0188A0  3614               	rlcf	i2___fldiv@b+1,f,c
 48974  0188A2  3615               	rlcf	i2___fldiv@b+2,f,c
 48975  0188A4  3616               	rlcf	i2___fldiv@b+3,f,c
 48976  0188A6  BE29               	btfsc	i2___fldiv@grs+3,7,c
 48977  0188A8  8013               	bsf	i2___fldiv@b,0,c
 48978  0188AA  90D8               	bcf	status,0,c
 48979  0188AC  3626               	rlcf	i2___fldiv@grs,f,c
 48980  0188AE  3627               	rlcf	i2___fldiv@grs+1,f,c
 48981  0188B0  3628               	rlcf	i2___fldiv@grs+2,f,c
 48982  0188B2  3629               	rlcf	i2___fldiv@grs+3,f,c
 48983  0188B4                     i2l14847:
 48984  0188B4  5017               	movf	i2___fldiv@a,w,c
 48985  0188B6  5C1F               	subwf	i2___fldiv@rem,w,c
 48986  0188B8  5018               	movf	i2___fldiv@a+1,w,c
 48987  0188BA  5820               	subwfb	i2___fldiv@rem+1,w,c
 48988  0188BC  5019               	movf	i2___fldiv@a+2,w,c
 48989  0188BE  5821               	subwfb	i2___fldiv@rem+2,w,c
 48990  0188C0  501A               	movf	i2___fldiv@a+3,w,c
 48991  0188C2  5822               	subwfb	i2___fldiv@rem+3,w,c
 48992  0188C4  A0D8               	btfss	status,0,c
 48993  0188C6  D009               	goto	i2l14853
 48994  0188C8  8C29               	bsf	i2___fldiv@grs+3,6,c
 48995  0188CA  5017               	movf	i2___fldiv@a,w,c
 48996  0188CC  5E1F               	subwf	i2___fldiv@rem,f,c
 48997  0188CE  5018               	movf	i2___fldiv@a+1,w,c
 48998  0188D0  5A20               	subwfb	i2___fldiv@rem+1,f,c
 48999  0188D2  5019               	movf	i2___fldiv@a+2,w,c
 49000  0188D4  5A21               	subwfb	i2___fldiv@rem+2,f,c
 49001  0188D6  501A               	movf	i2___fldiv@a+3,w,c
 49002  0188D8  5A22               	subwfb	i2___fldiv@rem+3,f,c
 49003  0188DA                     i2l14853:
 49004  0188DA  2A2B               	incf	i2___fldiv@aexp,f,c
 49005  0188DC                     i2l3290:
 49006  0188DC  0E19               	movlw	25
 49007  0188DE  642B               	cpfsgt	i2___fldiv@aexp,c
 49008  0188E0  D7D5               	goto	i2l14839
 49009  0188E2  501F               	movf	i2___fldiv@rem,w,c
 49010  0188E4  1020               	iorwf	i2___fldiv@rem+1,w,c
 49011  0188E6  1021               	iorwf	i2___fldiv@rem+2,w,c
 49012  0188E8  1022               	iorwf	i2___fldiv@rem+3,w,c
 49013  0188EA  B4D8               	btfsc	status,2,c
 49014  0188EC  D011               	goto	i2l14865
 49015  0188EE  8026               	bsf	i2___fldiv@grs,0,c
 49016  0188F0  D00F               	goto	i2l14865
 49017  0188F2                     i2l14859:
 49018  0188F2  90D8               	bcf	status,0,c
 49019  0188F4  3613               	rlcf	i2___fldiv@b,f,c
 49020  0188F6  3614               	rlcf	i2___fldiv@b+1,f,c
 49021  0188F8  3615               	rlcf	i2___fldiv@b+2,f,c
 49022  0188FA  3616               	rlcf	i2___fldiv@b+3,f,c
 49023  0188FC  BE29               	btfsc	i2___fldiv@grs+3,7,c
 49024  0188FE  8013               	bsf	i2___fldiv@b,0,c
 49025  018900  90D8               	bcf	status,0,c
 49026  018902  3626               	rlcf	i2___fldiv@grs,f,c
 49027  018904  3627               	rlcf	i2___fldiv@grs+1,f,c
 49028  018906  3628               	rlcf	i2___fldiv@grs+2,f,c
 49029  018908  3629               	rlcf	i2___fldiv@grs+3,f,c
 49030  01890A  0624               	decf	i2___fldiv@new_exp,f,c
 49031  01890C  A0D8               	btfss	status,0,c
 49032  01890E  0625               	decf	i2___fldiv@new_exp+1,f,c
 49033  018910                     i2l14865:
 49034  018910  AE15               	btfss	i2___fldiv@b+2,7,c
 49035  018912  D7EF               	goto	i2l14859
 49036  018914  0E00               	movlw	0
 49037  018916  6E2B               	movwf	i2___fldiv@aexp,c
 49038  018918  AE29               	btfss	i2___fldiv@grs+3,7,c
 49039  01891A  D017               	goto	i2l3301
 49040  01891C  0EFF               	movlw	255
 49041  01891E  1426               	andwf	i2___fldiv@grs,w,c
 49042  018920  6E1B               	movwf	??i2___fldiv& (0+255),c
 49043  018922  0EFF               	movlw	255
 49044  018924  1427               	andwf	i2___fldiv@grs+1,w,c
 49045  018926  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 49046  018928  0EFF               	movlw	255
 49047  01892A  1428               	andwf	i2___fldiv@grs+2,w,c
 49048  01892C  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 49049  01892E  0E7F               	movlw	127
 49050  018930  1429               	andwf	i2___fldiv@grs+3,w,c
 49051  018932  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 49052  018934  501B               	movf	??i2___fldiv,w,c
 49053  018936  101C               	iorwf	??i2___fldiv+1,w,c
 49054  018938  101D               	iorwf	??i2___fldiv+2,w,c
 49055  01893A  101E               	iorwf	??i2___fldiv+3,w,c
 49056  01893C  B4D8               	btfsc	status,2,c
 49057  01893E  D003               	goto	i2l3302
 49058  018940                     i2u1792_40:
 49059  018940  0E01               	movlw	1
 49060  018942  6E2B               	movwf	i2___fldiv@aexp,c
 49061  018944  D002               	goto	i2l3301
 49062  018946                     i2l3302:
 49063  018946  B013               	btfsc	i2___fldiv@b,0,c
 49064  018948  D7FB               	goto	i2u1792_40
 49065  01894A                     i2l3301:
 49066  01894A  502B               	movf	i2___fldiv@aexp,w,c
 49067  01894C  B4D8               	btfsc	status,2,c
 49068  01894E  D01F               	goto	i2l14885
 49069  018950  0E01               	movlw	1
 49070  018952  2613               	addwf	i2___fldiv@b,f,c
 49071  018954  0E00               	movlw	0
 49072  018956  2214               	addwfc	i2___fldiv@b+1,f,c
 49073  018958  2215               	addwfc	i2___fldiv@b+2,f,c
 49074  01895A  2216               	addwfc	i2___fldiv@b+3,f,c
 49075  01895C  A016               	btfss	i2___fldiv@b+3,0,c
 49076  01895E  D017               	goto	i2l14885
 49077  018960  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 49078  018964  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 49079  018968  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 49080  01896C  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 49081  018970  341E               	rlcf	??i2___fldiv+3,w,c
 49082  018972  321E               	rrcf	??i2___fldiv+3,f,c
 49083  018974  321D               	rrcf	??i2___fldiv+2,f,c
 49084  018976  321C               	rrcf	??i2___fldiv+1,f,c
 49085  018978  321B               	rrcf	??i2___fldiv,f,c
 49086  01897A  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 49087  01897E  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 49088  018982  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 49089  018986  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 49090  01898A  4A24               	infsnz	i2___fldiv@new_exp,f,c
 49091  01898C  2A25               	incf	i2___fldiv@new_exp+1,f,c
 49092  01898E                     i2l14885:
 49093  01898E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 49094  018990  D010               	goto	i2l14889
 49095  018992  5025               	movf	i2___fldiv@new_exp+1,w,c
 49096  018994  E103               	bnz	i2u1796_40
 49097  018996  2824               	incf	i2___fldiv@new_exp,w,c
 49098  018998  A0D8               	btfss	status,0,c
 49099  01899A  D00B               	goto	i2l14889
 49100  01899C                     i2u1796_40:
 49101  01899C  0E00               	movlw	0
 49102  01899E  6E25               	movwf	i2___fldiv@new_exp+1,c
 49103  0189A0  6824               	setf	i2___fldiv@new_exp,c
 49104  0189A2  0E00               	movlw	0
 49105  0189A4  6E13               	movwf	i2___fldiv@b,c
 49106  0189A6  0E00               	movlw	0
 49107  0189A8  6E14               	movwf	i2___fldiv@b+1,c
 49108  0189AA  0E00               	movlw	0
 49109  0189AC  6E15               	movwf	i2___fldiv@b+2,c
 49110  0189AE  0E00               	movlw	0
 49111  0189B0  6E16               	movwf	i2___fldiv@b+3,c
 49112  0189B2                     i2l14889:
 49113  0189B2  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 49114  0189B4  D005               	goto	i2u1797_40
 49115  0189B6  5025               	movf	i2___fldiv@new_exp+1,w,c
 49116  0189B8  E111               	bnz	i2l14893
 49117  0189BA  0424               	decf	i2___fldiv@new_exp,w,c
 49118  0189BC  B0D8               	btfsc	status,0,c
 49119  0189BE  D00E               	goto	i2l14893
 49120  0189C0                     i2u1797_40:
 49121  0189C0  0E00               	movlw	0
 49122  0189C2  6E25               	movwf	i2___fldiv@new_exp+1,c
 49123  0189C4  0E00               	movlw	0
 49124  0189C6  6E24               	movwf	i2___fldiv@new_exp,c
 49125  0189C8  0E00               	movlw	0
 49126  0189CA  6E13               	movwf	i2___fldiv@b,c
 49127  0189CC  0E00               	movlw	0
 49128  0189CE  6E14               	movwf	i2___fldiv@b+1,c
 49129  0189D0  0E00               	movlw	0
 49130  0189D2  6E15               	movwf	i2___fldiv@b+2,c
 49131  0189D4  0E00               	movlw	0
 49132  0189D6  6E16               	movwf	i2___fldiv@b+3,c
 49133  0189D8  0E00               	movlw	0
 49134  0189DA  6E23               	movwf	i2___fldiv@sign,c
 49135  0189DC                     i2l14893:
 49136  0189DC  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 49137  0189E0  A02A               	btfss	i2___fldiv@bexp,0,c
 49138  0189E2  D002               	goto	i2l14899
 49139  0189E4  8E15               	bsf	i2___fldiv@b+2,7,c
 49140  0189E6  D001               	goto	i2l14901
 49141  0189E8                     i2l14899:
 49142  0189E8  9E15               	bcf	i2___fldiv@b+2,7,c
 49143  0189EA                     i2l14901:
 49144  0189EA  90D8               	bcf	status,0,c
 49145  0189EC  302A               	rrcf	i2___fldiv@bexp,w,c
 49146  0189EE  6E16               	movwf	i2___fldiv@b+3,c
 49147  0189F0  D70E               	goto	i2l14815
 49148  0189F2                     __end_ofi2___fldiv:
 49149                           	opt callstack 0
 49150                           
 49151 ;; *************** function _fabs *****************
 49152 ;; Defined at:
 49153 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fabs.c"
 49154 ;; Parameters:    Size  Location     Type
 49155 ;;  d               4    4[COMRAM] unsigned char 
 49156 ;; Auto vars:     Size  Location     Type
 49157 ;;		None
 49158 ;; Return value:  Size  Location     Type
 49159 ;;                  4    4[COMRAM] unsigned char 
 49160 ;; Registers used:
 49161 ;;		wreg, status,2, status,0, cstack
 49162 ;; Tracked objects:
 49163 ;;		On entry : 0/0
 49164 ;;		On exit  : 0/0
 49165 ;;		Unchanged: 0/0
 49166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49170 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49171 ;;Total ram usage:        4 bytes
 49172 ;; Hardware stack levels used:    1
 49173 ;; Hardware stack levels required when called:    1
 49174 ;; This function calls:
 49175 ;;		i2___flneg
 49176 ;; This function is called by:
 49177 ;;		_ADC_PostProcessingHandler
 49178 ;; This function uses a non-reentrant model
 49179 ;;
 49180                           
 49181                           	psect	text206
 49182  01BF54                     __ptext206:
 49183                           	opt callstack 0
 49184  01BF54                     _fabs:
 49185                           	opt callstack 13
 49186                           
 49187                           ;incstack = 0
 49188  01BF54  AE08               	btfss	fabs@d+3,7,c
 49189  01BF56  D013               	goto	i2l3384
 49190  01BF58  C005  F001         	movff	fabs@d,i2___flneg@f1
 49191  01BF5C  C006  F002         	movff	fabs@d+1,i2___flneg@f1+1
 49192  01BF60  C007  F003         	movff	fabs@d+2,i2___flneg@f1+2
 49193  01BF64  C008  F004         	movff	fabs@d+3,i2___flneg@f1+3
 49194  01BF68  ECDD  F0E0         	call	i2___flneg	;wreg free
 49195  01BF6C  C001  F005         	movff	?i2___flneg,?_fabs
 49196  01BF70  C002  F006         	movff	?i2___flneg+1,?_fabs+1
 49197  01BF74  C003  F007         	movff	?i2___flneg+2,?_fabs+2
 49198  01BF78  C004  F008         	movff	?i2___flneg+3,?_fabs+3
 49199  01BF7C  0012               	return	
 49200  01BF7E                     i2l3384:
 49201  01BF7E  C005  F005         	movff	fabs@d,?_fabs
 49202  01BF82  C006  F006         	movff	fabs@d+1,?_fabs+1
 49203  01BF86  C007  F007         	movff	fabs@d+2,?_fabs+2
 49204  01BF8A  C008  F008         	movff	fabs@d+3,?_fabs+3
 49205  01BF8E  0012               	return		;funcret
 49206  01BF90                     __end_of_fabs:
 49207                           	opt callstack 0
 49208                           
 49209 ;; *************** function i2___flneg *****************
 49210 ;; Defined at:
 49211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 49212 ;; Parameters:    Size  Location     Type
 49213 ;;  f1              4    0[COMRAM] unsigned char 
 49214 ;; Auto vars:     Size  Location     Type
 49215 ;;		None
 49216 ;; Return value:  Size  Location     Type
 49217 ;;                  4    0[COMRAM] unsigned char 
 49218 ;; Registers used:
 49219 ;;		wreg, status,2, status,0
 49220 ;; Tracked objects:
 49221 ;;		On entry : 0/0
 49222 ;;		On exit  : 0/0
 49223 ;;		Unchanged: 0/0
 49224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49229 ;;Total ram usage:        4 bytes
 49230 ;; Hardware stack levels used:    1
 49231 ;; This function calls:
 49232 ;;		Nothing
 49233 ;; This function is called by:
 49234 ;;		_fabs
 49235 ;;		i2__doprnt
 49236 ;; This function uses a non-reentrant model
 49237 ;;
 49238                           
 49239                           	psect	text207
 49240  01C1BA                     __ptext207:
 49241                           	opt callstack 0
 49242  01C1BA                     i2___flneg:
 49243                           	opt callstack 13
 49244                           
 49245                           ;incstack = 0
 49246  01C1BA  5001               	movf	i2___flneg@f1,w,c
 49247  01C1BC  1002               	iorwf	i2___flneg@f1+1,w,c
 49248  01C1BE  1003               	iorwf	i2___flneg@f1+2,w,c
 49249  01C1C0  1004               	iorwf	i2___flneg@f1+3,w,c
 49250  01C1C2  B4D8               	btfsc	status,2,c
 49251  01C1C4  D008               	goto	i2l19743
 49252  01C1C6  0E00               	movlw	0
 49253  01C1C8  1A01               	xorwf	i2___flneg@f1,f,c
 49254  01C1CA  0E00               	movlw	0
 49255  01C1CC  1A02               	xorwf	i2___flneg@f1+1,f,c
 49256  01C1CE  0E00               	movlw	0
 49257  01C1D0  1A03               	xorwf	i2___flneg@f1+2,f,c
 49258  01C1D2  0E80               	movlw	128
 49259  01C1D4  1A04               	xorwf	i2___flneg@f1+3,f,c
 49260  01C1D6                     i2l19743:
 49261  01C1D6  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 49262  01C1DA  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 49263  01C1DE  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 49264  01C1E2  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 49265  01C1E6  0012               	return		;funcret
 49266  01C1E8                     __end_ofi2___flneg:
 49267                           	opt callstack 0
 49268                           
 49269 ;; *************** function _TMR2_StartTimer *****************
 49270 ;; Defined at:
 49271 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 49272 ;; Parameters:    Size  Location     Type
 49273 ;;		None
 49274 ;; Auto vars:     Size  Location     Type
 49275 ;;		None
 49276 ;; Return value:  Size  Location     Type
 49277 ;;                  1    wreg      void 
 49278 ;; Registers used:
 49279 ;;		cstack
 49280 ;; Tracked objects:
 49281 ;;		On entry : 0/0
 49282 ;;		On exit  : 0/0
 49283 ;;		Unchanged: 0/0
 49284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49289 ;;Total ram usage:        0 bytes
 49290 ;; Hardware stack levels used:    1
 49291 ;; Hardware stack levels required when called:    1
 49292 ;; This function calls:
 49293 ;;		_TMR2_Start
 49294 ;; This function is called by:
 49295 ;;		_ADC_PostProcessingHandler
 49296 ;; This function uses a non-reentrant model
 49297 ;;
 49298                           
 49299                           	psect	text208
 49300  01C8C4                     __ptext208:
 49301                           	opt callstack 0
 49302  01C8C4                     _TMR2_StartTimer:
 49303                           	opt callstack 13
 49304                           
 49305                           ;tmr2.c: 116: TMR2_Start();
 49306                           
 49307                           ;incstack = 0
 49308  01C8C4  EC75  F0E4         	call	_TMR2_Start	;wreg free
 49309  01C8C8  0012               	return		;funcret
 49310  01C8CA                     __end_of_TMR2_StartTimer:
 49311                           	opt callstack 0
 49312                           
 49313 ;; *************** function _TMR2_Start *****************
 49314 ;; Defined at:
 49315 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 49316 ;; Parameters:    Size  Location     Type
 49317 ;;		None
 49318 ;; Auto vars:     Size  Location     Type
 49319 ;;		None
 49320 ;; Return value:  Size  Location     Type
 49321 ;;                  1    wreg      void 
 49322 ;; Registers used:
 49323 ;;		None
 49324 ;; Tracked objects:
 49325 ;;		On entry : 0/0
 49326 ;;		On exit  : 0/0
 49327 ;;		Unchanged: 0/0
 49328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49333 ;;Total ram usage:        0 bytes
 49334 ;; Hardware stack levels used:    1
 49335 ;; This function calls:
 49336 ;;		Nothing
 49337 ;; This function is called by:
 49338 ;;		_TMR2_StartTimer
 49339 ;; This function uses a non-reentrant model
 49340 ;;
 49341                           
 49342                           	psect	text209
 49343  01C8EA                     __ptext209:
 49344                           	opt callstack 0
 49345  01C8EA                     _TMR2_Start:
 49346                           	opt callstack 13
 49347                           
 49348                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
 49349                           
 49350                           ;incstack = 0
 49351  01C8EA  8EBD               	bsf	4029,7,c	;volatile
 49352  01C8EC  0012               	return		;funcret
 49353  01C8EE                     __end_of_TMR2_Start:
 49354                           	opt callstack 0
 49355                           
 49356 ;; *************** function _ADCC_StopConversion *****************
 49357 ;; Defined at:
 49358 ;;		line 162 in file "mcc_generated_files/adcc.c"
 49359 ;; Parameters:    Size  Location     Type
 49360 ;;		None
 49361 ;; Auto vars:     Size  Location     Type
 49362 ;;		None
 49363 ;; Return value:  Size  Location     Type
 49364 ;;                  1    wreg      void 
 49365 ;; Registers used:
 49366 ;;		None
 49367 ;; Tracked objects:
 49368 ;;		On entry : 0/0
 49369 ;;		On exit  : 0/0
 49370 ;;		Unchanged: 0/0
 49371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49376 ;;Total ram usage:        0 bytes
 49377 ;; Hardware stack levels used:    1
 49378 ;; This function calls:
 49379 ;;		Nothing
 49380 ;; This function is called by:
 49381 ;;		_ADC_PostProcessingHandler
 49382 ;; This function uses a non-reentrant model
 49383 ;;
 49384                           
 49385                           	psect	text210
 49386  01C8EE                     __ptext210:
 49387                           	opt callstack 0
 49388  01C8EE                     _ADCC_StopConversion:
 49389                           	opt callstack 14
 49390                           
 49391                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 49392                           
 49393                           ;incstack = 0
 49394  01C8EE  9060               	bcf	3936,0,c	;volatile
 49395  01C8F0  0012               	return		;funcret
 49396  01C8F2                     __end_of_ADCC_StopConversion:
 49397                           	opt callstack 0
 49398                           
 49399 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 49400 ;; Defined at:
 49401 ;;		line 216 in file "mcc_generated_files/adcc.c"
 49402 ;; Parameters:    Size  Location     Type
 49403 ;;		None
 49404 ;; Auto vars:     Size  Location     Type
 49405 ;;		None
 49406 ;; Return value:  Size  Location     Type
 49407 ;;                  1    wreg      unsigned char 
 49408 ;; Registers used:
 49409 ;;		wreg
 49410 ;; Tracked objects:
 49411 ;;		On entry : 0/0
 49412 ;;		On exit  : 0/0
 49413 ;;		Unchanged: 0/0
 49414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49419 ;;Total ram usage:        0 bytes
 49420 ;; Hardware stack levels used:    1
 49421 ;; This function calls:
 49422 ;;		Nothing
 49423 ;; This function is called by:
 49424 ;;		_ADC_PostProcessingHandler
 49425 ;; This function uses a non-reentrant model
 49426 ;;
 49427                           
 49428                           	psect	text211
 49429  01C86C                     __ptext211:
 49430                           	opt callstack 0
 49431  01C86C                     _ADCC_HasAccumulatorOverflowed:
 49432                           	opt callstack 14
 49433                           
 49434                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 49435                           
 49436                           ;incstack = 0
 49437  01C86C  AE65               	btfss	3941,7,c	;volatile
 49438  01C86E  D002               	goto	i2u1609_40
 49439  01C870  0E01               	movlw	1
 49440  01C872  0012               	return	
 49441  01C874                     i2u1609_40:
 49442  01C874  0E00               	movlw	0
 49443  01C876  0012               	return		;funcret
 49444  01C878                     __end_of_ADCC_HasAccumulatorOverflowed:
 49445                           	opt callstack 0
 49446                           
 49447 ;; *************** function _ADCC_GetFilterValue *****************
 49448 ;; Defined at:
 49449 ;;		line 222 in file "mcc_generated_files/adcc.c"
 49450 ;; Parameters:    Size  Location     Type
 49451 ;;		None
 49452 ;; Auto vars:     Size  Location     Type
 49453 ;;		None
 49454 ;; Return value:  Size  Location     Type
 49455 ;;                  2    0[COMRAM] unsigned int 
 49456 ;; Registers used:
 49457 ;;		wreg, status,2, status,0
 49458 ;; Tracked objects:
 49459 ;;		On entry : 0/0
 49460 ;;		On exit  : 0/0
 49461 ;;		Unchanged: 0/0
 49462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49467 ;;Total ram usage:        4 bytes
 49468 ;; Hardware stack levels used:    1
 49469 ;; This function calls:
 49470 ;;		Nothing
 49471 ;; This function is called by:
 49472 ;;		_ADC_PostProcessingHandler
 49473 ;; This function uses a non-reentrant model
 49474 ;;
 49475                           
 49476                           	psect	text212
 49477  01C6CE                     __ptext212:
 49478                           	opt callstack 0
 49479  01C6CE                     _ADCC_GetFilterValue:
 49480                           	opt callstack 14
 49481                           
 49482                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 49483                           
 49484                           ;incstack = 0
 49485  01C6CE  5073               	movf	3955,w,c	;volatile
 49486  01C6D0  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 49487  01C6D2  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 49488  01C6D4  5072               	movf	3954,w,c	;volatile
 49489  01C6D6  2403               	addwf	??_ADCC_GetFilterValue,w,c
 49490  01C6D8  6E01               	movwf	?_ADCC_GetFilterValue,c
 49491  01C6DA  0E00               	movlw	0
 49492  01C6DC  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 49493  01C6DE  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 49494  01C6E0  0012               	return		;funcret
 49495  01C6E2                     __end_of_ADCC_GetFilterValue:
 49496                           	opt callstack 0
 49497                           
 49498 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 49499 ;; Defined at:
 49500 ;;		line 198 in file "mcc_generated_files/adcc.c"
 49501 ;; Parameters:    Size  Location     Type
 49502 ;;		None
 49503 ;; Auto vars:     Size  Location     Type
 49504 ;;		None
 49505 ;; Return value:  Size  Location     Type
 49506 ;;                  1    wreg      unsigned char 
 49507 ;; Registers used:
 49508 ;;		wreg, status,2
 49509 ;; Tracked objects:
 49510 ;;		On entry : 0/0
 49511 ;;		On exit  : 0/0
 49512 ;;		Unchanged: 0/0
 49513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49518 ;;Total ram usage:        0 bytes
 49519 ;; Hardware stack levels used:    1
 49520 ;; This function calls:
 49521 ;;		Nothing
 49522 ;; This function is called by:
 49523 ;;		_ADC_PostProcessingHandler
 49524 ;; This function uses a non-reentrant model
 49525 ;;
 49526                           
 49527                           	psect	text213
 49528  01C8F2                     __ptext213:
 49529                           	opt callstack 0
 49530  01C8F2                     _ADCC_GetCurrentCountofConversions:
 49531                           	opt callstack 14
 49532                           
 49533                           ;adcc.c: 201: return ADCNT;
 49534                           
 49535                           ;incstack = 0
 49536  01C8F2  5067               	movf	3943,w,c	;volatile
 49537  01C8F4  0012               	return		;funcret
 49538  01C8F6                     __end_of_ADCC_GetCurrentCountofConversions:
 49539                           	opt callstack 0
 49540                           
 49541 ;; *************** function _ADCC_GetConversionResult *****************
 49542 ;; Defined at:
 49543 ;;		line 130 in file "mcc_generated_files/adcc.c"
 49544 ;; Parameters:    Size  Location     Type
 49545 ;;		None
 49546 ;; Auto vars:     Size  Location     Type
 49547 ;;		None
 49548 ;; Return value:  Size  Location     Type
 49549 ;;                  2    0[COMRAM] unsigned int 
 49550 ;; Registers used:
 49551 ;;		wreg, status,2, status,0
 49552 ;; Tracked objects:
 49553 ;;		On entry : 0/0
 49554 ;;		On exit  : 0/0
 49555 ;;		Unchanged: 0/0
 49556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49561 ;;Total ram usage:        4 bytes
 49562 ;; Hardware stack levels used:    1
 49563 ;; This function calls:
 49564 ;;		Nothing
 49565 ;; This function is called by:
 49566 ;;		_ADC_PostProcessingHandler
 49567 ;; This function uses a non-reentrant model
 49568 ;;
 49569                           
 49570                           	psect	text214
 49571  01C6E2                     __ptext214:
 49572                           	opt callstack 0
 49573  01C6E2                     _ADCC_GetConversionResult:
 49574                           	opt callstack 14
 49575                           
 49576                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 49577                           
 49578                           ;incstack = 0
 49579  01C6E2  5064               	movf	3940,w,c	;volatile
 49580  01C6E4  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 49581  01C6E6  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 49582  01C6E8  5063               	movf	3939,w,c	;volatile
 49583  01C6EA  2403               	addwf	??_ADCC_GetConversionResult,w,c
 49584  01C6EC  6E01               	movwf	?_ADCC_GetConversionResult,c
 49585  01C6EE  0E00               	movlw	0
 49586  01C6F0  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 49587  01C6F2  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 49588  01C6F4  0012               	return		;funcret
 49589  01C6F6                     __end_of_ADCC_GetConversionResult:
 49590                           	opt callstack 0
 49591                           
 49592                           	psect	text215
 49593  000000                     __ptext215:
 49594                           	opt callstack 0
 49595                           
 49596                           	psect	rparam
 49597  0000                     
 49598                           	psect	temp
 49599  00005F                     btemp:
 49600                           	opt callstack 0
 49601  00005F                     	ds	1
 49602  0000                     int$flags	set	btemp
 49603  0000                     wtemp8	set	btemp+1
 49604  0000                     ttemp5	set	btemp+1
 49605  0000                     ttemp6	set	btemp+4
 49606  0000                     ttemp7	set	btemp+8
 49607                           tosu	equ	0xFFF
 49608                           tosh	equ	0xFFE
 49609                           tosl	equ	0xFFD
 49610                           stkptr	equ	0xFFC
 49611                           pclatu	equ	0xFFB
 49612                           pclath	equ	0xFFA
 49613                           pcl	equ	0xFF9
 49614                           tblptru	equ	0xFF8
 49615                           tblptrh	equ	0xFF7
 49616                           tblptrl	equ	0xFF6
 49617                           tablat	equ	0xFF5
 49618                           prodh	equ	0xFF4
 49619                           prodl	equ	0xFF3
 49620                           indf0	equ	0xFEF
 49621                           postinc0	equ	0xFEE
 49622                           postdec0	equ	0xFED
 49623                           preinc0	equ	0xFEC
 49624                           plusw0	equ	0xFEB
 49625                           fsr0h	equ	0xFEA
 49626                           fsr0l	equ	0xFE9
 49627                           wreg	equ	0xFE8
 49628                           indf1	equ	0xFE7
 49629                           postinc1	equ	0xFE6
 49630                           postdec1	equ	0xFE5
 49631                           preinc1	equ	0xFE4
 49632                           plusw1	equ	0xFE3
 49633                           fsr1h	equ	0xFE2
 49634                           fsr1l	equ	0xFE1
 49635                           bsr	equ	0xFE0
 49636                           indf2	equ	0xFDF
 49637                           postinc2	equ	0xFDE
 49638                           postdec2	equ	0xFDD
 49639                           preinc2	equ	0xFDC
 49640                           plusw2	equ	0xFDB
 49641                           fsr2h	equ	0xFDA
 49642                           fsr2l	equ	0xFD9
 49643                           status	equ	0xFD8


Data Sizes:
    Strings     6180
    Constant    948
    Data        38
    BSS         1610
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     89     158
    BANK1           256     97     187
    BANK2           256    190     256
    BANK3           256     47     256
    BANK4           256      8     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2printf@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> i2_putch(), putch(), Absolute function(), 

    i2printf@pb.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.pTrFlag	PTR enum E9433 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    OLED_updateHandler$6035	PTR const unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_303(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_190(CODE[12]), STR_189(CODE[13]), STR_188(CODE[16]), STR_187(CODE[14]), 
		 -> STR_186(CODE[15]), STR_185(CODE[16]), STR_184(CODE[10]), STR_183(CODE[16]), 
		 -> STR_181(CODE[13]), STR_179(CODE[11]), STR_178(CODE[2]), STR_177(CODE[2]), 
		 -> STR_176(CODE[16]), STR_175(CODE[2]), STR_174(CODE[2]), STR_172(CODE[13]), 
		 -> STR_171(CODE[15]), STR_170(CODE[2]), STR_169(CODE[2]), STR_167(CODE[13]), 
		 -> STR_166(CODE[15]), STR_165(CODE[2]), STR_164(CODE[2]), STR_162(CODE[2]), 
		 -> STR_161(CODE[2]), STR_160(CODE[13]), STR_159(CODE[2]), STR_153(CODE[13]), 
		 -> STR_152(CODE[2]), STR_151(CODE[2]), STR_149(CODE[2]), STR_137(CODE[14]), 
		 -> STR_136(CODE[2]), STR_135(CODE[2]), STR_133(CODE[11]), STR_132(CODE[13]), 
		 -> STR_131(CODE[2]), STR_130(CODE[2]), STR_129(CODE[9]), STR_128(CODE[11]), 
		 -> STR_127(CODE[14]), STR_126(CODE[2]), STR_125(CODE[2]), STR_123(CODE[12]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_119(CODE[14]), STR_118(CODE[2]), 
		 -> STR_117(CODE[2]), STR_115(CODE[10]), STR_114(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[9]), STR_110(CODE[2]), STR_109(CODE[2]), STR_107(CODE[13]), 
		 -> STR_106(CODE[12]), STR_105(CODE[2]), STR_104(CODE[2]), STR_102(CODE[13]), 
		 -> STR_101(CODE[14]), STR_100(CODE[2]), STR_99(CODE[2]), STR_97(CODE[13]), 
		 -> STR_96(CODE[2]), STR_95(CODE[2]), STR_93(CODE[13]), STR_92(CODE[12]), 
		 -> STR_91(CODE[2]), STR_90(CODE[2]), STR_88(CODE[14]), STR_87(CODE[2]), 
		 -> STR_86(CODE[2]), STR_84(CODE[13]), STR_83(CODE[2]), STR_82(CODE[2]), 
		 -> STR_80(CODE[14]), STR_79(CODE[2]), STR_78(CODE[2]), STR_77(CODE[15]), 
		 -> STR_76(CODE[16]), STR_75(CODE[14]), STR_74(CODE[11]), STR_73(CODE[14]), 
		 -> STR_72(CODE[15]), STR_71(CODE[16]), STR_70(CODE[10]), STR_69(CODE[16]), 
		 -> OLED_updateHandler@rev_id_str(BANK3[17]), STR_67(CODE[13]), OLED_updateHandler@dev_id_str(BANK3[17]), STR_65(CODE[11]), 
		 -> STR_64(CODE[16]), STR_63(CODE[16]), STR_62(CODE[14]), STR_42(CODE[10]), 
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), 
		 -> STR_19(CODE[9]), STR_18(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_228(CODE[5]), STR_226(CODE[25]), STR_222(CODE[22]), STR_221(CODE[14]), 
		 -> STR_219(CODE[18]), STR_217(CODE[17]), STR_215(CODE[17]), STR_199(CODE[15]), 
		 -> STR_197(CODE[6]), STR_194(CODE[6]), STR_191(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_331(CODE[2]), STR_330(CODE[3]), STR_329(CODE[3]), STR_328(CODE[3]), 
		 -> STR_327(CODE[3]), STR_326(CODE[3]), STR_325(CODE[3]), STR_324(CODE[3]), 
		 -> STR_323(CODE[3]), STR_322(CODE[3]), STR_321(CODE[2]), STR_320(CODE[3]), 
		 -> STR_319(CODE[3]), STR_318(CODE[3]), STR_317(CODE[3]), STR_316(CODE[3]), 
		 -> STR_315(CODE[3]), STR_314(CODE[3]), STR_313(CODE[3]), STR_312(CODE[3]), 
		 -> STR_311(CODE[2]), STR_310(CODE[2]), STR_309(CODE[2]), STR_308(CODE[2]), 
		 -> STR_307(CODE[2]), STR_306(CODE[2]), STR_305(CODE[2]), STR_304(CODE[2]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_358(CODE[11]), STR_297(CODE[5]), STR_296(CODE[9]), STR_295(CODE[9]), 
		 -> STR_294(CODE[9]), STR_293(CODE[8]), STR_292(CODE[9]), STR_291(CODE[9]), 
		 -> STR_182(CODE[7]), STR_180(CODE[5]), STR_173(CODE[4]), STR_168(CODE[4]), 
		 -> STR_163(CODE[11]), STR_158(CODE[11]), STR_157(CODE[11]), STR_156(CODE[11]), 
		 -> STR_155(CODE[11]), STR_154(CODE[9]), STR_150(CODE[11]), STR_148(CODE[11]), 
		 -> STR_147(CODE[11]), STR_146(CODE[11]), STR_145(CODE[11]), STR_144(CODE[9]), 
		 -> STR_143(CODE[11]), STR_142(CODE[9]), STR_141(CODE[8]), STR_140(CODE[9]), 
		 -> STR_139(CODE[8]), STR_138(CODE[9]), STR_134(CODE[5]), STR_124(CODE[8]), 
		 -> STR_120(CODE[8]), STR_116(CODE[8]), STR_112(CODE[8]), STR_108(CODE[9]), 
		 -> STR_103(CODE[8]), STR_98(CODE[8]), STR_94(CODE[8]), STR_89(CODE[8]), 
		 -> STR_85(CODE[8]), STR_81(CODE[8]), STR_68(CODE[7]), STR_66(CODE[5]), 
		 -> STR_59(CODE[11]), STR_58(CODE[10]), STR_57(CODE[13]), STR_56(CODE[12]), 
		 -> STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[10]), STR_52(CODE[9]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_355(CODE[60]), STR_354(CODE[24]), STR_353(CODE[24]), STR_352(CODE[24]), 
		 -> STR_351(CODE[27]), STR_350(CODE[20]), STR_349(CODE[35]), STR_348(CODE[34]), 
		 -> STR_347(CODE[37]), STR_346(CODE[34]), STR_345(CODE[36]), STR_344(CODE[35]), 
		 -> STR_343(CODE[33]), STR_342(CODE[35]), STR_341(CODE[20]), STR_340(CODE[23]), 
		 -> STR_339(CODE[20]), STR_338(CODE[22]), STR_337(CODE[21]), STR_336(CODE[19]), 
		 -> STR_335(CODE[21]), STR_334(CODE[27]), STR_333(CODE[18]), STR_332(CODE[11]), 
		 -> terminalTextAttributes@print_string(BANK3[16]), STR_302(CODE[4]), STR_301(CODE[4]), STR_300(CODE[4]), 
		 -> STR_299(CODE[4]), STR_298(CODE[5]), STR_290(CODE[47]), STR_289(CODE[99]), 
		 -> STR_288(CODE[65]), STR_287(CODE[37]), STR_286(CODE[58]), STR_285(CODE[59]), 
		 -> STR_284(CODE[58]), STR_283(CODE[30]), STR_282(CODE[71]), STR_281(CODE[48]), 
		 -> STR_280(CODE[67]), STR_279(CODE[45]), STR_278(CODE[39]), STR_277(CODE[8]), 
		 -> STR_276(CODE[69]), STR_275(CODE[8]), STR_274(CODE[67]), STR_273(CODE[53]), 
		 -> STR_272(CODE[66]), STR_271(CODE[62]), STR_270(CODE[23]), STR_269(CODE[62]), 
		 -> STR_268(CODE[55]), STR_267(CODE[26]), STR_266(CODE[51]), STR_265(CODE[47]), 
		 -> STR_264(CODE[23]), STR_263(CODE[8]), STR_262(CODE[54]), STR_261(CODE[58]), 
		 -> STR_260(CODE[66]), STR_259(CODE[43]), STR_258(CODE[32]), STR_257(CODE[64]), 
		 -> STR_256(CODE[30]), STR_255(CODE[31]), STR_254(CODE[63]), STR_253(CODE[33]), 
		 -> STR_252(CODE[35]), STR_251(CODE[37]), STR_250(CODE[40]), STR_249(CODE[28]), 
		 -> STR_248(CODE[46]), STR_247(CODE[31]), STR_246(CODE[52]), STR_245(CODE[14]), 
		 -> STR_244(CODE[28]), STR_243(CODE[50]), STR_242(CODE[29]), STR_241(CODE[36]), 
		 -> STR_240(CODE[45]), STR_239(CODE[88]), STR_238(CODE[37]), STR_237(CODE[3]), 
		 -> STR_236(CODE[30]), STR_235(CODE[46]), STR_234(CODE[39]), STR_233(CODE[62]), 
		 -> STR_232(CODE[57]), STR_231(CODE[653]), STR_230(CODE[22]), STR_229(CODE[3]), 
		 -> STR_227(CODE[29]), STR_225(CODE[3]), STR_224(CODE[47]), STR_223(CODE[3]), 
		 -> STR_220(CODE[24]), STR_218(CODE[23]), STR_216(CODE[23]), STR_214(CODE[3]), 
		 -> STR_213(CODE[3]), STR_212(CODE[54]), STR_211(CODE[3]), STR_210(CODE[56]), 
		 -> STR_209(CODE[3]), STR_208(CODE[60]), STR_207(CODE[61]), STR_206(CODE[3]), 
		 -> STR_205(CODE[62]), STR_204(CODE[3]), STR_203(CODE[50]), STR_202(CODE[3]), 
		 -> STR_201(CODE[45]), STR_200(CODE[3]), STR_198(CODE[54]), STR_196(CODE[4]), 
		 -> STR_195(CODE[5]), STR_193(CODE[4]), STR_192(CODE[5]), STR_12(CODE[34]), 
		 -> STR_11(CODE[29]), STR_10(CODE[47]), STR_9(CODE[30]), STR_8(CODE[46]), 
		 -> STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), STR_4(CODE[39]), 
		 -> STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(BANK2[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), ftoa@buf(BANK3[17]), STR_356(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), freqMeasConvert@qi_period(BANK1[4]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), 
		 -> OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), getStringSecondsAsTime@return_string(BANK3[40]), 
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), STR_32(CODE[16]), 
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), 
		 -> STR_14(CODE[9]), STR_13(CODE[5]), LM73Convert@Ambient_Conv(BANK2[2]), LM73Convert@POS5_Conv(BANK2[2]), 
		 -> LM73Convert@QI_Conv(BANK2[2]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_358(CODE[11]), STR_355(CODE[60]), STR_354(CODE[24]), STR_353(CODE[24]), 
		 -> STR_352(CODE[24]), STR_351(CODE[27]), STR_350(CODE[20]), STR_349(CODE[35]), 
		 -> STR_348(CODE[34]), STR_347(CODE[37]), STR_346(CODE[34]), STR_345(CODE[36]), 
		 -> STR_344(CODE[35]), STR_343(CODE[33]), STR_342(CODE[35]), STR_341(CODE[20]), 
		 -> STR_340(CODE[23]), STR_339(CODE[20]), STR_338(CODE[22]), STR_337(CODE[21]), 
		 -> STR_336(CODE[19]), STR_335(CODE[21]), STR_334(CODE[27]), STR_333(CODE[18]), 
		 -> STR_332(CODE[11]), terminalTextAttributes@print_string(BANK3[16]), STR_302(CODE[4]), STR_301(CODE[4]), 
		 -> STR_300(CODE[4]), STR_299(CODE[4]), STR_298(CODE[5]), STR_297(CODE[5]), 
		 -> STR_296(CODE[9]), STR_295(CODE[9]), STR_294(CODE[9]), STR_293(CODE[8]), 
		 -> STR_292(CODE[9]), STR_291(CODE[9]), STR_290(CODE[47]), STR_289(CODE[99]), 
		 -> STR_288(CODE[65]), STR_287(CODE[37]), STR_286(CODE[58]), STR_285(CODE[59]), 
		 -> STR_284(CODE[58]), STR_283(CODE[30]), STR_282(CODE[71]), STR_281(CODE[48]), 
		 -> STR_280(CODE[67]), STR_279(CODE[45]), STR_278(CODE[39]), STR_277(CODE[8]), 
		 -> STR_276(CODE[69]), STR_275(CODE[8]), STR_274(CODE[67]), STR_273(CODE[53]), 
		 -> STR_272(CODE[66]), STR_271(CODE[62]), STR_270(CODE[23]), STR_269(CODE[62]), 
		 -> STR_268(CODE[55]), STR_267(CODE[26]), STR_266(CODE[51]), STR_265(CODE[47]), 
		 -> STR_264(CODE[23]), STR_263(CODE[8]), STR_262(CODE[54]), STR_261(CODE[58]), 
		 -> STR_260(CODE[66]), STR_259(CODE[43]), STR_258(CODE[32]), STR_257(CODE[64]), 
		 -> STR_256(CODE[30]), STR_255(CODE[31]), STR_254(CODE[63]), STR_253(CODE[33]), 
		 -> STR_252(CODE[35]), STR_251(CODE[37]), STR_250(CODE[40]), STR_249(CODE[28]), 
		 -> STR_248(CODE[46]), STR_247(CODE[31]), STR_246(CODE[52]), STR_245(CODE[14]), 
		 -> STR_244(CODE[28]), STR_243(CODE[50]), STR_242(CODE[29]), STR_241(CODE[36]), 
		 -> STR_240(CODE[45]), STR_239(CODE[88]), STR_238(CODE[37]), STR_237(CODE[3]), 
		 -> STR_236(CODE[30]), STR_235(CODE[46]), STR_234(CODE[39]), STR_233(CODE[62]), 
		 -> STR_232(CODE[57]), STR_231(CODE[653]), STR_230(CODE[22]), STR_229(CODE[3]), 
		 -> STR_227(CODE[29]), STR_225(CODE[3]), STR_224(CODE[47]), STR_223(CODE[3]), 
		 -> STR_220(CODE[24]), STR_218(CODE[23]), STR_216(CODE[23]), STR_214(CODE[3]), 
		 -> STR_213(CODE[3]), STR_212(CODE[54]), STR_211(CODE[3]), STR_210(CODE[56]), 
		 -> STR_209(CODE[3]), STR_208(CODE[60]), STR_207(CODE[61]), STR_206(CODE[3]), 
		 -> STR_205(CODE[62]), STR_204(CODE[3]), STR_203(CODE[50]), STR_202(CODE[3]), 
		 -> STR_201(CODE[45]), STR_200(CODE[3]), STR_198(CODE[54]), STR_196(CODE[4]), 
		 -> STR_195(CODE[5]), STR_193(CODE[4]), STR_192(CODE[5]), STR_182(CODE[7]), 
		 -> STR_180(CODE[5]), STR_173(CODE[4]), STR_168(CODE[4]), STR_163(CODE[11]), 
		 -> STR_158(CODE[11]), STR_157(CODE[11]), STR_156(CODE[11]), STR_155(CODE[11]), 
		 -> STR_154(CODE[9]), STR_150(CODE[11]), STR_148(CODE[11]), STR_147(CODE[11]), 
		 -> STR_146(CODE[11]), STR_145(CODE[11]), STR_144(CODE[9]), STR_143(CODE[11]), 
		 -> STR_142(CODE[9]), STR_141(CODE[8]), STR_140(CODE[9]), STR_139(CODE[8]), 
		 -> STR_138(CODE[9]), STR_134(CODE[5]), STR_124(CODE[8]), STR_120(CODE[8]), 
		 -> STR_116(CODE[8]), STR_112(CODE[8]), STR_108(CODE[9]), STR_103(CODE[8]), 
		 -> STR_98(CODE[8]), STR_94(CODE[8]), STR_89(CODE[8]), STR_85(CODE[8]), 
		 -> STR_81(CODE[8]), STR_68(CODE[7]), STR_66(CODE[5]), STR_59(CODE[11]), 
		 -> STR_58(CODE[10]), STR_57(CODE[13]), STR_56(CODE[12]), STR_55(CODE[11]), 
		 -> STR_54(CODE[10]), STR_53(CODE[10]), STR_52(CODE[9]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_12(CODE[34]), STR_11(CODE[29]), STR_10(CODE[47]), 
		 -> STR_9(CODE[30]), STR_8(CODE[46]), STR_7(CODE[39]), STR_6(CODE[62]), 
		 -> STR_5(CODE[57]), STR_4(CODE[39]), STR_3(CODE[44]), STR_2(CODE[52]), 
		 -> STR_1(CODE[4]), 

    S4921__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4921__prbuf$ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(BANK2[5]), printf@pb(BANK2[5]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    floatToEngineeringFormat@res	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__floatToEngineeringFormat	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), STR_61(CODE[1]), STR_60(CODE[1]), 
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__getStringSecondsAsTime	PTR unsigned char  size(2) Largest target is 40
		 -> getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[10]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), 
		 -> STR_38(CODE[11]), STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), 
		 -> STR_34(CODE[10]), STR_33(CODE[10]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), 

    sp__getNXQChargeStateStringCaps	PTR unsigned char  size(2) Largest target is 14
		 -> STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), STR_19(CODE[9]), 
		 -> STR_18(CODE[5]), 

    sp__getNXQChargeStateString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), STR_14(CODE[9]), 
		 -> STR_13(CODE[5]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_32(CODE[16]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), 
		 -> STR_28(CODE[41]), STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), 
		 -> STR_24(CODE[15]), STR_23(CODE[16]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    F10007.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWrite@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    F10002.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S2089$pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), NULL(NULL[0]), 

    S2104$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    S2104$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_heartbeatTimerHandler
    _heartbeatTimerHandler->i2___fladd
    i2_TMR1_Reload->i2_TMR1_WriteTimer
    i2_TMR3_Reload->i2_TMR3_WriteTimer
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___llmod->i2___lldiv
    i2___fltol->i2_scale
    _ADC_PostProcessingHandler->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _fabs->i2___flneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _heartbeatTimerHandler->i2___fladd
    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingHandler
    _ADC_PostProcessingHandler->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _INTERRUPT_InterruptManagerLow->_CCP2_CaptureISR
    _TMR3_ISR->i1_TMR3_WriteTimer
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _ADC_acquisitionTimerHandler->_ADCC_StartConversion
    _I2C2_ISR->_I2C2_Stop
    _CCP2_CaptureISR->_CCP2_CallBack
    _CCP2_CallBack->_freqMeasConvert
    _freqMeasConvert->i1___flmul
    i1___flmul->i1___fldiv
    i1___fldiv->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _terminalClearScreen->_printf
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _terminalTextAttributesReset->_printf
    _terminalTextAttributes->_printf
    _getStringSecondsAsTime->_sprintf
    _getUserID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _clearUARTErrors->_updateErrorLEDs
    _clearI2CErrors->_updateErrorLEDs
    _clearADCErrors->_updateErrorLEDs
    _terminalSetCursorHome->_printf
    _printf->_floatToEngineeringFormat
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_updateHandler->_floatToEngineeringFormat
    _strcpy->_getCauseOfResetStringSmall
    _getYearsFromOnTime->___lldiv
    _getSecondsFromOnTime->___lldiv
    _getMinutesFromOnTime->___lldiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getHoursFromOnTime->___lldiv
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _getDaysFromOnTime->___lldiv
    _floatToEngineeringFormat->_sprintf
    _sprintf->__doprnt
    __doprnt->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_EUSART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___xxtofl
    ___fladd->_fround
    _abs->___fltol
    _OLED_UpdateFromRAMBuffer->_OLED_WriteString
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C2_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C2_MasterWrite
    _LM73TempSensorInitialize->_I2C2_MasterWrite
    _LM73AcquisitionHandler->_LM73Convert
    _LM73Convert->___xxtofl
    ___xxtofl->_abs
    ___flmul->___awdiv
    _I2C2_MasterWrite->_I2C2_MasterWriteTRBBuild
    _I2C2_MasterRead->_I2C2_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _printf->_getStringSecondsAsTime

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 2292129
                                              6 BANK4      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
             _LM73AcquisitionHandler
           _LM73TempSensorInitialize
                         _OLED_Clear
                          _OLED_Init
                 _OLED_updateHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
           _TMR2_SetInterruptHandler
                        _TMR3_Reload
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
              _freqMeasStartCaptures
                    _getCauseOfReset
              _getCauseOfResetString
           _printCurrentMeasurements
                             _printf
                _terminalClearScreen
              _terminalSetCursorHome
             _terminalTextAttributes
        _terminalTextAttributesReset
            _terminal_ringBufferPull
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              7     7      0 1146672
                                             46 BANK3      1     1      0
                                              0 BANK4      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        6     4      2 1145494
                                            186 BANK2      4     2      2
                                             44 BANK3      2     2      0
                     _clearADCErrors
                     _clearI2CErrors
                    _clearUARTErrors
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
             _getStringSecondsAsTime
                          _getUserID
           _printCurrentMeasurements
            _printErrorHandlerStatus
                             _printf
                             _strcmp
                             _strlen
                _terminalClearScreen
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalClearScreen                                  0     0      0   79527
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4    2113
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) _printErrorHandlerStatus                              0     0      0  259336
                        _getADCError
                        _getI2CError
                       _getUARTError
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _printCurrentMeasurements                             0     0      0  446299
                            ___fldiv
           _floatToEngineeringFormat
            _getNXQChargeStateString
             _getStringSecondsAsTime
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributesReset                          0     0      0   79527
                             _printf
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributes                              20    18      2  100282
                                            184 BANK2      2     0      2
                                             26 BANK3     18    18      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     472
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (4) _getStringSecondsAsTime                              35    31      4   93830
                                            159 BANK2      8     4      4
                                              0 BANK3     26    26      0
                            ___lldiv
                             ___wmul
                            _sprintf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    6083
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (4) _getNXQChargeStateString                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             11 BANK2      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                    4     2      2     121
                                             13 BANK2      4     2      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (3) _clearUARTErrors                                      0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearI2CErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      1     1      0       0
                                              0 BANK2      1     1      0
                        _getADCError
                        _getI2CError
                       _getUARTError
 ---------------------------------------------------------------------------------
 (2) _getUARTError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getI2CError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminalSetCursorHome                                0     0      0   79527
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              15     7      8   79527
                                            169 BANK2     15     7      8
                            ___fldiv (ARG)
                            __doprnt
           _floatToEngineeringFormat (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
            _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      58
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _freqMeasStartCaptures                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     304
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_Reload                                          0     0      0     269
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2141
                    _ADCC_Initialize
                    _CCP2_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_updateHandler                                  38    38      0  238879
                                            169 BANK2      2     2      0
                                              0 BANK3     36    36      0
           _OLED_UpdateFromRAMBuffer
           _floatToEngineeringFormat
         _getCauseOfResetStringSmall
                  _getDaysFromOnTime
                        _getDeviceID
                 _getHoursFromOnTime
                 _getMajorRevisionID
                 _getMinorRevisionID
               _getMinutesFromOnTime
        _getNXQChargeStateStringCaps
               _getSecondsFromOnTime
                 _getYearsFromOnTime
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4   18109
                                              3 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
        _getNXQChargeStateStringCaps (ARG)
 ---------------------------------------------------------------------------------
 (2) _getYearsFromOnTime                                   5     1      4    4325
                                             13 BANK2      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _getSecondsFromOnTime                                13     9      4    8199
                                             13 BANK2     13     9      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getNXQChargeStateStringCaps                          2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getMinutesFromOnTime                                12     8      4    8041
                                             13 BANK2     12     8      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             11 BANK2      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             11 BANK2      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _getHoursFromOnTime                                  11     7      4    7883
                                             13 BANK2     11     7      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             11 BANK2      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                              4 BANK2      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDaysFromOnTime                                   10     6      4    7635
                                             13 BANK2     10     6      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getCauseOfResetStringSmall                           3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (4) _floatToEngineeringFormat                            10     6      4   88840
                                            159 BANK2     10     6      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___fltol
                           ___xxtofl
                                _abs
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             19     7     12   77536
                                            140 BANK2     19     7     12
                            ___fldiv (ARG)
                            __doprnt
                  _getDaysFromOnTime (ARG)
                        _getDeviceID (ARG)
                 _getHoursFromOnTime (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
               _getMinutesFromOnTime (ARG)
               _getSecondsFromOnTime (ARG)
                 _getYearsFromOnTime (ARG)
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             57    51      6   66922
                                             84 BANK2     56    50      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4   12018
                                             39 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1513
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              6 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              1 BANK2      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Write                                        1     1      0      62
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4   10494
                                             39 BANK2     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     912
                                              0 BANK2      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1061
                                              5 BANK2      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     634
                                              0 BANK2     17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     634
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3152
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8    1062
                                             13 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    4201
                                              0 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     845
                                             48 BANK2     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5515
                                             76 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4322
                                             52 BANK2     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     284
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2216
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     950
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             58 BANK2      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4293
                                              0 BANK2     25    17      8
 ---------------------------------------------------------------------------------
 (2) _OLED_UpdateFromRAMBuffer                             4     4      0   14918
                                             35 BANK2      4     4      0
                   _OLED_WriteString
                            _OLED_YX
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     940
                                              0 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (3) _OLED_YX                                              5     4      1    6177
                                             20 BANK2      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_WriteString                                     2     0      2    7405
                                             33 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    5724
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         4     4      0    5724
                                             16 BANK2      4     4      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    6756
                                             33 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (4) _OLED_PutChar                                        17    17      0    6620
                                             16 BANK2     17    17      0
                   _I2C2_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (5) _memmove                                             12     6      6     791
                                              0 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LM73TempSensorInitialize                             3     3      0    6046
                                             16 BANK2      3     3      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LM73AcquisitionHandler                               0     0      0   18361
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
                        _LM73Convert
 ---------------------------------------------------------------------------------
 (2) _LM73Convert                                          9     9      0   10436
                                             76 BANK2      9     9      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1710
                                             62 BANK2     14    10      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    8171
                                             14 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     7     0      7    5567
                                              9 BANK2      7     0      7
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterWriteTRBBuild                             9     2      7     546
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7    2358
                                              9 BANK2      7     0      7
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterTRBInsert                                 6     2      4     546
                                              0 BANK2      6     2      4
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (7) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              9     2      7     577
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        9     9      0    5634
                                             88 BANK1      9     9      0
                    _CCP2_CaptureISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR3_ISR                                            0     0      0     280
                   Absolute function *
          _QIIdleChargedTimerHandler *
       _TMR3_DefaultInterruptHandler *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIIdleChargedTimerHandler                           0     0      0     140
                      i1_TMR3_Reload
                   i1_TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_Reload                                       0     0      0     140
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR3_WriteTimer                                   2     0      2     140
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
        _ADC_acquisitionTimerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_acquisitionTimerHandler                         0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (13) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_ISR                                            2     2      0      31
                                              3 BANK1      2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C2_Stop                                           3     3      0      31
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2_CaptureISR                                     2     2      0    5301
                                             86 BANK1      2     2      0
                      _CCP2_CallBack
 ---------------------------------------------------------------------------------
 (11) _CCP2_CallBack                                       2     0      2    5254
                                             84 BANK1      2     0      2
                    _freqMeasConvert
 ---------------------------------------------------------------------------------
 (12) _freqMeasConvert                                     4     4      0    5156
                                             80 BANK1      4     4      0
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___flmul                                          25    17      8    1518
                                             55 BANK1     25    17      8
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1225
                                             30 BANK1     25    17      8
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fladd                                          16     8      8    2036
                                             14 BANK1     16     8      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     12    12      0   60547
                                             77 BANK0     12    12      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
                _QIErrorTimerHandler *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _QIErrorTimerHandler                                 0     0      0     140
                      i2_TMR1_Reload
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0    4154
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _heartbeatTimerHandler *
 ---------------------------------------------------------------------------------
 (16) _heartbeatTimerHandler                               1     1      0    4154
                                             93 COMRAM     1     1      0
                          i2___fladd
                          i2___llmod
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0     368
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCBF3_ISR                                          0     0      0     254
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                 _QIChargeIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIChargeIOCHandler                                  0     0      0     254
                    _TMR3_StartTimer
                      i2_TMR1_Reload
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Reload                                       0     0      0     140
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCBF2_ISR                                          0     0      0     114
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                   _QIIdleIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIIdleIOCHandler                                    0     0      0     114
                    _TMR1_StartTimer
                    _TMR3_StartTimer
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) i2_TMR3_Reload                                       0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
               _rightCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _rightCapTouchHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                _leftCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _leftCapTouchHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0   39568
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) i2_printf                                            9     7      2   39568
                                             68 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (17) i2__doprnt                                          57    51      6   39040
                                             12 BANK0     56    50      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (18) i2_scale                                             9     5      4    6850
                                             68 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (19) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) i2_fround                                           13     9      4    5676
                                             68 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     442
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     451
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2__tdiv_to_l_                                      17     9      8     524
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (18) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (18) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     582
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (18) i2___fltol                                          10     6      4     442
                                             77 COMRAM    10     6      4
                          i2___flmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fleq                                           12     4      8     270
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16177
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADC_PostProcessingHandler *
 ---------------------------------------------------------------------------------
 (16) _ADC_PostProcessingHandler                          23    23      0   16177
                                             12 BANK0     23    23      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                    _TMR2_StartTimer
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flsub                                           8     0      8    4127
                                              4 BANK0      8     0      8
                _ADCC_GetFilterValue (ARG)
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fladd                                          16     8      8    3572
                                             81 COMRAM    12     4      8
                                              0 BANK0      4     4      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                               _fabs (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    4433
                                             43 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2___fldiv                                          25    17      8    1589
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _fabs                                                4     0      4     408
                                              4 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) i2___flneg                                           4     0      4     135
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (18) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _IOCBF2_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _LM73AcquisitionHandler
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
     _LM73Convert
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
   _LM73TempSensorInitialize
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _OLED_Clear
     _OLED_PutChar
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
   _OLED_updateHandler
     _OLED_UpdateFromRAMBuffer
       _OLED_WriteString
         _OLED_PutChar
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
       _strlen
     _floatToEngineeringFormat
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetStringSmall
     _getDaysFromOnTime
       ___lldiv
       ___wmul
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getHoursFromOnTime
       ___lldiv
       ___wmul
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinutesFromOnTime
       ___lldiv
       ___wmul
     _getNXQChargeStateStringCaps
     _getSecondsFromOnTime
       ___lldiv
       ___wmul
     _getYearsFromOnTime
       ___lldiv
     _sprintf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _getDaysFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getHoursFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinutesFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getSecondsFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getYearsFromOnTime (ARG)
         ___lldiv
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getNXQChargeStateStringCaps (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CCP2_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _TMR2_SetInterruptHandler
   _TMR3_Reload
     _TMR3_WriteTimer
   _TMR3_SetInterruptHandler
   _TMR3_StopTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _freqMeasStartCaptures
   _getCauseOfReset
   _getCauseOfResetString
   _printCurrentMeasurements
     ___fldiv
     _floatToEngineeringFormat
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getNXQChargeStateString
     _getStringSecondsAsTime
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _terminalTextAttributes
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
     _terminalTextAttributesReset
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
   _printf
     ___fldiv (ARG)
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
       ___flmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
       ___fltol *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART2_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     _floatToEngineeringFormat (ARG)
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetString (ARG)
     _getDeviceID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getNXQChargeStateString (ARG)
     _getStringSecondsAsTime (ARG)
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _getUserID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
   _terminalClearScreen
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalSetCursorHome
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalTextAttributes
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _strcat
     _strncpy
   _terminalTextAttributesReset
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _clearADCErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearI2CErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearUARTErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getStringSecondsAsTime
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printCurrentMeasurements
         ___fldiv
         _floatToEngineeringFormat
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getNXQChargeStateString
         _getStringSecondsAsTime
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printErrorHandlerStatus
         _getADCError
         _getI2CError
         _getUARTError
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcmp
       _strlen
       _terminalClearScreen
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminalTextAttributes
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminalTextAttributesReset
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
     _strlen
   _updateErrorLEDs
     _getADCError
     _getI2CError
     _getUARTError

 _INTERRUPT_InterruptManagerLow (ROOT)
   _CCP2_CaptureISR
     _CCP2_CallBack
       _freqMeasConvert
         i1___fladd
           i1___xxtofl (ARG)
         i1___fldiv
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___flmul
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___fldiv (ARG)
             i1___fladd (ARG)
               i1___xxtofl (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___xxtofl
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR2_ISR
     Absolute function(Fake) *
     _ADC_acquisitionTimerHandler *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion
       _TMR2_StopTimer
         _TMR2_Stop
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     Absolute function(Fake) *
     _QIIdleChargedTimerHandler *
       i1_TMR3_Reload
         i1_TMR3_WriteTimer
       i1_TMR3_StopTimer
     _TMR3_DefaultInterruptHandler *
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingHandler *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _TMR2_StartTimer
         _TMR2_Start
       _fabs
         i2___flneg
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fleq *
         i2___flge *
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
         i2___flsub *
           _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             _fabs (ARG)
               i2___flneg
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___lwdiv (ARG)
                   i2___lwmod (ARG)
                 i2___lwmod (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv
                 i2___lwmod (ARG)
               i2___lwmod
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _EUSART2_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _leftCapTouchHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _rightCapTouchHandler *
   _PIN_MANAGER_IOC *
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _QIIdleIOCHandler *
         _TMR1_StartTimer
         _TMR3_StartTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _QIChargeIOCHandler *
         _TMR3_StartTimer
         i2_TMR1_Reload
           i2_TMR1_WriteTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _heartbeatTimerHandler *
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___llmod
         i2___lldiv (ARG)
   _TMR1_ISR *
     Absolute function(Fake) *
     _QIErrorTimerHandler *
       i2_TMR1_Reload
         i2_TMR1_WriteTimer
       i2_TMR1_StopTimer
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0     400      35       27.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      8      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2F     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     BE     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     61      BB       8       73.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     59      9E       5       98.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     47F       6        0.0%
DATA                 0      0     87F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 12 17:42:26 2019

                              _temp_adc_offset E7D7               __end_of_TMR2_SetInterruptHandler C792  
                                 ___fldiv@aexp 0218                                   ___fldiv@bexp 0217  
                                  i1___fladd@a 0112                                    i1___fladd@b 010E  
             ??_IOCBF3_DefaultInterruptHandler 0001                ?_IOCBF3_DefaultInterruptHandler 0001  
                                 ___fldiv@sign 0210                           ??_OLED_updateHandler 02A9  
                    _QIIdleChargedTimerHandler C4D0                          __end_ofi1_TMR3_Reload C81E  
                                  i1___fldiv@a 0122                                    i1___fldiv@b 011E  
                                  __CFG_CP$OFF 000000                          ?_I2C2_MasterTRBInsert 0200  
                                 ___awdiv@sign 020B                                    i1___flmul@a 013B  
                                  i1___flmul@b 0137                         __end_of_FVR_Initialize C860  
                        _freqMeasStartCaptures C878                 __size_of_heartbeatTimerHandler 015E  
                                           bsr 000FE0                            ___wmul@multiplicand 0202  
                           i2___lwdiv@dividend 0006                  __end_of_heartbeatTimerHandler 981C  
                            ??_TMR5_WriteTimer 0202                 I2C2_MasterReadTRBBuild@address 0205  
                                   i1___xxtofl 9AB0                                            l122 B6FC  
                                          l115 BDAC                                            l124 B714  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                     ?_printErrorHandlerStatus 0001                                    i2___fladd@a 0056  
                                  i2___fladd@b 0052                      _pos12_isns_average_buffer 0440  
                              _timer1ReloadVal 0189                                            _abs C212  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString AD92                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 0205              __size_of_LM73TempSensorInitialize 0238  
                       ??_rightCapTouchHandler 0001                                   __CFG_IDLOC0$ 00000D  
                                   i2___xxtofl 9BF4                                   __CFG_IDLOC1$ 00000E  
                                 __CFG_IDLOC2$ 00000A                                   __CFG_IDLOC3$ 00000D  
                                 __CFG_IDLOC4$ 00000B                                   __CFG_IDLOC5$ 00000E  
                                 __CFG_IDLOC6$ 00000E                                   __CFG_IDLOC7$ 00000F  
                              _TMR2_Initialize C09A                                            prod 000FF3  
                    ?_LM73TempSensorInitialize 0001                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0030  
                                i1___fladd@grs 011D                                    i2___flmul@b 002C  
                                  i2___flsub@a 0068                                    i2___flsub@b 0064  
                 __end_of_getSecondsFromOnTime 96BE                                   ___flmul@aexp 021B  
                                 ___flmul@bexp 0220                       __end_of_OLED_WriteString B6F6  
                             OLED_Command@temp 0210                                   ___flmul@sign 021A  
                                 ___flmul@temp 0225                                   ___flmul@prod 0221  
                                 __CFG_LVP$OFF 000000                                  _INT1_CallBack C3C8  
                                 __CFG_ZCD$OFF 000000                                  i1___fldiv@grs 0131  
                                i1___fldiv@rem 012A                               __end_of_I2C2_ISR 8EEC  
                                 ___fltol@exp1 0239                                           ?_abs 023A  
                                         l2042 3644                                           l2220 948E  
                                         l1340 7C5A                                           l2213 93B2  
                                         l2232 507C                                           l3050 9F00  
                                         l1339 7B68                                _timer3ReloadVal 018D  
                                         l2500 096A                                           l2244 532E  
                                         l2236 5270                                           l2228 5028  
                                         l3301 8438                                           l3302 8434  
                                         l3126 B38A                                           l3207 BC54  
                                         l3320 6776                                           l1392 900C  
                                         l3049 9ED8                                           l2257 66E8  
                                         l1641 B66C                                           l1633 B64C  
                                         l3330 698A                                           l3251 7304  
                                         l3235 7232                                           l1643 B674  
                                         l1635 B654                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l3260 736A                                           l3236 7210  
                                         l2532 0B8A                                           l3261 7366  
                                         l1645 B67C                                           l1637 B65C  
                                         l2534 0B58                                           l2711 B0C8  
                                         l2615 1314                                           l1639 B664  
                                         l3337 6A14                                           l3329 698E  
                                         l3361 99AE                                           l2617 12E2  
                                         l2297 A1E4                                           l3290 83CA  
                                         l2651 14CA                                           l3380 C232  
                                         l3197 B796                                           l2565 0D78  
                         _ADCC_StartConversion C81E                                           l3368 9A2C  
                                         l2649 14FC                                           l2586 10B4  
                                         l2498 099C                                           l1972 A78C  
                                         l2962 A5A0                          __size_ofi2__div_to_l_ 00F4  
                                         STR_1 FFC7                                           STR_2 F1C2  
                                         STR_3 F42F                                           STR_4 F4FE  
                                         STR_5 F00F                                           STR_6 EE33  
                                         STR_7 F525                                           STR_8 F3A7  
                                         STR_9 F7F6                                __end_of_OLED_YX BCA2  
                                  ?_OLED_Clear 0001                                           _LATA 000F83  
                                         _LATB 000F84                                           _LATC 000F85  
                                         _T2PR 000FBC                                           _PMD0 000EE1  
                                         _PMD1 000EE2                                           _PMD2 000EE3  
                                         _PMD3 000EE4                                           _PMD4 000EE5  
                                         _PMD5 000EE6                                           _TMR2 000FBB  
                        ??_leftCapTouchHandler 0001                                           _WPUA 000F10  
                                         _WPUB 000F18                                           _WPUC 000F20  
                                         _WPUE 000F2D                                  _INT2_CallBack C3A4  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0001  
                                 i2___flge@ff2 0005                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write B6F6                ??_ADCC_HasAccumulatorOverflowed 0001  
                     ??_LM73AcquisitionHandler 0255                                   i2___fleq@ff1 0001  
                                 i2___fleq@ff2 0005                                           abs@a 023A  
                                         _fabs BF54                           __end_of_getUARTError C8B8  
                      __end_of_CCP2_Initialize C40E                                           _main 7A18  
                                  i2__doprnt@c 00A3                                           _line 0344  
                                  i2__doprnt@f 006E                                  i1___flmul@grs 0144  
                       OLED_Command@data_array 0212                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                           i2___lwdiv@quotient 000B                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                   i2___flneg@f1 0001  
                              _OLED_RAM_Buffer 0300              __size_of_INT2_SetInterruptHandler 000E  
                  I2C2_MasterReadTRBBuild@ptrb 0200                  __end_of_ADCC_ClearAccumulator C8C4  
                               _clearI2CErrors C52E                      ?_INT2_SetInterruptHandler 0200  
                   __size_ofi2_TMR3_WriteTimer 001C                                           prodh 000FF4  
                                         prodl 000FF3                                 i1___fladd@aexp 011B  
                           _QIChargeIOCHandler C566                                 i1___fladd@bexp 011C  
                                         start 00A2                                _timer5ReloadVal 018B  
                            ??_clearUARTErrors 0201                                   i2___fltol@f1 004E  
                               _clearADCErrors C73A                                ___fldiv@new_exp 0211  
                              __end_ofi2_scale 5C90                   __end_of_EUSART2_Transmit_ISR BC1A  
                              _TMR3_Initialize B8E8                                __end_ofi2_putch C8AA  
                   ??_TMR1_SetInterruptHandler 0203                                  __CFG_CSWEN$ON 000000  
                          _QIErrorTimerHandler C650                                   ___param_bank 000000  
                      __end_of_updateErrorLEDs BB8E                           __size_of_getI2CError 0028  
                                __CFG_SCANE$ON 000000                          __end_ofi2_TMR1_Reload C83A  
                         __size_of_getADCError 0016                       __size_ofi2_EUSART2_Write 0054  
                          ?_QIChargeIOCHandler 0001                                          ??_abs 023C  
                           __size_of_OLED_Init 0098                          __end_ofi2_TMR3_Reload C848  
                      __end_of_TMR0_Initialize C212                       ?_getNXQChargeStateString 0200  
                             __end_of_INT1_ISR C8A0                               __end_of_INT2_ISR C896  
                               i1___fldiv@aexp 0136                                 i1___fldiv@bexp 0135  
                                   _i2c2_state 00DB                 ??_TMR0_DefaultInterruptHandler 0001  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0211  
               __size_of_OSCILLATOR_Initialize 0018                                 i1___fldiv@sign 012E  
                          __size_of_IOCBF2_ISR 002A                            __size_of_IOCBF3_ISR 002A  
                __end_of_OSCILLATOR_Initialize C63A                                          l20013 52EC  
                                        l20005 52AE                                          l20007 52CC  
                                        l20051 AD10                                          l21013 8B46  
                                        l20125 B6A0                                          l20045 AD06  
                                        l20133 B89A                                          l20063 AD24  
                                        l20039 ACFC                                          l20151 939C  
                                        l20135 B8A2                                          l20129 B6CC  
                                        l20057 AD1A                                          l21027 8C1A  
                                        l21043 B5F6                                          l20075 AD38  
                                        l20083 AD42                                          l20155 93D6  
                                        l21061 B61A                                          l21037 B5EA  
                                        l22021 35EE                                          l22005 357C  
                                        l20069 AD2E                                          l20173 9462  
                                        l20165 9436                                          l20181 94B2  
                                        l20157 93F8                                          l21311 9DD2  
                                        l21303 9DAC                                          l21055 B60E  
                                        l22103 3B16                                          l22031 362E  
                                        l20183 94D4                        _I2C2_MasterReadTRBBuild B7F4  
                                        l21321 9DEE                                          l21049 B602  
                                        l22201 3EDE                                          l22113 3BF2  
                                        l20177 9478                                          l20169 944C  
                                        l21315 9DDA                                          l22051 36F2  
                                        l20187 9520                                          l21403 4D6A  
                                        l21309 9DC0                                          l21069 B626  
                                        l22133 3C96                                          l22125 3C5A  
                                        l22109 3BA4                                          l22061 3726  
                                        l21421 4E2C                                          l22311 906C  
                                        l21335 BA32                                          l22135 3CD0  
                                        l22119 3C50                                          l22039 3678  
                                        l21407 4DC6                                          l21351 4AAE  
                                        l21343 4A34                                          l22313 908E  
                                        l21337 BA3C                                          l22233 3FA2  
                                        l22217 3F40                                          l22153 3D42  
                                        l22145 3D06                                          l22073 38A4  
                                        l22049 36B8                                          l21425 4F1C  
                                        l21361 4BAA                                          l22411 91E4  
                                        l22243 8EF2                                          l21291 9D7E  
                                        l21275 9D48                                          l22235 3FA8  
                                        l22155 3D7C                                          l22083 39E4  
                                        l21347 4A6E                                          l22413 9206  
                                        l21285 9D64                                          l21189 C152  
                                        l22181 3E22                                          l22165 3DB2  
                                        l22077 3954                                          l22069 37F2  
                                        l21701 B684                                          l21429 4F80  
                                        l22343 911C                                          l22327 90C4  
                                        l22263 8F5C                                          l21287 9D76  
                                        l21279 9D50                                          l22095 3A4E  
                                        l22239 3FB4                                          l22329 90E6  
                                        l22281 8FD6                                          l22265 8F7E  
                                        l22249 8F26                                          l21297 9D92  
                                        l22089 3A44                                          l21801 2FD0  
                                        l21377 4CBC                                          l21369 4C7C  
                                        l22443 9294                                          l22427 923C  
                                        l21731 BE30                                          l21299 9DA4  
                                        l21379 4CC2                                          l22363 A188  
                                        l22355 A15A                                          l22461 930E  
                                        l22445 92B6                                          l22429 925E  
                                        l22381 9156                                          l17101 B6FE  
                                        l21901 328C                                          l21389 4D04  
                                        l22279 8FB4                                          l20951 C464  
                                        l21399 4D46                                          l22367 A1A6  
                                        l22623 7B5A                                          l22377 912A  
                                        l22297 9036                                          l21737 BE38  
                                        l17113 B740                                          l21833 30A2  
                                        l21817 3032                                          l22369 A1C6  
                                        l22475 9344                                          l22459 92EC  
                                        l22395 918C                                          l17115 B746  
                                        l21675 C444                                          l20787 BDAE  
                                        l22397 91AE                                          l17133 7120  
                                        l18021 01D4                                          l21925 333A  
                                        l21917 32FE                                          l21765 2EB2  
                                        l21749 2E40                                          l20797 BDD6  
                                        l22637 7C66                                          l20975 BA1A  
                                        l17303 73D6                                          l17231 7278  
                                        l17223 7256                                          l17207 721E  
                                        l18111 0590                                          l18103 0532  
                                        l18031 0262                                          l18007 010C  
                                        l21927 335E                                          l22671 7CE0  
                                        l17401 6936                                          l17233 727C  
                                        l17241 728E                                          l17209 7222  
                                        l17153 7164                                          l17129 711C  
                                        l18201 093C                                          l18033 0266  
                                        l18025 0228                                          l21945 33CE  
                                        l21937 3392                                          l21881 31F8  
                                        l21865 3186                                          l21849 3114  
                                        l21785 2F6E                                          l17331 6722  
                                        l17307 73DE                                          l17251 72F4  
                                        l18043 02A6                                          l18035 026A  
                                        l18027 0254                                          l21947 33F2  
                                        l21891 3258                                          l20987 C484  
                                        l17333 6726                                          l17309 73E0  
                                        l17165 7188                                          l17157 7168  
                                        l17501 B268                                          l18221 0A08  
                                        l18061 0328                                          l18045 02B0  
                                        l18037 026E                                          l21973 3498  
                                        l21957 3426                                          l17431 69F0  
                                        l17407 6954                                          l17351 6766  
                                        l17335 6736                                          l20999 8A72  
                                        l17511 B28A                                          l18311 0DF0  
                                        l18207 0976                                          l18231 0A76  
                                        l18151 0780                                          l18143 0714  
                                        l18135 069C                                          l18127 061C  
                                        l18071 03A2                                          l18055 0308  
                                        l18047 02B6                                          l17521 B2AC  
                                        l17505 B274                                          l17601 5584  
                                        l18401 11F2                                          l18241 0AEE  
                                        l18233 0A88                                          l18225 0A44  
                                        l18217 09DC                                          l18065 0364  
                                        l21889 3234                                          l17443 6A32  
                                        l17427 69D2                                          l17259 7328  
                                        l17275 7348                                          l17195 71C4  
                                        l17611 5664                                          l18411 1234  
                                        l18323 0F1A                                          l18315 0E52  
                                        l18307 0DC6                                          l18251 0B2A  
                                        l18219 09F8                                          l18243 0AF6  
                                        l18171 0890                                          l18155 07AE  
                                        l18139 06CA                                          l18091 04A0  
                                        l18083 0456                                          l18059 031E  
                                        l22795 AD62                                          l17349 6762  
                                        l17269 733E                                          l17525 B2BA  
                                        l17517 B2A2                                          l17509 B282  
                                        l18501 153C                                          l18405 1212  
                                        l18333 0FE2                                          l18325 0F46  
                                        l18237 0AC4                                          l18229 0A6E  
                                        l18165 0814                                          l18341 101E  
                                        l18085 046A                                          l18077 0406  
                                        l18069 038E                                          l21989 350A  
                                        l22797 AD78                                          l19301 613C  
                                        l17359 6794                                          l17295 73B0  
                                        l17703 A074                                          l17535 B764  
                                        l17471 B014                                          l17463 AFF6  
                                        l17607 5634                                          l18423 1282  
                                        l18327 0F9A                                          l18271 0BE6  
                                        l18191 0912                                          l18183 08CE  
                                        l18087 048E                                          l18095 04A6  
                                        l22799 AD88                                          l19311 61B4  
                                        l19303 6154                                          l17537 B76C  
                                        l17481 B034                                          l17457 AFE6  
                                        l17625 5848                                          l18521 16BE  
                                        l18513 1650                                          l18505 155A  
                                        l18441 12EE                                          l18425 128A  
                                        l18417 1256                                          l18337 100C  
                                        l18329 0FA6                                          l18257 0B64  
                                        l18281 0CDA                                          l18169 088C  
                                        l18097 051C                                          l19313 61CC  
                                        l19305 616C                                          l17803 AF42  
                                        l17811 A540                                          l17731 A0F2  
                                        l17723 A0C2                                          l17547 B78C  
                                        l17563 BC4A                                          l17555 BC2A  
                                        l17619 5798                                          l18507 15DC  
                                        l18515 1666                                          l18523 16CC  
                                        l18451 1354                                          l18435 12B4  
                                        l18419 125E                                          l18347 1068  
                                        l18339 1014                                          l18291 0D4C  
                                        l18283 0CE6                                          l18267 0BCA  
                                        l18187 08F8                                          l18611 B538  
                                        l19331 62A6                                          l19315 61E4  
                                        l19307 6184                                          l19323 622C  
                                        ?_fabs 0005                                          l17557 BC32  
                                        l17581 7E66                                          l17637 C428  
                                        l17469 B00C                                          l17485 B03E  
                                        l18461 13C4                                          l18453 1370  
                                        l18381 117E                                          l18365 1138  
                                        l18357 10EA                                          l18349 109A  
                                        l18293 0D54                                          l18613 B53E  
                                        l19421 5E80                                          l19341 6314  
                                        l19333 62BC                                          l19317 61FC  
                                        l19309 619C                                          l19325 6262  
                                        l18551 B9CA                                          l17911 99E2  
                                        l17903 99BE                                          l18703 82FC  
                                        l17815 A574                                          l17743 A10E  
                                        l17647 9E84                                          l18519 16A2  
                                        l18455 137E                                          l18367 113C  
                                        l18359 111E                                          l18287 0D22  
                                        l18279 0CAE                                          l18615 B54E  
                                        l19431 5EDE                                          l19423 5E9C  
                                        l19343 632A                                          l19335 62D2  
                                        l19327 627A                                          l19319 6214  
                                        l17921 9A52                                          l17913 99EE  
                                        l18625 AAAC                                          l19505 A802  
                                        l17825 A5D8                                          l17833 C17A  
                                        l17753 A126                                          l17489 B04C  
                                        l18473 143C                                          l18465 13EE  
                                        l18617 B558                                          l19441 5F3C  
                                        l19433 5EFA                                          l19425 5EB2  
                                        l19337 62E8                                          l19329 6290  
                                        l17923 9A5E                                          l17915 9A14  
                                        l17819 A58A                                          l17843 A85A  
                                        l17771 B086                                          l17755 A132  
                                        l17747 A11E                                          l17683 9F1A  
                                        l17587 7F54                                          l18491 14D6  
                                        l18467 13F8                                          l18379 117A  
                                        l18395 11BC                                          l18299 0D7C  
                                        l19531 64DA                                          l18563 C64C  
                                        l19371 B5A6                                          l19451 5F9A  
                                        l19443 5F58                                          l19435 5F10  
                                        l18651 B3D4                                          l19339 62FE  
                                        l19347 6340                                          l19291 60D0  
                                        l19283 6078                                          l19275 6040  
                                        l17909 99DC                                          l18629 AAE2  
                                        l18741 83C8                                          l18717 832A  
                                        l18709 8312                                          l17781 B0BA  
                                        l17693 9F32                                          l18485 149C  
                                        l18477 1466                                          l18397 11D2  
                                        l19365 B59A                                          l19461 5FF8  
                                        l19453 5FB6                                          l19445 5F6E  
                                        l18653 B3E0                                          l18645 B3A6  
                                        l19349 6376                                          l19293 60E6  
                                        l19285 608E                                          l18735 83A2  
                                        l18727 837A                                          l18671 8284  
                                        l17871 A8C8                                          l17863 A8B4  
                                        l17695 9F3E                                          l17687 9F2A  
                                        l19543 6636                                          l19535 654E  
                                        l19527 6466                                          l19383 B5BE  
                                        l19359 B58E                                          l19391 B5CA  
                                        l19463 6014                                          l19455 5FCC  
                                        l19295 60FC                                          l19287 60A4  
                                        l18593 C196                                          l18753 83FE  
                                        l17769 B07A                                          l19377 B5B2  
                                        l19465 602A                                          l18657 B3F0  
                                        l19289 60BA                                          l17971 AC40  
                                        l17939 9A9E                                          l18595 C19C  
                                        l18747 83E0                                          l18691 82C4  
                                        l18675 8288                                          l17795 AEF0  
                                        l17859 A8A4                                          l19547 66AA  
                                        l19539 65C2                                          l18587 C2B4  
                                        l19395 5C98                                          l19299 6112  
                                        l17965 AC20                                          l19477 B430  
                                        l18781 84CA                                          l18773 847C  
                                        l17877 A8E4                                          l17869 A8BC  
                                        l17893 B37C                                          l17885 B348  
                                        l18695 82C8                                          l17799 AF24  
                                        l17887 B354                                          l17991 008A  
                                        l19399 5CAC                                  ___fltol@sign1 0238  
                                        l17969 AC34                                          l18777 84A0  
                                        l17993 0090                                          l17985 004A  
                                        l18787 84D6                                          l17995 0096  
                                        l17979 0004                                          l18789 84D8  
                                        l17989 0078                                          l17999 009E  
                   __size_of_getDaysFromOnTime 0090                                          l19967 C0F2  
                                        l19991 5220                                          l19975 4FD6  
                                        l19993 522C                                          l19985 5070  
                                        l19979 4FFE                                          l19997 5264  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                __end_of___fladd 73FC  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 84E0                                          _ADREF 000F58  
                              __end_of___awdiv B056                                __end_of___flneg C18C  
                                        _ADPRE 000F5E                                          STR_10 F34A  
                                        STR_11 F84E                                          STR_20 FCBD  
                                        STR_12 F6F8                                          STR_13 FFAE  
                                        STR_21 FF84                                          STR_14 FF29  
                                        STR_22 FEB2                                          STR_30 FA7C  
                                        STR_15 FCCB                                          STR_31 FA3C  
                                        STR_23 FB9A                                          STR_32 FB9A  
                                        STR_16 FF8A                                          STR_40 FE36  
                                        STR_24 FC14                                          STR_17 FEBC  
                                        STR_41 FE41                                          STR_33 FEB2  
                                        STR_25 FBAA                                          STR_42 FEB2  
                                        STR_18 FFA9                                          STR_50 FE76  
                                        STR_34 FEA8                                          STR_26 FAE0  
                                        STR_19 FD1E                                          STR_51 FE15  
                                        STR_43 FDBC                                          STR_35 FE9E  
                                        STR_27 F48F                                          STR_52 FF20  
                                        STR_44 FD5B                                          STR_36 FE4C  
                                        STR_28 F486                                __end_of___awmod B2C4  
                                        STR_53 FE8A                                          STR_45 FDA4  
                                        STR_37 FE58                                          STR_29 F8D9  
                                        STR_54 FE80                                          STR_70 FE6C  
                                        STR_46 FDB0                                          STR_62 FC3F  
                                        STR_38 FE57                                          STR_55 FE20  
                                        STR_47 FD41                                          STR_71 FB8A  
                                        STR_63 FB7A                                          STR_39 FC05  
                                        STR_56 FD98                                          STR_48 FD4E  
                                        STR_80 FC4D                                          STR_72 FBF6  
                                        STR_64 FB6A                                          _ADRPT 000F66  
                                        STR_49 FEB2                                          STR_81 FF52  
                                        STR_65 FDDE                                          STR_57 FD34  
                                        STR_73 FCA1                                          STR_90 FDA2  
                                        STR_82 FDA2                                          STR_66 FF9F  
                                        STR_58 FE94                                          STR_74 FDE9  
                                        STR_91 FDA2                                          STR_83 FDA2  
                                        STR_59 FE2B                                          STR_67 FCD9  
                                        STR_75 FCAF                                          STR_68 FF71  
                                        STR_92 FD80                                          STR_84 FCE6  
                                        STR_76 FB4A                                          STR_85 FF52  
                                        STR_93 FD1A                                          STR_77 FBD8  
                                        STR_69 FB5A                              __end_of_I2C2_Stop BCE6  
                                        STR_86 FDA2                                          STR_78 FDA2  
                                        STR_94 FF42                                          STR_95 FDA2  
                                        STR_87 FDA2                                          STR_79 FDA2  
                                        STR_96 FDA2                                          STR_88 FC93  
                              __end_of___flmul 6A48                                          STR_89 FF42  
                                        STR_97 FD0D                                          STR_98 FF5A  
                                        STR_99 FDA2                                __end_of___flsub BB00  
                              __end_of___fltol A8F6                                _TMR1_StartTimer C8E6  
                              __end_of___lldiv B0DA                                          _T1CLK 000FD2  
                                        u21020 6984                                ___awdiv@divisor 0208  
                                        u21120 B018                                          _T1CON 000FCF  
                              __end_of___llmod B39C                                          u22010 020C  
                                        u21060 69E0                                          u21220 B770  
                                        u22020 024A                                          u21070 69FE  
                                        _T3CLK 000FCC                                          u20600 71E6  
                                        _T2CON 000FBD                                          u22017 0202  
                                        u20610 71F6                                          u21250 BC36  
                                        u22050 02E4                                          u22027 0240  
                                        u20620 71F8                                          u21180 B28E  
                                        u22300 0780                                          u22060 02EA  
                                        u22150 03FC                                          u22118 034E  
                                        u20800 7360                                          u21520 A138  
                                        u23200 170E                                          u23008 133E  
                                        u22160 0440                                          _T3CON 000FC9  
                                        u22057 02DA                                          u20650 723A  
                                        u21450 9F44                                          u23210 171A  
                                        u23050 1400                                          u21371 9E68  
                                        u21700 A8CE                                          u21540 B08A  
                                        u21460 A062                                          u21380 9E72  
                                        u22500 0B04                                          u22260 06DA  
                                        u22180 04D6                                          u22148 03C8  
                                        u22157 03F2                                          u22149 03FE  
                                        u23038 13AE                                          u22270 0726  
                                        u21391 9E94                                          u23207 1704  
                                        u22167 0436                                          _T5CLK 000FC6  
                                        u23128 14B4                                          u23080 1476  
                                        u22408 0954                                          u23240 C648  
                                        u23320 B582                                          u21810 9A68  
                                        u21650 A848                                          u21730 B358  
                                        u22187 04CC                                          u21580 AF3E  
                                        u20860 73BC                                          u20780 734C  
                                        u21660 A878                                          _T2HLT 000FBE  
                                        u23190 16DE                                          u23078 1426  
                                        u23327 B578                                          u23168 1526  
                                        u22640 0D62                                          u22608 0C96  
                                        u22448 09C6                                          u21920 00C0  
                                        _T5CON 000FC3                                          u21665 A86E  
                                        u20970 6782                                          u22650 0D72  
                                        u23290 C2B0                                          u20980 68F8  
                                        u23188 168C                                          u22708 0F02  
                                        u22548 0B42                                          u22468 0A2E  
                                        u21940 00FA                                          u23630 848A  
                                        u22638 0D0C                                          u21918 0034  
                                        u21927 00B6                                          u23640 84AE  
                                        u21960 0156                                          u20985 68EE  
                                        u22738 0FCC                                          u22498 0AAE  
                                        u21970 0192                                          u21947 00F0  
                                        u24700 A832                                          u24620 B460  
                                        u22588 0BB4                                          u21980 019A  
                                        u25420 529E                                          u23590 842E  
                                        u21990 01BC                                 __CFG_DEBUG$OFF 000000  
                                        u21967 014C                                          u24640 A788  
                                        u22688 0DB0                                          u25440 52DC  
                                        u25520 B8DC                                          u27025 89FC  
                                        u21977 0188                                          u27045 8AD0  
                                        u21997 01B2                                          u28030 8F56  
                                        u27310 BA66                                          u25480 B6C2  
                                        u22968 12CC                                          u27065 8BA4  
                                        u25465 BF08                                          u28210 9066  
                                        u25490 B6EE                                          u25475 BC8C  
                              __end_of___lwdiv B7A0                                          u27317 BA5C  
                                        u28150 9006                                          u25487 B6B8  
                                        u25497 B6E4                     _ADCC_ADTI_InterruptHandler 00CC  
                                        u28330 9116                                          u28090 8FAE  
                                        u27370 4BF8                                          u28500 91DE  
                                        u28340 A17E                                          u28270 90BE  
                                        u28440 9186                                          u27800 BE62  
                                        u29217 7A2C                                          u29227 4E18  
                                        u28620 928E                                          u27900 38B6  
                                        _T2TMR 000FBB                 __size_of_I2C2_FunctionComplete 001A  
                                        u27910 3964                                          u28560 9236  
                                        u27920 3A7A                                          i1l250 007A  
                                        u27930 3B26                                          u27850 3616  
                                        _T2RST 000FC0                                          i1l251 0070  
                                        u28740 933E                                          i1l245 004C  
                                        u27790 BE50                                          u27870 36A0  
                                        i1l247 0058                                          u28680 92E6  
                                        i1l249 0064                                __end_of___lwmod BC5E  
                                        i2l122 B7A4                                          u27890 3806  
                                        i2l124 B7BC                                          i2l230 A494  
                                        i2l144 AB64                                          i2l136 BC14  
                                        i2l232 A4A0                                          i2l224 A460  
                                        i2l234 A4AC                                          i2l226 A46C  
                                        i2l235 A4D6                                          i2l236 A4CC  
                                        i2l228 A478                                          i1l940 8D10  
                                        i1l943 8D1C                                          i1l953 8DD6  
                                        i1l937 8CB0                                          i1l971 8E82  
                                        i1l963 8E18                                          i1l948 8D58  
                                        i1l949 8D6A                                          i1l966 8E34  
                                        i1l967 8E4A                                          i1l959 8DE4  
                              ___awdiv@counter 020A                  __end_of_I2C2_FunctionComplete C608  
                                        _OSCEN 000EDC                                          _TMR0H 000FD4  
                                        _TMR1H 000FCE                                          _TMR0L 000FD3  
                     _OLED_UpdateFromRAMBuffer 9D34                                          _TMR3H 000FC8  
                                        _TMR1L 000FCD                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                 i2__div_to_l_ A23E                                __end_of__doprnt 1724  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A              __size_of_TMR0_SetInterruptHandler 000E  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000              __size_of_TMR3_SetInterruptHandler 000E  
                    ?_TMR0_SetInterruptHandler 0200                        terminalTextAttributes@i 03FC  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                         ?_QIErrorTimerHandler 0001                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0063                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                    ?_TMR3_SetInterruptHandler 0200                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                             __end_of_TMR0_ISR C330                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR1_ISR C09A                               __end_of_TMR2_ISR C308  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR C066  
                         _getMinutesFromOnTime 981C                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                       __end_of_QIIdleIOCHandler C6CE  
                               ?_INT1_CallBack 0001                               ?_CCP2_CaptureISR 0001  
                       __size_of_CCP2_CallBack 0040                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 03FF  
               ??_TMR3_DefaultInterruptHandler 0100                        __end_of_PIN_MANAGER_IOC C6BA  
                              __end_of_dpowers E7D7                             __size_of_TMR2_Stop 0004  
                                  ?_TMR2_Start 0001                                          fabs@d 0005  
                                   i2scale@scl 004D                 ??_INT1_DefaultInterruptHandler 0001  
                               i1___flmul@aexp 0148                                 i1___flmul@bexp 0149  
                                 i2__doprnt@ap 0070                                   i2__doprnt@cp 008B  
                        ?_ADCC_StartConversion 0001                           ??_QIChargeIOCHandler 0003  
                                 i2__doprnt@pb 006C                                          _scale 5444  
                              __end_of_isdigit C430                                __end_of_memmove AB14  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 001F                                 i1___flmul@sign 0143  
                               i1___flmul@temp 014E                                 i1___flmul@prod 014A  
                                        _putch C692                                 ?_INT2_CallBack 0001  
                 I2C2_MasterReadTRBBuild@pdata 0202                       _INT1_SetInterruptHandler C7D8  
                      __end_of_TMR1_Initialize B988                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge A6AC  
                             __end_ofi2___fleq AFD0                                          tablat 000FF5  
                     __end_ofi1_TMR3_StopTimer C8DA                         __end_of_clearI2CErrors C54A  
                             __end_ofi2___wmul C3A4                                          plusw2 000FDB  
                               ??_EUSART2_Read 0200                   __size_of_ADCC_GetFilterValue 0014  
                                        ttemp5 0060                                          ttemp6 0063  
                                        ttemp7 0067                                          status 000FD8  
                      __end_of_temp_adc_offset E7DB                         __end_of_clearADCErrors C74A  
                                        wtemp8 0060                                __end_of_sprintf BAB8  
                           __size_ofi1___fladd 030E                    getCauseOfResetStringSmall@r 0202  
                           __size_ofi1___fldiv 028A                                  i2___flmul@grs 003A  
                              _TMR2_StartTimer C8C4                                i1___fladd@signs 011A  
                           __size_ofi1___flmul 0354                                __end_of_strncpy B402  
                             __end_ofi2_fround 8256                                _TMR1_WriteTimer C470  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 030E  
                           __size_ofi2___fldiv 0288                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0212                             __size_ofi2___flmul 0352  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00BA  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf BF54                             __size_ofi2___lwdiv 0052  
                           __size_ofi2___lwmod 0042                   ??_getCauseOfResetStringSmall 0202  
        __end_of_EUSART2_SetTxInterruptHandler C7F4         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler C7E6                                _TMR5_Initialize BEA0  
                            ??_I2C2_MasterRead 0210                             __size_ofi2__doprnt 1718  
                            ??_I2C2_Initialize 0200                                __initialization A9B0  
               __size_of_terminalSetCursorHome 0010                        getStringSecondsAsTime@i 03E5  
                __end_of_terminalSetCursorHome C75A                              i2___lldiv@divisor 0005  
                                 __end_of_fabs BF90                                   __end_of_main 7CE6  
                       ??_I2C2_MasterTRBInsert 0204                              i2___lldiv@counter 000D  
                                   i2printf@ap 00A6                                     i2printf@pb 00A8  
                       ?_freqMeasStartCaptures 0001                          __end_of_ringBufferLUT 4FAC  
                      FLASH_ReadByte@flashAddr 0200                        __end_of_TMR2_Initialize C0CC  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont E7AF                            __size_of_OLED_Clear 003E  
              getYearsFromOnTime@input_seconds 020D                                         ??_fabs 0009  
             __end_of_I2C2_MasterWriteTRBBuild BBD4                       _TMR2_SetInterruptHandler C784  
                                       ??_main 04C6                                    ?i1___xxtofl 0100  
                                  _i2c2_object 0161                                _TMR3_StartTimer C8E2  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                        _TMR3_InterruptHandler 0171                           __size_of_LM73Convert 0284  
                      __size_of_FLASH_ReadWord 0042                       ??_getStringSecondsAsTime 02A3  
                   __size_of_getDeviceIDString 0098                           __size_of__tdiv_to_l_ 0100  
                        ??_QIErrorTimerHandler 0003                                    ?i2___xxtofl 0005  
                 ?_getNXQChargeStateStringCaps 0200                                      ??_OLED_YX 0215  
                        ?_getMinutesFromOnTime 020D                    __size_of_getYearsFromOnTime 0030  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize B252                   ??_IOCBF2_SetInterruptHandler 0203  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 018F                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 020D  
                                       _ADLTHH 000F6B                                         ?_scale 0227  
                                       STR_100 FDA2                                         _ADLTHL 000F6A  
                                       STR_101 FC85                                         STR_110 FDA2  
                                       STR_102 FD1A                                         STR_103 FF5A  
                                       STR_111 FEFC                                         STR_200 FF37  
                                       STR_104 FDA2                                         STR_120 FF4A  
                                       STR_112 FF4A                                         STR_121 FDA2  
                                       STR_113 FDA2                                         STR_105 FDA2  
                                       STR_201 F3D5                                         STR_202 FF37  
                                       STR_130 FDA2                                         STR_122 FDA2  
                                       STR_114 FDA2                                         STR_106 FD8C  
                                       STR_210 F048                                         _ADRESH 000F64  
                                       STR_211 FF37                                         STR_131 FDA2  
                                       STR_107 FD1A                                         STR_115 FE62  
                                       STR_123 FD74                                         STR_203 F229  
                                       STR_204 FF37                                         STR_124 FF4A  
                                       STR_116 FF4A                                         STR_140 FF0E  
                                       STR_108 FEF3                                         STR_132 FD00  
                                       STR_220 F96F                                         STR_212 F123  
                                       STR_213 FF37                                         STR_125 FDA2  
                                       STR_117 FDA2                                         STR_109 FDA2  
                                       STR_133 FDF4                                         STR_141 FF62  
                                       STR_301 FFB3                                         STR_221 FC31  
                                       STR_205 EDF5                                         STR_214 FF37  
                                       STR_206 FF37                                         STR_126 FDA2  
                                       STR_118 FDA2                                         STR_310 FFCC  
                                       STR_150 FDFF                                         STR_142 FF0E  
                                       STR_302 FFB7                                         STR_134 FFA4  
                                       STR_222 FA26                                         STR_230 FA10  
                                       _ADRESL 000F63                                         STR_223 FF37  
                                       STR_151 FDA2                                         STR_135 FDA2  
                                       STR_311 FFFD                                         STR_303 FFF8  
                                       STR_143 FE0A                                         STR_127 FC77  
                                       STR_119 FC69                                         STR_215 FB39  
                                       STR_207 EE71                                         STR_231 E7DB  
                                       STR_240 F34C                                         STR_232 F00F  
                                       STR_152 FDA2                                         STR_136 FDA2  
                                       STR_304 FFCC                                         STR_320 FFF2  
                                       STR_160 FD1A                                         STR_144 FF0E  
                                       STR_312 FFCB                                         STR_128 FDF4  
                                       STR_216 F9CC                                         STR_224 F2BD  
                                       STR_208 EEEA                                         STR_225 FF37  
                                       STR_209 FF37                                         STR_233 EE33  
                                       STR_161 FDA2                                         STR_305 FFCF  
                                       STR_321 FFFD                                         STR_145 FE0A  
                                       STR_313 FFCE                                         STR_129 FF17  
                                       STR_153 FCF3                                         STR_137 FC5B  
                                       STR_217 FB28                                         STR_241 F604  
                                       STR_234 F525                                         STR_170 FDA2  
                                       STR_162 FDA2                                         STR_330 FDAD  
                                       STR_322 FDAD                                         STR_306 FFE1  
                                       STR_154 FF0E                                         STR_314 FFD4  
                                       STR_138 FF05                                         STR_146 FDFF  
                                       STR_218 F9E3                                         STR_226 F90E  
                                       STR_242 F814                                         STR_250 F4AF  
                                       STR_235 F3A7                                         STR_307 FFE7  
                                       STR_331 FEDF                                         STR_163 FDFF  
                                       STR_155 FE0A                                         STR_147 FE0A  
                                       STR_315 FFDA                                         STR_323 FFD1  
                                       STR_139 FF62                                         STR_171 FBE7  
                                       STR_219 FB05                                         STR_227 F831  
                                       STR_251 F5BB                                         STR_243 F25B  
                                       STR_236 F7F6                                         STR_164 FDA2  
                                       STR_308 FFF3                                         STR_180 FF9F  
                                       STR_172 FD1A                                         STR_156 FDFF  
                                       STR_148 FDFF                                         STR_316 FFE0  
                                       STR_324 FFD7                                         STR_228 FF9A  
                                       STR_332 FDD3                                         STR_340 F987  
                                       STR_244 F887                                         STR_252 F691  
                                       STR_260 EC35                                         STR_237 FF37  
                                       STR_229 FF37                                         STR_165 FDA2  
                                       STR_149 FDA2                                         STR_181 FCD9  
                                       STR_157 FE0A                                         STR_309 FFFB  
                                       STR_317 FFE6                                         STR_325 FFDD  
                                       STR_173 FFC3                                         STR_245 FC23  
                                       STR_333 FAF3                                         STR_341 FAB9  
                                       STR_253 F73B                                         STR_261 EF9B  
                                       STR_174 FDA2                                         STR_182 FF71  
                                       STR_158 FDFF                                         STR_318 FFEC  
                                       STR_326 FFE3                                         STR_190 FD68  
                                       STR_166 FBC9                                         STR_350 FA91  
                                       STR_270 F9B5                                         STR_334 F8A3  
                                       STR_342 F64B                                         STR_238 F596  
                                       STR_246 F18E                                         STR_262 F0B7  
                                       STR_254 ED3A                                         STR_175 FDA2  
                                       STR_159 FDA2                                         STR_183 FB5A  
                                       STR_167 FD1A                                         STR_191 FE3B  
                                       STR_319 FFF2                                         STR_327 FFE9  
                                       STR_263 FF32                                         STR_335 FA52  
                                       STR_351 F8BE                                         STR_247 F79B  
                                       STR_255 F77C                                         STR_343 F71A  
                                       STR_271 EDB7                                         STR_239 EACB  
                                       STR_176 FB6A                                         STR_184 FE6C  
                                       STR_328 FFEF                                         STR_168 FFBF  
                                       STR_192 FF95                                         STR_336 FACD  
                                       STR_264 F99E                                         STR_352 F957  
                                       STR_256 F7D8                                         STR_344 F66E  
                                       STR_248 F379                                         STR_272 EC77  
                                       STR_280 EBF2                                         STR_177 FDA2  
                                       STR_169 FDA2                                         STR_185 FB8A  
                                       STR_329 FFF5                                         STR_193 FFBB  
                                       STR_337 FA67                                         STR_353 F93F  
                                       STR_249 F86B                                         STR_345 F5E0  
                                       STR_265 F31B                                         STR_281 F28D  
                                       STR_273 F159                                         STR_257 ECFA  
                                       STR_178 FDA2                                         STR_186 FBF6  
                                       STR_194 FF7E                                         STR_338 F9FA  
                                       STR_354 F927                                         STR_258 F75C  
                                       STR_346 F6B4                                         STR_290 F2EC  
                                       STR_266 F1F6                                         STR_274 EBAF  
                                       STR_282 EB23                                         STR_275 FF32  
                                       STR_187 FC3F                                         STR_179 FDDE  
                                       STR_195 FF95                                         STR_291 FEC6  
                                       STR_339 FAA5                                         STR_267 F8F4  
                                       STR_283 F7BA                                         STR_347 F54C  
                                       STR_259 F45B                                         STR_355 EEAE  
                                       STR_196 FFBB                                         STR_188 FB7A  
                                       STR_356 FF6A                                         STR_292 FECF  
                                       STR_348 F6D6                                         STR_268 F080  
                                       STR_284 EFD5                                         STR_276 EB6A  
                                       _CCPR2H 000FA7                                         STR_277 FF32  
                                       STR_197 FF78                                         STR_293 FF3A  
                                       STR_189 FD27                                         STR_357 FB17  
                                       STR_349 F628                                         STR_285 EF26  
                                       STR_269 ED79                                         STR_294 FED8  
                                       STR_358 FDC8                                         STR_278 F4D7  
                                       STR_198 F0ED                                         STR_286 EF61  
                                       STR_295 FEEA                                         STR_199 FBBA  
                                       STR_287 F571                                         STR_279 F402  
                                       STR_296 FEE1                                         STR_288 ECB9  
                                       _CCPR2L 000FA6                                         STR_297 FF90  
                                       STR_289 EA68                                         STR_298 FF95  
                                       STR_299 FFBB                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 0206  
                                       _ADUTHL 000F6C                                         _ANSELA 000F11  
                                       ?_putch 0001                                         _ANSELB 000F19  
                                       _ANSELC 000F21                                         _T0CON0 000FD5  
                                       _T0CON1 000FD6                                         _T1GATE 000FD1  
                                       _T1GCON 000FD0                                         _T3GATE 000FCB  
                                       _T3GCON 000FCA                              __end_of_OLED_Init AE2A  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _RC2REG 000E99                                         _RB4PPS 000EF3  
                                       _RC2STA 000E9D                                         _RB5PPS 000EF4  
                      TMR1_WriteTimer@timerVal 0200                                         _RC4PPS 000EFB  
                 __end_of_I2C2_BusCollisionISR C86C                                         i1l1069 BD7C  
                                       _ODCONA 000F0F                                         _ODCONB 000F17  
                                       i1l1515 C4DA                                         _ODCONC 000F1F  
                                       i1l3301 86C2                                         i1l3302 86BE  
                                       i1l3320 6ACA                                         i1l3330 6CDE  
                                       i1l3251 7612                                         i1l3235 7540  
                                       i1l3260 7678                                         i1l3236 751E  
                                       i1l3261 7674       __end_of_I2C2_WaitForLastPacketToComplete C88C  
    __size_of_I2C2_WaitForLastPacketToComplete 000A              ?_I2C2_WaitForLastPacketToComplete 0001  
           ??_I2C2_WaitForLastPacketToComplete 0200               _I2C2_WaitForLastPacketToComplete C882  
                                       i1l3337 6D68                                         i1l3329 6CE2  
                                       i1l3361 9AF2                                         i1l3290 8654  
                      __end_of_TMR3_Initialize B938                                         i1l3368 9B70  
                                       i2l3050 9FFE                                         i2l2500 2088  
                                       i2l3301 894A                                         i2l1621 C68C  
                                       i2l3302 8946                                         i2l3126 B4BC  
                                       i2l3207 BD60                                         i2l3320 6E1C  
                                       i2l3049 9FD6                                         i2l1625 C676  
                                       i2l3330 7030                                         i2l3251 7920  
                                       i2l3235 784E                                         i2l3260 7986  
                                       i2l3236 782C                                         i2l2532 22A8  
                                       i2l3261 7982                                         i2l1581 41D4  
                                       i2l2534 2276                                         i2l2711 B1CE  
                                       i2l2615 2A2E                                         i2l1808 97CC  
                                       i2l3337 70BA                                         i2l3329 7034  
                                       i2l3361 9C32                                         i2l2617 29FC  
                                       i2l1809 9806                                         i2l3290 88DC  
                                       i2l2651 2BE4                                         i2l3197 B88E  
                                       i2l2565 2494                                         i2l3384 BF7E  
                                       i2l3368 9CB0                                         i2l2649 2C16  
                                       i2l2586 27CE                                         i2l2498 20BA  
                                       i2l2962 A670                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000F31  
                                    ??i2_scale 0049                    ?_getCauseOfResetStringSmall 0200  
                                       _OSCFRQ 000EDE                                ?_clearI2CErrors 0001  
                                ?_OLED_Command 0001                                         _NVMDAT 000F80  
                                    ??i2_putch 0002                                         _RX2PPS 000E8D  
                             _adc_calculations 02BE                                         _TX2REG 000E9A  
                                       _TX2STA 000E9E                __size_of_LM73AcquisitionHandler 022C  
                             ?_CCP2_Initialize 0001                                ?_clearADCErrors 0001  
                              _freqMeasConvert A6AC                               __end_of___xxtofl 9AB0  
                        I2C2_MasterRead@length 020B                      __size_ofi2_TMR1_StopTimer 0004  
        __end_of_ADCC_DischargeSampleCapacitor C8B2         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor C8AA                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 00FE                                _TMR3_WriteTimer C450  
                               i2___fladd@aexp 0061                                 i2___fladd@bexp 0062  
                                ?_OLED_PutChar 0001          __end_of_ADCC_HasAccumulatorOverflowed C878  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed C86C  
                               __CFG_XINST$OFF 000000                                   __doprnt$6039 025E  
                                 __doprnt$4981 0263                                   __doprnt$4982 0265  
                                 __doprnt$4983 0267                                   __doprnt$4984 0269  
                                 __doprnt$4985 026B                                   __doprnt$4986 026D  
                                 __doprnt$4987 026F                                   __doprnt$4988 0271  
                             __end_of__powers_ E45B                                   i2_scale$6424 0049  
         __end_of_TMR1_DefaultInterruptHandler C8FE          __size_of_TMR1_DefaultInterruptHandler 0002  
                 _TMR1_DefaultInterruptHandler C8FC                                  _CCP2_CallBack BD6A  
              __end_of_terminal_ringBufferPull A23E                           _getSecondsFromOnTime 9544  
                                       ___flge A50A                                         ___fleq AEBA  
                             ?_updateErrorLEDs 0001                        __end_of_TMR1_StartTimer C8EA  
                                 ?_TMR1_Reload 0001                              _ADCC_ThresholdISR C330  
                                    ??___fladd 023C                                         ___wmul C2B8  
                                    ??___fldiv 0208                                      ??___awdiv 020A  
                                    ??___flneg 0204                                 _p_i2c2_current 00D1  
                               __CFG_STVREN$ON 000000                                      ??___awmod 0204  
                            __end_of_TMR2_Stop C8DE                                      ??___flmul 0216  
                    ??_I2C2_MasterReadTRBBuild 0207                                      ??___flsub 0254  
                                    ??___fltol 0234                                      ??___lldiv 0208  
                                    ??___llmod 0215                                   ?_TMR3_Reload 0001  
                                    ??___lwdiv 0209                                      ??___lwmod 0204  
                          __size_of_TMR2_Start 0004                      i2TMR3_WriteTimer@timerVal 0001  
                                    ??__doprnt 025A                               ?_TMR0_Initialize 0001  
                           ?_ADCC_ThresholdISR 0001                                  i2__doprnt@idx 007A  
                                       _fround 7CE6                                  i2__doprnt@len 008D  
                                    ?_I2C2_ISR 0001                                  i2__doprnt@val 0099  
                                       clear_0 AA10                                         clear_1 AA22  
                                       clear_2 AA2E                                         clear_3 AA3A  
                                       clear_4 AA46                                         clear_5 AA56  
                         _eusart2RxStringReady 07E8                               ___awdiv@quotient 020C  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0202                                 i2___fldiv@sign 0023  
                                 __doprnt@flag 0289                       I2C2_Stop@completion_code 0102  
                              ___awmod@counter 0204                                         _printf BE64  
                                 __doprnt@eexp 0277                                   __doprnt@fval 027D  
          __size_of_IOCBF2_SetInterruptHandler 000E                                   __doprnt@prec 0287  
                                       _strcat B52E                                         _strcmp B898  
                I2C2_MasterReadTRBBuild@length 0204                                         _strcpy BA28  
                                       _strlen C18C                                 i2___awdiv@sign 000C  
                            __end_ofi1___fladd 770A                   getCauseOfResetString@strings 01A9  
                            __end_ofi1___fldiv 876A                                _ADCC_Initialize B4CE  
                            __end_ofi1___flmul 6D9C                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize C54A           __end_of_INT2_DefaultInterruptHandler C906  
        __size_of_INT2_DefaultInterruptHandler 0002                   _INT2_DefaultInterruptHandler C904  
                      FLASH_ReadWord@flashAddr 0204                              __end_ofi2___fladd 7A18  
                                    ??_isdigit 0200                                      ??_memmove 0206  
                            __end_ofi2___fldiv 89F2                              __end_ofi2___awdiv B15E  
                            __end_ofi2___flneg C1E8                                ??_INT1_CallBack 0001  
                            __end_ofi2___awmod B334                              __end_ofi2___flmul 70EE  
                            __end_ofi2___flsub BB48                              __end_ofi2___fltol A9B0  
                            __end_ofi2___lldiv B1E0                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod B4CE                              __end_ofi2___lwdiv B898  
                                 __mediumconst E426                              __end_ofi2___lwmod BD6A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion C8EE  
                         _EUSART2_Transmit_ISR BBD4                              __end_ofi2__doprnt 2E3C  
                       ??_ADCC_StartConversion 0100                                ??_INT2_CallBack 0001  
                               i2___awmod@sign 0006                          __size_of_getUARTError 0006  
                      __end_of_TMR2_StartTimer C8CA                                ??_EUSART2_Write 0200  
     TMR1_SetInterruptHandler@InterruptHandler 0200       TMR3_SetInterruptHandler@InterruptHandler 0200  
     TMR2_SetInterruptHandler@InterruptHandler 0200       TMR0_SetInterruptHandler@InterruptHandler 0200  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0200     IOCBF3_SetInterruptHandler@InterruptHandler 0200  
   IOCBF2_SetInterruptHandler@InterruptHandler 0200       INT2_SetInterruptHandler@InterruptHandler 0200  
     INT1_SetInterruptHandler@InterruptHandler 0200                               ?_PIN_MANAGER_IOC 0001  
                                    ??_sprintf 0298                        __end_of_TMR1_WriteTimer C490  
                               i2___flmul@aexp 0039                                 i2___flmul@bexp 003E  
                                    ??_strncpy 0206                                   ??_IOCBF2_ISR 0003  
                               i2___flmul@sign 0038                                 i2___flmul@temp 0043  
                                 ??_IOCBF3_ISR 0003                                 i2___flmul@prod 003F  
                __size_of_INTERRUPT_Initialize 0020                                _eusart2RxBuffer 0480  
                             _OLED_update_flag 02D6                                     ___flge@ff1 0200  
                                   ___flge@ff2 0204                                 ??_OLED_Command 0210  
                             ?_TMR1_Initialize 0001                        __end_of_TMR5_Initialize BEDC  
                                 ___xxtofl@arg 0248                              __end_ofi2_isdigit C52E  
                                 ___xxtofl@exp 0247                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00AD                               _OLED_update_time 00FB  
                            _SYSTEM_Initialize BDE8                                   ___xxtofl@val 023E  
                                   ___fleq@ff1 0200                                     ___fleq@ff2 0204  
                              _eusart2TxBuffer 04C8                                     __accesstop 0060  
                      __end_of__initialization AA5C                                 i2___fltol@exp1 0057  
                                    ?_INT1_ISR 0001                                     ___flneg@f1 0200  
                                    ?_INT2_ISR 0001                         _qi_isns_average_buffer 0400  
                           ?_SYSTEM_Initialize 0001                            __size_ofi1___xxtofl 0144  
                                ___rparam_used 000001      __end_of_ADCC_GetCurrentCountofConversions C8F6  
   __size_of_ADCC_GetCurrentCountofConversions 0004            ??_ADCC_GetCurrentCountofConversions 0001  
           ?_ADCC_GetCurrentCountofConversions 0001              _ADCC_GetCurrentCountofConversions C8F2  
                                   ___fltol@f1 0230                              ?_I2C2_MasterWrite 0209  
                              _TMR5_WriteTimer C430                                 ??_OLED_PutChar 0210  
                           i2__tdiv_to_l_@exp1 0011                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 0010                      __end_of_ADCC_ThresholdISR C358  
                               ?_CCP2_CallBack 0154      LM73TempSensorInitialize@output_data_array 0210  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000C              terminal_ringBufferPull@charNumber 04C0  
                          __size_ofi2___xxtofl 0140                          ?_getSecondsFromOnTime 020D  
                 ?_ADC_acquisitionTimerHandler 0001                             ??_I2C2_MasterWrite 0210  
                   __end_of_getMajorRevisionID BF18                             i2___lwmod@dividend 0001  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
             __end_of_LM73TempSensorInitialize 9124                    __size_of_getHoursFromOnTime 00F0  
                                 __pidataBANK0 C8F6                                   __pidataBANK1 C6F6  
                                 __pidataBANK2 C708                            ??_SYSTEM_Initialize 0205  
                      __end_of_TMR3_StartTimer C8E6                                      ?_TMR0_ISR 0001  
                                    ?_TMR1_ISR 0001                                      ?_TMR2_ISR 0001  
                ?_TMR1_DefaultInterruptHandler 0001                                      ?_TMR3_ISR 0001  
                                __end_of_scale 5878                 ?_EUSART2_SetTxInterruptHandler 0200  
                               _i2c2_trb_count 00DA                                  __end_of_putch C6A6  
                                   ??_I2C2_ISR 0103                               ?_TMR2_Initialize 0001  
                     __size_of_getCauseOfReset 005A                                 _QI_charge_time 02D2  
                       __end_of_PMD_Initialize C566                         _LM73AcquisitionHandler 9124  
                        _getCauseOfResetString C0CC                             __end_of_IOCBF2_ISR C290  
                                    ?i2___flge 0001                             __end_of_IOCBF3_ISR C266  
                                    ?i2___fleq 0001                           __end_of_EUSART2_Read BDE8  
                                 _getUARTError C8B2                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 9F56                    __size_of_EXT_INT_Initialize 0038  
                                   __div_to_l_ A054                         ??_getMinutesFromOnTime 0211  
                     _printCurrentMeasurements 4FAC                __size_of_getStringSecondsAsTime 03A6  
                           __size_of_getUserID 0034                                      ?i2_fround 0045  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
             __end_of_INT2_SetInterruptHandler C7D8                    __end_of_terminalClearScreen C72A  
                     _I2C2_MasterWriteTRBBuild BB8E                  ?_INT2_DefaultInterruptHandler 0001  
                                    ?i2_printf 00A4         __end_of_IOCBF3_DefaultInterruptHandler C902  
      __size_of_IOCBF3_DefaultInterruptHandler 0002                 _IOCBF3_DefaultInterruptHandler C900  
                  ADCC_StartConversion@channel 0100                              ?_OLED_WriteString 0221  
                              _clearUARTErrors C848                                     __doprnt@ap 0258  
                                   __doprnt@cp 0273                   I2C2_MasterWriteTRBBuild@ptrb 0200  
                                   __doprnt@pb 0254                        __end_of_freqMeasConvert A776  
                              __div_to_l_@exp1 020D                                __div_to_l_@cntr 020C  
                                      ??_scale 022B                      __end_of_SYSTEM_Initialize BE26  
                              __div_to_l_@quot 0208                        __end_of_TMR3_WriteTimer C470  
                                      ??_putch 0201                             i2___lldiv@quotient 0009  
                                 ??_OLED_Clear 0221                             ??_OLED_WriteString 0223  
                                _eusart2RxHead 00DC                                  _eusart2TxHead 0193  
                                   __pbssBANK0 00B9                                     __pbssBANK1 0161  
                                   __pbssBANK2 02BE                                     __pbssBANK3 0300  
                                   __pbssBANK4 0400                                  _eusart2RxTail 0198  
                                _eusart2TxTail 0191                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0005                               ?_TMR3_Initialize 0001  
             __size_of_printErrorHandlerStatus 01F4                getHoursFromOnTime@input_seconds 020D  
                                   ??_INT1_ISR 0001                                     ??_INT2_ISR 0001  
                               i1___xxtofl@arg 010A                       _floatToEngineeringFormat 639C  
                               i1___xxtofl@exp 0109                                 i1___xxtofl@val 0100  
                                __div_to_l_@f1 0200                                  __div_to_l_@f2 0204  
                            _freq_meas_results 0168                          EUSART2_Read@readValue 0200  
                        ??_ADCC_StopConversion 0001           __size_of_getNXQChargeStateStringCaps 005C  
                             ??_FVR_Initialize 0200                      getMinutesFromOnTime@hours 0218  
                                _error_handler 00B9                      getMinutesFromOnTime@years 0216  
                                      ?___flge 0200                                        ?___fleq 0200  
             __end_of_TMR0_SetInterruptHandler C7AE                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_4746 04C2                     ??_OLED_UpdateFromRAMBuffer 0223  
             __end_of_TMR3_SetInterruptHandler C784                                        ?___wmul 0200  
                             ?_TMR1_StartTimer 0001                                     ??_TMR0_ISR 005F  
                                   ??_TMR1_ISR 0003                                __CFG_PPS1WAY$ON 000000  
                                   ??_TMR2_ISR 0101                                     ??_TMR3_ISR 0102  
                      __end_of_ADCC_Initialize B52E                    __size_of_OLED_updateHandler 1246  
                                      _CCP2CAP 000FA9                                        _CCP2CON 000FA8  
               ?_ADCC_HasAccumulatorOverflowed 0001                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                        _CCP2PPS 000EB0  
                                      ?_fround 0227                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler C810  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler C802  
           OLED_UpdateFromRAMBuffer@char_index 0223                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                           _I2C2_BusCollisionISR C860  
                                      ?_printf 02A9                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue C6CE              getCauseOfResetStringSmall@strings 02ED  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 0009  
                           __end_of_OLED_Clear BE64                                     ??i2___fleq 0009  
                                      ?_strcat 0200                                        ?_strcmp 0200  
                                      ?_strcpy 0203                                        ?_strlen 0200  
                               _FLASH_ReadByte C5BA                        __size_of_TMR1_StopTimer 0004  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord BCE6  
                        _heartbeatTimerHandler 96BE                     ??_INT1_SetInterruptHandler 0203  
                                      i1l13315 742A                                        u2511_41 9F66  
                                      i1l13351 7496                                        i1l13343 7476  
                                      i1l13319 742E                                        i1l13417 7586  
                                      i1l13409 7564                                        i1l21601 8E54  
                                      i1l13419 758A                                        i1l13427 759C  
                                      i1l13339 7472                                        i1l13523 850E  
                                      i1l21531 8D2E                                        i1l21523 8D14  
                                      i1l13445 7636                                        i1l13461 7656  
                                      i1l13437 7602                                        i1l13381 74D2  
                                      i1l13605 8688                                        i1l21621 8E98  
                                      i1l21605 8E5E                                        i1l13455 764C  
                                      i1l13543 854E                                        i1l13527 8512  
                                      i1l21551 8D9C                                        i1l21519 8D00  
                                      i1l13481 76BE                                        i1l13393 752C  
                                      i1l13641 8762                                        i1l13633 8754  
                                      i1l13625 8706                                        i1l13561 859C  
                                      i1l21617 8E8A                                        i1l21537 8D52  
                                      i1l13395 7530                                        i1l13555 8586  
                                      i1l13547 8552                                        i1l13731 6C8A  
                                      i1l13803 9B96                                        i1l21619 8E90  
                                      i1l21627 8EA4                                        u2513_41 9F92  
                                      i1l13493 76EC                                        i1l13629 872A  
                                      i1l13661 6A76                                        i1l13821 9BE2  
                                      i1l13805 9BA2                                        i1l15165 BD6C  
                                      i1l13495 76EE                                        i1l13639 8760  
                                      i1l13663 6A7A                                        i1l15175 BD98  
                                      i1l13489 76E4                                        i1l13593 8652  
                                      i1l13569 85B4                                        i1l13761 6D44  
                                      i1l13737 6CA8                                        i1l13681 6ABA  
                                      i1l13665 6A8A                                        i1l20961 BCE0  
                                      i1l15281 C4E6                                        i1l13587 862C  
                                      i1l13579 8604                                        i1l21579 8DFA  
                                      i1l13773 6D86                                        i1l13757 6D26  
                                      i1l21589 8E1E                                        i1l13599 866A  
                                      i1l13679 6AB6                                        i1l13791 9B20  
                                      i1l13689 6AE8                                        i1l13793 9B26  
                                      i1l13785 9B02                                        i1l20969 C602  
                                      i1l13795 9B32                                        i1l13797 9B58  
                                      i1l12989 C504                                        i2l20201 179C  
                                      i2l20203 17AE                                        i2l20211 17C2  
                                      i2l12211 C5B0                                        _INT1PPS 000EA2  
                                      i2l20205 17B4                                        i2l21111 44DE  
                                      i2l20303 1BC0                                        i2l20207 17BA  
                                      i2l21121 4578                                        i2l20233 18F6  
                                      i2l12225 C594                                        i2l21201 971C  
                                      i2l20403 2030                                        i2l20323 1CB0  
                                      i2l20315 1C52                                        i2l20243 1982  
                                      i2l20307 1BC6                                        i2l20219 1830  
                                      _INT2PPS 000EA3                                        i2l20413 205A  
                                      i2l20309 1C3C                                        i2l20245 1986  
                                      i2l20237 1948                                        i2l14021 C574  
                                      i2l21135 46A6                                        i2l21143 473C  
                                      i2l21119 4574                                        i2l20511 2498  
                                      i2l20503 2468                                        i2l20431 2116  
                                      i2l20351 1DE6                                        i2l20271 1A3E  
                                      i2l20255 19C6                                        i2l20247 198A  
                                      i2l20239 1974                                        i2l20191 1728  
                                      i2l21215 97BA                                        i2l21207 9762  
                                      i2l21145 4740                                        i2l21161 48D6  
                                      i2l20505 2470                                        i2l20441 218C  
                                      i2l20433 2126                                        i2l20273 1A48  
                                      i2l20281 1AAE                                        i2l20257 19D0  
                                      i2l20249 198E                                        i2l21209 9774  
                                      i2l21155 489E                                        i2l21075 408E  
                                      i2l20523 250C                                        i2l20419 2094  
                                      i2l20443 2194                                        i2l20363 1E9E  
                                      i2l20355 1E32                                        i2l20347 1DB8  
                                      i2l20339 1D3A                                        i2l20283 1AC2  
                                      i2l20267 1A28                                        i2l20259 19D6  
                                      i2l21165 48E6                                        i2l21093 42B2  
                                      i2l20613 290C                                        i2l20541 26C0  
                                      i2l20453 220C                                        i2l20445 21A6  
                                      i2l20437 2162                                        i2l20429 20FA  
                                      i2l20381 1FAC                                        i2l20277 1A84  
                                      i2l20197 176E                                        i2l21079 40DC  
                                      i2l21159 48A4                                        i2l20703 2BF0  
                                      i2l20631 2978                                        i2l20623 294E  
                                      i2l20607 28D6                                        i2l20551 272E  
                                      i2l20535 2634                                        i2l20527 256E  
                                      i2l20519 24E2                                        i2l20463 2248  
                                      i2l20455 2214                                        i2l20367 1ECC  
                                      i2l20295 1B76                                        i2l21169 48F6  
                                      i2l21097 43B0                                        i2l21089 41D8  
                                      i2l20713 2C56                                        i2l20617 292C  
                                      i2l20609 28EC                                        i2l20561 27B4  
                                      i2l20545 26FC                                        i2l20537 2660  
                                      i2l20449 21E2                                        i2l20377 1F34  
                                      i2l20553 2738                                        i2l20297 1B8A  
                                      i2l20289 1B26                                        i2l21179 49F0  
                                      i2l20731 2DBA                                        i2l20635 299C  
                                      i2l20571 2838                                        i2l20539 26B4  
                                      i2l20491 23CA                                        i2l20483 2304  
                                      i2l20387 1FB0                                        i2l20299 1BAE  
                                      i2l21451 AB24                                        i2l20733 2DD6  
                                      i2l20725 2D68                                        i2l20717 2C74  
                                      i2l20653 2A08                                        i2l20637 29A4  
                                      i2l20629 2970                                        i2l20549 2726  
                                      i2l20469 2282                                        i2l20493 23F6  
                                      i2l20719 2CF4                                        i2l20727 2D7E  
                                      i2l20735 2DE4                                        i2l20663 2A6E  
                                      i2l20647 29CE                                        i2l20591 2894  
                                      i2l20583 2856                                        i2l20559 2782  
                                      i2l20495 2402                                        i2l20479 22E8  
                                      i2l20399 2016                                        i2l21199 970A  
                                      i2l20673 2ADE                                        i2l20665 2A8A  
                                      i2l20577 2852                                        i2l20569 2804  
                                      i2l21481 ABB0                                        i2l20667 2A98  
                                      i2l20499 243E                                        i2l21467 AB68  
                                      i2l21459 AB42                                        i2l20685 2B56  
                                      i2l20677 2B08                                        i2l20597 2898  
                                      i2l20679 2B12                                        i2l20697 2BB6  
                                      i2l20689 2B80                                        i2l14803 87D6  
                                      i2l14901 89EA                                        i2l14821 8824  
                                      i2l14815 880E                                        i2l14807 87DA  
                                      i2l15289 C65C                                        i2l19011 77E0  
                                      i2l14853 88DA                                        i2l14829 883C  
                                      i2l14847 88B4                                        i2l14839 888C  
                                      i2l14783 8796                                        i2l19111 79CC  
                                      i2l19023 783A                                        i2l14865 8910  
                                      i2l19025 783E                                        i2l14859 88F2  
                                      i2l14787 879A                                        i2l19123 79FA  
                                      i2l15691 BC0E                                        i2l14893 89DC  
                                      i2l14885 898E                                        i2l19125 79FC  
                                      i2l19223 6FFA                                        i2l19151 6DDC  
                                      i2l19119 79F2                                        i2l19047 7894  
                                      i2l19039 7872                                        i2l14889 89B2  
                                      i2l19217 6FDC                                        i2l19049 7898  
                                      i2l19057 78AA                                        i2l14899 89E8  
                                      i2l19243 7078                                        i2l19147 6DC8  
                                      i2l19075 7944                                        i2l19091 7964  
                                      i2l19067 7910                                        i2l19165 6E08  
                                      i2l19149 6DCC                                        i2l19085 795A  
                                      i2l19247 7096                                        i2l19175 6E3A  
                                      i2l19167 6E0C                                        i2l19259 70D8  
                                      i2l18811 B7E8                                        i2l19603 5BB4  
                                      i2l18901 B85C                                        i2l18813 B7EE  
                                      i2l18903 B864                                        i2l18823 B0EE  
                 ?_terminalTextAttributesReset 0001                                        i2l19721 A610  
                                      i2l19713 AFCC                                        i2l19705 AF7A  
                                      i2l19625 B180                                        i2l18913 B884  
                                      i2l18921 BD36                                        i2l19609 5C60  
                                      i2l19627 B18C                                        i2l18923 BD3E  
                                      i2l19571 8202                                        i2l18835 B114  
                                      i2l18851 B146                                        i2l19725 A644  
                                      i2l19709 AFAE                                        i2l19637 B1C0  
                                      i2l19565 811A                                        i2l18837 B11C  
                                      i2l18829 B0FE                                        i2l19743 C1D6  
                                      i2l19735 A6A8                                        i2l19911 9D22  
                                      i2l19647 A25C                                        i2l18855 B154  
                                      i2l18847 B13C                                        i2l18871 B2E4  
                                      i2l19591 5A58                                        i2l19729 A65A  
                                      i2l18945 7738                                        i2l19753 A914  
                                      i2l19833 A018                                        i2l18929 BD56  
                                      i2l19585 59AC                                        i2l19851 B47A  
                                      i2l19691 A306                                        i2l19675 A2DA  
                                      i2l19667 A2AA                                        i2l19843 A030  
                                      i2l19923 C526                                        i2l18891 B32A  
                                      i2l18883 B312                                        i2l18875 B2F2  
                                      i2l18867 B2D8                                        i2l19595 5A88  
                                      i2l18981 77A4                                        i2l18973 7784  
                                      i2l18949 773C                                        i2l19781 A982  
                                      i2l19773 A96E                                        i2l19853 B486  
                                      i2l19845 A03C                                        i2l19837 A028  
                                      i2l18877 B2FA                                        i2l19687 A2F6  
                                      i2l18799 B7A6                                        i2l18887 B31C  
                                      i2l18969 7780                                        i2l19881 9C60  
                                      i2l19769 A95E                                        i2l19697 A30E  
                                      i2l19883 9C66                                        i2l19875 9C42  
                                      i2l19787 A99E                                        i2l19779 A976  
                                      i2l19859 B4AE                                        i2l19699 A31A  
                                      i2l19893 9CD6                                        i2l19885 9C72  
                                      i2l19797 9F82                                        i2l19895 9CE2  
                                      i2l19887 9C98                                      ?___xxtofl 023E  
            I2C2_ISR@i2c_10bit_address_restart 00D8                                        _SP2BRGH 000E9C  
                                   ??i2_fround 0049                                        _SP2BRGL 000E9B  
                                      _OLED_YX BC5E                    __end_of_leftCapTouchHandler C692  
                                      _OSCCON1 000ED8                                        _OSCCON3 000EDA  
                       I2C2_MasterRead@address 020C                    __end_of_EUSART2_Receive_ISR ABB8  
           __end_of_IOCBF2_SetInterruptHandler C7CA                     _IOCBF2_SetInterruptHandler C7BC  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                      _I2C2_Stop BCA2  
                _live_measurement_request_flag 02D9                                     ??i2_printf 005E  
                                      _NVMADRH 000F7F                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                                      _SSP2ADD 000E93                  __size_of_rightCapTouchHandler 0016  
                     getMinutesFromOnTime@days 0217                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      _SSP2BUF 000E92                                   ??_TMR2_Start 0001  
                      __size_of_TMR2_StopTimer 0006                              ?_QIIdleIOCHandler 0001  
             __size_of_getNXQChargeStateString 005C                               ?_TMR2_StartTimer 0001  
                getStringSecondsAsTime@minutes 03EA                  getStringSecondsAsTime@seconds 03E6  
                              _I2C2_MasterRead B9D8                               ?_TMR1_WriteTimer 0200  
                      __end_of_TMR5_WriteTimer C450                                _I2C2_Initialize BFC8  
                           ??_QIIdleIOCHandler 0003                         __size_ofi1_TMR3_Reload 000E  
                                      i2_scale 5878                               ?_TMR5_Initialize 0001  
                       I2C2_MasterRead@trBlock 0199                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch C8A0                              ?i1_TMR3_StopTimer 0001  
                      __size_of_TMR3_StopTimer 0004                               i2_TMR1_StopTimer C8DE  
                              ??_CCP2_CallBack 0156                                i2___fladd@signs 0060  
                       _getStringSecondsAsTime 5C90                                  ??_getI2CError 0200  
                           ??i1_TMR3_StopTimer 0100            getStringSecondsAsTime@input_seconds 029F  
                       ??_getSecondsFromOnTime 0211                                  ??_getADCError 0200  
                            __end_of__npowers_ E48F                                        __Hparam 0000  
                      ??_freqMeasStartCaptures 0200                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$6038 022B                                        __Lparam 0000  
                            __end_of_getUserID C032                          _ADCC_ClearAccumulator C8BE  
                   ??_TMR2_SetInterruptHandler 0203                       ??_terminalTextAttributes 02BA  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                              __size_of___fleq 008C                                        ___fladd 70EE  
                                      ___fldiv 8256                        getHoursFromOnTime@hours 0215  
                                      ___awdiv AFD0                                        ___flneg C15C  
                                      ___awmod B252                                 i2__doprnt$6425 0076  
                                      ___flmul 66F4                               ?_TMR3_StartTimer 0001  
                               i2__doprnt$4981 007B                                 i2__doprnt$4982 007D  
                               i2__doprnt$4983 007F                                 i2__doprnt$4984 0081  
                                      ___flsub BAB8                                 i2__doprnt$4985 0083  
                               i2__doprnt$4986 0085                                        ___fltol A83A  
                               i2__doprnt$4987 0087                                 i2__doprnt$4988 0089  
                                      ___lldiv B056                                __size_of___wmul 0028  
                      getHoursFromOnTime@years 0216                                        ___llmod B334  
                                      ___lwdiv B74C                                        ___lwmod BC1A  
                       __end_of_FLASH_ReadByte C5D4                                        __doprnt 0000  
                       ?_getCauseOfResetString 0200                             __end_of_TMR2_Start C8EE  
                        ?_I2C2_BusCollisionISR 0001                           __size_of_TMR1_Reload 000E  
                       __end_of_FLASH_ReadWord BD28                                        __pcinit A9B0  
                              __size_of_fround 02C2                                        __ramtop 0F00  
                         __end_of_OLED_Command B468                       _LM73TempSensorInitialize 8EEC  
                    I2C2_MasterTRBInsert@count 0205                           __size_of_TMR3_Reload 000E  
                                 ??i1___xxtofl 0104                                        __ptext0 7A18  
                                      __ptext1 A14A                                        __ptext2 49F6  
                                      __ptext3 C71A                                        __ptext4 B898  
                                      __ptext5 9350                                        __ptext6 4FAC  
                                      __ptext7 C72A                                        __ptext8 6036  
                                      __ptext9 B39C                      I2C2_MasterTRBInsert@pflag 0202  
                              __size_of_printf 003C                        __end_of_clearUARTErrors C854  
               ??_TMR1_DefaultInterruptHandler 0001                  ?_ADCC_SetADTIInterruptHandler 0200  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 005E  
                              __size_of_strcmp 0050                                  i2_fround$6422 004D  
                                i2_fround$6423 0049                                __size_of_strcpy 0048  
                              __size_of_strlen 002E                              __end_of_hexpowers E4AF  
                                    _T1CONbits 000FCF                         getCauseOfResetString@r 0202  
                                  ?__div_to_l_ 0200                                        _dpowers E7AF  
                        _OSCILLATOR_Initialize C622                         ??_EUSART2_Transmit_ISR 0001  
                                    _T2CONbits 000FBD                                   __size_of_abs 002A  
                                 i2fround@prec 0051                                        _isdigit C40E  
                               i2__doprnt@flag 00A1                                   ??i2___xxtofl 0009  
                                      _memmove AA66                                 i2__doprnt@eexp 008F  
                                   ??___xxtofl 0242                                      _T3CONbits 000FC9  
                               i2__doprnt@fval 0095                               ___awmod@dividend 0200  
                               i2__doprnt@prec 009F              __size_of_TMR1_SetInterruptHandler 000E  
                         __end_of_OLED_PutChar A83A                       ??_PIN_MANAGER_Initialize 0203  
                    ?_TMR1_SetInterruptHandler 0200                                      _T2HLTbits 000FBE  
                                    _IOCBFbits 000F12                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0200                                     ?_I2C2_Stop 0001  
                              _LM73_start_flag 02D8                                      _IOCBNbits 000F13  
                        _I2C2_FunctionComplete C5EE                  ??_terminalTextAttributesReset 02B8  
                                    _IOCBPbits 000F14           __size_of_ADC_acquisitionTimerHandler 001A  
                             ??_clearI2CErrors 0201                               ??_clearADCErrors 0201  
                   __size_of_SYSTEM_Initialize 003E                               ?_freqMeasConvert 0001  
                                      _sprintf BA70                                  __doprnt@width 0285  
                        i2EUSART2_Write@txData 0001                    __size_of_QIChargeIOCHandler 001C  
                               __pintcode_body A422                                        _strncpy B39C  
                         end_of_initialization AA5C                               ?_TMR3_WriteTimer 0200  
                                      ftoa@buf 03C0                         __size_ofi2_TMR1_Reload 000E  
                                    _T2RSTbits 000FC0                       _INT2_SetInterruptHandler C7CA  
               ??_INT2_DefaultInterruptHandler 0001                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                         __size_ofi2_TMR3_Reload 000E  
                                      int_func A422                                      i1u1520_20 7548  
                          i2___wmul@multiplier 0001                                      i1u1515_20 74F4  
                                    i1u1516_20 7504                                      i1u1541_20 76CA  
                                    i1u1533_20 765A                                      i1u1517_20 7506  
                                    i1u1535_20 766E                                      i1u1561_20 86B8  
                                    i1u1580_20 6CD8                                      i1u1565_20 8714  
                                    i1u1566_20 8738                                      i1u1575_20 6AD6  
                                    i1u1584_20 6D34                                      i1u1576_20 6C4C  
                     __size_of_CCP2_CaptureISR 001A                                      i1u1576_25 6C42  
                                    i1u1585_20 6D52                                      i1u1593_20 9BAC  
                                    i1u1881_28 C2F4                                 i2___xxtofl@arg 000F  
                                    _OLED_Init AD92                                 i2___xxtofl@exp 000E  
                                    i1u1896_28 C052                                      i2u2401_40 7856  
                               i2___xxtofl@val 0005                                      i2u2422_40 79D8  
                                    i2u2414_40 7968                                      i2u2416_40 797C  
                                    i2u2504_40 A902                                      i2u2512_40 9F70  
                                    i2u2600_40 1DF8                                      i2u1609_40 C874  
                                    i2u2433_40 6E28                                      i2u2505_40 A932  
                                    i2u2521_40 B48A                                      i2u2601_40 1E44  
                                    i2u1800_48 C3D8                                      i2u2505_45 A928  
                                    i2u2442_40 7086                                      i2u2434_40 6F9E  
                                    i2u2434_45 6F94                                      i2u2443_40 70A4  
                                    i2u1802_48 C3B4                                      i2u2372_40 B120  
                                    i2u2604_40 1E9E                                      i2u2509_40 A988  
                                    i2u2620_48 214C                                      i2u2438_40 702A  
                                    i2u2382_40 B868                                      i2u2519_40 A042  
                                    i2u2614_48 2072                                      i2u2607_40 1FEC  
                                    i2u1806_48 C276                                      i2u1806_49 C28A  
                                    i2u2624_40 2222                                      i2u2623_48 21CC  
                                    i2u2720_40 96FA                                      i2u2529_40 9CEC  
                                    i2u2385_40 BD42                                      i2u2632_48 22D2  
                                    i2u1808_48 C24C                                      i2u1808_49 C260  
                                    i2u2378_40 B2FE                                      i2u2570_40 1878  
                                    i2u2722_40 972C                                      i2u2570_47 186E  
                                    i2u2642_48 24CC                                      i2u2634_48 23B2  
                                    i2u2618_48 20E4                                      i2u2571_40 18B4  
                                    i2u2571_47 18AA                                      i2u2396_40 7802  
                                    i2u2580_40 1A0A                                      i2u2572_40 18BC  
                                    i2u2724_40 9784                                      i2u2397_40 7812  
                                    i2u2709_40 41CE                                      i2u2644_48 261C  
                                    i2u2628_48 2260                                      i2u2573_40 18DE  
                                    i2u2573_47 18D4                                      i2u2398_40 7814  
                                    i2u2486_40 B190                                      i2u2494_40 A320  
                                    i2u2638_40 247E                                      i2u2637_48 2428  
                                    i2u2590_40 1B60                                      i2u2566_40 17E4  
                                    i2u2565_48 1758                                      i2u2750_40 AB58  
                                    i2u2718_40 96C6                                      i2u2718_46 96C8  
                                    i2u2590_47 1B56                                      i2u2566_47 17DA  
                                    i2u2670_48 29E6                                      i2u2639_40 248E  
                                    i2u2575_40 192C                                      i2u2575_47 1922  
                                    i2u1792_40 8940                                      i2u2488_40 A24A  
                                    i2u2647_48 26E6                                      i2u2592_40 1BF6  
                                    i2u2576_40 196A                                      i2u2568_40 181E  
                                    i2u2592_47 1BEC                                      i2u2576_47 1960  
                                    i2u2568_47 1814                                      i2u2497_40 AFC8  
                                    i2u2682_40 2B90                                      i2u2681_48 2B40  
                                    i2u2585_48 1A6E                                      i2u1873_48 C086  
                              ___lldiv@divisor 0204                                      i2u2690_48 2C40  
                                    i2u2674_48 2A58                                      i2u2579_40 1A04  
                                    i2u2754_48 C31C                                      i2u2579_47 19FA  
                                    i2u1796_40 899C                             __end_ofi1___xxtofl 9BF4  
                                    i2u1797_40 89C0                                      i2u2756_48 C344  
                                    i2u2693_40 2DF6                                      i2u2692_48 2DA4  
                                    i2u2589_40 1B1C                                      i2u2588_48 1AE8  
                                    i2u2588_49 1B1E                                      i2u2589_47 1B12  
                                    i2u2694_40 2E26                                      i2u2677_48 2AC8  
                                    i2u2694_47 2E1C                                      i2u2695_40 2E32  
                                    i2u2686_48 2BCE                                      i2u2679_40 2B1A  
                                    i2u2890_48 A4B6                                      i2u2883_48 A482  
                              ___lldiv@counter 020C                             _EUSART2_Initialize B1E0  
                  getDeviceIDString@inputDevID 020D                                i2_EUSART2_Write B7A0  
                                ??_getDeviceID 020D                          I2C2_MasterWrite@pdata 0209  
                           _p_i2c2_trb_current 00D3                          I2C2_MasterWrite@pflag 020E  
                                      printf@f 02A9                             __end_ofi2___xxtofl 9D34  
                                      postdec1 000FE5                                        postdec2 000FDD  
                       I2C2_ISR@i2c_bytes_left 00D9                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 003E  
              ADC_PostProcessingHandler@i_3557 007A                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0200                                 __tdiv_to_l_@f2 0204  
                        _terminalSetCursorHome C74A                            __end_of_getI2CError C2B8  
                              ??i2__tdiv_to_l_ 0009                  __size_of_I2C2_MasterTRBInsert 00A2  
                                      strcmp@r 0206                    __end_of_QIErrorTimerHandler C666  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0200  
                          ?_EUSART2_Initialize 0001                                  i1_TMR3_Reload C810  
                                ??_LM73Convert 024C                            __end_of_getADCError C650  
                                      strlen@s 0200                   terminal_ringBufferPull@index 04C4  
                                ??__tdiv_to_l_ 0208                                ?_FLASH_ReadWord 0204  
                     _TMR0_SetInterruptHandler C7A0                         ?_heartbeatTimerHandler 0001  
                   CCP2_CallBack@capturedValue 0154                          _INT1_InterruptHandler 0186  
                                    _PORTBbits 000F8E                                      _TMR2_Stop C8DA  
                     _TMR3_SetInterruptHandler C776                             LM73Convert@QI_Conv 024F  
                       getDaysFromOnTime@years 0216                              __size_of_I2C2_ISR 0276  
                   __end_of_getYearsFromOnTime C12C                       ?_terminal_ringBufferPull 0001  
                      __end_of_I2C2_MasterRead BA28                                    ___fladd@grs 0243  
                      _IOCBF2_InterruptHandler 017A                        __end_of_I2C2_Initialize BFFE  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 0246  
                                    i1___fladd 73FC                                      i1___fldiv 84E0  
                             _next_adc_channel 00FC                                      i1___flmul 6A48  
                                  ___fldiv@grs 0213                                    ___fldiv@rem 020C  
                              i2___fltol@sign1 0056                   ??_IOCBF3_SetInterruptHandler 0203  
                                    i2___fladd 770A                                      i2___fldiv 876A  
                                    i2___awdiv B0DA                                      i2___flneg C1BA  
                                    i2___awmod B2C4                                      i2___flmul 6D9C  
                                    i2___flsub BB00                                      i2___fltol A8F6  
                             __CFG_FEXTOSC$OFF 000000                              i2___lwdiv@divisor 0008  
                                    i2___lldiv B15E                                      i2___llmod B468  
                                    i2___lwdiv B846                                      i2___lwmod BD28  
                            i2___lwdiv@counter 000A                               ?_TMR5_WriteTimer 0200  
                         ??_EUSART2_Initialize 0203                        _printErrorHandlerStatus 9350  
                                    i2__doprnt 1724                    getMinutesFromOnTime@minutes 0215  
                      TMR5_WriteTimer@timerVal 0200                    getSecondsFromOnTime@minutes 0219  
                  getSecondsFromOnTime@seconds 0215                         __size_of_ringBufferLUT 05B6  
                            OLED_WriteString@s 0221                                    ___flmul@grs 021C  
                                  _CCP2CONbits 000FA8                                   _EUSART2_Read BDAA  
                           i2___llmod@dividend 000E                                     ?_OLED_Init 0001  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit C510           __size_of_terminalTextAttributesReset 0010  
                          __size_of__div_to_l_ 00F6                              __size_of_INT1_ISR 000A  
                           _adc_result_scaling 00C1                              __size_of_INT2_ISR 000A  
       terminalTextAttributes@foreground_color 03EB                __size_of_terminalTextAttributes 0366  
                      ?_LM73AcquisitionHandler 0001                     ??_printCurrentMeasurements 02BA  
                     __size_of_CCP2_Initialize 0022                   __end_of_INTERRUPT_Initialize C4B0  
         __end_of_TMR2_DefaultInterruptHandler C8FC          __size_of_TMR2_DefaultInterruptHandler 0002  
                 _TMR2_DefaultInterruptHandler C8FA                         ??_I2C2_BusCollisionISR 0100  
               ??_ADCC_DefaultInterruptHandler 0001                                 __end_of___flge A5DC  
                               __end_of___fleq AF46                                 ?i1_TMR3_Reload 0001  
                                i2_TMR1_Reload C82C                      i2TMR1_WriteTimer@timerVal 0001  
                   ??_I2C2_MasterWriteTRBBuild 0207                                 __end_of___wmul C2E0  
           __size_of_ADC_PostProcessingHandler 0974                                  i2_TMR3_Reload C83A  
                            __size_of_TMR0_ISR 0028                              __size_of_TMR1_ISR 0034  
                            __size_of_TMR2_ISR 0028                     ?_ADC_PostProcessingHandler 0001  
                            __size_of_TMR3_ISR 0034                                 _TMR1_StopTimer C8D2  
          __size_of_IOCBF3_SetInterruptHandler 000E                                     ?_TMR2_Stop 0001  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07E8  
                          __end_of_getDeviceID C4D0                                 __end_of_fround 7FA8  
            __size_of_ADCC_GetConversionResult 0014                      __size_of_I2C2_MasterWrite 0050  
                             ?_clearUARTErrors 0001                      ?_ADCC_GetConversionResult 0001  
                     __size_of_updateErrorLEDs 0046                               i2___wmul@product 0005  
                               __end_of_printf BEA0                                    _adc_results 00DD  
                           _getMajorRevisionID BEDC                                 __end_of_strcat B58C  
                               __end_of_strcmp B8E8                                 __end_of_strcpy BA70  
                               __end_of_strlen C1BA                         ?_I2C2_FunctionComplete 0001  
                            __size_ofi2___flge 00D0                            start_initialization A9B0  
                            __size_ofi2___fleq 008A                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                            __end_of_LM73Convert 8C76  
                                  ??_I2C2_Stop 0100                       __size_of_TMR0_Initialize 002A  
              __size_of_PIN_MANAGER_Initialize 00A0                            __end_of__tdiv_to_l_ 9F56  
                      _getNXQChargeStateString B58C                                    __end_of_abs C23C  
                        __end_of_INT1_CallBack C3EC                     ??_floatToEngineeringFormat 02A3  
                                   ?i1___fladd 010E                                 _TMR2_StopTimer C8B8  
                                   ?i1___fldiv 011E                                     ?i1___flmul 0137  
                                    i2printf@f 00A4        OLED_UpdateFromRAMBuffer@char_index_4304 0224  
      OLED_UpdateFromRAMBuffer@char_index_4305 0225        OLED_UpdateFromRAMBuffer@char_index_4306 0226  
                                   ?i2___fladd 0052  EUSART2_SetRxInterruptHandler@interruptHandler 0200  
EUSART2_SetTxInterruptHandler@interruptHandler 0200                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 0001                                     ?i2___awmod 0001  
                                   ?i2___flmul 002C                                     ?i2___flsub 0064  
                                   ?i2___fltol 004E                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
                          ?_getMajorRevisionID 0001                                    putch@txData 0201  
                                   ?i2___lwdiv 0006                          __end_of_INT2_CallBack C3C8  
                                   ?i2___lwmod 0001                              __size_ofi2_printf 003C  
                        __end_of_EUSART2_Write B74C                                 _device_on_time 00C5  
                                   ?i2__doprnt 006C                        __end_ofi2_EUSART2_Write B7F4  
                               _TMR3_StopTimer C8CE                                ___llmod@divisor 0211  
                            _LM73_temp_results 02DB                                ___llmod@counter 0215  
                             _nxq_charge_state 0195                I2C2_MasterWriteTRBBuild@address 0205  
                     __size_of_PIN_MANAGER_IOC 0014                                     ?i2_isdigit 0001  
                         I2C2_MasterRead@pdata 0209                       ?_I2C2_MasterReadTRBBuild 0200  
                         I2C2_MasterRead@pflag 020E                     __end_of_getHoursFromOnTime A422  
                                  _getI2CError C290                               __CFG_LPBOREN$OFF 000000  
                                  _getADCError C63A                      __size_of_OLED_WriteString 0058  
               __end_of_LM73AcquisitionHandler 9350                       __size_of_TMR1_Initialize 0050  
               _ADC_PostProcessingHandler$6420 0070                 _ADC_PostProcessingHandler$6421 0074  
               _ADC_PostProcessingHandler$6417 007B                 _ADC_PostProcessingHandler$6418 007F  
               _ADC_PostProcessingHandler$6419 006C                                       ??___flge 0208  
                        __size_of_OLED_Command 0066                                       ??___fleq 0208  
                             ??_PMD_Initialize 0200                         ?_terminalSetCursorHome 0001  
                                     ??___wmul 0204                              ??_CCP2_CaptureISR 0156  
                I2C2_MasterWriteTRBBuild@pdata 0202                                 ?i2_TMR1_Reload 0001  
                         I2C2_ISR@pi2c_buf_ptr 00CF                                    _CCPTMRSbits 000FAE  
                         ??_getMajorRevisionID 020B                                     OLED_YX@Row 0218  
                                  __doprnt@idx 0262                                    __doprnt@len 0275  
                                  __doprnt@val 0281                         __end_of_TMR1_StopTimer C8D6  
                                  __pdataBANK0 00FB                                    __pdataBANK1 01A9  
                                  __pdataBANK2 02ED                                 ?i2_TMR3_Reload 0001  
                                     ??_fround 022B                                  _ringBufferLUT 49F6  
                   __end_of_EXT_INT_Initialize BFC8                  ?_TMR2_DefaultInterruptHandler 0001  
                        __size_of_OLED_PutChar 00C4                                       ??_printf 02B1  
            getCauseOfReset@return_reset_cause 0200                                 _TMR5_StopTimer C8CA  
                     getSecondsFromOnTime@days 0217                                       ??_strcat 0204  
                                     ??_strcmp 0204                                       ??_strcpy 0207  
                                     ??_strlen 0202              __end_of_ADC_PostProcessingHandler 49F6  
                   __end_of_getMinorRevisionID C37E                                      ___fladd@a 0238  
                                    ___fladd@b 0234                       __end_ofi2_TMR1_StopTimer C8E2  
                                   fround@prec 0233                                 _eusart2RxCount 0197  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0204  
                                    ___fldiv@b 0200                                    __pbssBIGRAM 04C8  
          __end_of_getNXQChargeStateStringCaps B644                    _getNXQChargeStateStringCaps B5E8  
                       __end_of_TMR2_StopTimer C8BE                               ?_I2C2_MasterRead 0209  
                        _qi_isns_average_index 00D5                                      ___flmul@a 0212  
                                    ___flmul@b 020E                               ?_I2C2_Initialize 0001  
                                    ___flsub@a 0250                                      ___flsub@b 024C  
                                     ?_OLED_YX 0214                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0200  
                                __pcstackBANK3 03D1                                  __pcstackBANK4 04C0  
                 _live_measurement_enable_flag 00D7                         _terminalTextAttributes 6036  
                     __size_of_TMR2_Initialize 0032                  __size_of_getMinutesFromOnTime 0150  
                  ?_IOCBF2_SetInterruptHandler 0200                              i2___lwmod@divisor 0003  
                    ??_printErrorHandlerStatus 02BA                              __size_of___xxtofl 0144  
                            i2___lwmod@counter 0005                                   _isdigit$5455 0201  
           __size_of_QIIdleChargedTimerHandler 0020                            EUSART2_Write@txData 0200  
                   ?_QIIdleChargedTimerHandler 0001                                  _i2c2_tr_queue 01A3  
                       __end_of_TMR3_StopTimer C8D2                                i1___xxtofl@sign 0108  
                         _freq_meas_start_flag 02DA                  ??_getNXQChargeStateStringCaps 0202  
                  __end_of_ADCC_StopConversion C8F2                        ?_getStringSecondsAsTime 029F  
                                     ?i2_scale 0045                ??_EUSART2_SetRxInterruptHandler 0203  
                 __size_of_terminalClearScreen 0010                                       ?i2_putch 0001  
                                    __doprnt@c 028B                                      __doprnt@f 0256  
                        _INT2_InterruptHandler 0183                                   _OLED_Command B402  
                            i1___fldiv@new_exp 012F                                    ??_OLED_Init 0214  
                        _TMR0_InterruptHandler 00C9                                      __pnvBANK2 02FF  
                  getMinorRevisionID@REVID_RAW 020B                        _IOCBF3_InterruptHandler 0177  
                   ??_LM73TempSensorInitialize 0210                               ___lwdiv@dividend 0205  
                       _PIN_MANAGER_Initialize AC5A                   __end_of_rightCapTouchHandler C67C  
             ??_IOCBF2_DefaultInterruptHandler 0001                ?_IOCBF2_DefaultInterruptHandler 0001  
                                 _OLED_PutChar A776                     __end_of_OLED_updateHandler 4082  
                     __size_of_TMR3_Initialize 0050                      __size_of_QIIdleIOCHandler 0014  
                      ??_getCauseOfResetString 0202                                ??i1_TMR3_Reload 0102  
               __size_of_freqMeasStartCaptures 000A                                      __pintcode 0008  
                __end_of_freqMeasStartCaptures C882                                    _getDeviceID C4B0  
             __end_of_TMR1_SetInterruptHandler C7A0                                  __pmediumconst E426  
                                     ?___fladd 0234                                       ?___fldiv 0200  
                                     ?___awdiv 0206                                      __ptext100 C212  
                                    __ptext101 8256                                      __ptext110 AA66  
                                    __ptext102 9D34                                       ?___flneg 0200  
                                    __ptext111 8EEC                                      __ptext103 C18C  
                                    __ptext200 9BF4                                      __ptext120 C882  
                                    __ptext112 9124                                      __ptext104 BC5E  
                                    __ptext201 BB00                                      __ptext121 B7F4  
                                    __ptext113 89F2                                      __ptext105 B69E  
                                    __ptext210 C8EE                                      __ptext202 770A  
                                    __ptext130 C5D4                                      __ptext114 996C  
                                    __ptext106 AD92                                      __ptext211 C86C  
                                    __ptext203 6D9C                                      __ptext131 C8FA  
                                    __ptext123 C032                                      __ptext115 66F4  
                                    __ptext107 B402                                      __ptext212 C6CE  
                                    __ptext204 A5DC                                      __ptext140 C860  
                                    __ptext132 C8B8                                      __ptext124 C4D0  
                                    __ptext116 B988                                      __ptext108 BE26  
                                    __ptext213 C8F2                                      __ptext205 876A  
                                    __ptext141 C608                                      __ptext133 C8DA  
                                    __ptext125 C8F8                                      __ptext117 BB8E  
                                    __ptext109 A776                                      __ptext214 C6E2  
                                    __ptext206 BF54                                      __ptext150 C650  
                                    __ptext142 BD6A                                      __ptext134 C81E  
                                    __ptext126 C8D6                                      __ptext118 B9D8  
                                    __ptext215 0000                                      __ptext207 C1BA  
                                    __ptext151 C8FC                                      __ptext143 A6AC  
                                    __ptext135 C8AA                                      __ptext127 C810  
                                    __ptext119 ABB8                                      __ptext208 C8C4  
                                    __ptext160 C82C                                      __ptext152 C8DE  
                                    __ptext144 9AB0                                      __ptext136 C8BE  
                                    __ptext128 C4F0                                      __ptext209 C8EA  
                                    __ptext161 C582                                      __ptext153 C308  
                                    __ptext145 6A48                                      __ptext137 8C76  
                                    __ptext129 C2E0                                      __ptext170 C3A4  
                                    __ptext162 C266                                      __ptext154 C8FE  
                                    __ptext146 84E0                                      __ptext138 BCA2  
                                    __ptext171 C904                                      __ptext163 C902  
                                    __ptext155 96BE                                      __ptext147 73FC  
                                    __ptext139 C5EE                                      __ptext180 1724  
                                    __ptext172 C666                                      __ptext164 C6BA  
                                    __ptext156 C6A6                                      __ptext181 5878  
                                    __ptext173 C896                                      __ptext165 C83A  
                                    __ptext157 C23C                                      __ptext149 C066  
                                    __ptext190 9F56                                      __ptext182 B2C4  
                                    __ptext174 C3C8                                      __ptext166 C59E  
                                    __ptext158 C900                                      __ptext191 A23E  
                                    __ptext183 B0DA                                      __ptext175 C906  
                                    __ptext167 C8E2                                      __ptext159 C566  
                                    __ptext192 C37E                                      __ptext184 C8A0  
                                    __ptext176 C67C                                      __ptext168 C8E6  
                                    __ptext193 B468                                      __ptext185 B7A0  
                                    __ptext177 BBD4                                      __ptext169 C88C  
                                    __ptext194 B15E                                      __ptext186 C510  
                                    __ptext178 AB14                                      __ptext195 A8F6  
                                    __ptext187 7FA8                                      __ptext179 BF18  
                                     ?___awmod 0200                                      __ptext196 AF46  
                                    __ptext188 BD28                                      __ptext197 C330  
                                    __ptext189 B846                                      __ptext198 C908  
                                    __ptext199 4082                                       ?___flmul 020E  
                                     ?___flsub 024C                                       ?___fltol 0230  
                                     ?___lldiv 0200                                       ?___llmod 020D  
                                    __npowers_ E45B                                       ?___lwdiv 0205  
                              _getCauseOfReset B644                                       ?___lwmod 0200  
                               ?_ringBufferLUT 02BA                                      _getUserID BFFE  
                              ?_TMR1_StopTimer 0001                         __end_of_TMR5_StopTimer C8CE  
            _EUSART2_TxDefaultInterruptHandler 0180                                       ?__doprnt 0254  
                       OLED_PutChar@data_array 0214                                    __pintcodelo 0018  
                                     _I2C2_ISR 8C76                      __size_ofi1_TMR3_StopTimer 0004  
                                  _LM73Convert 89F2                                    __tdiv_to_l_ 9E56  
                                  ??_TMR2_Stop 0100                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 0208                                       _BAUD2CON 000E9F  
                            ??_CCP2_Initialize 0200                      ??_getNXQChargeStateString 0202  
                   ??_INT2_SetInterruptHandler 0203                       __size_of_TMR1_StartTimer 0004  
                                     ?_isdigit 0001                    floatToEngineeringFormat@mag 02A3  
                                     ?_memmove 0200                    floatToEngineeringFormat@res 02A7  
                              ?_TMR2_StopTimer 0001                    getStringSecondsAsTime@hours 03E9  
                  getStringSecondsAsTime@years 03E7                               __CFG_WDTE$NSLEEP 000000  
           __end_of_IOCBF3_SetInterruptHandler C7BC                     _IOCBF3_SetInterruptHandler C7AE  
                                  ??i1___fladd 0116                         getHoursFromOnTime@days 0217  
                                  ??i1___fldiv 0126                                    ??i1___flmul 013F  
                                    _hexpowers E48F              __size_of_OLED_UpdateFromRAMBuffer 0122  
                    ?_OLED_UpdateFromRAMBuffer 0001                               ___lwdiv@quotient 020A  
                      _OLED_updateHandler$6035 03F3                                    ??i2___fladd 005A  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0005                                    ??i2___awmod 0005  
                                     ?_sprintf 028C                                    ??i2___flmul 0034  
                                  ??i2___flsub 005E                                    ??i2___fltol 0052  
                            ??_updateErrorLEDs 0200                                    ??i2___lldiv 0009  
                                     _T2CLKCON 000FBF                                 __size_of_scale 0434  
                                  ??i2___llmod 0016                 __end_of_getStringSecondsAsTime 6036  
                                     ?_strncpy 0200                                    ??i2___lwdiv 000A  
                                  ??i2___lwmod 0005                                 __size_of_putch 0014  
                         _INTERRUPT_Initialize C490                                ?_TMR3_StopTimer 0001  
                                  ??i2__doprnt 0072              __end_of_QIIdleChargedTimerHandler C4F0  
              __end_of_I2C2_MasterReadTRBBuild B846                              ??_TMR0_Initialize 0203  
                 __size_of_leftCapTouchHandler 0016                   __size_of_EUSART2_Receive_ISR 00A4  
                     _pos12_isns_average_index 00D6                                       _INT1_ISR C896  
                                     _INT2_ISR C88C                                 ___wmul@product 0204  
                             i2__doprnt@tmpval 0091                               ?i2_EUSART2_Write 0001  
                                     _LATBbits 000F84                                       _LATCbits 000F85  
            __size_of_INT1_SetInterruptHandler 000E                      ?_INT1_SetInterruptHandler 0200  
                                  strncpy@from 0202                                       _IPR0bits 000EBA  
                                     _IPR1bits 000EBB                                       _PIE0bits 000EC2  
                                     _IPR3bits 000EBD                                       _PIE1bits 000EC3  
                                     _IPR4bits 000EBE                                    strncpy@size 0204  
                                     _PIE3bits 000EC5                                       _IPR6bits 000EC0  
                                     _PIE4bits 000EC6                                       _PIE6bits 000EC8  
                                  ??i2_isdigit 0001                       __size_of_TMR2_StartTimer 0006  
                          __CFG_BORV$VBOR_2P45 000000                       __size_of_TMR1_WriteTimer 0020  
          __end_of_ADC_acquisitionTimerHandler C5EE                    _ADC_acquisitionTimerHandler C5D4  
                        __end_of_CCP2_CallBack BDAA                     ??_TMR0_SetInterruptHandler 0203  
                                     _PIR0bits 000ECA                                       _PIR1bits 000ECB  
                           __end_of__div_to_l_ A14A                               ??_FLASH_ReadByte 0204  
                                     _PIR3bits 000ECD                                       _PIR4bits 000ECE  
                              ??i2_TMR1_Reload 0003                     ??_TMR3_SetInterruptHandler 0203  
                                     _PIR6bits 000ED0                                       _PIR7bits 000ED1  
              __end_of_printErrorHandlerStatus 9544                               ??_FLASH_ReadWord 0208  
                     __size_of_TMR5_Initialize 003C                  __size_of_getSecondsFromOnTime 017A  
             __end_of_printCurrentMeasurements 5444                                  ??_TMR1_Reload 0202  
                            i2___fldiv@new_exp 0024                   OLED_updateHandler@dev_id_str 03D1  
                              ??i2_TMR3_Reload 0003                                       _SSP2CON1 000E96  
                                     _SSP2CON3 000E98                                       _TMR0_ISR C308  
                      ??_heartbeatTimerHandler 005E                                       _TMR1_ISR C066  
                                ??_TMR3_Reload 0202                                       _TMR2_ISR C2E0  
                                     _TMR3_ISR C032                          getDaysFromOnTime@days 0215  
                                     _SSP2STAT 000E95                              ??_PIN_MANAGER_IOC 0003  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 020B                        getYearsFromOnTime@years 0211  
                              ?_TMR5_StopTimer 0001                  I2C2_MasterTRBInsert@ptrb_list 0200  
                ??_ADC_acquisitionTimerHandler 0101                              ??_TMR1_Initialize 0203  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge A5DC  
                                   _ADCON3bits 000F5B                                       i2___fleq AF46  
                            ___wmul@multiplier 0200                               _I2C2_MasterWrite B988  
                                     i2___wmul C37E                        __size_of_FVR_Initialize 000C  
            getMinutesFromOnTime@input_seconds 020D                       __size_of_TMR3_StartTimer 0004  
               ??_TMR2_DefaultInterruptHandler 0100              __size_of_TMR2_SetInterruptHandler 000E  
                            i2___awdiv@divisor 0009                                       i2_fround 7FA8  
             __end_of_floatToEngineeringFormat 66F4                      ?_TMR2_SetInterruptHandler 0200  
                                   _I2C_STATUS 01A8                              i2___awdiv@counter 000B  
                   __end_of_QIChargeIOCHandler C582   ADC_PostProcessingHandler@current_adc_channel 0078  
                  __end_of_ADCC_GetFilterValue C6E2                  __size_of_EUSART2_Transmit_ISR 0046  
          __size_of_getCauseOfResetStringSmall 0030                                       i2_printf BF18  
                             __size_of_OLED_YX 0044                                      copy_data0 A9C4  
                                    copy_data1 A9E4                   __end_of_I2C2_MasterTRBInsert AC5A  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
          getStringSecondsAsTime@return_string 0384                        ??_ADCC_ClearAccumulator 0100  
                            i1_TMR3_WriteTimer C4F0                             _getYearsFromOnTime C0FC  
                            ??_TMR2_Initialize 0203               __size_of_terminal_ringBufferPull 00F4  
                             __size_ofi2_scale 0418                                       _OledFont E4AF  
                             __size_ofi2_putch 000A                __end_of_getNXQChargeStateString B5E8  
                           ?i1_TMR3_WriteTimer 0100                        __end_of_getCauseOfReset B69E  
                     __size_of_freqMeasConvert 00CA                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult C6F6  
                     freqMeasConvert@qi_period 0150          __end_of_EUSART2_SetRxInterruptHandler C802  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler C7F4  
                     __size_of_TMR3_WriteTimer 0020                         OLED_PutChar@input_base 021D  
                             _OLED_WriteString B69E                              i2_TMR1_WriteTimer C582  
                          ?_getYearsFromOnTime 020D                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                 I2C2_MasterWriteTRBBuild@length 0204  
                              ??_ringBufferLUT 02BC                             ?i2_TMR1_WriteTimer 0001  
                          ??i1_TMR3_WriteTimer 0102                        LM73Convert@Ambient_Conv 0253  
            getSecondsFromOnTime@input_seconds 020D                        ??_OSCILLATOR_Initialize 0200  
                                    memmove@d1 0200                                      memmove@s1 0202  
               getDaysFromOnTime@input_seconds 020D                               __size_of___fladd 030E  
                             __size_of___fldiv 028A                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0354                               __size_of___flsub 0048  
                             __size_of___fltol 00BC                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
                      ??_I2C2_FunctionComplete 0100                               __size_of__doprnt 1724  
                                  _fround$6036 022F                                    _fround$6037 022B  
                  ??_ADC_PostProcessingHandler 005E                              ??_TMR3_Initialize 0203  
                     _TMR1_SetInterruptHandler C792                          __end_ofi2__tdiv_to_l_ A054  
                                ?_getUARTError 0001                                _putch$intlevel0 C698  
                          __end_of_TMR1_Reload C776                            ??i2_TMR1_WriteTimer 0003  
          __end_of_terminalTextAttributesReset C73A                    _terminalTextAttributesReset C72A  
                        _TMR1_InterruptHandler 016E                            __end_of_TMR3_Reload C768  
                                     ___xxtofl 996C                                     _T0CON0bits 000FD5  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0202  
              ??_INTERRUPT_InterruptManagerLow 0158                               __size_of_isdigit 0022  
                         ??_getYearsFromOnTime 0211                   __size_of_QIErrorTimerHandler 0016  
                             __size_of_memmove 00AE                      getSecondsFromOnTime@hours 0218  
                              ___lwdiv@divisor 0207                      getSecondsFromOnTime@years 0216  
                              ___lwdiv@counter 0209                           _rightCapTouchHandler C666  
                                     __ptext10 5C90                                       __ptext11 B52E  
                                     __ptext20 C8B2                                       __ptext12 B58C  
                                     __ptext21 C290                                       __ptext13 BFFE  
                                   _T1GCONbits 000FD0                                       __ptext30 C8CE  
                                     __ptext22 C63A                                       __ptext14 ACFA  
                                     __ptext31 C75A                                       __ptext23 BDAA  
                                     __ptext15 C0CC                                       __ptext40 C09A  
                                     __ptext32 C450                                       __ptext24 C74A  
                                     __ptext16 C848                                       __ptext41 C784  
                                     __ptext33 C8D2                                       __ptext25 BE64  
                                     __ptext17 C52E                                       __ptext50 C622  
                                     __ptext42 B938                                       __ptext34 C768  
                                     __ptext26 B644                                       __ptext18 C73A  
                                     __ptext51 C490                                       __ptext43 C792  
                                     __ptext35 C470                                       __ptext27 C878  
                                     __ptext19 BB48                                       __ptext60 C3EC  
                                     __ptext52 BFC8                                       __ptext44 C1E8  
                                     __ptext36 BDE8                                       __ptext28 C430  
                                     __ptext61 B4CE                                       __ptext53 C854  
                                     __ptext45 C7A0                                       __ptext37 BEA0  
                                     __ptext29 C8CA                                       __ptext70 BEDC  
                                     __ptext62 C802                                       __ptext54 BF90  
                                     __ptext46 C54A                                       __ptext38 B8E8  
                                     __ptext71 A332                                       __ptext63 2E3C  
                                     __ptext55 C7CA                                       __ptext47 AC5A  
                                     __ptext39 C776                                       __ptext80 5444  
                                     __ptext72 C4B0                                       __ptext64 BA28  
                                     __ptext56 C7D8                                       __ptext48 C7AE  
                                     __ptext81 B252                                       __ptext73 BCE6  
                                     __ptext65 C0FC                                       __ptext57 B1E0  
                                     __ptext49 C7BC                                       __ptext90 A054  
                                     __ptext82 AFD0                                       __ptext74 C5BA  
                                     __ptext66 9544                                       __ptext58 C7E6  
                                     __ptext91 C2B8                                       __ptext83 C692  
                                     __ptext75 AE2A                                       __ptext67 B5E8  
                                     __ptext59 C7F4                                       __ptext92 B334  
                                     __ptext84 B6F6                                       __ptext76 C12C  
                                     __ptext68 981C                                       __ptext93 B056  
                                     __ptext85 C40E                                       __ptext77 639C  
                                     __ptext69 C358                                       __ptext94 A83A  
                                     __ptext86 7CE6                                       __ptext78 BA70  
                                     __ptext95 BAB8                                       __ptext87 BC1A  
                                     __ptext79 0000                                       __ptext96 70EE  
                                     __ptext88 B74C                                       __ptext97 C15C  
                                     __ptext89 9E56                                       __ptext98 A50A  
                                     __ptext99 AEBA                                       __powers_ E427  
                    __end_ofi1_TMR3_WriteTimer C510                                   _SSP2CON1bits 000E96  
                                 _SSP2CON2bits 000E97                            ringBufferLUT@userID 03FD  
                            ??_TMR1_StartTimer 0001                               __size_of_sprintf 0048  
                                   _IOCBF2_ISR C266                                     _IOCBF3_ISR C23C  
                                   _T3GCONbits 000FCA            floatToEngineeringFormat@input_value 029F  
                   getStringSecondsAsTime@days 03E8                     getStringSecondsAsTime@buff 03D1  
                      TMR3_WriteTimer@timerVal 0200                               __size_of_strncpy 0066  
                  __size_of_EUSART2_Initialize 0072                                     strcpy@from 0205  
                               i2_isdigit$5455 0002                                _CCP2_CaptureISR C608  
                                __size_of_fabs 003C                                  __size_of_main 02CE  
                                   _T5GCONbits 000FC4                   OLED_updateHandler@rev_id_str 03E2  
                                OLED_Clear@col 0223                      __end_ofi2_TMR1_WriteTimer C59E  
                         __end_ofi2__div_to_l_ A332                                  OLED_Clear@row 0221  
         __end_of_TMR0_DefaultInterruptHandler C900          __size_of_TMR0_DefaultInterruptHandler 0002  
                 _TMR0_DefaultInterruptHandler C8FE                                i2__doprnt@width 009D  
                                OLED_YX@Column 0214                           __CFG_WDTCWS$WDTCWS_7 000000  
                      __size_of_clearI2CErrors 001C                        ??_terminalSetCursorHome 02B8  
                                 ?_getI2CError 0001                        I2C2_MasterWrite@address 020C  
        terminalTextAttributes@input_attribute 02B9                                   ?_getADCError 0001  
                      __size_of_clearADCErrors 0010                       __size_of_TMR5_WriteTimer 0020  
                               OLED_PutChar@ch 0220                              i2_TMR3_WriteTimer C59E  
                             _QIIdleIOCHandler C6BA                                     _RC2STAbits 000E9D  
                    i1TMR3_WriteTimer@timerVal 0100                   __end_of_ADCC_StartConversion C82C  
                                     int$flags 005F                             ?i2_TMR3_WriteTimer 0001  
                                  ??_getUserID 020D                              ??_TMR2_StartTimer 0001  
                      I2C2_MasterWrite@trBlock 019E                              ??_TMR1_WriteTimer 0202  
                             i1_TMR3_StopTimer C8D6                                 ??_getUARTError 0200  
                               __doprnt@tmpval 0279           __end_of_TMR3_DefaultInterruptHandler C8FA  
        __size_of_TMR3_DefaultInterruptHandler 0002                   _TMR3_DefaultInterruptHandler C8F8  
                __size_of_I2C2_BusCollisionISR 000C                            _terminalClearScreen C71A  
         __end_of_INT1_DefaultInterruptHandler C908          __size_of_INT1_DefaultInterruptHandler 0002  
                 _INT1_DefaultInterruptHandler C906                              ??_TMR5_Initialize 0200  
                           _getHoursFromOnTime A332                        ?_terminalTextAttributes 02B8  
             __size_of_I2C2_MasterReadTRBBuild 0052                              i2___awmod@divisor 0003  
                          ??i2_TMR3_WriteTimer 0003                              i2___awmod@counter 0005  
                            ?i2_TMR1_StopTimer 0001                              _getDaysFromOnTime AE2A  
                                   _INTCONbits 000FF2                                    _NVMCON1bits 000F81  
                                   _FVRCONbits 000F31                          ?_rightCapTouchHandler 0001  
                           ??i2_TMR1_StopTimer 0001                             ?_getDaysFromOnTime 020D  
                                     isdigit@c 0202                         ??_INTERRUPT_Initialize 0200  
                          ?_getHoursFromOnTime 020D              __size_of_printCurrentMeasurements 0498  
                                     memmove@d 0208                                       memmove@n 0204  
                                     memmove@s 020A                                       scale@scl 022F  
                    ?_printCurrentMeasurements 0001                             _EXT_INT_Initialize BF90  
                     __size_of_clearUARTErrors 000C              __size_of_I2C2_MasterWriteTRBBuild 0046  
                  ??_QIIdleChargedTimerHandler 0102                      ?_I2C2_MasterWriteTRBBuild 0200  
         __end_of_ADCC_DefaultInterruptHandler C90A          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler C908                              ??_TMR3_StartTimer 0001  
                                     intlevel1 0000                                       intlevel2 0000  
                                   _OLED_Clear BE26                                      sprintf@ap 0298  
                                    sprintf@pb 029A                               __tdiv_to_l_@exp1 0210  
                                    sprintf@wh 028C                               __tdiv_to_l_@cntr 020F  
                                   _OLED_Frame 02D7                             _getMinorRevisionID C358  
           __end_of_getCauseOfResetStringSmall C15C                     _getCauseOfResetStringSmall C12C  
                             __tdiv_to_l_@quot 020B                                i2___xxtofl@sign 000D  
                    _ADC_PostProcessingHandler 4082                           ?_terminalClearScreen 0001  
                          ??_getDaysFromOnTime 0211                 floatToEngineeringFormat@result 03AC  
                             ___lwmod@dividend 0200                            I2C2_ISR@i2c_address 00F9  
                             ___lldiv@dividend 0200                        ?_PIN_MANAGER_Initialize 0001  
                            __CFG_CLKOUTEN$OFF 000000                            ?_EXT_INT_Initialize 0001  
                    __end_ofi2_TMR3_WriteTimer C5BA                           LM73Convert@POS5_Conv 0251  
                                  _reset_cause 02FF                               ?_getCauseOfReset 0001  
                             ??_TMR1_StopTimer 0200                   __end_of_getMinutesFromOnTime 996C  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 0206  
                                    strncpy@to 0200              __size_of_floatToEngineeringFormat 0358  
                ?_TMR0_DefaultInterruptHandler 0001                      ?_floatToEngineeringFormat 029F  
                              _CCP2_Initialize C3EC                           ??_getHoursFromOnTime 0211  
                                 ?_getDeviceID 020B                         I2C2_MasterWrite@length 020B  
                              _QI_current_edge 0196                                    _TMR1_Reload C768  
                                     printf@ap 02B1                                       printf@pb 02B3  
                       __size_of_INT1_CallBack 0024             terminalTextAttributes@print_string 03EC  
               __size_of_getCauseOfResetString 0030                                    _TMR3_Reload C75A  
                __end_of_getCauseOfResetString C0FC                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult C6E2                              ??_freqMeasConvert 0150  
               ?_EUSART2_SetRxInterruptHandler 0200               __end_of_OLED_UpdateFromRAMBuffer 9E56  
                         _I2C2_MasterTRBInsert ABB8                               ??_TMR2_StopTimer 0100  
                            ??_TMR3_WriteTimer 0202         terminalTextAttributes@background_color 02B8  
                       __size_of_INT2_CallBack 0024                                   ?_LM73Convert 0001  
               __end_of_terminalTextAttributes 639C                                   ?__tdiv_to_l_ 0200  
                          _leftCapTouchHandler C67C                         __size_of_EUSART2_Write 0056  
                          _EUSART2_Receive_ISR AB14                                _updateErrorLEDs BB48  
                    __end_of_getDaysFromOnTime AEBA         __end_of_INTERRUPT_InterruptManagerHigh A50A  
      __size_of_INTERRUPT_InterruptManagerHigh A502                 _INTERRUPT_InterruptManagerHigh 0008  
                  getMajorRevisionID@REVID_RAW 020E                                 _FVR_Initialize C854  
                         ??_EXT_INT_Initialize 0203                          CCP2_CaptureISR@module 0156  
                                     sprintf@f 028E                                       strcat@cp 0204  
                ?_TMR3_DefaultInterruptHandler 0001                                       strcat@to 0200  
                ?_INT1_DefaultInterruptHandler 0001                                       strcmp@s1 0200  
                                     strcmp@s2 0202                                     _SSP2DATPPS 000E90  
                            ringBufferLUT@line 02BA                               ___lldiv@quotient 0208  
                           _OLED_updateHandler 2E3C                                     _SSP2CLKPPS 000E8F  
                              ___lwmod@divisor 0202         __end_of_IOCBF2_DefaultInterruptHandler C904  
      __size_of_IOCBF2_DefaultInterruptHandler 0002                 _IOCBF2_DefaultInterruptHandler C902  
                              _TMR0_Initialize C1E8                                       strcpy@cp 0207  
                                     strlen@cp 0202                                       strcpy@to 0203  
                         ??_getMinorRevisionID 020B                                ___lwmod@counter 0204  
                             ??_TMR3_StopTimer 0200               __end_of_INT1_SetInterruptHandler C7E6  
                      __end_of_CCP2_CaptureISR C622                              _getDeviceIDString ACFA  
                  ?_IOCBF3_SetInterruptHandler 0200                                     _TMR2_Start C8EA  
                                   _TX2STAbits 000E9E                                  ___fladd@signs 0240  
                   __size_ofi1_TMR3_WriteTimer 0020                            ?_OLED_updateHandler 0001  
                           ?_getDeviceIDString 020D          __end_of_INTERRUPT_InterruptManagerLow 00A2  
       __size_of_INTERRUPT_InterruptManagerLow 008A                  _INTERRUPT_InterruptManagerLow 0018  
                                  ?_IOCBF2_ISR 0001                                    ?_IOCBF3_ISR 0001  
               ??_ADCC_SetADTIInterruptHandler 0203                 __end_of_PIN_MANAGER_Initialize ACFA  
                            ??_ADCC_Initialize 0203                          ??_terminalClearScreen 02B8  
                            i2__div_to_l_@exp1 000E                       __size_of_I2C2_MasterRead 0050  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull A14A  
                         ?_leftCapTouchHandler 0001                       __size_of_I2C2_Initialize 0036  
              ??_EUSART2_SetTxInterruptHandler 0203                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001                                   ___fladd@aexp 0241  
                                 ___fladd@bexp 0242                  ?_ADCC_DefaultInterruptHandler 0001  
                   ADC_PostProcessingHandler@i 0079                             __size_of_I2C2_Stop 0044  
                              _PIN_MANAGER_IOC C6A6                       __end_of_I2C2_MasterWrite B9D8  
                        _TMR2_InterruptHandler 0174                     __size_ofi2_TMR1_WriteTimer 001C  
                          ??_getDeviceIDString 020F                                _TMR1_Initialize B938  
            _EUSART2_RxDefaultInterruptHandler 017D                               ??_TMR5_StopTimer 0200  
                 __size_of_ADCC_StopConversion 0004  
